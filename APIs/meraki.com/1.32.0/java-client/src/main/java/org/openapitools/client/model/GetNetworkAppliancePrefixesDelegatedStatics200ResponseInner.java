/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.GetNetworkAppliancePrefixesDelegatedStatics200ResponseInnerOrigin;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner {
  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private GetNetworkAppliancePrefixesDelegatedStatics200ResponseInnerOrigin origin;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_STATIC_DELEGATED_PREFIX_ID = "staticDelegatedPrefixId";
  @SerializedName(SERIALIZED_NAME_STATIC_DELEGATED_PREFIX_ID)
  private String staticDelegatedPrefixId;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner() {
  }

  public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Prefix creation time.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Identifying description for the prefix.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner origin(GetNetworkAppliancePrefixesDelegatedStatics200ResponseInnerOrigin origin) {
    this.origin = origin;
    return this;
  }

  /**
   * Get origin
   * @return origin
   */
  @javax.annotation.Nullable
  public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInnerOrigin getOrigin() {
    return origin;
  }

  public void setOrigin(GetNetworkAppliancePrefixesDelegatedStatics200ResponseInnerOrigin origin) {
    this.origin = origin;
  }


  public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

  /**
   * IPv6 prefix/prefix length.
   * @return prefix
   */
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner staticDelegatedPrefixId(String staticDelegatedPrefixId) {
    this.staticDelegatedPrefixId = staticDelegatedPrefixId;
    return this;
  }

  /**
   * Static delegated prefix id.
   * @return staticDelegatedPrefixId
   */
  @javax.annotation.Nullable
  public String getStaticDelegatedPrefixId() {
    return staticDelegatedPrefixId;
  }

  public void setStaticDelegatedPrefixId(String staticDelegatedPrefixId) {
    this.staticDelegatedPrefixId = staticDelegatedPrefixId;
  }


  public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Prefix Updated time.
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner getNetworkAppliancePrefixesDelegatedStatics200ResponseInner = (GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner) o;
    return Objects.equals(this.createdAt, getNetworkAppliancePrefixesDelegatedStatics200ResponseInner.createdAt) &&
        Objects.equals(this.description, getNetworkAppliancePrefixesDelegatedStatics200ResponseInner.description) &&
        Objects.equals(this.origin, getNetworkAppliancePrefixesDelegatedStatics200ResponseInner.origin) &&
        Objects.equals(this.prefix, getNetworkAppliancePrefixesDelegatedStatics200ResponseInner.prefix) &&
        Objects.equals(this.staticDelegatedPrefixId, getNetworkAppliancePrefixesDelegatedStatics200ResponseInner.staticDelegatedPrefixId) &&
        Objects.equals(this.updatedAt, getNetworkAppliancePrefixesDelegatedStatics200ResponseInner.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, description, origin, prefix, staticDelegatedPrefixId, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    staticDelegatedPrefixId: ").append(toIndentedString(staticDelegatedPrefixId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createdAt");
    openapiFields.add("description");
    openapiFields.add("origin");
    openapiFields.add("prefix");
    openapiFields.add("staticDelegatedPrefixId");
    openapiFields.add("updatedAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner is not found in the empty JSON string", GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `origin`
      if (jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) {
        GetNetworkAppliancePrefixesDelegatedStatics200ResponseInnerOrigin.validateJsonElement(jsonObj.get("origin"));
      }
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
      if ((jsonObj.get("staticDelegatedPrefixId") != null && !jsonObj.get("staticDelegatedPrefixId").isJsonNull()) && !jsonObj.get("staticDelegatedPrefixId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `staticDelegatedPrefixId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("staticDelegatedPrefixId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner
   */
  public static GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner.class);
  }

  /**
   * Convert an instance of GetNetworkAppliancePrefixesDelegatedStatics200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

