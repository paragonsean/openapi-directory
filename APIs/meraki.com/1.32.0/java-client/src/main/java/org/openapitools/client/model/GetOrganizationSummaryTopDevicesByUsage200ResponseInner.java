/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork;
import org.openapitools.client.model.GetOrganizationSummaryTopDevicesByUsage200ResponseInnerClients;
import org.openapitools.client.model.GetOrganizationSummaryTopDevicesByUsage200ResponseInnerUsage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetOrganizationSummaryTopDevicesByUsage200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOrganizationSummaryTopDevicesByUsage200ResponseInner {
  public static final String SERIALIZED_NAME_CLIENTS = "clients";
  @SerializedName(SERIALIZED_NAME_CLIENTS)
  private GetOrganizationSummaryTopDevicesByUsage200ResponseInnerClients clients;

  public static final String SERIALIZED_NAME_MAC = "mac";
  @SerializedName(SERIALIZED_NAME_MAC)
  private String mac;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork network;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "productType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private String productType;

  public static final String SERIALIZED_NAME_SERIAL = "serial";
  @SerializedName(SERIALIZED_NAME_SERIAL)
  private String serial;

  public static final String SERIALIZED_NAME_USAGE = "usage";
  @SerializedName(SERIALIZED_NAME_USAGE)
  private GetOrganizationSummaryTopDevicesByUsage200ResponseInnerUsage usage;

  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner() {
  }

  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner clients(GetOrganizationSummaryTopDevicesByUsage200ResponseInnerClients clients) {
    this.clients = clients;
    return this;
  }

  /**
   * Get clients
   * @return clients
   */
  @javax.annotation.Nullable
  public GetOrganizationSummaryTopDevicesByUsage200ResponseInnerClients getClients() {
    return clients;
  }

  public void setClients(GetOrganizationSummaryTopDevicesByUsage200ResponseInnerClients clients) {
    this.clients = clients;
  }


  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner mac(String mac) {
    this.mac = mac;
    return this;
  }

  /**
   * Mac address of the device
   * @return mac
   */
  @javax.annotation.Nullable
  public String getMac() {
    return mac;
  }

  public void setMac(String mac) {
    this.mac = mac;
  }


  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner model(String model) {
    this.model = model;
    return this;
  }

  /**
   * Model of the device
   * @return model
   */
  @javax.annotation.Nullable
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }


  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the device
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner network(GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork network) {
    this.network = network;
    return this;
  }

  /**
   * Get network
   * @return network
   */
  @javax.annotation.Nullable
  public GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork getNetwork() {
    return network;
  }

  public void setNetwork(GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork network) {
    this.network = network;
  }


  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner productType(String productType) {
    this.productType = productType;
    return this;
  }

  /**
   * Product type of the device
   * @return productType
   */
  @javax.annotation.Nullable
  public String getProductType() {
    return productType;
  }

  public void setProductType(String productType) {
    this.productType = productType;
  }


  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner serial(String serial) {
    this.serial = serial;
    return this;
  }

  /**
   * Serial number of the device
   * @return serial
   */
  @javax.annotation.Nullable
  public String getSerial() {
    return serial;
  }

  public void setSerial(String serial) {
    this.serial = serial;
  }


  public GetOrganizationSummaryTopDevicesByUsage200ResponseInner usage(GetOrganizationSummaryTopDevicesByUsage200ResponseInnerUsage usage) {
    this.usage = usage;
    return this;
  }

  /**
   * Get usage
   * @return usage
   */
  @javax.annotation.Nullable
  public GetOrganizationSummaryTopDevicesByUsage200ResponseInnerUsage getUsage() {
    return usage;
  }

  public void setUsage(GetOrganizationSummaryTopDevicesByUsage200ResponseInnerUsage usage) {
    this.usage = usage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrganizationSummaryTopDevicesByUsage200ResponseInner getOrganizationSummaryTopDevicesByUsage200ResponseInner = (GetOrganizationSummaryTopDevicesByUsage200ResponseInner) o;
    return Objects.equals(this.clients, getOrganizationSummaryTopDevicesByUsage200ResponseInner.clients) &&
        Objects.equals(this.mac, getOrganizationSummaryTopDevicesByUsage200ResponseInner.mac) &&
        Objects.equals(this.model, getOrganizationSummaryTopDevicesByUsage200ResponseInner.model) &&
        Objects.equals(this.name, getOrganizationSummaryTopDevicesByUsage200ResponseInner.name) &&
        Objects.equals(this.network, getOrganizationSummaryTopDevicesByUsage200ResponseInner.network) &&
        Objects.equals(this.productType, getOrganizationSummaryTopDevicesByUsage200ResponseInner.productType) &&
        Objects.equals(this.serial, getOrganizationSummaryTopDevicesByUsage200ResponseInner.serial) &&
        Objects.equals(this.usage, getOrganizationSummaryTopDevicesByUsage200ResponseInner.usage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clients, mac, model, name, network, productType, serial, usage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrganizationSummaryTopDevicesByUsage200ResponseInner {\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    mac: ").append(toIndentedString(mac)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clients");
    openapiFields.add("mac");
    openapiFields.add("model");
    openapiFields.add("name");
    openapiFields.add("network");
    openapiFields.add("productType");
    openapiFields.add("serial");
    openapiFields.add("usage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOrganizationSummaryTopDevicesByUsage200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOrganizationSummaryTopDevicesByUsage200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrganizationSummaryTopDevicesByUsage200ResponseInner is not found in the empty JSON string", GetOrganizationSummaryTopDevicesByUsage200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOrganizationSummaryTopDevicesByUsage200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrganizationSummaryTopDevicesByUsage200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `clients`
      if (jsonObj.get("clients") != null && !jsonObj.get("clients").isJsonNull()) {
        GetOrganizationSummaryTopDevicesByUsage200ResponseInnerClients.validateJsonElement(jsonObj.get("clients"));
      }
      if ((jsonObj.get("mac") != null && !jsonObj.get("mac").isJsonNull()) && !jsonObj.get("mac").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mac` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mac").toString()));
      }
      if ((jsonObj.get("model") != null && !jsonObj.get("model").isJsonNull()) && !jsonObj.get("model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `network`
      if (jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) {
        GetOrganizationSummaryTopAppliancesByUtilization200ResponseInnerNetwork.validateJsonElement(jsonObj.get("network"));
      }
      if ((jsonObj.get("productType") != null && !jsonObj.get("productType").isJsonNull()) && !jsonObj.get("productType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productType").toString()));
      }
      if ((jsonObj.get("serial") != null && !jsonObj.get("serial").isJsonNull()) && !jsonObj.get("serial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serial").toString()));
      }
      // validate the optional field `usage`
      if (jsonObj.get("usage") != null && !jsonObj.get("usage").isJsonNull()) {
        GetOrganizationSummaryTopDevicesByUsage200ResponseInnerUsage.validateJsonElement(jsonObj.get("usage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOrganizationSummaryTopDevicesByUsage200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOrganizationSummaryTopDevicesByUsage200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOrganizationSummaryTopDevicesByUsage200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOrganizationSummaryTopDevicesByUsage200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOrganizationSummaryTopDevicesByUsage200ResponseInner>() {
           @Override
           public void write(JsonWriter out, GetOrganizationSummaryTopDevicesByUsage200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOrganizationSummaryTopDevicesByUsage200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOrganizationSummaryTopDevicesByUsage200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOrganizationSummaryTopDevicesByUsage200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to GetOrganizationSummaryTopDevicesByUsage200ResponseInner
   */
  public static GetOrganizationSummaryTopDevicesByUsage200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOrganizationSummaryTopDevicesByUsage200ResponseInner.class);
  }

  /**
   * Convert an instance of GetOrganizationSummaryTopDevicesByUsage200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

