/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner;
import org.openapitools.client.model.GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner {
  public static final String SERIALIZED_NAME_CLIENTS = "clients";
  @SerializedName(SERIALIZED_NAME_CLIENTS)
  private List<GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner> clients = new ArrayList<>();

  public static final String SERIALIZED_NAME_LLDP = "lldp";
  @SerializedName(SERIALIZED_NAME_LLDP)
  private GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp lldp;

  public static final String SERIALIZED_NAME_MAC = "mac";
  @SerializedName(SERIALIZED_NAME_MAC)
  private String mac;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "productType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private String productType;

  public static final String SERIALIZED_NAME_SERIAL = "serial";
  @SerializedName(SERIALIZED_NAME_SERIAL)
  private String serial;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner() {
  }

  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner clients(List<GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner> clients) {
    this.clients = clients;
    return this;
  }

  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner addClientsItem(GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner clientsItem) {
    if (this.clients == null) {
      this.clients = new ArrayList<>();
    }
    this.clients.add(clientsItem);
    return this;
  }

  /**
   * Clients related to the device
   * @return clients
   */
  @javax.annotation.Nullable
  public List<GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner> getClients() {
    return clients;
  }

  public void setClients(List<GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner> clients) {
    this.clients = clients;
  }


  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner lldp(GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp lldp) {
    this.lldp = lldp;
    return this;
  }

  /**
   * Get lldp
   * @return lldp
   */
  @javax.annotation.Nullable
  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp getLldp() {
    return lldp;
  }

  public void setLldp(GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp lldp) {
    this.lldp = lldp;
  }


  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner mac(String mac) {
    this.mac = mac;
    return this;
  }

  /**
   * The mac address of the device
   * @return mac
   */
  @javax.annotation.Nullable
  public String getMac() {
    return mac;
  }

  public void setMac(String mac) {
    this.mac = mac;
  }


  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the device
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner productType(String productType) {
    this.productType = productType;
    return this;
  }

  /**
   * Product type of the device
   * @return productType
   */
  @javax.annotation.Nullable
  public String getProductType() {
    return productType;
  }

  public void setProductType(String productType) {
    this.productType = productType;
  }


  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner serial(String serial) {
    this.serial = serial;
    return this;
  }

  /**
   * Serial number of the device
   * @return serial
   */
  @javax.annotation.Nullable
  public String getSerial() {
    return serial;
  }

  public void setSerial(String serial) {
    this.serial = serial;
  }


  public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner url(String url) {
    this.url = url;
    return this;
  }

  /**
   * URL to the device
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner getNetworkHealthAlerts200ResponseInnerScopeDevicesInner = (GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner) o;
    return Objects.equals(this.clients, getNetworkHealthAlerts200ResponseInnerScopeDevicesInner.clients) &&
        Objects.equals(this.lldp, getNetworkHealthAlerts200ResponseInnerScopeDevicesInner.lldp) &&
        Objects.equals(this.mac, getNetworkHealthAlerts200ResponseInnerScopeDevicesInner.mac) &&
        Objects.equals(this.name, getNetworkHealthAlerts200ResponseInnerScopeDevicesInner.name) &&
        Objects.equals(this.productType, getNetworkHealthAlerts200ResponseInnerScopeDevicesInner.productType) &&
        Objects.equals(this.serial, getNetworkHealthAlerts200ResponseInnerScopeDevicesInner.serial) &&
        Objects.equals(this.url, getNetworkHealthAlerts200ResponseInnerScopeDevicesInner.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clients, lldp, mac, name, productType, serial, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner {\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    lldp: ").append(toIndentedString(lldp)).append("\n");
    sb.append("    mac: ").append(toIndentedString(mac)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clients");
    openapiFields.add("lldp");
    openapiFields.add("mac");
    openapiFields.add("name");
    openapiFields.add("productType");
    openapiFields.add("serial");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner is not found in the empty JSON string", GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("clients") != null && !jsonObj.get("clients").isJsonNull()) {
        JsonArray jsonArrayclients = jsonObj.getAsJsonArray("clients");
        if (jsonArrayclients != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clients").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clients` to be an array in the JSON string but got `%s`", jsonObj.get("clients").toString()));
          }

          // validate the optional field `clients` (array)
          for (int i = 0; i < jsonArrayclients.size(); i++) {
            GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerClientsInner.validateJsonElement(jsonArrayclients.get(i));
          };
        }
      }
      // validate the optional field `lldp`
      if (jsonObj.get("lldp") != null && !jsonObj.get("lldp").isJsonNull()) {
        GetNetworkHealthAlerts200ResponseInnerScopeDevicesInnerLldp.validateJsonElement(jsonObj.get("lldp"));
      }
      if ((jsonObj.get("mac") != null && !jsonObj.get("mac").isJsonNull()) && !jsonObj.get("mac").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mac` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mac").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("productType") != null && !jsonObj.get("productType").isJsonNull()) && !jsonObj.get("productType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productType").toString()));
      }
      if ((jsonObj.get("serial") != null && !jsonObj.get("serial").isJsonNull()) && !jsonObj.get("serial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serial").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner
   */
  public static GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner.class);
  }

  /**
   * Convert an instance of GetNetworkHealthAlerts200ResponseInnerScopeDevicesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

