/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the details of an imported device.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice {
  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private Boolean created;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice() {
  }

  public GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice created(Boolean created) {
    this.created = created;
    return this;
  }

  /**
   * Whether or not the device was successfully created in dashboard.
   * @return created
   */
  @javax.annotation.Nullable
  public Boolean getCreated() {
    return created;
  }

  public void setCreated(Boolean created) {
    this.created = created;
  }


  public GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Represents the current state of importing the device.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice url(String url) {
    this.url = url;
    return this;
  }

  /**
   * The url to the device details page within dashboard.
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice getOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice = (GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice) o;
    return Objects.equals(this.created, getOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.created) &&
        Objects.equals(this.status, getOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.status) &&
        Objects.equals(this.url, getOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, status, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created");
    openapiFields.add("status");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice is not found in the empty JSON string", GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice>() {
           @Override
           public void write(JsonWriter out, GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice
   * @throws IOException if the JSON string is invalid with respect to GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice
   */
  public static GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice.class);
  }

  /**
   * Convert an instance of GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInnerDevice to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

