/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner;
import org.openapitools.client.model.UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerPerClientBandwidthLimits;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner {
  public static final String SERIALIZED_NAME_DEFINITIONS = "definitions";
  @SerializedName(SERIALIZED_NAME_DEFINITIONS)
  private List<UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner> definitions = new ArrayList<>();

  public static final String SERIALIZED_NAME_DSCP_TAG_VALUE = "dscpTagValue";
  @SerializedName(SERIALIZED_NAME_DSCP_TAG_VALUE)
  private Integer dscpTagValue;

  public static final String SERIALIZED_NAME_PCP_TAG_VALUE = "pcpTagValue";
  @SerializedName(SERIALIZED_NAME_PCP_TAG_VALUE)
  private Integer pcpTagValue;

  public static final String SERIALIZED_NAME_PER_CLIENT_BANDWIDTH_LIMITS = "perClientBandwidthLimits";
  @SerializedName(SERIALIZED_NAME_PER_CLIENT_BANDWIDTH_LIMITS)
  private UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerPerClientBandwidthLimits perClientBandwidthLimits;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private String priority;

  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner() {
  }

  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner definitions(List<UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner> definitions) {
    this.definitions = definitions;
    return this;
  }

  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner addDefinitionsItem(UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner definitionsItem) {
    if (this.definitions == null) {
      this.definitions = new ArrayList<>();
    }
    this.definitions.add(definitionsItem);
    return this;
  }

  /**
   *     A list of objects describing the definitions of your traffic shaping rule. At least one definition is required. 
   * @return definitions
   */
  @javax.annotation.Nonnull
  public List<UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner> getDefinitions() {
    return definitions;
  }

  public void setDefinitions(List<UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner> definitions) {
    this.definitions = definitions;
  }


  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner dscpTagValue(Integer dscpTagValue) {
    this.dscpTagValue = dscpTagValue;
    return this;
  }

  /**
   *     The DSCP tag applied by your rule. null means &#39;Do not change DSCP tag&#39;.     For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint. 
   * @return dscpTagValue
   */
  @javax.annotation.Nullable
  public Integer getDscpTagValue() {
    return dscpTagValue;
  }

  public void setDscpTagValue(Integer dscpTagValue) {
    this.dscpTagValue = dscpTagValue;
  }


  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner pcpTagValue(Integer pcpTagValue) {
    this.pcpTagValue = pcpTagValue;
    return this;
  }

  /**
   *     The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).     null means &#39;Do not set PCP tag&#39;. 
   * @return pcpTagValue
   */
  @javax.annotation.Nullable
  public Integer getPcpTagValue() {
    return pcpTagValue;
  }

  public void setPcpTagValue(Integer pcpTagValue) {
    this.pcpTagValue = pcpTagValue;
  }


  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner perClientBandwidthLimits(UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerPerClientBandwidthLimits perClientBandwidthLimits) {
    this.perClientBandwidthLimits = perClientBandwidthLimits;
    return this;
  }

  /**
   * Get perClientBandwidthLimits
   * @return perClientBandwidthLimits
   */
  @javax.annotation.Nullable
  public UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerPerClientBandwidthLimits getPerClientBandwidthLimits() {
    return perClientBandwidthLimits;
  }

  public void setPerClientBandwidthLimits(UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerPerClientBandwidthLimits perClientBandwidthLimits) {
    this.perClientBandwidthLimits = perClientBandwidthLimits;
  }


  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner priority(String priority) {
    this.priority = priority;
    return this;
  }

  /**
   *     A string, indicating the priority level for packets bound to your rule.     Can be &#39;low&#39;, &#39;normal&#39; or &#39;high&#39;. 
   * @return priority
   */
  @javax.annotation.Nullable
  public String getPriority() {
    return priority;
  }

  public void setPriority(String priority) {
    this.priority = priority;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner createNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner = (CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner) o;
    return Objects.equals(this.definitions, createNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.definitions) &&
        Objects.equals(this.dscpTagValue, createNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.dscpTagValue) &&
        Objects.equals(this.pcpTagValue, createNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.pcpTagValue) &&
        Objects.equals(this.perClientBandwidthLimits, createNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.perClientBandwidthLimits) &&
        Objects.equals(this.priority, createNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.priority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(definitions, dscpTagValue, pcpTagValue, perClientBandwidthLimits, priority);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner {\n");
    sb.append("    definitions: ").append(toIndentedString(definitions)).append("\n");
    sb.append("    dscpTagValue: ").append(toIndentedString(dscpTagValue)).append("\n");
    sb.append("    pcpTagValue: ").append(toIndentedString(pcpTagValue)).append("\n");
    sb.append("    perClientBandwidthLimits: ").append(toIndentedString(perClientBandwidthLimits)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("definitions");
    openapiFields.add("dscpTagValue");
    openapiFields.add("pcpTagValue");
    openapiFields.add("perClientBandwidthLimits");
    openapiFields.add("priority");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("definitions");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner is not found in the empty JSON string", CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("definitions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `definitions` to be an array in the JSON string but got `%s`", jsonObj.get("definitions").toString()));
      }

      JsonArray jsonArraydefinitions = jsonObj.getAsJsonArray("definitions");
      // validate the required field `definitions` (array)
      for (int i = 0; i < jsonArraydefinitions.size(); i++) {
        UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerDefinitionsInner.validateJsonElement(jsonArraydefinitions.get(i));
      };
      // validate the optional field `perClientBandwidthLimits`
      if (jsonObj.get("perClientBandwidthLimits") != null && !jsonObj.get("perClientBandwidthLimits").isJsonNull()) {
        UpdateNetworkApplianceTrafficShapingRulesRequestRulesInnerPerClientBandwidthLimits.validateJsonElement(jsonObj.get("perClientBandwidthLimits"));
      }
      if ((jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) && !jsonObj.get("priority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priority").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner>() {
           @Override
           public void write(JsonWriter out, CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner
   * @throws IOException if the JSON string is invalid with respect to CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner
   */
  public static CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.class);
  }

  /**
   * Convert an instance of CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

