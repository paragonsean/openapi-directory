/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ByIntervalApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ByIntervalApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ByIntervalApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getOrganizationApiRequestsOverviewResponseCodesByInterval_4
     * @param organizationId  (required)
     * @param t0 The beginning of the timespan for the data. The maximum lookback period is 31 days from today. (optional)
     * @param t1 The end of the timespan for the data. t1 can be a maximum of 31 days after t0. (optional)
     * @param timespan The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated. (optional)
     * @param interval The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided. (optional)
     * @param version Filter by API version of the endpoint. Allowable values are: [0, 1] (optional)
     * @param operationIds Filter by operation ID of the endpoint (optional)
     * @param sourceIps Filter by source IP that made the API request (optional)
     * @param adminIds Filter by admin ID of user that made the API request (optional)
     * @param userAgent Filter by user agent string for API request. This will filter by a complete or partial match. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getOrganizationApiRequestsOverviewResponseCodesByInterval_4Call(String organizationId, String t0, String t1, Float timespan, Integer interval, Integer version, List<String> operationIds, List<String> sourceIps, List<String> adminIds, String userAgent, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizations/{organizationId}/apiRequests/overview/responseCodes/byInterval"
            .replace("{" + "organizationId" + "}", localVarApiClient.escapeString(organizationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (t0 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("t0", t0));
        }

        if (t1 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("t1", t1));
        }

        if (timespan != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timespan", timespan));
        }

        if (interval != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("interval", interval));
        }

        if (version != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("version", version));
        }

        if (operationIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "operationIds", operationIds));
        }

        if (sourceIps != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "sourceIps", sourceIps));
        }

        if (adminIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "adminIds", adminIds));
        }

        if (userAgent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("userAgent", userAgent));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "meraki_api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getOrganizationApiRequestsOverviewResponseCodesByInterval_4ValidateBeforeCall(String organizationId, String t0, String t1, Float timespan, Integer interval, Integer version, List<String> operationIds, List<String> sourceIps, List<String> adminIds, String userAgent, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'organizationId' is set
        if (organizationId == null) {
            throw new ApiException("Missing the required parameter 'organizationId' when calling getOrganizationApiRequestsOverviewResponseCodesByInterval_4(Async)");
        }

        return getOrganizationApiRequestsOverviewResponseCodesByInterval_4Call(organizationId, t0, t1, timespan, interval, version, operationIds, sourceIps, adminIds, userAgent, _callback);

    }

    /**
     * Tracks organizations&#39; API requests by response code across a given time period
     * Tracks organizations&#39; API requests by response code across a given time period
     * @param organizationId  (required)
     * @param t0 The beginning of the timespan for the data. The maximum lookback period is 31 days from today. (optional)
     * @param t1 The end of the timespan for the data. t1 can be a maximum of 31 days after t0. (optional)
     * @param timespan The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated. (optional)
     * @param interval The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided. (optional)
     * @param version Filter by API version of the endpoint. Allowable values are: [0, 1] (optional)
     * @param operationIds Filter by operation ID of the endpoint (optional)
     * @param sourceIps Filter by source IP that made the API request (optional)
     * @param adminIds Filter by admin ID of user that made the API request (optional)
     * @param userAgent Filter by user agent string for API request. This will filter by a complete or partial match. (optional)
     * @return List&lt;GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public List<GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner> getOrganizationApiRequestsOverviewResponseCodesByInterval_4(String organizationId, String t0, String t1, Float timespan, Integer interval, Integer version, List<String> operationIds, List<String> sourceIps, List<String> adminIds, String userAgent) throws ApiException {
        ApiResponse<List<GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner>> localVarResp = getOrganizationApiRequestsOverviewResponseCodesByInterval_4WithHttpInfo(organizationId, t0, t1, timespan, interval, version, operationIds, sourceIps, adminIds, userAgent);
        return localVarResp.getData();
    }

    /**
     * Tracks organizations&#39; API requests by response code across a given time period
     * Tracks organizations&#39; API requests by response code across a given time period
     * @param organizationId  (required)
     * @param t0 The beginning of the timespan for the data. The maximum lookback period is 31 days from today. (optional)
     * @param t1 The end of the timespan for the data. t1 can be a maximum of 31 days after t0. (optional)
     * @param timespan The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated. (optional)
     * @param interval The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided. (optional)
     * @param version Filter by API version of the endpoint. Allowable values are: [0, 1] (optional)
     * @param operationIds Filter by operation ID of the endpoint (optional)
     * @param sourceIps Filter by source IP that made the API request (optional)
     * @param adminIds Filter by admin ID of user that made the API request (optional)
     * @param userAgent Filter by user agent string for API request. This will filter by a complete or partial match. (optional)
     * @return ApiResponse&lt;List&lt;GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner>> getOrganizationApiRequestsOverviewResponseCodesByInterval_4WithHttpInfo(String organizationId, String t0, String t1, Float timespan, Integer interval, Integer version, List<String> operationIds, List<String> sourceIps, List<String> adminIds, String userAgent) throws ApiException {
        okhttp3.Call localVarCall = getOrganizationApiRequestsOverviewResponseCodesByInterval_4ValidateBeforeCall(organizationId, t0, t1, timespan, interval, version, operationIds, sourceIps, adminIds, userAgent, null);
        Type localVarReturnType = new TypeToken<List<GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Tracks organizations&#39; API requests by response code across a given time period (asynchronously)
     * Tracks organizations&#39; API requests by response code across a given time period
     * @param organizationId  (required)
     * @param t0 The beginning of the timespan for the data. The maximum lookback period is 31 days from today. (optional)
     * @param t1 The end of the timespan for the data. t1 can be a maximum of 31 days after t0. (optional)
     * @param timespan The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated. (optional)
     * @param interval The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided. (optional)
     * @param version Filter by API version of the endpoint. Allowable values are: [0, 1] (optional)
     * @param operationIds Filter by operation ID of the endpoint (optional)
     * @param sourceIps Filter by source IP that made the API request (optional)
     * @param adminIds Filter by admin ID of user that made the API request (optional)
     * @param userAgent Filter by user agent string for API request. This will filter by a complete or partial match. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getOrganizationApiRequestsOverviewResponseCodesByInterval_4Async(String organizationId, String t0, String t1, Float timespan, Integer interval, Integer version, List<String> operationIds, List<String> sourceIps, List<String> adminIds, String userAgent, final ApiCallback<List<GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner>> _callback) throws ApiException {

        okhttp3.Call localVarCall = getOrganizationApiRequestsOverviewResponseCodesByInterval_4ValidateBeforeCall(organizationId, t0, t1, timespan, interval, version, operationIds, sourceIps, adminIds, userAgent, _callback);
        Type localVarReturnType = new TypeToken<List<GetOrganizationApiRequestsOverviewResponseCodesByInterval200ResponseInner>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
