/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner {
  public static final String SERIALIZED_NAME_AUTHORIZED_BY_EMAIL = "authorizedByEmail";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_BY_EMAIL)
  private String authorizedByEmail;

  public static final String SERIALIZED_NAME_AUTHORIZED_BY_NAME = "authorizedByName";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_BY_NAME)
  private String authorizedByName;

  public static final String SERIALIZED_NAME_AUTHORIZED_ZONE = "authorizedZone";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_ZONE)
  private String authorizedZone;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expiresAt";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;

  public static final String SERIALIZED_NAME_SSID_NUMBER = "ssidNumber";
  @SerializedName(SERIALIZED_NAME_SSID_NUMBER)
  private Integer ssidNumber;

  public GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner() {
  }

  public GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner authorizedByEmail(String authorizedByEmail) {
    this.authorizedByEmail = authorizedByEmail;
    return this;
  }

  /**
   * User is authorized by the account email address
   * @return authorizedByEmail
   */
  @javax.annotation.Nullable
  public String getAuthorizedByEmail() {
    return authorizedByEmail;
  }

  public void setAuthorizedByEmail(String authorizedByEmail) {
    this.authorizedByEmail = authorizedByEmail;
  }


  public GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner authorizedByName(String authorizedByName) {
    this.authorizedByName = authorizedByName;
    return this;
  }

  /**
   * User is authorized by the account name
   * @return authorizedByName
   */
  @javax.annotation.Nullable
  public String getAuthorizedByName() {
    return authorizedByName;
  }

  public void setAuthorizedByName(String authorizedByName) {
    this.authorizedByName = authorizedByName;
  }


  public GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner authorizedZone(String authorizedZone) {
    this.authorizedZone = authorizedZone;
    return this;
  }

  /**
   * Authorized zone of the user
   * @return authorizedZone
   */
  @javax.annotation.Nullable
  public String getAuthorizedZone() {
    return authorizedZone;
  }

  public void setAuthorizedZone(String authorizedZone) {
    this.authorizedZone = authorizedZone;
  }


  public GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner expiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

  /**
   * Authorization expiration time
   * @return expiresAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  public GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner ssidNumber(Integer ssidNumber) {
    this.ssidNumber = ssidNumber;
    return this;
  }

  /**
   * SSID number
   * @return ssidNumber
   */
  @javax.annotation.Nullable
  public Integer getSsidNumber() {
    return ssidNumber;
  }

  public void setSsidNumber(Integer ssidNumber) {
    this.ssidNumber = ssidNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner getNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner = (GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner) o;
    return Objects.equals(this.authorizedByEmail, getNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.authorizedByEmail) &&
        Objects.equals(this.authorizedByName, getNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.authorizedByName) &&
        Objects.equals(this.authorizedZone, getNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.authorizedZone) &&
        Objects.equals(this.expiresAt, getNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.expiresAt) &&
        Objects.equals(this.ssidNumber, getNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.ssidNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizedByEmail, authorizedByName, authorizedZone, expiresAt, ssidNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner {\n");
    sb.append("    authorizedByEmail: ").append(toIndentedString(authorizedByEmail)).append("\n");
    sb.append("    authorizedByName: ").append(toIndentedString(authorizedByName)).append("\n");
    sb.append("    authorizedZone: ").append(toIndentedString(authorizedZone)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    ssidNumber: ").append(toIndentedString(ssidNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authorizedByEmail");
    openapiFields.add("authorizedByName");
    openapiFields.add("authorizedZone");
    openapiFields.add("expiresAt");
    openapiFields.add("ssidNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner is not found in the empty JSON string", GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("authorizedByEmail") != null && !jsonObj.get("authorizedByEmail").isJsonNull()) && !jsonObj.get("authorizedByEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedByEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedByEmail").toString()));
      }
      if ((jsonObj.get("authorizedByName") != null && !jsonObj.get("authorizedByName").isJsonNull()) && !jsonObj.get("authorizedByName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedByName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedByName").toString()));
      }
      if ((jsonObj.get("authorizedZone") != null && !jsonObj.get("authorizedZone").isJsonNull()) && !jsonObj.get("authorizedZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedZone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner>() {
           @Override
           public void write(JsonWriter out, GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner
   * @throws IOException if the JSON string is invalid with respect to GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner
   */
  public static GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner.class);
  }

  /**
   * Convert an instance of GetNetworkMerakiAuthUsers200ResponseInnerAuthorizationsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

