/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GetOrganizationSwitchPortsBySwitch200ResponseInner;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BySwitchApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BySwitchApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BySwitchApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getOrganizationSwitchPortsBySwitch_2
     * @param organizationId  (required)
     * @param perPage The number of entries per page returned. Acceptable range is 3 - 50. Default is 50. (optional)
     * @param startingAfter A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. (optional)
     * @param endingBefore A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. (optional)
     * @param networkIds Optional parameter to filter switchports by network. (optional)
     * @param portProfileIds Optional parameter to filter switchports belonging to the specified switchport profiles. (optional)
     * @param name Optional parameter to filter switchports belonging to switches by name. All returned switches will have a name that contains the search term or is an exact match. (optional)
     * @param mac Optional parameter to filter switchports belonging to switches by MAC address. All returned switches will have a MAC address that contains the search term or is an exact match. (optional)
     * @param macs Optional parameter to filter switchports by one or more MAC addresses belonging to devices. All switchports returned belong to MAC addresses of switches that are an exact match. (optional)
     * @param serial Optional parameter to filter switchports belonging to switches by serial number. All returned switches will have a serial number that contains the search term or is an exact match. (optional)
     * @param serials Optional parameter to filter switchports belonging to switches with one or more serial numbers. All switchports returned belong to serial numbers of switches that are an exact match. (optional)
     * @param configurationUpdatedAfter Optional parameter to filter results by switches where the configuration has been updated after the given timestamp. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  * Link - A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests. <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getOrganizationSwitchPortsBySwitch_2Call(String organizationId, Integer perPage, String startingAfter, String endingBefore, List<String> networkIds, List<String> portProfileIds, String name, String mac, List<String> macs, String serial, List<String> serials, String configurationUpdatedAfter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizations/{organizationId}/switch/ports/bySwitch"
            .replace("{" + "organizationId" + "}", localVarApiClient.escapeString(organizationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("perPage", perPage));
        }

        if (startingAfter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startingAfter", startingAfter));
        }

        if (endingBefore != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endingBefore", endingBefore));
        }

        if (networkIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "networkIds", networkIds));
        }

        if (portProfileIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "portProfileIds", portProfileIds));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (mac != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mac", mac));
        }

        if (macs != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "macs", macs));
        }

        if (serial != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("serial", serial));
        }

        if (serials != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "serials", serials));
        }

        if (configurationUpdatedAfter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("configurationUpdatedAfter", configurationUpdatedAfter));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "meraki_api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getOrganizationSwitchPortsBySwitch_2ValidateBeforeCall(String organizationId, Integer perPage, String startingAfter, String endingBefore, List<String> networkIds, List<String> portProfileIds, String name, String mac, List<String> macs, String serial, List<String> serials, String configurationUpdatedAfter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'organizationId' is set
        if (organizationId == null) {
            throw new ApiException("Missing the required parameter 'organizationId' when calling getOrganizationSwitchPortsBySwitch_2(Async)");
        }

        return getOrganizationSwitchPortsBySwitch_2Call(organizationId, perPage, startingAfter, endingBefore, networkIds, portProfileIds, name, mac, macs, serial, serials, configurationUpdatedAfter, _callback);

    }

    /**
     * List the switchports in an organization by switch
     * List the switchports in an organization by switch
     * @param organizationId  (required)
     * @param perPage The number of entries per page returned. Acceptable range is 3 - 50. Default is 50. (optional)
     * @param startingAfter A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. (optional)
     * @param endingBefore A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. (optional)
     * @param networkIds Optional parameter to filter switchports by network. (optional)
     * @param portProfileIds Optional parameter to filter switchports belonging to the specified switchport profiles. (optional)
     * @param name Optional parameter to filter switchports belonging to switches by name. All returned switches will have a name that contains the search term or is an exact match. (optional)
     * @param mac Optional parameter to filter switchports belonging to switches by MAC address. All returned switches will have a MAC address that contains the search term or is an exact match. (optional)
     * @param macs Optional parameter to filter switchports by one or more MAC addresses belonging to devices. All switchports returned belong to MAC addresses of switches that are an exact match. (optional)
     * @param serial Optional parameter to filter switchports belonging to switches by serial number. All returned switches will have a serial number that contains the search term or is an exact match. (optional)
     * @param serials Optional parameter to filter switchports belonging to switches with one or more serial numbers. All switchports returned belong to serial numbers of switches that are an exact match. (optional)
     * @param configurationUpdatedAfter Optional parameter to filter results by switches where the configuration has been updated after the given timestamp. (optional)
     * @return List&lt;GetOrganizationSwitchPortsBySwitch200ResponseInner&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  * Link - A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests. <br>  </td></tr>
     </table>
     */
    public List<GetOrganizationSwitchPortsBySwitch200ResponseInner> getOrganizationSwitchPortsBySwitch_2(String organizationId, Integer perPage, String startingAfter, String endingBefore, List<String> networkIds, List<String> portProfileIds, String name, String mac, List<String> macs, String serial, List<String> serials, String configurationUpdatedAfter) throws ApiException {
        ApiResponse<List<GetOrganizationSwitchPortsBySwitch200ResponseInner>> localVarResp = getOrganizationSwitchPortsBySwitch_2WithHttpInfo(organizationId, perPage, startingAfter, endingBefore, networkIds, portProfileIds, name, mac, macs, serial, serials, configurationUpdatedAfter);
        return localVarResp.getData();
    }

    /**
     * List the switchports in an organization by switch
     * List the switchports in an organization by switch
     * @param organizationId  (required)
     * @param perPage The number of entries per page returned. Acceptable range is 3 - 50. Default is 50. (optional)
     * @param startingAfter A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. (optional)
     * @param endingBefore A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. (optional)
     * @param networkIds Optional parameter to filter switchports by network. (optional)
     * @param portProfileIds Optional parameter to filter switchports belonging to the specified switchport profiles. (optional)
     * @param name Optional parameter to filter switchports belonging to switches by name. All returned switches will have a name that contains the search term or is an exact match. (optional)
     * @param mac Optional parameter to filter switchports belonging to switches by MAC address. All returned switches will have a MAC address that contains the search term or is an exact match. (optional)
     * @param macs Optional parameter to filter switchports by one or more MAC addresses belonging to devices. All switchports returned belong to MAC addresses of switches that are an exact match. (optional)
     * @param serial Optional parameter to filter switchports belonging to switches by serial number. All returned switches will have a serial number that contains the search term or is an exact match. (optional)
     * @param serials Optional parameter to filter switchports belonging to switches with one or more serial numbers. All switchports returned belong to serial numbers of switches that are an exact match. (optional)
     * @param configurationUpdatedAfter Optional parameter to filter results by switches where the configuration has been updated after the given timestamp. (optional)
     * @return ApiResponse&lt;List&lt;GetOrganizationSwitchPortsBySwitch200ResponseInner&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  * Link - A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests. <br>  </td></tr>
     </table>
     */
    public ApiResponse<List<GetOrganizationSwitchPortsBySwitch200ResponseInner>> getOrganizationSwitchPortsBySwitch_2WithHttpInfo(String organizationId, Integer perPage, String startingAfter, String endingBefore, List<String> networkIds, List<String> portProfileIds, String name, String mac, List<String> macs, String serial, List<String> serials, String configurationUpdatedAfter) throws ApiException {
        okhttp3.Call localVarCall = getOrganizationSwitchPortsBySwitch_2ValidateBeforeCall(organizationId, perPage, startingAfter, endingBefore, networkIds, portProfileIds, name, mac, macs, serial, serials, configurationUpdatedAfter, null);
        Type localVarReturnType = new TypeToken<List<GetOrganizationSwitchPortsBySwitch200ResponseInner>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List the switchports in an organization by switch (asynchronously)
     * List the switchports in an organization by switch
     * @param organizationId  (required)
     * @param perPage The number of entries per page returned. Acceptable range is 3 - 50. Default is 50. (optional)
     * @param startingAfter A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. (optional)
     * @param endingBefore A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it. (optional)
     * @param networkIds Optional parameter to filter switchports by network. (optional)
     * @param portProfileIds Optional parameter to filter switchports belonging to the specified switchport profiles. (optional)
     * @param name Optional parameter to filter switchports belonging to switches by name. All returned switches will have a name that contains the search term or is an exact match. (optional)
     * @param mac Optional parameter to filter switchports belonging to switches by MAC address. All returned switches will have a MAC address that contains the search term or is an exact match. (optional)
     * @param macs Optional parameter to filter switchports by one or more MAC addresses belonging to devices. All switchports returned belong to MAC addresses of switches that are an exact match. (optional)
     * @param serial Optional parameter to filter switchports belonging to switches by serial number. All returned switches will have a serial number that contains the search term or is an exact match. (optional)
     * @param serials Optional parameter to filter switchports belonging to switches with one or more serial numbers. All switchports returned belong to serial numbers of switches that are an exact match. (optional)
     * @param configurationUpdatedAfter Optional parameter to filter results by switches where the configuration has been updated after the given timestamp. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation </td><td>  * Link - A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests. <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getOrganizationSwitchPortsBySwitch_2Async(String organizationId, Integer perPage, String startingAfter, String endingBefore, List<String> networkIds, List<String> portProfileIds, String name, String mac, List<String> macs, String serial, List<String> serials, String configurationUpdatedAfter, final ApiCallback<List<GetOrganizationSwitchPortsBySwitch200ResponseInner>> _callback) throws ApiException {

        okhttp3.Call localVarCall = getOrganizationSwitchPortsBySwitch_2ValidateBeforeCall(organizationId, perPage, startingAfter, endingBefore, networkIds, portProfileIds, name, mac, macs, serial, serials, configurationUpdatedAfter, _callback);
        Type localVarReturnType = new TypeToken<List<GetOrganizationSwitchPortsBySwitch200ResponseInner>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
