/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner;
import org.openapitools.client.model.CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *     The firewall and traffic shaping rules and settings for your policy. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping {
  public static final String SERIALIZED_NAME_L3_FIREWALL_RULES = "l3FirewallRules";
  @SerializedName(SERIALIZED_NAME_L3_FIREWALL_RULES)
  private List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner> l3FirewallRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_L7_FIREWALL_RULES = "l7FirewallRules";
  @SerializedName(SERIALIZED_NAME_L7_FIREWALL_RULES)
  private List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner> l7FirewallRules = new ArrayList<>();

  /**
   * How firewall and traffic shaping rules are enforced. Can be &#39;network default&#39;, &#39;ignore&#39; or &#39;custom&#39;.
   */
  @JsonAdapter(SettingsEnum.Adapter.class)
  public enum SettingsEnum {
    CUSTOM("custom"),
    
    IGNORE("ignore"),
    
    NETWORK_DEFAULT("network default");

    private String value;

    SettingsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SettingsEnum fromValue(String value) {
      for (SettingsEnum b : SettingsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SettingsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SettingsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SettingsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SettingsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SettingsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private SettingsEnum settings;

  public static final String SERIALIZED_NAME_TRAFFIC_SHAPING_RULES = "trafficShapingRules";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_SHAPING_RULES)
  private List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner> trafficShapingRules = new ArrayList<>();

  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping() {
  }

  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping l3FirewallRules(List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner> l3FirewallRules) {
    this.l3FirewallRules = l3FirewallRules;
    return this;
  }

  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping addL3FirewallRulesItem(CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner l3FirewallRulesItem) {
    if (this.l3FirewallRules == null) {
      this.l3FirewallRules = new ArrayList<>();
    }
    this.l3FirewallRules.add(l3FirewallRulesItem);
    return this;
  }

  /**
   * An ordered array of the L3 firewall rules
   * @return l3FirewallRules
   */
  @javax.annotation.Nullable
  public List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner> getL3FirewallRules() {
    return l3FirewallRules;
  }

  public void setL3FirewallRules(List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner> l3FirewallRules) {
    this.l3FirewallRules = l3FirewallRules;
  }


  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping l7FirewallRules(List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner> l7FirewallRules) {
    this.l7FirewallRules = l7FirewallRules;
    return this;
  }

  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping addL7FirewallRulesItem(CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner l7FirewallRulesItem) {
    if (this.l7FirewallRules == null) {
      this.l7FirewallRules = new ArrayList<>();
    }
    this.l7FirewallRules.add(l7FirewallRulesItem);
    return this;
  }

  /**
   * An ordered array of L7 firewall rules
   * @return l7FirewallRules
   */
  @javax.annotation.Nullable
  public List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner> getL7FirewallRules() {
    return l7FirewallRules;
  }

  public void setL7FirewallRules(List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner> l7FirewallRules) {
    this.l7FirewallRules = l7FirewallRules;
  }


  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping settings(SettingsEnum settings) {
    this.settings = settings;
    return this;
  }

  /**
   * How firewall and traffic shaping rules are enforced. Can be &#39;network default&#39;, &#39;ignore&#39; or &#39;custom&#39;.
   * @return settings
   */
  @javax.annotation.Nullable
  public SettingsEnum getSettings() {
    return settings;
  }

  public void setSettings(SettingsEnum settings) {
    this.settings = settings;
  }


  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping trafficShapingRules(List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner> trafficShapingRules) {
    this.trafficShapingRules = trafficShapingRules;
    return this;
  }

  public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping addTrafficShapingRulesItem(CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner trafficShapingRulesItem) {
    if (this.trafficShapingRules == null) {
      this.trafficShapingRules = new ArrayList<>();
    }
    this.trafficShapingRules.add(trafficShapingRulesItem);
    return this;
  }

  /**
   *     An array of traffic shaping rules. Rules are applied in the order that     they are specified in. An empty list (or null) means no rules. Note that     you are allowed a maximum of 8 rules. 
   * @return trafficShapingRules
   */
  @javax.annotation.Nullable
  public List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner> getTrafficShapingRules() {
    return trafficShapingRules;
  }

  public void setTrafficShapingRules(List<CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner> trafficShapingRules) {
    this.trafficShapingRules = trafficShapingRules;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping createNetworkGroupPolicyRequestFirewallAndTrafficShaping = (CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping) o;
    return Objects.equals(this.l3FirewallRules, createNetworkGroupPolicyRequestFirewallAndTrafficShaping.l3FirewallRules) &&
        Objects.equals(this.l7FirewallRules, createNetworkGroupPolicyRequestFirewallAndTrafficShaping.l7FirewallRules) &&
        Objects.equals(this.settings, createNetworkGroupPolicyRequestFirewallAndTrafficShaping.settings) &&
        Objects.equals(this.trafficShapingRules, createNetworkGroupPolicyRequestFirewallAndTrafficShaping.trafficShapingRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(l3FirewallRules, l7FirewallRules, settings, trafficShapingRules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping {\n");
    sb.append("    l3FirewallRules: ").append(toIndentedString(l3FirewallRules)).append("\n");
    sb.append("    l7FirewallRules: ").append(toIndentedString(l7FirewallRules)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    trafficShapingRules: ").append(toIndentedString(trafficShapingRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("l3FirewallRules");
    openapiFields.add("l7FirewallRules");
    openapiFields.add("settings");
    openapiFields.add("trafficShapingRules");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping is not found in the empty JSON string", CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("l3FirewallRules") != null && !jsonObj.get("l3FirewallRules").isJsonNull()) {
        JsonArray jsonArrayl3FirewallRules = jsonObj.getAsJsonArray("l3FirewallRules");
        if (jsonArrayl3FirewallRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("l3FirewallRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `l3FirewallRules` to be an array in the JSON string but got `%s`", jsonObj.get("l3FirewallRules").toString()));
          }

          // validate the optional field `l3FirewallRules` (array)
          for (int i = 0; i < jsonArrayl3FirewallRules.size(); i++) {
            CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL3FirewallRulesInner.validateJsonElement(jsonArrayl3FirewallRules.get(i));
          };
        }
      }
      if (jsonObj.get("l7FirewallRules") != null && !jsonObj.get("l7FirewallRules").isJsonNull()) {
        JsonArray jsonArrayl7FirewallRules = jsonObj.getAsJsonArray("l7FirewallRules");
        if (jsonArrayl7FirewallRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("l7FirewallRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `l7FirewallRules` to be an array in the JSON string but got `%s`", jsonObj.get("l7FirewallRules").toString()));
          }

          // validate the optional field `l7FirewallRules` (array)
          for (int i = 0; i < jsonArrayl7FirewallRules.size(); i++) {
            CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingL7FirewallRulesInner.validateJsonElement(jsonArrayl7FirewallRules.get(i));
          };
        }
      }
      if ((jsonObj.get("settings") != null && !jsonObj.get("settings").isJsonNull()) && !jsonObj.get("settings").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `settings` to be a primitive type in the JSON string but got `%s`", jsonObj.get("settings").toString()));
      }
      // validate the optional field `settings`
      if (jsonObj.get("settings") != null && !jsonObj.get("settings").isJsonNull()) {
        SettingsEnum.validateJsonElement(jsonObj.get("settings"));
      }
      if (jsonObj.get("trafficShapingRules") != null && !jsonObj.get("trafficShapingRules").isJsonNull()) {
        JsonArray jsonArraytrafficShapingRules = jsonObj.getAsJsonArray("trafficShapingRules");
        if (jsonArraytrafficShapingRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trafficShapingRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trafficShapingRules` to be an array in the JSON string but got `%s`", jsonObj.get("trafficShapingRules").toString()));
          }

          // validate the optional field `trafficShapingRules` (array)
          for (int i = 0; i < jsonArraytrafficShapingRules.size(); i++) {
            CreateNetworkGroupPolicyRequestFirewallAndTrafficShapingTrafficShapingRulesInner.validateJsonElement(jsonArraytrafficShapingRules.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping>() {
           @Override
           public void write(JsonWriter out, CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping
   * @throws IOException if the JSON string is invalid with respect to CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping
   */
  public static CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping.class);
  }

  /**
   * Convert an instance of CreateNetworkGroupPolicyRequestFirewallAndTrafficShaping to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

