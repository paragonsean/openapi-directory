/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetNetworkFirmwareUpgrades200ResponseProductsAppliance;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The network devices to be updated
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkFirmwareUpgrades200ResponseProducts {
  public static final String SERIALIZED_NAME_APPLIANCE = "appliance";
  @SerializedName(SERIALIZED_NAME_APPLIANCE)
  private GetNetworkFirmwareUpgrades200ResponseProductsAppliance appliance;

  public static final String SERIALIZED_NAME_CAMERA = "camera";
  @SerializedName(SERIALIZED_NAME_CAMERA)
  private GetNetworkFirmwareUpgrades200ResponseProductsAppliance camera;

  public static final String SERIALIZED_NAME_CELLULAR_GATEWAY = "cellularGateway";
  @SerializedName(SERIALIZED_NAME_CELLULAR_GATEWAY)
  private GetNetworkFirmwareUpgrades200ResponseProductsAppliance cellularGateway;

  public static final String SERIALIZED_NAME_SENSOR = "sensor";
  @SerializedName(SERIALIZED_NAME_SENSOR)
  private GetNetworkFirmwareUpgrades200ResponseProductsAppliance sensor;

  public static final String SERIALIZED_NAME_SWITCH = "switch";
  @SerializedName(SERIALIZED_NAME_SWITCH)
  private GetNetworkFirmwareUpgrades200ResponseProductsAppliance _switch;

  public static final String SERIALIZED_NAME_WIRELESS = "wireless";
  @SerializedName(SERIALIZED_NAME_WIRELESS)
  private GetNetworkFirmwareUpgrades200ResponseProductsAppliance wireless;

  public GetNetworkFirmwareUpgrades200ResponseProducts() {
  }

  public GetNetworkFirmwareUpgrades200ResponseProducts appliance(GetNetworkFirmwareUpgrades200ResponseProductsAppliance appliance) {
    this.appliance = appliance;
    return this;
  }

  /**
   * Get appliance
   * @return appliance
   */
  @javax.annotation.Nullable
  public GetNetworkFirmwareUpgrades200ResponseProductsAppliance getAppliance() {
    return appliance;
  }

  public void setAppliance(GetNetworkFirmwareUpgrades200ResponseProductsAppliance appliance) {
    this.appliance = appliance;
  }


  public GetNetworkFirmwareUpgrades200ResponseProducts camera(GetNetworkFirmwareUpgrades200ResponseProductsAppliance camera) {
    this.camera = camera;
    return this;
  }

  /**
   * Get camera
   * @return camera
   */
  @javax.annotation.Nullable
  public GetNetworkFirmwareUpgrades200ResponseProductsAppliance getCamera() {
    return camera;
  }

  public void setCamera(GetNetworkFirmwareUpgrades200ResponseProductsAppliance camera) {
    this.camera = camera;
  }


  public GetNetworkFirmwareUpgrades200ResponseProducts cellularGateway(GetNetworkFirmwareUpgrades200ResponseProductsAppliance cellularGateway) {
    this.cellularGateway = cellularGateway;
    return this;
  }

  /**
   * Get cellularGateway
   * @return cellularGateway
   */
  @javax.annotation.Nullable
  public GetNetworkFirmwareUpgrades200ResponseProductsAppliance getCellularGateway() {
    return cellularGateway;
  }

  public void setCellularGateway(GetNetworkFirmwareUpgrades200ResponseProductsAppliance cellularGateway) {
    this.cellularGateway = cellularGateway;
  }


  public GetNetworkFirmwareUpgrades200ResponseProducts sensor(GetNetworkFirmwareUpgrades200ResponseProductsAppliance sensor) {
    this.sensor = sensor;
    return this;
  }

  /**
   * Get sensor
   * @return sensor
   */
  @javax.annotation.Nullable
  public GetNetworkFirmwareUpgrades200ResponseProductsAppliance getSensor() {
    return sensor;
  }

  public void setSensor(GetNetworkFirmwareUpgrades200ResponseProductsAppliance sensor) {
    this.sensor = sensor;
  }


  public GetNetworkFirmwareUpgrades200ResponseProducts _switch(GetNetworkFirmwareUpgrades200ResponseProductsAppliance _switch) {
    this._switch = _switch;
    return this;
  }

  /**
   * Get _switch
   * @return _switch
   */
  @javax.annotation.Nullable
  public GetNetworkFirmwareUpgrades200ResponseProductsAppliance getSwitch() {
    return _switch;
  }

  public void setSwitch(GetNetworkFirmwareUpgrades200ResponseProductsAppliance _switch) {
    this._switch = _switch;
  }


  public GetNetworkFirmwareUpgrades200ResponseProducts wireless(GetNetworkFirmwareUpgrades200ResponseProductsAppliance wireless) {
    this.wireless = wireless;
    return this;
  }

  /**
   * Get wireless
   * @return wireless
   */
  @javax.annotation.Nullable
  public GetNetworkFirmwareUpgrades200ResponseProductsAppliance getWireless() {
    return wireless;
  }

  public void setWireless(GetNetworkFirmwareUpgrades200ResponseProductsAppliance wireless) {
    this.wireless = wireless;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkFirmwareUpgrades200ResponseProducts getNetworkFirmwareUpgrades200ResponseProducts = (GetNetworkFirmwareUpgrades200ResponseProducts) o;
    return Objects.equals(this.appliance, getNetworkFirmwareUpgrades200ResponseProducts.appliance) &&
        Objects.equals(this.camera, getNetworkFirmwareUpgrades200ResponseProducts.camera) &&
        Objects.equals(this.cellularGateway, getNetworkFirmwareUpgrades200ResponseProducts.cellularGateway) &&
        Objects.equals(this.sensor, getNetworkFirmwareUpgrades200ResponseProducts.sensor) &&
        Objects.equals(this._switch, getNetworkFirmwareUpgrades200ResponseProducts._switch) &&
        Objects.equals(this.wireless, getNetworkFirmwareUpgrades200ResponseProducts.wireless);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliance, camera, cellularGateway, sensor, _switch, wireless);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkFirmwareUpgrades200ResponseProducts {\n");
    sb.append("    appliance: ").append(toIndentedString(appliance)).append("\n");
    sb.append("    camera: ").append(toIndentedString(camera)).append("\n");
    sb.append("    cellularGateway: ").append(toIndentedString(cellularGateway)).append("\n");
    sb.append("    sensor: ").append(toIndentedString(sensor)).append("\n");
    sb.append("    _switch: ").append(toIndentedString(_switch)).append("\n");
    sb.append("    wireless: ").append(toIndentedString(wireless)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appliance");
    openapiFields.add("camera");
    openapiFields.add("cellularGateway");
    openapiFields.add("sensor");
    openapiFields.add("switch");
    openapiFields.add("wireless");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkFirmwareUpgrades200ResponseProducts
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkFirmwareUpgrades200ResponseProducts.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkFirmwareUpgrades200ResponseProducts is not found in the empty JSON string", GetNetworkFirmwareUpgrades200ResponseProducts.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkFirmwareUpgrades200ResponseProducts.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkFirmwareUpgrades200ResponseProducts` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appliance`
      if (jsonObj.get("appliance") != null && !jsonObj.get("appliance").isJsonNull()) {
        GetNetworkFirmwareUpgrades200ResponseProductsAppliance.validateJsonElement(jsonObj.get("appliance"));
      }
      // validate the optional field `camera`
      if (jsonObj.get("camera") != null && !jsonObj.get("camera").isJsonNull()) {
        GetNetworkFirmwareUpgrades200ResponseProductsAppliance.validateJsonElement(jsonObj.get("camera"));
      }
      // validate the optional field `cellularGateway`
      if (jsonObj.get("cellularGateway") != null && !jsonObj.get("cellularGateway").isJsonNull()) {
        GetNetworkFirmwareUpgrades200ResponseProductsAppliance.validateJsonElement(jsonObj.get("cellularGateway"));
      }
      // validate the optional field `sensor`
      if (jsonObj.get("sensor") != null && !jsonObj.get("sensor").isJsonNull()) {
        GetNetworkFirmwareUpgrades200ResponseProductsAppliance.validateJsonElement(jsonObj.get("sensor"));
      }
      // validate the optional field `switch`
      if (jsonObj.get("switch") != null && !jsonObj.get("switch").isJsonNull()) {
        GetNetworkFirmwareUpgrades200ResponseProductsAppliance.validateJsonElement(jsonObj.get("switch"));
      }
      // validate the optional field `wireless`
      if (jsonObj.get("wireless") != null && !jsonObj.get("wireless").isJsonNull()) {
        GetNetworkFirmwareUpgrades200ResponseProductsAppliance.validateJsonElement(jsonObj.get("wireless"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkFirmwareUpgrades200ResponseProducts.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkFirmwareUpgrades200ResponseProducts' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkFirmwareUpgrades200ResponseProducts> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkFirmwareUpgrades200ResponseProducts.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkFirmwareUpgrades200ResponseProducts>() {
           @Override
           public void write(JsonWriter out, GetNetworkFirmwareUpgrades200ResponseProducts value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkFirmwareUpgrades200ResponseProducts read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkFirmwareUpgrades200ResponseProducts given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkFirmwareUpgrades200ResponseProducts
   * @throws IOException if the JSON string is invalid with respect to GetNetworkFirmwareUpgrades200ResponseProducts
   */
  public static GetNetworkFirmwareUpgrades200ResponseProducts fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkFirmwareUpgrades200ResponseProducts.class);
  }

  /**
   * Convert an instance of GetNetworkFirmwareUpgrades200ResponseProducts to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

