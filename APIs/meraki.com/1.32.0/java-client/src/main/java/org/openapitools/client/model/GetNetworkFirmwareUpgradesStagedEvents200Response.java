/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner;
import org.openapitools.client.model.GetNetworkFirmwareUpgradesStagedEvents200ResponseProducts;
import org.openapitools.client.model.GetNetworkFirmwareUpgradesStagedEvents200ResponseStagesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetNetworkFirmwareUpgradesStagedEvents200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetNetworkFirmwareUpgradesStagedEvents200Response {
  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private GetNetworkFirmwareUpgradesStagedEvents200ResponseProducts products;

  public static final String SERIALIZED_NAME_REASONS = "reasons";
  @SerializedName(SERIALIZED_NAME_REASONS)
  private List<CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner> reasons = new ArrayList<>();

  public static final String SERIALIZED_NAME_STAGES = "stages";
  @SerializedName(SERIALIZED_NAME_STAGES)
  private List<GetNetworkFirmwareUpgradesStagedEvents200ResponseStagesInner> stages = new ArrayList<>();

  public GetNetworkFirmwareUpgradesStagedEvents200Response() {
  }

  public GetNetworkFirmwareUpgradesStagedEvents200Response products(GetNetworkFirmwareUpgradesStagedEvents200ResponseProducts products) {
    this.products = products;
    return this;
  }

  /**
   * Get products
   * @return products
   */
  @javax.annotation.Nullable
  public GetNetworkFirmwareUpgradesStagedEvents200ResponseProducts getProducts() {
    return products;
  }

  public void setProducts(GetNetworkFirmwareUpgradesStagedEvents200ResponseProducts products) {
    this.products = products;
  }


  public GetNetworkFirmwareUpgradesStagedEvents200Response reasons(List<CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner> reasons) {
    this.reasons = reasons;
    return this;
  }

  public GetNetworkFirmwareUpgradesStagedEvents200Response addReasonsItem(CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner reasonsItem) {
    if (this.reasons == null) {
      this.reasons = new ArrayList<>();
    }
    this.reasons.add(reasonsItem);
    return this;
  }

  /**
   * Reasons for the rollback
   * @return reasons
   */
  @javax.annotation.Nullable
  public List<CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner> getReasons() {
    return reasons;
  }

  public void setReasons(List<CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner> reasons) {
    this.reasons = reasons;
  }


  public GetNetworkFirmwareUpgradesStagedEvents200Response stages(List<GetNetworkFirmwareUpgradesStagedEvents200ResponseStagesInner> stages) {
    this.stages = stages;
    return this;
  }

  public GetNetworkFirmwareUpgradesStagedEvents200Response addStagesItem(GetNetworkFirmwareUpgradesStagedEvents200ResponseStagesInner stagesItem) {
    if (this.stages == null) {
      this.stages = new ArrayList<>();
    }
    this.stages.add(stagesItem);
    return this;
  }

  /**
   * The ordered stages in the network
   * @return stages
   */
  @javax.annotation.Nullable
  public List<GetNetworkFirmwareUpgradesStagedEvents200ResponseStagesInner> getStages() {
    return stages;
  }

  public void setStages(List<GetNetworkFirmwareUpgradesStagedEvents200ResponseStagesInner> stages) {
    this.stages = stages;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkFirmwareUpgradesStagedEvents200Response getNetworkFirmwareUpgradesStagedEvents200Response = (GetNetworkFirmwareUpgradesStagedEvents200Response) o;
    return Objects.equals(this.products, getNetworkFirmwareUpgradesStagedEvents200Response.products) &&
        Objects.equals(this.reasons, getNetworkFirmwareUpgradesStagedEvents200Response.reasons) &&
        Objects.equals(this.stages, getNetworkFirmwareUpgradesStagedEvents200Response.stages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(products, reasons, stages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkFirmwareUpgradesStagedEvents200Response {\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    reasons: ").append(toIndentedString(reasons)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("products");
    openapiFields.add("reasons");
    openapiFields.add("stages");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetNetworkFirmwareUpgradesStagedEvents200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetNetworkFirmwareUpgradesStagedEvents200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetNetworkFirmwareUpgradesStagedEvents200Response is not found in the empty JSON string", GetNetworkFirmwareUpgradesStagedEvents200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetNetworkFirmwareUpgradesStagedEvents200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetNetworkFirmwareUpgradesStagedEvents200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `products`
      if (jsonObj.get("products") != null && !jsonObj.get("products").isJsonNull()) {
        GetNetworkFirmwareUpgradesStagedEvents200ResponseProducts.validateJsonElement(jsonObj.get("products"));
      }
      if (jsonObj.get("reasons") != null && !jsonObj.get("reasons").isJsonNull()) {
        JsonArray jsonArrayreasons = jsonObj.getAsJsonArray("reasons");
        if (jsonArrayreasons != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reasons").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reasons` to be an array in the JSON string but got `%s`", jsonObj.get("reasons").toString()));
          }

          // validate the optional field `reasons` (array)
          for (int i = 0; i < jsonArrayreasons.size(); i++) {
            CreateNetworkFirmwareUpgradesRollback200ResponseReasonsInner.validateJsonElement(jsonArrayreasons.get(i));
          };
        }
      }
      if (jsonObj.get("stages") != null && !jsonObj.get("stages").isJsonNull()) {
        JsonArray jsonArraystages = jsonObj.getAsJsonArray("stages");
        if (jsonArraystages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("stages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `stages` to be an array in the JSON string but got `%s`", jsonObj.get("stages").toString()));
          }

          // validate the optional field `stages` (array)
          for (int i = 0; i < jsonArraystages.size(); i++) {
            GetNetworkFirmwareUpgradesStagedEvents200ResponseStagesInner.validateJsonElement(jsonArraystages.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetNetworkFirmwareUpgradesStagedEvents200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetNetworkFirmwareUpgradesStagedEvents200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetNetworkFirmwareUpgradesStagedEvents200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetNetworkFirmwareUpgradesStagedEvents200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<GetNetworkFirmwareUpgradesStagedEvents200Response>() {
           @Override
           public void write(JsonWriter out, GetNetworkFirmwareUpgradesStagedEvents200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetNetworkFirmwareUpgradesStagedEvents200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetNetworkFirmwareUpgradesStagedEvents200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetNetworkFirmwareUpgradesStagedEvents200Response
   * @throws IOException if the JSON string is invalid with respect to GetNetworkFirmwareUpgradesStagedEvents200Response
   */
  public static GetNetworkFirmwareUpgradesStagedEvents200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetNetworkFirmwareUpgradesStagedEvents200Response.class);
  }

  /**
   * Convert an instance of GetNetworkFirmwareUpgradesStagedEvents200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

