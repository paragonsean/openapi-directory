/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetOrganizationDevicesStatuses200ResponseComponents;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetOrganizationDevicesStatuses200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:52.491325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOrganizationDevicesStatuses200Response {
  public static final String SERIALIZED_NAME_COMPONENTS = "components";
  @SerializedName(SERIALIZED_NAME_COMPONENTS)
  private GetOrganizationDevicesStatuses200ResponseComponents components;

  public static final String SERIALIZED_NAME_GATEWAY = "gateway";
  @SerializedName(SERIALIZED_NAME_GATEWAY)
  private String gateway;

  public static final String SERIALIZED_NAME_IP_TYPE = "ipType";
  @SerializedName(SERIALIZED_NAME_IP_TYPE)
  private String ipType;

  public static final String SERIALIZED_NAME_LAN_IP = "lanIp";
  @SerializedName(SERIALIZED_NAME_LAN_IP)
  private String lanIp;

  public static final String SERIALIZED_NAME_LAST_REPORTED_AT = "lastReportedAt";
  @SerializedName(SERIALIZED_NAME_LAST_REPORTED_AT)
  private String lastReportedAt;

  public static final String SERIALIZED_NAME_MAC = "mac";
  @SerializedName(SERIALIZED_NAME_MAC)
  private String mac;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK_ID = "networkId";
  @SerializedName(SERIALIZED_NAME_NETWORK_ID)
  private String networkId;

  public static final String SERIALIZED_NAME_PRIMARY_DNS = "primaryDns";
  @SerializedName(SERIALIZED_NAME_PRIMARY_DNS)
  private String primaryDns;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "productType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private String productType;

  public static final String SERIALIZED_NAME_PUBLIC_IP = "publicIp";
  @SerializedName(SERIALIZED_NAME_PUBLIC_IP)
  private String publicIp;

  public static final String SERIALIZED_NAME_SECONDARY_DNS = "secondaryDns";
  @SerializedName(SERIALIZED_NAME_SECONDARY_DNS)
  private String secondaryDns;

  public static final String SERIALIZED_NAME_SERIAL = "serial";
  @SerializedName(SERIALIZED_NAME_SERIAL)
  private String serial;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public GetOrganizationDevicesStatuses200Response() {
  }

  public GetOrganizationDevicesStatuses200Response components(GetOrganizationDevicesStatuses200ResponseComponents components) {
    this.components = components;
    return this;
  }

  /**
   * Get components
   * @return components
   */
  @javax.annotation.Nullable
  public GetOrganizationDevicesStatuses200ResponseComponents getComponents() {
    return components;
  }

  public void setComponents(GetOrganizationDevicesStatuses200ResponseComponents components) {
    this.components = components;
  }


  public GetOrganizationDevicesStatuses200Response gateway(String gateway) {
    this.gateway = gateway;
    return this;
  }

  /**
   * IP Gateway
   * @return gateway
   */
  @javax.annotation.Nullable
  public String getGateway() {
    return gateway;
  }

  public void setGateway(String gateway) {
    this.gateway = gateway;
  }


  public GetOrganizationDevicesStatuses200Response ipType(String ipType) {
    this.ipType = ipType;
    return this;
  }

  /**
   * IP Type
   * @return ipType
   */
  @javax.annotation.Nullable
  public String getIpType() {
    return ipType;
  }

  public void setIpType(String ipType) {
    this.ipType = ipType;
  }


  public GetOrganizationDevicesStatuses200Response lanIp(String lanIp) {
    this.lanIp = lanIp;
    return this;
  }

  /**
   * LAN IP Address
   * @return lanIp
   */
  @javax.annotation.Nullable
  public String getLanIp() {
    return lanIp;
  }

  public void setLanIp(String lanIp) {
    this.lanIp = lanIp;
  }


  public GetOrganizationDevicesStatuses200Response lastReportedAt(String lastReportedAt) {
    this.lastReportedAt = lastReportedAt;
    return this;
  }

  /**
   * Device Last Reported Location
   * @return lastReportedAt
   */
  @javax.annotation.Nullable
  public String getLastReportedAt() {
    return lastReportedAt;
  }

  public void setLastReportedAt(String lastReportedAt) {
    this.lastReportedAt = lastReportedAt;
  }


  public GetOrganizationDevicesStatuses200Response mac(String mac) {
    this.mac = mac;
    return this;
  }

  /**
   * MAC Address
   * @return mac
   */
  @javax.annotation.Nullable
  public String getMac() {
    return mac;
  }

  public void setMac(String mac) {
    this.mac = mac;
  }


  public GetOrganizationDevicesStatuses200Response model(String model) {
    this.model = model;
    return this;
  }

  /**
   * Model
   * @return model
   */
  @javax.annotation.Nullable
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }


  public GetOrganizationDevicesStatuses200Response name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Device Name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetOrganizationDevicesStatuses200Response networkId(String networkId) {
    this.networkId = networkId;
    return this;
  }

  /**
   * Network ID
   * @return networkId
   */
  @javax.annotation.Nullable
  public String getNetworkId() {
    return networkId;
  }

  public void setNetworkId(String networkId) {
    this.networkId = networkId;
  }


  public GetOrganizationDevicesStatuses200Response primaryDns(String primaryDns) {
    this.primaryDns = primaryDns;
    return this;
  }

  /**
   * Primary DNS
   * @return primaryDns
   */
  @javax.annotation.Nullable
  public String getPrimaryDns() {
    return primaryDns;
  }

  public void setPrimaryDns(String primaryDns) {
    this.primaryDns = primaryDns;
  }


  public GetOrganizationDevicesStatuses200Response productType(String productType) {
    this.productType = productType;
    return this;
  }

  /**
   * Product Type
   * @return productType
   */
  @javax.annotation.Nullable
  public String getProductType() {
    return productType;
  }

  public void setProductType(String productType) {
    this.productType = productType;
  }


  public GetOrganizationDevicesStatuses200Response publicIp(String publicIp) {
    this.publicIp = publicIp;
    return this;
  }

  /**
   * Public IP Address
   * @return publicIp
   */
  @javax.annotation.Nullable
  public String getPublicIp() {
    return publicIp;
  }

  public void setPublicIp(String publicIp) {
    this.publicIp = publicIp;
  }


  public GetOrganizationDevicesStatuses200Response secondaryDns(String secondaryDns) {
    this.secondaryDns = secondaryDns;
    return this;
  }

  /**
   * Secondary DNS
   * @return secondaryDns
   */
  @javax.annotation.Nullable
  public String getSecondaryDns() {
    return secondaryDns;
  }

  public void setSecondaryDns(String secondaryDns) {
    this.secondaryDns = secondaryDns;
  }


  public GetOrganizationDevicesStatuses200Response serial(String serial) {
    this.serial = serial;
    return this;
  }

  /**
   * Device Serial Number
   * @return serial
   */
  @javax.annotation.Nullable
  public String getSerial() {
    return serial;
  }

  public void setSerial(String serial) {
    this.serial = serial;
  }


  public GetOrganizationDevicesStatuses200Response status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Device Status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GetOrganizationDevicesStatuses200Response tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public GetOrganizationDevicesStatuses200Response addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrganizationDevicesStatuses200Response getOrganizationDevicesStatuses200Response = (GetOrganizationDevicesStatuses200Response) o;
    return Objects.equals(this.components, getOrganizationDevicesStatuses200Response.components) &&
        Objects.equals(this.gateway, getOrganizationDevicesStatuses200Response.gateway) &&
        Objects.equals(this.ipType, getOrganizationDevicesStatuses200Response.ipType) &&
        Objects.equals(this.lanIp, getOrganizationDevicesStatuses200Response.lanIp) &&
        Objects.equals(this.lastReportedAt, getOrganizationDevicesStatuses200Response.lastReportedAt) &&
        Objects.equals(this.mac, getOrganizationDevicesStatuses200Response.mac) &&
        Objects.equals(this.model, getOrganizationDevicesStatuses200Response.model) &&
        Objects.equals(this.name, getOrganizationDevicesStatuses200Response.name) &&
        Objects.equals(this.networkId, getOrganizationDevicesStatuses200Response.networkId) &&
        Objects.equals(this.primaryDns, getOrganizationDevicesStatuses200Response.primaryDns) &&
        Objects.equals(this.productType, getOrganizationDevicesStatuses200Response.productType) &&
        Objects.equals(this.publicIp, getOrganizationDevicesStatuses200Response.publicIp) &&
        Objects.equals(this.secondaryDns, getOrganizationDevicesStatuses200Response.secondaryDns) &&
        Objects.equals(this.serial, getOrganizationDevicesStatuses200Response.serial) &&
        Objects.equals(this.status, getOrganizationDevicesStatuses200Response.status) &&
        Objects.equals(this.tags, getOrganizationDevicesStatuses200Response.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(components, gateway, ipType, lanIp, lastReportedAt, mac, model, name, networkId, primaryDns, productType, publicIp, secondaryDns, serial, status, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrganizationDevicesStatuses200Response {\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    ipType: ").append(toIndentedString(ipType)).append("\n");
    sb.append("    lanIp: ").append(toIndentedString(lanIp)).append("\n");
    sb.append("    lastReportedAt: ").append(toIndentedString(lastReportedAt)).append("\n");
    sb.append("    mac: ").append(toIndentedString(mac)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networkId: ").append(toIndentedString(networkId)).append("\n");
    sb.append("    primaryDns: ").append(toIndentedString(primaryDns)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    publicIp: ").append(toIndentedString(publicIp)).append("\n");
    sb.append("    secondaryDns: ").append(toIndentedString(secondaryDns)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("components");
    openapiFields.add("gateway");
    openapiFields.add("ipType");
    openapiFields.add("lanIp");
    openapiFields.add("lastReportedAt");
    openapiFields.add("mac");
    openapiFields.add("model");
    openapiFields.add("name");
    openapiFields.add("networkId");
    openapiFields.add("primaryDns");
    openapiFields.add("productType");
    openapiFields.add("publicIp");
    openapiFields.add("secondaryDns");
    openapiFields.add("serial");
    openapiFields.add("status");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOrganizationDevicesStatuses200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOrganizationDevicesStatuses200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrganizationDevicesStatuses200Response is not found in the empty JSON string", GetOrganizationDevicesStatuses200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOrganizationDevicesStatuses200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrganizationDevicesStatuses200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `components`
      if (jsonObj.get("components") != null && !jsonObj.get("components").isJsonNull()) {
        GetOrganizationDevicesStatuses200ResponseComponents.validateJsonElement(jsonObj.get("components"));
      }
      if ((jsonObj.get("gateway") != null && !jsonObj.get("gateway").isJsonNull()) && !jsonObj.get("gateway").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gateway` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gateway").toString()));
      }
      if ((jsonObj.get("ipType") != null && !jsonObj.get("ipType").isJsonNull()) && !jsonObj.get("ipType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipType").toString()));
      }
      if ((jsonObj.get("lanIp") != null && !jsonObj.get("lanIp").isJsonNull()) && !jsonObj.get("lanIp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lanIp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lanIp").toString()));
      }
      if ((jsonObj.get("lastReportedAt") != null && !jsonObj.get("lastReportedAt").isJsonNull()) && !jsonObj.get("lastReportedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastReportedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastReportedAt").toString()));
      }
      if ((jsonObj.get("mac") != null && !jsonObj.get("mac").isJsonNull()) && !jsonObj.get("mac").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mac` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mac").toString()));
      }
      if ((jsonObj.get("model") != null && !jsonObj.get("model").isJsonNull()) && !jsonObj.get("model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("networkId") != null && !jsonObj.get("networkId").isJsonNull()) && !jsonObj.get("networkId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `networkId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("networkId").toString()));
      }
      if ((jsonObj.get("primaryDns") != null && !jsonObj.get("primaryDns").isJsonNull()) && !jsonObj.get("primaryDns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryDns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryDns").toString()));
      }
      if ((jsonObj.get("productType") != null && !jsonObj.get("productType").isJsonNull()) && !jsonObj.get("productType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productType").toString()));
      }
      if ((jsonObj.get("publicIp") != null && !jsonObj.get("publicIp").isJsonNull()) && !jsonObj.get("publicIp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicIp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicIp").toString()));
      }
      if ((jsonObj.get("secondaryDns") != null && !jsonObj.get("secondaryDns").isJsonNull()) && !jsonObj.get("secondaryDns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryDns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryDns").toString()));
      }
      if ((jsonObj.get("serial") != null && !jsonObj.get("serial").isJsonNull()) && !jsonObj.get("serial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serial").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOrganizationDevicesStatuses200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOrganizationDevicesStatuses200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOrganizationDevicesStatuses200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOrganizationDevicesStatuses200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOrganizationDevicesStatuses200Response>() {
           @Override
           public void write(JsonWriter out, GetOrganizationDevicesStatuses200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOrganizationDevicesStatuses200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOrganizationDevicesStatuses200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOrganizationDevicesStatuses200Response
   * @throws IOException if the JSON string is invalid with respect to GetOrganizationDevicesStatuses200Response
   */
  public static GetOrganizationDevicesStatuses200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOrganizationDevicesStatuses200Response.class);
  }

  /**
   * Convert an instance of GetOrganizationDevicesStatuses200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

