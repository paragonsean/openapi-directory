/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrganizationAdaptivePolicyAclRequest;
import org.openapitools.client.model.UpdateOrganizationAdaptivePolicyAclRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AclsApi
 */
@Disabled
public class AclsApiTest {

    private final AclsApi api = new AclsApi();

    /**
     * Creates new adaptive policy ACL
     *
     * Creates new adaptive policy ACL
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationAdaptivePolicyAcl_2Test() throws ApiException {
        String organizationId = null;
        CreateOrganizationAdaptivePolicyAclRequest createOrganizationAdaptivePolicyAclRequest = null;
        Object response = api.createOrganizationAdaptivePolicyAcl_2(organizationId, createOrganizationAdaptivePolicyAclRequest);
        // TODO: test validations
    }

    /**
     * Deletes the specified adaptive policy ACL
     *
     * Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganizationAdaptivePolicyAcl_2Test() throws ApiException {
        String organizationId = null;
        String aclId = null;
        api.deleteOrganizationAdaptivePolicyAcl_2(organizationId, aclId);
        // TODO: test validations
    }

    /**
     * Returns the adaptive policy ACL information
     *
     * Returns the adaptive policy ACL information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationAdaptivePolicyAcl_2Test() throws ApiException {
        String organizationId = null;
        String aclId = null;
        Object response = api.getOrganizationAdaptivePolicyAcl_2(organizationId, aclId);
        // TODO: test validations
    }

    /**
     * List adaptive policy ACLs in a organization
     *
     * List adaptive policy ACLs in a organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationAdaptivePolicyAcls_2Test() throws ApiException {
        String organizationId = null;
        List<Object> response = api.getOrganizationAdaptivePolicyAcls_2(organizationId);
        // TODO: test validations
    }

    /**
     * Updates an adaptive policy ACL
     *
     * Updates an adaptive policy ACL
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationAdaptivePolicyAcl_2Test() throws ApiException {
        String organizationId = null;
        String aclId = null;
        UpdateOrganizationAdaptivePolicyAclRequest updateOrganizationAdaptivePolicyAclRequest = null;
        Object response = api.updateOrganizationAdaptivePolicyAcl_2(organizationId, aclId, updateOrganizationAdaptivePolicyAclRequest);
        // TODO: test validations
    }

}
