/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrganizationActionBatch201Response;
import org.openapitools.client.model.CreateOrganizationActionBatchRequest;
import org.openapitools.client.model.UpdateOrganizationActionBatchRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ActionBatchesApi
 */
@Disabled
public class ActionBatchesApiTest {

    private final ActionBatchesApi api = new ActionBatchesApi();

    /**
     * Create an action batch
     *
     * Create an action batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationActionBatch_1Test() throws ApiException {
        String organizationId = null;
        CreateOrganizationActionBatchRequest createOrganizationActionBatchRequest = null;
        CreateOrganizationActionBatch201Response response = api.createOrganizationActionBatch_1(organizationId, createOrganizationActionBatchRequest);
        // TODO: test validations
    }

    /**
     * Delete an action batch
     *
     * Delete an action batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganizationActionBatch_1Test() throws ApiException {
        String organizationId = null;
        String actionBatchId = null;
        api.deleteOrganizationActionBatch_1(organizationId, actionBatchId);
        // TODO: test validations
    }

    /**
     * Return an action batch
     *
     * Return an action batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationActionBatch_1Test() throws ApiException {
        String organizationId = null;
        String actionBatchId = null;
        CreateOrganizationActionBatch201Response response = api.getOrganizationActionBatch_1(organizationId, actionBatchId);
        // TODO: test validations
    }

    /**
     * Return the list of action batches in the organization
     *
     * Return the list of action batches in the organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationActionBatches_1Test() throws ApiException {
        String organizationId = null;
        String status = null;
        List<Object> response = api.getOrganizationActionBatches_1(organizationId, status);
        // TODO: test validations
    }

    /**
     * Update an action batch
     *
     * Update an action batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationActionBatch_1Test() throws ApiException {
        String organizationId = null;
        String actionBatchId = null;
        UpdateOrganizationActionBatchRequest updateOrganizationActionBatchRequest = null;
        Object response = api.updateOrganizationActionBatch_1(organizationId, actionBatchId, updateOrganizationActionBatchRequest);
        // TODO: test validations
    }

}
