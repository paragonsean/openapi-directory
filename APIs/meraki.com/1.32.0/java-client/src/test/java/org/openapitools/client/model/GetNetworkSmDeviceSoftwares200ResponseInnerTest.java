/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetNetworkSmDeviceSoftwares200ResponseInner
 */
public class GetNetworkSmDeviceSoftwares200ResponseInnerTest {
    private final GetNetworkSmDeviceSoftwares200ResponseInner model = new GetNetworkSmDeviceSoftwares200ResponseInner();

    /**
     * Model tests for GetNetworkSmDeviceSoftwares200ResponseInner
     */
    @Test
    public void testGetNetworkSmDeviceSoftwares200ResponseInner() {
        // TODO: test GetNetworkSmDeviceSoftwares200ResponseInner
    }

    /**
     * Test the property 'appId'
     */
    @Test
    public void appIdTest() {
        // TODO: test appId
    }

    /**
     * Test the property 'bundleSize'
     */
    @Test
    public void bundleSizeTest() {
        // TODO: test bundleSize
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'deviceId'
     */
    @Test
    public void deviceIdTest() {
        // TODO: test deviceId
    }

    /**
     * Test the property 'dynamicSize'
     */
    @Test
    public void dynamicSizeTest() {
        // TODO: test dynamicSize
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'identifier'
     */
    @Test
    public void identifierTest() {
        // TODO: test identifier
    }

    /**
     * Test the property 'installedAt'
     */
    @Test
    public void installedAtTest() {
        // TODO: test installedAt
    }

    /**
     * Test the property 'iosRedemptionCode'
     */
    @Test
    public void iosRedemptionCodeTest() {
        // TODO: test iosRedemptionCode
    }

    /**
     * Test the property 'isManaged'
     */
    @Test
    public void isManagedTest() {
        // TODO: test isManaged
    }

    /**
     * Test the property 'itunesId'
     */
    @Test
    public void itunesIdTest() {
        // TODO: test itunesId
    }

    /**
     * Test the property 'licenseKey'
     */
    @Test
    public void licenseKeyTest() {
        // TODO: test licenseKey
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'redemptionCode'
     */
    @Test
    public void redemptionCodeTest() {
        // TODO: test redemptionCode
    }

    /**
     * Test the property 'shortVersion'
     */
    @Test
    public void shortVersionTest() {
        // TODO: test shortVersion
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'toInstall'
     */
    @Test
    public void toInstallTest() {
        // TODO: test toInstall
    }

    /**
     * Test the property 'toUninstall'
     */
    @Test
    public void toUninstallTest() {
        // TODO: test toUninstall
    }

    /**
     * Test the property 'uninstalledAt'
     */
    @Test
    public void uninstalledAtTest() {
        // TODO: test uninstalledAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'vendor'
     */
    @Test
    public void vendorTest() {
        // TODO: test vendor
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
