/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetOrganizationCellularGatewayUplinkStatuses200ResponseInner;
import org.openapitools.client.model.UpdateNetworkCellularGatewayUplinkRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UplinkApi
 */
@Disabled
public class UplinkApiTest {

    private final UplinkApi api = new UplinkApi();

    /**
     * Returns the uplink settings for your MG network.
     *
     * Returns the uplink settings for your MG network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkCellularGatewayUplink_1Test() throws ApiException {
        String networkId = null;
        Object response = api.getNetworkCellularGatewayUplink_1(networkId);
        // TODO: test validations
    }

    /**
     * List the uplink status of every Meraki MG cellular gateway in the organization
     *
     * List the uplink status of every Meraki MG cellular gateway in the organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationCellularGatewayUplinkStatuses_1Test() throws ApiException {
        String organizationId = null;
        Integer perPage = null;
        String startingAfter = null;
        String endingBefore = null;
        List<String> networkIds = null;
        List<String> serials = null;
        List<String> iccids = null;
        List<GetOrganizationCellularGatewayUplinkStatuses200ResponseInner> response = api.getOrganizationCellularGatewayUplinkStatuses_1(organizationId, perPage, startingAfter, endingBefore, networkIds, serials, iccids);
        // TODO: test validations
    }

    /**
     * Updates the uplink settings for your MG network.
     *
     * Updates the uplink settings for your MG network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkCellularGatewayUplink_1Test() throws ApiException {
        String networkId = null;
        UpdateNetworkCellularGatewayUplinkRequest updateNetworkCellularGatewayUplinkRequest = null;
        Object response = api.updateNetworkCellularGatewayUplink_1(networkId, updateNetworkCellularGatewayUplinkRequest);
        // TODO: test validations
    }

}
