/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrganizationConfigTemplateRequest;
import org.openapitools.client.model.GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner;
import org.openapitools.client.model.GetOrganizationConfigTemplateSwitchProfiles200Response;
import org.openapitools.client.model.UpdateOrganizationConfigTemplateRequest;
import org.openapitools.client.model.UpdateOrganizationConfigTemplateSwitchProfilePortRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigTemplatesApi
 */
@Disabled
public class ConfigTemplatesApiTest {

    private final ConfigTemplatesApi api = new ConfigTemplatesApi();

    /**
     * Create a new configuration template
     *
     * Create a new configuration template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationConfigTemplate_1Test() throws ApiException {
        String organizationId = null;
        CreateOrganizationConfigTemplateRequest createOrganizationConfigTemplateRequest = null;
        Object response = api.createOrganizationConfigTemplate_1(organizationId, createOrganizationConfigTemplateRequest);
        // TODO: test validations
    }

    /**
     * Remove a configuration template
     *
     * Remove a configuration template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganizationConfigTemplate_1Test() throws ApiException {
        String organizationId = null;
        String configTemplateId = null;
        api.deleteOrganizationConfigTemplate_1(organizationId, configTemplateId);
        // TODO: test validations
    }

    /**
     * Return a switch profile port
     *
     * Return a switch profile port
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationConfigTemplateSwitchProfilePort_1Test() throws ApiException {
        String organizationId = null;
        String configTemplateId = null;
        String profileId = null;
        String portId = null;
        GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner response = api.getOrganizationConfigTemplateSwitchProfilePort_1(organizationId, configTemplateId, profileId, portId);
        // TODO: test validations
    }

    /**
     * Return all the ports of a switch profile
     *
     * Return all the ports of a switch profile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationConfigTemplateSwitchProfilePorts_1Test() throws ApiException {
        String organizationId = null;
        String configTemplateId = null;
        String profileId = null;
        List<GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner> response = api.getOrganizationConfigTemplateSwitchProfilePorts_1(organizationId, configTemplateId, profileId);
        // TODO: test validations
    }

    /**
     * List the switch profiles for your switch template configuration
     *
     * List the switch profiles for your switch template configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationConfigTemplateSwitchProfiles_1Test() throws ApiException {
        String organizationId = null;
        String configTemplateId = null;
        GetOrganizationConfigTemplateSwitchProfiles200Response response = api.getOrganizationConfigTemplateSwitchProfiles_1(organizationId, configTemplateId);
        // TODO: test validations
    }

    /**
     * Return a single configuration template
     *
     * Return a single configuration template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationConfigTemplate_1Test() throws ApiException {
        String organizationId = null;
        String configTemplateId = null;
        Object response = api.getOrganizationConfigTemplate_1(organizationId, configTemplateId);
        // TODO: test validations
    }

    /**
     * List the configuration templates for this organization
     *
     * List the configuration templates for this organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationConfigTemplates_1Test() throws ApiException {
        String organizationId = null;
        List<Object> response = api.getOrganizationConfigTemplates_1(organizationId);
        // TODO: test validations
    }

    /**
     * Update a switch profile port
     *
     * Update a switch profile port
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationConfigTemplateSwitchProfilePort_1Test() throws ApiException {
        String organizationId = null;
        String configTemplateId = null;
        String profileId = null;
        String portId = null;
        UpdateOrganizationConfigTemplateSwitchProfilePortRequest updateOrganizationConfigTemplateSwitchProfilePortRequest = null;
        GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner response = api.updateOrganizationConfigTemplateSwitchProfilePort_1(organizationId, configTemplateId, profileId, portId, updateOrganizationConfigTemplateSwitchProfilePortRequest);
        // TODO: test validations
    }

    /**
     * Update a configuration template
     *
     * Update a configuration template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationConfigTemplate_1Test() throws ApiException {
        String organizationId = null;
        String configTemplateId = null;
        UpdateOrganizationConfigTemplateRequest updateOrganizationConfigTemplateRequest = null;
        Object response = api.updateOrganizationConfigTemplate_1(organizationId, configTemplateId, updateOrganizationConfigTemplateRequest);
        // TODO: test validations
    }

}
