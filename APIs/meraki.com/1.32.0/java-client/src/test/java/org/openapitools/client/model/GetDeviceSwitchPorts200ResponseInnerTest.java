/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetDeviceSwitchPorts200ResponseInnerProfile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetDeviceSwitchPorts200ResponseInner
 */
public class GetDeviceSwitchPorts200ResponseInnerTest {
    private final GetDeviceSwitchPorts200ResponseInner model = new GetDeviceSwitchPorts200ResponseInner();

    /**
     * Model tests for GetDeviceSwitchPorts200ResponseInner
     */
    @Test
    public void testGetDeviceSwitchPorts200ResponseInner() {
        // TODO: test GetDeviceSwitchPorts200ResponseInner
    }

    /**
     * Test the property 'accessPolicyNumber'
     */
    @Test
    public void accessPolicyNumberTest() {
        // TODO: test accessPolicyNumber
    }

    /**
     * Test the property 'accessPolicyType'
     */
    @Test
    public void accessPolicyTypeTest() {
        // TODO: test accessPolicyType
    }

    /**
     * Test the property 'adaptivePolicyGroupId'
     */
    @Test
    public void adaptivePolicyGroupIdTest() {
        // TODO: test adaptivePolicyGroupId
    }

    /**
     * Test the property 'allowedVlans'
     */
    @Test
    public void allowedVlansTest() {
        // TODO: test allowedVlans
    }

    /**
     * Test the property 'daiTrusted'
     */
    @Test
    public void daiTrustedTest() {
        // TODO: test daiTrusted
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'flexibleStackingEnabled'
     */
    @Test
    public void flexibleStackingEnabledTest() {
        // TODO: test flexibleStackingEnabled
    }

    /**
     * Test the property 'isolationEnabled'
     */
    @Test
    public void isolationEnabledTest() {
        // TODO: test isolationEnabled
    }

    /**
     * Test the property 'linkNegotiation'
     */
    @Test
    public void linkNegotiationTest() {
        // TODO: test linkNegotiation
    }

    /**
     * Test the property 'linkNegotiationCapabilities'
     */
    @Test
    public void linkNegotiationCapabilitiesTest() {
        // TODO: test linkNegotiationCapabilities
    }

    /**
     * Test the property 'macAllowList'
     */
    @Test
    public void macAllowListTest() {
        // TODO: test macAllowList
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'peerSgtCapable'
     */
    @Test
    public void peerSgtCapableTest() {
        // TODO: test peerSgtCapable
    }

    /**
     * Test the property 'poeEnabled'
     */
    @Test
    public void poeEnabledTest() {
        // TODO: test poeEnabled
    }

    /**
     * Test the property 'portId'
     */
    @Test
    public void portIdTest() {
        // TODO: test portId
    }

    /**
     * Test the property 'portScheduleId'
     */
    @Test
    public void portScheduleIdTest() {
        // TODO: test portScheduleId
    }

    /**
     * Test the property 'profile'
     */
    @Test
    public void profileTest() {
        // TODO: test profile
    }

    /**
     * Test the property 'rstpEnabled'
     */
    @Test
    public void rstpEnabledTest() {
        // TODO: test rstpEnabled
    }

    /**
     * Test the property 'stickyMacAllowList'
     */
    @Test
    public void stickyMacAllowListTest() {
        // TODO: test stickyMacAllowList
    }

    /**
     * Test the property 'stickyMacAllowListLimit'
     */
    @Test
    public void stickyMacAllowListLimitTest() {
        // TODO: test stickyMacAllowListLimit
    }

    /**
     * Test the property 'stormControlEnabled'
     */
    @Test
    public void stormControlEnabledTest() {
        // TODO: test stormControlEnabled
    }

    /**
     * Test the property 'stpGuard'
     */
    @Test
    public void stpGuardTest() {
        // TODO: test stpGuard
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'udld'
     */
    @Test
    public void udldTest() {
        // TODO: test udld
    }

    /**
     * Test the property 'vlan'
     */
    @Test
    public void vlanTest() {
        // TODO: test vlan
    }

    /**
     * Test the property 'voiceVlan'
     */
    @Test
    public void voiceVlanTest() {
        // TODO: test voiceVlan
    }

}
