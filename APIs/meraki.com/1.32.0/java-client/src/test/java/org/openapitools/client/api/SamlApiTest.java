/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrganizationSamlIdpRequest;
import org.openapitools.client.model.GetOrganizationSaml200Response;
import org.openapitools.client.model.GetOrganizationSamlIdps200ResponseInner;
import org.openapitools.client.model.UpdateOrganizationSamlIdpRequest;
import org.openapitools.client.model.UpdateOrganizationSamlRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SamlApi
 */
@Disabled
public class SamlApiTest {

    private final SamlApi api = new SamlApi();

    /**
     * Create a SAML IdP for your organization.
     *
     * Create a SAML IdP for your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationSamlIdp_1Test() throws ApiException {
        String organizationId = null;
        CreateOrganizationSamlIdpRequest createOrganizationSamlIdpRequest = null;
        List<GetOrganizationSamlIdps200ResponseInner> response = api.createOrganizationSamlIdp_1(organizationId, createOrganizationSamlIdpRequest);
        // TODO: test validations
    }

    /**
     * Remove a SAML IdP in your organization.
     *
     * Remove a SAML IdP in your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganizationSamlIdp_1Test() throws ApiException {
        String organizationId = null;
        String idpId = null;
        api.deleteOrganizationSamlIdp_1(organizationId, idpId);
        // TODO: test validations
    }

    /**
     * Get a SAML IdP from your organization.
     *
     * Get a SAML IdP from your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSamlIdp_1Test() throws ApiException {
        String organizationId = null;
        String idpId = null;
        GetOrganizationSamlIdps200ResponseInner response = api.getOrganizationSamlIdp_1(organizationId, idpId);
        // TODO: test validations
    }

    /**
     * List the SAML IdPs in your organization.
     *
     * List the SAML IdPs in your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSamlIdps_1Test() throws ApiException {
        String organizationId = null;
        List<GetOrganizationSamlIdps200ResponseInner> response = api.getOrganizationSamlIdps_1(organizationId);
        // TODO: test validations
    }

    /**
     * Returns the SAML SSO enabled settings for an organization.
     *
     * Returns the SAML SSO enabled settings for an organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSaml_1Test() throws ApiException {
        String organizationId = null;
        GetOrganizationSaml200Response response = api.getOrganizationSaml_1(organizationId);
        // TODO: test validations
    }

    /**
     * Update a SAML IdP in your organization
     *
     * Update a SAML IdP in your organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationSamlIdp_1Test() throws ApiException {
        String organizationId = null;
        String idpId = null;
        UpdateOrganizationSamlIdpRequest updateOrganizationSamlIdpRequest = null;
        List<GetOrganizationSamlIdps200ResponseInner> response = api.updateOrganizationSamlIdp_1(organizationId, idpId, updateOrganizationSamlIdpRequest);
        // TODO: test validations
    }

    /**
     * Updates the SAML SSO enabled settings for an organization.
     *
     * Updates the SAML SSO enabled settings for an organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationSaml_1Test() throws ApiException {
        String organizationId = null;
        UpdateOrganizationSamlRequest updateOrganizationSamlRequest = null;
        GetOrganizationSaml200Response response = api.updateOrganizationSaml_1(organizationId, updateOrganizationSamlRequest);
        // TODO: test validations
    }

}
