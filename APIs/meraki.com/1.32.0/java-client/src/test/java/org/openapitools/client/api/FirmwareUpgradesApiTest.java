/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateNetworkFirmwareUpgradesRollback200Response;
import org.openapitools.client.model.CreateNetworkFirmwareUpgradesRollbackRequest;
import org.openapitools.client.model.CreateNetworkFirmwareUpgradesStagedEventRequest;
import org.openapitools.client.model.CreateNetworkFirmwareUpgradesStagedGroupRequest;
import org.openapitools.client.model.GetNetworkFirmwareUpgrades200Response;
import org.openapitools.client.model.GetNetworkFirmwareUpgradesStagedEvents200Response;
import org.openapitools.client.model.GetNetworkFirmwareUpgradesStagedGroups200ResponseInner;
import org.openapitools.client.model.GetNetworkFirmwareUpgradesStagedStages200ResponseInner;
import org.openapitools.client.model.RollbacksNetworkFirmwareUpgradesStagedEventsRequest;
import org.openapitools.client.model.UpdateNetworkFirmwareUpgradesRequest;
import org.openapitools.client.model.UpdateNetworkFirmwareUpgradesStagedEventsRequest;
import org.openapitools.client.model.UpdateNetworkFirmwareUpgradesStagedStagesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FirmwareUpgradesApi
 */
@Disabled
public class FirmwareUpgradesApiTest {

    private final FirmwareUpgradesApi api = new FirmwareUpgradesApi();

    /**
     * Rollback a Firmware Upgrade For A Network
     *
     * Rollback a Firmware Upgrade For A Network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNetworkFirmwareUpgradesRollback_1Test() throws ApiException {
        String networkId = null;
        CreateNetworkFirmwareUpgradesRollbackRequest createNetworkFirmwareUpgradesRollbackRequest = null;
        CreateNetworkFirmwareUpgradesRollback200Response response = api.createNetworkFirmwareUpgradesRollback_1(networkId, createNetworkFirmwareUpgradesRollbackRequest);
        // TODO: test validations
    }

    /**
     * Create a Staged Upgrade Event for a network
     *
     * Create a Staged Upgrade Event for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNetworkFirmwareUpgradesStagedEvent_1Test() throws ApiException {
        String networkId = null;
        CreateNetworkFirmwareUpgradesStagedEventRequest createNetworkFirmwareUpgradesStagedEventRequest = null;
        GetNetworkFirmwareUpgradesStagedEvents200Response response = api.createNetworkFirmwareUpgradesStagedEvent_1(networkId, createNetworkFirmwareUpgradesStagedEventRequest);
        // TODO: test validations
    }

    /**
     * Create a Staged Upgrade Group for a network
     *
     * Create a Staged Upgrade Group for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNetworkFirmwareUpgradesStagedGroup_1Test() throws ApiException {
        String networkId = null;
        CreateNetworkFirmwareUpgradesStagedGroupRequest createNetworkFirmwareUpgradesStagedGroupRequest = null;
        Object response = api.createNetworkFirmwareUpgradesStagedGroup_1(networkId, createNetworkFirmwareUpgradesStagedGroupRequest);
        // TODO: test validations
    }

    /**
     * Postpone by 1 week all pending staged upgrade stages for a network
     *
     * Postpone by 1 week all pending staged upgrade stages for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deferNetworkFirmwareUpgradesStagedEvents_1Test() throws ApiException {
        String networkId = null;
        GetNetworkFirmwareUpgradesStagedEvents200Response response = api.deferNetworkFirmwareUpgradesStagedEvents_1(networkId);
        // TODO: test validations
    }

    /**
     * Delete a Staged Upgrade Group
     *
     * Delete a Staged Upgrade Group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteNetworkFirmwareUpgradesStagedGroup_1Test() throws ApiException {
        String networkId = null;
        String groupId = null;
        api.deleteNetworkFirmwareUpgradesStagedGroup_1(networkId, groupId);
        // TODO: test validations
    }

    /**
     * Get the Staged Upgrade Event from a network
     *
     * Get the Staged Upgrade Event from a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkFirmwareUpgradesStagedEvents_1Test() throws ApiException {
        String networkId = null;
        GetNetworkFirmwareUpgradesStagedEvents200Response response = api.getNetworkFirmwareUpgradesStagedEvents_1(networkId);
        // TODO: test validations
    }

    /**
     * Get a Staged Upgrade Group from a network
     *
     * Get a Staged Upgrade Group from a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkFirmwareUpgradesStagedGroup_1Test() throws ApiException {
        String networkId = null;
        String groupId = null;
        GetNetworkFirmwareUpgradesStagedGroups200ResponseInner response = api.getNetworkFirmwareUpgradesStagedGroup_1(networkId, groupId);
        // TODO: test validations
    }

    /**
     * List of Staged Upgrade Groups in a network
     *
     * List of Staged Upgrade Groups in a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkFirmwareUpgradesStagedGroups_1Test() throws ApiException {
        String networkId = null;
        List<GetNetworkFirmwareUpgradesStagedGroups200ResponseInner> response = api.getNetworkFirmwareUpgradesStagedGroups_1(networkId);
        // TODO: test validations
    }

    /**
     * Order of Staged Upgrade Groups in a network
     *
     * Order of Staged Upgrade Groups in a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkFirmwareUpgradesStagedStages_1Test() throws ApiException {
        String networkId = null;
        List<GetNetworkFirmwareUpgradesStagedStages200ResponseInner> response = api.getNetworkFirmwareUpgradesStagedStages_1(networkId);
        // TODO: test validations
    }

    /**
     * Get firmware upgrade information for a network
     *
     * Get firmware upgrade information for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkFirmwareUpgrades_1Test() throws ApiException {
        String networkId = null;
        GetNetworkFirmwareUpgrades200Response response = api.getNetworkFirmwareUpgrades_1(networkId);
        // TODO: test validations
    }

    /**
     * Rollback a Staged Upgrade Event for a network
     *
     * Rollback a Staged Upgrade Event for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rollbacksNetworkFirmwareUpgradesStagedEvents_1Test() throws ApiException {
        String networkId = null;
        RollbacksNetworkFirmwareUpgradesStagedEventsRequest rollbacksNetworkFirmwareUpgradesStagedEventsRequest = null;
        GetNetworkFirmwareUpgradesStagedEvents200Response response = api.rollbacksNetworkFirmwareUpgradesStagedEvents_1(networkId, rollbacksNetworkFirmwareUpgradesStagedEventsRequest);
        // TODO: test validations
    }

    /**
     * Update the Staged Upgrade Event for a network
     *
     * Update the Staged Upgrade Event for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkFirmwareUpgradesStagedEvents_1Test() throws ApiException {
        String networkId = null;
        UpdateNetworkFirmwareUpgradesStagedEventsRequest updateNetworkFirmwareUpgradesStagedEventsRequest = null;
        GetNetworkFirmwareUpgradesStagedEvents200Response response = api.updateNetworkFirmwareUpgradesStagedEvents_1(networkId, updateNetworkFirmwareUpgradesStagedEventsRequest);
        // TODO: test validations
    }

    /**
     * Update a Staged Upgrade Group for a network
     *
     * Update a Staged Upgrade Group for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkFirmwareUpgradesStagedGroup_1Test() throws ApiException {
        String networkId = null;
        String groupId = null;
        CreateNetworkFirmwareUpgradesStagedGroupRequest createNetworkFirmwareUpgradesStagedGroupRequest = null;
        Object response = api.updateNetworkFirmwareUpgradesStagedGroup_1(networkId, groupId, createNetworkFirmwareUpgradesStagedGroupRequest);
        // TODO: test validations
    }

    /**
     * Assign Staged Upgrade Group order in the sequence.
     *
     * Assign Staged Upgrade Group order in the sequence.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkFirmwareUpgradesStagedStages_1Test() throws ApiException {
        String networkId = null;
        UpdateNetworkFirmwareUpgradesStagedStagesRequest updateNetworkFirmwareUpgradesStagedStagesRequest = null;
        List<GetNetworkFirmwareUpgradesStagedStages200ResponseInner> response = api.updateNetworkFirmwareUpgradesStagedStages_1(networkId, updateNetworkFirmwareUpgradesStagedStagesRequest);
        // TODO: test validations
    }

    /**
     * Update firmware upgrade information for a network
     *
     * Update firmware upgrade information for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkFirmwareUpgrades_1Test() throws ApiException {
        String networkId = null;
        UpdateNetworkFirmwareUpgradesRequest updateNetworkFirmwareUpgradesRequest = null;
        GetNetworkFirmwareUpgrades200Response response = api.updateNetworkFirmwareUpgrades_1(networkId, updateNetworkFirmwareUpgradesRequest);
        // TODO: test validations
    }

}
