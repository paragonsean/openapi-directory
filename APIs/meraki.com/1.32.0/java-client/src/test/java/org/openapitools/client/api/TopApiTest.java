/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner;
import org.openapitools.client.model.GetOrganizationSummaryTopClientsByUsage200ResponseInner;
import org.openapitools.client.model.GetOrganizationSummaryTopClientsManufacturersByUsage200ResponseInner;
import org.openapitools.client.model.GetOrganizationSummaryTopDevicesByUsage200ResponseInner;
import org.openapitools.client.model.GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInner;
import org.openapitools.client.model.GetOrganizationSummaryTopSsidsByUsage200ResponseInner;
import org.openapitools.client.model.GetOrganizationSummaryTopSwitchesByEnergyUsage200ResponseInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TopApi
 */
@Disabled
public class TopApiTest {

    private final TopApi api = new TopApi();

    /**
     * Return the top 10 appliances sorted by utilization over given time range.
     *
     * Return the top 10 appliances sorted by utilization over given time range.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSummaryTopAppliancesByUtilization_2Test() throws ApiException {
        String organizationId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        List<GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner> response = api.getOrganizationSummaryTopAppliancesByUtilization_2(organizationId, t0, t1, timespan);
        // TODO: test validations
    }

    /**
     * Return metrics for organization&#39;s top 10 clients by data usage (in mb) over given time range.
     *
     * Return metrics for organization&#39;s top 10 clients by data usage (in mb) over given time range.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSummaryTopClientsByUsage_2Test() throws ApiException {
        String organizationId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        List<GetOrganizationSummaryTopClientsByUsage200ResponseInner> response = api.getOrganizationSummaryTopClientsByUsage_2(organizationId, t0, t1, timespan);
        // TODO: test validations
    }

    /**
     * Return metrics for organization&#39;s top clients by data usage (in mb) over given time range, grouped by manufacturer.
     *
     * Return metrics for organization&#39;s top clients by data usage (in mb) over given time range, grouped by manufacturer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSummaryTopClientsManufacturersByUsage_2Test() throws ApiException {
        String organizationId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        List<GetOrganizationSummaryTopClientsManufacturersByUsage200ResponseInner> response = api.getOrganizationSummaryTopClientsManufacturersByUsage_2(organizationId, t0, t1, timespan);
        // TODO: test validations
    }

    /**
     * Return metrics for organization&#39;s top 10 devices sorted by data usage over given time range
     *
     * Return metrics for organization&#39;s top 10 devices sorted by data usage over given time range. Default unit is megabytes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSummaryTopDevicesByUsage_2Test() throws ApiException {
        String organizationId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        List<GetOrganizationSummaryTopDevicesByUsage200ResponseInner> response = api.getOrganizationSummaryTopDevicesByUsage_2(organizationId, t0, t1, timespan);
        // TODO: test validations
    }

    /**
     * Return metrics for organization&#39;s top 10 device models sorted by data usage over given time range
     *
     * Return metrics for organization&#39;s top 10 device models sorted by data usage over given time range. Default unit is megabytes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSummaryTopDevicesModelsByUsage_2Test() throws ApiException {
        String organizationId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        List<GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInner> response = api.getOrganizationSummaryTopDevicesModelsByUsage_2(organizationId, t0, t1, timespan);
        // TODO: test validations
    }

    /**
     * Return metrics for organization&#39;s top 10 ssids by data usage over given time range
     *
     * Return metrics for organization&#39;s top 10 ssids by data usage over given time range. Default unit is megabytes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSummaryTopSsidsByUsage_2Test() throws ApiException {
        String organizationId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        List<GetOrganizationSummaryTopSsidsByUsage200ResponseInner> response = api.getOrganizationSummaryTopSsidsByUsage_2(organizationId, t0, t1, timespan);
        // TODO: test validations
    }

    /**
     * Return metrics for organization&#39;s top 10 switches by energy usage over given time range
     *
     * Return metrics for organization&#39;s top 10 switches by energy usage over given time range. Default unit is joules.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationSummaryTopSwitchesByEnergyUsage_2Test() throws ApiException {
        String organizationId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        List<GetOrganizationSummaryTopSwitchesByEnergyUsage200ResponseInner> response = api.getOrganizationSummaryTopSwitchesByEnergyUsage_2(organizationId, t0, t1, timespan);
        // TODO: test validations
    }

}
