/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetOrganizationFirmwareUpgrades200ResponseInner;
import org.openapitools.client.model.GetOrganizationFirmwareUpgradesByDevice200ResponseInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UpgradesApi
 */
@Disabled
public class UpgradesApiTest {

    private final UpgradesApi api = new UpgradesApi();

    /**
     * Get firmware upgrade status for the filtered devices
     *
     * Get firmware upgrade status for the filtered devices
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationFirmwareUpgradesByDevice_2Test() throws ApiException {
        String organizationId = null;
        Integer perPage = null;
        String startingAfter = null;
        String endingBefore = null;
        List<String> networkIds = null;
        List<String> serials = null;
        List<String> macs = null;
        List<String> firmwareUpgradeIds = null;
        List<String> firmwareUpgradeBatchIds = null;
        List<GetOrganizationFirmwareUpgradesByDevice200ResponseInner> response = api.getOrganizationFirmwareUpgradesByDevice_2(organizationId, perPage, startingAfter, endingBefore, networkIds, serials, macs, firmwareUpgradeIds, firmwareUpgradeBatchIds);
        // TODO: test validations
    }

    /**
     * Get firmware upgrade information for an organization
     *
     * Get firmware upgrade information for an organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationFirmwareUpgrades_2Test() throws ApiException {
        String organizationId = null;
        List<String> status = null;
        List<String> productType = null;
        List<GetOrganizationFirmwareUpgrades200ResponseInner> response = api.getOrganizationFirmwareUpgrades_2(organizationId, status, productType);
        // TODO: test validations
    }

}
