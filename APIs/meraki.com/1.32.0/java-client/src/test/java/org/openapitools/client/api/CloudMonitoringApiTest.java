/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest;
import org.openapitools.client.model.CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner;
import org.openapitools.client.model.CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest;
import org.openapitools.client.model.CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner;
import org.openapitools.client.model.CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest;
import org.openapitools.client.model.GetNetwork200Response;
import org.openapitools.client.model.GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CloudMonitoringApi
 */
@Disabled
public class CloudMonitoringApiTest {

    private final CloudMonitoringApi api = new CloudMonitoringApi();

    /**
     * Imports event logs related to the onboarding app into elastisearch
     *
     * Imports event logs related to the onboarding app into elastisearch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationInventoryOnboardingCloudMonitoringExportEvent_3Test() throws ApiException {
        String organizationId = null;
        CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest = null;
        Object response = api.createOrganizationInventoryOnboardingCloudMonitoringExportEvent_3(organizationId, createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest);
        // TODO: test validations
    }

    /**
     * Commits the import operation to complete the onboarding of a device into Dashboard for monitoring.
     *
     * Commits the import operation to complete the onboarding of a device into Dashboard for monitoring.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationInventoryOnboardingCloudMonitoringImport_3Test() throws ApiException {
        String organizationId = null;
        CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest createOrganizationInventoryOnboardingCloudMonitoringImportRequest = null;
        List<CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner> response = api.createOrganizationInventoryOnboardingCloudMonitoringImport_3(organizationId, createOrganizationInventoryOnboardingCloudMonitoringImportRequest);
        // TODO: test validations
    }

    /**
     * Initiates or updates an import session
     *
     * Initiates or updates an import session. An import ID will be generated and used when you are ready to commit the import.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationInventoryOnboardingCloudMonitoringPrepare_3Test() throws ApiException {
        String organizationId = null;
        CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest = null;
        List<CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner> response = api.createOrganizationInventoryOnboardingCloudMonitoringPrepare_3(organizationId, createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest);
        // TODO: test validations
    }

    /**
     * Check the status of a committed Import operation
     *
     * Check the status of a committed Import operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationInventoryOnboardingCloudMonitoringImports_3Test() throws ApiException {
        String organizationId = null;
        List<String> importIds = null;
        List<GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner> response = api.getOrganizationInventoryOnboardingCloudMonitoringImports_3(organizationId, importIds);
        // TODO: test validations
    }

    /**
     * Returns list of networks eligible for adding cloud monitored device
     *
     * Returns list of networks eligible for adding cloud monitored device
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationInventoryOnboardingCloudMonitoringNetworks_3Test() throws ApiException {
        String organizationId = null;
        String deviceType = null;
        Integer perPage = null;
        String startingAfter = null;
        String endingBefore = null;
        List<GetNetwork200Response> response = api.getOrganizationInventoryOnboardingCloudMonitoringNetworks_3(organizationId, deviceType, perPage, startingAfter, endingBefore);
        // TODO: test validations
    }

}
