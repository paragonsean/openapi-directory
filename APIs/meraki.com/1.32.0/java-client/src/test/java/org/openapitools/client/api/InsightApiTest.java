/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrganizationInsightMonitoredMediaServerRequest;
import org.openapitools.client.model.GetNetworkInsightApplicationHealthByTime200ResponseInner;
import org.openapitools.client.model.GetOrganizationInsightApplications200ResponseInner;
import org.openapitools.client.model.GetOrganizationInsightMonitoredMediaServers200ResponseInner;
import org.openapitools.client.model.UpdateOrganizationInsightMonitoredMediaServerRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InsightApi
 */
@Disabled
public class InsightApiTest {

    private final InsightApi api = new InsightApi();

    /**
     * Add a media server to be monitored for this organization
     *
     * Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationInsightMonitoredMediaServerTest() throws ApiException {
        String organizationId = null;
        CreateOrganizationInsightMonitoredMediaServerRequest createOrganizationInsightMonitoredMediaServerRequest = null;
        Object response = api.createOrganizationInsightMonitoredMediaServer(organizationId, createOrganizationInsightMonitoredMediaServerRequest);
        // TODO: test validations
    }

    /**
     * Delete a monitored media server from this organization
     *
     * Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganizationInsightMonitoredMediaServerTest() throws ApiException {
        String organizationId = null;
        String monitoredMediaServerId = null;
        api.deleteOrganizationInsightMonitoredMediaServer(organizationId, monitoredMediaServerId);
        // TODO: test validations
    }

    /**
     * Get application health by time
     *
     * Get application health by time
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkInsightApplicationHealthByTimeTest() throws ApiException {
        String networkId = null;
        String applicationId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        Integer resolution = null;
        List<GetNetworkInsightApplicationHealthByTime200ResponseInner> response = api.getNetworkInsightApplicationHealthByTime(networkId, applicationId, t0, t1, timespan, resolution);
        // TODO: test validations
    }

    /**
     * List all Insight tracked applications
     *
     * List all Insight tracked applications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationInsightApplicationsTest() throws ApiException {
        String organizationId = null;
        List<GetOrganizationInsightApplications200ResponseInner> response = api.getOrganizationInsightApplications(organizationId);
        // TODO: test validations
    }

    /**
     * Return a monitored media server for this organization
     *
     * Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationInsightMonitoredMediaServerTest() throws ApiException {
        String organizationId = null;
        String monitoredMediaServerId = null;
        Object response = api.getOrganizationInsightMonitoredMediaServer(organizationId, monitoredMediaServerId);
        // TODO: test validations
    }

    /**
     * List the monitored media servers for this organization
     *
     * List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationInsightMonitoredMediaServersTest() throws ApiException {
        String organizationId = null;
        List<GetOrganizationInsightMonitoredMediaServers200ResponseInner> response = api.getOrganizationInsightMonitoredMediaServers(organizationId);
        // TODO: test validations
    }

    /**
     * Update a monitored media server for this organization
     *
     * Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationInsightMonitoredMediaServerTest() throws ApiException {
        String organizationId = null;
        String monitoredMediaServerId = null;
        UpdateOrganizationInsightMonitoredMediaServerRequest updateOrganizationInsightMonitoredMediaServerRequest = null;
        Object response = api.updateOrganizationInsightMonitoredMediaServer(organizationId, monitoredMediaServerId, updateOrganizationInsightMonitoredMediaServerRequest);
        // TODO: test validations
    }

}
