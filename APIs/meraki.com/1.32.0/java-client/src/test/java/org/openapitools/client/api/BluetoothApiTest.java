/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetDeviceWirelessBluetoothSettings200Response;
import org.openapitools.client.model.GetNetworkWirelessBluetoothSettings200Response;
import org.openapitools.client.model.UpdateDeviceWirelessBluetoothSettingsRequest;
import org.openapitools.client.model.UpdateNetworkWirelessBluetoothSettingsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BluetoothApi
 */
@Disabled
public class BluetoothApiTest {

    private final BluetoothApi api = new BluetoothApi();

    /**
     * Return the bluetooth settings for a wireless device
     *
     * Return the bluetooth settings for a wireless device
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDeviceWirelessBluetoothSettings_1Test() throws ApiException {
        String serial = null;
        GetDeviceWirelessBluetoothSettings200Response response = api.getDeviceWirelessBluetoothSettings_1(serial);
        // TODO: test validations
    }

    /**
     * Return the Bluetooth settings for a network. &lt;a href&#x3D;\&quot;https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\&quot;&gt;Bluetooth settings&lt;/a&gt; must be enabled on the network.
     *
     * Return the Bluetooth settings for a network. &lt;a href&#x3D;\&quot;https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\&quot;&gt;Bluetooth settings&lt;/a&gt; must be enabled on the network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkWirelessBluetoothSettings_1Test() throws ApiException {
        String networkId = null;
        GetNetworkWirelessBluetoothSettings200Response response = api.getNetworkWirelessBluetoothSettings_1(networkId);
        // TODO: test validations
    }

    /**
     * Update the bluetooth settings for a wireless device
     *
     * Update the bluetooth settings for a wireless device
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDeviceWirelessBluetoothSettings_1Test() throws ApiException {
        String serial = null;
        UpdateDeviceWirelessBluetoothSettingsRequest updateDeviceWirelessBluetoothSettingsRequest = null;
        GetDeviceWirelessBluetoothSettings200Response response = api.updateDeviceWirelessBluetoothSettings_1(serial, updateDeviceWirelessBluetoothSettingsRequest);
        // TODO: test validations
    }

    /**
     * Update the Bluetooth settings for a network
     *
     * Update the Bluetooth settings for a network. See the docs page for &lt;a href&#x3D;\&quot;https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\&quot;&gt;Bluetooth settings&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkWirelessBluetoothSettings_1Test() throws ApiException {
        String networkId = null;
        UpdateNetworkWirelessBluetoothSettingsRequest updateNetworkWirelessBluetoothSettingsRequest = null;
        GetNetworkWirelessBluetoothSettings200Response response = api.updateNetworkWirelessBluetoothSettings_1(networkId, updateNetworkWirelessBluetoothSettingsRequest);
        // TODO: test validations
    }

}
