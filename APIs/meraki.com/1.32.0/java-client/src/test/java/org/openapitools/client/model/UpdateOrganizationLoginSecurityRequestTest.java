/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetOrganizationLoginSecurity200ResponseApiAuthentication;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateOrganizationLoginSecurityRequest
 */
public class UpdateOrganizationLoginSecurityRequestTest {
    private final UpdateOrganizationLoginSecurityRequest model = new UpdateOrganizationLoginSecurityRequest();

    /**
     * Model tests for UpdateOrganizationLoginSecurityRequest
     */
    @Test
    public void testUpdateOrganizationLoginSecurityRequest() {
        // TODO: test UpdateOrganizationLoginSecurityRequest
    }

    /**
     * Test the property 'accountLockoutAttempts'
     */
    @Test
    public void accountLockoutAttemptsTest() {
        // TODO: test accountLockoutAttempts
    }

    /**
     * Test the property 'apiAuthentication'
     */
    @Test
    public void apiAuthenticationTest() {
        // TODO: test apiAuthentication
    }

    /**
     * Test the property 'enforceAccountLockout'
     */
    @Test
    public void enforceAccountLockoutTest() {
        // TODO: test enforceAccountLockout
    }

    /**
     * Test the property 'enforceDifferentPasswords'
     */
    @Test
    public void enforceDifferentPasswordsTest() {
        // TODO: test enforceDifferentPasswords
    }

    /**
     * Test the property 'enforceIdleTimeout'
     */
    @Test
    public void enforceIdleTimeoutTest() {
        // TODO: test enforceIdleTimeout
    }

    /**
     * Test the property 'enforceLoginIpRanges'
     */
    @Test
    public void enforceLoginIpRangesTest() {
        // TODO: test enforceLoginIpRanges
    }

    /**
     * Test the property 'enforcePasswordExpiration'
     */
    @Test
    public void enforcePasswordExpirationTest() {
        // TODO: test enforcePasswordExpiration
    }

    /**
     * Test the property 'enforceStrongPasswords'
     */
    @Test
    public void enforceStrongPasswordsTest() {
        // TODO: test enforceStrongPasswords
    }

    /**
     * Test the property 'enforceTwoFactorAuth'
     */
    @Test
    public void enforceTwoFactorAuthTest() {
        // TODO: test enforceTwoFactorAuth
    }

    /**
     * Test the property 'idleTimeoutMinutes'
     */
    @Test
    public void idleTimeoutMinutesTest() {
        // TODO: test idleTimeoutMinutes
    }

    /**
     * Test the property 'loginIpRanges'
     */
    @Test
    public void loginIpRangesTest() {
        // TODO: test loginIpRanges
    }

    /**
     * Test the property 'numDifferentPasswords'
     */
    @Test
    public void numDifferentPasswordsTest() {
        // TODO: test numDifferentPasswords
    }

    /**
     * Test the property 'passwordExpirationDays'
     */
    @Test
    public void passwordExpirationDaysTest() {
        // TODO: test passwordExpirationDays
    }

}
