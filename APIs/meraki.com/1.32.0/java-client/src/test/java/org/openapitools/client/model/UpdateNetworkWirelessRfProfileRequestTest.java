/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 1.32.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateNetworkWirelessRfProfileRequestPerSsidSettings;
import org.openapitools.client.model.CreateNetworkWirelessRfProfileRequestTransmission;
import org.openapitools.client.model.UpdateNetworkWirelessRfProfileRequestApBandSettings;
import org.openapitools.client.model.UpdateNetworkWirelessRfProfileRequestFiveGhzSettings;
import org.openapitools.client.model.UpdateNetworkWirelessRfProfileRequestTwoFourGhzSettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateNetworkWirelessRfProfileRequest
 */
public class UpdateNetworkWirelessRfProfileRequestTest {
    private final UpdateNetworkWirelessRfProfileRequest model = new UpdateNetworkWirelessRfProfileRequest();

    /**
     * Model tests for UpdateNetworkWirelessRfProfileRequest
     */
    @Test
    public void testUpdateNetworkWirelessRfProfileRequest() {
        // TODO: test UpdateNetworkWirelessRfProfileRequest
    }

    /**
     * Test the property 'apBandSettings'
     */
    @Test
    public void apBandSettingsTest() {
        // TODO: test apBandSettings
    }

    /**
     * Test the property 'bandSelectionType'
     */
    @Test
    public void bandSelectionTypeTest() {
        // TODO: test bandSelectionType
    }

    /**
     * Test the property 'clientBalancingEnabled'
     */
    @Test
    public void clientBalancingEnabledTest() {
        // TODO: test clientBalancingEnabled
    }

    /**
     * Test the property 'fiveGhzSettings'
     */
    @Test
    public void fiveGhzSettingsTest() {
        // TODO: test fiveGhzSettings
    }

    /**
     * Test the property 'minBitrateType'
     */
    @Test
    public void minBitrateTypeTest() {
        // TODO: test minBitrateType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'perSsidSettings'
     */
    @Test
    public void perSsidSettingsTest() {
        // TODO: test perSsidSettings
    }

    /**
     * Test the property 'transmission'
     */
    @Test
    public void transmissionTest() {
        // TODO: test transmission
    }

    /**
     * Test the property 'twoFourGhzSettings'
     */
    @Test
    public void twoFourGhzSettingsTest() {
        // TODO: test twoFourGhzSettings
    }

}
