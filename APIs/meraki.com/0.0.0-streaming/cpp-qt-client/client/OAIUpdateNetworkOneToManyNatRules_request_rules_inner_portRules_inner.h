/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner.h
 *
 * 
 */

#ifndef OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner_H
#define OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner : public OAIObject {
public:
    OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner();
    OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner(QString json);
    ~OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedIps() const;
    void setAllowedIps(const QList<QString> &allowed_ips);
    bool is_allowed_ips_Set() const;
    bool is_allowed_ips_Valid() const;

    QString getLocalIp() const;
    void setLocalIp(const QString &local_ip);
    bool is_local_ip_Set() const;
    bool is_local_ip_Valid() const;

    QString getLocalPort() const;
    void setLocalPort(const QString &local_port);
    bool is_local_port_Set() const;
    bool is_local_port_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QString getPublicPort() const;
    void setPublicPort(const QString &public_port);
    bool is_public_port_Set() const;
    bool is_public_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_ips;
    bool m_allowed_ips_isSet;
    bool m_allowed_ips_isValid;

    QString m_local_ip;
    bool m_local_ip_isSet;
    bool m_local_ip_isValid;

    QString m_local_port;
    bool m_local_port_isSet;
    bool m_local_port_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QString m_public_port;
    bool m_public_port_isSet;
    bool m_public_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner)

#endif // OAIUpdateNetworkOneToManyNatRules_request_rules_inner_portRules_inner_H
