/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkContentFiltering_request.h
 *
 * 
 */

#ifndef OAIUpdateNetworkContentFiltering_request_H
#define OAIUpdateNetworkContentFiltering_request_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateNetworkContentFiltering_request : public OAIObject {
public:
    OAIUpdateNetworkContentFiltering_request();
    OAIUpdateNetworkContentFiltering_request(QString json);
    ~OAIUpdateNetworkContentFiltering_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedUrlPatterns() const;
    void setAllowedUrlPatterns(const QList<QString> &allowed_url_patterns);
    bool is_allowed_url_patterns_Set() const;
    bool is_allowed_url_patterns_Valid() const;

    QList<QString> getBlockedUrlCategories() const;
    void setBlockedUrlCategories(const QList<QString> &blocked_url_categories);
    bool is_blocked_url_categories_Set() const;
    bool is_blocked_url_categories_Valid() const;

    QList<QString> getBlockedUrlPatterns() const;
    void setBlockedUrlPatterns(const QList<QString> &blocked_url_patterns);
    bool is_blocked_url_patterns_Set() const;
    bool is_blocked_url_patterns_Valid() const;

    QString getUrlCategoryListSize() const;
    void setUrlCategoryListSize(const QString &url_category_list_size);
    bool is_url_category_list_size_Set() const;
    bool is_url_category_list_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_url_patterns;
    bool m_allowed_url_patterns_isSet;
    bool m_allowed_url_patterns_isValid;

    QList<QString> m_blocked_url_categories;
    bool m_blocked_url_categories_isSet;
    bool m_blocked_url_categories_isValid;

    QList<QString> m_blocked_url_patterns;
    bool m_blocked_url_patterns_isSet;
    bool m_blocked_url_patterns_isValid;

    QString m_url_category_list_size;
    bool m_url_category_list_size_isSet;
    bool m_url_category_list_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkContentFiltering_request)

#endif // OAIUpdateNetworkContentFiltering_request_H
