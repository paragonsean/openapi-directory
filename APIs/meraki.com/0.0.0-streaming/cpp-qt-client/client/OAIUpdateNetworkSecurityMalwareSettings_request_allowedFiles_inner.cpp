/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner() {
    this->initializeModel();
}

OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::~OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner() {}

void OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_sha256_isSet = false;
    m_sha256_isValid = false;
}

void OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_sha256_isValid = ::OpenAPI::fromJsonValue(m_sha256, json[QString("sha256")]);
    m_sha256_isSet = !json[QString("sha256")].isNull() && m_sha256_isValid;
}

QString OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_sha256_isSet) {
        obj.insert(QString("sha256"), ::OpenAPI::toJsonValue(m_sha256));
    }
    return obj;
}

QString OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::getComment() const {
    return m_comment;
}
void OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::getSha256() const {
    return m_sha256;
}
void OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::setSha256(const QString &sha256) {
    m_sha256 = sha256;
    m_sha256_isSet = true;
}

bool OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::is_sha256_Set() const{
    return m_sha256_isSet;
}

bool OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::is_sha256_Valid() const{
    return m_sha256_isValid;
}

bool OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sha256_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkSecurityMalwareSettings_request_allowedFiles_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_comment_isValid && m_sha256_isValid && true;
}

} // namespace OpenAPI
