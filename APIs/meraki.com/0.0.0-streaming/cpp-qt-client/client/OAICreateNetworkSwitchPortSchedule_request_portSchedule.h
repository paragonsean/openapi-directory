/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateNetworkSwitchPortSchedule_request_portSchedule.h
 *
 *     The schedule for switch port scheduling. Schedules are applied to days of the week.     When it&#39;s empty, default schedule with all days of a week are configured.     Any unspecified day in the schedule is added as a default schedule configuration of the day. 
 */

#ifndef OAICreateNetworkSwitchPortSchedule_request_portSchedule_H
#define OAICreateNetworkSwitchPortSchedule_request_portSchedule_H

#include <QJsonObject>

#include "OAICreateNetworkSwitchPortSchedule_request_portSchedule_friday.h"
#include "OAICreateNetworkSwitchPortSchedule_request_portSchedule_monday.h"
#include "OAICreateNetworkSwitchPortSchedule_request_portSchedule_saturday.h"
#include "OAICreateNetworkSwitchPortSchedule_request_portSchedule_sunday.h"
#include "OAICreateNetworkSwitchPortSchedule_request_portSchedule_thursday.h"
#include "OAICreateNetworkSwitchPortSchedule_request_portSchedule_tuesday.h"
#include "OAICreateNetworkSwitchPortSchedule_request_portSchedule_wednesday.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateNetworkSwitchPortSchedule_request_portSchedule_friday;
class OAICreateNetworkSwitchPortSchedule_request_portSchedule_monday;
class OAICreateNetworkSwitchPortSchedule_request_portSchedule_saturday;
class OAICreateNetworkSwitchPortSchedule_request_portSchedule_sunday;
class OAICreateNetworkSwitchPortSchedule_request_portSchedule_thursday;
class OAICreateNetworkSwitchPortSchedule_request_portSchedule_tuesday;
class OAICreateNetworkSwitchPortSchedule_request_portSchedule_wednesday;

class OAICreateNetworkSwitchPortSchedule_request_portSchedule : public OAIObject {
public:
    OAICreateNetworkSwitchPortSchedule_request_portSchedule();
    OAICreateNetworkSwitchPortSchedule_request_portSchedule(QString json);
    ~OAICreateNetworkSwitchPortSchedule_request_portSchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_friday getFriday() const;
    void setFriday(const OAICreateNetworkSwitchPortSchedule_request_portSchedule_friday &friday);
    bool is_friday_Set() const;
    bool is_friday_Valid() const;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_monday getMonday() const;
    void setMonday(const OAICreateNetworkSwitchPortSchedule_request_portSchedule_monday &monday);
    bool is_monday_Set() const;
    bool is_monday_Valid() const;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_saturday getSaturday() const;
    void setSaturday(const OAICreateNetworkSwitchPortSchedule_request_portSchedule_saturday &saturday);
    bool is_saturday_Set() const;
    bool is_saturday_Valid() const;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_sunday getSunday() const;
    void setSunday(const OAICreateNetworkSwitchPortSchedule_request_portSchedule_sunday &sunday);
    bool is_sunday_Set() const;
    bool is_sunday_Valid() const;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_thursday getThursday() const;
    void setThursday(const OAICreateNetworkSwitchPortSchedule_request_portSchedule_thursday &thursday);
    bool is_thursday_Set() const;
    bool is_thursday_Valid() const;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_tuesday getTuesday() const;
    void setTuesday(const OAICreateNetworkSwitchPortSchedule_request_portSchedule_tuesday &tuesday);
    bool is_tuesday_Set() const;
    bool is_tuesday_Valid() const;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_wednesday getWednesday() const;
    void setWednesday(const OAICreateNetworkSwitchPortSchedule_request_portSchedule_wednesday &wednesday);
    bool is_wednesday_Set() const;
    bool is_wednesday_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_friday m_friday;
    bool m_friday_isSet;
    bool m_friday_isValid;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_monday m_monday;
    bool m_monday_isSet;
    bool m_monday_isValid;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_saturday m_saturday;
    bool m_saturday_isSet;
    bool m_saturday_isValid;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_sunday m_sunday;
    bool m_sunday_isSet;
    bool m_sunday_isValid;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_thursday m_thursday;
    bool m_thursday_isSet;
    bool m_thursday_isValid;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_tuesday m_tuesday;
    bool m_tuesday_isSet;
    bool m_tuesday_isValid;

    OAICreateNetworkSwitchPortSchedule_request_portSchedule_wednesday m_wednesday;
    bool m_wednesday_isSet;
    bool m_wednesday_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateNetworkSwitchPortSchedule_request_portSchedule)

#endif // OAICreateNetworkSwitchPortSchedule_request_portSchedule_H
