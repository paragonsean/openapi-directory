/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkUplinkSettings_request_bandwidthLimits.h
 *
 * A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
 */

#ifndef OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_H
#define OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_H

#include <QJsonObject>

#include "OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_cellular.h"
#include "OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan1.h"
#include "OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan2.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_cellular;
class OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan1;
class OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan2;

class OAIUpdateNetworkUplinkSettings_request_bandwidthLimits : public OAIObject {
public:
    OAIUpdateNetworkUplinkSettings_request_bandwidthLimits();
    OAIUpdateNetworkUplinkSettings_request_bandwidthLimits(QString json);
    ~OAIUpdateNetworkUplinkSettings_request_bandwidthLimits() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_cellular getCellular() const;
    void setCellular(const OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_cellular &cellular);
    bool is_cellular_Set() const;
    bool is_cellular_Valid() const;

    OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan1 getWan1() const;
    void setWan1(const OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan1 &wan1);
    bool is_wan1_Set() const;
    bool is_wan1_Valid() const;

    OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan2 getWan2() const;
    void setWan2(const OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan2 &wan2);
    bool is_wan2_Set() const;
    bool is_wan2_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_cellular m_cellular;
    bool m_cellular_isSet;
    bool m_cellular_isValid;

    OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan1 m_wan1;
    bool m_wan1_isSet;
    bool m_wan1_isValid;

    OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_wan2 m_wan2;
    bool m_wan2_isSet;
    bool m_wan2_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkUplinkSettings_request_bandwidthLimits)

#endif // OAIUpdateNetworkUplinkSettings_request_bandwidthLimits_H
