/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids.h
 *
 * The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID&#39;s splash frequency. Not all networks support configuring all SSIDs
 */

#ifndef OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_H
#define OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_H

#include <QJsonObject>

#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_0.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_1.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_10.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_11.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_12.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_13.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_14.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_2.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_3.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_4.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_5.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_6.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_7.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_8.h"
#include "OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_9.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_0;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_1;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_2;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_3;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_4;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_5;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_6;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_7;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_8;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_9;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_10;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_11;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_12;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_13;
class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_14;

class OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids : public OAIObject {
public:
    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids();
    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids(QString json);
    ~OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_0 getR0() const;
    void setR0(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_0 &r_0);
    bool is_r_0_Set() const;
    bool is_r_0_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_1 getR1() const;
    void setR1(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_1 &r_1);
    bool is_r_1_Set() const;
    bool is_r_1_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_2 getR2() const;
    void setR2(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_2 &r_2);
    bool is_r_2_Set() const;
    bool is_r_2_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_3 getR3() const;
    void setR3(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_3 &r_3);
    bool is_r_3_Set() const;
    bool is_r_3_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_4 getR4() const;
    void setR4(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_4 &r_4);
    bool is_r_4_Set() const;
    bool is_r_4_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_5 getR5() const;
    void setR5(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_5 &r_5);
    bool is_r_5_Set() const;
    bool is_r_5_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_6 getR6() const;
    void setR6(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_6 &r_6);
    bool is_r_6_Set() const;
    bool is_r_6_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_7 getR7() const;
    void setR7(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_7 &r_7);
    bool is_r_7_Set() const;
    bool is_r_7_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_8 getR8() const;
    void setR8(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_8 &r_8);
    bool is_r_8_Set() const;
    bool is_r_8_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_9 getR9() const;
    void setR9(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_9 &r_9);
    bool is_r_9_Set() const;
    bool is_r_9_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_10 getR10() const;
    void setR10(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_10 &r_10);
    bool is_r_10_Set() const;
    bool is_r_10_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_11 getR11() const;
    void setR11(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_11 &r_11);
    bool is_r_11_Set() const;
    bool is_r_11_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_12 getR12() const;
    void setR12(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_12 &r_12);
    bool is_r_12_Set() const;
    bool is_r_12_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_13 getR13() const;
    void setR13(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_13 &r_13);
    bool is_r_13_Set() const;
    bool is_r_13_Valid() const;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_14 getR14() const;
    void setR14(const OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_14 &r_14);
    bool is_r_14_Set() const;
    bool is_r_14_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_0 m_r_0;
    bool m_r_0_isSet;
    bool m_r_0_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_1 m_r_1;
    bool m_r_1_isSet;
    bool m_r_1_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_2 m_r_2;
    bool m_r_2_isSet;
    bool m_r_2_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_3 m_r_3;
    bool m_r_3_isSet;
    bool m_r_3_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_4 m_r_4;
    bool m_r_4_isSet;
    bool m_r_4_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_5 m_r_5;
    bool m_r_5_isSet;
    bool m_r_5_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_6 m_r_6;
    bool m_r_6_isSet;
    bool m_r_6_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_7 m_r_7;
    bool m_r_7_isSet;
    bool m_r_7_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_8 m_r_8;
    bool m_r_8_isSet;
    bool m_r_8_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_9 m_r_9;
    bool m_r_9_isSet;
    bool m_r_9_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_10 m_r_10;
    bool m_r_10_isSet;
    bool m_r_10_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_11 m_r_11;
    bool m_r_11_isSet;
    bool m_r_11_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_12 m_r_12;
    bool m_r_12_isSet;
    bool m_r_12_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_13 m_r_13;
    bool m_r_13_isSet;
    bool m_r_13_isValid;

    OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_14 m_r_14;
    bool m_r_14_isSet;
    bool m_r_14_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids)

#endif // OAIUpdateNetworkClientSplashAuthorizationStatus_request_ssids_H
