/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner() {
    this->initializeModel();
}

OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::~OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner() {}

void OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_rule_id_isSet = false;
    m_rule_id_isValid = false;
}

void OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_rule_id_isValid = ::OpenAPI::fromJsonValue(m_rule_id, json[QString("ruleId")]);
    m_rule_id_isSet = !json[QString("ruleId")].isNull() && m_rule_id_isValid;
}

QString OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_rule_id_isSet) {
        obj.insert(QString("ruleId"), ::OpenAPI::toJsonValue(m_rule_id));
    }
    return obj;
}

QString OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::getMessage() const {
    return m_message;
}
void OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::is_message_Set() const{
    return m_message_isSet;
}

bool OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::getRuleId() const {
    return m_rule_id;
}
void OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::setRuleId(const QString &rule_id) {
    m_rule_id = rule_id;
    m_rule_id_isSet = true;
}

bool OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::is_rule_id_Set() const{
    return m_rule_id_isSet;
}

bool OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::is_rule_id_Valid() const{
    return m_rule_id_isValid;
}

bool OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateOrganizationSecurityIntrusionSettings_request_whitelistedRules_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rule_id_isValid && true;
}

} // namespace OpenAPI
