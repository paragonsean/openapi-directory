/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkAlertSettings_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkAlertSettings_request::OAIUpdateNetworkAlertSettings_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkAlertSettings_request::OAIUpdateNetworkAlertSettings_request() {
    this->initializeModel();
}

OAIUpdateNetworkAlertSettings_request::~OAIUpdateNetworkAlertSettings_request() {}

void OAIUpdateNetworkAlertSettings_request::initializeModel() {

    m_alerts_isSet = false;
    m_alerts_isValid = false;

    m_default_destinations_isSet = false;
    m_default_destinations_isValid = false;
}

void OAIUpdateNetworkAlertSettings_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkAlertSettings_request::fromJsonObject(QJsonObject json) {

    m_alerts_isValid = ::OpenAPI::fromJsonValue(m_alerts, json[QString("alerts")]);
    m_alerts_isSet = !json[QString("alerts")].isNull() && m_alerts_isValid;

    m_default_destinations_isValid = ::OpenAPI::fromJsonValue(m_default_destinations, json[QString("defaultDestinations")]);
    m_default_destinations_isSet = !json[QString("defaultDestinations")].isNull() && m_default_destinations_isValid;
}

QString OAIUpdateNetworkAlertSettings_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkAlertSettings_request::asJsonObject() const {
    QJsonObject obj;
    if (m_alerts.size() > 0) {
        obj.insert(QString("alerts"), ::OpenAPI::toJsonValue(m_alerts));
    }
    if (m_default_destinations.isSet()) {
        obj.insert(QString("defaultDestinations"), ::OpenAPI::toJsonValue(m_default_destinations));
    }
    return obj;
}

QList<OAIUpdateNetworkAlertSettings_request_alerts_inner> OAIUpdateNetworkAlertSettings_request::getAlerts() const {
    return m_alerts;
}
void OAIUpdateNetworkAlertSettings_request::setAlerts(const QList<OAIUpdateNetworkAlertSettings_request_alerts_inner> &alerts) {
    m_alerts = alerts;
    m_alerts_isSet = true;
}

bool OAIUpdateNetworkAlertSettings_request::is_alerts_Set() const{
    return m_alerts_isSet;
}

bool OAIUpdateNetworkAlertSettings_request::is_alerts_Valid() const{
    return m_alerts_isValid;
}

OAIUpdateNetworkAlertSettings_request_defaultDestinations OAIUpdateNetworkAlertSettings_request::getDefaultDestinations() const {
    return m_default_destinations;
}
void OAIUpdateNetworkAlertSettings_request::setDefaultDestinations(const OAIUpdateNetworkAlertSettings_request_defaultDestinations &default_destinations) {
    m_default_destinations = default_destinations;
    m_default_destinations_isSet = true;
}

bool OAIUpdateNetworkAlertSettings_request::is_default_destinations_Set() const{
    return m_default_destinations_isSet;
}

bool OAIUpdateNetworkAlertSettings_request::is_default_destinations_Valid() const{
    return m_default_destinations_isValid;
}

bool OAIUpdateNetworkAlertSettings_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alerts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_destinations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkAlertSettings_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
