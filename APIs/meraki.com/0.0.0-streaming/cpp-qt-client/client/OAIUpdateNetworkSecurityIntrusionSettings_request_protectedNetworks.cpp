/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks() {
    this->initializeModel();
}

OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::~OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks() {}

void OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::initializeModel() {

    m_excluded_cidr_isSet = false;
    m_excluded_cidr_isValid = false;

    m_included_cidr_isSet = false;
    m_included_cidr_isValid = false;

    m_use_default_isSet = false;
    m_use_default_isValid = false;
}

void OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::fromJsonObject(QJsonObject json) {

    m_excluded_cidr_isValid = ::OpenAPI::fromJsonValue(m_excluded_cidr, json[QString("excludedCidr")]);
    m_excluded_cidr_isSet = !json[QString("excludedCidr")].isNull() && m_excluded_cidr_isValid;

    m_included_cidr_isValid = ::OpenAPI::fromJsonValue(m_included_cidr, json[QString("includedCidr")]);
    m_included_cidr_isSet = !json[QString("includedCidr")].isNull() && m_included_cidr_isValid;

    m_use_default_isValid = ::OpenAPI::fromJsonValue(m_use_default, json[QString("useDefault")]);
    m_use_default_isSet = !json[QString("useDefault")].isNull() && m_use_default_isValid;
}

QString OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::asJsonObject() const {
    QJsonObject obj;
    if (m_excluded_cidr.size() > 0) {
        obj.insert(QString("excludedCidr"), ::OpenAPI::toJsonValue(m_excluded_cidr));
    }
    if (m_included_cidr.size() > 0) {
        obj.insert(QString("includedCidr"), ::OpenAPI::toJsonValue(m_included_cidr));
    }
    if (m_use_default_isSet) {
        obj.insert(QString("useDefault"), ::OpenAPI::toJsonValue(m_use_default));
    }
    return obj;
}

QList<QString> OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::getExcludedCidr() const {
    return m_excluded_cidr;
}
void OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::setExcludedCidr(const QList<QString> &excluded_cidr) {
    m_excluded_cidr = excluded_cidr;
    m_excluded_cidr_isSet = true;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::is_excluded_cidr_Set() const{
    return m_excluded_cidr_isSet;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::is_excluded_cidr_Valid() const{
    return m_excluded_cidr_isValid;
}

QList<QString> OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::getIncludedCidr() const {
    return m_included_cidr;
}
void OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::setIncludedCidr(const QList<QString> &included_cidr) {
    m_included_cidr = included_cidr;
    m_included_cidr_isSet = true;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::is_included_cidr_Set() const{
    return m_included_cidr_isSet;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::is_included_cidr_Valid() const{
    return m_included_cidr_isValid;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::isUseDefault() const {
    return m_use_default;
}
void OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::setUseDefault(const bool &use_default) {
    m_use_default = use_default;
    m_use_default_isSet = true;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::is_use_default_Set() const{
    return m_use_default_isSet;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::is_use_default_Valid() const{
    return m_use_default_isValid;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_excluded_cidr.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_included_cidr.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_default_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNetworkSecurityIntrusionSettings_request_protectedNetworks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
