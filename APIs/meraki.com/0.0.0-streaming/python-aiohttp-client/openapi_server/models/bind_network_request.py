# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BindNetworkRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_bind: bool=None, config_template_id: str=None):
        """BindNetworkRequest - a model defined in OpenAPI

        :param auto_bind: The auto_bind of this BindNetworkRequest.
        :param config_template_id: The config_template_id of this BindNetworkRequest.
        """
        self.openapi_types = {
            'auto_bind': bool,
            'config_template_id': str
        }

        self.attribute_map = {
            'auto_bind': 'autoBind',
            'config_template_id': 'configTemplateId'
        }

        self._auto_bind = auto_bind
        self._config_template_id = config_template_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BindNetworkRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bindNetwork_request of this BindNetworkRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_bind(self):
        """Gets the auto_bind of this BindNetworkRequest.

        Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.

        :return: The auto_bind of this BindNetworkRequest.
        :rtype: bool
        """
        return self._auto_bind

    @auto_bind.setter
    def auto_bind(self, auto_bind):
        """Sets the auto_bind of this BindNetworkRequest.

        Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.

        :param auto_bind: The auto_bind of this BindNetworkRequest.
        :type auto_bind: bool
        """

        self._auto_bind = auto_bind

    @property
    def config_template_id(self):
        """Gets the config_template_id of this BindNetworkRequest.

        The ID of the template to which the network should be bound.

        :return: The config_template_id of this BindNetworkRequest.
        :rtype: str
        """
        return self._config_template_id

    @config_template_id.setter
    def config_template_id(self, config_template_id):
        """Sets the config_template_id of this BindNetworkRequest.

        The ID of the template to which the network should be bound.

        :param config_template_id: The config_template_id of this BindNetworkRequest.
        :type config_template_id: str
        """
        if config_template_id is None:
            raise ValueError("Invalid value for `config_template_id`, must not be `None`")

        self._config_template_id = config_template_id
