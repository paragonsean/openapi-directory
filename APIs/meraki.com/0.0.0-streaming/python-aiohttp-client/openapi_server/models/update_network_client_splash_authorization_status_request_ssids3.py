# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkClientSplashAuthorizationStatusRequestSsids3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_authorized: bool=None):
        """UpdateNetworkClientSplashAuthorizationStatusRequestSsids3 - a model defined in OpenAPI

        :param is_authorized: The is_authorized of this UpdateNetworkClientSplashAuthorizationStatusRequestSsids3.
        """
        self.openapi_types = {
            'is_authorized': bool
        }

        self.attribute_map = {
            'is_authorized': 'isAuthorized'
        }

        self._is_authorized = is_authorized

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkClientSplashAuthorizationStatusRequestSsids3':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkClientSplashAuthorizationStatus_request_ssids_3 of this UpdateNetworkClientSplashAuthorizationStatusRequestSsids3.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_authorized(self):
        """Gets the is_authorized of this UpdateNetworkClientSplashAuthorizationStatusRequestSsids3.

        New authorization status for the SSID (true, false).

        :return: The is_authorized of this UpdateNetworkClientSplashAuthorizationStatusRequestSsids3.
        :rtype: bool
        """
        return self._is_authorized

    @is_authorized.setter
    def is_authorized(self, is_authorized):
        """Sets the is_authorized of this UpdateNetworkClientSplashAuthorizationStatusRequestSsids3.

        New authorization status for the SSID (true, false).

        :param is_authorized: The is_authorized of this UpdateNetworkClientSplashAuthorizationStatusRequestSsids3.
        :type is_authorized: bool
        """

        self._is_authorized = is_authorized
