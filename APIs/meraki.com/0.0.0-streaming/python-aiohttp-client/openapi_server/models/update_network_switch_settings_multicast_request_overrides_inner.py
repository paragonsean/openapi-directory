# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkSwitchSettingsMulticastRequestOverridesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flood_unknown_multicast_traffic_enabled: bool=None, igmp_snooping_enabled: bool=None, stacks: List[str]=None, switch_profiles: List[str]=None, switches: List[str]=None):
        """UpdateNetworkSwitchSettingsMulticastRequestOverridesInner - a model defined in OpenAPI

        :param flood_unknown_multicast_traffic_enabled: The flood_unknown_multicast_traffic_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :param igmp_snooping_enabled: The igmp_snooping_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :param stacks: The stacks of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :param switch_profiles: The switch_profiles of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :param switches: The switches of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        """
        self.openapi_types = {
            'flood_unknown_multicast_traffic_enabled': bool,
            'igmp_snooping_enabled': bool,
            'stacks': List[str],
            'switch_profiles': List[str],
            'switches': List[str]
        }

        self.attribute_map = {
            'flood_unknown_multicast_traffic_enabled': 'floodUnknownMulticastTrafficEnabled',
            'igmp_snooping_enabled': 'igmpSnoopingEnabled',
            'stacks': 'stacks',
            'switch_profiles': 'switchProfiles',
            'switches': 'switches'
        }

        self._flood_unknown_multicast_traffic_enabled = flood_unknown_multicast_traffic_enabled
        self._igmp_snooping_enabled = igmp_snooping_enabled
        self._stacks = stacks
        self._switch_profiles = switch_profiles
        self._switches = switches

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkSwitchSettingsMulticastRequestOverridesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkSwitchSettingsMulticast_request_overrides_inner of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flood_unknown_multicast_traffic_enabled(self):
        """Gets the flood_unknown_multicast_traffic_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        Flood unknown multicast traffic setting for switches, switch stacks or switch profiles

        :return: The flood_unknown_multicast_traffic_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :rtype: bool
        """
        return self._flood_unknown_multicast_traffic_enabled

    @flood_unknown_multicast_traffic_enabled.setter
    def flood_unknown_multicast_traffic_enabled(self, flood_unknown_multicast_traffic_enabled):
        """Sets the flood_unknown_multicast_traffic_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        Flood unknown multicast traffic setting for switches, switch stacks or switch profiles

        :param flood_unknown_multicast_traffic_enabled: The flood_unknown_multicast_traffic_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :type flood_unknown_multicast_traffic_enabled: bool
        """
        if flood_unknown_multicast_traffic_enabled is None:
            raise ValueError("Invalid value for `flood_unknown_multicast_traffic_enabled`, must not be `None`")

        self._flood_unknown_multicast_traffic_enabled = flood_unknown_multicast_traffic_enabled

    @property
    def igmp_snooping_enabled(self):
        """Gets the igmp_snooping_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        IGMP snooping setting for switches, switch stacks or switch profiles

        :return: The igmp_snooping_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :rtype: bool
        """
        return self._igmp_snooping_enabled

    @igmp_snooping_enabled.setter
    def igmp_snooping_enabled(self, igmp_snooping_enabled):
        """Sets the igmp_snooping_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        IGMP snooping setting for switches, switch stacks or switch profiles

        :param igmp_snooping_enabled: The igmp_snooping_enabled of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :type igmp_snooping_enabled: bool
        """
        if igmp_snooping_enabled is None:
            raise ValueError("Invalid value for `igmp_snooping_enabled`, must not be `None`")

        self._igmp_snooping_enabled = igmp_snooping_enabled

    @property
    def stacks(self):
        """Gets the stacks of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        List of switch stack ids for non-template network

        :return: The stacks of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :rtype: List[str]
        """
        return self._stacks

    @stacks.setter
    def stacks(self, stacks):
        """Sets the stacks of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        List of switch stack ids for non-template network

        :param stacks: The stacks of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :type stacks: List[str]
        """

        self._stacks = stacks

    @property
    def switch_profiles(self):
        """Gets the switch_profiles of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        List of switch profiles ids for template network

        :return: The switch_profiles of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :rtype: List[str]
        """
        return self._switch_profiles

    @switch_profiles.setter
    def switch_profiles(self, switch_profiles):
        """Sets the switch_profiles of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        List of switch profiles ids for template network

        :param switch_profiles: The switch_profiles of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :type switch_profiles: List[str]
        """

        self._switch_profiles = switch_profiles

    @property
    def switches(self):
        """Gets the switches of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        List of switch serials for non-template network

        :return: The switches of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :rtype: List[str]
        """
        return self._switches

    @switches.setter
    def switches(self, switches):
        """Sets the switches of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.

        List of switch serials for non-template network

        :param switches: The switches of this UpdateNetworkSwitchSettingsMulticastRequestOverridesInner.
        :type switches: List[str]
        """

        self._switches = switches
