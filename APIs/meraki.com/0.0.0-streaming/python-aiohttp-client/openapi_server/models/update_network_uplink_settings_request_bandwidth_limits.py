# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_network_uplink_settings_request_bandwidth_limits_cellular import UpdateNetworkUplinkSettingsRequestBandwidthLimitsCellular
from openapi_server.models.update_network_uplink_settings_request_bandwidth_limits_wan1 import UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan1
from openapi_server.models.update_network_uplink_settings_request_bandwidth_limits_wan2 import UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan2
from openapi_server import util


class UpdateNetworkUplinkSettingsRequestBandwidthLimits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cellular: UpdateNetworkUplinkSettingsRequestBandwidthLimitsCellular=None, wan1: UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan1=None, wan2: UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan2=None):
        """UpdateNetworkUplinkSettingsRequestBandwidthLimits - a model defined in OpenAPI

        :param cellular: The cellular of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        :param wan1: The wan1 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        :param wan2: The wan2 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        """
        self.openapi_types = {
            'cellular': UpdateNetworkUplinkSettingsRequestBandwidthLimitsCellular,
            'wan1': UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan1,
            'wan2': UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan2
        }

        self.attribute_map = {
            'cellular': 'cellular',
            'wan1': 'wan1',
            'wan2': 'wan2'
        }

        self._cellular = cellular
        self._wan1 = wan1
        self._wan2 = wan2

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkUplinkSettingsRequestBandwidthLimits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkUplinkSettings_request_bandwidthLimits of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cellular(self):
        """Gets the cellular of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.


        :return: The cellular of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        :rtype: UpdateNetworkUplinkSettingsRequestBandwidthLimitsCellular
        """
        return self._cellular

    @cellular.setter
    def cellular(self, cellular):
        """Sets the cellular of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.


        :param cellular: The cellular of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        :type cellular: UpdateNetworkUplinkSettingsRequestBandwidthLimitsCellular
        """

        self._cellular = cellular

    @property
    def wan1(self):
        """Gets the wan1 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.


        :return: The wan1 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        :rtype: UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan1
        """
        return self._wan1

    @wan1.setter
    def wan1(self, wan1):
        """Sets the wan1 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.


        :param wan1: The wan1 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        :type wan1: UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan1
        """

        self._wan1 = wan1

    @property
    def wan2(self):
        """Gets the wan2 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.


        :return: The wan2 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        :rtype: UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan2
        """
        return self._wan2

    @wan2.setter
    def wan2(self, wan2):
        """Sets the wan2 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.


        :param wan2: The wan2 of this UpdateNetworkUplinkSettingsRequestBandwidthLimits.
        :type wan2: UpdateNetworkUplinkSettingsRequestBandwidthLimitsWan2
        """

        self._wan2 = wan2
