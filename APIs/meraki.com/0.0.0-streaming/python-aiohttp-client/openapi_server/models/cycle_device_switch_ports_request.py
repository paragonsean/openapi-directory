# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CycleDeviceSwitchPortsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ports: List[str]=None):
        """CycleDeviceSwitchPortsRequest - a model defined in OpenAPI

        :param ports: The ports of this CycleDeviceSwitchPortsRequest.
        """
        self.openapi_types = {
            'ports': List[str]
        }

        self.attribute_map = {
            'ports': 'ports'
        }

        self._ports = ports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CycleDeviceSwitchPortsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The cycleDeviceSwitchPorts_request of this CycleDeviceSwitchPortsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ports(self):
        """Gets the ports of this CycleDeviceSwitchPortsRequest.

        List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]

        :return: The ports of this CycleDeviceSwitchPortsRequest.
        :rtype: List[str]
        """
        return self._ports

    @ports.setter
    def ports(self, ports):
        """Sets the ports of this CycleDeviceSwitchPortsRequest.

        List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]

        :param ports: The ports of this CycleDeviceSwitchPortsRequest.
        :type ports: List[str]
        """
        if ports is None:
            raise ValueError("Invalid value for `ports`, must not be `None`")

        self._ports = ports
