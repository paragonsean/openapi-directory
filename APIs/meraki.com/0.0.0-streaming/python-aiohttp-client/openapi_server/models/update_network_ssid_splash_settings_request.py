# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNetworkSsidSplashSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, splash_url: str=None, use_splash_url: bool=None):
        """UpdateNetworkSsidSplashSettingsRequest - a model defined in OpenAPI

        :param splash_url: The splash_url of this UpdateNetworkSsidSplashSettingsRequest.
        :param use_splash_url: The use_splash_url of this UpdateNetworkSsidSplashSettingsRequest.
        """
        self.openapi_types = {
            'splash_url': str,
            'use_splash_url': bool
        }

        self.attribute_map = {
            'splash_url': 'splashUrl',
            'use_splash_url': 'useSplashUrl'
        }

        self._splash_url = splash_url
        self._use_splash_url = use_splash_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkSsidSplashSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateNetworkSsidSplashSettings_request of this UpdateNetworkSsidSplashSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def splash_url(self):
        """Gets the splash_url of this UpdateNetworkSsidSplashSettingsRequest.

        [optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'

        :return: The splash_url of this UpdateNetworkSsidSplashSettingsRequest.
        :rtype: str
        """
        return self._splash_url

    @splash_url.setter
    def splash_url(self, splash_url):
        """Sets the splash_url of this UpdateNetworkSsidSplashSettingsRequest.

        [optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'

        :param splash_url: The splash_url of this UpdateNetworkSsidSplashSettingsRequest.
        :type splash_url: str
        """

        self._splash_url = splash_url

    @property
    def use_splash_url(self):
        """Gets the use_splash_url of this UpdateNetworkSsidSplashSettingsRequest.

        [optional] Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.

        :return: The use_splash_url of this UpdateNetworkSsidSplashSettingsRequest.
        :rtype: bool
        """
        return self._use_splash_url

    @use_splash_url.setter
    def use_splash_url(self, use_splash_url):
        """Sets the use_splash_url of this UpdateNetworkSsidSplashSettingsRequest.

        [optional] Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.

        :param use_splash_url: The use_splash_url of this UpdateNetworkSsidSplashSettingsRequest.
        :type use_splash_url: bool
        """

        self._use_splash_url = use_splash_url
