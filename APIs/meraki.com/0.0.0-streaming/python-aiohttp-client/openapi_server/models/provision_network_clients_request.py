# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.provision_network_clients_request_policies_by_security_appliance import ProvisionNetworkClientsRequestPoliciesBySecurityAppliance
from openapi_server.models.provision_network_clients_request_policies_by_ssid import ProvisionNetworkClientsRequestPoliciesBySsid
from openapi_server import util


class ProvisionNetworkClientsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_policy: str=None, group_policy_id: str=None, mac: str=None, name: str=None, policies_by_security_appliance: ProvisionNetworkClientsRequestPoliciesBySecurityAppliance=None, policies_by_ssid: ProvisionNetworkClientsRequestPoliciesBySsid=None):
        """ProvisionNetworkClientsRequest - a model defined in OpenAPI

        :param device_policy: The device_policy of this ProvisionNetworkClientsRequest.
        :param group_policy_id: The group_policy_id of this ProvisionNetworkClientsRequest.
        :param mac: The mac of this ProvisionNetworkClientsRequest.
        :param name: The name of this ProvisionNetworkClientsRequest.
        :param policies_by_security_appliance: The policies_by_security_appliance of this ProvisionNetworkClientsRequest.
        :param policies_by_ssid: The policies_by_ssid of this ProvisionNetworkClientsRequest.
        """
        self.openapi_types = {
            'device_policy': str,
            'group_policy_id': str,
            'mac': str,
            'name': str,
            'policies_by_security_appliance': ProvisionNetworkClientsRequestPoliciesBySecurityAppliance,
            'policies_by_ssid': ProvisionNetworkClientsRequestPoliciesBySsid
        }

        self.attribute_map = {
            'device_policy': 'devicePolicy',
            'group_policy_id': 'groupPolicyId',
            'mac': 'mac',
            'name': 'name',
            'policies_by_security_appliance': 'policiesBySecurityAppliance',
            'policies_by_ssid': 'policiesBySsid'
        }

        self._device_policy = device_policy
        self._group_policy_id = group_policy_id
        self._mac = mac
        self._name = name
        self._policies_by_security_appliance = policies_by_security_appliance
        self._policies_by_ssid = policies_by_ssid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProvisionNetworkClientsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The provisionNetworkClients_request of this ProvisionNetworkClientsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_policy(self):
        """Gets the device_policy of this ProvisionNetworkClientsRequest.

        The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.

        :return: The device_policy of this ProvisionNetworkClientsRequest.
        :rtype: str
        """
        return self._device_policy

    @device_policy.setter
    def device_policy(self, device_policy):
        """Sets the device_policy of this ProvisionNetworkClientsRequest.

        The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.

        :param device_policy: The device_policy of this ProvisionNetworkClientsRequest.
        :type device_policy: str
        """
        allowed_values = ["Allowed", "Blocked", "Group policy", "Normal", "Per connection", "Whitelisted"]  # noqa: E501
        if device_policy not in allowed_values:
            raise ValueError(
                "Invalid value for `device_policy` ({0}), must be one of {1}"
                .format(device_policy, allowed_values)
            )

        self._device_policy = device_policy

    @property
    def group_policy_id(self):
        """Gets the group_policy_id of this ProvisionNetworkClientsRequest.

        The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.

        :return: The group_policy_id of this ProvisionNetworkClientsRequest.
        :rtype: str
        """
        return self._group_policy_id

    @group_policy_id.setter
    def group_policy_id(self, group_policy_id):
        """Sets the group_policy_id of this ProvisionNetworkClientsRequest.

        The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.

        :param group_policy_id: The group_policy_id of this ProvisionNetworkClientsRequest.
        :type group_policy_id: str
        """

        self._group_policy_id = group_policy_id

    @property
    def mac(self):
        """Gets the mac of this ProvisionNetworkClientsRequest.

        The MAC address of the client. Required.

        :return: The mac of this ProvisionNetworkClientsRequest.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """Sets the mac of this ProvisionNetworkClientsRequest.

        The MAC address of the client. Required.

        :param mac: The mac of this ProvisionNetworkClientsRequest.
        :type mac: str
        """
        if mac is None:
            raise ValueError("Invalid value for `mac`, must not be `None`")

        self._mac = mac

    @property
    def name(self):
        """Gets the name of this ProvisionNetworkClientsRequest.

        The display name for the client. Optional. Limited to 255 bytes.

        :return: The name of this ProvisionNetworkClientsRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProvisionNetworkClientsRequest.

        The display name for the client. Optional. Limited to 255 bytes.

        :param name: The name of this ProvisionNetworkClientsRequest.
        :type name: str
        """

        self._name = name

    @property
    def policies_by_security_appliance(self):
        """Gets the policies_by_security_appliance of this ProvisionNetworkClientsRequest.


        :return: The policies_by_security_appliance of this ProvisionNetworkClientsRequest.
        :rtype: ProvisionNetworkClientsRequestPoliciesBySecurityAppliance
        """
        return self._policies_by_security_appliance

    @policies_by_security_appliance.setter
    def policies_by_security_appliance(self, policies_by_security_appliance):
        """Sets the policies_by_security_appliance of this ProvisionNetworkClientsRequest.


        :param policies_by_security_appliance: The policies_by_security_appliance of this ProvisionNetworkClientsRequest.
        :type policies_by_security_appliance: ProvisionNetworkClientsRequestPoliciesBySecurityAppliance
        """

        self._policies_by_security_appliance = policies_by_security_appliance

    @property
    def policies_by_ssid(self):
        """Gets the policies_by_ssid of this ProvisionNetworkClientsRequest.


        :return: The policies_by_ssid of this ProvisionNetworkClientsRequest.
        :rtype: ProvisionNetworkClientsRequestPoliciesBySsid
        """
        return self._policies_by_ssid

    @policies_by_ssid.setter
    def policies_by_ssid(self, policies_by_ssid):
        """Sets the policies_by_ssid of this ProvisionNetworkClientsRequest.


        :param policies_by_ssid: The policies_by_ssid of this ProvisionNetworkClientsRequest.
        :type policies_by_ssid: ProvisionNetworkClientsRequestPoliciesBySsid
        """

        self._policies_by_ssid = policies_by_ssid
