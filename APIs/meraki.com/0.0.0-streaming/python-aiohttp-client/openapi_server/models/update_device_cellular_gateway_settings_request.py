# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_device_cellular_gateway_settings_request_fixed_ip_assignments_inner import UpdateDeviceCellularGatewaySettingsRequestFixedIpAssignmentsInner
from openapi_server.models.update_device_cellular_gateway_settings_request_reserved_ip_ranges_inner import UpdateDeviceCellularGatewaySettingsRequestReservedIpRangesInner
from openapi_server import util


class UpdateDeviceCellularGatewaySettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed_ip_assignments: List[UpdateDeviceCellularGatewaySettingsRequestFixedIpAssignmentsInner]=None, reserved_ip_ranges: List[UpdateDeviceCellularGatewaySettingsRequestReservedIpRangesInner]=None):
        """UpdateDeviceCellularGatewaySettingsRequest - a model defined in OpenAPI

        :param fixed_ip_assignments: The fixed_ip_assignments of this UpdateDeviceCellularGatewaySettingsRequest.
        :param reserved_ip_ranges: The reserved_ip_ranges of this UpdateDeviceCellularGatewaySettingsRequest.
        """
        self.openapi_types = {
            'fixed_ip_assignments': List[UpdateDeviceCellularGatewaySettingsRequestFixedIpAssignmentsInner],
            'reserved_ip_ranges': List[UpdateDeviceCellularGatewaySettingsRequestReservedIpRangesInner]
        }

        self.attribute_map = {
            'fixed_ip_assignments': 'fixedIpAssignments',
            'reserved_ip_ranges': 'reservedIpRanges'
        }

        self._fixed_ip_assignments = fixed_ip_assignments
        self._reserved_ip_ranges = reserved_ip_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDeviceCellularGatewaySettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateDeviceCellularGatewaySettings_request of this UpdateDeviceCellularGatewaySettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed_ip_assignments(self):
        """Gets the fixed_ip_assignments of this UpdateDeviceCellularGatewaySettingsRequest.

        list of all fixed IP assignments for a single MG

        :return: The fixed_ip_assignments of this UpdateDeviceCellularGatewaySettingsRequest.
        :rtype: List[UpdateDeviceCellularGatewaySettingsRequestFixedIpAssignmentsInner]
        """
        return self._fixed_ip_assignments

    @fixed_ip_assignments.setter
    def fixed_ip_assignments(self, fixed_ip_assignments):
        """Sets the fixed_ip_assignments of this UpdateDeviceCellularGatewaySettingsRequest.

        list of all fixed IP assignments for a single MG

        :param fixed_ip_assignments: The fixed_ip_assignments of this UpdateDeviceCellularGatewaySettingsRequest.
        :type fixed_ip_assignments: List[UpdateDeviceCellularGatewaySettingsRequestFixedIpAssignmentsInner]
        """

        self._fixed_ip_assignments = fixed_ip_assignments

    @property
    def reserved_ip_ranges(self):
        """Gets the reserved_ip_ranges of this UpdateDeviceCellularGatewaySettingsRequest.

        list of all reserved IP ranges for a single MG

        :return: The reserved_ip_ranges of this UpdateDeviceCellularGatewaySettingsRequest.
        :rtype: List[UpdateDeviceCellularGatewaySettingsRequestReservedIpRangesInner]
        """
        return self._reserved_ip_ranges

    @reserved_ip_ranges.setter
    def reserved_ip_ranges(self, reserved_ip_ranges):
        """Sets the reserved_ip_ranges of this UpdateDeviceCellularGatewaySettingsRequest.

        list of all reserved IP ranges for a single MG

        :param reserved_ip_ranges: The reserved_ip_ranges of this UpdateDeviceCellularGatewaySettingsRequest.
        :type reserved_ip_ranges: List[UpdateDeviceCellularGatewaySettingsRequestReservedIpRangesInner]
        """

        self._reserved_ip_ranges = reserved_ip_ranges
