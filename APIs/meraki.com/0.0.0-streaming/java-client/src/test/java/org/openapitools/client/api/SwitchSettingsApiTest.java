/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateNetworkSwitchSettingsQosRuleRequest;
import org.openapitools.client.model.UpdateNetworkSwitchSettingsMulticastRequest;
import org.openapitools.client.model.UpdateNetworkSwitchSettingsQosRuleRequest;
import org.openapitools.client.model.UpdateNetworkSwitchSettingsQosRulesOrderRequest;
import org.openapitools.client.model.UpdateNetworkSwitchSettingsRequest;
import org.openapitools.client.model.UpdateNetworkSwitchSettingsStormControlRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SwitchSettingsApi
 */
@Disabled
public class SwitchSettingsApiTest {

    private final SwitchSettingsApi api = new SwitchSettingsApi();

    /**
     * Add a quality of service rule
     *
     * Add a quality of service rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNetworkSwitchSettingsQosRuleTest() throws ApiException {
        String networkId = null;
        CreateNetworkSwitchSettingsQosRuleRequest createNetworkSwitchSettingsQosRuleRequest = null;
        Object response = api.createNetworkSwitchSettingsQosRule(networkId, createNetworkSwitchSettingsQosRuleRequest);
        // TODO: test validations
    }

    /**
     * Delete a quality of service rule
     *
     * Delete a quality of service rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteNetworkSwitchSettingsQosRuleTest() throws ApiException {
        String networkId = null;
        String qosRuleId = null;
        api.deleteNetworkSwitchSettingsQosRule(networkId, qosRuleId);
        // TODO: test validations
    }

    /**
     * Returns the switch network settings
     *
     * Returns the switch network settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSwitchSettingsTest() throws ApiException {
        String networkId = null;
        Object response = api.getNetworkSwitchSettings(networkId);
        // TODO: test validations
    }

    /**
     * Return the MTU configuration
     *
     * Return the MTU configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSwitchSettingsMtuTest() throws ApiException {
        String networkId = null;
        Object response = api.getNetworkSwitchSettingsMtu(networkId);
        // TODO: test validations
    }

    /**
     * Return multicast settings for a network
     *
     * Return multicast settings for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSwitchSettingsMulticastTest() throws ApiException {
        String networkId = null;
        Object response = api.getNetworkSwitchSettingsMulticast(networkId);
        // TODO: test validations
    }

    /**
     * Return a quality of service rule
     *
     * Return a quality of service rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSwitchSettingsQosRuleTest() throws ApiException {
        String networkId = null;
        String qosRuleId = null;
        Object response = api.getNetworkSwitchSettingsQosRule(networkId, qosRuleId);
        // TODO: test validations
    }

    /**
     * List quality of service rules
     *
     * List quality of service rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSwitchSettingsQosRulesTest() throws ApiException {
        String networkId = null;
        List<Object> response = api.getNetworkSwitchSettingsQosRules(networkId);
        // TODO: test validations
    }

    /**
     * Return the quality of service rule IDs by order in which they will be processed by the switch
     *
     * Return the quality of service rule IDs by order in which they will be processed by the switch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSwitchSettingsQosRulesOrderTest() throws ApiException {
        String networkId = null;
        Object response = api.getNetworkSwitchSettingsQosRulesOrder(networkId);
        // TODO: test validations
    }

    /**
     * Return the storm control configuration for a switch network
     *
     * Return the storm control configuration for a switch network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSwitchSettingsStormControlTest() throws ApiException {
        String networkId = null;
        Object response = api.getNetworkSwitchSettingsStormControl(networkId);
        // TODO: test validations
    }

    /**
     * Update switch network settings
     *
     * Update switch network settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkSwitchSettingsTest() throws ApiException {
        String networkId = null;
        UpdateNetworkSwitchSettingsRequest updateNetworkSwitchSettingsRequest = null;
        Object response = api.updateNetworkSwitchSettings(networkId, updateNetworkSwitchSettingsRequest);
        // TODO: test validations
    }

    /**
     * Update multicast settings for a network
     *
     * Update multicast settings for a network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkSwitchSettingsMulticastTest() throws ApiException {
        String networkId = null;
        UpdateNetworkSwitchSettingsMulticastRequest updateNetworkSwitchSettingsMulticastRequest = null;
        Object response = api.updateNetworkSwitchSettingsMulticast(networkId, updateNetworkSwitchSettingsMulticastRequest);
        // TODO: test validations
    }

    /**
     * Update a quality of service rule
     *
     * Update a quality of service rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkSwitchSettingsQosRuleTest() throws ApiException {
        String networkId = null;
        String qosRuleId = null;
        UpdateNetworkSwitchSettingsQosRuleRequest updateNetworkSwitchSettingsQosRuleRequest = null;
        Object response = api.updateNetworkSwitchSettingsQosRule(networkId, qosRuleId, updateNetworkSwitchSettingsQosRuleRequest);
        // TODO: test validations
    }

    /**
     * Update the order in which the rules should be processed by the switch
     *
     * Update the order in which the rules should be processed by the switch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkSwitchSettingsQosRulesOrderTest() throws ApiException {
        String networkId = null;
        UpdateNetworkSwitchSettingsQosRulesOrderRequest updateNetworkSwitchSettingsQosRulesOrderRequest = null;
        Object response = api.updateNetworkSwitchSettingsQosRulesOrder(networkId, updateNetworkSwitchSettingsQosRulesOrderRequest);
        // TODO: test validations
    }

    /**
     * Update the storm control configuration for a switch network
     *
     * Update the storm control configuration for a switch network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkSwitchSettingsStormControlTest() throws ApiException {
        String networkId = null;
        UpdateNetworkSwitchSettingsStormControlRequest updateNetworkSwitchSettingsStormControlRequest = null;
        Object response = api.updateNetworkSwitchSettingsStormControl(networkId, updateNetworkSwitchSettingsStormControlRequest);
        // TODO: test validations
    }

}
