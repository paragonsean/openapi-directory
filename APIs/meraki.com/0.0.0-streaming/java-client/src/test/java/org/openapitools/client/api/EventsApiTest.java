/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
@Disabled
public class EventsApiTest {

    private final EventsApi api = new EventsApi();

    /**
     * List the events for the network
     *
     * List the events for the network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkEventsTest() throws ApiException {
        String networkId = null;
        String productType = null;
        List<String> includedEventTypes = null;
        List<String> excludedEventTypes = null;
        String deviceMac = null;
        String deviceSerial = null;
        String deviceName = null;
        String clientIp = null;
        String clientMac = null;
        String clientName = null;
        String smDeviceMac = null;
        String smDeviceName = null;
        Integer perPage = null;
        String startingAfter = null;
        String endingBefore = null;
        Object response = api.getNetworkEvents(networkId, productType, includedEventTypes, excludedEventTypes, deviceMac, deviceSerial, deviceName, clientIp, clientMac, clientName, smDeviceMac, smDeviceName, perPage, startingAfter, endingBefore);
        // TODO: test validations
    }

    /**
     * List the event type to human-readable description
     *
     * List the event type to human-readable description
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkEventsEventTypesTest() throws ApiException {
        String networkId = null;
        List<Object> response = api.getNetworkEventsEventTypes(networkId);
        // TODO: test validations
    }

}
