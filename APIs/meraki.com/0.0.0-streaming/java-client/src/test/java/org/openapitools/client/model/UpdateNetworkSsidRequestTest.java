/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpdateNetworkSsidRequestApTagsAndVlanIdsInner;
import org.openapitools.client.model.UpdateNetworkSsidRequestRadiusAccountingServersInner;
import org.openapitools.client.model.UpdateNetworkSsidRequestRadiusServersInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateNetworkSsidRequest
 */
public class UpdateNetworkSsidRequestTest {
    private final UpdateNetworkSsidRequest model = new UpdateNetworkSsidRequest();

    /**
     * Model tests for UpdateNetworkSsidRequest
     */
    @Test
    public void testUpdateNetworkSsidRequest() {
        // TODO: test UpdateNetworkSsidRequest
    }

    /**
     * Test the property 'apTagsAndVlanIds'
     */
    @Test
    public void apTagsAndVlanIdsTest() {
        // TODO: test apTagsAndVlanIds
    }

    /**
     * Test the property 'authMode'
     */
    @Test
    public void authModeTest() {
        // TODO: test authMode
    }

    /**
     * Test the property 'availabilityTags'
     */
    @Test
    public void availabilityTagsTest() {
        // TODO: test availabilityTags
    }

    /**
     * Test the property 'availableOnAllAps'
     */
    @Test
    public void availableOnAllApsTest() {
        // TODO: test availableOnAllAps
    }

    /**
     * Test the property 'bandSelection'
     */
    @Test
    public void bandSelectionTest() {
        // TODO: test bandSelection
    }

    /**
     * Test the property 'concentratorNetworkId'
     */
    @Test
    public void concentratorNetworkIdTest() {
        // TODO: test concentratorNetworkId
    }

    /**
     * Test the property 'defaultVlanId'
     */
    @Test
    public void defaultVlanIdTest() {
        // TODO: test defaultVlanId
    }

    /**
     * Test the property 'disassociateClientsOnVpnFailover'
     */
    @Test
    public void disassociateClientsOnVpnFailoverTest() {
        // TODO: test disassociateClientsOnVpnFailover
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'encryptionMode'
     */
    @Test
    public void encryptionModeTest() {
        // TODO: test encryptionMode
    }

    /**
     * Test the property 'enterpriseAdminAccess'
     */
    @Test
    public void enterpriseAdminAccessTest() {
        // TODO: test enterpriseAdminAccess
    }

    /**
     * Test the property 'ipAssignmentMode'
     */
    @Test
    public void ipAssignmentModeTest() {
        // TODO: test ipAssignmentMode
    }

    /**
     * Test the property 'lanIsolationEnabled'
     */
    @Test
    public void lanIsolationEnabledTest() {
        // TODO: test lanIsolationEnabled
    }

    /**
     * Test the property 'minBitrate'
     */
    @Test
    public void minBitrateTest() {
        // TODO: test minBitrate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'perClientBandwidthLimitDown'
     */
    @Test
    public void perClientBandwidthLimitDownTest() {
        // TODO: test perClientBandwidthLimitDown
    }

    /**
     * Test the property 'perClientBandwidthLimitUp'
     */
    @Test
    public void perClientBandwidthLimitUpTest() {
        // TODO: test perClientBandwidthLimitUp
    }

    /**
     * Test the property 'psk'
     */
    @Test
    public void pskTest() {
        // TODO: test psk
    }

    /**
     * Test the property 'radiusAccountingEnabled'
     */
    @Test
    public void radiusAccountingEnabledTest() {
        // TODO: test radiusAccountingEnabled
    }

    /**
     * Test the property 'radiusAccountingServers'
     */
    @Test
    public void radiusAccountingServersTest() {
        // TODO: test radiusAccountingServers
    }

    /**
     * Test the property 'radiusAttributeForGroupPolicies'
     */
    @Test
    public void radiusAttributeForGroupPoliciesTest() {
        // TODO: test radiusAttributeForGroupPolicies
    }

    /**
     * Test the property 'radiusCoaEnabled'
     */
    @Test
    public void radiusCoaEnabledTest() {
        // TODO: test radiusCoaEnabled
    }

    /**
     * Test the property 'radiusFailoverPolicy'
     */
    @Test
    public void radiusFailoverPolicyTest() {
        // TODO: test radiusFailoverPolicy
    }

    /**
     * Test the property 'radiusLoadBalancingPolicy'
     */
    @Test
    public void radiusLoadBalancingPolicyTest() {
        // TODO: test radiusLoadBalancingPolicy
    }

    /**
     * Test the property 'radiusOverride'
     */
    @Test
    public void radiusOverrideTest() {
        // TODO: test radiusOverride
    }

    /**
     * Test the property 'radiusServers'
     */
    @Test
    public void radiusServersTest() {
        // TODO: test radiusServers
    }

    /**
     * Test the property 'secondaryConcentratorNetworkId'
     */
    @Test
    public void secondaryConcentratorNetworkIdTest() {
        // TODO: test secondaryConcentratorNetworkId
    }

    /**
     * Test the property 'splashPage'
     */
    @Test
    public void splashPageTest() {
        // TODO: test splashPage
    }

    /**
     * Test the property 'useVlanTagging'
     */
    @Test
    public void useVlanTaggingTest() {
        // TODO: test useVlanTagging
    }

    /**
     * Test the property 'visible'
     */
    @Test
    public void visibleTest() {
        // TODO: test visible
    }

    /**
     * Test the property 'vlanId'
     */
    @Test
    public void vlanIdTest() {
        // TODO: test vlanId
    }

    /**
     * Test the property 'walledGardenEnabled'
     */
    @Test
    public void walledGardenEnabledTest() {
        // TODO: test walledGardenEnabled
    }

    /**
     * Test the property 'walledGardenRanges'
     */
    @Test
    public void walledGardenRangesTest() {
        // TODO: test walledGardenRanges
    }

    /**
     * Test the property 'wpaEncryptionMode'
     */
    @Test
    public void wpaEncryptionModeTest() {
        // TODO: test wpaEncryptionMode
    }

}
