/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BluetoothClientsApi
 */
@Disabled
public class BluetoothClientsApiTest {

    private final BluetoothClientsApi api = new BluetoothClientsApi();

    /**
     * Return a Bluetooth client
     *
     * Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkBluetoothClientTest() throws ApiException {
        String networkId = null;
        String bluetoothClientId = null;
        Boolean includeConnectivityHistory = null;
        Integer connectivityHistoryTimespan = null;
        Object response = api.getNetworkBluetoothClient(networkId, bluetoothClientId, includeConnectivityHistory, connectivityHistoryTimespan);
        // TODO: test validations
    }

    /**
     * List the Bluetooth clients seen by APs in this network
     *
     * List the Bluetooth clients seen by APs in this network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkBluetoothClientsTest() throws ApiException {
        String networkId = null;
        String t0 = null;
        Float timespan = null;
        Integer perPage = null;
        String startingAfter = null;
        String endingBefore = null;
        Boolean includeConnectivityHistory = null;
        List<Object> response = api.getNetworkBluetoothClients(networkId, t0, timespan, perPage, startingAfter, endingBefore, includeConnectivityHistory);
        // TODO: test validations
    }

}
