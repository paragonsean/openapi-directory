/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UpdateNetworkSsidRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SsidsApi
 */
@Disabled
public class SsidsApiTest {

    private final SsidsApi api = new SsidsApi();

    /**
     * Return the SSID statuses of an access point
     *
     * Return the SSID statuses of an access point
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkDeviceWirelessStatusTest() throws ApiException {
        String networkId = null;
        String serial = null;
        Object response = api.getNetworkDeviceWirelessStatus(networkId, serial);
        // TODO: test validations
    }

    /**
     * Return a single SSID
     *
     * Return a single SSID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSsidTest() throws ApiException {
        String networkId = null;
        String number = null;
        Object response = api.getNetworkSsid(networkId, number);
        // TODO: test validations
    }

    /**
     * List the SSIDs in a network
     *
     * List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkSsidsTest() throws ApiException {
        String networkId = null;
        List<Object> response = api.getNetworkSsids(networkId);
        // TODO: test validations
    }

    /**
     * Update the attributes of an SSID
     *
     * Update the attributes of an SSID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkSsidTest() throws ApiException {
        String networkId = null;
        String number = null;
        UpdateNetworkSsidRequest updateNetworkSsidRequest = null;
        Object response = api.updateNetworkSsid(networkId, number, updateNetworkSsidRequest);
        // TODO: test validations
    }

}
