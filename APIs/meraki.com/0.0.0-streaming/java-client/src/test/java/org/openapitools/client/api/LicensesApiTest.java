/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AssignOrganizationLicensesSeatsRequest;
import org.openapitools.client.model.MoveOrganizationLicensesSeatsRequest;
import org.openapitools.client.model.RenewOrganizationLicensesSeatsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LicensesApi
 */
@Disabled
public class LicensesApiTest {

    private final LicensesApi api = new LicensesApi();

    /**
     * Assign SM seats to a network
     *
     * Assign SM seats to a network. This will increase the managed SM device limit of the network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignOrganizationLicensesSeatsTest() throws ApiException {
        String organizationId = null;
        AssignOrganizationLicensesSeatsRequest assignOrganizationLicensesSeatsRequest = null;
        Object response = api.assignOrganizationLicensesSeats(organizationId, assignOrganizationLicensesSeatsRequest);
        // TODO: test validations
    }

    /**
     * Display a license
     *
     * Display a license
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationLicenseTest() throws ApiException {
        String organizationId = null;
        String licenseId = null;
        Object response = api.getOrganizationLicense(organizationId, licenseId);
        // TODO: test validations
    }

    /**
     * Return an overview of the license state for an organization
     *
     * Return an overview of the license state for an organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationLicenseStateTest() throws ApiException {
        String organizationId = null;
        Object response = api.getOrganizationLicenseState(organizationId);
        // TODO: test validations
    }

    /**
     * List the licenses for an organization
     *
     * List the licenses for an organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationLicensesTest() throws ApiException {
        String organizationId = null;
        Integer perPage = null;
        String startingAfter = null;
        String endingBefore = null;
        String deviceSerial = null;
        String networkId = null;
        String state = null;
        List<Object> response = api.getOrganizationLicenses(organizationId, perPage, startingAfter, endingBefore, deviceSerial, networkId, state);
        // TODO: test validations
    }

    /**
     * Move SM seats to another organization
     *
     * Move SM seats to another organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void moveOrganizationLicensesSeatsTest() throws ApiException {
        String organizationId = null;
        MoveOrganizationLicensesSeatsRequest moveOrganizationLicensesSeatsRequest = null;
        Object response = api.moveOrganizationLicensesSeats(organizationId, moveOrganizationLicensesSeatsRequest);
        // TODO: test validations
    }

    /**
     * Renew SM seats of a license
     *
     * Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renewOrganizationLicensesSeatsTest() throws ApiException {
        String organizationId = null;
        RenewOrganizationLicensesSeatsRequest renewOrganizationLicensesSeatsRequest = null;
        Object response = api.renewOrganizationLicensesSeats(organizationId, renewOrganizationLicensesSeatsRequest);
        // TODO: test validations
    }

}
