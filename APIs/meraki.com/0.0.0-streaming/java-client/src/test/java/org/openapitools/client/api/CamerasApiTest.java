/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GenerateNetworkCameraSnapshotRequest;
import org.openapitools.client.model.UpdateDeviceCameraVideoSettingsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CamerasApi
 */
@Disabled
public class CamerasApiTest {

    private final CamerasApi api = new CamerasApi();

    /**
     * Generate a snapshot of what the camera sees at the specified time and return a link to that image.
     *
     * Generate a snapshot of what the camera sees at the specified time and return a link to that image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateNetworkCameraSnapshotTest() throws ApiException {
        String networkId = null;
        String serial = null;
        GenerateNetworkCameraSnapshotRequest generateNetworkCameraSnapshotRequest = null;
        Object response = api.generateNetworkCameraSnapshot(networkId, serial, generateNetworkCameraSnapshotRequest);
        // TODO: test validations
    }

    /**
     * Returns video settings for the given camera
     *
     * Returns video settings for the given camera
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDeviceCameraVideoSettingsTest() throws ApiException {
        String serial = null;
        Object response = api.getDeviceCameraVideoSettings(serial);
        // TODO: test validations
    }

    /**
     * Returns a list of all camera recording schedules.
     *
     * Returns a list of all camera recording schedules.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkCameraSchedulesTest() throws ApiException {
        String networkId = null;
        List<Object> response = api.getNetworkCameraSchedules(networkId);
        // TODO: test validations
    }

    /**
     * Returns video link to the specified camera
     *
     * Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkCameraVideoLinkTest() throws ApiException {
        String networkId = null;
        String serial = null;
        String timestamp = null;
        Object response = api.getNetworkCameraVideoLink(networkId, serial, timestamp);
        // TODO: test validations
    }

    /**
     * Update video settings for the given camera
     *
     * Update video settings for the given camera
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDeviceCameraVideoSettingsTest() throws ApiException {
        String serial = null;
        UpdateDeviceCameraVideoSettingsRequest updateDeviceCameraVideoSettingsRequest = null;
        Object response = api.updateDeviceCameraVideoSettings(serial, updateDeviceCameraVideoSettingsRequest);
        // TODO: test validations
    }

}
