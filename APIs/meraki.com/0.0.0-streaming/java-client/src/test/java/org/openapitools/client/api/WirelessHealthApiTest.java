/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WirelessHealthApi
 */
@Disabled
public class WirelessHealthApiTest {

    private final WirelessHealthApi api = new WirelessHealthApi();

    /**
     * Aggregated connectivity info for a given client on this network
     *
     * Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkClientConnectionStatsTest() throws ApiException {
        String networkId = null;
        String clientId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        Object response = api.getNetworkClientConnectionStats(networkId, clientId, t0, t1, timespan, band, ssid, vlan, apTag);
        // TODO: test validations
    }

    /**
     * Aggregated latency info for a given client on this network
     *
     * Aggregated latency info for a given client on this network. Clients are identified by their MAC.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkClientLatencyStatsTest() throws ApiException {
        String networkId = null;
        String clientId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        String fields = null;
        Object response = api.getNetworkClientLatencyStats(networkId, clientId, t0, t1, timespan, band, ssid, vlan, apTag, fields);
        // TODO: test validations
    }

    /**
     * Aggregated connectivity info for this network, grouped by clients
     *
     * Aggregated connectivity info for this network, grouped by clients
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkClientsConnectionStatsTest() throws ApiException {
        String networkId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        List<Object> response = api.getNetworkClientsConnectionStats(networkId, t0, t1, timespan, band, ssid, vlan, apTag);
        // TODO: test validations
    }

    /**
     * Aggregated latency info for this network, grouped by clients
     *
     * Aggregated latency info for this network, grouped by clients
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkClientsLatencyStatsTest() throws ApiException {
        String networkId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        String fields = null;
        List<Object> response = api.getNetworkClientsLatencyStats(networkId, t0, t1, timespan, band, ssid, vlan, apTag, fields);
        // TODO: test validations
    }

    /**
     * Aggregated connectivity info for this network
     *
     * Aggregated connectivity info for this network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkConnectionStatsTest() throws ApiException {
        String networkId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        Object response = api.getNetworkConnectionStats(networkId, t0, t1, timespan, band, ssid, vlan, apTag);
        // TODO: test validations
    }

    /**
     * Aggregated connectivity info for a given AP on this network
     *
     * Aggregated connectivity info for a given AP on this network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkDeviceConnectionStatsTest() throws ApiException {
        String networkId = null;
        String serial = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        Object response = api.getNetworkDeviceConnectionStats(networkId, serial, t0, t1, timespan, band, ssid, vlan, apTag);
        // TODO: test validations
    }

    /**
     * Aggregated latency info for a given AP on this network
     *
     * Aggregated latency info for a given AP on this network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkDeviceLatencyStatsTest() throws ApiException {
        String networkId = null;
        String serial = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        String fields = null;
        Object response = api.getNetworkDeviceLatencyStats(networkId, serial, t0, t1, timespan, band, ssid, vlan, apTag, fields);
        // TODO: test validations
    }

    /**
     * Aggregated connectivity info for this network, grouped by node
     *
     * Aggregated connectivity info for this network, grouped by node
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkDevicesConnectionStatsTest() throws ApiException {
        String networkId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        List<Object> response = api.getNetworkDevicesConnectionStats(networkId, t0, t1, timespan, band, ssid, vlan, apTag);
        // TODO: test validations
    }

    /**
     * Aggregated latency info for this network, grouped by node
     *
     * Aggregated latency info for this network, grouped by node
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkDevicesLatencyStatsTest() throws ApiException {
        String networkId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        String fields = null;
        List<Object> response = api.getNetworkDevicesLatencyStats(networkId, t0, t1, timespan, band, ssid, vlan, apTag, fields);
        // TODO: test validations
    }

    /**
     * List of all failed client connection events on this network in a given time range
     *
     * List of all failed client connection events on this network in a given time range
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkFailedConnectionsTest() throws ApiException {
        String networkId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        String serial = null;
        String clientId = null;
        List<Object> response = api.getNetworkFailedConnections(networkId, t0, t1, timespan, band, ssid, vlan, apTag, serial, clientId);
        // TODO: test validations
    }

    /**
     * Aggregated latency info for this network
     *
     * Aggregated latency info for this network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkLatencyStatsTest() throws ApiException {
        String networkId = null;
        String t0 = null;
        String t1 = null;
        Float timespan = null;
        String band = null;
        Integer ssid = null;
        Integer vlan = null;
        String apTag = null;
        String fields = null;
        Object response = api.getNetworkLatencyStats(networkId, t0, t1, timespan, band, ssid, vlan, apTag, fields);
        // TODO: test validations
    }

}
