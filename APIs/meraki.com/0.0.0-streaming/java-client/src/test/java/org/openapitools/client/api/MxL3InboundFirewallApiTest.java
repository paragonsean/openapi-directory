/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UpdateNetworkApplianceFirewallInboundFirewallRulesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MxL3InboundFirewallApi
 */
@Disabled
public class MxL3InboundFirewallApiTest {

    private final MxL3InboundFirewallApi api = new MxL3InboundFirewallApi();

    /**
     * Return the inbound firewall rules for an MX network
     *
     * Return the inbound firewall rules for an MX network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNetworkApplianceFirewallInboundFirewallRulesTest() throws ApiException {
        String networkId = null;
        Object response = api.getNetworkApplianceFirewallInboundFirewallRules(networkId);
        // TODO: test validations
    }

    /**
     * Update the inbound firewall rules of an MX network
     *
     * Update the inbound firewall rules of an MX network
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNetworkApplianceFirewallInboundFirewallRulesTest() throws ApiException {
        String networkId = null;
        UpdateNetworkApplianceFirewallInboundFirewallRulesRequest updateNetworkApplianceFirewallInboundFirewallRulesRequest = null;
        Object response = api.updateNetworkApplianceFirewallInboundFirewallRules(networkId, updateNetworkApplianceFirewallInboundFirewallRulesRequest);
        // TODO: test validations
    }

}
