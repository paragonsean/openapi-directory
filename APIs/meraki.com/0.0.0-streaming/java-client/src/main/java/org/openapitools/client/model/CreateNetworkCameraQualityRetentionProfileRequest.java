/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateNetworkCameraQualityRetentionProfileRequestVideoSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateNetworkCameraQualityRetentionProfileRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:53.186925-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateNetworkCameraQualityRetentionProfileRequest {
  public static final String SERIALIZED_NAME_AUDIO_RECORDING_ENABLED = "audioRecordingEnabled";
  @SerializedName(SERIALIZED_NAME_AUDIO_RECORDING_ENABLED)
  private Boolean audioRecordingEnabled;

  public static final String SERIALIZED_NAME_CLOUD_ARCHIVE_ENABLED = "cloudArchiveEnabled";
  @SerializedName(SERIALIZED_NAME_CLOUD_ARCHIVE_ENABLED)
  private Boolean cloudArchiveEnabled;

  public static final String SERIALIZED_NAME_MAX_RETENTION_DAYS = "maxRetentionDays";
  @SerializedName(SERIALIZED_NAME_MAX_RETENTION_DAYS)
  private Integer maxRetentionDays;

  public static final String SERIALIZED_NAME_MOTION_BASED_RETENTION_ENABLED = "motionBasedRetentionEnabled";
  @SerializedName(SERIALIZED_NAME_MOTION_BASED_RETENTION_ENABLED)
  private Boolean motionBasedRetentionEnabled;

  public static final String SERIALIZED_NAME_MOTION_DETECTOR_VERSION = "motionDetectorVersion";
  @SerializedName(SERIALIZED_NAME_MOTION_DETECTOR_VERSION)
  private Integer motionDetectorVersion;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RESTRICTED_BANDWIDTH_MODE_ENABLED = "restrictedBandwidthModeEnabled";
  @SerializedName(SERIALIZED_NAME_RESTRICTED_BANDWIDTH_MODE_ENABLED)
  private Boolean restrictedBandwidthModeEnabled;

  public static final String SERIALIZED_NAME_SCHEDULE_ID = "scheduleId";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_ID)
  private String scheduleId;

  public static final String SERIALIZED_NAME_VIDEO_SETTINGS = "videoSettings";
  @SerializedName(SERIALIZED_NAME_VIDEO_SETTINGS)
  private CreateNetworkCameraQualityRetentionProfileRequestVideoSettings videoSettings;

  public CreateNetworkCameraQualityRetentionProfileRequest() {
  }

  public CreateNetworkCameraQualityRetentionProfileRequest audioRecordingEnabled(Boolean audioRecordingEnabled) {
    this.audioRecordingEnabled = audioRecordingEnabled;
    return this;
  }

  /**
   * Whether or not to record audio. Can be either true or false. Defaults to false.
   * @return audioRecordingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAudioRecordingEnabled() {
    return audioRecordingEnabled;
  }

  public void setAudioRecordingEnabled(Boolean audioRecordingEnabled) {
    this.audioRecordingEnabled = audioRecordingEnabled;
  }


  public CreateNetworkCameraQualityRetentionProfileRequest cloudArchiveEnabled(Boolean cloudArchiveEnabled) {
    this.cloudArchiveEnabled = cloudArchiveEnabled;
    return this;
  }

  /**
   * Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
   * @return cloudArchiveEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCloudArchiveEnabled() {
    return cloudArchiveEnabled;
  }

  public void setCloudArchiveEnabled(Boolean cloudArchiveEnabled) {
    this.cloudArchiveEnabled = cloudArchiveEnabled;
  }


  public CreateNetworkCameraQualityRetentionProfileRequest maxRetentionDays(Integer maxRetentionDays) {
    this.maxRetentionDays = maxRetentionDays;
    return this;
  }

  /**
   * The maximum number of days for which the data will be stored, or &#39;null&#39; to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days.
   * @return maxRetentionDays
   */
  @javax.annotation.Nullable
  public Integer getMaxRetentionDays() {
    return maxRetentionDays;
  }

  public void setMaxRetentionDays(Integer maxRetentionDays) {
    this.maxRetentionDays = maxRetentionDays;
  }


  public CreateNetworkCameraQualityRetentionProfileRequest motionBasedRetentionEnabled(Boolean motionBasedRetentionEnabled) {
    this.motionBasedRetentionEnabled = motionBasedRetentionEnabled;
    return this;
  }

  /**
   * Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
   * @return motionBasedRetentionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getMotionBasedRetentionEnabled() {
    return motionBasedRetentionEnabled;
  }

  public void setMotionBasedRetentionEnabled(Boolean motionBasedRetentionEnabled) {
    this.motionBasedRetentionEnabled = motionBasedRetentionEnabled;
  }


  public CreateNetworkCameraQualityRetentionProfileRequest motionDetectorVersion(Integer motionDetectorVersion) {
    this.motionDetectorVersion = motionDetectorVersion;
    return this;
  }

  /**
   * The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
   * @return motionDetectorVersion
   */
  @javax.annotation.Nullable
  public Integer getMotionDetectorVersion() {
    return motionDetectorVersion;
  }

  public void setMotionDetectorVersion(Integer motionDetectorVersion) {
    this.motionDetectorVersion = motionDetectorVersion;
  }


  public CreateNetworkCameraQualityRetentionProfileRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the new profile. Must be unique. This parameter is required.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateNetworkCameraQualityRetentionProfileRequest restrictedBandwidthModeEnabled(Boolean restrictedBandwidthModeEnabled) {
    this.restrictedBandwidthModeEnabled = restrictedBandwidthModeEnabled;
    return this;
  }

  /**
   * Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
   * @return restrictedBandwidthModeEnabled
   */
  @javax.annotation.Nullable
  public Boolean getRestrictedBandwidthModeEnabled() {
    return restrictedBandwidthModeEnabled;
  }

  public void setRestrictedBandwidthModeEnabled(Boolean restrictedBandwidthModeEnabled) {
    this.restrictedBandwidthModeEnabled = restrictedBandwidthModeEnabled;
  }


  public CreateNetworkCameraQualityRetentionProfileRequest scheduleId(String scheduleId) {
    this.scheduleId = scheduleId;
    return this;
  }

  /**
   * Schedule for which this camera will record video, or &#39;null&#39; to always record.
   * @return scheduleId
   */
  @javax.annotation.Nullable
  public String getScheduleId() {
    return scheduleId;
  }

  public void setScheduleId(String scheduleId) {
    this.scheduleId = scheduleId;
  }


  public CreateNetworkCameraQualityRetentionProfileRequest videoSettings(CreateNetworkCameraQualityRetentionProfileRequestVideoSettings videoSettings) {
    this.videoSettings = videoSettings;
    return this;
  }

  /**
   * Get videoSettings
   * @return videoSettings
   */
  @javax.annotation.Nullable
  public CreateNetworkCameraQualityRetentionProfileRequestVideoSettings getVideoSettings() {
    return videoSettings;
  }

  public void setVideoSettings(CreateNetworkCameraQualityRetentionProfileRequestVideoSettings videoSettings) {
    this.videoSettings = videoSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateNetworkCameraQualityRetentionProfileRequest createNetworkCameraQualityRetentionProfileRequest = (CreateNetworkCameraQualityRetentionProfileRequest) o;
    return Objects.equals(this.audioRecordingEnabled, createNetworkCameraQualityRetentionProfileRequest.audioRecordingEnabled) &&
        Objects.equals(this.cloudArchiveEnabled, createNetworkCameraQualityRetentionProfileRequest.cloudArchiveEnabled) &&
        Objects.equals(this.maxRetentionDays, createNetworkCameraQualityRetentionProfileRequest.maxRetentionDays) &&
        Objects.equals(this.motionBasedRetentionEnabled, createNetworkCameraQualityRetentionProfileRequest.motionBasedRetentionEnabled) &&
        Objects.equals(this.motionDetectorVersion, createNetworkCameraQualityRetentionProfileRequest.motionDetectorVersion) &&
        Objects.equals(this.name, createNetworkCameraQualityRetentionProfileRequest.name) &&
        Objects.equals(this.restrictedBandwidthModeEnabled, createNetworkCameraQualityRetentionProfileRequest.restrictedBandwidthModeEnabled) &&
        Objects.equals(this.scheduleId, createNetworkCameraQualityRetentionProfileRequest.scheduleId) &&
        Objects.equals(this.videoSettings, createNetworkCameraQualityRetentionProfileRequest.videoSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioRecordingEnabled, cloudArchiveEnabled, maxRetentionDays, motionBasedRetentionEnabled, motionDetectorVersion, name, restrictedBandwidthModeEnabled, scheduleId, videoSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateNetworkCameraQualityRetentionProfileRequest {\n");
    sb.append("    audioRecordingEnabled: ").append(toIndentedString(audioRecordingEnabled)).append("\n");
    sb.append("    cloudArchiveEnabled: ").append(toIndentedString(cloudArchiveEnabled)).append("\n");
    sb.append("    maxRetentionDays: ").append(toIndentedString(maxRetentionDays)).append("\n");
    sb.append("    motionBasedRetentionEnabled: ").append(toIndentedString(motionBasedRetentionEnabled)).append("\n");
    sb.append("    motionDetectorVersion: ").append(toIndentedString(motionDetectorVersion)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    restrictedBandwidthModeEnabled: ").append(toIndentedString(restrictedBandwidthModeEnabled)).append("\n");
    sb.append("    scheduleId: ").append(toIndentedString(scheduleId)).append("\n");
    sb.append("    videoSettings: ").append(toIndentedString(videoSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("audioRecordingEnabled");
    openapiFields.add("cloudArchiveEnabled");
    openapiFields.add("maxRetentionDays");
    openapiFields.add("motionBasedRetentionEnabled");
    openapiFields.add("motionDetectorVersion");
    openapiFields.add("name");
    openapiFields.add("restrictedBandwidthModeEnabled");
    openapiFields.add("scheduleId");
    openapiFields.add("videoSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateNetworkCameraQualityRetentionProfileRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateNetworkCameraQualityRetentionProfileRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateNetworkCameraQualityRetentionProfileRequest is not found in the empty JSON string", CreateNetworkCameraQualityRetentionProfileRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateNetworkCameraQualityRetentionProfileRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateNetworkCameraQualityRetentionProfileRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateNetworkCameraQualityRetentionProfileRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("scheduleId") != null && !jsonObj.get("scheduleId").isJsonNull()) && !jsonObj.get("scheduleId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scheduleId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scheduleId").toString()));
      }
      // validate the optional field `videoSettings`
      if (jsonObj.get("videoSettings") != null && !jsonObj.get("videoSettings").isJsonNull()) {
        CreateNetworkCameraQualityRetentionProfileRequestVideoSettings.validateJsonElement(jsonObj.get("videoSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateNetworkCameraQualityRetentionProfileRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateNetworkCameraQualityRetentionProfileRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateNetworkCameraQualityRetentionProfileRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateNetworkCameraQualityRetentionProfileRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateNetworkCameraQualityRetentionProfileRequest>() {
           @Override
           public void write(JsonWriter out, CreateNetworkCameraQualityRetentionProfileRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateNetworkCameraQualityRetentionProfileRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateNetworkCameraQualityRetentionProfileRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateNetworkCameraQualityRetentionProfileRequest
   * @throws IOException if the JSON string is invalid with respect to CreateNetworkCameraQualityRetentionProfileRequest
   */
  public static CreateNetworkCameraQualityRetentionProfileRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateNetworkCameraQualityRetentionProfileRequest.class);
  }

  /**
   * Convert an instance of CreateNetworkCameraQualityRetentionProfileRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

