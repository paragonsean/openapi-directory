/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.NetworksApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NetworksApi', function() {
    describe('bindNetwork', function() {
      it('should call bindNetwork successfully', function(done) {
        //uncomment below and update the code to test bindNetwork
        //instance.bindNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('combineOrganizationNetworks', function() {
      it('should call combineOrganizationNetworks successfully', function(done) {
        //uncomment below and update the code to test combineOrganizationNetworks
        //instance.combineOrganizationNetworks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrganizationNetwork', function() {
      it('should call createOrganizationNetwork successfully', function(done) {
        //uncomment below and update the code to test createOrganizationNetwork
        //instance.createOrganizationNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNetwork', function() {
      it('should call deleteNetwork successfully', function(done) {
        //uncomment below and update the code to test deleteNetwork
        //instance.deleteNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetwork', function() {
      it('should call getNetwork successfully', function(done) {
        //uncomment below and update the code to test getNetwork
        //instance.getNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAirMarshal', function() {
      it('should call getNetworkAirMarshal successfully', function(done) {
        //uncomment below and update the code to test getNetworkAirMarshal
        //instance.getNetworkAirMarshal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkSiteToSiteVpn', function() {
      it('should call getNetworkSiteToSiteVpn successfully', function(done) {
        //uncomment below and update the code to test getNetworkSiteToSiteVpn
        //instance.getNetworkSiteToSiteVpn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkTraffic', function() {
      it('should call getNetworkTraffic successfully', function(done) {
        //uncomment below and update the code to test getNetworkTraffic
        //instance.getNetworkTraffic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationNetworks', function() {
      it('should call getOrganizationNetworks successfully', function(done) {
        //uncomment below and update the code to test getOrganizationNetworks
        //instance.getOrganizationNetworks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('splitNetwork', function() {
      it('should call splitNetwork successfully', function(done) {
        //uncomment below and update the code to test splitNetwork
        //instance.splitNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unbindNetwork', function() {
      it('should call unbindNetwork successfully', function(done) {
        //uncomment below and update the code to test unbindNetwork
        //instance.unbindNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetwork', function() {
      it('should call updateNetwork successfully', function(done) {
        //uncomment below and update the code to test updateNetwork
        //instance.updateNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkSiteToSiteVpn', function() {
      it('should call updateNetworkSiteToSiteVpn successfully', function(done) {
        //uncomment below and update the code to test updateNetworkSiteToSiteVpn
        //instance.updateNetworkSiteToSiteVpn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
