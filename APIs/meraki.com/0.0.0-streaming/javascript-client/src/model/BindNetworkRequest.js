/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BindNetworkRequest model module.
 * @module model/BindNetworkRequest
 * @version 0.0.0-streaming
 */
class BindNetworkRequest {
    /**
     * Constructs a new <code>BindNetworkRequest</code>.
     * @alias module:model/BindNetworkRequest
     * @param configTemplateId {String} The ID of the template to which the network should be bound.
     */
    constructor(configTemplateId) { 
        
        BindNetworkRequest.initialize(this, configTemplateId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, configTemplateId) { 
        obj['configTemplateId'] = configTemplateId;
    }

    /**
     * Constructs a <code>BindNetworkRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BindNetworkRequest} obj Optional instance to populate.
     * @return {module:model/BindNetworkRequest} The populated <code>BindNetworkRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BindNetworkRequest();

            if (data.hasOwnProperty('autoBind')) {
                obj['autoBind'] = ApiClient.convertToType(data['autoBind'], 'Boolean');
            }
            if (data.hasOwnProperty('configTemplateId')) {
                obj['configTemplateId'] = ApiClient.convertToType(data['configTemplateId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BindNetworkRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BindNetworkRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BindNetworkRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['configTemplateId'] && !(typeof data['configTemplateId'] === 'string' || data['configTemplateId'] instanceof String)) {
            throw new Error("Expected the field `configTemplateId` to be a primitive type in the JSON string but got " + data['configTemplateId']);
        }

        return true;
    }


}

BindNetworkRequest.RequiredProperties = ["configTemplateId"];

/**
 * Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.
 * @member {Boolean} autoBind
 */
BindNetworkRequest.prototype['autoBind'] = undefined;

/**
 * The ID of the template to which the network should be bound.
 * @member {String} configTemplateId
 */
BindNetworkRequest.prototype['configTemplateId'] = undefined;






export default BindNetworkRequest;

