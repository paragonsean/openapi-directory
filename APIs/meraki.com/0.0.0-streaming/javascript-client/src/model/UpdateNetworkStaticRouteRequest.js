/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateNetworkStaticRouteRequestReservedIpRangesInner from './UpdateNetworkStaticRouteRequestReservedIpRangesInner';

/**
 * The UpdateNetworkStaticRouteRequest model module.
 * @module model/UpdateNetworkStaticRouteRequest
 * @version 0.0.0-streaming
 */
class UpdateNetworkStaticRouteRequest {
    /**
     * Constructs a new <code>UpdateNetworkStaticRouteRequest</code>.
     * @alias module:model/UpdateNetworkStaticRouteRequest
     */
    constructor() { 
        
        UpdateNetworkStaticRouteRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateNetworkStaticRouteRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkStaticRouteRequest} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkStaticRouteRequest} The populated <code>UpdateNetworkStaticRouteRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkStaticRouteRequest();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('fixedIpAssignments')) {
                obj['fixedIpAssignments'] = ApiClient.convertToType(data['fixedIpAssignments'], Object);
            }
            if (data.hasOwnProperty('gatewayIp')) {
                obj['gatewayIp'] = ApiClient.convertToType(data['gatewayIp'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reservedIpRanges')) {
                obj['reservedIpRanges'] = ApiClient.convertToType(data['reservedIpRanges'], [UpdateNetworkStaticRouteRequestReservedIpRangesInner]);
            }
            if (data.hasOwnProperty('subnet')) {
                obj['subnet'] = ApiClient.convertToType(data['subnet'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkStaticRouteRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkStaticRouteRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gatewayIp'] && !(typeof data['gatewayIp'] === 'string' || data['gatewayIp'] instanceof String)) {
            throw new Error("Expected the field `gatewayIp` to be a primitive type in the JSON string but got " + data['gatewayIp']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['reservedIpRanges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reservedIpRanges'])) {
                throw new Error("Expected the field `reservedIpRanges` to be an array in the JSON data but got " + data['reservedIpRanges']);
            }
            // validate the optional field `reservedIpRanges` (array)
            for (const item of data['reservedIpRanges']) {
                UpdateNetworkStaticRouteRequestReservedIpRangesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['subnet'] && !(typeof data['subnet'] === 'string' || data['subnet'] instanceof String)) {
            throw new Error("Expected the field `subnet` to be a primitive type in the JSON string but got " + data['subnet']);
        }

        return true;
    }


}



/**
 * The enabled state of the static route
 * @member {Boolean} enabled
 */
UpdateNetworkStaticRouteRequest.prototype['enabled'] = undefined;

/**
 * The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details.
 * @member {Object} fixedIpAssignments
 */
UpdateNetworkStaticRouteRequest.prototype['fixedIpAssignments'] = undefined;

/**
 * The gateway IP (next hop) of the static route
 * @member {String} gatewayIp
 */
UpdateNetworkStaticRouteRequest.prototype['gatewayIp'] = undefined;

/**
 * The name of the static route
 * @member {String} name
 */
UpdateNetworkStaticRouteRequest.prototype['name'] = undefined;

/**
 * The DHCP reserved IP ranges on the static route
 * @member {Array.<module:model/UpdateNetworkStaticRouteRequestReservedIpRangesInner>} reservedIpRanges
 */
UpdateNetworkStaticRouteRequest.prototype['reservedIpRanges'] = undefined;

/**
 * The subnet of the static route
 * @member {String} subnet
 */
UpdateNetworkStaticRouteRequest.prototype['subnet'] = undefined;






export default UpdateNetworkStaticRouteRequest;

