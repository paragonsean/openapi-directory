/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateNetworkOneToOneNatRulesRequestRulesInnerAllowedInboundInner from './UpdateNetworkOneToOneNatRulesRequestRulesInnerAllowedInboundInner';

/**
 * The UpdateNetworkOneToOneNatRulesRequestRulesInner model module.
 * @module model/UpdateNetworkOneToOneNatRulesRequestRulesInner
 * @version 0.0.0-streaming
 */
class UpdateNetworkOneToOneNatRulesRequestRulesInner {
    /**
     * Constructs a new <code>UpdateNetworkOneToOneNatRulesRequestRulesInner</code>.
     * @alias module:model/UpdateNetworkOneToOneNatRulesRequestRulesInner
     * @param lanIp {String} The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
     */
    constructor(lanIp) { 
        
        UpdateNetworkOneToOneNatRulesRequestRulesInner.initialize(this, lanIp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lanIp) { 
        obj['lanIp'] = lanIp;
    }

    /**
     * Constructs a <code>UpdateNetworkOneToOneNatRulesRequestRulesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkOneToOneNatRulesRequestRulesInner} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkOneToOneNatRulesRequestRulesInner} The populated <code>UpdateNetworkOneToOneNatRulesRequestRulesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkOneToOneNatRulesRequestRulesInner();

            if (data.hasOwnProperty('allowedInbound')) {
                obj['allowedInbound'] = ApiClient.convertToType(data['allowedInbound'], [UpdateNetworkOneToOneNatRulesRequestRulesInnerAllowedInboundInner]);
            }
            if (data.hasOwnProperty('lanIp')) {
                obj['lanIp'] = ApiClient.convertToType(data['lanIp'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publicIp')) {
                obj['publicIp'] = ApiClient.convertToType(data['publicIp'], 'String');
            }
            if (data.hasOwnProperty('uplink')) {
                obj['uplink'] = ApiClient.convertToType(data['uplink'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkOneToOneNatRulesRequestRulesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkOneToOneNatRulesRequestRulesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateNetworkOneToOneNatRulesRequestRulesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['allowedInbound']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allowedInbound'])) {
                throw new Error("Expected the field `allowedInbound` to be an array in the JSON data but got " + data['allowedInbound']);
            }
            // validate the optional field `allowedInbound` (array)
            for (const item of data['allowedInbound']) {
                UpdateNetworkOneToOneNatRulesRequestRulesInnerAllowedInboundInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['lanIp'] && !(typeof data['lanIp'] === 'string' || data['lanIp'] instanceof String)) {
            throw new Error("Expected the field `lanIp` to be a primitive type in the JSON string but got " + data['lanIp']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['publicIp'] && !(typeof data['publicIp'] === 'string' || data['publicIp'] instanceof String)) {
            throw new Error("Expected the field `publicIp` to be a primitive type in the JSON string but got " + data['publicIp']);
        }
        // ensure the json data is a string
        if (data['uplink'] && !(typeof data['uplink'] === 'string' || data['uplink'] instanceof String)) {
            throw new Error("Expected the field `uplink` to be a primitive type in the JSON string but got " + data['uplink']);
        }

        return true;
    }


}

UpdateNetworkOneToOneNatRulesRequestRulesInner.RequiredProperties = ["lanIp"];

/**
 * The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
 * @member {Array.<module:model/UpdateNetworkOneToOneNatRulesRequestRulesInnerAllowedInboundInner>} allowedInbound
 */
UpdateNetworkOneToOneNatRulesRequestRulesInner.prototype['allowedInbound'] = undefined;

/**
 * The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
 * @member {String} lanIp
 */
UpdateNetworkOneToOneNatRulesRequestRulesInner.prototype['lanIp'] = undefined;

/**
 * A descriptive name for the rule
 * @member {String} name
 */
UpdateNetworkOneToOneNatRulesRequestRulesInner.prototype['name'] = undefined;

/**
 * The IP address that will be used to access the internal resource from the WAN
 * @member {String} publicIp
 */
UpdateNetworkOneToOneNatRulesRequestRulesInner.prototype['publicIp'] = undefined;

/**
 * The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')
 * @member {module:model/UpdateNetworkOneToOneNatRulesRequestRulesInner.UplinkEnum} uplink
 */
UpdateNetworkOneToOneNatRulesRequestRulesInner.prototype['uplink'] = undefined;





/**
 * Allowed values for the <code>uplink</code> property.
 * @enum {String}
 * @readonly
 */
UpdateNetworkOneToOneNatRulesRequestRulesInner['UplinkEnum'] = {

    /**
     * value: "internet1"
     * @const
     */
    "internet1": "internet1",

    /**
     * value: "internet2"
     * @const
     */
    "internet2": "internet2"
};



export default UpdateNetworkOneToOneNatRulesRequestRulesInner;

