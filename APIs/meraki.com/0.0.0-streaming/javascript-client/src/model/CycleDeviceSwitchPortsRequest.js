/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CycleDeviceSwitchPortsRequest model module.
 * @module model/CycleDeviceSwitchPortsRequest
 * @version 0.0.0-streaming
 */
class CycleDeviceSwitchPortsRequest {
    /**
     * Constructs a new <code>CycleDeviceSwitchPortsRequest</code>.
     * @alias module:model/CycleDeviceSwitchPortsRequest
     * @param ports {Array.<String>} List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]
     */
    constructor(ports) { 
        
        CycleDeviceSwitchPortsRequest.initialize(this, ports);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ports) { 
        obj['ports'] = ports;
    }

    /**
     * Constructs a <code>CycleDeviceSwitchPortsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CycleDeviceSwitchPortsRequest} obj Optional instance to populate.
     * @return {module:model/CycleDeviceSwitchPortsRequest} The populated <code>CycleDeviceSwitchPortsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CycleDeviceSwitchPortsRequest();

            if (data.hasOwnProperty('ports')) {
                obj['ports'] = ApiClient.convertToType(data['ports'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CycleDeviceSwitchPortsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CycleDeviceSwitchPortsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CycleDeviceSwitchPortsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ports'])) {
            throw new Error("Expected the field `ports` to be an array in the JSON data but got " + data['ports']);
        }

        return true;
    }


}

CycleDeviceSwitchPortsRequest.RequiredProperties = ["ports"];

/**
 * List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]
 * @member {Array.<String>} ports
 */
CycleDeviceSwitchPortsRequest.prototype['ports'] = undefined;






export default CycleDeviceSwitchPortsRequest;

