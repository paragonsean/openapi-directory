/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProvisionNetworkClientsRequestPoliciesBySecurityAppliance from './ProvisionNetworkClientsRequestPoliciesBySecurityAppliance';
import ProvisionNetworkClientsRequestPoliciesBySsid from './ProvisionNetworkClientsRequestPoliciesBySsid';

/**
 * The ProvisionNetworkClientsRequest model module.
 * @module model/ProvisionNetworkClientsRequest
 * @version 0.0.0-streaming
 */
class ProvisionNetworkClientsRequest {
    /**
     * Constructs a new <code>ProvisionNetworkClientsRequest</code>.
     * @alias module:model/ProvisionNetworkClientsRequest
     * @param devicePolicy {module:model/ProvisionNetworkClientsRequest.DevicePolicyEnum} The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.
     * @param mac {String} The MAC address of the client. Required.
     */
    constructor(devicePolicy, mac) { 
        
        ProvisionNetworkClientsRequest.initialize(this, devicePolicy, mac);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, devicePolicy, mac) { 
        obj['devicePolicy'] = devicePolicy;
        obj['mac'] = mac;
    }

    /**
     * Constructs a <code>ProvisionNetworkClientsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvisionNetworkClientsRequest} obj Optional instance to populate.
     * @return {module:model/ProvisionNetworkClientsRequest} The populated <code>ProvisionNetworkClientsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvisionNetworkClientsRequest();

            if (data.hasOwnProperty('devicePolicy')) {
                obj['devicePolicy'] = ApiClient.convertToType(data['devicePolicy'], 'String');
            }
            if (data.hasOwnProperty('groupPolicyId')) {
                obj['groupPolicyId'] = ApiClient.convertToType(data['groupPolicyId'], 'String');
            }
            if (data.hasOwnProperty('mac')) {
                obj['mac'] = ApiClient.convertToType(data['mac'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('policiesBySecurityAppliance')) {
                obj['policiesBySecurityAppliance'] = ProvisionNetworkClientsRequestPoliciesBySecurityAppliance.constructFromObject(data['policiesBySecurityAppliance']);
            }
            if (data.hasOwnProperty('policiesBySsid')) {
                obj['policiesBySsid'] = ProvisionNetworkClientsRequestPoliciesBySsid.constructFromObject(data['policiesBySsid']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvisionNetworkClientsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvisionNetworkClientsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProvisionNetworkClientsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['devicePolicy'] && !(typeof data['devicePolicy'] === 'string' || data['devicePolicy'] instanceof String)) {
            throw new Error("Expected the field `devicePolicy` to be a primitive type in the JSON string but got " + data['devicePolicy']);
        }
        // ensure the json data is a string
        if (data['groupPolicyId'] && !(typeof data['groupPolicyId'] === 'string' || data['groupPolicyId'] instanceof String)) {
            throw new Error("Expected the field `groupPolicyId` to be a primitive type in the JSON string but got " + data['groupPolicyId']);
        }
        // ensure the json data is a string
        if (data['mac'] && !(typeof data['mac'] === 'string' || data['mac'] instanceof String)) {
            throw new Error("Expected the field `mac` to be a primitive type in the JSON string but got " + data['mac']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `policiesBySecurityAppliance`
        if (data['policiesBySecurityAppliance']) { // data not null
          ProvisionNetworkClientsRequestPoliciesBySecurityAppliance.validateJSON(data['policiesBySecurityAppliance']);
        }
        // validate the optional field `policiesBySsid`
        if (data['policiesBySsid']) { // data not null
          ProvisionNetworkClientsRequestPoliciesBySsid.validateJSON(data['policiesBySsid']);
        }

        return true;
    }


}

ProvisionNetworkClientsRequest.RequiredProperties = ["devicePolicy", "mac"];

/**
 * The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.
 * @member {module:model/ProvisionNetworkClientsRequest.DevicePolicyEnum} devicePolicy
 */
ProvisionNetworkClientsRequest.prototype['devicePolicy'] = undefined;

/**
 * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.
 * @member {String} groupPolicyId
 */
ProvisionNetworkClientsRequest.prototype['groupPolicyId'] = undefined;

/**
 * The MAC address of the client. Required.
 * @member {String} mac
 */
ProvisionNetworkClientsRequest.prototype['mac'] = undefined;

/**
 * The display name for the client. Optional. Limited to 255 bytes.
 * @member {String} name
 */
ProvisionNetworkClientsRequest.prototype['name'] = undefined;

/**
 * @member {module:model/ProvisionNetworkClientsRequestPoliciesBySecurityAppliance} policiesBySecurityAppliance
 */
ProvisionNetworkClientsRequest.prototype['policiesBySecurityAppliance'] = undefined;

/**
 * @member {module:model/ProvisionNetworkClientsRequestPoliciesBySsid} policiesBySsid
 */
ProvisionNetworkClientsRequest.prototype['policiesBySsid'] = undefined;





/**
 * Allowed values for the <code>devicePolicy</code> property.
 * @enum {String}
 * @readonly
 */
ProvisionNetworkClientsRequest['DevicePolicyEnum'] = {

    /**
     * value: "Allowed"
     * @const
     */
    "Allowed": "Allowed",

    /**
     * value: "Blocked"
     * @const
     */
    "Blocked": "Blocked",

    /**
     * value: "Group policy"
     * @const
     */
    "Group policy": "Group policy",

    /**
     * value: "Normal"
     * @const
     */
    "Normal": "Normal",

    /**
     * value: "Per connection"
     * @const
     */
    "Per connection": "Per connection",

    /**
     * value: "Whitelisted"
     * @const
     */
    "Whitelisted": "Whitelisted"
};



export default ProvisionNetworkClientsRequest;

