/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateNetworkSecurityMalwareSettingsRequestAllowedFilesInner from './UpdateNetworkSecurityMalwareSettingsRequestAllowedFilesInner';
import UpdateNetworkSecurityMalwareSettingsRequestAllowedUrlsInner from './UpdateNetworkSecurityMalwareSettingsRequestAllowedUrlsInner';

/**
 * The UpdateNetworkSecurityMalwareSettingsRequest model module.
 * @module model/UpdateNetworkSecurityMalwareSettingsRequest
 * @version 0.0.0-streaming
 */
class UpdateNetworkSecurityMalwareSettingsRequest {
    /**
     * Constructs a new <code>UpdateNetworkSecurityMalwareSettingsRequest</code>.
     * @alias module:model/UpdateNetworkSecurityMalwareSettingsRequest
     * @param mode {module:model/UpdateNetworkSecurityMalwareSettingsRequest.ModeEnum} Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'
     */
    constructor(mode) { 
        
        UpdateNetworkSecurityMalwareSettingsRequest.initialize(this, mode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mode) { 
        obj['mode'] = mode;
    }

    /**
     * Constructs a <code>UpdateNetworkSecurityMalwareSettingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkSecurityMalwareSettingsRequest} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkSecurityMalwareSettingsRequest} The populated <code>UpdateNetworkSecurityMalwareSettingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkSecurityMalwareSettingsRequest();

            if (data.hasOwnProperty('allowedFiles')) {
                obj['allowedFiles'] = ApiClient.convertToType(data['allowedFiles'], [UpdateNetworkSecurityMalwareSettingsRequestAllowedFilesInner]);
            }
            if (data.hasOwnProperty('allowedUrls')) {
                obj['allowedUrls'] = ApiClient.convertToType(data['allowedUrls'], [UpdateNetworkSecurityMalwareSettingsRequestAllowedUrlsInner]);
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkSecurityMalwareSettingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkSecurityMalwareSettingsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateNetworkSecurityMalwareSettingsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['allowedFiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allowedFiles'])) {
                throw new Error("Expected the field `allowedFiles` to be an array in the JSON data but got " + data['allowedFiles']);
            }
            // validate the optional field `allowedFiles` (array)
            for (const item of data['allowedFiles']) {
                UpdateNetworkSecurityMalwareSettingsRequestAllowedFilesInner.validateJSON(item);
            };
        }
        if (data['allowedUrls']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allowedUrls'])) {
                throw new Error("Expected the field `allowedUrls` to be an array in the JSON data but got " + data['allowedUrls']);
            }
            // validate the optional field `allowedUrls` (array)
            for (const item of data['allowedUrls']) {
                UpdateNetworkSecurityMalwareSettingsRequestAllowedUrlsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }

        return true;
    }


}

UpdateNetworkSecurityMalwareSettingsRequest.RequiredProperties = ["mode"];

/**
 * The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP allow listing
 * @member {Array.<module:model/UpdateNetworkSecurityMalwareSettingsRequestAllowedFilesInner>} allowedFiles
 */
UpdateNetworkSecurityMalwareSettingsRequest.prototype['allowedFiles'] = undefined;

/**
 * The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP allow listing
 * @member {Array.<module:model/UpdateNetworkSecurityMalwareSettingsRequestAllowedUrlsInner>} allowedUrls
 */
UpdateNetworkSecurityMalwareSettingsRequest.prototype['allowedUrls'] = undefined;

/**
 * Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'
 * @member {module:model/UpdateNetworkSecurityMalwareSettingsRequest.ModeEnum} mode
 */
UpdateNetworkSecurityMalwareSettingsRequest.prototype['mode'] = undefined;





/**
 * Allowed values for the <code>mode</code> property.
 * @enum {String}
 * @readonly
 */
UpdateNetworkSecurityMalwareSettingsRequest['ModeEnum'] = {

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "enabled"
     * @const
     */
    "enabled": "enabled"
};



export default UpdateNetworkSecurityMalwareSettingsRequest;

