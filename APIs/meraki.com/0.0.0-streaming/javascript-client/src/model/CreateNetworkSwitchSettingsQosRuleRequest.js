/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateNetworkSwitchSettingsQosRuleRequest model module.
 * @module model/CreateNetworkSwitchSettingsQosRuleRequest
 * @version 0.0.0-streaming
 */
class CreateNetworkSwitchSettingsQosRuleRequest {
    /**
     * Constructs a new <code>CreateNetworkSwitchSettingsQosRuleRequest</code>.
     * @alias module:model/CreateNetworkSwitchSettingsQosRuleRequest
     * @param vlan {Number} The VLAN of the incoming packet. A null value will match any VLAN.
     */
    constructor(vlan) { 
        
        CreateNetworkSwitchSettingsQosRuleRequest.initialize(this, vlan);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, vlan) { 
        obj['vlan'] = vlan;
    }

    /**
     * Constructs a <code>CreateNetworkSwitchSettingsQosRuleRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkSwitchSettingsQosRuleRequest} obj Optional instance to populate.
     * @return {module:model/CreateNetworkSwitchSettingsQosRuleRequest} The populated <code>CreateNetworkSwitchSettingsQosRuleRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkSwitchSettingsQosRuleRequest();

            if (data.hasOwnProperty('dscp')) {
                obj['dscp'] = ApiClient.convertToType(data['dscp'], 'Number');
            }
            if (data.hasOwnProperty('dstPort')) {
                obj['dstPort'] = ApiClient.convertToType(data['dstPort'], 'Number');
            }
            if (data.hasOwnProperty('dstPortRange')) {
                obj['dstPortRange'] = ApiClient.convertToType(data['dstPortRange'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('srcPort')) {
                obj['srcPort'] = ApiClient.convertToType(data['srcPort'], 'Number');
            }
            if (data.hasOwnProperty('srcPortRange')) {
                obj['srcPortRange'] = ApiClient.convertToType(data['srcPortRange'], 'String');
            }
            if (data.hasOwnProperty('vlan')) {
                obj['vlan'] = ApiClient.convertToType(data['vlan'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkSwitchSettingsQosRuleRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkSwitchSettingsQosRuleRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateNetworkSwitchSettingsQosRuleRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dstPortRange'] && !(typeof data['dstPortRange'] === 'string' || data['dstPortRange'] instanceof String)) {
            throw new Error("Expected the field `dstPortRange` to be a primitive type in the JSON string but got " + data['dstPortRange']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }
        // ensure the json data is a string
        if (data['srcPortRange'] && !(typeof data['srcPortRange'] === 'string' || data['srcPortRange'] instanceof String)) {
            throw new Error("Expected the field `srcPortRange` to be a primitive type in the JSON string but got " + data['srcPortRange']);
        }

        return true;
    }


}

CreateNetworkSwitchSettingsQosRuleRequest.RequiredProperties = ["vlan"];

/**
 * DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
 * @member {Number} dscp
 */
CreateNetworkSwitchSettingsQosRuleRequest.prototype['dscp'] = undefined;

/**
 * The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
 * @member {Number} dstPort
 */
CreateNetworkSwitchSettingsQosRuleRequest.prototype['dstPort'] = undefined;

/**
 * The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
 * @member {String} dstPortRange
 */
CreateNetworkSwitchSettingsQosRuleRequest.prototype['dstPortRange'] = undefined;

/**
 * The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\"
 * @member {module:model/CreateNetworkSwitchSettingsQosRuleRequest.ProtocolEnum} protocol
 */
CreateNetworkSwitchSettingsQosRuleRequest.prototype['protocol'] = undefined;

/**
 * The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
 * @member {Number} srcPort
 */
CreateNetworkSwitchSettingsQosRuleRequest.prototype['srcPort'] = undefined;

/**
 * The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
 * @member {String} srcPortRange
 */
CreateNetworkSwitchSettingsQosRuleRequest.prototype['srcPortRange'] = undefined;

/**
 * The VLAN of the incoming packet. A null value will match any VLAN.
 * @member {Number} vlan
 */
CreateNetworkSwitchSettingsQosRuleRequest.prototype['vlan'] = undefined;





/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
CreateNetworkSwitchSettingsQosRuleRequest['ProtocolEnum'] = {

    /**
     * value: "ANY"
     * @const
     */
    "ANY": "ANY",

    /**
     * value: "TCP"
     * @const
     */
    "TCP": "TCP",

    /**
     * value: "UDP"
     * @const
     */
    "UDP": "UDP"
};



export default CreateNetworkSwitchSettingsQosRuleRequest;

