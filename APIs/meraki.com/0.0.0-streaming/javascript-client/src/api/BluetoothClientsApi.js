/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* BluetoothClients service.
* @module api/BluetoothClientsApi
* @version 0.0.0-streaming
*/
export default class BluetoothClientsApi {

    /**
    * Constructs a new BluetoothClientsApi. 
    * @alias module:api/BluetoothClientsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getNetworkBluetoothClient operation.
     * @callback module:api/BluetoothClientsApi~getNetworkBluetoothClientCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a Bluetooth client
     * Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.
     * @param {String} networkId 
     * @param {String} bluetoothClientId 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [includeConnectivityHistory] Include the connectivity history for this client
     * @param {Number} [connectivityHistoryTimespan] The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.
     * @param {module:api/BluetoothClientsApi~getNetworkBluetoothClientCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkBluetoothClient(networkId, bluetoothClientId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkBluetoothClient");
      }
      // verify the required parameter 'bluetoothClientId' is set
      if (bluetoothClientId === undefined || bluetoothClientId === null) {
        throw new Error("Missing the required parameter 'bluetoothClientId' when calling getNetworkBluetoothClient");
      }

      let pathParams = {
        'networkId': networkId,
        'bluetoothClientId': bluetoothClientId
      };
      let queryParams = {
        'includeConnectivityHistory': opts['includeConnectivityHistory'],
        'connectivityHistoryTimespan': opts['connectivityHistoryTimespan']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/bluetoothClients/{bluetoothClientId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkBluetoothClients operation.
     * @callback module:api/BluetoothClientsApi~getNetworkBluetoothClientsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the Bluetooth clients seen by APs in this network
     * List the Bluetooth clients seen by APs in this network
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {String} [t0] The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
     * @param {Number} [timespan] The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.
     * @param {Number} [perPage] The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.
     * @param {String} [startingAfter] A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {String} [endingBefore] A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * @param {Boolean} [includeConnectivityHistory] Include the connectivity history for this client
     * @param {module:api/BluetoothClientsApi~getNetworkBluetoothClientsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkBluetoothClients(networkId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkBluetoothClients");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
        't0': opts['t0'],
        'timespan': opts['timespan'],
        'perPage': opts['perPage'],
        'startingAfter': opts['startingAfter'],
        'endingBefore': opts['endingBefore'],
        'includeConnectivityHistory': opts['includeConnectivityHistory']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/bluetoothClients', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
