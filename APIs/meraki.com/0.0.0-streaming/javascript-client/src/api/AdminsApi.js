/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationAdminRequest from '../model/CreateOrganizationAdminRequest';
import UpdateOrganizationAdminRequest from '../model/UpdateOrganizationAdminRequest';

/**
* Admins service.
* @module api/AdminsApi
* @version 0.0.0-streaming
*/
export default class AdminsApi {

    /**
    * Constructs a new AdminsApi. 
    * @alias module:api/AdminsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationAdmin operation.
     * @callback module:api/AdminsApi~createOrganizationAdminCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new dashboard administrator
     * Create a new dashboard administrator
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationAdminRequest} createOrganizationAdminRequest 
     * @param {module:api/AdminsApi~createOrganizationAdminCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationAdmin(organizationId, createOrganizationAdminRequest, callback) {
      let postBody = createOrganizationAdminRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationAdmin");
      }
      // verify the required parameter 'createOrganizationAdminRequest' is set
      if (createOrganizationAdminRequest === undefined || createOrganizationAdminRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationAdminRequest' when calling createOrganizationAdmin");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/admins', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationAdmin operation.
     * @callback module:api/AdminsApi~deleteOrganizationAdminCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Revoke all access for a dashboard administrator within this organization
     * Revoke all access for a dashboard administrator within this organization
     * @param {String} organizationId 
     * @param {String} adminId 
     * @param {module:api/AdminsApi~deleteOrganizationAdminCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationAdmin(organizationId, adminId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationAdmin");
      }
      // verify the required parameter 'adminId' is set
      if (adminId === undefined || adminId === null) {
        throw new Error("Missing the required parameter 'adminId' when calling deleteOrganizationAdmin");
      }

      let pathParams = {
        'organizationId': organizationId,
        'adminId': adminId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/admins/{adminId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationAdmins operation.
     * @callback module:api/AdminsApi~getOrganizationAdminsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the dashboard administrators in this organization
     * List the dashboard administrators in this organization
     * @param {String} organizationId 
     * @param {module:api/AdminsApi~getOrganizationAdminsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationAdmins(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationAdmins");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/admins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationAdmin operation.
     * @callback module:api/AdminsApi~updateOrganizationAdminCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an administrator
     * Update an administrator
     * @param {String} organizationId 
     * @param {String} adminId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationAdminRequest} [updateOrganizationAdminRequest] 
     * @param {module:api/AdminsApi~updateOrganizationAdminCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationAdmin(organizationId, adminId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationAdminRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationAdmin");
      }
      // verify the required parameter 'adminId' is set
      if (adminId === undefined || adminId === null) {
        throw new Error("Missing the required parameter 'adminId' when calling updateOrganizationAdmin");
      }

      let pathParams = {
        'organizationId': organizationId,
        'adminId': adminId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/admins/{adminId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
