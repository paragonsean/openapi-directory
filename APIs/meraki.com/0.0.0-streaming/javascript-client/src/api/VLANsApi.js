/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkVlanRequest from '../model/CreateNetworkVlanRequest';
import UpdateNetworkVlanRequest from '../model/UpdateNetworkVlanRequest';
import UpdateNetworkVlansEnabledStateRequest from '../model/UpdateNetworkVlansEnabledStateRequest';

/**
* VLANs service.
* @module api/VLANsApi
* @version 0.0.0-streaming
*/
export default class VLANsApi {

    /**
    * Constructs a new VLANsApi. 
    * @alias module:api/VLANsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkVlan operation.
     * @callback module:api/VLANsApi~createNetworkVlanCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a VLAN
     * Add a VLAN
     * @param {String} networkId 
     * @param {module:model/CreateNetworkVlanRequest} createNetworkVlanRequest 
     * @param {module:api/VLANsApi~createNetworkVlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkVlan(networkId, createNetworkVlanRequest, callback) {
      let postBody = createNetworkVlanRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkVlan");
      }
      // verify the required parameter 'createNetworkVlanRequest' is set
      if (createNetworkVlanRequest === undefined || createNetworkVlanRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkVlanRequest' when calling createNetworkVlan");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/vlans', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkVlan operation.
     * @callback module:api/VLANsApi~deleteNetworkVlanCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a VLAN from a network
     * Delete a VLAN from a network
     * @param {String} networkId 
     * @param {String} vlanId 
     * @param {module:api/VLANsApi~deleteNetworkVlanCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkVlan(networkId, vlanId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkVlan");
      }
      // verify the required parameter 'vlanId' is set
      if (vlanId === undefined || vlanId === null) {
        throw new Error("Missing the required parameter 'vlanId' when calling deleteNetworkVlan");
      }

      let pathParams = {
        'networkId': networkId,
        'vlanId': vlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/vlans/{vlanId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkVlan operation.
     * @callback module:api/VLANsApi~getNetworkVlanCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a VLAN
     * Return a VLAN
     * @param {String} networkId 
     * @param {String} vlanId 
     * @param {module:api/VLANsApi~getNetworkVlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkVlan(networkId, vlanId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkVlan");
      }
      // verify the required parameter 'vlanId' is set
      if (vlanId === undefined || vlanId === null) {
        throw new Error("Missing the required parameter 'vlanId' when calling getNetworkVlan");
      }

      let pathParams = {
        'networkId': networkId,
        'vlanId': vlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/vlans/{vlanId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkVlans operation.
     * @callback module:api/VLANsApi~getNetworkVlansCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the VLANs for an MX network
     * List the VLANs for an MX network
     * @param {String} networkId 
     * @param {module:api/VLANsApi~getNetworkVlansCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkVlans(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkVlans");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/vlans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkVlansEnabledState operation.
     * @callback module:api/VLANsApi~getNetworkVlansEnabledStateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the enabled status of VLANs for the network
     * Returns the enabled status of VLANs for the network
     * @param {String} networkId 
     * @param {module:api/VLANsApi~getNetworkVlansEnabledStateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkVlansEnabledState(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkVlansEnabledState");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/vlansEnabledState', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkVlan operation.
     * @callback module:api/VLANsApi~updateNetworkVlanCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a VLAN
     * Update a VLAN
     * @param {String} networkId 
     * @param {String} vlanId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkVlanRequest} [updateNetworkVlanRequest] 
     * @param {module:api/VLANsApi~updateNetworkVlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkVlan(networkId, vlanId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkVlanRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkVlan");
      }
      // verify the required parameter 'vlanId' is set
      if (vlanId === undefined || vlanId === null) {
        throw new Error("Missing the required parameter 'vlanId' when calling updateNetworkVlan");
      }

      let pathParams = {
        'networkId': networkId,
        'vlanId': vlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/vlans/{vlanId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkVlansEnabledState operation.
     * @callback module:api/VLANsApi~updateNetworkVlansEnabledStateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable/Disable VLANs for the given network
     * Enable/Disable VLANs for the given network
     * @param {String} networkId 
     * @param {module:model/UpdateNetworkVlansEnabledStateRequest} updateNetworkVlansEnabledStateRequest 
     * @param {module:api/VLANsApi~updateNetworkVlansEnabledStateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkVlansEnabledState(networkId, updateNetworkVlansEnabledStateRequest, callback) {
      let postBody = updateNetworkVlansEnabledStateRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkVlansEnabledState");
      }
      // verify the required parameter 'updateNetworkVlansEnabledStateRequest' is set
      if (updateNetworkVlansEnabledStateRequest === undefined || updateNetworkVlansEnabledStateRequest === null) {
        throw new Error("Missing the required parameter 'updateNetworkVlansEnabledStateRequest' when calling updateNetworkVlansEnabledState");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/vlansEnabledState', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
