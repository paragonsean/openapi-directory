/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateNetworkSwitchSettingsQosRuleRequest from '../model/CreateNetworkSwitchSettingsQosRuleRequest';
import UpdateNetworkSwitchSettingsMulticastRequest from '../model/UpdateNetworkSwitchSettingsMulticastRequest';
import UpdateNetworkSwitchSettingsQosRuleRequest from '../model/UpdateNetworkSwitchSettingsQosRuleRequest';
import UpdateNetworkSwitchSettingsQosRulesOrderRequest from '../model/UpdateNetworkSwitchSettingsQosRulesOrderRequest';
import UpdateNetworkSwitchSettingsRequest from '../model/UpdateNetworkSwitchSettingsRequest';
import UpdateNetworkSwitchSettingsStormControlRequest from '../model/UpdateNetworkSwitchSettingsStormControlRequest';

/**
* SwitchSettings service.
* @module api/SwitchSettingsApi
* @version 0.0.0-streaming
*/
export default class SwitchSettingsApi {

    /**
    * Constructs a new SwitchSettingsApi. 
    * @alias module:api/SwitchSettingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createNetworkSwitchSettingsQosRule operation.
     * @callback module:api/SwitchSettingsApi~createNetworkSwitchSettingsQosRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a quality of service rule
     * Add a quality of service rule
     * @param {String} networkId 
     * @param {module:model/CreateNetworkSwitchSettingsQosRuleRequest} createNetworkSwitchSettingsQosRuleRequest 
     * @param {module:api/SwitchSettingsApi~createNetworkSwitchSettingsQosRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkSwitchSettingsQosRule(networkId, createNetworkSwitchSettingsQosRuleRequest, callback) {
      let postBody = createNetworkSwitchSettingsQosRuleRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkSwitchSettingsQosRule");
      }
      // verify the required parameter 'createNetworkSwitchSettingsQosRuleRequest' is set
      if (createNetworkSwitchSettingsQosRuleRequest === undefined || createNetworkSwitchSettingsQosRuleRequest === null) {
        throw new Error("Missing the required parameter 'createNetworkSwitchSettingsQosRuleRequest' when calling createNetworkSwitchSettingsQosRule");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/qosRules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkSwitchSettingsQosRule operation.
     * @callback module:api/SwitchSettingsApi~deleteNetworkSwitchSettingsQosRuleCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a quality of service rule
     * Delete a quality of service rule
     * @param {String} networkId 
     * @param {String} qosRuleId 
     * @param {module:api/SwitchSettingsApi~deleteNetworkSwitchSettingsQosRuleCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkSwitchSettingsQosRule(networkId, qosRuleId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkSwitchSettingsQosRule");
      }
      // verify the required parameter 'qosRuleId' is set
      if (qosRuleId === undefined || qosRuleId === null) {
        throw new Error("Missing the required parameter 'qosRuleId' when calling deleteNetworkSwitchSettingsQosRule");
      }

      let pathParams = {
        'networkId': networkId,
        'qosRuleId': qosRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/qosRules/{qosRuleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchSettings operation.
     * @callback module:api/SwitchSettingsApi~getNetworkSwitchSettingsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the switch network settings
     * Returns the switch network settings
     * @param {String} networkId 
     * @param {module:api/SwitchSettingsApi~getNetworkSwitchSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchSettings(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchSettings");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchSettingsMtu operation.
     * @callback module:api/SwitchSettingsApi~getNetworkSwitchSettingsMtuCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the MTU configuration
     * Return the MTU configuration
     * @param {String} networkId 
     * @param {module:api/SwitchSettingsApi~getNetworkSwitchSettingsMtuCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchSettingsMtu(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchSettingsMtu");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/mtu', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchSettingsMulticast operation.
     * @callback module:api/SwitchSettingsApi~getNetworkSwitchSettingsMulticastCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return multicast settings for a network
     * Return multicast settings for a network
     * @param {String} networkId 
     * @param {module:api/SwitchSettingsApi~getNetworkSwitchSettingsMulticastCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchSettingsMulticast(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchSettingsMulticast");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/multicast', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchSettingsQosRule operation.
     * @callback module:api/SwitchSettingsApi~getNetworkSwitchSettingsQosRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a quality of service rule
     * Return a quality of service rule
     * @param {String} networkId 
     * @param {String} qosRuleId 
     * @param {module:api/SwitchSettingsApi~getNetworkSwitchSettingsQosRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchSettingsQosRule(networkId, qosRuleId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchSettingsQosRule");
      }
      // verify the required parameter 'qosRuleId' is set
      if (qosRuleId === undefined || qosRuleId === null) {
        throw new Error("Missing the required parameter 'qosRuleId' when calling getNetworkSwitchSettingsQosRule");
      }

      let pathParams = {
        'networkId': networkId,
        'qosRuleId': qosRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/qosRules/{qosRuleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchSettingsQosRules operation.
     * @callback module:api/SwitchSettingsApi~getNetworkSwitchSettingsQosRulesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List quality of service rules
     * List quality of service rules
     * @param {String} networkId 
     * @param {module:api/SwitchSettingsApi~getNetworkSwitchSettingsQosRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkSwitchSettingsQosRules(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchSettingsQosRules");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/qosRules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchSettingsQosRulesOrder operation.
     * @callback module:api/SwitchSettingsApi~getNetworkSwitchSettingsQosRulesOrderCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the quality of service rule IDs by order in which they will be processed by the switch
     * Return the quality of service rule IDs by order in which they will be processed by the switch
     * @param {String} networkId 
     * @param {module:api/SwitchSettingsApi~getNetworkSwitchSettingsQosRulesOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchSettingsQosRulesOrder(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchSettingsQosRulesOrder");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/qosRules/order', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkSwitchSettingsStormControl operation.
     * @callback module:api/SwitchSettingsApi~getNetworkSwitchSettingsStormControlCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the storm control configuration for a switch network
     * Return the storm control configuration for a switch network
     * @param {String} networkId 
     * @param {module:api/SwitchSettingsApi~getNetworkSwitchSettingsStormControlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchSettingsStormControl(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkSwitchSettingsStormControl");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/stormControl', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchSettings operation.
     * @callback module:api/SwitchSettingsApi~updateNetworkSwitchSettingsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update switch network settings
     * Update switch network settings
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkSwitchSettingsRequest} [updateNetworkSwitchSettingsRequest] 
     * @param {module:api/SwitchSettingsApi~updateNetworkSwitchSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchSettings(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkSwitchSettingsRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchSettings");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchSettingsMulticast operation.
     * @callback module:api/SwitchSettingsApi~updateNetworkSwitchSettingsMulticastCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update multicast settings for a network
     * Update multicast settings for a network
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkSwitchSettingsMulticastRequest} [updateNetworkSwitchSettingsMulticastRequest] 
     * @param {module:api/SwitchSettingsApi~updateNetworkSwitchSettingsMulticastCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchSettingsMulticast(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkSwitchSettingsMulticastRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchSettingsMulticast");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/multicast', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchSettingsQosRule operation.
     * @callback module:api/SwitchSettingsApi~updateNetworkSwitchSettingsQosRuleCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a quality of service rule
     * Update a quality of service rule
     * @param {String} networkId 
     * @param {String} qosRuleId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkSwitchSettingsQosRuleRequest} [updateNetworkSwitchSettingsQosRuleRequest] 
     * @param {module:api/SwitchSettingsApi~updateNetworkSwitchSettingsQosRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchSettingsQosRule(networkId, qosRuleId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkSwitchSettingsQosRuleRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchSettingsQosRule");
      }
      // verify the required parameter 'qosRuleId' is set
      if (qosRuleId === undefined || qosRuleId === null) {
        throw new Error("Missing the required parameter 'qosRuleId' when calling updateNetworkSwitchSettingsQosRule");
      }

      let pathParams = {
        'networkId': networkId,
        'qosRuleId': qosRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/qosRules/{qosRuleId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchSettingsQosRulesOrder operation.
     * @callback module:api/SwitchSettingsApi~updateNetworkSwitchSettingsQosRulesOrderCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the order in which the rules should be processed by the switch
     * Update the order in which the rules should be processed by the switch
     * @param {String} networkId 
     * @param {module:model/UpdateNetworkSwitchSettingsQosRulesOrderRequest} updateNetworkSwitchSettingsQosRulesOrderRequest 
     * @param {module:api/SwitchSettingsApi~updateNetworkSwitchSettingsQosRulesOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchSettingsQosRulesOrder(networkId, updateNetworkSwitchSettingsQosRulesOrderRequest, callback) {
      let postBody = updateNetworkSwitchSettingsQosRulesOrderRequest;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchSettingsQosRulesOrder");
      }
      // verify the required parameter 'updateNetworkSwitchSettingsQosRulesOrderRequest' is set
      if (updateNetworkSwitchSettingsQosRulesOrderRequest === undefined || updateNetworkSwitchSettingsQosRulesOrderRequest === null) {
        throw new Error("Missing the required parameter 'updateNetworkSwitchSettingsQosRulesOrderRequest' when calling updateNetworkSwitchSettingsQosRulesOrder");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/qosRules/order', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkSwitchSettingsStormControl operation.
     * @callback module:api/SwitchSettingsApi~updateNetworkSwitchSettingsStormControlCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the storm control configuration for a switch network
     * Update the storm control configuration for a switch network
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkSwitchSettingsStormControlRequest} [updateNetworkSwitchSettingsStormControlRequest] 
     * @param {module:api/SwitchSettingsApi~updateNetworkSwitchSettingsStormControlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchSettingsStormControl(networkId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateNetworkSwitchSettingsStormControlRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkSwitchSettingsStormControl");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/switch/settings/stormControl', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
