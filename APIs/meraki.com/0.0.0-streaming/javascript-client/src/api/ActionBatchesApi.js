/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateOrganizationActionBatchRequest from '../model/CreateOrganizationActionBatchRequest';
import UpdateOrganizationActionBatchRequest from '../model/UpdateOrganizationActionBatchRequest';

/**
* ActionBatches service.
* @module api/ActionBatchesApi
* @version 0.0.0-streaming
*/
export default class ActionBatchesApi {

    /**
    * Constructs a new ActionBatchesApi. 
    * @alias module:api/ActionBatchesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrganizationActionBatch operation.
     * @callback module:api/ActionBatchesApi~createOrganizationActionBatchCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an action batch
     * Create an action batch
     * @param {String} organizationId 
     * @param {module:model/CreateOrganizationActionBatchRequest} createOrganizationActionBatchRequest 
     * @param {module:api/ActionBatchesApi~createOrganizationActionBatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createOrganizationActionBatch(organizationId, createOrganizationActionBatchRequest, callback) {
      let postBody = createOrganizationActionBatchRequest;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling createOrganizationActionBatch");
      }
      // verify the required parameter 'createOrganizationActionBatchRequest' is set
      if (createOrganizationActionBatchRequest === undefined || createOrganizationActionBatchRequest === null) {
        throw new Error("Missing the required parameter 'createOrganizationActionBatchRequest' when calling createOrganizationActionBatch");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/actionBatches', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOrganizationActionBatch operation.
     * @callback module:api/ActionBatchesApi~deleteOrganizationActionBatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an action batch
     * Delete an action batch
     * @param {String} organizationId 
     * @param {String} actionBatchId 
     * @param {module:api/ActionBatchesApi~deleteOrganizationActionBatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOrganizationActionBatch(organizationId, actionBatchId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling deleteOrganizationActionBatch");
      }
      // verify the required parameter 'actionBatchId' is set
      if (actionBatchId === undefined || actionBatchId === null) {
        throw new Error("Missing the required parameter 'actionBatchId' when calling deleteOrganizationActionBatch");
      }

      let pathParams = {
        'organizationId': organizationId,
        'actionBatchId': actionBatchId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/actionBatches/{actionBatchId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrganizationActionBatches operation.
     * @callback module:api/ActionBatchesApi~getOrganizationActionBatchesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the list of action batches in the organization
     * Return the list of action batches in the organization
     * @param {String} organizationId 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [status] Filter batches by status. Valid types are pending, completed, and failed.
     * @param {module:api/ActionBatchesApi~getOrganizationActionBatchesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getOrganizationActionBatches(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling getOrganizationActionBatches");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'status': opts['status']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/organizations/{organizationId}/actionBatches', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationActionBatch operation.
     * @callback module:api/ActionBatchesApi~updateOrganizationActionBatchCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an action batch
     * Update an action batch
     * @param {String} organizationId 
     * @param {String} actionBatchId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateOrganizationActionBatchRequest} [updateOrganizationActionBatchRequest] 
     * @param {module:api/ActionBatchesApi~updateOrganizationActionBatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationActionBatch(organizationId, actionBatchId, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateOrganizationActionBatchRequest'];
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling updateOrganizationActionBatch");
      }
      // verify the required parameter 'actionBatchId' is set
      if (actionBatchId === undefined || actionBatchId === null) {
        throw new Error("Missing the required parameter 'actionBatchId' when calling updateOrganizationActionBatch");
      }

      let pathParams = {
        'organizationId': organizationId,
        'actionBatchId': actionBatchId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/organizations/{organizationId}/actionBatches/{actionBatchId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
