/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * The version of the OpenAPI document: 0.0.0-streaming
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GenerateNetworkCameraSnapshotRequest from '../model/GenerateNetworkCameraSnapshotRequest';
import UpdateDeviceCameraVideoSettingsRequest from '../model/UpdateDeviceCameraVideoSettingsRequest';

/**
* Cameras service.
* @module api/CamerasApi
* @version 0.0.0-streaming
*/
export default class CamerasApi {

    /**
    * Constructs a new CamerasApi. 
    * @alias module:api/CamerasApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the generateNetworkCameraSnapshot operation.
     * @callback module:api/CamerasApi~generateNetworkCameraSnapshotCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate a snapshot of what the camera sees at the specified time and return a link to that image.
     * Generate a snapshot of what the camera sees at the specified time and return a link to that image.
     * @param {String} networkId 
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {module:model/GenerateNetworkCameraSnapshotRequest} [generateNetworkCameraSnapshotRequest] 
     * @param {module:api/CamerasApi~generateNetworkCameraSnapshotCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    generateNetworkCameraSnapshot(networkId, serial, opts, callback) {
      opts = opts || {};
      let postBody = opts['generateNetworkCameraSnapshotRequest'];
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling generateNetworkCameraSnapshot");
      }
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling generateNetworkCameraSnapshot");
      }

      let pathParams = {
        'networkId': networkId,
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/cameras/{serial}/snapshot', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDeviceCameraVideoSettings operation.
     * @callback module:api/CamerasApi~getDeviceCameraVideoSettingsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns video settings for the given camera
     * Returns video settings for the given camera
     * @param {String} serial 
     * @param {module:api/CamerasApi~getDeviceCameraVideoSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getDeviceCameraVideoSettings(serial, callback) {
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceCameraVideoSettings");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/camera/video/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCameraSchedules operation.
     * @callback module:api/CamerasApi~getNetworkCameraSchedulesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of all camera recording schedules.
     * Returns a list of all camera recording schedules.
     * @param {String} networkId 
     * @param {module:api/CamerasApi~getNetworkCameraSchedulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getNetworkCameraSchedules(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCameraSchedules");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/networks/{networkId}/camera/schedules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCameraVideoLink operation.
     * @callback module:api/CamerasApi~getNetworkCameraVideoLinkCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns video link to the specified camera
     * Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp.
     * @param {String} networkId 
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {String} [timestamp] [optional] The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). If no timestamp is specified, we will assume current time.
     * @param {module:api/CamerasApi~getNetworkCameraVideoLinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkCameraVideoLink(networkId, serial, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCameraVideoLink");
      }
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getNetworkCameraVideoLink");
      }

      let pathParams = {
        'networkId': networkId,
        'serial': serial
      };
      let queryParams = {
        'timestamp': opts['timestamp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/networks/{networkId}/cameras/{serial}/videoLink', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDeviceCameraVideoSettings operation.
     * @callback module:api/CamerasApi~updateDeviceCameraVideoSettingsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update video settings for the given camera
     * Update video settings for the given camera
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateDeviceCameraVideoSettingsRequest} [updateDeviceCameraVideoSettingsRequest] 
     * @param {module:api/CamerasApi~updateDeviceCameraVideoSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateDeviceCameraVideoSettings(serial, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateDeviceCameraVideoSettingsRequest'];
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling updateDeviceCameraVideoSettings");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/devices/{serial}/camera/video/settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
