openapi: 3.0.2
info:
  description: Create beautiful product and API documentation with our developer friendly
    platform.
  title: API Endpoints
  version: 2.0.0
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://readme.com/static/brandkit/readme-blue.svg
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/readmeio/oas/master/packages/examples/3.0/json/readme.json
    version: "3.0"
  x-providerName: readme.io
servers:
- url: https://dash.readme.io/api/v1
paths:
  /:
    get:
      description: Returns project data for API key
      operationId: get_project
      responses:
        "200":
          description: Project data
      security:
      - apiKey: []
      summary: Get metadata about the current project
      tags:
      - Projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /api-specification:
    get:
      description: Get API specification metadata
      operationId: get_api_specification
      parameters:
      - description: "Number of items to include in pagination (up to 100, defaults\
          \ to 10)"
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Used to specify further pages (starts at 1)
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successfully retrieved API specification metadata.
          headers:
            Link:
              $ref: '#/components/headers/link'
      security:
      - apiKey: []
      tags:
      - API Specification
      x-openapi-router-controller: openapi_server.controllers.api_specification_controller
    post:
      description: "Upload an API specification to ReadMe. Or, to use a newer solution\
        \ see https://docs.readme.com/guides/docs/automatically-sync-api-specification-with-github"
      operationId: upload_api_specification
      parameters:
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadAPISpecification_request'
        required: true
        x-body-name: body
      responses:
        "201":
          description: The API specification successfully imported
        "400":
          description: There was a validation error during import
      security:
      - apiKey: []
      tags:
      - API Specification
      x-openapi-router-controller: openapi_server.controllers.api_specification_controller
      x-codegen-request-body-name: body
  /api-specification/{id}:
    delete:
      description: Delete an API specification in ReadMe
      operationId: delete_api_specification
      parameters:
      - description: ID of the API specification. The unique ID for each API can be
          found by navigating to your **API Definitions** page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The API specification was deleted
        "404":
          description: There is no API specification with that ID
      security:
      - apiKey: []
      tags:
      - API Specification
      x-openapi-router-controller: openapi_server.controllers.api_specification_controller
    put:
      description: Update an API specification in ReadMe
      operationId: update_api_specification
      parameters:
      - description: ID of the API specification. The unique ID for each API can be
          found by navigating to your **API Definitions** page.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadAPISpecification_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: The API specification was updated
        "400":
          description: There was a validation error during import
        "404":
          description: There is no API specification with that ID
      security:
      - apiKey: []
      tags:
      - API Specification
      x-openapi-router-controller: openapi_server.controllers.api_specification_controller
      x-codegen-request-body-name: body
  /categories/{slug}:
    get:
      description: Returns the category with this slug
      operationId: get_category
      parameters:
      - description: "Slug of category. Slugs must be all lowercase, and replace spaces\
          \ with hyphens. For example, for the the category \"Getting Started\", enter\
          \ the slug \"getting-started\""
        example: getting-started
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The category exists and has been returned
        "404":
          description: There is no category with that slug
      security:
      - apiKey: []
      summary: Get category
      tags:
      - Categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /categories/{slug}/docs:
    get:
      description: Returns the docs and children docs within this category
      operationId: get_category_docs
      parameters:
      - description: "Slug of category. Slugs must be all lowercase, and replace spaces\
          \ with hyphens. For example, for the the category \"Getting Started\", enter\
          \ the slug \"getting-started\""
        example: getting-started
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The category exists and all of the docs have been returned
        "404":
          description: There is no category with that slug
      security:
      - apiKey: []
      summary: Get docs for category
      tags:
      - Categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /changelogs:
    get:
      description: Returns a list of changelogs associated with the project API key
      operationId: get_changelogs
      parameters:
      - description: "Number of items to include in pagination (up to 100, defaults\
          \ to 10)"
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Used to specify further pages (starts at 1)
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: '#/components/headers/link'
      security:
      - apiKey: []
      summary: Get changelogs
      tags:
      - Changelog
      x-openapi-router-controller: openapi_server.controllers.changelog_controller
    post:
      description: Create a new changelog inside of this project
      operationId: create_changelog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Changelog'
        description: Changelog object
        required: true
        x-body-name: body
      responses:
        "201":
          description: The changelog has successfully been created
        "400":
          description: There was a validation error during creation
      security:
      - apiKey: []
      summary: Create changelog
      tags:
      - Changelog
      x-openapi-router-controller: openapi_server.controllers.changelog_controller
      x-codegen-request-body-name: body
  /changelogs/{slug}:
    delete:
      description: Delete the changelog with this slug
      operationId: delete_changelog
      parameters:
      - description: Slug of changelog
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The changelog has successfully been updated
        "404":
          description: There is no changelog with that slug
      security:
      - apiKey: []
      summary: Delete changelog
      tags:
      - Changelog
      x-openapi-router-controller: openapi_server.controllers.changelog_controller
    get:
      description: Returns the changelog with this slug
      operationId: get_changelog
      parameters:
      - description: Slug of changelog
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The changelog exists and has been returned
        "404":
          description: There is no changelog with that slug
      security:
      - apiKey: []
      summary: Get changelog
      tags:
      - Changelog
      x-openapi-router-controller: openapi_server.controllers.changelog_controller
    put:
      description: Update a changelog with this slug
      operationId: update_changelog
      parameters:
      - description: Slug of changelog
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Changelog'
        description: Changelog object
        required: true
        x-body-name: body
      responses:
        "200":
          description: The changelog has successfully been updated
        "400":
          description: There was a validation error during update
        "404":
          description: There is no changelog with that slug
      security:
      - apiKey: []
      summary: Update changelog
      tags:
      - Changelog
      x-openapi-router-controller: openapi_server.controllers.changelog_controller
      x-codegen-request-body-name: body
  /custompages:
    get:
      description: Returns a list of custom pages associated with the project API
        key
      operationId: get_custom_pages
      parameters:
      - description: "Number of items to include in pagination (up to 100, defaults\
          \ to 10)"
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Used to specify further pages (starts at 1)
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: '#/components/headers/link'
      security:
      - apiKey: []
      summary: Get custom pages
      tags:
      - Custom Pages
      x-openapi-router-controller: openapi_server.controllers.custom_pages_controller
    post:
      description: Create a new custom page inside of this project
      operationId: create_custom_page
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPage'
        description: CustomPage object
        required: true
        x-body-name: body
      responses:
        "201":
          description: The custom page has successfully been created
        "400":
          description: There was a validation error during creation
      security:
      - apiKey: []
      summary: Create custom page
      tags:
      - Custom Pages
      x-openapi-router-controller: openapi_server.controllers.custom_pages_controller
      x-codegen-request-body-name: body
  /custompages/{slug}:
    delete:
      description: Delete the custom page with this slug
      operationId: delete_custom_page
      parameters:
      - description: Slug of custom page
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The custom page has successfully been updated
        "404":
          description: There is no custom page with that slug
      security:
      - apiKey: []
      summary: Delete custom page
      tags:
      - Custom Pages
      x-openapi-router-controller: openapi_server.controllers.custom_pages_controller
    get:
      description: Returns the custom page with this slug
      operationId: get_custom_page
      parameters:
      - description: Slug of custom page
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The custom page exists and has been returned
        "404":
          description: There is no custom page with that slug
      security:
      - apiKey: []
      summary: Get custom page
      tags:
      - Custom Pages
      x-openapi-router-controller: openapi_server.controllers.custom_pages_controller
    put:
      description: Update a custom page with this slug
      operationId: update_custom_page
      parameters:
      - description: Slug of custom page
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPage'
        description: CustomPage object
        required: true
        x-body-name: body
      responses:
        "200":
          description: The custom page has successfully been updated
        "400":
          description: There was a validation error during update
        "404":
          description: There is no custom page with that slug
      security:
      - apiKey: []
      summary: Update custom page
      tags:
      - Custom Pages
      x-openapi-router-controller: openapi_server.controllers.custom_pages_controller
      x-codegen-request-body-name: body
  /docs:
    post:
      description: Create a new doc inside of this project
      operationId: create_doc
      parameters:
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doc'
        description: Doc object
        required: true
        x-body-name: body
      responses:
        "201":
          description: The doc has successfully been created
        "400":
          description: There was a validation error during creation
      security:
      - apiKey: []
      summary: Create doc
      tags:
      - Docs
      x-openapi-router-controller: openapi_server.controllers.docs_controller
      x-codegen-request-body-name: body
  /docs/search:
    post:
      description: Returns all docs that match the search
      operationId: search_docs
      parameters:
      - description: Search string to look for
        explode: true
        in: query
        name: search
        required: true
        schema:
          type: string
        style: form
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The search was successful and results were returned
        "500":
          description: There is an internal error
      security:
      - apiKey: []
      summary: Search docs
      tags:
      - Docs
      x-openapi-router-controller: openapi_server.controllers.docs_controller
  /docs/{slug}:
    delete:
      description: Delete the doc with this slug
      operationId: delete_doc
      parameters:
      - description: "Slug of doc. must be lowercase, and replace spaces with hyphens.\
          \ For example, for the page titled \"New Features\", enter the slug \"new-features\""
        example: new-features
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The doc has successfully been updated
        "404":
          description: There is no doc with that slug
      security:
      - apiKey: []
      summary: Delete doc
      tags:
      - Docs
      x-openapi-router-controller: openapi_server.controllers.docs_controller
    get:
      description: Returns the doc with this slug
      operationId: get_doc
      parameters:
      - description: "Slug of doc. must be lowercase, and replace spaces with hyphens.\
          \ For example, for the page titled \"New Features\", enter the slug \"new-features\""
        example: new-features
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The doc exists and has been returned
        "404":
          description: There is no doc with that slug
      security:
      - apiKey: []
      summary: Get doc
      tags:
      - Docs
      x-openapi-router-controller: openapi_server.controllers.docs_controller
    put:
      description: Update a doc with this slug
      operationId: update_doc
      parameters:
      - description: "Slug of doc. must be lowercase, and replace spaces with hyphens.\
          \ For example, for the page titled \"New Features\", enter the slug \"new-features\""
        example: new-features
        explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      - description: "Version number of your docs project, for example, v3.0. To see\
          \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
        example: v3.0
        explode: false
        in: header
        name: x-readme-version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doc'
        description: Doc object
        required: true
        x-body-name: body
      responses:
        "200":
          description: The doc has successfully been updated
        "400":
          description: There was a validation error during update
        "404":
          description: There is no doc with that slug
      security:
      - apiKey: []
      summary: Update doc
      tags:
      - Docs
      x-openapi-router-controller: openapi_server.controllers.docs_controller
      x-codegen-request-body-name: body
  /errors:
    get:
      description: Returns with all of the error page types for this project
      operationId: get_errors
      responses:
        "200":
          description: An array of the errors
      security:
      - apiKey: []
      summary: Get errors
      tags:
      - Errors
      x-openapi-router-controller: openapi_server.controllers.errors_controller
  /swagger:
    post:
      deprecated: true
      description: DEPRECATED. Instead use https://docs.readme.com/developers/reference/api-specification#uploadapispecification
        to upload a Swagger file to ReadMe
      operationId: upload_swagger
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadSwagger_request'
        required: true
        x-body-name: body
      responses:
        "201":
          description: The Swagger file was successfully imported
        "400":
          description: There was a validation error during import
      security:
      - apiKey: []
      tags:
      - Swagger
      x-openapi-router-controller: openapi_server.controllers.swagger_controller
      x-codegen-request-body-name: body
  /swagger/{id}:
    delete:
      deprecated: true
      description: "DEPRECATED. Instead, use https://docs.readme.com/developers/reference/api-specification#deleteapispecification\
        \ to delete a Swagger file in ReadMe"
      operationId: delete_swagger
      parameters:
      - description: ID of swagger the file
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The Swagger file was successfully deleted
        "404":
          description: There is no Swagger file with that ID
      security:
      - apiKey: []
      tags:
      - Swagger
      x-openapi-router-controller: openapi_server.controllers.swagger_controller
    put:
      deprecated: true
      description: "DEPRECATED. Instead, use https://docs.readme.com/developers/reference/api-specification#updateapispecification\
        \ to update a Swagger file."
      operationId: update_swagger
      parameters:
      - description: ID of the Swagger file
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadSwagger_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: The Swagger file was successfully updated
        "400":
          description: There was a validation error during import
        "404":
          description: There is no Swagger file with that ID
      security:
      - apiKey: []
      tags:
      - Swagger
      x-openapi-router-controller: openapi_server.controllers.swagger_controller
      x-codegen-request-body-name: body
  /version:
    get:
      description: Retrieve a list of versions associated with a project API key
      operationId: get_versions
      responses:
        "200":
          description: JSON list of versions
      security:
      - apiKey: []
      summary: Get versions
      tags:
      - Version
      x-openapi-router-controller: openapi_server.controllers.version_controller
    post:
      description: Create a new version
      operationId: create_version
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
        description: Version object
        required: true
        x-body-name: body
      responses:
        "200":
          description: The model was successfully created and associated with the
            target project
        "400":
          description: "That version already exists in the project, or there are validation\
            \ errors with the request"
        "404":
          description: Could not find target fork in database
      security:
      - apiKey: []
      summary: Create version
      tags:
      - Version
      x-openapi-router-controller: openapi_server.controllers.version_controller
      x-codegen-request-body-name: body
  /version/{versionId}:
    delete:
      description: Delete a version
      operationId: delete_version
      parameters:
      - description: Semver version indentifier
        explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The target version was successfully deleted
        "400":
          description: Cannot delete the main version for a project
        "404":
          description: Could not find target version in database
      security:
      - apiKey: []
      summary: Delete version
      tags:
      - Version
      x-openapi-router-controller: openapi_server.controllers.version_controller
    get:
      description: Returns the version with this version ID
      operationId: get_version
      parameters:
      - description: Semver version indentifier
        explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: JSON version model
        "404":
          description: Could not find target version in database
      security:
      - apiKey: []
      summary: Get version
      tags:
      - Version
      x-openapi-router-controller: openapi_server.controllers.version_controller
    put:
      description: Update an existing version
      operationId: update_version
      parameters:
      - description: Semver version indentifier
        explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
        description: Version object
        required: true
        x-body-name: body
      responses:
        "200":
          description: The target version was successfully updated
        "400":
          description: Cannot demote a version through update
        "404":
          description: Could not find target version in database
      security:
      - apiKey: []
      summary: Update version
      tags:
      - Version
      x-openapi-router-controller: openapi_server.controllers.version_controller
      x-codegen-request-body-name: body
components:
  headers:
    link:
      description: Pagination information. See https://docs.readme.com/reference#pagination
      explode: false
      schema:
        type: string
      style: simple
  parameters:
    page:
      description: Used to specify further pages (starts at 1)
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        minimum: 1
        type: integer
      style: form
    perPage:
      description: "Number of items to include in pagination (up to 100, defaults\
        \ to 10)"
      explode: true
      in: query
      name: perPage
      required: false
      schema:
        default: 10
        maximum: 100
        minimum: 1
        type: integer
      style: form
    versionId:
      description: Semver version indentifier
      explode: false
      in: path
      name: versionId
      required: true
      schema:
        type: string
      style: simple
    x-readme-version:
      description: "Version number of your docs project, for example, v3.0. To see\
        \ all valid versions for your docs project call https://docs.readme.com/developers/reference/version#getversions."
      example: v3.0
      explode: false
      in: header
      name: x-readme-version
      required: true
      schema:
        type: string
      style: simple
  schemas:
    Changelog:
      example:
        hidden: true
        body: body
        title: title
        type: ""
      properties:
        body:
          description: Body content of the changelog
          title: body
          type: string
        hidden:
          default: true
          description: Visibility of the changelog
          title: hidden
          type: boolean
        title:
          description: Title of the changelog
          title: title
          type: string
        type:
          default: ""
          enum:
          - ""
          - added
          - fixed
          - improved
          - deprecated
          - removed
          title: type
          type: string
      required:
      - body
      - title
      title: Changelog
      type: object
    CustomPage:
      example:
        hidden: true
        html: html
        body: body
        htmlmode: false
        title: title
      properties:
        body:
          description: Body formatted in Markdown (displayed by default).
          title: body
          type: string
        hidden:
          default: true
          description: Visibility of the custom page
          title: hidden
          type: boolean
        html:
          description: "Body formatted in HTML (sanitized, only displayed if `htmlmode`\
            \ is **true**)."
          title: html
          type: string
        htmlmode:
          default: false
          description: "**true** if `html` should be displayed, **false** if `body`\
            \ should be displayed."
          title: htmlmode
          type: boolean
        title:
          description: Title of the custom page
          title: title
          type: string
      required:
      - title
      title: CustomPage
      type: object
    Doc:
      example:
        hidden: true
        parentDoc: parentDoc
        body: body
        category: category
        title: title
        type: basic
      properties:
        body:
          description: "Body content of the page, formatted in ReadMe or Github flavored\
            \ Markdown. Accepts long page content, for example, greater than 100k\
            \ characters"
          title: body
          type: string
        category:
          description: "Category ID of the page, which you can get through https://docs.readme.com/developers/reference/categories#getcategory "
          title: category
          type: string
        hidden:
          default: true
          description: Visibility of the page
          title: hidden
          type: boolean
        parentDoc:
          description: "For a subpage, specify the parent doc ID, which you can get\
            \ through https://docs.readme.com/developers/reference/docs#getdoc"
          title: parentDoc
          type: string
        title:
          description: Title of the page
          title: title
          type: string
        type:
          description: "Type of the page. The available types all show up under the\
            \ /docs/ URL path of your docs project (also known as the \"guides\" section).\
            \ Can be \"basic\" (most common), \"error\" (page desribing an API error),\
            \ or \"link\" (page that redirects to an external link)"
          enum:
          - basic
          - error
          - link
          title: type
          type: string
      required:
      - category
      - title
      title: Doc
      type: object
    Version:
      example:
        is_beta: true
        is_deprecated: true
        is_stable: true
        codename: codename
        is_hidden: true
        from: from
        version: version
      properties:
        codename:
          description: Dubbed name of version
          title: codename
          type: string
        from:
          description: Semantic Version to use as the base fork
          title: from
          type: string
        is_beta:
          default: true
          title: is_beta
          type: boolean
        is_deprecated:
          description: Should this be deprecated? Only allowed in PUT operations
          title: is_deprecated
          type: boolean
        is_hidden:
          description: Should this be publically accessible?
          title: is_hidden
          type: boolean
        is_stable:
          description: Should this be the **main** version
          title: is_stable
          type: boolean
        version:
          description: Semantic Version
          title: version
          type: string
      required:
      - from
      - version
      title: Version
      type: object
    uploadAPISpecification_request:
      properties:
        spec:
          description: OpenAPI/Swagger file
          format: binary
          type: string
      type: object
    uploadSwagger_request:
      properties:
        swagger:
          description: Swagger file
          format: binary
          type: string
      type: object
  securitySchemes:
    apiKey:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_apiKey
