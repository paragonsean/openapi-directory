/*
 * API Endpoints
 * Create beautiful product and API documentation with our developer friendly platform.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Doc;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocsApi
 */
@Disabled
public class DocsApiTest {

    private final DocsApi api = new DocsApi();

    /**
     * Create doc
     *
     * Create a new doc inside of this project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDocTest() throws ApiException {
        String xReadmeVersion = null;
        Doc doc = null;
        api.createDoc(xReadmeVersion, doc);
        // TODO: test validations
    }

    /**
     * Delete doc
     *
     * Delete the doc with this slug
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocTest() throws ApiException {
        String slug = null;
        String xReadmeVersion = null;
        api.deleteDoc(slug, xReadmeVersion);
        // TODO: test validations
    }

    /**
     * Get doc
     *
     * Returns the doc with this slug
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocTest() throws ApiException {
        String slug = null;
        String xReadmeVersion = null;
        api.getDoc(slug, xReadmeVersion);
        // TODO: test validations
    }

    /**
     * Search docs
     *
     * Returns all docs that match the search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchDocsTest() throws ApiException {
        String search = null;
        String xReadmeVersion = null;
        api.searchDocs(search, xReadmeVersion);
        // TODO: test validations
    }

    /**
     * Update doc
     *
     * Update a doc with this slug
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDocTest() throws ApiException {
        String slug = null;
        String xReadmeVersion = null;
        Doc doc = null;
        api.updateDoc(slug, xReadmeVersion, doc);
        // TODO: test validations
    }

}
