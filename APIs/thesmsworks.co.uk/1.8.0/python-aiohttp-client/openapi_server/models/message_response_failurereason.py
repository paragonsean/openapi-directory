# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessageResponseFailurereason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: float=None, details: str=None, permanent: bool=None):
        """MessageResponseFailurereason - a model defined in OpenAPI

        :param code: The code of this MessageResponseFailurereason.
        :param details: The details of this MessageResponseFailurereason.
        :param permanent: The permanent of this MessageResponseFailurereason.
        """
        self.openapi_types = {
            'code': float,
            'details': str,
            'permanent': bool
        }

        self.attribute_map = {
            'code': 'code',
            'details': 'details',
            'permanent': 'permanent'
        }

        self._code = code
        self._details = details
        self._permanent = permanent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageResponseFailurereason':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageResponse_failurereason of this MessageResponseFailurereason.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this MessageResponseFailurereason.

        Numeric code that defines the error. Integer.

        :return: The code of this MessageResponseFailurereason.
        :rtype: float
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this MessageResponseFailurereason.

        Numeric code that defines the error. Integer.

        :param code: The code of this MessageResponseFailurereason.
        :type code: float
        """

        self._code = code

    @property
    def details(self):
        """Gets the details of this MessageResponseFailurereason.


        :return: The details of this MessageResponseFailurereason.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this MessageResponseFailurereason.


        :param details: The details of this MessageResponseFailurereason.
        :type details: str
        """

        self._details = details

    @property
    def permanent(self):
        """Gets the permanent of this MessageResponseFailurereason.


        :return: The permanent of this MessageResponseFailurereason.
        :rtype: bool
        """
        return self._permanent

    @permanent.setter
    def permanent(self, permanent):
        """Sets the permanent of this MessageResponseFailurereason.


        :param permanent: The permanent of this MessageResponseFailurereason.
        :type permanent: bool
        """

        self._permanent = permanent
