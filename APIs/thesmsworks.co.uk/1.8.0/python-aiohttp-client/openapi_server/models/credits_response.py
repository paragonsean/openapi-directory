# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreditsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credits: float=None):
        """CreditsResponse - a model defined in OpenAPI

        :param credits: The credits of this CreditsResponse.
        """
        self.openapi_types = {
            'credits': float
        }

        self.attribute_map = {
            'credits': 'credits'
        }

        self._credits = credits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreditsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreditsResponse of this CreditsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credits(self):
        """Gets the credits of this CreditsResponse.

        The number of remaining credits on your SMS Works account. Floating point number.

        :return: The credits of this CreditsResponse.
        :rtype: float
        """
        return self._credits

    @credits.setter
    def credits(self, credits):
        """Sets the credits of this CreditsResponse.

        The number of remaining credits on your SMS Works account. Floating point number.

        :param credits: The credits of this CreditsResponse.
        :type credits: float
        """
        if credits is None:
            raise ValueError("Invalid value for `credits`, must not be `None`")

        self._credits = credits
