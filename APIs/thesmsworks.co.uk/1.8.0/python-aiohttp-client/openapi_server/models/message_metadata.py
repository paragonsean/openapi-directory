# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.meta_data import MetaData
from openapi_server import util


class MessageMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _schema: MetaData=None):
        """MessageMetadata - a model defined in OpenAPI

        :param _schema: The _schema of this MessageMetadata.
        """
        self.openapi_types = {
            '_schema': MetaData
        }

        self.attribute_map = {
            '_schema': 'schema'
        }

        self.__schema = _schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Message_metadata of this MessageMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _schema(self):
        """Gets the _schema of this MessageMetadata.


        :return: The _schema of this MessageMetadata.
        :rtype: MetaData
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this MessageMetadata.


        :param _schema: The _schema of this MessageMetadata.
        :type _schema: MetaData
        """

        self.__schema = _schema
