# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.merge_templates200_response_meta import MergeTemplates200ResponseMeta
from openapi_server import util


class MergeTemplates200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: MergeTemplates200ResponseMeta=None, response: str=None):
        """MergeTemplates200Response - a model defined in OpenAPI

        :param meta: The meta of this MergeTemplates200Response.
        :param response: The response of this MergeTemplates200Response.
        """
        self.openapi_types = {
            'meta': MergeTemplates200ResponseMeta,
            'response': str
        }

        self.attribute_map = {
            'meta': 'meta',
            'response': 'response'
        }

        self._meta = meta
        self._response = response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MergeTemplates200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The mergeTemplates_200_response of this MergeTemplates200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this MergeTemplates200Response.


        :return: The meta of this MergeTemplates200Response.
        :rtype: MergeTemplates200ResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this MergeTemplates200Response.


        :param meta: The meta of this MergeTemplates200Response.
        :type meta: MergeTemplates200ResponseMeta
        """

        self._meta = meta

    @property
    def response(self):
        """Gets the response of this MergeTemplates200Response.

        Base64 encoded document if the output=base64 is used or URL to the document when the output=url is used.

        :return: The response of this MergeTemplates200Response.
        :rtype: str
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this MergeTemplates200Response.

        Base64 encoded document if the output=base64 is used or URL to the document when the output=url is used.

        :param response: The response of this MergeTemplates200Response.
        :type response: str
        """

        self._response = response
