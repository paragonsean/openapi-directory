# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScoreSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, google_drive: str=None):
        """ScoreSource - a model defined in OpenAPI

        :param google_drive: The google_drive of this ScoreSource.
        """
        self.openapi_types = {
            'google_drive': str
        }

        self.attribute_map = {
            'google_drive': 'googleDrive'
        }

        self._google_drive = google_drive

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScoreSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScoreSource of this ScoreSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def google_drive(self):
        """Gets the google_drive of this ScoreSource.

        If the score is a file on Google Drive, this field property must contain its identifier. To use this method, the Drive file must be public or the Flat Drive App must have access to the file. 

        :return: The google_drive of this ScoreSource.
        :rtype: str
        """
        return self._google_drive

    @google_drive.setter
    def google_drive(self, google_drive):
        """Sets the google_drive of this ScoreSource.

        If the score is a file on Google Drive, this field property must contain its identifier. To use this method, the Drive file must be public or the Flat Drive App must have access to the file. 

        :param google_drive: The google_drive of this ScoreSource.
        :type google_drive: str
        """

        self._google_drive = google_drive
