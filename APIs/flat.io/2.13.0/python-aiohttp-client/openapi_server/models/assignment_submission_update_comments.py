# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssignmentSubmissionUpdateComments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total: float=None, unread: float=None):
        """AssignmentSubmissionUpdateComments - a model defined in OpenAPI

        :param total: The total of this AssignmentSubmissionUpdateComments.
        :param unread: The unread of this AssignmentSubmissionUpdateComments.
        """
        self.openapi_types = {
            'total': float,
            'unread': float
        }

        self.attribute_map = {
            'total': 'total',
            'unread': 'unread'
        }

        self._total = total
        self._unread = unread

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssignmentSubmissionUpdateComments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssignmentSubmissionUpdate_comments of this AssignmentSubmissionUpdateComments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self):
        """Gets the total of this AssignmentSubmissionUpdateComments.

        The total number of comments added to the submission

        :return: The total of this AssignmentSubmissionUpdateComments.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this AssignmentSubmissionUpdateComments.

        The total number of comments added to the submission

        :param total: The total of this AssignmentSubmissionUpdateComments.
        :type total: float
        """

        self._total = total

    @property
    def unread(self):
        """Gets the unread of this AssignmentSubmissionUpdateComments.

        The number of unread comments for the current user

        :return: The unread of this AssignmentSubmissionUpdateComments.
        :rtype: float
        """
        return self._unread

    @unread.setter
    def unread(self, unread):
        """Sets the unread of this AssignmentSubmissionUpdateComments.

        The number of unread comments for the current user

        :param unread: The unread of this AssignmentSubmissionUpdateComments.
        :type unread: float
        """

        self._unread = unread
