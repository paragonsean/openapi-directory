# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.class_details_canvas import ClassDetailsCanvas
from openapi_server.models.class_details_clever import ClassDetailsClever
from openapi_server.models.class_details_google_classroom import ClassDetailsGoogleClassroom
from openapi_server.models.class_details_google_drive import ClassDetailsGoogleDrive
from openapi_server.models.class_details_issues import ClassDetailsIssues
from openapi_server.models.class_details_lti import ClassDetailsLti
from openapi_server.models.class_details_mfc import ClassDetailsMfc
from openapi_server.models.class_details_microsoft_graph import ClassDetailsMicrosoftGraph
from openapi_server.models.class_state import ClassState
from openapi_server.models.group_details import GroupDetails
from openapi_server import util


class ClassDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assignments_count: float=None, canvas: ClassDetailsCanvas=None, clever: ClassDetailsClever=None, creation_date: datetime=None, description: str=None, enrollment_code: str=None, google_classroom: ClassDetailsGoogleClassroom=None, google_drive: ClassDetailsGoogleDrive=None, id: str=None, issues: ClassDetailsIssues=None, lti: ClassDetailsLti=None, mfc: ClassDetailsMfc=None, microsoft_graph: ClassDetailsMicrosoftGraph=None, name: str=None, organization: str=None, owner: str=None, section: str=None, state: ClassState=None, students_group: GroupDetails=None, teachers_group: GroupDetails=None, theme: str=None):
        """ClassDetails - a model defined in OpenAPI

        :param assignments_count: The assignments_count of this ClassDetails.
        :param canvas: The canvas of this ClassDetails.
        :param clever: The clever of this ClassDetails.
        :param creation_date: The creation_date of this ClassDetails.
        :param description: The description of this ClassDetails.
        :param enrollment_code: The enrollment_code of this ClassDetails.
        :param google_classroom: The google_classroom of this ClassDetails.
        :param google_drive: The google_drive of this ClassDetails.
        :param id: The id of this ClassDetails.
        :param issues: The issues of this ClassDetails.
        :param lti: The lti of this ClassDetails.
        :param mfc: The mfc of this ClassDetails.
        :param microsoft_graph: The microsoft_graph of this ClassDetails.
        :param name: The name of this ClassDetails.
        :param organization: The organization of this ClassDetails.
        :param owner: The owner of this ClassDetails.
        :param section: The section of this ClassDetails.
        :param state: The state of this ClassDetails.
        :param students_group: The students_group of this ClassDetails.
        :param teachers_group: The teachers_group of this ClassDetails.
        :param theme: The theme of this ClassDetails.
        """
        self.openapi_types = {
            'assignments_count': float,
            'canvas': ClassDetailsCanvas,
            'clever': ClassDetailsClever,
            'creation_date': datetime,
            'description': str,
            'enrollment_code': str,
            'google_classroom': ClassDetailsGoogleClassroom,
            'google_drive': ClassDetailsGoogleDrive,
            'id': str,
            'issues': ClassDetailsIssues,
            'lti': ClassDetailsLti,
            'mfc': ClassDetailsMfc,
            'microsoft_graph': ClassDetailsMicrosoftGraph,
            'name': str,
            'organization': str,
            'owner': str,
            'section': str,
            'state': ClassState,
            'students_group': GroupDetails,
            'teachers_group': GroupDetails,
            'theme': str
        }

        self.attribute_map = {
            'assignments_count': 'assignmentsCount',
            'canvas': 'canvas',
            'clever': 'clever',
            'creation_date': 'creationDate',
            'description': 'description',
            'enrollment_code': 'enrollmentCode',
            'google_classroom': 'googleClassroom',
            'google_drive': 'googleDrive',
            'id': 'id',
            'issues': 'issues',
            'lti': 'lti',
            'mfc': 'mfc',
            'microsoft_graph': 'microsoftGraph',
            'name': 'name',
            'organization': 'organization',
            'owner': 'owner',
            'section': 'section',
            'state': 'state',
            'students_group': 'studentsGroup',
            'teachers_group': 'teachersGroup',
            'theme': 'theme'
        }

        self._assignments_count = assignments_count
        self._canvas = canvas
        self._clever = clever
        self._creation_date = creation_date
        self._description = description
        self._enrollment_code = enrollment_code
        self._google_classroom = google_classroom
        self._google_drive = google_drive
        self._id = id
        self._issues = issues
        self._lti = lti
        self._mfc = mfc
        self._microsoft_graph = microsoft_graph
        self._name = name
        self._organization = organization
        self._owner = owner
        self._section = section
        self._state = state
        self._students_group = students_group
        self._teachers_group = teachers_group
        self._theme = theme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClassDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClassDetails of this ClassDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assignments_count(self):
        """Gets the assignments_count of this ClassDetails.

        The number of assignments created in the class

        :return: The assignments_count of this ClassDetails.
        :rtype: float
        """
        return self._assignments_count

    @assignments_count.setter
    def assignments_count(self, assignments_count):
        """Sets the assignments_count of this ClassDetails.

        The number of assignments created in the class

        :param assignments_count: The assignments_count of this ClassDetails.
        :type assignments_count: float
        """

        self._assignments_count = assignments_count

    @property
    def canvas(self):
        """Gets the canvas of this ClassDetails.


        :return: The canvas of this ClassDetails.
        :rtype: ClassDetailsCanvas
        """
        return self._canvas

    @canvas.setter
    def canvas(self, canvas):
        """Sets the canvas of this ClassDetails.


        :param canvas: The canvas of this ClassDetails.
        :type canvas: ClassDetailsCanvas
        """

        self._canvas = canvas

    @property
    def clever(self):
        """Gets the clever of this ClassDetails.


        :return: The clever of this ClassDetails.
        :rtype: ClassDetailsClever
        """
        return self._clever

    @clever.setter
    def clever(self, clever):
        """Sets the clever of this ClassDetails.


        :param clever: The clever of this ClassDetails.
        :type clever: ClassDetailsClever
        """

        self._clever = clever

    @property
    def creation_date(self):
        """Gets the creation_date of this ClassDetails.

        The date when the class was create

        :return: The creation_date of this ClassDetails.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ClassDetails.

        The date when the class was create

        :param creation_date: The creation_date of this ClassDetails.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def description(self):
        """Gets the description of this ClassDetails.

        An optionnal description for this class

        :return: The description of this ClassDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ClassDetails.

        An optionnal description for this class

        :param description: The description of this ClassDetails.
        :type description: str
        """

        self._description = description

    @property
    def enrollment_code(self):
        """Gets the enrollment_code of this ClassDetails.

        [Teachers only] The enrollment code that can be used by the students to join the class 

        :return: The enrollment_code of this ClassDetails.
        :rtype: str
        """
        return self._enrollment_code

    @enrollment_code.setter
    def enrollment_code(self, enrollment_code):
        """Sets the enrollment_code of this ClassDetails.

        [Teachers only] The enrollment code that can be used by the students to join the class 

        :param enrollment_code: The enrollment_code of this ClassDetails.
        :type enrollment_code: str
        """

        self._enrollment_code = enrollment_code

    @property
    def google_classroom(self):
        """Gets the google_classroom of this ClassDetails.


        :return: The google_classroom of this ClassDetails.
        :rtype: ClassDetailsGoogleClassroom
        """
        return self._google_classroom

    @google_classroom.setter
    def google_classroom(self, google_classroom):
        """Sets the google_classroom of this ClassDetails.


        :param google_classroom: The google_classroom of this ClassDetails.
        :type google_classroom: ClassDetailsGoogleClassroom
        """

        self._google_classroom = google_classroom

    @property
    def google_drive(self):
        """Gets the google_drive of this ClassDetails.


        :return: The google_drive of this ClassDetails.
        :rtype: ClassDetailsGoogleDrive
        """
        return self._google_drive

    @google_drive.setter
    def google_drive(self, google_drive):
        """Sets the google_drive of this ClassDetails.


        :param google_drive: The google_drive of this ClassDetails.
        :type google_drive: ClassDetailsGoogleDrive
        """

        self._google_drive = google_drive

    @property
    def id(self):
        """Gets the id of this ClassDetails.

        The unique identifier of the class

        :return: The id of this ClassDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ClassDetails.

        The unique identifier of the class

        :param id: The id of this ClassDetails.
        :type id: str
        """

        self._id = id

    @property
    def issues(self):
        """Gets the issues of this ClassDetails.


        :return: The issues of this ClassDetails.
        :rtype: ClassDetailsIssues
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this ClassDetails.


        :param issues: The issues of this ClassDetails.
        :type issues: ClassDetailsIssues
        """

        self._issues = issues

    @property
    def lti(self):
        """Gets the lti of this ClassDetails.


        :return: The lti of this ClassDetails.
        :rtype: ClassDetailsLti
        """
        return self._lti

    @lti.setter
    def lti(self, lti):
        """Sets the lti of this ClassDetails.


        :param lti: The lti of this ClassDetails.
        :type lti: ClassDetailsLti
        """

        self._lti = lti

    @property
    def mfc(self):
        """Gets the mfc of this ClassDetails.


        :return: The mfc of this ClassDetails.
        :rtype: ClassDetailsMfc
        """
        return self._mfc

    @mfc.setter
    def mfc(self, mfc):
        """Sets the mfc of this ClassDetails.


        :param mfc: The mfc of this ClassDetails.
        :type mfc: ClassDetailsMfc
        """

        self._mfc = mfc

    @property
    def microsoft_graph(self):
        """Gets the microsoft_graph of this ClassDetails.


        :return: The microsoft_graph of this ClassDetails.
        :rtype: ClassDetailsMicrosoftGraph
        """
        return self._microsoft_graph

    @microsoft_graph.setter
    def microsoft_graph(self, microsoft_graph):
        """Sets the microsoft_graph of this ClassDetails.


        :param microsoft_graph: The microsoft_graph of this ClassDetails.
        :type microsoft_graph: ClassDetailsMicrosoftGraph
        """

        self._microsoft_graph = microsoft_graph

    @property
    def name(self):
        """Gets the name of this ClassDetails.

        The name of the class

        :return: The name of this ClassDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ClassDetails.

        The name of the class

        :param name: The name of this ClassDetails.
        :type name: str
        """

        self._name = name

    @property
    def organization(self):
        """Gets the organization of this ClassDetails.

        The unique identifier of the Organization owning this class

        :return: The organization of this ClassDetails.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this ClassDetails.

        The unique identifier of the Organization owning this class

        :param organization: The organization of this ClassDetails.
        :type organization: str
        """

        self._organization = organization

    @property
    def owner(self):
        """Gets the owner of this ClassDetails.

        The unique identifier of the User owning this class

        :return: The owner of this ClassDetails.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this ClassDetails.

        The unique identifier of the User owning this class

        :param owner: The owner of this ClassDetails.
        :type owner: str
        """

        self._owner = owner

    @property
    def section(self):
        """Gets the section of this ClassDetails.

        The section of the class

        :return: The section of this ClassDetails.
        :rtype: str
        """
        return self._section

    @section.setter
    def section(self, section):
        """Sets the section of this ClassDetails.

        The section of the class

        :param section: The section of this ClassDetails.
        :type section: str
        """

        self._section = section

    @property
    def state(self):
        """Gets the state of this ClassDetails.


        :return: The state of this ClassDetails.
        :rtype: ClassState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ClassDetails.


        :param state: The state of this ClassDetails.
        :type state: ClassState
        """

        self._state = state

    @property
    def students_group(self):
        """Gets the students_group of this ClassDetails.


        :return: The students_group of this ClassDetails.
        :rtype: GroupDetails
        """
        return self._students_group

    @students_group.setter
    def students_group(self, students_group):
        """Sets the students_group of this ClassDetails.


        :param students_group: The students_group of this ClassDetails.
        :type students_group: GroupDetails
        """

        self._students_group = students_group

    @property
    def teachers_group(self):
        """Gets the teachers_group of this ClassDetails.


        :return: The teachers_group of this ClassDetails.
        :rtype: GroupDetails
        """
        return self._teachers_group

    @teachers_group.setter
    def teachers_group(self, teachers_group):
        """Sets the teachers_group of this ClassDetails.


        :param teachers_group: The teachers_group of this ClassDetails.
        :type teachers_group: GroupDetails
        """

        self._teachers_group = teachers_group

    @property
    def theme(self):
        """Gets the theme of this ClassDetails.

        The theme identifier using in Flat User Interface

        :return: The theme of this ClassDetails.
        :rtype: str
        """
        return self._theme

    @theme.setter
    def theme(self, theme):
        """Sets the theme of this ClassDetails.

        The theme identifier using in Flat User Interface

        :param theme: The theme of this ClassDetails.
        :type theme: str
        """

        self._theme = theme
