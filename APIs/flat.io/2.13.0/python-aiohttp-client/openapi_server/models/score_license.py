# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScoreLicense(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    COPYRIGHT = 'copyright'
    CC0 = 'cc0'
    CC_MINUS_BY = 'cc-by'
    CC_MINUS_BY_MINUS_SA = 'cc-by-sa'
    CC_MINUS_BY_MINUS_ND = 'cc-by-nd'
    CC_MINUS_BY_MINUS_NC = 'cc-by-nc'
    CC_MINUS_BY_MINUS_NC_MINUS_SA = 'cc-by-nc-sa'
    CC_MINUS_BY_MINUS_NC_MINUS_ND = 'cc-by-nc-nd'

    def __init__(self):
        """ScoreLicense - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScoreLicense':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScoreLicense of this ScoreLicense.
        """
        return util.deserialize_model(dikt, cls)
