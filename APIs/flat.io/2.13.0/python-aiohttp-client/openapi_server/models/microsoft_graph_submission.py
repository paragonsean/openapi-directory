# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MicrosoftGraphSubmission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alternate_link: str=None, id: str=None, state: str=None):
        """MicrosoftGraphSubmission - a model defined in OpenAPI

        :param alternate_link: The alternate_link of this MicrosoftGraphSubmission.
        :param id: The id of this MicrosoftGraphSubmission.
        :param state: The state of this MicrosoftGraphSubmission.
        """
        self.openapi_types = {
            'alternate_link': str,
            'id': str,
            'state': str
        }

        self.attribute_map = {
            'alternate_link': 'alternateLink',
            'id': 'id',
            'state': 'state'
        }

        self._alternate_link = alternate_link
        self._id = id
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MicrosoftGraphSubmission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MicrosoftGraphSubmission of this MicrosoftGraphSubmission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternate_link(self):
        """Gets the alternate_link of this MicrosoftGraphSubmission.

        Absolute link to this submission in the Microsoft Teams web UI

        :return: The alternate_link of this MicrosoftGraphSubmission.
        :rtype: str
        """
        return self._alternate_link

    @alternate_link.setter
    def alternate_link(self, alternate_link):
        """Sets the alternate_link of this MicrosoftGraphSubmission.

        Absolute link to this submission in the Microsoft Teams web UI

        :param alternate_link: The alternate_link of this MicrosoftGraphSubmission.
        :type alternate_link: str
        """

        self._alternate_link = alternate_link

    @property
    def id(self):
        """Gets the id of this MicrosoftGraphSubmission.

        Identifier of the submission assigned by Microsoft Teams

        :return: The id of this MicrosoftGraphSubmission.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MicrosoftGraphSubmission.

        Identifier of the submission assigned by Microsoft Teams

        :param id: The id of this MicrosoftGraphSubmission.
        :type id: str
        """

        self._id = id

    @property
    def state(self):
        """Gets the state of this MicrosoftGraphSubmission.

        State of the submission

        :return: The state of this MicrosoftGraphSubmission.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this MicrosoftGraphSubmission.

        State of the submission

        :param state: The state of this MicrosoftGraphSubmission.
        :type state: str
        """

        self._state = state
