# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClassDetailsClever(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: datetime=None, id: str=None, modification_date: datetime=None, subject: str=None, term_end_date: datetime=None, term_name: str=None, term_start_date: datetime=None):
        """ClassDetailsClever - a model defined in OpenAPI

        :param creation_date: The creation_date of this ClassDetailsClever.
        :param id: The id of this ClassDetailsClever.
        :param modification_date: The modification_date of this ClassDetailsClever.
        :param subject: The subject of this ClassDetailsClever.
        :param term_end_date: The term_end_date of this ClassDetailsClever.
        :param term_name: The term_name of this ClassDetailsClever.
        :param term_start_date: The term_start_date of this ClassDetailsClever.
        """
        self.openapi_types = {
            'creation_date': datetime,
            'id': str,
            'modification_date': datetime,
            'subject': str,
            'term_end_date': datetime,
            'term_name': str,
            'term_start_date': datetime
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'id': 'id',
            'modification_date': 'modificationDate',
            'subject': 'subject',
            'term_end_date': 'termEndDate',
            'term_name': 'termName',
            'term_start_date': 'termStartDate'
        }

        self._creation_date = creation_date
        self._id = id
        self._modification_date = modification_date
        self._subject = subject
        self._term_end_date = term_end_date
        self._term_name = term_name
        self._term_start_date = term_start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClassDetailsClever':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClassDetails_clever of this ClassDetailsClever.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this ClassDetailsClever.

        The creation date of the section on clever

        :return: The creation_date of this ClassDetailsClever.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ClassDetailsClever.

        The creation date of the section on clever

        :param creation_date: The creation_date of this ClassDetailsClever.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def id(self):
        """Gets the id of this ClassDetailsClever.

        Clever section unique identifier

        :return: The id of this ClassDetailsClever.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ClassDetailsClever.

        Clever section unique identifier

        :param id: The id of this ClassDetailsClever.
        :type id: str
        """

        self._id = id

    @property
    def modification_date(self):
        """Gets the modification_date of this ClassDetailsClever.

        The last modification date of the section on clever

        :return: The modification_date of this ClassDetailsClever.
        :rtype: datetime
        """
        return self._modification_date

    @modification_date.setter
    def modification_date(self, modification_date):
        """Sets the modification_date of this ClassDetailsClever.

        The last modification date of the section on clever

        :param modification_date: The modification_date of this ClassDetailsClever.
        :type modification_date: datetime
        """

        self._modification_date = modification_date

    @property
    def subject(self):
        """Gets the subject of this ClassDetailsClever.

        Normalized subject of the course

        :return: The subject of this ClassDetailsClever.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this ClassDetailsClever.

        Normalized subject of the course

        :param subject: The subject of this ClassDetailsClever.
        :type subject: str
        """
        allowed_values = ["english/language arts", "math", "science", "social studies", "language", "homeroom/advisory", "interventions/online learning", "technology and engineering", "PE and health", "arts and music", "other"]  # noqa: E501
        if subject not in allowed_values:
            raise ValueError(
                "Invalid value for `subject` ({0}), must be one of {1}"
                .format(subject, allowed_values)
            )

        self._subject = subject

    @property
    def term_end_date(self):
        """Gets the term_end_date of this ClassDetailsClever.

        End date of the term

        :return: The term_end_date of this ClassDetailsClever.
        :rtype: datetime
        """
        return self._term_end_date

    @term_end_date.setter
    def term_end_date(self, term_end_date):
        """Sets the term_end_date of this ClassDetailsClever.

        End date of the term

        :param term_end_date: The term_end_date of this ClassDetailsClever.
        :type term_end_date: datetime
        """

        self._term_end_date = term_end_date

    @property
    def term_name(self):
        """Gets the term_name of this ClassDetailsClever.

        Name of the term when this course happens

        :return: The term_name of this ClassDetailsClever.
        :rtype: str
        """
        return self._term_name

    @term_name.setter
    def term_name(self, term_name):
        """Sets the term_name of this ClassDetailsClever.

        Name of the term when this course happens

        :param term_name: The term_name of this ClassDetailsClever.
        :type term_name: str
        """

        self._term_name = term_name

    @property
    def term_start_date(self):
        """Gets the term_start_date of this ClassDetailsClever.

        Beginning date of the term

        :return: The term_start_date of this ClassDetailsClever.
        :rtype: datetime
        """
        return self._term_start_date

    @term_start_date.setter
    def term_start_date(self, term_start_date):
        """Sets the term_start_date of this ClassDetailsClever.

        Beginning date of the term

        :param term_start_date: The term_start_date of this ClassDetailsClever.
        :type term_start_date: datetime
        """

        self._term_start_date = term_start_date
