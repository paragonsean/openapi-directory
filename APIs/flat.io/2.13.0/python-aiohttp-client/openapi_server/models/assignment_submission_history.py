# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assignment_submission_history_attachment import AssignmentSubmissionHistoryAttachment
from openapi_server.models.assignment_submission_state import AssignmentSubmissionState
from openapi_server import util


class AssignmentSubmissionHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attachment: AssignmentSubmissionHistoryAttachment=None, _date: datetime=None, draft_grade: float=None, grade: float=None, max_points: float=None, state: AssignmentSubmissionState=None, users: List[str]=None):
        """AssignmentSubmissionHistory - a model defined in OpenAPI

        :param attachment: The attachment of this AssignmentSubmissionHistory.
        :param _date: The _date of this AssignmentSubmissionHistory.
        :param draft_grade: The draft_grade of this AssignmentSubmissionHistory.
        :param grade: The grade of this AssignmentSubmissionHistory.
        :param max_points: The max_points of this AssignmentSubmissionHistory.
        :param state: The state of this AssignmentSubmissionHistory.
        :param users: The users of this AssignmentSubmissionHistory.
        """
        self.openapi_types = {
            'attachment': AssignmentSubmissionHistoryAttachment,
            '_date': datetime,
            'draft_grade': float,
            'grade': float,
            'max_points': float,
            'state': AssignmentSubmissionState,
            'users': List[str]
        }

        self.attribute_map = {
            'attachment': 'attachment',
            '_date': 'date',
            'draft_grade': 'draftGrade',
            'grade': 'grade',
            'max_points': 'maxPoints',
            'state': 'state',
            'users': 'users'
        }

        self._attachment = attachment
        self.__date = _date
        self._draft_grade = draft_grade
        self._grade = grade
        self._max_points = max_points
        self._state = state
        self._users = users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssignmentSubmissionHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssignmentSubmissionHistory of this AssignmentSubmissionHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attachment(self):
        """Gets the attachment of this AssignmentSubmissionHistory.


        :return: The attachment of this AssignmentSubmissionHistory.
        :rtype: AssignmentSubmissionHistoryAttachment
        """
        return self._attachment

    @attachment.setter
    def attachment(self, attachment):
        """Sets the attachment of this AssignmentSubmissionHistory.


        :param attachment: The attachment of this AssignmentSubmissionHistory.
        :type attachment: AssignmentSubmissionHistoryAttachment
        """

        self._attachment = attachment

    @property
    def _date(self):
        """Gets the _date of this AssignmentSubmissionHistory.

        The date when the submission was changed

        :return: The _date of this AssignmentSubmissionHistory.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AssignmentSubmissionHistory.

        The date when the submission was changed

        :param _date: The _date of this AssignmentSubmissionHistory.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def draft_grade(self):
        """Gets the draft_grade of this AssignmentSubmissionHistory.

        The numerator of the grade at this time in the submission grade history

        :return: The draft_grade of this AssignmentSubmissionHistory.
        :rtype: float
        """
        return self._draft_grade

    @draft_grade.setter
    def draft_grade(self, draft_grade):
        """Sets the draft_grade of this AssignmentSubmissionHistory.

        The numerator of the grade at this time in the submission grade history

        :param draft_grade: The draft_grade of this AssignmentSubmissionHistory.
        :type draft_grade: float
        """

        self._draft_grade = draft_grade

    @property
    def grade(self):
        """Gets the grade of this AssignmentSubmissionHistory.

        The numerator of the grade at this time in the submission grade history

        :return: The grade of this AssignmentSubmissionHistory.
        :rtype: float
        """
        return self._grade

    @grade.setter
    def grade(self, grade):
        """Sets the grade of this AssignmentSubmissionHistory.

        The numerator of the grade at this time in the submission grade history

        :param grade: The grade of this AssignmentSubmissionHistory.
        :type grade: float
        """

        self._grade = grade

    @property
    def max_points(self):
        """Gets the max_points of this AssignmentSubmissionHistory.

        The denominator of the grade at this time in the submission grade history

        :return: The max_points of this AssignmentSubmissionHistory.
        :rtype: float
        """
        return self._max_points

    @max_points.setter
    def max_points(self, max_points):
        """Sets the max_points of this AssignmentSubmissionHistory.

        The denominator of the grade at this time in the submission grade history

        :param max_points: The max_points of this AssignmentSubmissionHistory.
        :type max_points: float
        """

        self._max_points = max_points

    @property
    def state(self):
        """Gets the state of this AssignmentSubmissionHistory.


        :return: The state of this AssignmentSubmissionHistory.
        :rtype: AssignmentSubmissionState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AssignmentSubmissionHistory.


        :param state: The state of this AssignmentSubmissionHistory.
        :type state: AssignmentSubmissionState
        """

        self._state = state

    @property
    def users(self):
        """Gets the users of this AssignmentSubmissionHistory.

        The user(s) unique identifier(s) who made the change

        :return: The users of this AssignmentSubmissionHistory.
        :rtype: List[str]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this AssignmentSubmissionHistory.

        The user(s) unique identifier(s) who made the change

        :param users: The users of this AssignmentSubmissionHistory.
        :type users: List[str]
        """

        self._users = users
