# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.class_details_issues_sync_inner import ClassDetailsIssuesSyncInner
from openapi_server import util


class ClassDetailsIssues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sync: List[ClassDetailsIssuesSyncInner]=None):
        """ClassDetailsIssues - a model defined in OpenAPI

        :param sync: The sync of this ClassDetailsIssues.
        """
        self.openapi_types = {
            'sync': List[ClassDetailsIssuesSyncInner]
        }

        self.attribute_map = {
            'sync': 'sync'
        }

        self._sync = sync

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClassDetailsIssues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClassDetails_issues of this ClassDetailsIssues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sync(self):
        """Gets the sync of this ClassDetailsIssues.

        Synchronization issues for the class

        :return: The sync of this ClassDetailsIssues.
        :rtype: List[ClassDetailsIssuesSyncInner]
        """
        return self._sync

    @sync.setter
    def sync(self, sync):
        """Sets the sync of this ClassDetailsIssues.

        Synchronization issues for the class

        :param sync: The sync of this ClassDetailsIssues.
        :type sync: List[ClassDetailsIssuesSyncInner]
        """

        self._sync = sync
