# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.score_privacy import ScorePrivacy
from openapi_server.models.user_public_summary import UserPublicSummary
from openapi_server import util


class ScoreSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, html_url: str=None, id: str=None, privacy: ScorePrivacy=None, sharing_key: str=None, title: str=None, user: UserPublicSummary=None):
        """ScoreSummary - a model defined in OpenAPI

        :param html_url: The html_url of this ScoreSummary.
        :param id: The id of this ScoreSummary.
        :param privacy: The privacy of this ScoreSummary.
        :param sharing_key: The sharing_key of this ScoreSummary.
        :param title: The title of this ScoreSummary.
        :param user: The user of this ScoreSummary.
        """
        self.openapi_types = {
            'html_url': str,
            'id': str,
            'privacy': ScorePrivacy,
            'sharing_key': str,
            'title': str,
            'user': UserPublicSummary
        }

        self.attribute_map = {
            'html_url': 'htmlUrl',
            'id': 'id',
            'privacy': 'privacy',
            'sharing_key': 'sharingKey',
            'title': 'title',
            'user': 'user'
        }

        self._html_url = html_url
        self._id = id
        self._privacy = privacy
        self._sharing_key = sharing_key
        self._title = title
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScoreSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScoreSummary of this ScoreSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def html_url(self):
        """Gets the html_url of this ScoreSummary.

        The url where the score can be viewed in a web browser

        :return: The html_url of this ScoreSummary.
        :rtype: str
        """
        return self._html_url

    @html_url.setter
    def html_url(self, html_url):
        """Sets the html_url of this ScoreSummary.

        The url where the score can be viewed in a web browser

        :param html_url: The html_url of this ScoreSummary.
        :type html_url: str
        """

        self._html_url = html_url

    @property
    def id(self):
        """Gets the id of this ScoreSummary.

        The unique identifier of the score

        :return: The id of this ScoreSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ScoreSummary.

        The unique identifier of the score

        :param id: The id of this ScoreSummary.
        :type id: str
        """

        self._id = id

    @property
    def privacy(self):
        """Gets the privacy of this ScoreSummary.


        :return: The privacy of this ScoreSummary.
        :rtype: ScorePrivacy
        """
        return self._privacy

    @privacy.setter
    def privacy(self, privacy):
        """Sets the privacy of this ScoreSummary.


        :param privacy: The privacy of this ScoreSummary.
        :type privacy: ScorePrivacy
        """

        self._privacy = privacy

    @property
    def sharing_key(self):
        """Gets the sharing_key of this ScoreSummary.

        The private sharing key of the score (available when the `privacy` mode is set to `privateLink`)

        :return: The sharing_key of this ScoreSummary.
        :rtype: str
        """
        return self._sharing_key

    @sharing_key.setter
    def sharing_key(self, sharing_key):
        """Sets the sharing_key of this ScoreSummary.

        The private sharing key of the score (available when the `privacy` mode is set to `privateLink`)

        :param sharing_key: The sharing_key of this ScoreSummary.
        :type sharing_key: str
        """

        self._sharing_key = sharing_key

    @property
    def title(self):
        """Gets the title of this ScoreSummary.

        The title of the score

        :return: The title of this ScoreSummary.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ScoreSummary.

        The title of the score

        :param title: The title of this ScoreSummary.
        :type title: str
        """

        self._title = title

    @property
    def user(self):
        """Gets the user of this ScoreSummary.


        :return: The user of this ScoreSummary.
        :rtype: UserPublicSummary
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ScoreSummary.


        :param user: The user of this ScoreSummary.
        :type user: UserPublicSummary
        """

        self._user = user
