# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization_roles import OrganizationRoles
from openapi_server import util


class OrganizationInvitationCreation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, organization_role: OrganizationRoles=None):
        """OrganizationInvitationCreation - a model defined in OpenAPI

        :param email: The email of this OrganizationInvitationCreation.
        :param organization_role: The organization_role of this OrganizationInvitationCreation.
        """
        self.openapi_types = {
            'email': str,
            'organization_role': OrganizationRoles
        }

        self.attribute_map = {
            'email': 'email',
            'organization_role': 'organizationRole'
        }

        self._email = email
        self._organization_role = organization_role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationInvitationCreation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationInvitationCreation of this OrganizationInvitationCreation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this OrganizationInvitationCreation.

        The email address you want to send the invitation to

        :return: The email of this OrganizationInvitationCreation.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this OrganizationInvitationCreation.

        The email address you want to send the invitation to

        :param email: The email of this OrganizationInvitationCreation.
        :type email: str
        """

        self._email = email

    @property
    def organization_role(self):
        """Gets the organization_role of this OrganizationInvitationCreation.


        :return: The organization_role of this OrganizationInvitationCreation.
        :rtype: OrganizationRoles
        """
        return self._organization_role

    @organization_role.setter
    def organization_role(self, organization_role):
        """Sets the organization_role of this OrganizationInvitationCreation.


        :param organization_role: The organization_role of this OrganizationInvitationCreation.
        :type organization_role: OrganizationRoles
        """

        self._organization_role = organization_role
