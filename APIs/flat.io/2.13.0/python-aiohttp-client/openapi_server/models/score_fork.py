# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScoreFork(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collection: str='root'):
        """ScoreFork - a model defined in OpenAPI

        :param collection: The collection of this ScoreFork.
        """
        self.openapi_types = {
            'collection': str
        }

        self.attribute_map = {
            'collection': 'collection'
        }

        self._collection = collection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScoreFork':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScoreFork of this ScoreFork.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collection(self):
        """Gets the collection of this ScoreFork.

        Unique identifier of a collection where the score will be copied. If no collection identifier is provided, the score will be stored in the `root` directory. 

        :return: The collection of this ScoreFork.
        :rtype: str
        """
        return self._collection

    @collection.setter
    def collection(self, collection):
        """Sets the collection of this ScoreFork.

        Unique identifier of a collection where the score will be copied. If no collection identifier is provided, the score will be stored in the `root` directory. 

        :param collection: The collection of this ScoreFork.
        :type collection: str
        """

        self._collection = collection
