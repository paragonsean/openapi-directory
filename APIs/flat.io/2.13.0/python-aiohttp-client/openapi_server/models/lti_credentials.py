# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lms_name import LmsName
from openapi_server import util


class LtiCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer_key: str=None, consumer_secret: str=None, creation_date: datetime=None, creator: str=None, id: str=None, last_usage: datetime=None, lms: LmsName=None, name: str=None, organization: str=None):
        """LtiCredentials - a model defined in OpenAPI

        :param consumer_key: The consumer_key of this LtiCredentials.
        :param consumer_secret: The consumer_secret of this LtiCredentials.
        :param creation_date: The creation_date of this LtiCredentials.
        :param creator: The creator of this LtiCredentials.
        :param id: The id of this LtiCredentials.
        :param last_usage: The last_usage of this LtiCredentials.
        :param lms: The lms of this LtiCredentials.
        :param name: The name of this LtiCredentials.
        :param organization: The organization of this LtiCredentials.
        """
        self.openapi_types = {
            'consumer_key': str,
            'consumer_secret': str,
            'creation_date': datetime,
            'creator': str,
            'id': str,
            'last_usage': datetime,
            'lms': LmsName,
            'name': str,
            'organization': str
        }

        self.attribute_map = {
            'consumer_key': 'consumerKey',
            'consumer_secret': 'consumerSecret',
            'creation_date': 'creationDate',
            'creator': 'creator',
            'id': 'id',
            'last_usage': 'lastUsage',
            'lms': 'lms',
            'name': 'name',
            'organization': 'organization'
        }

        self._consumer_key = consumer_key
        self._consumer_secret = consumer_secret
        self._creation_date = creation_date
        self._creator = creator
        self._id = id
        self._last_usage = last_usage
        self._lms = lms
        self._name = name
        self._organization = organization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LtiCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LtiCredentials of this LtiCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer_key(self):
        """Gets the consumer_key of this LtiCredentials.

        OAuth 1 Consumer Key

        :return: The consumer_key of this LtiCredentials.
        :rtype: str
        """
        return self._consumer_key

    @consumer_key.setter
    def consumer_key(self, consumer_key):
        """Sets the consumer_key of this LtiCredentials.

        OAuth 1 Consumer Key

        :param consumer_key: The consumer_key of this LtiCredentials.
        :type consumer_key: str
        """

        self._consumer_key = consumer_key

    @property
    def consumer_secret(self):
        """Gets the consumer_secret of this LtiCredentials.

        OAuth 1 Consumer Secret

        :return: The consumer_secret of this LtiCredentials.
        :rtype: str
        """
        return self._consumer_secret

    @consumer_secret.setter
    def consumer_secret(self, consumer_secret):
        """Sets the consumer_secret of this LtiCredentials.

        OAuth 1 Consumer Secret

        :param consumer_secret: The consumer_secret of this LtiCredentials.
        :type consumer_secret: str
        """

        self._consumer_secret = consumer_secret

    @property
    def creation_date(self):
        """Gets the creation_date of this LtiCredentials.

        The creation date of thse credentials

        :return: The creation_date of this LtiCredentials.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this LtiCredentials.

        The creation date of thse credentials

        :param creation_date: The creation_date of this LtiCredentials.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def creator(self):
        """Gets the creator of this LtiCredentials.

        Unique identifier of the user who created these credentials

        :return: The creator of this LtiCredentials.
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this LtiCredentials.

        Unique identifier of the user who created these credentials

        :param creator: The creator of this LtiCredentials.
        :type creator: str
        """

        self._creator = creator

    @property
    def id(self):
        """Gets the id of this LtiCredentials.

        The unique identifier of this couple of credentials

        :return: The id of this LtiCredentials.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LtiCredentials.

        The unique identifier of this couple of credentials

        :param id: The id of this LtiCredentials.
        :type id: str
        """

        self._id = id

    @property
    def last_usage(self):
        """Gets the last_usage of this LtiCredentials.

        The last time these credentials were used

        :return: The last_usage of this LtiCredentials.
        :rtype: datetime
        """
        return self._last_usage

    @last_usage.setter
    def last_usage(self, last_usage):
        """Sets the last_usage of this LtiCredentials.

        The last time these credentials were used

        :param last_usage: The last_usage of this LtiCredentials.
        :type last_usage: datetime
        """

        self._last_usage = last_usage

    @property
    def lms(self):
        """Gets the lms of this LtiCredentials.


        :return: The lms of this LtiCredentials.
        :rtype: LmsName
        """
        return self._lms

    @lms.setter
    def lms(self, lms):
        """Sets the lms of this LtiCredentials.


        :param lms: The lms of this LtiCredentials.
        :type lms: LmsName
        """

        self._lms = lms

    @property
    def name(self):
        """Gets the name of this LtiCredentials.

        Name of the couple of credentials

        :return: The name of this LtiCredentials.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LtiCredentials.

        Name of the couple of credentials

        :param name: The name of this LtiCredentials.
        :type name: str
        """

        self._name = name

    @property
    def organization(self):
        """Gets the organization of this LtiCredentials.

        The unique identifier of the Organization associated to these credentials

        :return: The organization of this LtiCredentials.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this LtiCredentials.

        The unique identifier of the Organization associated to these credentials

        :param organization: The organization of this LtiCredentials.
        :type organization: str
        """

        self._organization = organization
