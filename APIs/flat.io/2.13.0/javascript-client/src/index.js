/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Assignment from './model/Assignment';
import AssignmentCanvas from './model/AssignmentCanvas';
import AssignmentCopy from './model/AssignmentCopy';
import AssignmentCreation from './model/AssignmentCreation';
import AssignmentCreationGoogleClassroom from './model/AssignmentCreationGoogleClassroom';
import AssignmentCreationMicrosoftGraph from './model/AssignmentCreationMicrosoftGraph';
import AssignmentLti from './model/AssignmentLti';
import AssignmentMfc from './model/AssignmentMfc';
import AssignmentSubmission from './model/AssignmentSubmission';
import AssignmentSubmissionComment from './model/AssignmentSubmissionComment';
import AssignmentSubmissionCommentCreation from './model/AssignmentSubmissionCommentCreation';
import AssignmentSubmissionHistory from './model/AssignmentSubmissionHistory';
import AssignmentSubmissionHistoryAttachment from './model/AssignmentSubmissionHistoryAttachment';
import AssignmentSubmissionState from './model/AssignmentSubmissionState';
import AssignmentSubmissionUpdate from './model/AssignmentSubmissionUpdate';
import AssignmentSubmissionUpdateComments from './model/AssignmentSubmissionUpdateComments';
import AssignmentType from './model/AssignmentType';
import ClassAttachmentCreation from './model/ClassAttachmentCreation';
import ClassCreation from './model/ClassCreation';
import ClassDetails from './model/ClassDetails';
import ClassDetailsCanvas from './model/ClassDetailsCanvas';
import ClassDetailsClever from './model/ClassDetailsClever';
import ClassDetailsGoogleClassroom from './model/ClassDetailsGoogleClassroom';
import ClassDetailsGoogleDrive from './model/ClassDetailsGoogleDrive';
import ClassDetailsIssues from './model/ClassDetailsIssues';
import ClassDetailsIssuesSyncInner from './model/ClassDetailsIssuesSyncInner';
import ClassDetailsLti from './model/ClassDetailsLti';
import ClassDetailsMfc from './model/ClassDetailsMfc';
import ClassDetailsMicrosoftGraph from './model/ClassDetailsMicrosoftGraph';
import ClassRoles from './model/ClassRoles';
import ClassState from './model/ClassState';
import ClassUpdate from './model/ClassUpdate';
import Collection from './model/Collection';
import CollectionCapabilities from './model/CollectionCapabilities';
import CollectionCreation from './model/CollectionCreation';
import CollectionModification from './model/CollectionModification';
import CollectionPrivacy from './model/CollectionPrivacy';
import CollectionType from './model/CollectionType';
import FlatErrorResponse from './model/FlatErrorResponse';
import FlatLocales from './model/FlatLocales';
import GoogleClassroomCoursework from './model/GoogleClassroomCoursework';
import GoogleClassroomSubmission from './model/GoogleClassroomSubmission';
import Group from './model/Group';
import GroupDetails from './model/GroupDetails';
import GroupType from './model/GroupType';
import LicenseMode from './model/LicenseMode';
import LicenseSources from './model/LicenseSources';
import LmsName from './model/LmsName';
import LtiCredentials from './model/LtiCredentials';
import LtiCredentialsCreation from './model/LtiCredentialsCreation';
import MediaAttachment from './model/MediaAttachment';
import MediaScoreSharingMode from './model/MediaScoreSharingMode';
import MicrosoftGraphAssignment from './model/MicrosoftGraphAssignment';
import MicrosoftGraphSubmission from './model/MicrosoftGraphSubmission';
import OrganizationInvitation from './model/OrganizationInvitation';
import OrganizationInvitationCreation from './model/OrganizationInvitationCreation';
import OrganizationRoles from './model/OrganizationRoles';
import ResourceCollaborator from './model/ResourceCollaborator';
import ResourceCollaboratorCreation from './model/ResourceCollaboratorCreation';
import ResourceRights from './model/ResourceRights';
import ScoreComment from './model/ScoreComment';
import ScoreCommentContext from './model/ScoreCommentContext';
import ScoreCommentCreation from './model/ScoreCommentCreation';
import ScoreCommentUpdate from './model/ScoreCommentUpdate';
import ScoreCommentsCounts from './model/ScoreCommentsCounts';
import ScoreCreation from './model/ScoreCreation';
import ScoreCreationType from './model/ScoreCreationType';
import ScoreDetails from './model/ScoreDetails';
import ScoreFork from './model/ScoreFork';
import ScoreLicense from './model/ScoreLicense';
import ScoreLikesCounts from './model/ScoreLikesCounts';
import ScoreModification from './model/ScoreModification';
import ScorePlaysCounts from './model/ScorePlaysCounts';
import ScorePrivacy from './model/ScorePrivacy';
import ScoreRevision from './model/ScoreRevision';
import ScoreRevisionCreation from './model/ScoreRevisionCreation';
import ScoreRevisionStatistics from './model/ScoreRevisionStatistics';
import ScoreSource from './model/ScoreSource';
import ScoreSummary from './model/ScoreSummary';
import ScoreTrack from './model/ScoreTrack';
import ScoreTrackCreation from './model/ScoreTrackCreation';
import ScoreTrackPoint from './model/ScoreTrackPoint';
import ScoreTrackState from './model/ScoreTrackState';
import ScoreTrackType from './model/ScoreTrackType';
import ScoreTrackUpdate from './model/ScoreTrackUpdate';
import ScoreViewsCounts from './model/ScoreViewsCounts';
import UserAdminUpdate from './model/UserAdminUpdate';
import UserBasics from './model/UserBasics';
import UserCreation from './model/UserCreation';
import UserDetails from './model/UserDetails';
import UserDetailsAdmin from './model/UserDetailsAdmin';
import UserDetailsAdminAllOfLicense from './model/UserDetailsAdminAllOfLicense';
import UserPublic from './model/UserPublic';
import UserPublicSummary from './model/UserPublicSummary';
import AccountApi from './api/AccountApi';
import ClassApi from './api/ClassApi';
import CollectionApi from './api/CollectionApi';
import GroupApi from './api/GroupApi';
import OrganizationApi from './api/OrganizationApi';
import ScoreApi from './api/ScoreApi';
import UserApi from './api/UserApi';


/**
* The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user&#39;s scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating &amp; updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat&#39;s API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FlatApi = require('index'); // See note below*.
* var xxxSvc = new FlatApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FlatApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FlatApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FlatApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.13.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Assignment model constructor.
     * @property {module:model/Assignment}
     */
    Assignment,

    /**
     * The AssignmentCanvas model constructor.
     * @property {module:model/AssignmentCanvas}
     */
    AssignmentCanvas,

    /**
     * The AssignmentCopy model constructor.
     * @property {module:model/AssignmentCopy}
     */
    AssignmentCopy,

    /**
     * The AssignmentCreation model constructor.
     * @property {module:model/AssignmentCreation}
     */
    AssignmentCreation,

    /**
     * The AssignmentCreationGoogleClassroom model constructor.
     * @property {module:model/AssignmentCreationGoogleClassroom}
     */
    AssignmentCreationGoogleClassroom,

    /**
     * The AssignmentCreationMicrosoftGraph model constructor.
     * @property {module:model/AssignmentCreationMicrosoftGraph}
     */
    AssignmentCreationMicrosoftGraph,

    /**
     * The AssignmentLti model constructor.
     * @property {module:model/AssignmentLti}
     */
    AssignmentLti,

    /**
     * The AssignmentMfc model constructor.
     * @property {module:model/AssignmentMfc}
     */
    AssignmentMfc,

    /**
     * The AssignmentSubmission model constructor.
     * @property {module:model/AssignmentSubmission}
     */
    AssignmentSubmission,

    /**
     * The AssignmentSubmissionComment model constructor.
     * @property {module:model/AssignmentSubmissionComment}
     */
    AssignmentSubmissionComment,

    /**
     * The AssignmentSubmissionCommentCreation model constructor.
     * @property {module:model/AssignmentSubmissionCommentCreation}
     */
    AssignmentSubmissionCommentCreation,

    /**
     * The AssignmentSubmissionHistory model constructor.
     * @property {module:model/AssignmentSubmissionHistory}
     */
    AssignmentSubmissionHistory,

    /**
     * The AssignmentSubmissionHistoryAttachment model constructor.
     * @property {module:model/AssignmentSubmissionHistoryAttachment}
     */
    AssignmentSubmissionHistoryAttachment,

    /**
     * The AssignmentSubmissionState model constructor.
     * @property {module:model/AssignmentSubmissionState}
     */
    AssignmentSubmissionState,

    /**
     * The AssignmentSubmissionUpdate model constructor.
     * @property {module:model/AssignmentSubmissionUpdate}
     */
    AssignmentSubmissionUpdate,

    /**
     * The AssignmentSubmissionUpdateComments model constructor.
     * @property {module:model/AssignmentSubmissionUpdateComments}
     */
    AssignmentSubmissionUpdateComments,

    /**
     * The AssignmentType model constructor.
     * @property {module:model/AssignmentType}
     */
    AssignmentType,

    /**
     * The ClassAttachmentCreation model constructor.
     * @property {module:model/ClassAttachmentCreation}
     */
    ClassAttachmentCreation,

    /**
     * The ClassCreation model constructor.
     * @property {module:model/ClassCreation}
     */
    ClassCreation,

    /**
     * The ClassDetails model constructor.
     * @property {module:model/ClassDetails}
     */
    ClassDetails,

    /**
     * The ClassDetailsCanvas model constructor.
     * @property {module:model/ClassDetailsCanvas}
     */
    ClassDetailsCanvas,

    /**
     * The ClassDetailsClever model constructor.
     * @property {module:model/ClassDetailsClever}
     */
    ClassDetailsClever,

    /**
     * The ClassDetailsGoogleClassroom model constructor.
     * @property {module:model/ClassDetailsGoogleClassroom}
     */
    ClassDetailsGoogleClassroom,

    /**
     * The ClassDetailsGoogleDrive model constructor.
     * @property {module:model/ClassDetailsGoogleDrive}
     */
    ClassDetailsGoogleDrive,

    /**
     * The ClassDetailsIssues model constructor.
     * @property {module:model/ClassDetailsIssues}
     */
    ClassDetailsIssues,

    /**
     * The ClassDetailsIssuesSyncInner model constructor.
     * @property {module:model/ClassDetailsIssuesSyncInner}
     */
    ClassDetailsIssuesSyncInner,

    /**
     * The ClassDetailsLti model constructor.
     * @property {module:model/ClassDetailsLti}
     */
    ClassDetailsLti,

    /**
     * The ClassDetailsMfc model constructor.
     * @property {module:model/ClassDetailsMfc}
     */
    ClassDetailsMfc,

    /**
     * The ClassDetailsMicrosoftGraph model constructor.
     * @property {module:model/ClassDetailsMicrosoftGraph}
     */
    ClassDetailsMicrosoftGraph,

    /**
     * The ClassRoles model constructor.
     * @property {module:model/ClassRoles}
     */
    ClassRoles,

    /**
     * The ClassState model constructor.
     * @property {module:model/ClassState}
     */
    ClassState,

    /**
     * The ClassUpdate model constructor.
     * @property {module:model/ClassUpdate}
     */
    ClassUpdate,

    /**
     * The Collection model constructor.
     * @property {module:model/Collection}
     */
    Collection,

    /**
     * The CollectionCapabilities model constructor.
     * @property {module:model/CollectionCapabilities}
     */
    CollectionCapabilities,

    /**
     * The CollectionCreation model constructor.
     * @property {module:model/CollectionCreation}
     */
    CollectionCreation,

    /**
     * The CollectionModification model constructor.
     * @property {module:model/CollectionModification}
     */
    CollectionModification,

    /**
     * The CollectionPrivacy model constructor.
     * @property {module:model/CollectionPrivacy}
     */
    CollectionPrivacy,

    /**
     * The CollectionType model constructor.
     * @property {module:model/CollectionType}
     */
    CollectionType,

    /**
     * The FlatErrorResponse model constructor.
     * @property {module:model/FlatErrorResponse}
     */
    FlatErrorResponse,

    /**
     * The FlatLocales model constructor.
     * @property {module:model/FlatLocales}
     */
    FlatLocales,

    /**
     * The GoogleClassroomCoursework model constructor.
     * @property {module:model/GoogleClassroomCoursework}
     */
    GoogleClassroomCoursework,

    /**
     * The GoogleClassroomSubmission model constructor.
     * @property {module:model/GoogleClassroomSubmission}
     */
    GoogleClassroomSubmission,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The GroupDetails model constructor.
     * @property {module:model/GroupDetails}
     */
    GroupDetails,

    /**
     * The GroupType model constructor.
     * @property {module:model/GroupType}
     */
    GroupType,

    /**
     * The LicenseMode model constructor.
     * @property {module:model/LicenseMode}
     */
    LicenseMode,

    /**
     * The LicenseSources model constructor.
     * @property {module:model/LicenseSources}
     */
    LicenseSources,

    /**
     * The LmsName model constructor.
     * @property {module:model/LmsName}
     */
    LmsName,

    /**
     * The LtiCredentials model constructor.
     * @property {module:model/LtiCredentials}
     */
    LtiCredentials,

    /**
     * The LtiCredentialsCreation model constructor.
     * @property {module:model/LtiCredentialsCreation}
     */
    LtiCredentialsCreation,

    /**
     * The MediaAttachment model constructor.
     * @property {module:model/MediaAttachment}
     */
    MediaAttachment,

    /**
     * The MediaScoreSharingMode model constructor.
     * @property {module:model/MediaScoreSharingMode}
     */
    MediaScoreSharingMode,

    /**
     * The MicrosoftGraphAssignment model constructor.
     * @property {module:model/MicrosoftGraphAssignment}
     */
    MicrosoftGraphAssignment,

    /**
     * The MicrosoftGraphSubmission model constructor.
     * @property {module:model/MicrosoftGraphSubmission}
     */
    MicrosoftGraphSubmission,

    /**
     * The OrganizationInvitation model constructor.
     * @property {module:model/OrganizationInvitation}
     */
    OrganizationInvitation,

    /**
     * The OrganizationInvitationCreation model constructor.
     * @property {module:model/OrganizationInvitationCreation}
     */
    OrganizationInvitationCreation,

    /**
     * The OrganizationRoles model constructor.
     * @property {module:model/OrganizationRoles}
     */
    OrganizationRoles,

    /**
     * The ResourceCollaborator model constructor.
     * @property {module:model/ResourceCollaborator}
     */
    ResourceCollaborator,

    /**
     * The ResourceCollaboratorCreation model constructor.
     * @property {module:model/ResourceCollaboratorCreation}
     */
    ResourceCollaboratorCreation,

    /**
     * The ResourceRights model constructor.
     * @property {module:model/ResourceRights}
     */
    ResourceRights,

    /**
     * The ScoreComment model constructor.
     * @property {module:model/ScoreComment}
     */
    ScoreComment,

    /**
     * The ScoreCommentContext model constructor.
     * @property {module:model/ScoreCommentContext}
     */
    ScoreCommentContext,

    /**
     * The ScoreCommentCreation model constructor.
     * @property {module:model/ScoreCommentCreation}
     */
    ScoreCommentCreation,

    /**
     * The ScoreCommentUpdate model constructor.
     * @property {module:model/ScoreCommentUpdate}
     */
    ScoreCommentUpdate,

    /**
     * The ScoreCommentsCounts model constructor.
     * @property {module:model/ScoreCommentsCounts}
     */
    ScoreCommentsCounts,

    /**
     * The ScoreCreation model constructor.
     * @property {module:model/ScoreCreation}
     */
    ScoreCreation,

    /**
     * The ScoreCreationType model constructor.
     * @property {module:model/ScoreCreationType}
     */
    ScoreCreationType,

    /**
     * The ScoreDetails model constructor.
     * @property {module:model/ScoreDetails}
     */
    ScoreDetails,

    /**
     * The ScoreFork model constructor.
     * @property {module:model/ScoreFork}
     */
    ScoreFork,

    /**
     * The ScoreLicense model constructor.
     * @property {module:model/ScoreLicense}
     */
    ScoreLicense,

    /**
     * The ScoreLikesCounts model constructor.
     * @property {module:model/ScoreLikesCounts}
     */
    ScoreLikesCounts,

    /**
     * The ScoreModification model constructor.
     * @property {module:model/ScoreModification}
     */
    ScoreModification,

    /**
     * The ScorePlaysCounts model constructor.
     * @property {module:model/ScorePlaysCounts}
     */
    ScorePlaysCounts,

    /**
     * The ScorePrivacy model constructor.
     * @property {module:model/ScorePrivacy}
     */
    ScorePrivacy,

    /**
     * The ScoreRevision model constructor.
     * @property {module:model/ScoreRevision}
     */
    ScoreRevision,

    /**
     * The ScoreRevisionCreation model constructor.
     * @property {module:model/ScoreRevisionCreation}
     */
    ScoreRevisionCreation,

    /**
     * The ScoreRevisionStatistics model constructor.
     * @property {module:model/ScoreRevisionStatistics}
     */
    ScoreRevisionStatistics,

    /**
     * The ScoreSource model constructor.
     * @property {module:model/ScoreSource}
     */
    ScoreSource,

    /**
     * The ScoreSummary model constructor.
     * @property {module:model/ScoreSummary}
     */
    ScoreSummary,

    /**
     * The ScoreTrack model constructor.
     * @property {module:model/ScoreTrack}
     */
    ScoreTrack,

    /**
     * The ScoreTrackCreation model constructor.
     * @property {module:model/ScoreTrackCreation}
     */
    ScoreTrackCreation,

    /**
     * The ScoreTrackPoint model constructor.
     * @property {module:model/ScoreTrackPoint}
     */
    ScoreTrackPoint,

    /**
     * The ScoreTrackState model constructor.
     * @property {module:model/ScoreTrackState}
     */
    ScoreTrackState,

    /**
     * The ScoreTrackType model constructor.
     * @property {module:model/ScoreTrackType}
     */
    ScoreTrackType,

    /**
     * The ScoreTrackUpdate model constructor.
     * @property {module:model/ScoreTrackUpdate}
     */
    ScoreTrackUpdate,

    /**
     * The ScoreViewsCounts model constructor.
     * @property {module:model/ScoreViewsCounts}
     */
    ScoreViewsCounts,

    /**
     * The UserAdminUpdate model constructor.
     * @property {module:model/UserAdminUpdate}
     */
    UserAdminUpdate,

    /**
     * The UserBasics model constructor.
     * @property {module:model/UserBasics}
     */
    UserBasics,

    /**
     * The UserCreation model constructor.
     * @property {module:model/UserCreation}
     */
    UserCreation,

    /**
     * The UserDetails model constructor.
     * @property {module:model/UserDetails}
     */
    UserDetails,

    /**
     * The UserDetailsAdmin model constructor.
     * @property {module:model/UserDetailsAdmin}
     */
    UserDetailsAdmin,

    /**
     * The UserDetailsAdminAllOfLicense model constructor.
     * @property {module:model/UserDetailsAdminAllOfLicense}
     */
    UserDetailsAdminAllOfLicense,

    /**
     * The UserPublic model constructor.
     * @property {module:model/UserPublic}
     */
    UserPublic,

    /**
     * The UserPublicSummary model constructor.
     * @property {module:model/UserPublicSummary}
     */
    UserPublicSummary,

    /**
    * The AccountApi service constructor.
    * @property {module:api/AccountApi}
    */
    AccountApi,

    /**
    * The ClassApi service constructor.
    * @property {module:api/ClassApi}
    */
    ClassApi,

    /**
    * The CollectionApi service constructor.
    * @property {module:api/CollectionApi}
    */
    CollectionApi,

    /**
    * The GroupApi service constructor.
    * @property {module:api/GroupApi}
    */
    GroupApi,

    /**
    * The OrganizationApi service constructor.
    * @property {module:api/OrganizationApi}
    */
    OrganizationApi,

    /**
    * The ScoreApi service constructor.
    * @property {module:api/ScoreApi}
    */
    ScoreApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
