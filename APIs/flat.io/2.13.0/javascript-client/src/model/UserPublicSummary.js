/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClassRoles from './ClassRoles';
import OrganizationRoles from './OrganizationRoles';
import UserBasics from './UserBasics';

/**
 * The UserPublicSummary model module.
 * @module model/UserPublicSummary
 * @version 2.13.0
 */
class UserPublicSummary {
    /**
     * Constructs a new <code>UserPublicSummary</code>.
     * Public User details summary
     * @alias module:model/UserPublicSummary
     * @extends module:model/UserBasics
     * @implements module:model/UserBasics
     */
    constructor() { 
        UserBasics.initialize(this);
        UserPublicSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserPublicSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserPublicSummary} obj Optional instance to populate.
     * @return {module:model/UserPublicSummary} The populated <code>UserPublicSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserPublicSummary();
            UserBasics.constructFromObject(data, obj);
            UserBasics.constructFromObject(data, obj);

            if (data.hasOwnProperty('classRole')) {
                obj['classRole'] = ClassRoles.constructFromObject(data['classRole']);
            }
            if (data.hasOwnProperty('htmlUrl')) {
                obj['htmlUrl'] = ApiClient.convertToType(data['htmlUrl'], 'String');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = ApiClient.convertToType(data['organization'], 'String');
            }
            if (data.hasOwnProperty('organizationRole')) {
                obj['organizationRole'] = OrganizationRoles.constructFromObject(data['organizationRole']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserPublicSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserPublicSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['htmlUrl'] && !(typeof data['htmlUrl'] === 'string' || data['htmlUrl'] instanceof String)) {
            throw new Error("Expected the field `htmlUrl` to be a primitive type in the JSON string but got " + data['htmlUrl']);
        }
        // ensure the json data is a string
        if (data['organization'] && !(typeof data['organization'] === 'string' || data['organization'] instanceof String)) {
            throw new Error("Expected the field `organization` to be a primitive type in the JSON string but got " + data['organization']);
        }

        return true;
    }


}



/**
 * @member {module:model/ClassRoles} classRole
 */
UserPublicSummary.prototype['classRole'] = undefined;

/**
 * Link to user profile (for Indiv. users only)
 * @member {String} htmlUrl
 */
UserPublicSummary.prototype['htmlUrl'] = undefined;

/**
 * Organization ID (for Edu users only)
 * @member {String} organization
 */
UserPublicSummary.prototype['organization'] = undefined;

/**
 * @member {module:model/OrganizationRoles} organizationRole
 */
UserPublicSummary.prototype['organizationRole'] = undefined;


// Implement UserBasics interface:
/**
 * Firstname of the user (for education users)
 * @member {String} firstname
 */
UserBasics.prototype['firstname'] = undefined;
/**
 * The user unique identifier
 * @member {String} id
 */
UserBasics.prototype['id'] = undefined;
/**
 * Will be 'true' if user is part of the Flat Team
 * @member {Boolean} isFlatTeam
 */
UserBasics.prototype['isFlatTeam'] = undefined;
/**
 * User license status. 'true' if user is an individual Power user
 * @member {Boolean} isPowerUser
 */
UserBasics.prototype['isPowerUser'] = undefined;
/**
 * Lastname of the user (for education users)
 * @member {String} lastname
 */
UserBasics.prototype['lastname'] = undefined;
/**
 * A displayable name for the user (for consumer users)
 * @member {String} name
 */
UserBasics.prototype['name'] = undefined;
/**
 * The URL of the picture to display
 * @member {String} picture
 */
UserBasics.prototype['picture'] = undefined;
/**
 * The name that can be directly printed (name, firstname & lastname, or username)
 * @member {String} printableName
 */
UserBasics.prototype['printableName'] = undefined;
/**
 * The type of user account
 * @member {module:model/UserBasics.TypeEnum} type
 */
UserBasics.prototype['type'] = undefined;
/**
 * The user name (unique for the organization)
 * @member {String} username
 */
UserBasics.prototype['username'] = undefined;




export default UserPublicSummary;

