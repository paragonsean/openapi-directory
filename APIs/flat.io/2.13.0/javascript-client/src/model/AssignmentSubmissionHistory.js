/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssignmentSubmissionHistoryAttachment from './AssignmentSubmissionHistoryAttachment';
import AssignmentSubmissionState from './AssignmentSubmissionState';

/**
 * The AssignmentSubmissionHistory model module.
 * @module model/AssignmentSubmissionHistory
 * @version 2.13.0
 */
class AssignmentSubmissionHistory {
    /**
     * Constructs a new <code>AssignmentSubmissionHistory</code>.
     * History item of the submission
     * @alias module:model/AssignmentSubmissionHistory
     */
    constructor() { 
        
        AssignmentSubmissionHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssignmentSubmissionHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssignmentSubmissionHistory} obj Optional instance to populate.
     * @return {module:model/AssignmentSubmissionHistory} The populated <code>AssignmentSubmissionHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssignmentSubmissionHistory();

            if (data.hasOwnProperty('attachment')) {
                obj['attachment'] = AssignmentSubmissionHistoryAttachment.constructFromObject(data['attachment']);
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('draftGrade')) {
                obj['draftGrade'] = ApiClient.convertToType(data['draftGrade'], 'Number');
            }
            if (data.hasOwnProperty('grade')) {
                obj['grade'] = ApiClient.convertToType(data['grade'], 'Number');
            }
            if (data.hasOwnProperty('maxPoints')) {
                obj['maxPoints'] = ApiClient.convertToType(data['maxPoints'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = AssignmentSubmissionState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssignmentSubmissionHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssignmentSubmissionHistory</code>.
     */
    static validateJSON(data) {
        // validate the optional field `attachment`
        if (data['attachment']) { // data not null
          AssignmentSubmissionHistoryAttachment.validateJSON(data['attachment']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['users'])) {
            throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
        }

        return true;
    }


}



/**
 * @member {module:model/AssignmentSubmissionHistoryAttachment} attachment
 */
AssignmentSubmissionHistory.prototype['attachment'] = undefined;

/**
 * The date when the submission was changed
 * @member {Date} date
 */
AssignmentSubmissionHistory.prototype['date'] = undefined;

/**
 * The numerator of the grade at this time in the submission grade history
 * @member {Number} draftGrade
 */
AssignmentSubmissionHistory.prototype['draftGrade'] = undefined;

/**
 * The numerator of the grade at this time in the submission grade history
 * @member {Number} grade
 */
AssignmentSubmissionHistory.prototype['grade'] = undefined;

/**
 * The denominator of the grade at this time in the submission grade history
 * @member {Number} maxPoints
 */
AssignmentSubmissionHistory.prototype['maxPoints'] = undefined;

/**
 * @member {module:model/AssignmentSubmissionState} state
 */
AssignmentSubmissionHistory.prototype['state'] = undefined;

/**
 * The user(s) unique identifier(s) who made the change
 * @member {Array.<String>} users
 */
AssignmentSubmissionHistory.prototype['users'] = undefined;






export default AssignmentSubmissionHistory;

