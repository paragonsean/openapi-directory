/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CollectionCapabilities model module.
 * @module model/CollectionCapabilities
 * @version 2.13.0
 */
class CollectionCapabilities {
    /**
     * Constructs a new <code>CollectionCapabilities</code>.
     * Capabilities the current user has on this collection. Each capability corresponds to a fine-grained action that a user may take.
     * @alias module:model/CollectionCapabilities
     */
    constructor() { 
        
        CollectionCapabilities.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CollectionCapabilities</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CollectionCapabilities} obj Optional instance to populate.
     * @return {module:model/CollectionCapabilities} The populated <code>CollectionCapabilities</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CollectionCapabilities();

            if (data.hasOwnProperty('canAddScores')) {
                obj['canAddScores'] = ApiClient.convertToType(data['canAddScores'], 'Boolean');
            }
            if (data.hasOwnProperty('canDelete')) {
                obj['canDelete'] = ApiClient.convertToType(data['canDelete'], 'Boolean');
            }
            if (data.hasOwnProperty('canDeleteScores')) {
                obj['canDeleteScores'] = ApiClient.convertToType(data['canDeleteScores'], 'Boolean');
            }
            if (data.hasOwnProperty('canEdit')) {
                obj['canEdit'] = ApiClient.convertToType(data['canEdit'], 'Boolean');
            }
            if (data.hasOwnProperty('canShare')) {
                obj['canShare'] = ApiClient.convertToType(data['canShare'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CollectionCapabilities</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CollectionCapabilities</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Whether the current user can add scores to the collection  If this collection has the `type` `trash`, this property will be set to `false`. Use `DELETE /v2/scores/{score}` to trash a score. 
 * @member {Boolean} canAddScores
 */
CollectionCapabilities.prototype['canAddScores'] = undefined;

/**
 * Whether the current user can delete the collection 
 * @member {Boolean} canDelete
 */
CollectionCapabilities.prototype['canDelete'] = undefined;

/**
 * Whether the current user can delete scores from the collection  If this collection has the `type` `trash`, this property will be set to `false`. Use `POST /v2/scores/{score}/untrash` to restore a score. 
 * @member {Boolean} canDeleteScores
 */
CollectionCapabilities.prototype['canDeleteScores'] = undefined;

/**
 * Whether the current user can modify the metadata for the collection 
 * @member {Boolean} canEdit
 */
CollectionCapabilities.prototype['canEdit'] = undefined;

/**
 * Whether the current user can modify the sharing settings for the collection 
 * @member {Boolean} canShare
 */
CollectionCapabilities.prototype['canShare'] = undefined;






export default CollectionCapabilities;

