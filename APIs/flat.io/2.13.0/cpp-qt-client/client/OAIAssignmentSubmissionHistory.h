/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssignmentSubmissionHistory.h
 *
 * History item of the submission
 */

#ifndef OAIAssignmentSubmissionHistory_H
#define OAIAssignmentSubmissionHistory_H

#include <QJsonObject>

#include "OAIAssignmentSubmissionHistory_attachment.h"
#include "OAIAssignmentSubmissionState.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssignmentSubmissionHistory_attachment;

class OAIAssignmentSubmissionHistory : public OAIObject {
public:
    OAIAssignmentSubmissionHistory();
    OAIAssignmentSubmissionHistory(QString json);
    ~OAIAssignmentSubmissionHistory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAssignmentSubmissionHistory_attachment getAttachment() const;
    void setAttachment(const OAIAssignmentSubmissionHistory_attachment &attachment);
    bool is_attachment_Set() const;
    bool is_attachment_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    double getDraftGrade() const;
    void setDraftGrade(const double &draft_grade);
    bool is_draft_grade_Set() const;
    bool is_draft_grade_Valid() const;

    double getGrade() const;
    void setGrade(const double &grade);
    bool is_grade_Set() const;
    bool is_grade_Valid() const;

    double getMaxPoints() const;
    void setMaxPoints(const double &max_points);
    bool is_max_points_Set() const;
    bool is_max_points_Valid() const;

    OAIAssignmentSubmissionState getState() const;
    void setState(const OAIAssignmentSubmissionState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<QString> getUsers() const;
    void setUsers(const QList<QString> &users);
    bool is_users_Set() const;
    bool is_users_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAssignmentSubmissionHistory_attachment m_attachment;
    bool m_attachment_isSet;
    bool m_attachment_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    double m_draft_grade;
    bool m_draft_grade_isSet;
    bool m_draft_grade_isValid;

    double m_grade;
    bool m_grade_isSet;
    bool m_grade_isValid;

    double m_max_points;
    bool m_max_points_isSet;
    bool m_max_points_isValid;

    OAIAssignmentSubmissionState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<QString> m_users;
    bool m_users_isSet;
    bool m_users_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssignmentSubmissionHistory)

#endif // OAIAssignmentSubmissionHistory_H
