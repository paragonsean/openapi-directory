/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClassAttachmentCreation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClassAttachmentCreation::OAIClassAttachmentCreation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClassAttachmentCreation::OAIClassAttachmentCreation() {
    this->initializeModel();
}

OAIClassAttachmentCreation::~OAIClassAttachmentCreation() {}

void OAIClassAttachmentCreation::initializeModel() {

    m_google_drive_file_id_isSet = false;
    m_google_drive_file_id_isValid = false;

    m_lock_score_template_isSet = false;
    m_lock_score_template_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;

    m_sharing_mode_isSet = false;
    m_sharing_mode_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_worksheet_isSet = false;
    m_worksheet_isValid = false;
}

void OAIClassAttachmentCreation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClassAttachmentCreation::fromJsonObject(QJsonObject json) {

    m_google_drive_file_id_isValid = ::OpenAPI::fromJsonValue(m_google_drive_file_id, json[QString("googleDriveFileId")]);
    m_google_drive_file_id_isSet = !json[QString("googleDriveFileId")].isNull() && m_google_drive_file_id_isValid;

    m_lock_score_template_isValid = ::OpenAPI::fromJsonValue(m_lock_score_template, json[QString("lockScoreTemplate")]);
    m_lock_score_template_isSet = !json[QString("lockScoreTemplate")].isNull() && m_lock_score_template_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;

    m_sharing_mode_isValid = ::OpenAPI::fromJsonValue(m_sharing_mode, json[QString("sharingMode")]);
    m_sharing_mode_isSet = !json[QString("sharingMode")].isNull() && m_sharing_mode_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_worksheet_isValid = ::OpenAPI::fromJsonValue(m_worksheet, json[QString("worksheet")]);
    m_worksheet_isSet = !json[QString("worksheet")].isNull() && m_worksheet_isValid;
}

QString OAIClassAttachmentCreation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClassAttachmentCreation::asJsonObject() const {
    QJsonObject obj;
    if (m_google_drive_file_id_isSet) {
        obj.insert(QString("googleDriveFileId"), ::OpenAPI::toJsonValue(m_google_drive_file_id));
    }
    if (m_lock_score_template_isSet) {
        obj.insert(QString("lockScoreTemplate"), ::OpenAPI::toJsonValue(m_lock_score_template));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    if (m_sharing_mode.isSet()) {
        obj.insert(QString("sharingMode"), ::OpenAPI::toJsonValue(m_sharing_mode));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_worksheet_isSet) {
        obj.insert(QString("worksheet"), ::OpenAPI::toJsonValue(m_worksheet));
    }
    return obj;
}

QString OAIClassAttachmentCreation::getGoogleDriveFileId() const {
    return m_google_drive_file_id;
}
void OAIClassAttachmentCreation::setGoogleDriveFileId(const QString &google_drive_file_id) {
    m_google_drive_file_id = google_drive_file_id;
    m_google_drive_file_id_isSet = true;
}

bool OAIClassAttachmentCreation::is_google_drive_file_id_Set() const{
    return m_google_drive_file_id_isSet;
}

bool OAIClassAttachmentCreation::is_google_drive_file_id_Valid() const{
    return m_google_drive_file_id_isValid;
}

bool OAIClassAttachmentCreation::isLockScoreTemplate() const {
    return m_lock_score_template;
}
void OAIClassAttachmentCreation::setLockScoreTemplate(const bool &lock_score_template) {
    m_lock_score_template = lock_score_template;
    m_lock_score_template_isSet = true;
}

bool OAIClassAttachmentCreation::is_lock_score_template_Set() const{
    return m_lock_score_template_isSet;
}

bool OAIClassAttachmentCreation::is_lock_score_template_Valid() const{
    return m_lock_score_template_isValid;
}

QString OAIClassAttachmentCreation::getScore() const {
    return m_score;
}
void OAIClassAttachmentCreation::setScore(const QString &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIClassAttachmentCreation::is_score_Set() const{
    return m_score_isSet;
}

bool OAIClassAttachmentCreation::is_score_Valid() const{
    return m_score_isValid;
}

OAIMediaScoreSharingMode OAIClassAttachmentCreation::getSharingMode() const {
    return m_sharing_mode;
}
void OAIClassAttachmentCreation::setSharingMode(const OAIMediaScoreSharingMode &sharing_mode) {
    m_sharing_mode = sharing_mode;
    m_sharing_mode_isSet = true;
}

bool OAIClassAttachmentCreation::is_sharing_mode_Set() const{
    return m_sharing_mode_isSet;
}

bool OAIClassAttachmentCreation::is_sharing_mode_Valid() const{
    return m_sharing_mode_isValid;
}

QString OAIClassAttachmentCreation::getType() const {
    return m_type;
}
void OAIClassAttachmentCreation::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIClassAttachmentCreation::is_type_Set() const{
    return m_type_isSet;
}

bool OAIClassAttachmentCreation::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIClassAttachmentCreation::getUrl() const {
    return m_url;
}
void OAIClassAttachmentCreation::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIClassAttachmentCreation::is_url_Set() const{
    return m_url_isSet;
}

bool OAIClassAttachmentCreation::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIClassAttachmentCreation::getWorksheet() const {
    return m_worksheet;
}
void OAIClassAttachmentCreation::setWorksheet(const QString &worksheet) {
    m_worksheet = worksheet;
    m_worksheet_isSet = true;
}

bool OAIClassAttachmentCreation::is_worksheet_Set() const{
    return m_worksheet_isSet;
}

bool OAIClassAttachmentCreation::is_worksheet_Valid() const{
    return m_worksheet_isValid;
}

bool OAIClassAttachmentCreation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_google_drive_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lock_score_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sharing_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_worksheet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClassAttachmentCreation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
