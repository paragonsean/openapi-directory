/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssignmentCreation.h
 *
 * Assignment creation details
 */

#ifndef OAIAssignmentCreation_H
#define OAIAssignmentCreation_H

#include <QJsonObject>

#include "OAIAssignmentCreation_googleClassroom.h"
#include "OAIAssignmentCreation_microsoftGraph.h"
#include "OAIAssignmentType.h"
#include "OAIClassAttachmentCreation.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClassAttachmentCreation;
class OAIAssignmentCreation_googleClassroom;
class OAIAssignmentCreation_microsoftGraph;

class OAIAssignmentCreation : public OAIObject {
public:
    OAIAssignmentCreation();
    OAIAssignmentCreation(QString json);
    ~OAIAssignmentCreation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAssignedStudents() const;
    void setAssignedStudents(const QList<QString> &assigned_students);
    bool is_assigned_students_Set() const;
    bool is_assigned_students_Valid() const;

    QString getAssigneeMode() const;
    void setAssigneeMode(const QString &assignee_mode);
    bool is_assignee_mode_Set() const;
    bool is_assignee_mode_Valid() const;

    QList<OAIClassAttachmentCreation> getAttachments() const;
    void setAttachments(const QList<OAIClassAttachmentCreation> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QString getCover() const;
    void setCover(const QString &cover);
    bool is_cover_Set() const;
    bool is_cover_Valid() const;

    QString getCoverFile() const;
    void setCoverFile(const QString &cover_file);
    bool is_cover_file_Set() const;
    bool is_cover_file_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getDueDate() const;
    void setDueDate(const QDateTime &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    OAIAssignmentCreation_googleClassroom getGoogleClassroom() const;
    void setGoogleClassroom(const OAIAssignmentCreation_googleClassroom &google_classroom);
    bool is_google_classroom_Set() const;
    bool is_google_classroom_Valid() const;

    double getMaxPoints() const;
    void setMaxPoints(const double &max_points);
    bool is_max_points_Set() const;
    bool is_max_points_Valid() const;

    OAIAssignmentCreation_microsoftGraph getMicrosoftGraph() const;
    void setMicrosoftGraph(const OAIAssignmentCreation_microsoftGraph &microsoft_graph);
    bool is_microsoft_graph_Set() const;
    bool is_microsoft_graph_Valid() const;

    double getNbPlaybackAuthorized() const;
    void setNbPlaybackAuthorized(const double &nb_playback_authorized);
    bool is_nb_playback_authorized_Set() const;
    bool is_nb_playback_authorized_Valid() const;

    QDateTime getScheduledDate() const;
    void setScheduledDate(const QDateTime &scheduled_date);
    bool is_scheduled_date_Set() const;
    bool is_scheduled_date_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getToolset() const;
    void setToolset(const QString &toolset);
    bool is_toolset_Set() const;
    bool is_toolset_Valid() const;

    OAIAssignmentType getType() const;
    void setType(const OAIAssignmentType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_assigned_students;
    bool m_assigned_students_isSet;
    bool m_assigned_students_isValid;

    QString m_assignee_mode;
    bool m_assignee_mode_isSet;
    bool m_assignee_mode_isValid;

    QList<OAIClassAttachmentCreation> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QString m_cover;
    bool m_cover_isSet;
    bool m_cover_isValid;

    QString m_cover_file;
    bool m_cover_file_isSet;
    bool m_cover_file_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    OAIAssignmentCreation_googleClassroom m_google_classroom;
    bool m_google_classroom_isSet;
    bool m_google_classroom_isValid;

    double m_max_points;
    bool m_max_points_isSet;
    bool m_max_points_isValid;

    OAIAssignmentCreation_microsoftGraph m_microsoft_graph;
    bool m_microsoft_graph_isSet;
    bool m_microsoft_graph_isValid;

    double m_nb_playback_authorized;
    bool m_nb_playback_authorized_isSet;
    bool m_nb_playback_authorized_isValid;

    QDateTime m_scheduled_date;
    bool m_scheduled_date_isSet;
    bool m_scheduled_date_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_toolset;
    bool m_toolset_isSet;
    bool m_toolset_isValid;

    OAIAssignmentType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssignmentCreation)

#endif // OAIAssignmentCreation_H
