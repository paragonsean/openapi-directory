/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScoreSummary.h
 *
 * A summary of the score details
 */

#ifndef OAIScoreSummary_H
#define OAIScoreSummary_H

#include <QJsonObject>

#include "OAIScorePrivacy.h"
#include "OAIUserPublicSummary.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserPublicSummary;

class OAIScoreSummary : public OAIObject {
public:
    OAIScoreSummary();
    OAIScoreSummary(QString json);
    ~OAIScoreSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIScorePrivacy getPrivacy() const;
    void setPrivacy(const OAIScorePrivacy &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    QString getSharingKey() const;
    void setSharingKey(const QString &sharing_key);
    bool is_sharing_key_Set() const;
    bool is_sharing_key_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAIUserPublicSummary getUser() const;
    void setUser(const OAIUserPublicSummary &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIScorePrivacy m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    QString m_sharing_key;
    bool m_sharing_key_isSet;
    bool m_sharing_key_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAIUserPublicSummary m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScoreSummary)

#endif // OAIScoreSummary_H
