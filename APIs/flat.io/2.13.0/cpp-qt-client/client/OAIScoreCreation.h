/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScoreCreation.h
 *
 * A new created score
 */

#ifndef OAIScoreCreation_H
#define OAIScoreCreation_H

#include <QJsonObject>

#include "OAIScorePrivacy.h"
#include "OAIScoreSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScoreSource;

class OAIScoreCreation : public OAIObject {
public:
    OAIScoreCreation();
    OAIScoreCreation(QString json);
    ~OAIScoreCreation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCollection() const;
    void setCollection(const QString &collection);
    bool is_collection_Set() const;
    bool is_collection_Valid() const;

    QString getData() const;
    void setData(const QString &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getDataEncoding() const;
    void setDataEncoding(const QString &data_encoding);
    bool is_data_encoding_Set() const;
    bool is_data_encoding_Valid() const;

    QString getFilename() const;
    void setFilename(const QString &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    QString getGoogleDriveFolder() const;
    void setGoogleDriveFolder(const QString &google_drive_folder);
    bool is_google_drive_folder_Set() const;
    bool is_google_drive_folder_Valid() const;

    OAIScorePrivacy getPrivacy() const;
    void setPrivacy(const OAIScorePrivacy &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    OAIScoreSource getSource() const;
    void setSource(const OAIScoreSource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_collection;
    bool m_collection_isSet;
    bool m_collection_isValid;

    QString m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_data_encoding;
    bool m_data_encoding_isSet;
    bool m_data_encoding_isValid;

    QString m_filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    QString m_google_drive_folder;
    bool m_google_drive_folder_isSet;
    bool m_google_drive_folder_isValid;

    OAIScorePrivacy m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    OAIScoreSource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScoreCreation)

#endif // OAIScoreCreation_H
