/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssignmentCopy.h
 *
 * Assignment copy operation
 */

#ifndef OAIAssignmentCopy_H
#define OAIAssignmentCopy_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssignmentCopy : public OAIObject {
public:
    OAIAssignmentCopy();
    OAIAssignmentCopy(QString json);
    ~OAIAssignmentCopy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssignment() const;
    void setAssignment(const QString &assignment);
    bool is_assignment_Set() const;
    bool is_assignment_Valid() const;

    QString getClassroom() const;
    void setClassroom(const QString &classroom);
    bool is_classroom_Set() const;
    bool is_classroom_Valid() const;

    QDateTime getScheduledDate() const;
    void setScheduledDate(const QDateTime &scheduled_date);
    bool is_scheduled_date_Set() const;
    bool is_scheduled_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_assignment;
    bool m_assignment_isSet;
    bool m_assignment_isValid;

    QString m_classroom;
    bool m_classroom_isSet;
    bool m_classroom_isValid;

    QDateTime m_scheduled_date;
    bool m_scheduled_date_isSet;
    bool m_scheduled_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssignmentCopy)

#endif // OAIAssignmentCopy_H
