/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrganizationInvitation.h
 *
 * Details of an invitation to join an organization
 */

#ifndef OAIOrganizationInvitation_H
#define OAIOrganizationInvitation_H

#include <QJsonObject>

#include "OAIOrganizationRoles.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrganizationInvitation : public OAIObject {
public:
    OAIOrganizationInvitation();
    OAIOrganizationInvitation(QString json);
    ~OAIOrganizationInvitation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCustomCode() const;
    void setCustomCode(const QString &custom_code);
    bool is_custom_code_Set() const;
    bool is_custom_code_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInvitedBy() const;
    void setInvitedBy(const QString &invited_by);
    bool is_invited_by_Set() const;
    bool is_invited_by_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    OAIOrganizationRoles getOrganizationRole() const;
    void setOrganizationRole(const OAIOrganizationRoles &organization_role);
    bool is_organization_role_Set() const;
    bool is_organization_role_Valid() const;

    QString getUsedBy() const;
    void setUsedBy(const QString &used_by);
    bool is_used_by_Set() const;
    bool is_used_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_custom_code;
    bool m_custom_code_isSet;
    bool m_custom_code_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_invited_by;
    bool m_invited_by_isSet;
    bool m_invited_by_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    OAIOrganizationRoles m_organization_role;
    bool m_organization_role_isSet;
    bool m_organization_role_isValid;

    QString m_used_by;
    bool m_used_by_isSet;
    bool m_used_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrganizationInvitation)

#endif // OAIOrganizationInvitation_H
