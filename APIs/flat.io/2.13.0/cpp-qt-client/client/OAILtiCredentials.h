/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILtiCredentials.h
 *
 * A couple of LTI 1.x OAuth credentials
 */

#ifndef OAILtiCredentials_H
#define OAILtiCredentials_H

#include <QJsonObject>

#include "OAILmsName.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILtiCredentials : public OAIObject {
public:
    OAILtiCredentials();
    OAILtiCredentials(QString json);
    ~OAILtiCredentials() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsumerKey() const;
    void setConsumerKey(const QString &consumer_key);
    bool is_consumer_key_Set() const;
    bool is_consumer_key_Valid() const;

    QString getConsumerSecret() const;
    void setConsumerSecret(const QString &consumer_secret);
    bool is_consumer_secret_Set() const;
    bool is_consumer_secret_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getCreator() const;
    void setCreator(const QString &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUsage() const;
    void setLastUsage(const QDateTime &last_usage);
    bool is_last_usage_Set() const;
    bool is_last_usage_Valid() const;

    OAILmsName getLms() const;
    void setLms(const OAILmsName &lms);
    bool is_lms_Set() const;
    bool is_lms_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_consumer_key;
    bool m_consumer_key_isSet;
    bool m_consumer_key_isValid;

    QString m_consumer_secret;
    bool m_consumer_secret_isSet;
    bool m_consumer_secret_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_usage;
    bool m_last_usage_isSet;
    bool m_last_usage_isValid;

    OAILmsName m_lms;
    bool m_lms_isSet;
    bool m_lms_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILtiCredentials)

#endif // OAILtiCredentials_H
