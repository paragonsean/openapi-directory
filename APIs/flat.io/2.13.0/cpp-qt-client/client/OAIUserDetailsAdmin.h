/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserDetailsAdmin.h
 *
 * User details (view for organization teacher / admin)
 */

#ifndef OAIUserDetailsAdmin_H
#define OAIUserDetailsAdmin_H

#include <QJsonObject>

#include "OAIClassRoles.h"
#include "OAIOrganizationRoles.h"
#include "OAIUserDetailsAdmin_allOf_license.h"
#include "OAIUserPublicSummary.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserDetailsAdmin_allOf_license;

class OAIUserDetailsAdmin : public OAIObject {
public:
    OAIUserDetailsAdmin();
    OAIUserDetailsAdmin(QString json);
    ~OAIUserDetailsAdmin() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFirstname() const;
    void setFirstname(const QString &firstname);
    bool is_firstname_Set() const;
    bool is_firstname_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsFlatTeam() const;
    void setIsFlatTeam(const bool &is_flat_team);
    bool is_is_flat_team_Set() const;
    bool is_is_flat_team_Valid() const;

    bool isIsPowerUser() const;
    void setIsPowerUser(const bool &is_power_user);
    bool is_is_power_user_Set() const;
    bool is_is_power_user_Valid() const;

    QString getLastname() const;
    void setLastname(const QString &lastname);
    bool is_lastname_Set() const;
    bool is_lastname_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPicture() const;
    void setPicture(const QString &picture);
    bool is_picture_Set() const;
    bool is_picture_Valid() const;

    QString getPrintableName() const;
    void setPrintableName(const QString &printable_name);
    bool is_printable_name_Set() const;
    bool is_printable_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    OAIClassRoles getClassRole() const;
    void setClassRole(const OAIClassRoles &class_role);
    bool is_class_role_Set() const;
    bool is_class_role_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    OAIOrganizationRoles getOrganizationRole() const;
    void setOrganizationRole(const OAIOrganizationRoles &organization_role);
    bool is_organization_role_Set() const;
    bool is_organization_role_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QDateTime getLastActivityDate() const;
    void setLastActivityDate(const QDateTime &last_activity_date);
    bool is_last_activity_date_Set() const;
    bool is_last_activity_date_Valid() const;

    OAIUserDetailsAdmin_allOf_license getLicense() const;
    void setLicense(const OAIUserDetailsAdmin_allOf_license &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_firstname;
    bool m_firstname_isSet;
    bool m_firstname_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_flat_team;
    bool m_is_flat_team_isSet;
    bool m_is_flat_team_isValid;

    bool m_is_power_user;
    bool m_is_power_user_isSet;
    bool m_is_power_user_isValid;

    QString m_lastname;
    bool m_lastname_isSet;
    bool m_lastname_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_picture;
    bool m_picture_isSet;
    bool m_picture_isValid;

    QString m_printable_name;
    bool m_printable_name_isSet;
    bool m_printable_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    OAIClassRoles m_class_role;
    bool m_class_role_isSet;
    bool m_class_role_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    OAIOrganizationRoles m_organization_role;
    bool m_organization_role_isSet;
    bool m_organization_role_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QDateTime m_last_activity_date;
    bool m_last_activity_date_isSet;
    bool m_last_activity_date_isValid;

    OAIUserDetailsAdmin_allOf_license m_license;
    bool m_license_isSet;
    bool m_license_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserDetailsAdmin)

#endif // OAIUserDetailsAdmin_H
