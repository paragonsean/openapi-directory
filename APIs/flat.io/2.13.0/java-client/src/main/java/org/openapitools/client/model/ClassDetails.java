/*
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ClassDetailsCanvas;
import org.openapitools.client.model.ClassDetailsClever;
import org.openapitools.client.model.ClassDetailsGoogleClassroom;
import org.openapitools.client.model.ClassDetailsGoogleDrive;
import org.openapitools.client.model.ClassDetailsIssues;
import org.openapitools.client.model.ClassDetailsLti;
import org.openapitools.client.model.ClassDetailsMfc;
import org.openapitools.client.model.ClassDetailsMicrosoftGraph;
import org.openapitools.client.model.ClassState;
import org.openapitools.client.model.GroupDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A classroom
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:29:21.367769-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ClassDetails {
  public static final String SERIALIZED_NAME_ASSIGNMENTS_COUNT = "assignmentsCount";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENTS_COUNT)
  private BigDecimal assignmentsCount;

  public static final String SERIALIZED_NAME_CANVAS = "canvas";
  @SerializedName(SERIALIZED_NAME_CANVAS)
  private ClassDetailsCanvas canvas;

  public static final String SERIALIZED_NAME_CLEVER = "clever";
  @SerializedName(SERIALIZED_NAME_CLEVER)
  private ClassDetailsClever clever;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENROLLMENT_CODE = "enrollmentCode";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_CODE)
  private String enrollmentCode;

  public static final String SERIALIZED_NAME_GOOGLE_CLASSROOM = "googleClassroom";
  @SerializedName(SERIALIZED_NAME_GOOGLE_CLASSROOM)
  private ClassDetailsGoogleClassroom googleClassroom;

  public static final String SERIALIZED_NAME_GOOGLE_DRIVE = "googleDrive";
  @SerializedName(SERIALIZED_NAME_GOOGLE_DRIVE)
  private ClassDetailsGoogleDrive googleDrive;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ISSUES = "issues";
  @SerializedName(SERIALIZED_NAME_ISSUES)
  private ClassDetailsIssues issues;

  public static final String SERIALIZED_NAME_LTI = "lti";
  @SerializedName(SERIALIZED_NAME_LTI)
  private ClassDetailsLti lti;

  public static final String SERIALIZED_NAME_MFC = "mfc";
  @SerializedName(SERIALIZED_NAME_MFC)
  private ClassDetailsMfc mfc;

  public static final String SERIALIZED_NAME_MICROSOFT_GRAPH = "microsoftGraph";
  @SerializedName(SERIALIZED_NAME_MICROSOFT_GRAPH)
  private ClassDetailsMicrosoftGraph microsoftGraph;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_SECTION = "section";
  @SerializedName(SERIALIZED_NAME_SECTION)
  private String section;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private ClassState state;

  public static final String SERIALIZED_NAME_STUDENTS_GROUP = "studentsGroup";
  @SerializedName(SERIALIZED_NAME_STUDENTS_GROUP)
  private GroupDetails studentsGroup;

  public static final String SERIALIZED_NAME_TEACHERS_GROUP = "teachersGroup";
  @SerializedName(SERIALIZED_NAME_TEACHERS_GROUP)
  private GroupDetails teachersGroup;

  public static final String SERIALIZED_NAME_THEME = "theme";
  @SerializedName(SERIALIZED_NAME_THEME)
  private String theme;

  public ClassDetails() {
  }

  public ClassDetails assignmentsCount(BigDecimal assignmentsCount) {
    this.assignmentsCount = assignmentsCount;
    return this;
  }

  /**
   * The number of assignments created in the class
   * @return assignmentsCount
   */
  @javax.annotation.Nullable
  public BigDecimal getAssignmentsCount() {
    return assignmentsCount;
  }

  public void setAssignmentsCount(BigDecimal assignmentsCount) {
    this.assignmentsCount = assignmentsCount;
  }


  public ClassDetails canvas(ClassDetailsCanvas canvas) {
    this.canvas = canvas;
    return this;
  }

  /**
   * Get canvas
   * @return canvas
   */
  @javax.annotation.Nullable
  public ClassDetailsCanvas getCanvas() {
    return canvas;
  }

  public void setCanvas(ClassDetailsCanvas canvas) {
    this.canvas = canvas;
  }


  public ClassDetails clever(ClassDetailsClever clever) {
    this.clever = clever;
    return this;
  }

  /**
   * Get clever
   * @return clever
   */
  @javax.annotation.Nullable
  public ClassDetailsClever getClever() {
    return clever;
  }

  public void setClever(ClassDetailsClever clever) {
    this.clever = clever;
  }


  public ClassDetails creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * The date when the class was create
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public ClassDetails description(String description) {
    this.description = description;
    return this;
  }

  /**
   * An optionnal description for this class
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ClassDetails enrollmentCode(String enrollmentCode) {
    this.enrollmentCode = enrollmentCode;
    return this;
  }

  /**
   * [Teachers only] The enrollment code that can be used by the students to join the class 
   * @return enrollmentCode
   */
  @javax.annotation.Nullable
  public String getEnrollmentCode() {
    return enrollmentCode;
  }

  public void setEnrollmentCode(String enrollmentCode) {
    this.enrollmentCode = enrollmentCode;
  }


  public ClassDetails googleClassroom(ClassDetailsGoogleClassroom googleClassroom) {
    this.googleClassroom = googleClassroom;
    return this;
  }

  /**
   * Get googleClassroom
   * @return googleClassroom
   */
  @javax.annotation.Nullable
  public ClassDetailsGoogleClassroom getGoogleClassroom() {
    return googleClassroom;
  }

  public void setGoogleClassroom(ClassDetailsGoogleClassroom googleClassroom) {
    this.googleClassroom = googleClassroom;
  }


  public ClassDetails googleDrive(ClassDetailsGoogleDrive googleDrive) {
    this.googleDrive = googleDrive;
    return this;
  }

  /**
   * Get googleDrive
   * @return googleDrive
   */
  @javax.annotation.Nullable
  public ClassDetailsGoogleDrive getGoogleDrive() {
    return googleDrive;
  }

  public void setGoogleDrive(ClassDetailsGoogleDrive googleDrive) {
    this.googleDrive = googleDrive;
  }


  public ClassDetails id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the class
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ClassDetails issues(ClassDetailsIssues issues) {
    this.issues = issues;
    return this;
  }

  /**
   * Get issues
   * @return issues
   */
  @javax.annotation.Nullable
  public ClassDetailsIssues getIssues() {
    return issues;
  }

  public void setIssues(ClassDetailsIssues issues) {
    this.issues = issues;
  }


  public ClassDetails lti(ClassDetailsLti lti) {
    this.lti = lti;
    return this;
  }

  /**
   * Get lti
   * @return lti
   */
  @javax.annotation.Nullable
  public ClassDetailsLti getLti() {
    return lti;
  }

  public void setLti(ClassDetailsLti lti) {
    this.lti = lti;
  }


  public ClassDetails mfc(ClassDetailsMfc mfc) {
    this.mfc = mfc;
    return this;
  }

  /**
   * Get mfc
   * @return mfc
   */
  @javax.annotation.Nullable
  public ClassDetailsMfc getMfc() {
    return mfc;
  }

  public void setMfc(ClassDetailsMfc mfc) {
    this.mfc = mfc;
  }


  public ClassDetails microsoftGraph(ClassDetailsMicrosoftGraph microsoftGraph) {
    this.microsoftGraph = microsoftGraph;
    return this;
  }

  /**
   * Get microsoftGraph
   * @return microsoftGraph
   */
  @javax.annotation.Nullable
  public ClassDetailsMicrosoftGraph getMicrosoftGraph() {
    return microsoftGraph;
  }

  public void setMicrosoftGraph(ClassDetailsMicrosoftGraph microsoftGraph) {
    this.microsoftGraph = microsoftGraph;
  }


  public ClassDetails name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the class
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ClassDetails organization(String organization) {
    this.organization = organization;
    return this;
  }

  /**
   * The unique identifier of the Organization owning this class
   * @return organization
   */
  @javax.annotation.Nullable
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }


  public ClassDetails owner(String owner) {
    this.owner = owner;
    return this;
  }

  /**
   * The unique identifier of the User owning this class
   * @return owner
   */
  @javax.annotation.Nullable
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }


  public ClassDetails section(String section) {
    this.section = section;
    return this;
  }

  /**
   * The section of the class
   * @return section
   */
  @javax.annotation.Nullable
  public String getSection() {
    return section;
  }

  public void setSection(String section) {
    this.section = section;
  }


  public ClassDetails state(ClassState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public ClassState getState() {
    return state;
  }

  public void setState(ClassState state) {
    this.state = state;
  }


  public ClassDetails studentsGroup(GroupDetails studentsGroup) {
    this.studentsGroup = studentsGroup;
    return this;
  }

  /**
   * Get studentsGroup
   * @return studentsGroup
   */
  @javax.annotation.Nullable
  public GroupDetails getStudentsGroup() {
    return studentsGroup;
  }

  public void setStudentsGroup(GroupDetails studentsGroup) {
    this.studentsGroup = studentsGroup;
  }


  public ClassDetails teachersGroup(GroupDetails teachersGroup) {
    this.teachersGroup = teachersGroup;
    return this;
  }

  /**
   * Get teachersGroup
   * @return teachersGroup
   */
  @javax.annotation.Nullable
  public GroupDetails getTeachersGroup() {
    return teachersGroup;
  }

  public void setTeachersGroup(GroupDetails teachersGroup) {
    this.teachersGroup = teachersGroup;
  }


  public ClassDetails theme(String theme) {
    this.theme = theme;
    return this;
  }

  /**
   * The theme identifier using in Flat User Interface
   * @return theme
   */
  @javax.annotation.Nullable
  public String getTheme() {
    return theme;
  }

  public void setTheme(String theme) {
    this.theme = theme;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassDetails classDetails = (ClassDetails) o;
    return Objects.equals(this.assignmentsCount, classDetails.assignmentsCount) &&
        Objects.equals(this.canvas, classDetails.canvas) &&
        Objects.equals(this.clever, classDetails.clever) &&
        Objects.equals(this.creationDate, classDetails.creationDate) &&
        Objects.equals(this.description, classDetails.description) &&
        Objects.equals(this.enrollmentCode, classDetails.enrollmentCode) &&
        Objects.equals(this.googleClassroom, classDetails.googleClassroom) &&
        Objects.equals(this.googleDrive, classDetails.googleDrive) &&
        Objects.equals(this.id, classDetails.id) &&
        Objects.equals(this.issues, classDetails.issues) &&
        Objects.equals(this.lti, classDetails.lti) &&
        Objects.equals(this.mfc, classDetails.mfc) &&
        Objects.equals(this.microsoftGraph, classDetails.microsoftGraph) &&
        Objects.equals(this.name, classDetails.name) &&
        Objects.equals(this.organization, classDetails.organization) &&
        Objects.equals(this.owner, classDetails.owner) &&
        Objects.equals(this.section, classDetails.section) &&
        Objects.equals(this.state, classDetails.state) &&
        Objects.equals(this.studentsGroup, classDetails.studentsGroup) &&
        Objects.equals(this.teachersGroup, classDetails.teachersGroup) &&
        Objects.equals(this.theme, classDetails.theme);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignmentsCount, canvas, clever, creationDate, description, enrollmentCode, googleClassroom, googleDrive, id, issues, lti, mfc, microsoftGraph, name, organization, owner, section, state, studentsGroup, teachersGroup, theme);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassDetails {\n");
    sb.append("    assignmentsCount: ").append(toIndentedString(assignmentsCount)).append("\n");
    sb.append("    canvas: ").append(toIndentedString(canvas)).append("\n");
    sb.append("    clever: ").append(toIndentedString(clever)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enrollmentCode: ").append(toIndentedString(enrollmentCode)).append("\n");
    sb.append("    googleClassroom: ").append(toIndentedString(googleClassroom)).append("\n");
    sb.append("    googleDrive: ").append(toIndentedString(googleDrive)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    issues: ").append(toIndentedString(issues)).append("\n");
    sb.append("    lti: ").append(toIndentedString(lti)).append("\n");
    sb.append("    mfc: ").append(toIndentedString(mfc)).append("\n");
    sb.append("    microsoftGraph: ").append(toIndentedString(microsoftGraph)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    section: ").append(toIndentedString(section)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    studentsGroup: ").append(toIndentedString(studentsGroup)).append("\n");
    sb.append("    teachersGroup: ").append(toIndentedString(teachersGroup)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assignmentsCount");
    openapiFields.add("canvas");
    openapiFields.add("clever");
    openapiFields.add("creationDate");
    openapiFields.add("description");
    openapiFields.add("enrollmentCode");
    openapiFields.add("googleClassroom");
    openapiFields.add("googleDrive");
    openapiFields.add("id");
    openapiFields.add("issues");
    openapiFields.add("lti");
    openapiFields.add("mfc");
    openapiFields.add("microsoftGraph");
    openapiFields.add("name");
    openapiFields.add("organization");
    openapiFields.add("owner");
    openapiFields.add("section");
    openapiFields.add("state");
    openapiFields.add("studentsGroup");
    openapiFields.add("teachersGroup");
    openapiFields.add("theme");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClassDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClassDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClassDetails is not found in the empty JSON string", ClassDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClassDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClassDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `canvas`
      if (jsonObj.get("canvas") != null && !jsonObj.get("canvas").isJsonNull()) {
        ClassDetailsCanvas.validateJsonElement(jsonObj.get("canvas"));
      }
      // validate the optional field `clever`
      if (jsonObj.get("clever") != null && !jsonObj.get("clever").isJsonNull()) {
        ClassDetailsClever.validateJsonElement(jsonObj.get("clever"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("enrollmentCode") != null && !jsonObj.get("enrollmentCode").isJsonNull()) && !jsonObj.get("enrollmentCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrollmentCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enrollmentCode").toString()));
      }
      // validate the optional field `googleClassroom`
      if (jsonObj.get("googleClassroom") != null && !jsonObj.get("googleClassroom").isJsonNull()) {
        ClassDetailsGoogleClassroom.validateJsonElement(jsonObj.get("googleClassroom"));
      }
      // validate the optional field `googleDrive`
      if (jsonObj.get("googleDrive") != null && !jsonObj.get("googleDrive").isJsonNull()) {
        ClassDetailsGoogleDrive.validateJsonElement(jsonObj.get("googleDrive"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `issues`
      if (jsonObj.get("issues") != null && !jsonObj.get("issues").isJsonNull()) {
        ClassDetailsIssues.validateJsonElement(jsonObj.get("issues"));
      }
      // validate the optional field `lti`
      if (jsonObj.get("lti") != null && !jsonObj.get("lti").isJsonNull()) {
        ClassDetailsLti.validateJsonElement(jsonObj.get("lti"));
      }
      // validate the optional field `mfc`
      if (jsonObj.get("mfc") != null && !jsonObj.get("mfc").isJsonNull()) {
        ClassDetailsMfc.validateJsonElement(jsonObj.get("mfc"));
      }
      // validate the optional field `microsoftGraph`
      if (jsonObj.get("microsoftGraph") != null && !jsonObj.get("microsoftGraph").isJsonNull()) {
        ClassDetailsMicrosoftGraph.validateJsonElement(jsonObj.get("microsoftGraph"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) && !jsonObj.get("organization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization").toString()));
      }
      if ((jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) && !jsonObj.get("owner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner").toString()));
      }
      if ((jsonObj.get("section") != null && !jsonObj.get("section").isJsonNull()) && !jsonObj.get("section").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `section` to be a primitive type in the JSON string but got `%s`", jsonObj.get("section").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        ClassState.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `studentsGroup`
      if (jsonObj.get("studentsGroup") != null && !jsonObj.get("studentsGroup").isJsonNull()) {
        GroupDetails.validateJsonElement(jsonObj.get("studentsGroup"));
      }
      // validate the optional field `teachersGroup`
      if (jsonObj.get("teachersGroup") != null && !jsonObj.get("teachersGroup").isJsonNull()) {
        GroupDetails.validateJsonElement(jsonObj.get("teachersGroup"));
      }
      if ((jsonObj.get("theme") != null && !jsonObj.get("theme").isJsonNull()) && !jsonObj.get("theme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `theme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("theme").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClassDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClassDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClassDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClassDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<ClassDetails>() {
           @Override
           public void write(JsonWriter out, ClassDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClassDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClassDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClassDetails
   * @throws IOException if the JSON string is invalid with respect to ClassDetails
   */
  public static ClassDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClassDetails.class);
  }

  /**
   * Convert an instance of ClassDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

