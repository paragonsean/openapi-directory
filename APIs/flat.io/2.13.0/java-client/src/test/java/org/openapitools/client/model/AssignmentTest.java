/*
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AssignmentCanvas;
import org.openapitools.client.model.AssignmentLti;
import org.openapitools.client.model.AssignmentMfc;
import org.openapitools.client.model.AssignmentSubmission;
import org.openapitools.client.model.AssignmentType;
import org.openapitools.client.model.GoogleClassroomCoursework;
import org.openapitools.client.model.MediaAttachment;
import org.openapitools.client.model.MicrosoftGraphAssignment;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assignment
 */
public class AssignmentTest {
    private final Assignment model = new Assignment();

    /**
     * Model tests for Assignment
     */
    @Test
    public void testAssignment() {
        // TODO: test Assignment
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'canvas'
     */
    @Test
    public void canvasTest() {
        // TODO: test canvas
    }

    /**
     * Test the property 'classroom'
     */
    @Test
    public void classroomTest() {
        // TODO: test classroom
    }

    /**
     * Test the property 'cover'
     */
    @Test
    public void coverTest() {
        // TODO: test cover
    }

    /**
     * Test the property 'coverFile'
     */
    @Test
    public void coverFileTest() {
        // TODO: test coverFile
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'creator'
     */
    @Test
    public void creatorTest() {
        // TODO: test creator
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'dueDate'
     */
    @Test
    public void dueDateTest() {
        // TODO: test dueDate
    }

    /**
     * Test the property 'googleClassroom'
     */
    @Test
    public void googleClassroomTest() {
        // TODO: test googleClassroom
    }

    /**
     * Test the property 'lti'
     */
    @Test
    public void ltiTest() {
        // TODO: test lti
    }

    /**
     * Test the property 'maxPoints'
     */
    @Test
    public void maxPointsTest() {
        // TODO: test maxPoints
    }

    /**
     * Test the property 'mfc'
     */
    @Test
    public void mfcTest() {
        // TODO: test mfc
    }

    /**
     * Test the property 'microsoftGraph'
     */
    @Test
    public void microsoftGraphTest() {
        // TODO: test microsoftGraph
    }

    /**
     * Test the property 'scheduledDate'
     */
    @Test
    public void scheduledDateTest() {
        // TODO: test scheduledDate
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'submissions'
     */
    @Test
    public void submissionsTest() {
        // TODO: test submissions
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
