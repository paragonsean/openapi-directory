/*
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ResourceCollaborator;
import org.openapitools.client.model.ResourceRights;
import org.openapitools.client.model.ScoreCommentsCounts;
import org.openapitools.client.model.ScoreCreationType;
import org.openapitools.client.model.ScoreLicense;
import org.openapitools.client.model.ScoreLikesCounts;
import org.openapitools.client.model.ScorePlaysCounts;
import org.openapitools.client.model.ScorePrivacy;
import org.openapitools.client.model.ScoreViewsCounts;
import org.openapitools.client.model.UserPublicSummary;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ScoreDetails
 */
public class ScoreDetailsTest {
    private final ScoreDetails model = new ScoreDetails();

    /**
     * Model tests for ScoreDetails
     */
    @Test
    public void testScoreDetails() {
        // TODO: test ScoreDetails
    }

    /**
     * Test the property 'htmlUrl'
     */
    @Test
    public void htmlUrlTest() {
        // TODO: test htmlUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'privacy'
     */
    @Test
    public void privacyTest() {
        // TODO: test privacy
    }

    /**
     * Test the property 'sharingKey'
     */
    @Test
    public void sharingKeyTest() {
        // TODO: test sharingKey
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'arranger'
     */
    @Test
    public void arrangerTest() {
        // TODO: test arranger
    }

    /**
     * Test the property 'collaborators'
     */
    @Test
    public void collaboratorsTest() {
        // TODO: test collaborators
    }

    /**
     * Test the property 'collections'
     */
    @Test
    public void collectionsTest() {
        // TODO: test collections
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'composer'
     */
    @Test
    public void composerTest() {
        // TODO: test composer
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'creationType'
     */
    @Test
    public void creationTypeTest() {
        // TODO: test creationType
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'durationTime'
     */
    @Test
    public void durationTimeTest() {
        // TODO: test durationTime
    }

    /**
     * Test the property 'googleDriveFileId'
     */
    @Test
    public void googleDriveFileIdTest() {
        // TODO: test googleDriveFileId
    }

    /**
     * Test the property 'instruments'
     */
    @Test
    public void instrumentsTest() {
        // TODO: test instruments
    }

    /**
     * Test the property 'license'
     */
    @Test
    public void licenseTest() {
        // TODO: test license
    }

    /**
     * Test the property 'licenseText'
     */
    @Test
    public void licenseTextTest() {
        // TODO: test licenseText
    }

    /**
     * Test the property 'likes'
     */
    @Test
    public void likesTest() {
        // TODO: test likes
    }

    /**
     * Test the property 'lyricist'
     */
    @Test
    public void lyricistTest() {
        // TODO: test lyricist
    }

    /**
     * Test the property 'mainTempoQpm'
     */
    @Test
    public void mainTempoQpmTest() {
        // TODO: test mainTempoQpm
    }

    /**
     * Test the property 'modificationDate'
     */
    @Test
    public void modificationDateTest() {
        // TODO: test modificationDate
    }

    /**
     * Test the property 'numberMeasures'
     */
    @Test
    public void numberMeasuresTest() {
        // TODO: test numberMeasures
    }

    /**
     * Test the property 'organization'
     */
    @Test
    public void organizationTest() {
        // TODO: test organization
    }

    /**
     * Test the property 'parentScore'
     */
    @Test
    public void parentScoreTest() {
        // TODO: test parentScore
    }

    /**
     * Test the property 'plays'
     */
    @Test
    public void playsTest() {
        // TODO: test plays
    }

    /**
     * Test the property 'publicationDate'
     */
    @Test
    public void publicationDateTest() {
        // TODO: test publicationDate
    }

    /**
     * Test the property 'rights'
     */
    @Test
    public void rightsTest() {
        // TODO: test rights
    }

    /**
     * Test the property 'samples'
     */
    @Test
    public void samplesTest() {
        // TODO: test samples
    }

    /**
     * Test the property 'subtitle'
     */
    @Test
    public void subtitleTest() {
        // TODO: test subtitle
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'views'
     */
    @Test
    public void viewsTest() {
        // TODO: test views
    }

}
