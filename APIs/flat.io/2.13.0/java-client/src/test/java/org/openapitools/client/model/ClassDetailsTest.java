/*
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML, MIDI, Guitar Pro (GP3, GP4, GP5, GPX, GP), PowerTab, TuxGuitar and MuseScore files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and introduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ClassDetailsCanvas;
import org.openapitools.client.model.ClassDetailsClever;
import org.openapitools.client.model.ClassDetailsGoogleClassroom;
import org.openapitools.client.model.ClassDetailsGoogleDrive;
import org.openapitools.client.model.ClassDetailsIssues;
import org.openapitools.client.model.ClassDetailsLti;
import org.openapitools.client.model.ClassDetailsMfc;
import org.openapitools.client.model.ClassDetailsMicrosoftGraph;
import org.openapitools.client.model.ClassState;
import org.openapitools.client.model.GroupDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ClassDetails
 */
public class ClassDetailsTest {
    private final ClassDetails model = new ClassDetails();

    /**
     * Model tests for ClassDetails
     */
    @Test
    public void testClassDetails() {
        // TODO: test ClassDetails
    }

    /**
     * Test the property 'assignmentsCount'
     */
    @Test
    public void assignmentsCountTest() {
        // TODO: test assignmentsCount
    }

    /**
     * Test the property 'canvas'
     */
    @Test
    public void canvasTest() {
        // TODO: test canvas
    }

    /**
     * Test the property 'clever'
     */
    @Test
    public void cleverTest() {
        // TODO: test clever
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'enrollmentCode'
     */
    @Test
    public void enrollmentCodeTest() {
        // TODO: test enrollmentCode
    }

    /**
     * Test the property 'googleClassroom'
     */
    @Test
    public void googleClassroomTest() {
        // TODO: test googleClassroom
    }

    /**
     * Test the property 'googleDrive'
     */
    @Test
    public void googleDriveTest() {
        // TODO: test googleDrive
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'issues'
     */
    @Test
    public void issuesTest() {
        // TODO: test issues
    }

    /**
     * Test the property 'lti'
     */
    @Test
    public void ltiTest() {
        // TODO: test lti
    }

    /**
     * Test the property 'mfc'
     */
    @Test
    public void mfcTest() {
        // TODO: test mfc
    }

    /**
     * Test the property 'microsoftGraph'
     */
    @Test
    public void microsoftGraphTest() {
        // TODO: test microsoftGraph
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'organization'
     */
    @Test
    public void organizationTest() {
        // TODO: test organization
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'section'
     */
    @Test
    public void sectionTest() {
        // TODO: test section
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'studentsGroup'
     */
    @Test
    public void studentsGroupTest() {
        // TODO: test studentsGroup
    }

    /**
     * Test the property 'teachersGroup'
     */
    @Test
    public void teachersGroupTest() {
        // TODO: test teachersGroup
    }

    /**
     * Test the property 'theme'
     */
    @Test
    public void themeTest() {
        // TODO: test theme
    }

}
