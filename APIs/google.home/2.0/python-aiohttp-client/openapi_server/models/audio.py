# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Audio(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, digital: bool=None):
        """Audio - a model defined in OpenAPI

        :param digital: The digital of this Audio.
        """
        self.openapi_types = {
            'digital': bool
        }

        self.attribute_map = {
            'digital': 'digital'
        }

        self._digital = digital

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Audio':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Audio of this Audio.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def digital(self):
        """Gets the digital of this Audio.


        :return: The digital of this Audio.
        :rtype: bool
        """
        return self._digital

    @digital.setter
    def digital(self, digital):
        """Sets the digital of this Audio.


        :param digital: The digital of this Audio.
        :type digital: bool
        """
        if digital is None:
            raise ValueError("Invalid value for `digital`, must not be `None`")

        self._digital = digital
