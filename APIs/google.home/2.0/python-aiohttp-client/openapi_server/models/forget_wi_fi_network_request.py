# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForgetWiFiNetworkRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, wpa_id: int=None):
        """ForgetWiFiNetworkRequest - a model defined in OpenAPI

        :param wpa_id: The wpa_id of this ForgetWiFiNetworkRequest.
        """
        self.openapi_types = {
            'wpa_id': int
        }

        self.attribute_map = {
            'wpa_id': 'wpa_id'
        }

        self._wpa_id = wpa_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForgetWiFiNetworkRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForgetWi-FiNetworkRequest of this ForgetWiFiNetworkRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def wpa_id(self):
        """Gets the wpa_id of this ForgetWiFiNetworkRequest.


        :return: The wpa_id of this ForgetWiFiNetworkRequest.
        :rtype: int
        """
        return self._wpa_id

    @wpa_id.setter
    def wpa_id(self, wpa_id):
        """Sets the wpa_id of this ForgetWiFiNetworkRequest.


        :param wpa_id: The wpa_id of this ForgetWiFiNetworkRequest.
        :type wpa_id: int
        """
        if wpa_id is None:
            raise ValueError("Invalid value for `wpa_id`, must not be `None`")

        self._wpa_id = wpa_id
