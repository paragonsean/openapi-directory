# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HighShelf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gain_db: int=None):
        """HighShelf1 - a model defined in OpenAPI

        :param gain_db: The gain_db of this HighShelf1.
        """
        self.openapi_types = {
            'gain_db': int
        }

        self.attribute_map = {
            'gain_db': 'gain_db'
        }

        self._gain_db = gain_db

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HighShelf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HighShelf1 of this HighShelf1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gain_db(self):
        """Gets the gain_db of this HighShelf1.


        :return: The gain_db of this HighShelf1.
        :rtype: int
        """
        return self._gain_db

    @gain_db.setter
    def gain_db(self, gain_db):
        """Sets the gain_db of this HighShelf1.


        :param gain_db: The gain_db of this HighShelf1.
        :type gain_db: int
        """
        if gain_db is None:
            raise ValueError("Invalid value for `gain_db`, must not be `None`")

        self._gain_db = gain_db
