# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForgetpaireddeviceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bond: bool=None, mac_address: str=None):
        """ForgetpaireddeviceRequest - a model defined in OpenAPI

        :param bond: The bond of this ForgetpaireddeviceRequest.
        :param mac_address: The mac_address of this ForgetpaireddeviceRequest.
        """
        self.openapi_types = {
            'bond': bool,
            'mac_address': str
        }

        self.attribute_map = {
            'bond': 'bond',
            'mac_address': 'mac_address'
        }

        self._bond = bond
        self._mac_address = mac_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForgetpaireddeviceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForgetpaireddeviceRequest of this ForgetpaireddeviceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bond(self):
        """Gets the bond of this ForgetpaireddeviceRequest.


        :return: The bond of this ForgetpaireddeviceRequest.
        :rtype: bool
        """
        return self._bond

    @bond.setter
    def bond(self, bond):
        """Sets the bond of this ForgetpaireddeviceRequest.


        :param bond: The bond of this ForgetpaireddeviceRequest.
        :type bond: bool
        """
        if bond is None:
            raise ValueError("Invalid value for `bond`, must not be `None`")

        self._bond = bond

    @property
    def mac_address(self):
        """Gets the mac_address of this ForgetpaireddeviceRequest.


        :return: The mac_address of this ForgetpaireddeviceRequest.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this ForgetpaireddeviceRequest.


        :param mac_address: The mac_address of this ForgetpaireddeviceRequest.
        :type mac_address: str
        """
        if mac_address is None:
            raise ValueError("Invalid value for `mac_address`, must not be `None`")

        self._mac_address = mac_address
