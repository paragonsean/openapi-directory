# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CheckReadyStatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, play_ready_message: bool=None, user_id: str=None):
        """CheckReadyStatusRequest - a model defined in OpenAPI

        :param play_ready_message: The play_ready_message of this CheckReadyStatusRequest.
        :param user_id: The user_id of this CheckReadyStatusRequest.
        """
        self.openapi_types = {
            'play_ready_message': bool,
            'user_id': str
        }

        self.attribute_map = {
            'play_ready_message': 'play_ready_message',
            'user_id': 'user_id'
        }

        self._play_ready_message = play_ready_message
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckReadyStatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckReadyStatusRequest of this CheckReadyStatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def play_ready_message(self):
        """Gets the play_ready_message of this CheckReadyStatusRequest.


        :return: The play_ready_message of this CheckReadyStatusRequest.
        :rtype: bool
        """
        return self._play_ready_message

    @play_ready_message.setter
    def play_ready_message(self, play_ready_message):
        """Sets the play_ready_message of this CheckReadyStatusRequest.


        :param play_ready_message: The play_ready_message of this CheckReadyStatusRequest.
        :type play_ready_message: bool
        """
        if play_ready_message is None:
            raise ValueError("Invalid value for `play_ready_message`, must not be `None`")

        self._play_ready_message = play_ready_message

    @property
    def user_id(self):
        """Gets the user_id of this CheckReadyStatusRequest.


        :return: The user_id of this CheckReadyStatusRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this CheckReadyStatusRequest.


        :param user_id: The user_id of this CheckReadyStatusRequest.
        :type user_id: str
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")

        self._user_id = user_id
