# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Getcurrentstate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notifications_enabled: bool=None):
        """Getcurrentstate - a model defined in OpenAPI

        :param notifications_enabled: The notifications_enabled of this Getcurrentstate.
        """
        self.openapi_types = {
            'notifications_enabled': bool
        }

        self.attribute_map = {
            'notifications_enabled': 'notifications_enabled'
        }

        self._notifications_enabled = notifications_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Getcurrentstate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Getcurrentstate of this Getcurrentstate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notifications_enabled(self):
        """Gets the notifications_enabled of this Getcurrentstate.


        :return: The notifications_enabled of this Getcurrentstate.
        :rtype: bool
        """
        return self._notifications_enabled

    @notifications_enabled.setter
    def notifications_enabled(self, notifications_enabled):
        """Sets the notifications_enabled of this Getcurrentstate.


        :param notifications_enabled: The notifications_enabled of this Getcurrentstate.
        :type notifications_enabled: bool
        """
        if notifications_enabled is None:
            raise ValueError("Invalid value for `notifications_enabled`, must not be `None`")

        self._notifications_enabled = notifications_enabled
