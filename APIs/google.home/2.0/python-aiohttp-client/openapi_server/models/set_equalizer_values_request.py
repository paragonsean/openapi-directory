# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.high_shelf1 import HighShelf1
from openapi_server.models.low_shelf1 import LowShelf1
from openapi_server import util


class SetEqualizerValuesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, high_shelf: HighShelf1=None, low_shelf: LowShelf1=None):
        """SetEqualizerValuesRequest - a model defined in OpenAPI

        :param high_shelf: The high_shelf of this SetEqualizerValuesRequest.
        :param low_shelf: The low_shelf of this SetEqualizerValuesRequest.
        """
        self.openapi_types = {
            'high_shelf': HighShelf1,
            'low_shelf': LowShelf1
        }

        self.attribute_map = {
            'high_shelf': 'high_shelf',
            'low_shelf': 'low_shelf'
        }

        self._high_shelf = high_shelf
        self._low_shelf = low_shelf

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetEqualizerValuesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetEqualizerValuesRequest of this SetEqualizerValuesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def high_shelf(self):
        """Gets the high_shelf of this SetEqualizerValuesRequest.


        :return: The high_shelf of this SetEqualizerValuesRequest.
        :rtype: HighShelf1
        """
        return self._high_shelf

    @high_shelf.setter
    def high_shelf(self, high_shelf):
        """Sets the high_shelf of this SetEqualizerValuesRequest.


        :param high_shelf: The high_shelf of this SetEqualizerValuesRequest.
        :type high_shelf: HighShelf1
        """
        if high_shelf is None:
            raise ValueError("Invalid value for `high_shelf`, must not be `None`")

        self._high_shelf = high_shelf

    @property
    def low_shelf(self):
        """Gets the low_shelf of this SetEqualizerValuesRequest.


        :return: The low_shelf of this SetEqualizerValuesRequest.
        :rtype: LowShelf1
        """
        return self._low_shelf

    @low_shelf.setter
    def low_shelf(self, low_shelf):
        """Sets the low_shelf of this SetEqualizerValuesRequest.


        :param low_shelf: The low_shelf of this SetEqualizerValuesRequest.
        :type low_shelf: LowShelf1
        """
        if low_shelf is None:
            raise ValueError("Invalid value for `low_shelf`, must not be `None`")

        self._low_shelf = low_shelf
