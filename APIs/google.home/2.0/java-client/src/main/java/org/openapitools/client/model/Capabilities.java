/*
 * Google Home
 * # Google Home Local API This is an unofficial documentation of the local API used by the Home app to communicate with GH devices. [GitHub Repo](https://github.com/rithvikvibhu/GHLocalApi)  [![GitHub stars](https://img.shields.io/github/stars/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/stargazers) [![GitHub license](https://img.shields.io/github/license/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/blob/master/LICENSE.md)  ## Getting Started  Requests must be made over HTTPS, port 8443, so the base URL for these endpoints is: `https://<google-home-ip>:8443/setup/`  Get the IP of Google Home from the Google Home app (Device Settings -> End of the list) or from your router.  GET requests are simple, in the browser kind.   POST requests need to set the header (when there's a body): `content-type: application/json`  ## Authentication  Since June 2019, most requests (with exceptions like `/setup/eureka_info`) need a local authorization token.  There are 3 kinds of tokens involved here:  ### Local Authorization Token This token must be sent in all requests in the header `cast-local-authorization-token`. It is short-lived (~1 day) and may change unexpectedly (with a sync, change in homegraph, etc.) ##### Get this token - With access to an android device, [get this token directly by either method](https://gist.github.com/rithvikvibhu/1a0f4937af957ef6a78453e3be482c1f). - Without a device, or to integrate it with a script, use an access token to get the homegraph and extract the token. To get an access token, read the next section. Check the example section for more info.  ### Access Token This is a standard google oauth2 access token. It is in the form `ya29.***`. This gives access to the Google Home Foyer API. These expire in an hour. Use this to get the homegraph (and then the local authorization token above). ##### Get this token To get this access token, either a Google account username/password or a Google Master Token is needed. More info in the gist. Use the script [from this gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d).  ### Master Token This is in the form `aas_et/_***` and can be used to request access tokens. ##### Get this token The same [script in the gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d) that gets the access token can also get the master token. Needs Google account creds.  ## Example  Here's the whole flow from just a pair of username/password to using the local API.  Prerequisites: - [grpcurl](https://github.com/fullstorydev/grpcurl) - [Proto files](https://drive.google.com/drive/folders/1RvnN3y-G23pd2SWHmfV_7sef8QU5GNF4?usp=sharing) (preserve folder structure)  ### 1. Get an access token with the script - Download get_tokens.py - Fill in username and password ```sh python3 get_tokens.py # Note down the access token printed. ```  ### 2. Use the access token and get home graph - This prints the json and uses jq to parse and filter out the fields deviceName and localAuthToken - This will give a list of all devices and their local auth tokens ```sh ./grpcurl -H 'authorization: Bearer ya29.a0Af****' \\  -import-path /path/to/protos \\  -proto /path/to/protos/google/internal/home/foyer/v1.proto \\  googlehomefoyer-pa.googleapis.com:443 \\  google.internal.home.foyer.v1.StructuresService/GetHomeGraph | jq '.home.devices[] | {deviceName, localAuthToken}' # Note down the local auth token for the device you want. ```  ### 3. Make the call to the local device using the local auth token ```sh curl -H \"cast-local-authorization-token: LOCAL_AUTH_TOKEN\" --verbose --insecure https://192.168.0.18:8443/setup/bluetooth/status ```
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Capabilities
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:31.661536-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Capabilities {
  public static final String SERIALIZED_NAME_AOGH_SUPPORTED = "aogh_supported";
  @SerializedName(SERIALIZED_NAME_AOGH_SUPPORTED)
  private Boolean aoghSupported;

  public static final String SERIALIZED_NAME_ASSISTANT_SUPPORTED = "assistant_supported";
  @SerializedName(SERIALIZED_NAME_ASSISTANT_SUPPORTED)
  private Boolean assistantSupported;

  public static final String SERIALIZED_NAME_AUDIO_HDR_SUPPORTED = "audio_hdr_supported";
  @SerializedName(SERIALIZED_NAME_AUDIO_HDR_SUPPORTED)
  private Boolean audioHdrSupported;

  public static final String SERIALIZED_NAME_AUDIO_SURROUND_MODE_SUPPORTED = "audio_surround_mode_supported";
  @SerializedName(SERIALIZED_NAME_AUDIO_SURROUND_MODE_SUPPORTED)
  private Boolean audioSurroundModeSupported;

  public static final String SERIALIZED_NAME_BLE_SUPPORTED = "ble_supported";
  @SerializedName(SERIALIZED_NAME_BLE_SUPPORTED)
  private Boolean bleSupported;

  public static final String SERIALIZED_NAME_BLUETOOTH_AUDIO_SINK_SUPPORTED = "bluetooth_audio_sink_supported";
  @SerializedName(SERIALIZED_NAME_BLUETOOTH_AUDIO_SINK_SUPPORTED)
  private Boolean bluetoothAudioSinkSupported;

  public static final String SERIALIZED_NAME_BLUETOOTH_AUDIO_SOURCE_SUPPORTED = "bluetooth_audio_source_supported";
  @SerializedName(SERIALIZED_NAME_BLUETOOTH_AUDIO_SOURCE_SUPPORTED)
  private Boolean bluetoothAudioSourceSupported;

  public static final String SERIALIZED_NAME_BLUETOOTH_SUPPORTED = "bluetooth_supported";
  @SerializedName(SERIALIZED_NAME_BLUETOOTH_SUPPORTED)
  private Boolean bluetoothSupported;

  public static final String SERIALIZED_NAME_CLOUDCAST_SUPPORTED = "cloudcast_supported";
  @SerializedName(SERIALIZED_NAME_CLOUDCAST_SUPPORTED)
  private Boolean cloudcastSupported;

  public static final String SERIALIZED_NAME_CONTENT_FILTERS_SUPPORTED = "content_filters_supported";
  @SerializedName(SERIALIZED_NAME_CONTENT_FILTERS_SUPPORTED)
  private Boolean contentFiltersSupported;

  public static final String SERIALIZED_NAME_DISPLAY_SUPPORTED = "display_supported";
  @SerializedName(SERIALIZED_NAME_DISPLAY_SUPPORTED)
  private Boolean displaySupported;

  public static final String SERIALIZED_NAME_FDR_SUPPORTED = "fdr_supported";
  @SerializedName(SERIALIZED_NAME_FDR_SUPPORTED)
  private Boolean fdrSupported;

  public static final String SERIALIZED_NAME_HDMI_PREFER50HZ_SUPPORTED = "hdmi_prefer_50hz_supported";
  @SerializedName(SERIALIZED_NAME_HDMI_PREFER50HZ_SUPPORTED)
  private Boolean hdmiPrefer50hzSupported;

  public static final String SERIALIZED_NAME_HDMI_PREFER_HIGH_FPS_SUPPORTED = "hdmi_prefer_high_fps_supported";
  @SerializedName(SERIALIZED_NAME_HDMI_PREFER_HIGH_FPS_SUPPORTED)
  private Boolean hdmiPreferHighFpsSupported;

  public static final String SERIALIZED_NAME_HOTSPOT_SUPPORTED = "hotspot_supported";
  @SerializedName(SERIALIZED_NAME_HOTSPOT_SUPPORTED)
  private Boolean hotspotSupported;

  public static final String SERIALIZED_NAME_HTTPS_SETUP_SUPPORTED = "https_setup_supported";
  @SerializedName(SERIALIZED_NAME_HTTPS_SETUP_SUPPORTED)
  private Boolean httpsSetupSupported;

  public static final String SERIALIZED_NAME_INPUT_MANAGEMENT_SUPPORTED = "input_management_supported";
  @SerializedName(SERIALIZED_NAME_INPUT_MANAGEMENT_SUPPORTED)
  private Boolean inputManagementSupported;

  public static final String SERIALIZED_NAME_KEEP_HOTSPOT_UNTIL_CONNECTED_SUPPORTED = "keep_hotspot_until_connected_supported";
  @SerializedName(SERIALIZED_NAME_KEEP_HOTSPOT_UNTIL_CONNECTED_SUPPORTED)
  private Boolean keepHotspotUntilConnectedSupported;

  public static final String SERIALIZED_NAME_MULTI_USER_SUPPORTED = "multi_user_supported";
  @SerializedName(SERIALIZED_NAME_MULTI_USER_SUPPORTED)
  private Boolean multiUserSupported;

  public static final String SERIALIZED_NAME_MULTICHANNEL_GROUP_SUPPORTED = "multichannel_group_supported";
  @SerializedName(SERIALIZED_NAME_MULTICHANNEL_GROUP_SUPPORTED)
  private Boolean multichannelGroupSupported;

  public static final String SERIALIZED_NAME_MULTIZONE_SUPPORTED = "multizone_supported";
  @SerializedName(SERIALIZED_NAME_MULTIZONE_SUPPORTED)
  private Boolean multizoneSupported;

  public static final String SERIALIZED_NAME_NIGHT_MODE_SUPPORTED = "night_mode_supported";
  @SerializedName(SERIALIZED_NAME_NIGHT_MODE_SUPPORTED)
  private Boolean nightModeSupported;

  public static final String SERIALIZED_NAME_NIGHT_MODE_SUPPORTED_V2 = "night_mode_supported_v2";
  @SerializedName(SERIALIZED_NAME_NIGHT_MODE_SUPPORTED_V2)
  private Boolean nightModeSupportedV2;

  public static final String SERIALIZED_NAME_OPENCAST_SUPPORTED = "opencast_supported";
  @SerializedName(SERIALIZED_NAME_OPENCAST_SUPPORTED)
  private Boolean opencastSupported;

  public static final String SERIALIZED_NAME_PREVIEW_CHANNEL_SUPPORTED = "preview_channel_supported";
  @SerializedName(SERIALIZED_NAME_PREVIEW_CHANNEL_SUPPORTED)
  private Boolean previewChannelSupported;

  public static final String SERIALIZED_NAME_REBOOT_SUPPORTED = "reboot_supported";
  @SerializedName(SERIALIZED_NAME_REBOOT_SUPPORTED)
  private Boolean rebootSupported;

  public static final String SERIALIZED_NAME_REMOTE_DUCKING_SUPPORTED = "remote_ducking_supported";
  @SerializedName(SERIALIZED_NAME_REMOTE_DUCKING_SUPPORTED)
  private Boolean remoteDuckingSupported;

  public static final String SERIALIZED_NAME_SEPARATE_TTS_VOLUME_SUPPORTED = "separate_tts_volume_supported";
  @SerializedName(SERIALIZED_NAME_SEPARATE_TTS_VOLUME_SUPPORTED)
  private Boolean separateTtsVolumeSupported;

  public static final String SERIALIZED_NAME_SETUP_SUPPORTED = "setup_supported";
  @SerializedName(SERIALIZED_NAME_SETUP_SUPPORTED)
  private Boolean setupSupported;

  public static final String SERIALIZED_NAME_SLEEP_MODE_SUPPORTED = "sleep_mode_supported";
  @SerializedName(SERIALIZED_NAME_SLEEP_MODE_SUPPORTED)
  private Boolean sleepModeSupported;

  public static final String SERIALIZED_NAME_STATS_SUPPORTED = "stats_supported";
  @SerializedName(SERIALIZED_NAME_STATS_SUPPORTED)
  private Boolean statsSupported;

  public static final String SERIALIZED_NAME_SYSTEM_SOUND_EFFECTS_SUPPORTED = "system_sound_effects_supported";
  @SerializedName(SERIALIZED_NAME_SYSTEM_SOUND_EFFECTS_SUPPORTED)
  private Boolean systemSoundEffectsSupported;

  public static final String SERIALIZED_NAME_USER_EQ_SUPPORTED = "user_eq_supported";
  @SerializedName(SERIALIZED_NAME_USER_EQ_SUPPORTED)
  private Boolean userEqSupported;

  public static final String SERIALIZED_NAME_WIFI_AUTO_SAVE_SUPPORTED = "wifi_auto_save_supported";
  @SerializedName(SERIALIZED_NAME_WIFI_AUTO_SAVE_SUPPORTED)
  private Boolean wifiAutoSaveSupported;

  public static final String SERIALIZED_NAME_WIFI_REGULATORY_DOMAIN_LOCKED = "wifi_regulatory_domain_locked";
  @SerializedName(SERIALIZED_NAME_WIFI_REGULATORY_DOMAIN_LOCKED)
  private Boolean wifiRegulatoryDomainLocked;

  public static final String SERIALIZED_NAME_WIFI_SUPPORTED = "wifi_supported";
  @SerializedName(SERIALIZED_NAME_WIFI_SUPPORTED)
  private Boolean wifiSupported;

  public Capabilities() {
  }

  public Capabilities aoghSupported(Boolean aoghSupported) {
    this.aoghSupported = aoghSupported;
    return this;
  }

  /**
   * Get aoghSupported
   * @return aoghSupported
   */
  @javax.annotation.Nonnull
  public Boolean getAoghSupported() {
    return aoghSupported;
  }

  public void setAoghSupported(Boolean aoghSupported) {
    this.aoghSupported = aoghSupported;
  }


  public Capabilities assistantSupported(Boolean assistantSupported) {
    this.assistantSupported = assistantSupported;
    return this;
  }

  /**
   * Get assistantSupported
   * @return assistantSupported
   */
  @javax.annotation.Nonnull
  public Boolean getAssistantSupported() {
    return assistantSupported;
  }

  public void setAssistantSupported(Boolean assistantSupported) {
    this.assistantSupported = assistantSupported;
  }


  public Capabilities audioHdrSupported(Boolean audioHdrSupported) {
    this.audioHdrSupported = audioHdrSupported;
    return this;
  }

  /**
   * Get audioHdrSupported
   * @return audioHdrSupported
   */
  @javax.annotation.Nonnull
  public Boolean getAudioHdrSupported() {
    return audioHdrSupported;
  }

  public void setAudioHdrSupported(Boolean audioHdrSupported) {
    this.audioHdrSupported = audioHdrSupported;
  }


  public Capabilities audioSurroundModeSupported(Boolean audioSurroundModeSupported) {
    this.audioSurroundModeSupported = audioSurroundModeSupported;
    return this;
  }

  /**
   * Get audioSurroundModeSupported
   * @return audioSurroundModeSupported
   */
  @javax.annotation.Nonnull
  public Boolean getAudioSurroundModeSupported() {
    return audioSurroundModeSupported;
  }

  public void setAudioSurroundModeSupported(Boolean audioSurroundModeSupported) {
    this.audioSurroundModeSupported = audioSurroundModeSupported;
  }


  public Capabilities bleSupported(Boolean bleSupported) {
    this.bleSupported = bleSupported;
    return this;
  }

  /**
   * Get bleSupported
   * @return bleSupported
   */
  @javax.annotation.Nonnull
  public Boolean getBleSupported() {
    return bleSupported;
  }

  public void setBleSupported(Boolean bleSupported) {
    this.bleSupported = bleSupported;
  }


  public Capabilities bluetoothAudioSinkSupported(Boolean bluetoothAudioSinkSupported) {
    this.bluetoothAudioSinkSupported = bluetoothAudioSinkSupported;
    return this;
  }

  /**
   * Get bluetoothAudioSinkSupported
   * @return bluetoothAudioSinkSupported
   */
  @javax.annotation.Nonnull
  public Boolean getBluetoothAudioSinkSupported() {
    return bluetoothAudioSinkSupported;
  }

  public void setBluetoothAudioSinkSupported(Boolean bluetoothAudioSinkSupported) {
    this.bluetoothAudioSinkSupported = bluetoothAudioSinkSupported;
  }


  public Capabilities bluetoothAudioSourceSupported(Boolean bluetoothAudioSourceSupported) {
    this.bluetoothAudioSourceSupported = bluetoothAudioSourceSupported;
    return this;
  }

  /**
   * Get bluetoothAudioSourceSupported
   * @return bluetoothAudioSourceSupported
   */
  @javax.annotation.Nonnull
  public Boolean getBluetoothAudioSourceSupported() {
    return bluetoothAudioSourceSupported;
  }

  public void setBluetoothAudioSourceSupported(Boolean bluetoothAudioSourceSupported) {
    this.bluetoothAudioSourceSupported = bluetoothAudioSourceSupported;
  }


  public Capabilities bluetoothSupported(Boolean bluetoothSupported) {
    this.bluetoothSupported = bluetoothSupported;
    return this;
  }

  /**
   * Get bluetoothSupported
   * @return bluetoothSupported
   */
  @javax.annotation.Nonnull
  public Boolean getBluetoothSupported() {
    return bluetoothSupported;
  }

  public void setBluetoothSupported(Boolean bluetoothSupported) {
    this.bluetoothSupported = bluetoothSupported;
  }


  public Capabilities cloudcastSupported(Boolean cloudcastSupported) {
    this.cloudcastSupported = cloudcastSupported;
    return this;
  }

  /**
   * Get cloudcastSupported
   * @return cloudcastSupported
   */
  @javax.annotation.Nonnull
  public Boolean getCloudcastSupported() {
    return cloudcastSupported;
  }

  public void setCloudcastSupported(Boolean cloudcastSupported) {
    this.cloudcastSupported = cloudcastSupported;
  }


  public Capabilities contentFiltersSupported(Boolean contentFiltersSupported) {
    this.contentFiltersSupported = contentFiltersSupported;
    return this;
  }

  /**
   * Get contentFiltersSupported
   * @return contentFiltersSupported
   */
  @javax.annotation.Nonnull
  public Boolean getContentFiltersSupported() {
    return contentFiltersSupported;
  }

  public void setContentFiltersSupported(Boolean contentFiltersSupported) {
    this.contentFiltersSupported = contentFiltersSupported;
  }


  public Capabilities displaySupported(Boolean displaySupported) {
    this.displaySupported = displaySupported;
    return this;
  }

  /**
   * Get displaySupported
   * @return displaySupported
   */
  @javax.annotation.Nonnull
  public Boolean getDisplaySupported() {
    return displaySupported;
  }

  public void setDisplaySupported(Boolean displaySupported) {
    this.displaySupported = displaySupported;
  }


  public Capabilities fdrSupported(Boolean fdrSupported) {
    this.fdrSupported = fdrSupported;
    return this;
  }

  /**
   * Get fdrSupported
   * @return fdrSupported
   */
  @javax.annotation.Nonnull
  public Boolean getFdrSupported() {
    return fdrSupported;
  }

  public void setFdrSupported(Boolean fdrSupported) {
    this.fdrSupported = fdrSupported;
  }


  public Capabilities hdmiPrefer50hzSupported(Boolean hdmiPrefer50hzSupported) {
    this.hdmiPrefer50hzSupported = hdmiPrefer50hzSupported;
    return this;
  }

  /**
   * Get hdmiPrefer50hzSupported
   * @return hdmiPrefer50hzSupported
   */
  @javax.annotation.Nonnull
  public Boolean getHdmiPrefer50hzSupported() {
    return hdmiPrefer50hzSupported;
  }

  public void setHdmiPrefer50hzSupported(Boolean hdmiPrefer50hzSupported) {
    this.hdmiPrefer50hzSupported = hdmiPrefer50hzSupported;
  }


  public Capabilities hdmiPreferHighFpsSupported(Boolean hdmiPreferHighFpsSupported) {
    this.hdmiPreferHighFpsSupported = hdmiPreferHighFpsSupported;
    return this;
  }

  /**
   * Get hdmiPreferHighFpsSupported
   * @return hdmiPreferHighFpsSupported
   */
  @javax.annotation.Nonnull
  public Boolean getHdmiPreferHighFpsSupported() {
    return hdmiPreferHighFpsSupported;
  }

  public void setHdmiPreferHighFpsSupported(Boolean hdmiPreferHighFpsSupported) {
    this.hdmiPreferHighFpsSupported = hdmiPreferHighFpsSupported;
  }


  public Capabilities hotspotSupported(Boolean hotspotSupported) {
    this.hotspotSupported = hotspotSupported;
    return this;
  }

  /**
   * Get hotspotSupported
   * @return hotspotSupported
   */
  @javax.annotation.Nonnull
  public Boolean getHotspotSupported() {
    return hotspotSupported;
  }

  public void setHotspotSupported(Boolean hotspotSupported) {
    this.hotspotSupported = hotspotSupported;
  }


  public Capabilities httpsSetupSupported(Boolean httpsSetupSupported) {
    this.httpsSetupSupported = httpsSetupSupported;
    return this;
  }

  /**
   * Get httpsSetupSupported
   * @return httpsSetupSupported
   */
  @javax.annotation.Nonnull
  public Boolean getHttpsSetupSupported() {
    return httpsSetupSupported;
  }

  public void setHttpsSetupSupported(Boolean httpsSetupSupported) {
    this.httpsSetupSupported = httpsSetupSupported;
  }


  public Capabilities inputManagementSupported(Boolean inputManagementSupported) {
    this.inputManagementSupported = inputManagementSupported;
    return this;
  }

  /**
   * Get inputManagementSupported
   * @return inputManagementSupported
   */
  @javax.annotation.Nonnull
  public Boolean getInputManagementSupported() {
    return inputManagementSupported;
  }

  public void setInputManagementSupported(Boolean inputManagementSupported) {
    this.inputManagementSupported = inputManagementSupported;
  }


  public Capabilities keepHotspotUntilConnectedSupported(Boolean keepHotspotUntilConnectedSupported) {
    this.keepHotspotUntilConnectedSupported = keepHotspotUntilConnectedSupported;
    return this;
  }

  /**
   * Get keepHotspotUntilConnectedSupported
   * @return keepHotspotUntilConnectedSupported
   */
  @javax.annotation.Nonnull
  public Boolean getKeepHotspotUntilConnectedSupported() {
    return keepHotspotUntilConnectedSupported;
  }

  public void setKeepHotspotUntilConnectedSupported(Boolean keepHotspotUntilConnectedSupported) {
    this.keepHotspotUntilConnectedSupported = keepHotspotUntilConnectedSupported;
  }


  public Capabilities multiUserSupported(Boolean multiUserSupported) {
    this.multiUserSupported = multiUserSupported;
    return this;
  }

  /**
   * Get multiUserSupported
   * @return multiUserSupported
   */
  @javax.annotation.Nonnull
  public Boolean getMultiUserSupported() {
    return multiUserSupported;
  }

  public void setMultiUserSupported(Boolean multiUserSupported) {
    this.multiUserSupported = multiUserSupported;
  }


  public Capabilities multichannelGroupSupported(Boolean multichannelGroupSupported) {
    this.multichannelGroupSupported = multichannelGroupSupported;
    return this;
  }

  /**
   * Get multichannelGroupSupported
   * @return multichannelGroupSupported
   */
  @javax.annotation.Nonnull
  public Boolean getMultichannelGroupSupported() {
    return multichannelGroupSupported;
  }

  public void setMultichannelGroupSupported(Boolean multichannelGroupSupported) {
    this.multichannelGroupSupported = multichannelGroupSupported;
  }


  public Capabilities multizoneSupported(Boolean multizoneSupported) {
    this.multizoneSupported = multizoneSupported;
    return this;
  }

  /**
   * Get multizoneSupported
   * @return multizoneSupported
   */
  @javax.annotation.Nonnull
  public Boolean getMultizoneSupported() {
    return multizoneSupported;
  }

  public void setMultizoneSupported(Boolean multizoneSupported) {
    this.multizoneSupported = multizoneSupported;
  }


  public Capabilities nightModeSupported(Boolean nightModeSupported) {
    this.nightModeSupported = nightModeSupported;
    return this;
  }

  /**
   * Get nightModeSupported
   * @return nightModeSupported
   */
  @javax.annotation.Nonnull
  public Boolean getNightModeSupported() {
    return nightModeSupported;
  }

  public void setNightModeSupported(Boolean nightModeSupported) {
    this.nightModeSupported = nightModeSupported;
  }


  public Capabilities nightModeSupportedV2(Boolean nightModeSupportedV2) {
    this.nightModeSupportedV2 = nightModeSupportedV2;
    return this;
  }

  /**
   * Get nightModeSupportedV2
   * @return nightModeSupportedV2
   */
  @javax.annotation.Nonnull
  public Boolean getNightModeSupportedV2() {
    return nightModeSupportedV2;
  }

  public void setNightModeSupportedV2(Boolean nightModeSupportedV2) {
    this.nightModeSupportedV2 = nightModeSupportedV2;
  }


  public Capabilities opencastSupported(Boolean opencastSupported) {
    this.opencastSupported = opencastSupported;
    return this;
  }

  /**
   * Get opencastSupported
   * @return opencastSupported
   */
  @javax.annotation.Nonnull
  public Boolean getOpencastSupported() {
    return opencastSupported;
  }

  public void setOpencastSupported(Boolean opencastSupported) {
    this.opencastSupported = opencastSupported;
  }


  public Capabilities previewChannelSupported(Boolean previewChannelSupported) {
    this.previewChannelSupported = previewChannelSupported;
    return this;
  }

  /**
   * Get previewChannelSupported
   * @return previewChannelSupported
   */
  @javax.annotation.Nonnull
  public Boolean getPreviewChannelSupported() {
    return previewChannelSupported;
  }

  public void setPreviewChannelSupported(Boolean previewChannelSupported) {
    this.previewChannelSupported = previewChannelSupported;
  }


  public Capabilities rebootSupported(Boolean rebootSupported) {
    this.rebootSupported = rebootSupported;
    return this;
  }

  /**
   * Get rebootSupported
   * @return rebootSupported
   */
  @javax.annotation.Nonnull
  public Boolean getRebootSupported() {
    return rebootSupported;
  }

  public void setRebootSupported(Boolean rebootSupported) {
    this.rebootSupported = rebootSupported;
  }


  public Capabilities remoteDuckingSupported(Boolean remoteDuckingSupported) {
    this.remoteDuckingSupported = remoteDuckingSupported;
    return this;
  }

  /**
   * Get remoteDuckingSupported
   * @return remoteDuckingSupported
   */
  @javax.annotation.Nonnull
  public Boolean getRemoteDuckingSupported() {
    return remoteDuckingSupported;
  }

  public void setRemoteDuckingSupported(Boolean remoteDuckingSupported) {
    this.remoteDuckingSupported = remoteDuckingSupported;
  }


  public Capabilities separateTtsVolumeSupported(Boolean separateTtsVolumeSupported) {
    this.separateTtsVolumeSupported = separateTtsVolumeSupported;
    return this;
  }

  /**
   * Get separateTtsVolumeSupported
   * @return separateTtsVolumeSupported
   */
  @javax.annotation.Nonnull
  public Boolean getSeparateTtsVolumeSupported() {
    return separateTtsVolumeSupported;
  }

  public void setSeparateTtsVolumeSupported(Boolean separateTtsVolumeSupported) {
    this.separateTtsVolumeSupported = separateTtsVolumeSupported;
  }


  public Capabilities setupSupported(Boolean setupSupported) {
    this.setupSupported = setupSupported;
    return this;
  }

  /**
   * Get setupSupported
   * @return setupSupported
   */
  @javax.annotation.Nonnull
  public Boolean getSetupSupported() {
    return setupSupported;
  }

  public void setSetupSupported(Boolean setupSupported) {
    this.setupSupported = setupSupported;
  }


  public Capabilities sleepModeSupported(Boolean sleepModeSupported) {
    this.sleepModeSupported = sleepModeSupported;
    return this;
  }

  /**
   * Get sleepModeSupported
   * @return sleepModeSupported
   */
  @javax.annotation.Nonnull
  public Boolean getSleepModeSupported() {
    return sleepModeSupported;
  }

  public void setSleepModeSupported(Boolean sleepModeSupported) {
    this.sleepModeSupported = sleepModeSupported;
  }


  public Capabilities statsSupported(Boolean statsSupported) {
    this.statsSupported = statsSupported;
    return this;
  }

  /**
   * Get statsSupported
   * @return statsSupported
   */
  @javax.annotation.Nonnull
  public Boolean getStatsSupported() {
    return statsSupported;
  }

  public void setStatsSupported(Boolean statsSupported) {
    this.statsSupported = statsSupported;
  }


  public Capabilities systemSoundEffectsSupported(Boolean systemSoundEffectsSupported) {
    this.systemSoundEffectsSupported = systemSoundEffectsSupported;
    return this;
  }

  /**
   * Get systemSoundEffectsSupported
   * @return systemSoundEffectsSupported
   */
  @javax.annotation.Nonnull
  public Boolean getSystemSoundEffectsSupported() {
    return systemSoundEffectsSupported;
  }

  public void setSystemSoundEffectsSupported(Boolean systemSoundEffectsSupported) {
    this.systemSoundEffectsSupported = systemSoundEffectsSupported;
  }


  public Capabilities userEqSupported(Boolean userEqSupported) {
    this.userEqSupported = userEqSupported;
    return this;
  }

  /**
   * Get userEqSupported
   * @return userEqSupported
   */
  @javax.annotation.Nonnull
  public Boolean getUserEqSupported() {
    return userEqSupported;
  }

  public void setUserEqSupported(Boolean userEqSupported) {
    this.userEqSupported = userEqSupported;
  }


  public Capabilities wifiAutoSaveSupported(Boolean wifiAutoSaveSupported) {
    this.wifiAutoSaveSupported = wifiAutoSaveSupported;
    return this;
  }

  /**
   * Get wifiAutoSaveSupported
   * @return wifiAutoSaveSupported
   */
  @javax.annotation.Nonnull
  public Boolean getWifiAutoSaveSupported() {
    return wifiAutoSaveSupported;
  }

  public void setWifiAutoSaveSupported(Boolean wifiAutoSaveSupported) {
    this.wifiAutoSaveSupported = wifiAutoSaveSupported;
  }


  public Capabilities wifiRegulatoryDomainLocked(Boolean wifiRegulatoryDomainLocked) {
    this.wifiRegulatoryDomainLocked = wifiRegulatoryDomainLocked;
    return this;
  }

  /**
   * Get wifiRegulatoryDomainLocked
   * @return wifiRegulatoryDomainLocked
   */
  @javax.annotation.Nonnull
  public Boolean getWifiRegulatoryDomainLocked() {
    return wifiRegulatoryDomainLocked;
  }

  public void setWifiRegulatoryDomainLocked(Boolean wifiRegulatoryDomainLocked) {
    this.wifiRegulatoryDomainLocked = wifiRegulatoryDomainLocked;
  }


  public Capabilities wifiSupported(Boolean wifiSupported) {
    this.wifiSupported = wifiSupported;
    return this;
  }

  /**
   * Get wifiSupported
   * @return wifiSupported
   */
  @javax.annotation.Nonnull
  public Boolean getWifiSupported() {
    return wifiSupported;
  }

  public void setWifiSupported(Boolean wifiSupported) {
    this.wifiSupported = wifiSupported;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Capabilities capabilities = (Capabilities) o;
    return Objects.equals(this.aoghSupported, capabilities.aoghSupported) &&
        Objects.equals(this.assistantSupported, capabilities.assistantSupported) &&
        Objects.equals(this.audioHdrSupported, capabilities.audioHdrSupported) &&
        Objects.equals(this.audioSurroundModeSupported, capabilities.audioSurroundModeSupported) &&
        Objects.equals(this.bleSupported, capabilities.bleSupported) &&
        Objects.equals(this.bluetoothAudioSinkSupported, capabilities.bluetoothAudioSinkSupported) &&
        Objects.equals(this.bluetoothAudioSourceSupported, capabilities.bluetoothAudioSourceSupported) &&
        Objects.equals(this.bluetoothSupported, capabilities.bluetoothSupported) &&
        Objects.equals(this.cloudcastSupported, capabilities.cloudcastSupported) &&
        Objects.equals(this.contentFiltersSupported, capabilities.contentFiltersSupported) &&
        Objects.equals(this.displaySupported, capabilities.displaySupported) &&
        Objects.equals(this.fdrSupported, capabilities.fdrSupported) &&
        Objects.equals(this.hdmiPrefer50hzSupported, capabilities.hdmiPrefer50hzSupported) &&
        Objects.equals(this.hdmiPreferHighFpsSupported, capabilities.hdmiPreferHighFpsSupported) &&
        Objects.equals(this.hotspotSupported, capabilities.hotspotSupported) &&
        Objects.equals(this.httpsSetupSupported, capabilities.httpsSetupSupported) &&
        Objects.equals(this.inputManagementSupported, capabilities.inputManagementSupported) &&
        Objects.equals(this.keepHotspotUntilConnectedSupported, capabilities.keepHotspotUntilConnectedSupported) &&
        Objects.equals(this.multiUserSupported, capabilities.multiUserSupported) &&
        Objects.equals(this.multichannelGroupSupported, capabilities.multichannelGroupSupported) &&
        Objects.equals(this.multizoneSupported, capabilities.multizoneSupported) &&
        Objects.equals(this.nightModeSupported, capabilities.nightModeSupported) &&
        Objects.equals(this.nightModeSupportedV2, capabilities.nightModeSupportedV2) &&
        Objects.equals(this.opencastSupported, capabilities.opencastSupported) &&
        Objects.equals(this.previewChannelSupported, capabilities.previewChannelSupported) &&
        Objects.equals(this.rebootSupported, capabilities.rebootSupported) &&
        Objects.equals(this.remoteDuckingSupported, capabilities.remoteDuckingSupported) &&
        Objects.equals(this.separateTtsVolumeSupported, capabilities.separateTtsVolumeSupported) &&
        Objects.equals(this.setupSupported, capabilities.setupSupported) &&
        Objects.equals(this.sleepModeSupported, capabilities.sleepModeSupported) &&
        Objects.equals(this.statsSupported, capabilities.statsSupported) &&
        Objects.equals(this.systemSoundEffectsSupported, capabilities.systemSoundEffectsSupported) &&
        Objects.equals(this.userEqSupported, capabilities.userEqSupported) &&
        Objects.equals(this.wifiAutoSaveSupported, capabilities.wifiAutoSaveSupported) &&
        Objects.equals(this.wifiRegulatoryDomainLocked, capabilities.wifiRegulatoryDomainLocked) &&
        Objects.equals(this.wifiSupported, capabilities.wifiSupported);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aoghSupported, assistantSupported, audioHdrSupported, audioSurroundModeSupported, bleSupported, bluetoothAudioSinkSupported, bluetoothAudioSourceSupported, bluetoothSupported, cloudcastSupported, contentFiltersSupported, displaySupported, fdrSupported, hdmiPrefer50hzSupported, hdmiPreferHighFpsSupported, hotspotSupported, httpsSetupSupported, inputManagementSupported, keepHotspotUntilConnectedSupported, multiUserSupported, multichannelGroupSupported, multizoneSupported, nightModeSupported, nightModeSupportedV2, opencastSupported, previewChannelSupported, rebootSupported, remoteDuckingSupported, separateTtsVolumeSupported, setupSupported, sleepModeSupported, statsSupported, systemSoundEffectsSupported, userEqSupported, wifiAutoSaveSupported, wifiRegulatoryDomainLocked, wifiSupported);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Capabilities {\n");
    sb.append("    aoghSupported: ").append(toIndentedString(aoghSupported)).append("\n");
    sb.append("    assistantSupported: ").append(toIndentedString(assistantSupported)).append("\n");
    sb.append("    audioHdrSupported: ").append(toIndentedString(audioHdrSupported)).append("\n");
    sb.append("    audioSurroundModeSupported: ").append(toIndentedString(audioSurroundModeSupported)).append("\n");
    sb.append("    bleSupported: ").append(toIndentedString(bleSupported)).append("\n");
    sb.append("    bluetoothAudioSinkSupported: ").append(toIndentedString(bluetoothAudioSinkSupported)).append("\n");
    sb.append("    bluetoothAudioSourceSupported: ").append(toIndentedString(bluetoothAudioSourceSupported)).append("\n");
    sb.append("    bluetoothSupported: ").append(toIndentedString(bluetoothSupported)).append("\n");
    sb.append("    cloudcastSupported: ").append(toIndentedString(cloudcastSupported)).append("\n");
    sb.append("    contentFiltersSupported: ").append(toIndentedString(contentFiltersSupported)).append("\n");
    sb.append("    displaySupported: ").append(toIndentedString(displaySupported)).append("\n");
    sb.append("    fdrSupported: ").append(toIndentedString(fdrSupported)).append("\n");
    sb.append("    hdmiPrefer50hzSupported: ").append(toIndentedString(hdmiPrefer50hzSupported)).append("\n");
    sb.append("    hdmiPreferHighFpsSupported: ").append(toIndentedString(hdmiPreferHighFpsSupported)).append("\n");
    sb.append("    hotspotSupported: ").append(toIndentedString(hotspotSupported)).append("\n");
    sb.append("    httpsSetupSupported: ").append(toIndentedString(httpsSetupSupported)).append("\n");
    sb.append("    inputManagementSupported: ").append(toIndentedString(inputManagementSupported)).append("\n");
    sb.append("    keepHotspotUntilConnectedSupported: ").append(toIndentedString(keepHotspotUntilConnectedSupported)).append("\n");
    sb.append("    multiUserSupported: ").append(toIndentedString(multiUserSupported)).append("\n");
    sb.append("    multichannelGroupSupported: ").append(toIndentedString(multichannelGroupSupported)).append("\n");
    sb.append("    multizoneSupported: ").append(toIndentedString(multizoneSupported)).append("\n");
    sb.append("    nightModeSupported: ").append(toIndentedString(nightModeSupported)).append("\n");
    sb.append("    nightModeSupportedV2: ").append(toIndentedString(nightModeSupportedV2)).append("\n");
    sb.append("    opencastSupported: ").append(toIndentedString(opencastSupported)).append("\n");
    sb.append("    previewChannelSupported: ").append(toIndentedString(previewChannelSupported)).append("\n");
    sb.append("    rebootSupported: ").append(toIndentedString(rebootSupported)).append("\n");
    sb.append("    remoteDuckingSupported: ").append(toIndentedString(remoteDuckingSupported)).append("\n");
    sb.append("    separateTtsVolumeSupported: ").append(toIndentedString(separateTtsVolumeSupported)).append("\n");
    sb.append("    setupSupported: ").append(toIndentedString(setupSupported)).append("\n");
    sb.append("    sleepModeSupported: ").append(toIndentedString(sleepModeSupported)).append("\n");
    sb.append("    statsSupported: ").append(toIndentedString(statsSupported)).append("\n");
    sb.append("    systemSoundEffectsSupported: ").append(toIndentedString(systemSoundEffectsSupported)).append("\n");
    sb.append("    userEqSupported: ").append(toIndentedString(userEqSupported)).append("\n");
    sb.append("    wifiAutoSaveSupported: ").append(toIndentedString(wifiAutoSaveSupported)).append("\n");
    sb.append("    wifiRegulatoryDomainLocked: ").append(toIndentedString(wifiRegulatoryDomainLocked)).append("\n");
    sb.append("    wifiSupported: ").append(toIndentedString(wifiSupported)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aogh_supported");
    openapiFields.add("assistant_supported");
    openapiFields.add("audio_hdr_supported");
    openapiFields.add("audio_surround_mode_supported");
    openapiFields.add("ble_supported");
    openapiFields.add("bluetooth_audio_sink_supported");
    openapiFields.add("bluetooth_audio_source_supported");
    openapiFields.add("bluetooth_supported");
    openapiFields.add("cloudcast_supported");
    openapiFields.add("content_filters_supported");
    openapiFields.add("display_supported");
    openapiFields.add("fdr_supported");
    openapiFields.add("hdmi_prefer_50hz_supported");
    openapiFields.add("hdmi_prefer_high_fps_supported");
    openapiFields.add("hotspot_supported");
    openapiFields.add("https_setup_supported");
    openapiFields.add("input_management_supported");
    openapiFields.add("keep_hotspot_until_connected_supported");
    openapiFields.add("multi_user_supported");
    openapiFields.add("multichannel_group_supported");
    openapiFields.add("multizone_supported");
    openapiFields.add("night_mode_supported");
    openapiFields.add("night_mode_supported_v2");
    openapiFields.add("opencast_supported");
    openapiFields.add("preview_channel_supported");
    openapiFields.add("reboot_supported");
    openapiFields.add("remote_ducking_supported");
    openapiFields.add("separate_tts_volume_supported");
    openapiFields.add("setup_supported");
    openapiFields.add("sleep_mode_supported");
    openapiFields.add("stats_supported");
    openapiFields.add("system_sound_effects_supported");
    openapiFields.add("user_eq_supported");
    openapiFields.add("wifi_auto_save_supported");
    openapiFields.add("wifi_regulatory_domain_locked");
    openapiFields.add("wifi_supported");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("aogh_supported");
    openapiRequiredFields.add("assistant_supported");
    openapiRequiredFields.add("audio_hdr_supported");
    openapiRequiredFields.add("audio_surround_mode_supported");
    openapiRequiredFields.add("ble_supported");
    openapiRequiredFields.add("bluetooth_audio_sink_supported");
    openapiRequiredFields.add("bluetooth_audio_source_supported");
    openapiRequiredFields.add("bluetooth_supported");
    openapiRequiredFields.add("cloudcast_supported");
    openapiRequiredFields.add("content_filters_supported");
    openapiRequiredFields.add("display_supported");
    openapiRequiredFields.add("fdr_supported");
    openapiRequiredFields.add("hdmi_prefer_50hz_supported");
    openapiRequiredFields.add("hdmi_prefer_high_fps_supported");
    openapiRequiredFields.add("hotspot_supported");
    openapiRequiredFields.add("https_setup_supported");
    openapiRequiredFields.add("input_management_supported");
    openapiRequiredFields.add("keep_hotspot_until_connected_supported");
    openapiRequiredFields.add("multi_user_supported");
    openapiRequiredFields.add("multichannel_group_supported");
    openapiRequiredFields.add("multizone_supported");
    openapiRequiredFields.add("night_mode_supported");
    openapiRequiredFields.add("night_mode_supported_v2");
    openapiRequiredFields.add("opencast_supported");
    openapiRequiredFields.add("preview_channel_supported");
    openapiRequiredFields.add("reboot_supported");
    openapiRequiredFields.add("remote_ducking_supported");
    openapiRequiredFields.add("separate_tts_volume_supported");
    openapiRequiredFields.add("setup_supported");
    openapiRequiredFields.add("sleep_mode_supported");
    openapiRequiredFields.add("stats_supported");
    openapiRequiredFields.add("system_sound_effects_supported");
    openapiRequiredFields.add("user_eq_supported");
    openapiRequiredFields.add("wifi_auto_save_supported");
    openapiRequiredFields.add("wifi_regulatory_domain_locked");
    openapiRequiredFields.add("wifi_supported");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Capabilities
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Capabilities.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Capabilities is not found in the empty JSON string", Capabilities.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Capabilities.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Capabilities` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Capabilities.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Capabilities.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Capabilities' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Capabilities> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Capabilities.class));

       return (TypeAdapter<T>) new TypeAdapter<Capabilities>() {
           @Override
           public void write(JsonWriter out, Capabilities value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Capabilities read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Capabilities given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Capabilities
   * @throws IOException if the JSON string is invalid with respect to Capabilities
   */
  public static Capabilities fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Capabilities.class);
  }

  /**
   * Convert an instance of Capabilities to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

