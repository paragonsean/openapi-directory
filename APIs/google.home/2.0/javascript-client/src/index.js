/**
 * Google Home
 * # Google Home Local API This is an unofficial documentation of the local API used by the Home app to communicate with GH devices. [GitHub Repo](https://github.com/rithvikvibhu/GHLocalApi)  [![GitHub stars](https://img.shields.io/github/stars/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/stargazers) [![GitHub license](https://img.shields.io/github/license/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/blob/master/LICENSE.md)  ## Getting Started  Requests must be made over HTTPS, port 8443, so the base URL for these endpoints is: `https://<google-home-ip>:8443/setup/`  Get the IP of Google Home from the Google Home app (Device Settings -> End of the list) or from your router.  GET requests are simple, in the browser kind.   POST requests need to set the header (when there's a body): `content-type: application/json`  ## Authentication  Since June 2019, most requests (with exceptions like `/setup/eureka_info`) need a local authorization token.  There are 3 kinds of tokens involved here:  ### Local Authorization Token This token must be sent in all requests in the header `cast-local-authorization-token`. It is short-lived (~1 day) and may change unexpectedly (with a sync, change in homegraph, etc.) ##### Get this token - With access to an android device, [get this token directly by either method](https://gist.github.com/rithvikvibhu/1a0f4937af957ef6a78453e3be482c1f). - Without a device, or to integrate it with a script, use an access token to get the homegraph and extract the token. To get an access token, read the next section. Check the example section for more info.  ### Access Token This is a standard google oauth2 access token. It is in the form `ya29.***`. This gives access to the Google Home Foyer API. These expire in an hour. Use this to get the homegraph (and then the local authorization token above). ##### Get this token To get this access token, either a Google account username/password or a Google Master Token is needed. More info in the gist. Use the script [from this gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d).  ### Master Token This is in the form `aas_et/_***` and can be used to request access tokens. ##### Get this token The same [script in the gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d) that gets the access token can also get the master token. Needs Google account creds.  ## Example  Here's the whole flow from just a pair of username/password to using the local API.  Prerequisites: - [grpcurl](https://github.com/fullstorydev/grpcurl) - [Proto files](https://drive.google.com/drive/folders/1RvnN3y-G23pd2SWHmfV_7sef8QU5GNF4?usp=sharing) (preserve folder structure)  ### 1. Get an access token with the script - Download get_tokens.py - Fill in username and password ```sh python3 get_tokens.py # Note down the access token printed. ```  ### 2. Use the access token and get home graph - This prints the json and uses jq to parse and filter out the fields deviceName and localAuthToken - This will give a list of all devices and their local auth tokens ```sh ./grpcurl -H 'authorization: Bearer ya29.a0Af****' \\  -import-path /path/to/protos \\  -proto /path/to/protos/google/internal/home/foyer/v1.proto \\  googlehomefoyer-pa.googleapis.com:443 \\  google.internal.home.foyer.v1.StructuresService/GetHomeGraph | jq '.home.devices[] | {deviceName, localAuthToken}' # Note down the local auth token for the device you want. ```  ### 3. Make the call to the local device using the local auth token ```sh curl -H \"cast-local-authorization-token: LOCAL_AUTH_TOKEN\" --verbose --insecure https://192.168.0.18:8443/setup/bluetooth/status ```
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessibilityRequest from './model/AccessibilityRequest';
import Alarm from './model/Alarm';
import AlarmVolumeRequest from './model/AlarmVolumeRequest';
import Aogh from './model/Aogh';
import AppDeviceIDRequest from './model/AppDeviceIDRequest';
import Audio from './model/Audio';
import BuildInfo from './model/BuildInfo';
import Capabilities from './model/Capabilities';
import ChangeDiscoverabilityRequest from './model/ChangeDiscoverabilityRequest';
import CheckReadyStatusRequest from './model/CheckReadyStatusRequest';
import ConnectedDevice from './model/ConnectedDevice';
import ConnecttoWiFiNetworkRequest from './model/ConnecttoWiFiNetworkRequest';
import DatePattern from './model/DatePattern';
import DeleteAlarmsandTimersRequest from './model/DeleteAlarmsandTimersRequest';
import Detail from './model/Detail';
import Device from './model/Device';
import DeviceInfo from './model/DeviceInfo';
import Example1 from './model/Example1';
import Example11 from './model/Example11';
import Example110 from './model/Example110';
import Example111 from './model/Example111';
import Example112 from './model/Example112';
import Example113 from './model/Example113';
import Example114 from './model/Example114';
import Example12 from './model/Example12';
import Example13 from './model/Example13';
import Example14 from './model/Example14';
import Example15 from './model/Example15';
import Example16 from './model/Example16';
import Example17 from './model/Example17';
import Example18 from './model/Example18';
import Example19 from './model/Example19';
import ForgetWiFiNetworkRequest from './model/ForgetWiFiNetworkRequest';
import ForgetpaireddeviceRequest from './model/ForgetpaireddeviceRequest';
import Getcurrentstate from './model/Getcurrentstate';
import Getcurrentvalues from './model/Getcurrentvalues';
import Getvolume from './model/Getvolume';
import HighShelf from './model/HighShelf';
import HighShelf1 from './model/HighShelf1';
import IconList from './model/IconList';
import Locale from './model/Locale';
import LowShelf from './model/LowShelf';
import LowShelf1 from './model/LowShelf1';
import Multizone from './model/Multizone';
import Net from './model/Net';
import NightModeParams from './model/NightModeParams';
import NightModesettingsRequest from './model/NightModesettingsRequest';
import Opencast from './model/Opencast';
import OptIn from './model/OptIn';
import OptIn1 from './model/OptIn1';
import PairwithSpeakerRequest from './model/PairwithSpeakerRequest';
import Proxy from './model/Proxy';
import RebootandFactoryResetRequest from './model/RebootandFactoryResetRequest';
import RemoteSink from './model/RemoteSink';
import ScanfordevicesRequest from './model/ScanfordevicesRequest';
import SetEqualizerValuesRequest from './model/SetEqualizerValuesRequest';
import SetEurekaInfoRequest from './model/SetEurekaInfoRequest';
import Settings from './model/Settings';
import Settings1 from './model/Settings1';
import Setup from './model/Setup';
import Sign from './model/Sign';
import Stats from './model/Stats';
import TestInternetDownloadSpeedRequest from './model/TestInternetDownloadSpeedRequest';
import TimePattern from './model/TimePattern';
import Timer from './model/Timer';
import Timezone from './model/Timezone';
import UserEq from './model/UserEq';
import Wifi from './model/Wifi';
import Window from './model/Window';
import Window2 from './model/Window2';
import AssistantApi from './api/AssistantApi';
import BluetoothApi from './api/BluetoothApi';
import DeviceInfoApi from './api/DeviceInfoApi';
import DeviceSettingsApi from './api/DeviceSettingsApi';
import StaticFilesApi from './api/StaticFilesApi';
import WifiApi from './api/WifiApi';


/**
* # Google Home Local API This is an unofficial documentation of the local API used by the Home app to communicate with GH devices. [GitHub Repo](https://github.com/rithvikvibhu/GHLocalApi)  [![GitHub stars](https://img.shields.io/github/stars/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/stargazers) [![GitHub license](https://img.shields.io/github/license/rithvikvibhu/GHLocalApi)](https://github.com/rithvikvibhu/GHLocalApi/blob/master/LICENSE.md)  ## Getting Started  Requests must be made over HTTPS, port 8443, so the base URL for these endpoints is: &#x60;https://&lt;google-home-ip&gt;:8443/setup/&#x60;  Get the IP of Google Home from the Google Home app (Device Settings -&gt; End of the list) or from your router.  GET requests are simple, in the browser kind.   POST requests need to set the header (when there&#39;s a body): &#x60;content-type: application/json&#x60;  ## Authentication  Since June 2019, most requests (with exceptions like &#x60;/setup/eureka_info&#x60;) need a local authorization token.  There are 3 kinds of tokens involved here:  ### Local Authorization Token This token must be sent in all requests in the header &#x60;cast-local-authorization-token&#x60;. It is short-lived (~1 day) and may change unexpectedly (with a sync, change in homegraph, etc.) ##### Get this token - With access to an android device, [get this token directly by either method](https://gist.github.com/rithvikvibhu/1a0f4937af957ef6a78453e3be482c1f). - Without a device, or to integrate it with a script, use an access token to get the homegraph and extract the token. To get an access token, read the next section. Check the example section for more info.  ### Access Token This is a standard google oauth2 access token. It is in the form &#x60;ya29.***&#x60;. This gives access to the Google Home Foyer API. These expire in an hour. Use this to get the homegraph (and then the local authorization token above). ##### Get this token To get this access token, either a Google account username/password or a Google Master Token is needed. More info in the gist. Use the script [from this gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d).  ### Master Token This is in the form &#x60;aas_et/_***&#x60; and can be used to request access tokens. ##### Get this token The same [script in the gist](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d) that gets the access token can also get the master token. Needs Google account creds.  ## Example  Here&#39;s the whole flow from just a pair of username/password to using the local API.  Prerequisites: - [grpcurl](https://github.com/fullstorydev/grpcurl) - [Proto files](https://drive.google.com/drive/folders/1RvnN3y-G23pd2SWHmfV_7sef8QU5GNF4?usp&#x3D;sharing) (preserve folder structure)  ### 1. Get an access token with the script - Download get_tokens.py - Fill in username and password &#x60;&#x60;&#x60;sh python3 get_tokens.py # Note down the access token printed. &#x60;&#x60;&#x60;  ### 2. Use the access token and get home graph - This prints the json and uses jq to parse and filter out the fields deviceName and localAuthToken - This will give a list of all devices and their local auth tokens &#x60;&#x60;&#x60;sh ./grpcurl -H &#39;authorization: Bearer ya29.a0Af****&#39; \\  -import-path /path/to/protos \\  -proto /path/to/protos/google/internal/home/foyer/v1.proto \\  googlehomefoyer-pa.googleapis.com:443 \\  google.internal.home.foyer.v1.StructuresService/GetHomeGraph | jq &#39;.home.devices[] | {deviceName, localAuthToken}&#39; # Note down the local auth token for the device you want. &#x60;&#x60;&#x60;  ### 3. Make the call to the local device using the local auth token &#x60;&#x60;&#x60;sh curl -H \&quot;cast-local-authorization-token: LOCAL_AUTH_TOKEN\&quot; --verbose --insecure https://192.168.0.18:8443/setup/bluetooth/status &#x60;&#x60;&#x60;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GoogleHome = require('index'); // See note below*.
* var xxxSvc = new GoogleHome.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GoogleHome.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GoogleHome.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GoogleHome.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessibilityRequest model constructor.
     * @property {module:model/AccessibilityRequest}
     */
    AccessibilityRequest,

    /**
     * The Alarm model constructor.
     * @property {module:model/Alarm}
     */
    Alarm,

    /**
     * The AlarmVolumeRequest model constructor.
     * @property {module:model/AlarmVolumeRequest}
     */
    AlarmVolumeRequest,

    /**
     * The Aogh model constructor.
     * @property {module:model/Aogh}
     */
    Aogh,

    /**
     * The AppDeviceIDRequest model constructor.
     * @property {module:model/AppDeviceIDRequest}
     */
    AppDeviceIDRequest,

    /**
     * The Audio model constructor.
     * @property {module:model/Audio}
     */
    Audio,

    /**
     * The BuildInfo model constructor.
     * @property {module:model/BuildInfo}
     */
    BuildInfo,

    /**
     * The Capabilities model constructor.
     * @property {module:model/Capabilities}
     */
    Capabilities,

    /**
     * The ChangeDiscoverabilityRequest model constructor.
     * @property {module:model/ChangeDiscoverabilityRequest}
     */
    ChangeDiscoverabilityRequest,

    /**
     * The CheckReadyStatusRequest model constructor.
     * @property {module:model/CheckReadyStatusRequest}
     */
    CheckReadyStatusRequest,

    /**
     * The ConnectedDevice model constructor.
     * @property {module:model/ConnectedDevice}
     */
    ConnectedDevice,

    /**
     * The ConnecttoWiFiNetworkRequest model constructor.
     * @property {module:model/ConnecttoWiFiNetworkRequest}
     */
    ConnecttoWiFiNetworkRequest,

    /**
     * The DatePattern model constructor.
     * @property {module:model/DatePattern}
     */
    DatePattern,

    /**
     * The DeleteAlarmsandTimersRequest model constructor.
     * @property {module:model/DeleteAlarmsandTimersRequest}
     */
    DeleteAlarmsandTimersRequest,

    /**
     * The Detail model constructor.
     * @property {module:model/Detail}
     */
    Detail,

    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device,

    /**
     * The DeviceInfo model constructor.
     * @property {module:model/DeviceInfo}
     */
    DeviceInfo,

    /**
     * The Example1 model constructor.
     * @property {module:model/Example1}
     */
    Example1,

    /**
     * The Example11 model constructor.
     * @property {module:model/Example11}
     */
    Example11,

    /**
     * The Example110 model constructor.
     * @property {module:model/Example110}
     */
    Example110,

    /**
     * The Example111 model constructor.
     * @property {module:model/Example111}
     */
    Example111,

    /**
     * The Example112 model constructor.
     * @property {module:model/Example112}
     */
    Example112,

    /**
     * The Example113 model constructor.
     * @property {module:model/Example113}
     */
    Example113,

    /**
     * The Example114 model constructor.
     * @property {module:model/Example114}
     */
    Example114,

    /**
     * The Example12 model constructor.
     * @property {module:model/Example12}
     */
    Example12,

    /**
     * The Example13 model constructor.
     * @property {module:model/Example13}
     */
    Example13,

    /**
     * The Example14 model constructor.
     * @property {module:model/Example14}
     */
    Example14,

    /**
     * The Example15 model constructor.
     * @property {module:model/Example15}
     */
    Example15,

    /**
     * The Example16 model constructor.
     * @property {module:model/Example16}
     */
    Example16,

    /**
     * The Example17 model constructor.
     * @property {module:model/Example17}
     */
    Example17,

    /**
     * The Example18 model constructor.
     * @property {module:model/Example18}
     */
    Example18,

    /**
     * The Example19 model constructor.
     * @property {module:model/Example19}
     */
    Example19,

    /**
     * The ForgetWiFiNetworkRequest model constructor.
     * @property {module:model/ForgetWiFiNetworkRequest}
     */
    ForgetWiFiNetworkRequest,

    /**
     * The ForgetpaireddeviceRequest model constructor.
     * @property {module:model/ForgetpaireddeviceRequest}
     */
    ForgetpaireddeviceRequest,

    /**
     * The Getcurrentstate model constructor.
     * @property {module:model/Getcurrentstate}
     */
    Getcurrentstate,

    /**
     * The Getcurrentvalues model constructor.
     * @property {module:model/Getcurrentvalues}
     */
    Getcurrentvalues,

    /**
     * The Getvolume model constructor.
     * @property {module:model/Getvolume}
     */
    Getvolume,

    /**
     * The HighShelf model constructor.
     * @property {module:model/HighShelf}
     */
    HighShelf,

    /**
     * The HighShelf1 model constructor.
     * @property {module:model/HighShelf1}
     */
    HighShelf1,

    /**
     * The IconList model constructor.
     * @property {module:model/IconList}
     */
    IconList,

    /**
     * The Locale model constructor.
     * @property {module:model/Locale}
     */
    Locale,

    /**
     * The LowShelf model constructor.
     * @property {module:model/LowShelf}
     */
    LowShelf,

    /**
     * The LowShelf1 model constructor.
     * @property {module:model/LowShelf1}
     */
    LowShelf1,

    /**
     * The Multizone model constructor.
     * @property {module:model/Multizone}
     */
    Multizone,

    /**
     * The Net model constructor.
     * @property {module:model/Net}
     */
    Net,

    /**
     * The NightModeParams model constructor.
     * @property {module:model/NightModeParams}
     */
    NightModeParams,

    /**
     * The NightModesettingsRequest model constructor.
     * @property {module:model/NightModesettingsRequest}
     */
    NightModesettingsRequest,

    /**
     * The Opencast model constructor.
     * @property {module:model/Opencast}
     */
    Opencast,

    /**
     * The OptIn model constructor.
     * @property {module:model/OptIn}
     */
    OptIn,

    /**
     * The OptIn1 model constructor.
     * @property {module:model/OptIn1}
     */
    OptIn1,

    /**
     * The PairwithSpeakerRequest model constructor.
     * @property {module:model/PairwithSpeakerRequest}
     */
    PairwithSpeakerRequest,

    /**
     * The Proxy model constructor.
     * @property {module:model/Proxy}
     */
    Proxy,

    /**
     * The RebootandFactoryResetRequest model constructor.
     * @property {module:model/RebootandFactoryResetRequest}
     */
    RebootandFactoryResetRequest,

    /**
     * The RemoteSink model constructor.
     * @property {module:model/RemoteSink}
     */
    RemoteSink,

    /**
     * The ScanfordevicesRequest model constructor.
     * @property {module:model/ScanfordevicesRequest}
     */
    ScanfordevicesRequest,

    /**
     * The SetEqualizerValuesRequest model constructor.
     * @property {module:model/SetEqualizerValuesRequest}
     */
    SetEqualizerValuesRequest,

    /**
     * The SetEurekaInfoRequest model constructor.
     * @property {module:model/SetEurekaInfoRequest}
     */
    SetEurekaInfoRequest,

    /**
     * The Settings model constructor.
     * @property {module:model/Settings}
     */
    Settings,

    /**
     * The Settings1 model constructor.
     * @property {module:model/Settings1}
     */
    Settings1,

    /**
     * The Setup model constructor.
     * @property {module:model/Setup}
     */
    Setup,

    /**
     * The Sign model constructor.
     * @property {module:model/Sign}
     */
    Sign,

    /**
     * The Stats model constructor.
     * @property {module:model/Stats}
     */
    Stats,

    /**
     * The TestInternetDownloadSpeedRequest model constructor.
     * @property {module:model/TestInternetDownloadSpeedRequest}
     */
    TestInternetDownloadSpeedRequest,

    /**
     * The TimePattern model constructor.
     * @property {module:model/TimePattern}
     */
    TimePattern,

    /**
     * The Timer model constructor.
     * @property {module:model/Timer}
     */
    Timer,

    /**
     * The Timezone model constructor.
     * @property {module:model/Timezone}
     */
    Timezone,

    /**
     * The UserEq model constructor.
     * @property {module:model/UserEq}
     */
    UserEq,

    /**
     * The Wifi model constructor.
     * @property {module:model/Wifi}
     */
    Wifi,

    /**
     * The Window model constructor.
     * @property {module:model/Window}
     */
    Window,

    /**
     * The Window2 model constructor.
     * @property {module:model/Window2}
     */
    Window2,

    /**
    * The AssistantApi service constructor.
    * @property {module:api/AssistantApi}
    */
    AssistantApi,

    /**
    * The BluetoothApi service constructor.
    * @property {module:api/BluetoothApi}
    */
    BluetoothApi,

    /**
    * The DeviceInfoApi service constructor.
    * @property {module:api/DeviceInfoApi}
    */
    DeviceInfoApi,

    /**
    * The DeviceSettingsApi service constructor.
    * @property {module:api/DeviceSettingsApi}
    */
    DeviceSettingsApi,

    /**
    * The StaticFilesApi service constructor.
    * @property {module:api/StaticFilesApi}
    */
    StaticFilesApi,

    /**
    * The WifiApi service constructor.
    * @property {module:api/WifiApi}
    */
    WifiApi
};
