# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_attendee_resource import EmbeddedAttendeeResource
from openapi_server.models.embedded_resource import EmbeddedResource
from openapi_server.models.event_meeting_setting import EventMeetingSetting
from openapi_server import util


class Meeting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, all_day: bool=None, attendees: List[EmbeddedAttendeeResource]=None, booked_by_meetings_settings: EventMeetingSetting=None, booked_by_user: EmbeddedResource=None, cadence: EmbeddedResource=None, calendar_id: str=None, calendar_type: str=None, canceled_at: date=None, created_at: date=None, crm_custom_fields: object=None, crm_references: object=None, description: str=None, end_time: date=None, event_id: str=None, event_source: str=None, guests: List[str]=None, i_cal_uid: str=None, id: int=None, location: str=None, meeting_type: str=None, no_show: bool=None, owned_by_meetings_settings: EventMeetingSetting=None, person: EmbeddedResource=None, recipient_email: str=None, recipient_name: str=None, reschedule_status: str=None, start_time: date=None, status: str=None, step: EmbeddedResource=None, strict_attribution: bool=None, task_id: str=None, title: str=None, updated_at: date=None):
        """Meeting - a model defined in OpenAPI

        :param account_id: The account_id of this Meeting.
        :param all_day: The all_day of this Meeting.
        :param attendees: The attendees of this Meeting.
        :param booked_by_meetings_settings: The booked_by_meetings_settings of this Meeting.
        :param booked_by_user: The booked_by_user of this Meeting.
        :param cadence: The cadence of this Meeting.
        :param calendar_id: The calendar_id of this Meeting.
        :param calendar_type: The calendar_type of this Meeting.
        :param canceled_at: The canceled_at of this Meeting.
        :param created_at: The created_at of this Meeting.
        :param crm_custom_fields: The crm_custom_fields of this Meeting.
        :param crm_references: The crm_references of this Meeting.
        :param description: The description of this Meeting.
        :param end_time: The end_time of this Meeting.
        :param event_id: The event_id of this Meeting.
        :param event_source: The event_source of this Meeting.
        :param guests: The guests of this Meeting.
        :param i_cal_uid: The i_cal_uid of this Meeting.
        :param id: The id of this Meeting.
        :param location: The location of this Meeting.
        :param meeting_type: The meeting_type of this Meeting.
        :param no_show: The no_show of this Meeting.
        :param owned_by_meetings_settings: The owned_by_meetings_settings of this Meeting.
        :param person: The person of this Meeting.
        :param recipient_email: The recipient_email of this Meeting.
        :param recipient_name: The recipient_name of this Meeting.
        :param reschedule_status: The reschedule_status of this Meeting.
        :param start_time: The start_time of this Meeting.
        :param status: The status of this Meeting.
        :param step: The step of this Meeting.
        :param strict_attribution: The strict_attribution of this Meeting.
        :param task_id: The task_id of this Meeting.
        :param title: The title of this Meeting.
        :param updated_at: The updated_at of this Meeting.
        """
        self.openapi_types = {
            'account_id': str,
            'all_day': bool,
            'attendees': List[EmbeddedAttendeeResource],
            'booked_by_meetings_settings': EventMeetingSetting,
            'booked_by_user': EmbeddedResource,
            'cadence': EmbeddedResource,
            'calendar_id': str,
            'calendar_type': str,
            'canceled_at': date,
            'created_at': date,
            'crm_custom_fields': object,
            'crm_references': object,
            'description': str,
            'end_time': date,
            'event_id': str,
            'event_source': str,
            'guests': List[str],
            'i_cal_uid': str,
            'id': int,
            'location': str,
            'meeting_type': str,
            'no_show': bool,
            'owned_by_meetings_settings': EventMeetingSetting,
            'person': EmbeddedResource,
            'recipient_email': str,
            'recipient_name': str,
            'reschedule_status': str,
            'start_time': date,
            'status': str,
            'step': EmbeddedResource,
            'strict_attribution': bool,
            'task_id': str,
            'title': str,
            'updated_at': date
        }

        self.attribute_map = {
            'account_id': 'account_id',
            'all_day': 'all_day',
            'attendees': 'attendees',
            'booked_by_meetings_settings': 'booked_by_meetings_settings',
            'booked_by_user': 'booked_by_user',
            'cadence': 'cadence',
            'calendar_id': 'calendar_id',
            'calendar_type': 'calendar_type',
            'canceled_at': 'canceled_at',
            'created_at': 'created_at',
            'crm_custom_fields': 'crm_custom_fields',
            'crm_references': 'crm_references',
            'description': 'description',
            'end_time': 'end_time',
            'event_id': 'event_id',
            'event_source': 'event_source',
            'guests': 'guests',
            'i_cal_uid': 'i_cal_uid',
            'id': 'id',
            'location': 'location',
            'meeting_type': 'meeting_type',
            'no_show': 'no_show',
            'owned_by_meetings_settings': 'owned_by_meetings_settings',
            'person': 'person',
            'recipient_email': 'recipient_email',
            'recipient_name': 'recipient_name',
            'reschedule_status': 'reschedule_status',
            'start_time': 'start_time',
            'status': 'status',
            'step': 'step',
            'strict_attribution': 'strict_attribution',
            'task_id': 'task_id',
            'title': 'title',
            'updated_at': 'updated_at'
        }

        self._account_id = account_id
        self._all_day = all_day
        self._attendees = attendees
        self._booked_by_meetings_settings = booked_by_meetings_settings
        self._booked_by_user = booked_by_user
        self._cadence = cadence
        self._calendar_id = calendar_id
        self._calendar_type = calendar_type
        self._canceled_at = canceled_at
        self._created_at = created_at
        self._crm_custom_fields = crm_custom_fields
        self._crm_references = crm_references
        self._description = description
        self._end_time = end_time
        self._event_id = event_id
        self._event_source = event_source
        self._guests = guests
        self._i_cal_uid = i_cal_uid
        self._id = id
        self._location = location
        self._meeting_type = meeting_type
        self._no_show = no_show
        self._owned_by_meetings_settings = owned_by_meetings_settings
        self._person = person
        self._recipient_email = recipient_email
        self._recipient_name = recipient_name
        self._reschedule_status = reschedule_status
        self._start_time = start_time
        self._status = status
        self._step = step
        self._strict_attribution = strict_attribution
        self._task_id = task_id
        self._title = title
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Meeting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Meeting of this Meeting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Meeting.

        ID of the account the recipient associated to

        :return: The account_id of this Meeting.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Meeting.

        ID of the account the recipient associated to

        :param account_id: The account_id of this Meeting.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def all_day(self):
        """Gets the all_day of this Meeting.

        Whether the meeting is an all-day meeting

        :return: The all_day of this Meeting.
        :rtype: bool
        """
        return self._all_day

    @all_day.setter
    def all_day(self, all_day):
        """Sets the all_day of this Meeting.

        Whether the meeting is an all-day meeting

        :param all_day: The all_day of this Meeting.
        :type all_day: bool
        """

        self._all_day = all_day

    @property
    def attendees(self):
        """Gets the attendees of this Meeting.

        The attendees of the meeting. Each attendee includes the following fields: status, email, name, organizer

        :return: The attendees of this Meeting.
        :rtype: List[EmbeddedAttendeeResource]
        """
        return self._attendees

    @attendees.setter
    def attendees(self, attendees):
        """Sets the attendees of this Meeting.

        The attendees of the meeting. Each attendee includes the following fields: status, email, name, organizer

        :param attendees: The attendees of this Meeting.
        :type attendees: List[EmbeddedAttendeeResource]
        """

        self._attendees = attendees

    @property
    def booked_by_meetings_settings(self):
        """Gets the booked_by_meetings_settings of this Meeting.


        :return: The booked_by_meetings_settings of this Meeting.
        :rtype: EventMeetingSetting
        """
        return self._booked_by_meetings_settings

    @booked_by_meetings_settings.setter
    def booked_by_meetings_settings(self, booked_by_meetings_settings):
        """Sets the booked_by_meetings_settings of this Meeting.


        :param booked_by_meetings_settings: The booked_by_meetings_settings of this Meeting.
        :type booked_by_meetings_settings: EventMeetingSetting
        """

        self._booked_by_meetings_settings = booked_by_meetings_settings

    @property
    def booked_by_user(self):
        """Gets the booked_by_user of this Meeting.


        :return: The booked_by_user of this Meeting.
        :rtype: EmbeddedResource
        """
        return self._booked_by_user

    @booked_by_user.setter
    def booked_by_user(self, booked_by_user):
        """Sets the booked_by_user of this Meeting.


        :param booked_by_user: The booked_by_user of this Meeting.
        :type booked_by_user: EmbeddedResource
        """

        self._booked_by_user = booked_by_user

    @property
    def cadence(self):
        """Gets the cadence of this Meeting.


        :return: The cadence of this Meeting.
        :rtype: EmbeddedResource
        """
        return self._cadence

    @cadence.setter
    def cadence(self, cadence):
        """Sets the cadence of this Meeting.


        :param cadence: The cadence of this Meeting.
        :type cadence: EmbeddedResource
        """

        self._cadence = cadence

    @property
    def calendar_id(self):
        """Gets the calendar_id of this Meeting.

        Calendar ID of the meeting owner

        :return: The calendar_id of this Meeting.
        :rtype: str
        """
        return self._calendar_id

    @calendar_id.setter
    def calendar_id(self, calendar_id):
        """Sets the calendar_id of this Meeting.

        Calendar ID of the meeting owner

        :param calendar_id: The calendar_id of this Meeting.
        :type calendar_id: str
        """

        self._calendar_id = calendar_id

    @property
    def calendar_type(self):
        """Gets the calendar_type of this Meeting.

        Calendar type of the meeting owner. Possible values are: gmail, azure, nylas, linkedin_azure, cerebro, external

        :return: The calendar_type of this Meeting.
        :rtype: str
        """
        return self._calendar_type

    @calendar_type.setter
    def calendar_type(self, calendar_type):
        """Sets the calendar_type of this Meeting.

        Calendar type of the meeting owner. Possible values are: gmail, azure, nylas, linkedin_azure, cerebro, external

        :param calendar_type: The calendar_type of this Meeting.
        :type calendar_type: str
        """

        self._calendar_type = calendar_type

    @property
    def canceled_at(self):
        """Gets the canceled_at of this Meeting.

        Datetime of when the meeting was canceled

        :return: The canceled_at of this Meeting.
        :rtype: date
        """
        return self._canceled_at

    @canceled_at.setter
    def canceled_at(self, canceled_at):
        """Sets the canceled_at of this Meeting.

        Datetime of when the meeting was canceled

        :param canceled_at: The canceled_at of this Meeting.
        :type canceled_at: date
        """

        self._canceled_at = canceled_at

    @property
    def created_at(self):
        """Gets the created_at of this Meeting.

        Datetime of when the meeting was created

        :return: The created_at of this Meeting.
        :rtype: date
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Meeting.

        Datetime of when the meeting was created

        :param created_at: The created_at of this Meeting.
        :type created_at: date
        """

        self._created_at = created_at

    @property
    def crm_custom_fields(self):
        """Gets the crm_custom_fields of this Meeting.

        List of crm custom fields which will be logged to SFDC

        :return: The crm_custom_fields of this Meeting.
        :rtype: object
        """
        return self._crm_custom_fields

    @crm_custom_fields.setter
    def crm_custom_fields(self, crm_custom_fields):
        """Sets the crm_custom_fields of this Meeting.

        List of crm custom fields which will be logged to SFDC

        :param crm_custom_fields: The crm_custom_fields of this Meeting.
        :type crm_custom_fields: object
        """

        self._crm_custom_fields = crm_custom_fields

    @property
    def crm_references(self):
        """Gets the crm_references of this Meeting.

        List of crm references associated with the meeting

        :return: The crm_references of this Meeting.
        :rtype: object
        """
        return self._crm_references

    @crm_references.setter
    def crm_references(self, crm_references):
        """Sets the crm_references of this Meeting.

        List of crm references associated with the meeting

        :param crm_references: The crm_references of this Meeting.
        :type crm_references: object
        """

        self._crm_references = crm_references

    @property
    def description(self):
        """Gets the description of this Meeting.

        Description of the meeting

        :return: The description of this Meeting.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Meeting.

        Description of the meeting

        :param description: The description of this Meeting.
        :type description: str
        """

        self._description = description

    @property
    def end_time(self):
        """Gets the end_time of this Meeting.

        End time of the meeting

        :return: The end_time of this Meeting.
        :rtype: date
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this Meeting.

        End time of the meeting

        :param end_time: The end_time of this Meeting.
        :type end_time: date
        """

        self._end_time = end_time

    @property
    def event_id(self):
        """Gets the event_id of this Meeting.

        ID of the meeting created by target calendar

        :return: The event_id of this Meeting.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this Meeting.

        ID of the meeting created by target calendar

        :param event_id: The event_id of this Meeting.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def event_source(self):
        """Gets the event_source of this Meeting.

        Source of the meeting. Possible values are: 'external' - The event was synced to Salesloft platform via Calendar Sync, 'internal' - The event was created via Salesloft platform

        :return: The event_source of this Meeting.
        :rtype: str
        """
        return self._event_source

    @event_source.setter
    def event_source(self, event_source):
        """Sets the event_source of this Meeting.

        Source of the meeting. Possible values are: 'external' - The event was synced to Salesloft platform via Calendar Sync, 'internal' - The event was created via Salesloft platform

        :param event_source: The event_source of this Meeting.
        :type event_source: str
        """

        self._event_source = event_source

    @property
    def guests(self):
        """Gets the guests of this Meeting.

        The list of attendees emails of the meeting

        :return: The guests of this Meeting.
        :rtype: List[str]
        """
        return self._guests

    @guests.setter
    def guests(self, guests):
        """Sets the guests of this Meeting.

        The list of attendees emails of the meeting

        :param guests: The guests of this Meeting.
        :type guests: List[str]
        """

        self._guests = guests

    @property
    def i_cal_uid(self):
        """Gets the i_cal_uid of this Meeting.

        UID of the meeting provided by target calendar provider

        :return: The i_cal_uid of this Meeting.
        :rtype: str
        """
        return self._i_cal_uid

    @i_cal_uid.setter
    def i_cal_uid(self, i_cal_uid):
        """Sets the i_cal_uid of this Meeting.

        UID of the meeting provided by target calendar provider

        :param i_cal_uid: The i_cal_uid of this Meeting.
        :type i_cal_uid: str
        """

        self._i_cal_uid = i_cal_uid

    @property
    def id(self):
        """Gets the id of this Meeting.

        ID of the meeting

        :return: The id of this Meeting.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Meeting.

        ID of the meeting

        :param id: The id of this Meeting.
        :type id: int
        """

        self._id = id

    @property
    def location(self):
        """Gets the location of this Meeting.

        Location of the meeting

        :return: The location of this Meeting.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Meeting.

        Location of the meeting

        :param location: The location of this Meeting.
        :type location: str
        """

        self._location = location

    @property
    def meeting_type(self):
        """Gets the meeting_type of this Meeting.

        Meeting type

        :return: The meeting_type of this Meeting.
        :rtype: str
        """
        return self._meeting_type

    @meeting_type.setter
    def meeting_type(self, meeting_type):
        """Sets the meeting_type of this Meeting.

        Meeting type

        :param meeting_type: The meeting_type of this Meeting.
        :type meeting_type: str
        """

        self._meeting_type = meeting_type

    @property
    def no_show(self):
        """Gets the no_show of this Meeting.

        Whether the meeting is a No Show meeting

        :return: The no_show of this Meeting.
        :rtype: bool
        """
        return self._no_show

    @no_show.setter
    def no_show(self, no_show):
        """Sets the no_show of this Meeting.

        Whether the meeting is a No Show meeting

        :param no_show: The no_show of this Meeting.
        :type no_show: bool
        """

        self._no_show = no_show

    @property
    def owned_by_meetings_settings(self):
        """Gets the owned_by_meetings_settings of this Meeting.


        :return: The owned_by_meetings_settings of this Meeting.
        :rtype: EventMeetingSetting
        """
        return self._owned_by_meetings_settings

    @owned_by_meetings_settings.setter
    def owned_by_meetings_settings(self, owned_by_meetings_settings):
        """Sets the owned_by_meetings_settings of this Meeting.


        :param owned_by_meetings_settings: The owned_by_meetings_settings of this Meeting.
        :type owned_by_meetings_settings: EventMeetingSetting
        """

        self._owned_by_meetings_settings = owned_by_meetings_settings

    @property
    def person(self):
        """Gets the person of this Meeting.


        :return: The person of this Meeting.
        :rtype: EmbeddedResource
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this Meeting.


        :param person: The person of this Meeting.
        :type person: EmbeddedResource
        """

        self._person = person

    @property
    def recipient_email(self):
        """Gets the recipient_email of this Meeting.

        Email of the meeting invite recipient

        :return: The recipient_email of this Meeting.
        :rtype: str
        """
        return self._recipient_email

    @recipient_email.setter
    def recipient_email(self, recipient_email):
        """Sets the recipient_email of this Meeting.

        Email of the meeting invite recipient

        :param recipient_email: The recipient_email of this Meeting.
        :type recipient_email: str
        """

        self._recipient_email = recipient_email

    @property
    def recipient_name(self):
        """Gets the recipient_name of this Meeting.

        Name of the meeting invite recipient

        :return: The recipient_name of this Meeting.
        :rtype: str
        """
        return self._recipient_name

    @recipient_name.setter
    def recipient_name(self, recipient_name):
        """Sets the recipient_name of this Meeting.

        Name of the meeting invite recipient

        :param recipient_name: The recipient_name of this Meeting.
        :type recipient_name: str
        """

        self._recipient_name = recipient_name

    @property
    def reschedule_status(self):
        """Gets the reschedule_status of this Meeting.

        Status of the meeting rescheduling progress. Possible values are: pending, booked, failed, retry

        :return: The reschedule_status of this Meeting.
        :rtype: str
        """
        return self._reschedule_status

    @reschedule_status.setter
    def reschedule_status(self, reschedule_status):
        """Sets the reschedule_status of this Meeting.

        Status of the meeting rescheduling progress. Possible values are: pending, booked, failed, retry

        :param reschedule_status: The reschedule_status of this Meeting.
        :type reschedule_status: str
        """

        self._reschedule_status = reschedule_status

    @property
    def start_time(self):
        """Gets the start_time of this Meeting.

        Start time of the meeting

        :return: The start_time of this Meeting.
        :rtype: date
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this Meeting.

        Start time of the meeting

        :param start_time: The start_time of this Meeting.
        :type start_time: date
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this Meeting.

        Status of the meeting. Possible values are: pending, booked, failed, retry

        :return: The status of this Meeting.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Meeting.

        Status of the meeting. Possible values are: pending, booked, failed, retry

        :param status: The status of this Meeting.
        :type status: str
        """

        self._status = status

    @property
    def step(self):
        """Gets the step of this Meeting.


        :return: The step of this Meeting.
        :rtype: EmbeddedResource
        """
        return self._step

    @step.setter
    def step(self, step):
        """Sets the step of this Meeting.


        :param step: The step of this Meeting.
        :type step: EmbeddedResource
        """

        self._step = step

    @property
    def strict_attribution(self):
        """Gets the strict_attribution of this Meeting.

        Strict attribution means that we 100% sure which cadence generate the meeting

        :return: The strict_attribution of this Meeting.
        :rtype: bool
        """
        return self._strict_attribution

    @strict_attribution.setter
    def strict_attribution(self, strict_attribution):
        """Sets the strict_attribution of this Meeting.

        Strict attribution means that we 100% sure which cadence generate the meeting

        :param strict_attribution: The strict_attribution of this Meeting.
        :type strict_attribution: bool
        """

        self._strict_attribution = strict_attribution

    @property
    def task_id(self):
        """Gets the task_id of this Meeting.

        ID of the created task

        :return: The task_id of this Meeting.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this Meeting.

        ID of the created task

        :param task_id: The task_id of this Meeting.
        :type task_id: str
        """

        self._task_id = task_id

    @property
    def title(self):
        """Gets the title of this Meeting.

        Title of the meeting

        :return: The title of this Meeting.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Meeting.

        Title of the meeting

        :param title: The title of this Meeting.
        :type title: str
        """

        self._title = title

    @property
    def updated_at(self):
        """Gets the updated_at of this Meeting.

        Datetime of when the meeting was last updated

        :return: The updated_at of this Meeting.
        :rtype: date
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Meeting.

        Datetime of when the meeting was last updated

        :param updated_at: The updated_at of this Meeting.
        :type updated_at: date
        """

        self._updated_at = updated_at
