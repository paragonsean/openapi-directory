# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_resource import EmbeddedResource
from openapi_server.models.success_counts import SuccessCounts
from openapi_server import util


class Success(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, counts: SuccessCounts=None, created_at: datetime=None, id: int=None, latest_action: EmbeddedResource=None, latest_cadence: EmbeddedResource=None, latest_call: EmbeddedResource=None, latest_email: EmbeddedResource=None, latest_step: EmbeddedResource=None, person: EmbeddedResource=None, succeeded_at: datetime=None, success_window_started_at: datetime=None, updated_at: datetime=None, user: EmbeddedResource=None):
        """Success - a model defined in OpenAPI

        :param counts: The counts of this Success.
        :param created_at: The created_at of this Success.
        :param id: The id of this Success.
        :param latest_action: The latest_action of this Success.
        :param latest_cadence: The latest_cadence of this Success.
        :param latest_call: The latest_call of this Success.
        :param latest_email: The latest_email of this Success.
        :param latest_step: The latest_step of this Success.
        :param person: The person of this Success.
        :param succeeded_at: The succeeded_at of this Success.
        :param success_window_started_at: The success_window_started_at of this Success.
        :param updated_at: The updated_at of this Success.
        :param user: The user of this Success.
        """
        self.openapi_types = {
            'counts': SuccessCounts,
            'created_at': datetime,
            'id': int,
            'latest_action': EmbeddedResource,
            'latest_cadence': EmbeddedResource,
            'latest_call': EmbeddedResource,
            'latest_email': EmbeddedResource,
            'latest_step': EmbeddedResource,
            'person': EmbeddedResource,
            'succeeded_at': datetime,
            'success_window_started_at': datetime,
            'updated_at': datetime,
            'user': EmbeddedResource
        }

        self.attribute_map = {
            'counts': 'counts',
            'created_at': 'created_at',
            'id': 'id',
            'latest_action': 'latest_action',
            'latest_cadence': 'latest_cadence',
            'latest_call': 'latest_call',
            'latest_email': 'latest_email',
            'latest_step': 'latest_step',
            'person': 'person',
            'succeeded_at': 'succeeded_at',
            'success_window_started_at': 'success_window_started_at',
            'updated_at': 'updated_at',
            'user': 'user'
        }

        self._counts = counts
        self._created_at = created_at
        self._id = id
        self._latest_action = latest_action
        self._latest_cadence = latest_cadence
        self._latest_call = latest_call
        self._latest_email = latest_email
        self._latest_step = latest_step
        self._person = person
        self._succeeded_at = succeeded_at
        self._success_window_started_at = success_window_started_at
        self._updated_at = updated_at
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Success':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Success of this Success.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def counts(self):
        """Gets the counts of this Success.


        :return: The counts of this Success.
        :rtype: SuccessCounts
        """
        return self._counts

    @counts.setter
    def counts(self, counts):
        """Sets the counts of this Success.


        :param counts: The counts of this Success.
        :type counts: SuccessCounts
        """

        self._counts = counts

    @property
    def created_at(self):
        """Gets the created_at of this Success.

        Datetime of when the success was created

        :return: The created_at of this Success.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Success.

        Datetime of when the success was created

        :param created_at: The created_at of this Success.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this Success.

        ID of success

        :return: The id of this Success.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Success.

        ID of success

        :param id: The id of this Success.
        :type id: int
        """

        self._id = id

    @property
    def latest_action(self):
        """Gets the latest_action of this Success.


        :return: The latest_action of this Success.
        :rtype: EmbeddedResource
        """
        return self._latest_action

    @latest_action.setter
    def latest_action(self, latest_action):
        """Sets the latest_action of this Success.


        :param latest_action: The latest_action of this Success.
        :type latest_action: EmbeddedResource
        """

        self._latest_action = latest_action

    @property
    def latest_cadence(self):
        """Gets the latest_cadence of this Success.


        :return: The latest_cadence of this Success.
        :rtype: EmbeddedResource
        """
        return self._latest_cadence

    @latest_cadence.setter
    def latest_cadence(self, latest_cadence):
        """Sets the latest_cadence of this Success.


        :param latest_cadence: The latest_cadence of this Success.
        :type latest_cadence: EmbeddedResource
        """

        self._latest_cadence = latest_cadence

    @property
    def latest_call(self):
        """Gets the latest_call of this Success.


        :return: The latest_call of this Success.
        :rtype: EmbeddedResource
        """
        return self._latest_call

    @latest_call.setter
    def latest_call(self, latest_call):
        """Sets the latest_call of this Success.


        :param latest_call: The latest_call of this Success.
        :type latest_call: EmbeddedResource
        """

        self._latest_call = latest_call

    @property
    def latest_email(self):
        """Gets the latest_email of this Success.


        :return: The latest_email of this Success.
        :rtype: EmbeddedResource
        """
        return self._latest_email

    @latest_email.setter
    def latest_email(self, latest_email):
        """Sets the latest_email of this Success.


        :param latest_email: The latest_email of this Success.
        :type latest_email: EmbeddedResource
        """

        self._latest_email = latest_email

    @property
    def latest_step(self):
        """Gets the latest_step of this Success.


        :return: The latest_step of this Success.
        :rtype: EmbeddedResource
        """
        return self._latest_step

    @latest_step.setter
    def latest_step(self, latest_step):
        """Sets the latest_step of this Success.


        :param latest_step: The latest_step of this Success.
        :type latest_step: EmbeddedResource
        """

        self._latest_step = latest_step

    @property
    def person(self):
        """Gets the person of this Success.


        :return: The person of this Success.
        :rtype: EmbeddedResource
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this Success.


        :param person: The person of this Success.
        :type person: EmbeddedResource
        """

        self._person = person

    @property
    def succeeded_at(self):
        """Gets the succeeded_at of this Success.

        Datetime of when the success was recorded

        :return: The succeeded_at of this Success.
        :rtype: datetime
        """
        return self._succeeded_at

    @succeeded_at.setter
    def succeeded_at(self, succeeded_at):
        """Sets the succeeded_at of this Success.

        Datetime of when the success was recorded

        :param succeeded_at: The succeeded_at of this Success.
        :type succeeded_at: datetime
        """

        self._succeeded_at = succeeded_at

    @property
    def success_window_started_at(self):
        """Gets the success_window_started_at of this Success.

        Datetime of when this person was first worked, leading up to the success

        :return: The success_window_started_at of this Success.
        :rtype: datetime
        """
        return self._success_window_started_at

    @success_window_started_at.setter
    def success_window_started_at(self, success_window_started_at):
        """Sets the success_window_started_at of this Success.

        Datetime of when this person was first worked, leading up to the success

        :param success_window_started_at: The success_window_started_at of this Success.
        :type success_window_started_at: datetime
        """

        self._success_window_started_at = success_window_started_at

    @property
    def updated_at(self):
        """Gets the updated_at of this Success.

        Datetime of when the success was last updated

        :return: The updated_at of this Success.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Success.

        Datetime of when the success was last updated

        :param updated_at: The updated_at of this Success.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def user(self):
        """Gets the user of this Success.


        :return: The user of this Success.
        :rtype: EmbeddedResource
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Success.


        :param user: The user of this Success.
        :type user: EmbeddedResource
        """

        self._user = user
