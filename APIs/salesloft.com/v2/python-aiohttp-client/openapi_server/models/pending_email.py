# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_resource import EmbeddedResource
from openapi_server import util


class PendingEmail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, mailbox: str=None, mime_email_payload: EmbeddedResource=None):
        """PendingEmail - a model defined in OpenAPI

        :param id: The id of this PendingEmail.
        :param mailbox: The mailbox of this PendingEmail.
        :param mime_email_payload: The mime_email_payload of this PendingEmail.
        """
        self.openapi_types = {
            'id': int,
            'mailbox': str,
            'mime_email_payload': EmbeddedResource
        }

        self.attribute_map = {
            'id': 'id',
            'mailbox': 'mailbox',
            'mime_email_payload': 'mime_email_payload'
        }

        self._id = id
        self._mailbox = mailbox
        self._mime_email_payload = mime_email_payload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PendingEmail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PendingEmail of this PendingEmail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this PendingEmail.

        ID of the email

        :return: The id of this PendingEmail.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PendingEmail.

        ID of the email

        :param id: The id of this PendingEmail.
        :type id: int
        """

        self._id = id

    @property
    def mailbox(self):
        """Gets the mailbox of this PendingEmail.

        Email Address of the pending email

        :return: The mailbox of this PendingEmail.
        :rtype: str
        """
        return self._mailbox

    @mailbox.setter
    def mailbox(self, mailbox):
        """Sets the mailbox of this PendingEmail.

        Email Address of the pending email

        :param mailbox: The mailbox of this PendingEmail.
        :type mailbox: str
        """

        self._mailbox = mailbox

    @property
    def mime_email_payload(self):
        """Gets the mime_email_payload of this PendingEmail.


        :return: The mime_email_payload of this PendingEmail.
        :rtype: EmbeddedResource
        """
        return self._mime_email_payload

    @mime_email_payload.setter
    def mime_email_payload(self, mime_email_payload):
        """Sets the mime_email_payload of this PendingEmail.


        :param mime_email_payload: The mime_email_payload of this PendingEmail.
        :type mime_email_payload: EmbeddedResource
        """

        self._mime_email_payload = mime_email_payload
