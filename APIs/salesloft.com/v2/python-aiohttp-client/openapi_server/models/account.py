# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_account_counts import EmbeddedAccountCounts
from openapi_server.models.embedded_resource import EmbeddedResource
from openapi_server import util


class Account(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_tier: EmbeddedResource=None, archived_at: datetime=None, city: str=None, company_stage: EmbeddedResource=None, company_type: str=None, conversational_name: str=None, country: str=None, counts: EmbeddedAccountCounts=None, created_at: datetime=None, creator: EmbeddedResource=None, crm_id: str=None, crm_object_type: str=None, crm_url: str=None, custom_fields: object=None, description: str=None, do_not_contact: bool=None, domain: str=None, founded: str=None, id: int=None, industry: str=None, last_contacted_at: datetime=None, last_contacted_by: EmbeddedResource=None, last_contacted_person: EmbeddedResource=None, last_contacted_type: str=None, linkedin_url: str=None, locale: str=None, name: str=None, owner: EmbeddedResource=None, owner_crm_id: str=None, phone: str=None, postal_code: str=None, revenue_range: str=None, size: str=None, state: str=None, street: str=None, tags: List[str]=None, twitter_handle: str=None, updated_at: datetime=None, user_relationships: object=None, website: str=None):
        """Account - a model defined in OpenAPI

        :param account_tier: The account_tier of this Account.
        :param archived_at: The archived_at of this Account.
        :param city: The city of this Account.
        :param company_stage: The company_stage of this Account.
        :param company_type: The company_type of this Account.
        :param conversational_name: The conversational_name of this Account.
        :param country: The country of this Account.
        :param counts: The counts of this Account.
        :param created_at: The created_at of this Account.
        :param creator: The creator of this Account.
        :param crm_id: The crm_id of this Account.
        :param crm_object_type: The crm_object_type of this Account.
        :param crm_url: The crm_url of this Account.
        :param custom_fields: The custom_fields of this Account.
        :param description: The description of this Account.
        :param do_not_contact: The do_not_contact of this Account.
        :param domain: The domain of this Account.
        :param founded: The founded of this Account.
        :param id: The id of this Account.
        :param industry: The industry of this Account.
        :param last_contacted_at: The last_contacted_at of this Account.
        :param last_contacted_by: The last_contacted_by of this Account.
        :param last_contacted_person: The last_contacted_person of this Account.
        :param last_contacted_type: The last_contacted_type of this Account.
        :param linkedin_url: The linkedin_url of this Account.
        :param locale: The locale of this Account.
        :param name: The name of this Account.
        :param owner: The owner of this Account.
        :param owner_crm_id: The owner_crm_id of this Account.
        :param phone: The phone of this Account.
        :param postal_code: The postal_code of this Account.
        :param revenue_range: The revenue_range of this Account.
        :param size: The size of this Account.
        :param state: The state of this Account.
        :param street: The street of this Account.
        :param tags: The tags of this Account.
        :param twitter_handle: The twitter_handle of this Account.
        :param updated_at: The updated_at of this Account.
        :param user_relationships: The user_relationships of this Account.
        :param website: The website of this Account.
        """
        self.openapi_types = {
            'account_tier': EmbeddedResource,
            'archived_at': datetime,
            'city': str,
            'company_stage': EmbeddedResource,
            'company_type': str,
            'conversational_name': str,
            'country': str,
            'counts': EmbeddedAccountCounts,
            'created_at': datetime,
            'creator': EmbeddedResource,
            'crm_id': str,
            'crm_object_type': str,
            'crm_url': str,
            'custom_fields': object,
            'description': str,
            'do_not_contact': bool,
            'domain': str,
            'founded': str,
            'id': int,
            'industry': str,
            'last_contacted_at': datetime,
            'last_contacted_by': EmbeddedResource,
            'last_contacted_person': EmbeddedResource,
            'last_contacted_type': str,
            'linkedin_url': str,
            'locale': str,
            'name': str,
            'owner': EmbeddedResource,
            'owner_crm_id': str,
            'phone': str,
            'postal_code': str,
            'revenue_range': str,
            'size': str,
            'state': str,
            'street': str,
            'tags': List[str],
            'twitter_handle': str,
            'updated_at': datetime,
            'user_relationships': object,
            'website': str
        }

        self.attribute_map = {
            'account_tier': 'account_tier',
            'archived_at': 'archived_at',
            'city': 'city',
            'company_stage': 'company_stage',
            'company_type': 'company_type',
            'conversational_name': 'conversational_name',
            'country': 'country',
            'counts': 'counts',
            'created_at': 'created_at',
            'creator': 'creator',
            'crm_id': 'crm_id',
            'crm_object_type': 'crm_object_type',
            'crm_url': 'crm_url',
            'custom_fields': 'custom_fields',
            'description': 'description',
            'do_not_contact': 'do_not_contact',
            'domain': 'domain',
            'founded': 'founded',
            'id': 'id',
            'industry': 'industry',
            'last_contacted_at': 'last_contacted_at',
            'last_contacted_by': 'last_contacted_by',
            'last_contacted_person': 'last_contacted_person',
            'last_contacted_type': 'last_contacted_type',
            'linkedin_url': 'linkedin_url',
            'locale': 'locale',
            'name': 'name',
            'owner': 'owner',
            'owner_crm_id': 'owner_crm_id',
            'phone': 'phone',
            'postal_code': 'postal_code',
            'revenue_range': 'revenue_range',
            'size': 'size',
            'state': 'state',
            'street': 'street',
            'tags': 'tags',
            'twitter_handle': 'twitter_handle',
            'updated_at': 'updated_at',
            'user_relationships': 'user_relationships',
            'website': 'website'
        }

        self._account_tier = account_tier
        self._archived_at = archived_at
        self._city = city
        self._company_stage = company_stage
        self._company_type = company_type
        self._conversational_name = conversational_name
        self._country = country
        self._counts = counts
        self._created_at = created_at
        self._creator = creator
        self._crm_id = crm_id
        self._crm_object_type = crm_object_type
        self._crm_url = crm_url
        self._custom_fields = custom_fields
        self._description = description
        self._do_not_contact = do_not_contact
        self._domain = domain
        self._founded = founded
        self._id = id
        self._industry = industry
        self._last_contacted_at = last_contacted_at
        self._last_contacted_by = last_contacted_by
        self._last_contacted_person = last_contacted_person
        self._last_contacted_type = last_contacted_type
        self._linkedin_url = linkedin_url
        self._locale = locale
        self._name = name
        self._owner = owner
        self._owner_crm_id = owner_crm_id
        self._phone = phone
        self._postal_code = postal_code
        self._revenue_range = revenue_range
        self._size = size
        self._state = state
        self._street = street
        self._tags = tags
        self._twitter_handle = twitter_handle
        self._updated_at = updated_at
        self._user_relationships = user_relationships
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Account of this Account.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_tier(self):
        """Gets the account_tier of this Account.


        :return: The account_tier of this Account.
        :rtype: EmbeddedResource
        """
        return self._account_tier

    @account_tier.setter
    def account_tier(self, account_tier):
        """Sets the account_tier of this Account.


        :param account_tier: The account_tier of this Account.
        :type account_tier: EmbeddedResource
        """

        self._account_tier = account_tier

    @property
    def archived_at(self):
        """Gets the archived_at of this Account.

        Datetime of when the Account was archived, if archived

        :return: The archived_at of this Account.
        :rtype: datetime
        """
        return self._archived_at

    @archived_at.setter
    def archived_at(self, archived_at):
        """Sets the archived_at of this Account.

        Datetime of when the Account was archived, if archived

        :param archived_at: The archived_at of this Account.
        :type archived_at: datetime
        """

        self._archived_at = archived_at

    @property
    def city(self):
        """Gets the city of this Account.

        City

        :return: The city of this Account.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Account.

        City

        :param city: The city of this Account.
        :type city: str
        """

        self._city = city

    @property
    def company_stage(self):
        """Gets the company_stage of this Account.


        :return: The company_stage of this Account.
        :rtype: EmbeddedResource
        """
        return self._company_stage

    @company_stage.setter
    def company_stage(self, company_stage):
        """Sets the company_stage of this Account.


        :param company_stage: The company_stage of this Account.
        :type company_stage: EmbeddedResource
        """

        self._company_stage = company_stage

    @property
    def company_type(self):
        """Gets the company_type of this Account.

        Type of the Account's company

        :return: The company_type of this Account.
        :rtype: str
        """
        return self._company_type

    @company_type.setter
    def company_type(self, company_type):
        """Sets the company_type of this Account.

        Type of the Account's company

        :param company_type: The company_type of this Account.
        :type company_type: str
        """

        self._company_type = company_type

    @property
    def conversational_name(self):
        """Gets the conversational_name of this Account.

        Conversational name of the Account

        :return: The conversational_name of this Account.
        :rtype: str
        """
        return self._conversational_name

    @conversational_name.setter
    def conversational_name(self, conversational_name):
        """Sets the conversational_name of this Account.

        Conversational name of the Account

        :param conversational_name: The conversational_name of this Account.
        :type conversational_name: str
        """

        self._conversational_name = conversational_name

    @property
    def country(self):
        """Gets the country of this Account.

        Country

        :return: The country of this Account.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Account.

        Country

        :param country: The country of this Account.
        :type country: str
        """

        self._country = country

    @property
    def counts(self):
        """Gets the counts of this Account.


        :return: The counts of this Account.
        :rtype: EmbeddedAccountCounts
        """
        return self._counts

    @counts.setter
    def counts(self, counts):
        """Sets the counts of this Account.


        :param counts: The counts of this Account.
        :type counts: EmbeddedAccountCounts
        """

        self._counts = counts

    @property
    def created_at(self):
        """Gets the created_at of this Account.

        Datetime of when the Account was created

        :return: The created_at of this Account.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Account.

        Datetime of when the Account was created

        :param created_at: The created_at of this Account.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def creator(self):
        """Gets the creator of this Account.


        :return: The creator of this Account.
        :rtype: EmbeddedResource
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this Account.


        :param creator: The creator of this Account.
        :type creator: EmbeddedResource
        """

        self._creator = creator

    @property
    def crm_id(self):
        """Gets the crm_id of this Account.

        CRM ID

        :return: The crm_id of this Account.
        :rtype: str
        """
        return self._crm_id

    @crm_id.setter
    def crm_id(self, crm_id):
        """Sets the crm_id of this Account.

        CRM ID

        :param crm_id: The crm_id of this Account.
        :type crm_id: str
        """

        self._crm_id = crm_id

    @property
    def crm_object_type(self):
        """Gets the crm_object_type of this Account.

        CRM object type

        :return: The crm_object_type of this Account.
        :rtype: str
        """
        return self._crm_object_type

    @crm_object_type.setter
    def crm_object_type(self, crm_object_type):
        """Sets the crm_object_type of this Account.

        CRM object type

        :param crm_object_type: The crm_object_type of this Account.
        :type crm_object_type: str
        """

        self._crm_object_type = crm_object_type

    @property
    def crm_url(self):
        """Gets the crm_url of this Account.

        CRM url

        :return: The crm_url of this Account.
        :rtype: str
        """
        return self._crm_url

    @crm_url.setter
    def crm_url(self, crm_url):
        """Sets the crm_url of this Account.

        CRM url

        :param crm_url: The crm_url of this Account.
        :type crm_url: str
        """

        self._crm_url = crm_url

    @property
    def custom_fields(self):
        """Gets the custom_fields of this Account.

        Custom fields are defined by the user's team. Only fields with values are presented in the API.

        :return: The custom_fields of this Account.
        :rtype: object
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this Account.

        Custom fields are defined by the user's team. Only fields with values are presented in the API.

        :param custom_fields: The custom_fields of this Account.
        :type custom_fields: object
        """

        self._custom_fields = custom_fields

    @property
    def description(self):
        """Gets the description of this Account.

        Description

        :return: The description of this Account.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Account.

        Description

        :param description: The description of this Account.
        :type description: str
        """

        self._description = description

    @property
    def do_not_contact(self):
        """Gets the do_not_contact of this Account.

        Whether this company has opted out of communications. Do not contact someone at this company when this is set to true

        :return: The do_not_contact of this Account.
        :rtype: bool
        """
        return self._do_not_contact

    @do_not_contact.setter
    def do_not_contact(self, do_not_contact):
        """Sets the do_not_contact of this Account.

        Whether this company has opted out of communications. Do not contact someone at this company when this is set to true

        :param do_not_contact: The do_not_contact of this Account.
        :type do_not_contact: bool
        """

        self._do_not_contact = do_not_contact

    @property
    def domain(self):
        """Gets the domain of this Account.

        Website domain, not a fully qualified URI

        :return: The domain of this Account.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this Account.

        Website domain, not a fully qualified URI

        :param domain: The domain of this Account.
        :type domain: str
        """

        self._domain = domain

    @property
    def founded(self):
        """Gets the founded of this Account.

        Date or year of founding

        :return: The founded of this Account.
        :rtype: str
        """
        return self._founded

    @founded.setter
    def founded(self, founded):
        """Sets the founded of this Account.

        Date or year of founding

        :param founded: The founded of this Account.
        :type founded: str
        """

        self._founded = founded

    @property
    def id(self):
        """Gets the id of this Account.

        ID of Account

        :return: The id of this Account.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Account.

        ID of Account

        :param id: The id of this Account.
        :type id: int
        """

        self._id = id

    @property
    def industry(self):
        """Gets the industry of this Account.

        Industry

        :return: The industry of this Account.
        :rtype: str
        """
        return self._industry

    @industry.setter
    def industry(self, industry):
        """Sets the industry of this Account.

        Industry

        :param industry: The industry of this Account.
        :type industry: str
        """

        self._industry = industry

    @property
    def last_contacted_at(self):
        """Gets the last_contacted_at of this Account.

        Datetime this Account was last contacted

        :return: The last_contacted_at of this Account.
        :rtype: datetime
        """
        return self._last_contacted_at

    @last_contacted_at.setter
    def last_contacted_at(self, last_contacted_at):
        """Sets the last_contacted_at of this Account.

        Datetime this Account was last contacted

        :param last_contacted_at: The last_contacted_at of this Account.
        :type last_contacted_at: datetime
        """

        self._last_contacted_at = last_contacted_at

    @property
    def last_contacted_by(self):
        """Gets the last_contacted_by of this Account.


        :return: The last_contacted_by of this Account.
        :rtype: EmbeddedResource
        """
        return self._last_contacted_by

    @last_contacted_by.setter
    def last_contacted_by(self, last_contacted_by):
        """Sets the last_contacted_by of this Account.


        :param last_contacted_by: The last_contacted_by of this Account.
        :type last_contacted_by: EmbeddedResource
        """

        self._last_contacted_by = last_contacted_by

    @property
    def last_contacted_person(self):
        """Gets the last_contacted_person of this Account.


        :return: The last_contacted_person of this Account.
        :rtype: EmbeddedResource
        """
        return self._last_contacted_person

    @last_contacted_person.setter
    def last_contacted_person(self, last_contacted_person):
        """Sets the last_contacted_person of this Account.


        :param last_contacted_person: The last_contacted_person of this Account.
        :type last_contacted_person: EmbeddedResource
        """

        self._last_contacted_person = last_contacted_person

    @property
    def last_contacted_type(self):
        """Gets the last_contacted_type of this Account.

        The type of the last touch to this Account. Can be call, email, other

        :return: The last_contacted_type of this Account.
        :rtype: str
        """
        return self._last_contacted_type

    @last_contacted_type.setter
    def last_contacted_type(self, last_contacted_type):
        """Sets the last_contacted_type of this Account.

        The type of the last touch to this Account. Can be call, email, other

        :param last_contacted_type: The last_contacted_type of this Account.
        :type last_contacted_type: str
        """

        self._last_contacted_type = last_contacted_type

    @property
    def linkedin_url(self):
        """Gets the linkedin_url of this Account.

        Full LinkedIn url

        :return: The linkedin_url of this Account.
        :rtype: str
        """
        return self._linkedin_url

    @linkedin_url.setter
    def linkedin_url(self, linkedin_url):
        """Sets the linkedin_url of this Account.

        Full LinkedIn url

        :param linkedin_url: The linkedin_url of this Account.
        :type linkedin_url: str
        """

        self._linkedin_url = linkedin_url

    @property
    def locale(self):
        """Gets the locale of this Account.

        Time locale

        :return: The locale of this Account.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this Account.

        Time locale

        :param locale: The locale of this Account.
        :type locale: str
        """

        self._locale = locale

    @property
    def name(self):
        """Gets the name of this Account.

        Account Full Name

        :return: The name of this Account.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Account.

        Account Full Name

        :param name: The name of this Account.
        :type name: str
        """

        self._name = name

    @property
    def owner(self):
        """Gets the owner of this Account.


        :return: The owner of this Account.
        :rtype: EmbeddedResource
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this Account.


        :param owner: The owner of this Account.
        :type owner: EmbeddedResource
        """

        self._owner = owner

    @property
    def owner_crm_id(self):
        """Gets the owner_crm_id of this Account.

        Mapped owner field from the CRM

        :return: The owner_crm_id of this Account.
        :rtype: str
        """
        return self._owner_crm_id

    @owner_crm_id.setter
    def owner_crm_id(self, owner_crm_id):
        """Sets the owner_crm_id of this Account.

        Mapped owner field from the CRM

        :param owner_crm_id: The owner_crm_id of this Account.
        :type owner_crm_id: str
        """

        self._owner_crm_id = owner_crm_id

    @property
    def phone(self):
        """Gets the phone of this Account.

        Phone number without formatting

        :return: The phone of this Account.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Account.

        Phone number without formatting

        :param phone: The phone of this Account.
        :type phone: str
        """

        self._phone = phone

    @property
    def postal_code(self):
        """Gets the postal_code of this Account.

        Postal code

        :return: The postal_code of this Account.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this Account.

        Postal code

        :param postal_code: The postal_code of this Account.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def revenue_range(self):
        """Gets the revenue_range of this Account.

        Estimated revenue range

        :return: The revenue_range of this Account.
        :rtype: str
        """
        return self._revenue_range

    @revenue_range.setter
    def revenue_range(self, revenue_range):
        """Sets the revenue_range of this Account.

        Estimated revenue range

        :param revenue_range: The revenue_range of this Account.
        :type revenue_range: str
        """

        self._revenue_range = revenue_range

    @property
    def size(self):
        """Gets the size of this Account.

        Estimated number of people in employment

        :return: The size of this Account.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this Account.

        Estimated number of people in employment

        :param size: The size of this Account.
        :type size: str
        """

        self._size = size

    @property
    def state(self):
        """Gets the state of this Account.

        State

        :return: The state of this Account.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Account.

        State

        :param state: The state of this Account.
        :type state: str
        """

        self._state = state

    @property
    def street(self):
        """Gets the street of this Account.

        Street name and number

        :return: The street of this Account.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this Account.

        Street name and number

        :param street: The street of this Account.
        :type street: str
        """

        self._street = street

    @property
    def tags(self):
        """Gets the tags of this Account.

        All tags applied to this Account

        :return: The tags of this Account.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Account.

        All tags applied to this Account

        :param tags: The tags of this Account.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def twitter_handle(self):
        """Gets the twitter_handle of this Account.

        Twitter handle, with @

        :return: The twitter_handle of this Account.
        :rtype: str
        """
        return self._twitter_handle

    @twitter_handle.setter
    def twitter_handle(self, twitter_handle):
        """Sets the twitter_handle of this Account.

        Twitter handle, with @

        :param twitter_handle: The twitter_handle of this Account.
        :type twitter_handle: str
        """

        self._twitter_handle = twitter_handle

    @property
    def updated_at(self):
        """Gets the updated_at of this Account.

        Datetime of when the Account was last updated

        :return: The updated_at of this Account.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Account.

        Datetime of when the Account was last updated

        :param updated_at: The updated_at of this Account.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def user_relationships(self):
        """Gets the user_relationships of this Account.

        Filters by accounts matching all given user relationship fields, _is_null or _unmapped can be passed to filter accounts with null or unmapped user relationship values

        :return: The user_relationships of this Account.
        :rtype: object
        """
        return self._user_relationships

    @user_relationships.setter
    def user_relationships(self, user_relationships):
        """Sets the user_relationships of this Account.

        Filters by accounts matching all given user relationship fields, _is_null or _unmapped can be passed to filter accounts with null or unmapped user relationship values

        :param user_relationships: The user_relationships of this Account.
        :type user_relationships: object
        """

        self._user_relationships = user_relationships

    @property
    def website(self):
        """Gets the website of this Account.

        Website

        :return: The website of this Account.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Account.

        Website

        :param website: The website of this Account.
        :type website: str
        """

        self._website = website
