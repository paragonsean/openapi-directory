# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkJobResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: str=None, id: int=None, record: object=None, resource: object=None, status: str=None):
        """BulkJobResult - a model defined in OpenAPI

        :param error: The error of this BulkJobResult.
        :param id: The id of this BulkJobResult.
        :param record: The record of this BulkJobResult.
        :param resource: The resource of this BulkJobResult.
        :param status: The status of this BulkJobResult.
        """
        self.openapi_types = {
            'error': str,
            'id': int,
            'record': object,
            'resource': object,
            'status': str
        }

        self.attribute_map = {
            'error': 'error',
            'id': 'id',
            'record': 'record',
            'resource': 'resource',
            'status': 'status'
        }

        self._error = error
        self._id = id
        self._record = record
        self._resource = resource
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkJobResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkJobResult of this BulkJobResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this BulkJobResult.

        Error message for the record that was processed. Will be null if there was no error.

        :return: The error of this BulkJobResult.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this BulkJobResult.

        Error message for the record that was processed. Will be null if there was no error.

        :param error: The error of this BulkJobResult.
        :type error: str
        """

        self._error = error

    @property
    def id(self):
        """Gets the id of this BulkJobResult.

        ID of the record that was processed

        :return: The id of this BulkJobResult.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BulkJobResult.

        ID of the record that was processed

        :param id: The id of this BulkJobResult.
        :type id: int
        """

        self._id = id

    @property
    def record(self):
        """Gets the record of this BulkJobResult.

        The data that was used to process the operation

        :return: The record of this BulkJobResult.
        :rtype: object
        """
        return self._record

    @record.setter
    def record(self, record):
        """Sets the record of this BulkJobResult.

        The data that was used to process the operation

        :param record: The record of this BulkJobResult.
        :type record: object
        """

        self._record = record

    @property
    def resource(self):
        """Gets the resource of this BulkJobResult.

        The object containing the resulting resource from performing the bulk action on this record

        :return: The resource of this BulkJobResult.
        :rtype: object
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this BulkJobResult.

        The object containing the resulting resource from performing the bulk action on this record

        :param resource: The resource of this BulkJobResult.
        :type resource: object
        """

        self._resource = resource

    @property
    def status(self):
        """Gets the status of this BulkJobResult.

        Status of the record that was processed. Will be one of: success, error

        :return: The status of this BulkJobResult.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BulkJobResult.

        Status of the record that was processed. Will be one of: success, error

        :param status: The status of this BulkJobResult.
        :type status: str
        """

        self._status = status
