# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MimeEmailPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, mailbox: str=None, message_id: str=None, raw: str=None):
        """MimeEmailPayload - a model defined in OpenAPI

        :param id: The id of this MimeEmailPayload.
        :param mailbox: The mailbox of this MimeEmailPayload.
        :param message_id: The message_id of this MimeEmailPayload.
        :param raw: The raw of this MimeEmailPayload.
        """
        self.openapi_types = {
            'id': int,
            'mailbox': str,
            'message_id': str,
            'raw': str
        }

        self.attribute_map = {
            'id': 'id',
            'mailbox': 'mailbox',
            'message_id': 'message_id',
            'raw': 'raw'
        }

        self._id = id
        self._mailbox = mailbox
        self._message_id = message_id
        self._raw = raw

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MimeEmailPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MimeEmailPayload of this MimeEmailPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this MimeEmailPayload.

        Email ID

        :return: The id of this MimeEmailPayload.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MimeEmailPayload.

        Email ID

        :param id: The id of this MimeEmailPayload.
        :type id: int
        """

        self._id = id

    @property
    def mailbox(self):
        """Gets the mailbox of this MimeEmailPayload.

        Email Address of Sender's mailbox

        :return: The mailbox of this MimeEmailPayload.
        :rtype: str
        """
        return self._mailbox

    @mailbox.setter
    def mailbox(self, mailbox):
        """Sets the mailbox of this MimeEmailPayload.

        Email Address of Sender's mailbox

        :param mailbox: The mailbox of this MimeEmailPayload.
        :type mailbox: str
        """

        self._mailbox = mailbox

    @property
    def message_id(self):
        """Gets the message_id of this MimeEmailPayload.

        Unique Message ID

        :return: The message_id of this MimeEmailPayload.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this MimeEmailPayload.

        Unique Message ID

        :param message_id: The message_id of this MimeEmailPayload.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def raw(self):
        """Gets the raw of this MimeEmailPayload.

        Base64 encoded MIME email content

        :return: The raw of this MimeEmailPayload.
        :rtype: str
        """
        return self._raw

    @raw.setter
    def raw(self, raw):
        """Sets the raw of this MimeEmailPayload.

        Base64 encoded MIME email content

        :param raw: The raw of this MimeEmailPayload.
        :type raw: str
        """

        self._raw = raw
