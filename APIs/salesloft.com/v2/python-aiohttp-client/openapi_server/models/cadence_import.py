# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_resource import EmbeddedResource
from openapi_server import util


class CadenceImport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cadence: EmbeddedResource=None):
        """CadenceImport - a model defined in OpenAPI

        :param cadence: The cadence of this CadenceImport.
        """
        self.openapi_types = {
            'cadence': EmbeddedResource
        }

        self.attribute_map = {
            'cadence': 'cadence'
        }

        self._cadence = cadence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CadenceImport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CadenceImport of this CadenceImport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cadence(self):
        """Gets the cadence of this CadenceImport.


        :return: The cadence of this CadenceImport.
        :rtype: EmbeddedResource
        """
        return self._cadence

    @cadence.setter
    def cadence(self, cadence):
        """Sets the cadence of this CadenceImport.


        :param cadence: The cadence of this CadenceImport.
        :type cadence: EmbeddedResource
        """

        self._cadence = cadence
