# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivityHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, dynamic_data: object=None, failed_dynamic_resources: object=None, id: int=None, occurred_at: datetime=None, pinned_at: datetime=None, resource_id: int=None, resource_type: int=None, static_data: object=None, type: str=None, updated_at: datetime=None, user_guid: str=None):
        """ActivityHistory - a model defined in OpenAPI

        :param created_at: The created_at of this ActivityHistory.
        :param dynamic_data: The dynamic_data of this ActivityHistory.
        :param failed_dynamic_resources: The failed_dynamic_resources of this ActivityHistory.
        :param id: The id of this ActivityHistory.
        :param occurred_at: The occurred_at of this ActivityHistory.
        :param pinned_at: The pinned_at of this ActivityHistory.
        :param resource_id: The resource_id of this ActivityHistory.
        :param resource_type: The resource_type of this ActivityHistory.
        :param static_data: The static_data of this ActivityHistory.
        :param type: The type of this ActivityHistory.
        :param updated_at: The updated_at of this ActivityHistory.
        :param user_guid: The user_guid of this ActivityHistory.
        """
        self.openapi_types = {
            'created_at': datetime,
            'dynamic_data': object,
            'failed_dynamic_resources': object,
            'id': int,
            'occurred_at': datetime,
            'pinned_at': datetime,
            'resource_id': int,
            'resource_type': int,
            'static_data': object,
            'type': str,
            'updated_at': datetime,
            'user_guid': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'dynamic_data': 'dynamic_data',
            'failed_dynamic_resources': 'failed_dynamic_resources',
            'id': 'id',
            'occurred_at': 'occurred_at',
            'pinned_at': 'pinned_at',
            'resource_id': 'resource_id',
            'resource_type': 'resource_type',
            'static_data': 'static_data',
            'type': 'type',
            'updated_at': 'updated_at',
            'user_guid': 'user_guid'
        }

        self._created_at = created_at
        self._dynamic_data = dynamic_data
        self._failed_dynamic_resources = failed_dynamic_resources
        self._id = id
        self._occurred_at = occurred_at
        self._pinned_at = pinned_at
        self._resource_id = resource_id
        self._resource_type = resource_type
        self._static_data = static_data
        self._type = type
        self._updated_at = updated_at
        self._user_guid = user_guid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityHistory of this ActivityHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this ActivityHistory.

        When this record was created

        :return: The created_at of this ActivityHistory.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ActivityHistory.

        When this record was created

        :param created_at: The created_at of this ActivityHistory.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def dynamic_data(self):
        """Gets the dynamic_data of this ActivityHistory.

        Attributes from associated records. This is specific to the type of activity and may change over time. Not returned for create requests

        :return: The dynamic_data of this ActivityHistory.
        :rtype: object
        """
        return self._dynamic_data

    @dynamic_data.setter
    def dynamic_data(self, dynamic_data):
        """Sets the dynamic_data of this ActivityHistory.

        Attributes from associated records. This is specific to the type of activity and may change over time. Not returned for create requests

        :param dynamic_data: The dynamic_data of this ActivityHistory.
        :type dynamic_data: object
        """

        self._dynamic_data = dynamic_data

    @property
    def failed_dynamic_resources(self):
        """Gets the failed_dynamic_resources of this ActivityHistory.

        A list of remote resource names that failed to load. This is specific to the type of activity and may change over time. Not returned for create requests

        :return: The failed_dynamic_resources of this ActivityHistory.
        :rtype: object
        """
        return self._failed_dynamic_resources

    @failed_dynamic_resources.setter
    def failed_dynamic_resources(self, failed_dynamic_resources):
        """Sets the failed_dynamic_resources of this ActivityHistory.

        A list of remote resource names that failed to load. This is specific to the type of activity and may change over time. Not returned for create requests

        :param failed_dynamic_resources: The failed_dynamic_resources of this ActivityHistory.
        :type failed_dynamic_resources: object
        """

        self._failed_dynamic_resources = failed_dynamic_resources

    @property
    def id(self):
        """Gets the id of this ActivityHistory.

        ID of this activity

        :return: The id of this ActivityHistory.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActivityHistory.

        ID of this activity

        :param id: The id of this ActivityHistory.
        :type id: int
        """

        self._id = id

    @property
    def occurred_at(self):
        """Gets the occurred_at of this ActivityHistory.

        When this activity occurred

        :return: The occurred_at of this ActivityHistory.
        :rtype: datetime
        """
        return self._occurred_at

    @occurred_at.setter
    def occurred_at(self, occurred_at):
        """Sets the occurred_at of this ActivityHistory.

        When this activity occurred

        :param occurred_at: The occurred_at of this ActivityHistory.
        :type occurred_at: datetime
        """

        self._occurred_at = occurred_at

    @property
    def pinned_at(self):
        """Gets the pinned_at of this ActivityHistory.

        When this record was pinned

        :return: The pinned_at of this ActivityHistory.
        :rtype: datetime
        """
        return self._pinned_at

    @pinned_at.setter
    def pinned_at(self, pinned_at):
        """Sets the pinned_at of this ActivityHistory.

        When this record was pinned

        :param pinned_at: The pinned_at of this ActivityHistory.
        :type pinned_at: datetime
        """

        self._pinned_at = pinned_at

    @property
    def resource_id(self):
        """Gets the resource_id of this ActivityHistory.

        ID of the resource this activity is for. It will be a string for the following resource types: crm_opportunity

        :return: The resource_id of this ActivityHistory.
        :rtype: int
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ActivityHistory.

        ID of the resource this activity is for. It will be a string for the following resource types: crm_opportunity

        :param resource_id: The resource_id of this ActivityHistory.
        :type resource_id: int
        """

        self._resource_id = resource_id

    @property
    def resource_type(self):
        """Gets the resource_type of this ActivityHistory.

        Type of the resource this activity is for. One of: account, person

        :return: The resource_type of this ActivityHistory.
        :rtype: int
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ActivityHistory.

        Type of the resource this activity is for. One of: account, person

        :param resource_type: The resource_type of this ActivityHistory.
        :type resource_type: int
        """

        self._resource_type = resource_type

    @property
    def static_data(self):
        """Gets the static_data of this ActivityHistory.

        The static data for this activity

        :return: The static_data of this ActivityHistory.
        :rtype: object
        """
        return self._static_data

    @static_data.setter
    def static_data(self, static_data):
        """Sets the static_data of this ActivityHistory.

        The static data for this activity

        :param static_data: The static_data of this ActivityHistory.
        :type static_data: object
        """

        self._static_data = static_data

    @property
    def type(self):
        """Gets the type of this ActivityHistory.

        The type of activity

        :return: The type of this ActivityHistory.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ActivityHistory.

        The type of activity

        :param type: The type of this ActivityHistory.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this ActivityHistory.

        When this record was updated

        :return: The updated_at of this ActivityHistory.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ActivityHistory.

        When this record was updated

        :param updated_at: The updated_at of this ActivityHistory.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def user_guid(self):
        """Gets the user_guid of this ActivityHistory.

        UUID of the user this activity is for

        :return: The user_guid of this ActivityHistory.
        :rtype: str
        """
        return self._user_guid

    @user_guid.setter
    def user_guid(self, user_guid):
        """Sets the user_guid of this ActivityHistory.

        UUID of the user this activity is for

        :param user_guid: The user_guid of this ActivityHistory.
        :type user_guid: str
        """

        self._user_guid = user_guid
