# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_resource import EmbeddedResource
from openapi_server import util


class CallerId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name: str=None, display_name: str=None, person: EmbeddedResource=None, title: str=None):
        """CallerId - a model defined in OpenAPI

        :param account_name: The account_name of this CallerId.
        :param display_name: The display_name of this CallerId.
        :param person: The person of this CallerId.
        :param title: The title of this CallerId.
        """
        self.openapi_types = {
            'account_name': str,
            'display_name': str,
            'person': EmbeddedResource,
            'title': str
        }

        self.attribute_map = {
            'account_name': 'account_name',
            'display_name': 'display_name',
            'person': 'person',
            'title': 'title'
        }

        self._account_name = account_name
        self._display_name = display_name
        self._person = person
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CallerId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CallerId of this CallerId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self):
        """Gets the account_name of this CallerId.

        The account of the person calling

        :return: The account_name of this CallerId.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this CallerId.

        The account of the person calling

        :param account_name: The account_name of this CallerId.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def display_name(self):
        """Gets the display_name of this CallerId.

        The name of the person calling

        :return: The display_name of this CallerId.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CallerId.

        The name of the person calling

        :param display_name: The display_name of this CallerId.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def person(self):
        """Gets the person of this CallerId.


        :return: The person of this CallerId.
        :rtype: EmbeddedResource
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this CallerId.


        :param person: The person of this CallerId.
        :type person: EmbeddedResource
        """

        self._person = person

    @property
    def title(self):
        """Gets the title of this CallerId.

        The title of the person calling

        :return: The title of this CallerId.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CallerId.

        The title of the person calling

        :param title: The title of this CallerId.
        :type title: str
        """

        self._title = title
