# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_resource import EmbeddedResource
from openapi_server import util


class PhoneNumberAssignment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, number: str=None, user: EmbeddedResource=None):
        """PhoneNumberAssignment - a model defined in OpenAPI

        :param id: The id of this PhoneNumberAssignment.
        :param number: The number of this PhoneNumberAssignment.
        :param user: The user of this PhoneNumberAssignment.
        """
        self.openapi_types = {
            'id': int,
            'number': str,
            'user': EmbeddedResource
        }

        self.attribute_map = {
            'id': 'id',
            'number': 'number',
            'user': 'user'
        }

        self._id = id
        self._number = number
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhoneNumberAssignment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhoneNumberAssignment of this PhoneNumberAssignment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this PhoneNumberAssignment.

        PhoneNumberAssignment ID

        :return: The id of this PhoneNumberAssignment.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PhoneNumberAssignment.

        PhoneNumberAssignment ID

        :param id: The id of this PhoneNumberAssignment.
        :type id: int
        """

        self._id = id

    @property
    def number(self):
        """Gets the number of this PhoneNumberAssignment.

        The phone number associated with this assignment

        :return: The number of this PhoneNumberAssignment.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this PhoneNumberAssignment.

        The phone number associated with this assignment

        :param number: The number of this PhoneNumberAssignment.
        :type number: str
        """

        self._number = number

    @property
    def user(self):
        """Gets the user of this PhoneNumberAssignment.


        :return: The user of this PhoneNumberAssignment.
        :rtype: EmbeddedResource
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this PhoneNumberAssignment.


        :param user: The user of this PhoneNumberAssignment.
        :type user: EmbeddedResource
        """

        self._user = user
