# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, errors: int=None, finished_at: datetime=None, id: int=None, marked_ready_at: datetime=None, name: str=None, processed: int=None, ready_to_execute: bool=None, scopes: List[object]=None, started_at: datetime=None, state: str=None, total: int=None, type: str=None, updated_at: datetime=None):
        """BulkJob - a model defined in OpenAPI

        :param created_at: The created_at of this BulkJob.
        :param errors: The errors of this BulkJob.
        :param finished_at: The finished_at of this BulkJob.
        :param id: The id of this BulkJob.
        :param marked_ready_at: The marked_ready_at of this BulkJob.
        :param name: The name of this BulkJob.
        :param processed: The processed of this BulkJob.
        :param ready_to_execute: The ready_to_execute of this BulkJob.
        :param scopes: The scopes of this BulkJob.
        :param started_at: The started_at of this BulkJob.
        :param state: The state of this BulkJob.
        :param total: The total of this BulkJob.
        :param type: The type of this BulkJob.
        :param updated_at: The updated_at of this BulkJob.
        """
        self.openapi_types = {
            'created_at': datetime,
            'errors': int,
            'finished_at': datetime,
            'id': int,
            'marked_ready_at': datetime,
            'name': str,
            'processed': int,
            'ready_to_execute': bool,
            'scopes': List[object],
            'started_at': datetime,
            'state': str,
            'total': int,
            'type': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'errors': 'errors',
            'finished_at': 'finished_at',
            'id': 'id',
            'marked_ready_at': 'marked_ready_at',
            'name': 'name',
            'processed': 'processed',
            'ready_to_execute': 'ready_to_execute',
            'scopes': 'scopes',
            'started_at': 'started_at',
            'state': 'state',
            'total': 'total',
            'type': 'type',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._errors = errors
        self._finished_at = finished_at
        self._id = id
        self._marked_ready_at = marked_ready_at
        self._name = name
        self._processed = processed
        self._ready_to_execute = ready_to_execute
        self._scopes = scopes
        self._started_at = started_at
        self._state = state
        self._total = total
        self._type = type
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkJob of this BulkJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this BulkJob.

        When this bulk job was created

        :return: The created_at of this BulkJob.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this BulkJob.

        When this bulk job was created

        :param created_at: The created_at of this BulkJob.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def errors(self):
        """Gets the errors of this BulkJob.

        Number of errored records at the time of request for this Bulk Job

        :return: The errors of this BulkJob.
        :rtype: int
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this BulkJob.

        Number of errored records at the time of request for this Bulk Job

        :param errors: The errors of this BulkJob.
        :type errors: int
        """

        self._errors = errors

    @property
    def finished_at(self):
        """Gets the finished_at of this BulkJob.

        When this bulk job finished processing

        :return: The finished_at of this BulkJob.
        :rtype: datetime
        """
        return self._finished_at

    @finished_at.setter
    def finished_at(self, finished_at):
        """Sets the finished_at of this BulkJob.

        When this bulk job finished processing

        :param finished_at: The finished_at of this BulkJob.
        :type finished_at: datetime
        """

        self._finished_at = finished_at

    @property
    def id(self):
        """Gets the id of this BulkJob.

        ID of this Bulk Job

        :return: The id of this BulkJob.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BulkJob.

        ID of this Bulk Job

        :param id: The id of this BulkJob.
        :type id: int
        """

        self._id = id

    @property
    def marked_ready_at(self):
        """Gets the marked_ready_at of this BulkJob.

        When this bulk job was marked as ready to execute

        :return: The marked_ready_at of this BulkJob.
        :rtype: datetime
        """
        return self._marked_ready_at

    @marked_ready_at.setter
    def marked_ready_at(self, marked_ready_at):
        """Sets the marked_ready_at of this BulkJob.

        When this bulk job was marked as ready to execute

        :param marked_ready_at: The marked_ready_at of this BulkJob.
        :type marked_ready_at: datetime
        """

        self._marked_ready_at = marked_ready_at

    @property
    def name(self):
        """Gets the name of this BulkJob.

        Name of this Bulk Job

        :return: The name of this BulkJob.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BulkJob.

        Name of this Bulk Job

        :param name: The name of this BulkJob.
        :type name: str
        """

        self._name = name

    @property
    def processed(self):
        """Gets the processed of this BulkJob.

        Number of processed records at the time of request for this Bulk Job

        :return: The processed of this BulkJob.
        :rtype: int
        """
        return self._processed

    @processed.setter
    def processed(self, processed):
        """Sets the processed of this BulkJob.

        Number of processed records at the time of request for this Bulk Job

        :param processed: The processed of this BulkJob.
        :type processed: int
        """

        self._processed = processed

    @property
    def ready_to_execute(self):
        """Gets the ready_to_execute of this BulkJob.

        Whether the Bulk Job is ready to be executed

        :return: The ready_to_execute of this BulkJob.
        :rtype: bool
        """
        return self._ready_to_execute

    @ready_to_execute.setter
    def ready_to_execute(self, ready_to_execute):
        """Sets the ready_to_execute of this BulkJob.

        Whether the Bulk Job is ready to be executed

        :param ready_to_execute: The ready_to_execute of this BulkJob.
        :type ready_to_execute: bool
        """

        self._ready_to_execute = ready_to_execute

    @property
    def scopes(self):
        """Gets the scopes of this BulkJob.

        Scopes

        :return: The scopes of this BulkJob.
        :rtype: List[object]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes):
        """Sets the scopes of this BulkJob.

        Scopes

        :param scopes: The scopes of this BulkJob.
        :type scopes: List[object]
        """

        self._scopes = scopes

    @property
    def started_at(self):
        """Gets the started_at of this BulkJob.

        When this bulk job started processing. null until bulk job is done

        :return: The started_at of this BulkJob.
        :rtype: datetime
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this BulkJob.

        When this bulk job started processing. null until bulk job is done

        :param started_at: The started_at of this BulkJob.
        :type started_at: datetime
        """

        self._started_at = started_at

    @property
    def state(self):
        """Gets the state of this BulkJob.

        State of the Bulk Job.  Must be one of: open, executing, done.

        :return: The state of this BulkJob.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this BulkJob.

        State of the Bulk Job.  Must be one of: open, executing, done.

        :param state: The state of this BulkJob.
        :type state: str
        """

        self._state = state

    @property
    def total(self):
        """Gets the total of this BulkJob.

        Number of total records for this Bulk Job

        :return: The total of this BulkJob.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this BulkJob.

        Number of total records for this Bulk Job

        :param total: The total of this BulkJob.
        :type total: int
        """

        self._total = total

    @property
    def type(self):
        """Gets the type of this BulkJob.

        Type of the Bulk Job.

        :return: The type of this BulkJob.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BulkJob.

        Type of the Bulk Job.

        :param type: The type of this BulkJob.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this BulkJob.

        When this bulk job was updated

        :return: The updated_at of this BulkJob.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this BulkJob.

        When this bulk job was updated

        :param updated_at: The updated_at of this BulkJob.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
