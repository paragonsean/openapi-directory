# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_resource import EmbeddedResource
from openapi_server import util


class TeamTemplateAttachment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attachment_file_size: int=None, attachment_id: int=None, download_url: str=None, id: int=None, name: str=None, team_template: EmbeddedResource=None):
        """TeamTemplateAttachment - a model defined in OpenAPI

        :param attachment_file_size: The attachment_file_size of this TeamTemplateAttachment.
        :param attachment_id: The attachment_id of this TeamTemplateAttachment.
        :param download_url: The download_url of this TeamTemplateAttachment.
        :param id: The id of this TeamTemplateAttachment.
        :param name: The name of this TeamTemplateAttachment.
        :param team_template: The team_template of this TeamTemplateAttachment.
        """
        self.openapi_types = {
            'attachment_file_size': int,
            'attachment_id': int,
            'download_url': str,
            'id': int,
            'name': str,
            'team_template': EmbeddedResource
        }

        self.attribute_map = {
            'attachment_file_size': 'attachment_file_size',
            'attachment_id': 'attachment_id',
            'download_url': 'download_url',
            'id': 'id',
            'name': 'name',
            'team_template': 'team_template'
        }

        self._attachment_file_size = attachment_file_size
        self._attachment_id = attachment_id
        self._download_url = download_url
        self._id = id
        self._name = name
        self._team_template = team_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamTemplateAttachment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamTemplateAttachment of this TeamTemplateAttachment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attachment_file_size(self):
        """Gets the attachment_file_size of this TeamTemplateAttachment.

        The size of the attachment

        :return: The attachment_file_size of this TeamTemplateAttachment.
        :rtype: int
        """
        return self._attachment_file_size

    @attachment_file_size.setter
    def attachment_file_size(self, attachment_file_size):
        """Sets the attachment_file_size of this TeamTemplateAttachment.

        The size of the attachment

        :param attachment_file_size: The attachment_file_size of this TeamTemplateAttachment.
        :type attachment_file_size: int
        """

        self._attachment_file_size = attachment_file_size

    @property
    def attachment_id(self):
        """Gets the attachment_id of this TeamTemplateAttachment.

        ID of the team template attachment

        :return: The attachment_id of this TeamTemplateAttachment.
        :rtype: int
        """
        return self._attachment_id

    @attachment_id.setter
    def attachment_id(self, attachment_id):
        """Sets the attachment_id of this TeamTemplateAttachment.

        ID of the team template attachment

        :param attachment_id: The attachment_id of this TeamTemplateAttachment.
        :type attachment_id: int
        """

        self._attachment_id = attachment_id

    @property
    def download_url(self):
        """Gets the download_url of this TeamTemplateAttachment.

        Download url of the attachment

        :return: The download_url of this TeamTemplateAttachment.
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this TeamTemplateAttachment.

        Download url of the attachment

        :param download_url: The download_url of this TeamTemplateAttachment.
        :type download_url: str
        """

        self._download_url = download_url

    @property
    def id(self):
        """Gets the id of this TeamTemplateAttachment.

        ID of team template attachment association

        :return: The id of this TeamTemplateAttachment.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TeamTemplateAttachment.

        ID of team template attachment association

        :param id: The id of this TeamTemplateAttachment.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this TeamTemplateAttachment.

        Name of the attachment

        :return: The name of this TeamTemplateAttachment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TeamTemplateAttachment.

        Name of the attachment

        :param name: The name of this TeamTemplateAttachment.
        :type name: str
        """

        self._name = name

    @property
    def team_template(self):
        """Gets the team_template of this TeamTemplateAttachment.


        :return: The team_template of this TeamTemplateAttachment.
        :rtype: EmbeddedResource
        """
        return self._team_template

    @team_template.setter
    def team_template(self, team_template):
        """Sets the team_template of this TeamTemplateAttachment.


        :param team_template: The team_template of this TeamTemplateAttachment.
        :type team_template: EmbeddedResource
        """

        self._team_template = team_template
