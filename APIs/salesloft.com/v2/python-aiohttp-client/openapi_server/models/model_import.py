# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModelImport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, current_people_count: int=None, id: int=None, imported_people_count: int=None, name: str=None, updated_at: datetime=None):
        """ModelImport - a model defined in OpenAPI

        :param created_at: The created_at of this ModelImport.
        :param current_people_count: The current_people_count of this ModelImport.
        :param id: The id of this ModelImport.
        :param imported_people_count: The imported_people_count of this ModelImport.
        :param name: The name of this ModelImport.
        :param updated_at: The updated_at of this ModelImport.
        """
        self.openapi_types = {
            'created_at': datetime,
            'current_people_count': int,
            'id': int,
            'imported_people_count': int,
            'name': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'current_people_count': 'current_people_count',
            'id': 'id',
            'imported_people_count': 'imported_people_count',
            'name': 'name',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._current_people_count = current_people_count
        self._id = id
        self._imported_people_count = imported_people_count
        self._name = name
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelImport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Import of this ModelImport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this ModelImport.

        Datetime of when the import was created

        :return: The created_at of this ModelImport.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ModelImport.

        Datetime of when the import was created

        :param created_at: The created_at of this ModelImport.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def current_people_count(self):
        """Gets the current_people_count of this ModelImport.

        Count of People that have not been deleted

        :return: The current_people_count of this ModelImport.
        :rtype: int
        """
        return self._current_people_count

    @current_people_count.setter
    def current_people_count(self, current_people_count):
        """Sets the current_people_count of this ModelImport.

        Count of People that have not been deleted

        :param current_people_count: The current_people_count of this ModelImport.
        :type current_people_count: int
        """

        self._current_people_count = current_people_count

    @property
    def id(self):
        """Gets the id of this ModelImport.

        Import ID

        :return: The id of this ModelImport.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ModelImport.

        Import ID

        :param id: The id of this ModelImport.
        :type id: int
        """

        self._id = id

    @property
    def imported_people_count(self):
        """Gets the imported_people_count of this ModelImport.

        Count of People that have ever been on this Import

        :return: The imported_people_count of this ModelImport.
        :rtype: int
        """
        return self._imported_people_count

    @imported_people_count.setter
    def imported_people_count(self, imported_people_count):
        """Sets the imported_people_count of this ModelImport.

        Count of People that have ever been on this Import

        :param imported_people_count: The imported_people_count of this ModelImport.
        :type imported_people_count: int
        """

        self._imported_people_count = imported_people_count

    @property
    def name(self):
        """Gets the name of this ModelImport.

        Name of Import

        :return: The name of this ModelImport.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ModelImport.

        Name of Import

        :param name: The name of this ModelImport.
        :type name: str
        """

        self._name = name

    @property
    def updated_at(self):
        """Gets the updated_at of this ModelImport.

        Datetime of when the import was last updated, ignoring relationship changes

        :return: The updated_at of this ModelImport.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ModelImport.

        Datetime of when the import was last updated, ignoring relationship changes

        :param updated_at: The updated_at of this ModelImport.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
