# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MeetingUrl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: date=None, updated_at: date=None, url: str=None):
        """MeetingUrl - a model defined in OpenAPI

        :param created_at: The created_at of this MeetingUrl.
        :param updated_at: The updated_at of this MeetingUrl.
        :param url: The url of this MeetingUrl.
        """
        self.openapi_types = {
            'created_at': date,
            'updated_at': date,
            'url': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'url': 'url'
        }

        self._created_at = created_at
        self._updated_at = updated_at
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MeetingUrl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MeetingUrl of this MeetingUrl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this MeetingUrl.

        Datetime of when MeetingUrl was created

        :return: The created_at of this MeetingUrl.
        :rtype: date
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MeetingUrl.

        Datetime of when MeetingUrl was created

        :param created_at: The created_at of this MeetingUrl.
        :type created_at: date
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this MeetingUrl.

        Datetime of when MeetingUrl was last updated

        :return: The updated_at of this MeetingUrl.
        :rtype: date
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this MeetingUrl.

        Datetime of when MeetingUrl was last updated

        :param updated_at: The updated_at of this MeetingUrl.
        :type updated_at: date
        """

        self._updated_at = updated_at

    @property
    def url(self):
        """Gets the url of this MeetingUrl.

        Full url of the meeting

        :return: The url of this MeetingUrl.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this MeetingUrl.

        Full url of the meeting

        :param url: The url of this MeetingUrl.
        :type url: str
        """

        self._url = url
