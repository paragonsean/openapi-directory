# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConversationsCall(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, call_created_at: str=None, direction: str=None, duration: float=None, _from: str=None, recording: object=None, to: str=None, user_guid: str=None):
        """ConversationsCall - a model defined in OpenAPI

        :param call_created_at: The call_created_at of this ConversationsCall.
        :param direction: The direction of this ConversationsCall.
        :param duration: The duration of this ConversationsCall.
        :param _from: The _from of this ConversationsCall.
        :param recording: The recording of this ConversationsCall.
        :param to: The to of this ConversationsCall.
        :param user_guid: The user_guid of this ConversationsCall.
        """
        self.openapi_types = {
            'call_created_at': str,
            'direction': str,
            'duration': float,
            '_from': str,
            'recording': object,
            'to': str,
            'user_guid': str
        }

        self.attribute_map = {
            'call_created_at': 'call_created_at',
            'direction': 'direction',
            'duration': 'duration',
            '_from': 'from',
            'recording': 'recording',
            'to': 'to',
            'user_guid': 'user_guid'
        }

        self._call_created_at = call_created_at
        self._direction = direction
        self._duration = duration
        self.__from = _from
        self._recording = recording
        self._to = to
        self._user_guid = user_guid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsCall':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConversationsCall of this ConversationsCall.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def call_created_at(self):
        """Gets the call_created_at of this ConversationsCall.

        Timestamp for when the call started. If not provided, will default to the time the request was received

        :return: The call_created_at of this ConversationsCall.
        :rtype: str
        """
        return self._call_created_at

    @call_created_at.setter
    def call_created_at(self, call_created_at):
        """Sets the call_created_at of this ConversationsCall.

        Timestamp for when the call started. If not provided, will default to the time the request was received

        :param call_created_at: The call_created_at of this ConversationsCall.
        :type call_created_at: str
        """

        self._call_created_at = call_created_at

    @property
    def direction(self):
        """Gets the direction of this ConversationsCall.

        Call direction

        :return: The direction of this ConversationsCall.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this ConversationsCall.

        Call direction

        :param direction: The direction of this ConversationsCall.
        :type direction: str
        """

        self._direction = direction

    @property
    def duration(self):
        """Gets the duration of this ConversationsCall.

        Duration of call in seconds

        :return: The duration of this ConversationsCall.
        :rtype: float
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ConversationsCall.

        Duration of call in seconds

        :param duration: The duration of this ConversationsCall.
        :type duration: float
        """

        self._duration = duration

    @property
    def _from(self):
        """Gets the _from of this ConversationsCall.

        Phone number that call was made from

        :return: The _from of this ConversationsCall.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this ConversationsCall.

        Phone number that call was made from

        :param _from: The _from of this ConversationsCall.
        :type _from: str
        """

        self.__from = _from

    @property
    def recording(self):
        """Gets the recording of this ConversationsCall.

        Object containing recording info including the audio file (.mp3, .wav, .ogg, .m4a)

        :return: The recording of this ConversationsCall.
        :rtype: object
        """
        return self._recording

    @recording.setter
    def recording(self, recording):
        """Sets the recording of this ConversationsCall.

        Object containing recording info including the audio file (.mp3, .wav, .ogg, .m4a)

        :param recording: The recording of this ConversationsCall.
        :type recording: object
        """

        self._recording = recording

    @property
    def to(self):
        """Gets the to of this ConversationsCall.

        Phone number that was called

        :return: The to of this ConversationsCall.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this ConversationsCall.

        Phone number that was called

        :param to: The to of this ConversationsCall.
        :type to: str
        """

        self._to = to

    @property
    def user_guid(self):
        """Gets the user_guid of this ConversationsCall.

        Guid of the Salesloft User to assign the call to. If not provided, will default to the user within the authentication token

        :return: The user_guid of this ConversationsCall.
        :rtype: str
        """
        return self._user_guid

    @user_guid.setter
    def user_guid(self, user_guid):
        """Sets the user_guid of this ConversationsCall.

        Guid of the Salesloft User to assign the call to. If not provided, will default to the user within the authentication token

        :param user_guid: The user_guid of this ConversationsCall.
        :type user_guid: str
        """

        self._user_guid = user_guid
