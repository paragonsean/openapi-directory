/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EmbeddedResource;
import org.openapitools.client.model.PersonCounts;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Person
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:54.467506-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Person {
  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private EmbeddedResource account;

  public static final String SERIALIZED_NAME_BOUNCING = "bouncing";
  @SerializedName(SERIALIZED_NAME_BOUNCING)
  private Boolean bouncing;

  public static final String SERIALIZED_NAME_CADENCES = "cadences";
  @SerializedName(SERIALIZED_NAME_CADENCES)
  private List<EmbeddedResource> cadences = new ArrayList<>();

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_CONTACT_RESTRICTIONS = "contact_restrictions";
  @SerializedName(SERIALIZED_NAME_CONTACT_RESTRICTIONS)
  private List<String> contactRestrictions = new ArrayList<>();

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_COUNTS = "counts";
  @SerializedName(SERIALIZED_NAME_COUNTS)
  private PersonCounts counts;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CRM_ID = "crm_id";
  @SerializedName(SERIALIZED_NAME_CRM_ID)
  private String crmId;

  public static final String SERIALIZED_NAME_CRM_OBJECT_TYPE = "crm_object_type";
  @SerializedName(SERIALIZED_NAME_CRM_OBJECT_TYPE)
  private String crmObjectType;

  public static final String SERIALIZED_NAME_CRM_URL = "crm_url";
  @SerializedName(SERIALIZED_NAME_CRM_URL)
  private String crmUrl;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DO_NOT_CONTACT = "do_not_contact";
  @SerializedName(SERIALIZED_NAME_DO_NOT_CONTACT)
  private Boolean doNotContact;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "email_address";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_EU_RESIDENT = "eu_resident";
  @SerializedName(SERIALIZED_NAME_EU_RESIDENT)
  private Boolean euResident;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_FULL_EMAIL_ADDRESS = "full_email_address";
  @SerializedName(SERIALIZED_NAME_FULL_EMAIL_ADDRESS)
  private String fullEmailAddress;

  public static final String SERIALIZED_NAME_HOME_PHONE = "home_phone";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE)
  private String homePhone;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IMPORT = "import";
  @SerializedName(SERIALIZED_NAME_IMPORT)
  private EmbeddedResource _import;

  public static final String SERIALIZED_NAME_JOB_SENIORITY = "job_seniority";
  @SerializedName(SERIALIZED_NAME_JOB_SENIORITY)
  private String jobSeniority;

  public static final String SERIALIZED_NAME_LAST_COMPLETED_STEP = "last_completed_step";
  @SerializedName(SERIALIZED_NAME_LAST_COMPLETED_STEP)
  private EmbeddedResource lastCompletedStep;

  public static final String SERIALIZED_NAME_LAST_COMPLETED_STEP_CADENCE = "last_completed_step_cadence";
  @SerializedName(SERIALIZED_NAME_LAST_COMPLETED_STEP_CADENCE)
  private EmbeddedResource lastCompletedStepCadence;

  public static final String SERIALIZED_NAME_LAST_CONTACTED_AT = "last_contacted_at";
  @SerializedName(SERIALIZED_NAME_LAST_CONTACTED_AT)
  private OffsetDateTime lastContactedAt;

  public static final String SERIALIZED_NAME_LAST_CONTACTED_BY = "last_contacted_by";
  @SerializedName(SERIALIZED_NAME_LAST_CONTACTED_BY)
  private EmbeddedResource lastContactedBy;

  public static final String SERIALIZED_NAME_LAST_CONTACTED_TYPE = "last_contacted_type";
  @SerializedName(SERIALIZED_NAME_LAST_CONTACTED_TYPE)
  private String lastContactedType;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LAST_REPLIED_AT = "last_replied_at";
  @SerializedName(SERIALIZED_NAME_LAST_REPLIED_AT)
  private OffsetDateTime lastRepliedAt;

  public static final String SERIALIZED_NAME_LINKEDIN_URL = "linkedin_url";
  @SerializedName(SERIALIZED_NAME_LINKEDIN_URL)
  private String linkedinUrl;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_LOCALE_UTC_OFFSET = "locale_utc_offset";
  @SerializedName(SERIALIZED_NAME_LOCALE_UTC_OFFSET)
  private Integer localeUtcOffset;

  public static final String SERIALIZED_NAME_MOBILE_PHONE = "mobile_phone";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE)
  private String mobilePhone;

  public static final String SERIALIZED_NAME_MOST_RECENT_CADENCE = "most_recent_cadence";
  @SerializedName(SERIALIZED_NAME_MOST_RECENT_CADENCE)
  private EmbeddedResource mostRecentCadence;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private EmbeddedResource owner;

  public static final String SERIALIZED_NAME_OWNER_CRM_ID = "owner_crm_id";
  @SerializedName(SERIALIZED_NAME_OWNER_CRM_ID)
  private String ownerCrmId;

  public static final String SERIALIZED_NAME_PERSON_COMPANY_INDUSTRY = "person_company_industry";
  @SerializedName(SERIALIZED_NAME_PERSON_COMPANY_INDUSTRY)
  private String personCompanyIndustry;

  public static final String SERIALIZED_NAME_PERSON_COMPANY_NAME = "person_company_name";
  @SerializedName(SERIALIZED_NAME_PERSON_COMPANY_NAME)
  private String personCompanyName;

  public static final String SERIALIZED_NAME_PERSON_COMPANY_WEBSITE = "person_company_website";
  @SerializedName(SERIALIZED_NAME_PERSON_COMPANY_WEBSITE)
  private String personCompanyWebsite;

  public static final String SERIALIZED_NAME_PERSON_STAGE = "person_stage";
  @SerializedName(SERIALIZED_NAME_PERSON_STAGE)
  private EmbeddedResource personStage;

  public static final String SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS = "personal_email_address";
  @SerializedName(SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS)
  private String personalEmailAddress;

  public static final String SERIALIZED_NAME_PERSONAL_WEBSITE = "personal_website";
  @SerializedName(SERIALIZED_NAME_PERSONAL_WEBSITE)
  private String personalWebsite;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_PHONE_EXTENSION = "phone_extension";
  @SerializedName(SERIALIZED_NAME_PHONE_EXTENSION)
  private String phoneExtension;

  public static final String SERIALIZED_NAME_SECONDARY_EMAIL_ADDRESS = "secondary_email_address";
  @SerializedName(SERIALIZED_NAME_SECONDARY_EMAIL_ADDRESS)
  private String secondaryEmailAddress;

  public static final String SERIALIZED_NAME_STARRED = "starred";
  @SerializedName(SERIALIZED_NAME_STARRED)
  private Boolean starred;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_SUCCESS_COUNT = "success_count";
  @SerializedName(SERIALIZED_NAME_SUCCESS_COUNT)
  private Integer successCount;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TWITTER_HANDLE = "twitter_handle";
  @SerializedName(SERIALIZED_NAME_TWITTER_HANDLE)
  private String twitterHandle;

  public static final String SERIALIZED_NAME_UNTOUCHED = "untouched";
  @SerializedName(SERIALIZED_NAME_UNTOUCHED)
  private Boolean untouched;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_WORK_CITY = "work_city";
  @SerializedName(SERIALIZED_NAME_WORK_CITY)
  private String workCity;

  public static final String SERIALIZED_NAME_WORK_COUNTRY = "work_country";
  @SerializedName(SERIALIZED_NAME_WORK_COUNTRY)
  private String workCountry;

  public static final String SERIALIZED_NAME_WORK_STATE = "work_state";
  @SerializedName(SERIALIZED_NAME_WORK_STATE)
  private String workState;

  public Person() {
  }

  public Person account(EmbeddedResource account) {
    this.account = account;
    return this;
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nullable
  public EmbeddedResource getAccount() {
    return account;
  }

  public void setAccount(EmbeddedResource account) {
    this.account = account;
  }


  public Person bouncing(Boolean bouncing) {
    this.bouncing = bouncing;
    return this;
  }

  /**
   * Whether this person&#39;s current email address has bounced
   * @return bouncing
   */
  @javax.annotation.Nullable
  public Boolean getBouncing() {
    return bouncing;
  }

  public void setBouncing(Boolean bouncing) {
    this.bouncing = bouncing;
  }


  public Person cadences(List<EmbeddedResource> cadences) {
    this.cadences = cadences;
    return this;
  }

  public Person addCadencesItem(EmbeddedResource cadencesItem) {
    if (this.cadences == null) {
      this.cadences = new ArrayList<>();
    }
    this.cadences.add(cadencesItem);
    return this;
  }

  /**
   * The list of active cadences person is added to
   * @return cadences
   */
  @javax.annotation.Nullable
  public List<EmbeddedResource> getCadences() {
    return cadences;
  }

  public void setCadences(List<EmbeddedResource> cadences) {
    this.cadences = cadences;
  }


  public Person city(String city) {
    this.city = city;
    return this;
  }

  /**
   * City
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public Person contactRestrictions(List<String> contactRestrictions) {
    this.contactRestrictions = contactRestrictions;
    return this;
  }

  public Person addContactRestrictionsItem(String contactRestrictionsItem) {
    if (this.contactRestrictions == null) {
      this.contactRestrictions = new ArrayList<>();
    }
    this.contactRestrictions.add(contactRestrictionsItem);
    return this;
  }

  /**
   * Specific methods of communication to prevent for this person. This will prevent individual execution of these communication types as well as automatically skip cadence steps of this communication type for this person in SalesLoft. Values currently accepted: call, email, message
   * @return contactRestrictions
   */
  @javax.annotation.Nullable
  public List<String> getContactRestrictions() {
    return contactRestrictions;
  }

  public void setContactRestrictions(List<String> contactRestrictions) {
    this.contactRestrictions = contactRestrictions;
  }


  public Person country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public Person counts(PersonCounts counts) {
    this.counts = counts;
    return this;
  }

  /**
   * Get counts
   * @return counts
   */
  @javax.annotation.Nullable
  public PersonCounts getCounts() {
    return counts;
  }

  public void setCounts(PersonCounts counts) {
    this.counts = counts;
  }


  public Person createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Datetime of when the person was created
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Person crmId(String crmId) {
    this.crmId = crmId;
    return this;
  }

  /**
   * CRM ID
   * @return crmId
   */
  @javax.annotation.Nullable
  public String getCrmId() {
    return crmId;
  }

  public void setCrmId(String crmId) {
    this.crmId = crmId;
  }


  public Person crmObjectType(String crmObjectType) {
    this.crmObjectType = crmObjectType;
    return this;
  }

  /**
   * CRM object type
   * @return crmObjectType
   */
  @javax.annotation.Nullable
  public String getCrmObjectType() {
    return crmObjectType;
  }

  public void setCrmObjectType(String crmObjectType) {
    this.crmObjectType = crmObjectType;
  }


  public Person crmUrl(String crmUrl) {
    this.crmUrl = crmUrl;
    return this;
  }

  /**
   * CRM url
   * @return crmUrl
   */
  @javax.annotation.Nullable
  public String getCrmUrl() {
    return crmUrl;
  }

  public void setCrmUrl(String crmUrl) {
    this.crmUrl = crmUrl;
  }


  public Person customFields(Object customFields) {
    this.customFields = customFields;
    return this;
  }

  /**
   * Custom fields are defined by the user&#39;s team. Only fields with values are presented in the API.
   * @return customFields
   */
  @javax.annotation.Nullable
  public Object getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public Person displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Either the full name or the email address. Use this when showing a person&#39;s name
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Person doNotContact(Boolean doNotContact) {
    this.doNotContact = doNotContact;
    return this;
  }

  /**
   * Whether or not this person has opted out of all communication. Setting this value to true prevents this person from being called, emailed, or added to a cadence in SalesLoft. If this person is currently in a cadence, they will be removed.
   * @return doNotContact
   */
  @javax.annotation.Nullable
  public Boolean getDoNotContact() {
    return doNotContact;
  }

  public void setDoNotContact(Boolean doNotContact) {
    this.doNotContact = doNotContact;
  }


  public Person emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Email address
   * @return emailAddress
   */
  @javax.annotation.Nullable
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public Person euResident(Boolean euResident) {
    this.euResident = euResident;
    return this;
  }

  /**
   * Whether this person is marked as a European Union Resident or not
   * @return euResident
   */
  @javax.annotation.Nullable
  public Boolean getEuResident() {
    return euResident;
  }

  public void setEuResident(Boolean euResident) {
    this.euResident = euResident;
  }


  public Person firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * First name
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Person fullEmailAddress(String fullEmailAddress) {
    this.fullEmailAddress = fullEmailAddress;
    return this;
  }

  /**
   * Full email address with name
   * @return fullEmailAddress
   */
  @javax.annotation.Nullable
  public String getFullEmailAddress() {
    return fullEmailAddress;
  }

  public void setFullEmailAddress(String fullEmailAddress) {
    this.fullEmailAddress = fullEmailAddress;
  }


  public Person homePhone(String homePhone) {
    this.homePhone = homePhone;
    return this;
  }

  /**
   * Home phone without formatting
   * @return homePhone
   */
  @javax.annotation.Nullable
  public String getHomePhone() {
    return homePhone;
  }

  public void setHomePhone(String homePhone) {
    this.homePhone = homePhone;
  }


  public Person id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Person ID
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public Person _import(EmbeddedResource _import) {
    this._import = _import;
    return this;
  }

  /**
   * Get _import
   * @return _import
   */
  @javax.annotation.Nullable
  public EmbeddedResource getImport() {
    return _import;
  }

  public void setImport(EmbeddedResource _import) {
    this._import = _import;
  }


  public Person jobSeniority(String jobSeniority) {
    this.jobSeniority = jobSeniority;
    return this;
  }

  /**
   * The Job Seniority of a Person, must be one of director, executive, individual_contributor, manager, vice_president, unknown
   * @return jobSeniority
   */
  @javax.annotation.Nullable
  public String getJobSeniority() {
    return jobSeniority;
  }

  public void setJobSeniority(String jobSeniority) {
    this.jobSeniority = jobSeniority;
  }


  public Person lastCompletedStep(EmbeddedResource lastCompletedStep) {
    this.lastCompletedStep = lastCompletedStep;
    return this;
  }

  /**
   * Get lastCompletedStep
   * @return lastCompletedStep
   */
  @javax.annotation.Nullable
  public EmbeddedResource getLastCompletedStep() {
    return lastCompletedStep;
  }

  public void setLastCompletedStep(EmbeddedResource lastCompletedStep) {
    this.lastCompletedStep = lastCompletedStep;
  }


  public Person lastCompletedStepCadence(EmbeddedResource lastCompletedStepCadence) {
    this.lastCompletedStepCadence = lastCompletedStepCadence;
    return this;
  }

  /**
   * Get lastCompletedStepCadence
   * @return lastCompletedStepCadence
   */
  @javax.annotation.Nullable
  public EmbeddedResource getLastCompletedStepCadence() {
    return lastCompletedStepCadence;
  }

  public void setLastCompletedStepCadence(EmbeddedResource lastCompletedStepCadence) {
    this.lastCompletedStepCadence = lastCompletedStepCadence;
  }


  public Person lastContactedAt(OffsetDateTime lastContactedAt) {
    this.lastContactedAt = lastContactedAt;
    return this;
  }

  /**
   * Last datetime this person was contacted
   * @return lastContactedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastContactedAt() {
    return lastContactedAt;
  }

  public void setLastContactedAt(OffsetDateTime lastContactedAt) {
    this.lastContactedAt = lastContactedAt;
  }


  public Person lastContactedBy(EmbeddedResource lastContactedBy) {
    this.lastContactedBy = lastContactedBy;
    return this;
  }

  /**
   * Get lastContactedBy
   * @return lastContactedBy
   */
  @javax.annotation.Nullable
  public EmbeddedResource getLastContactedBy() {
    return lastContactedBy;
  }

  public void setLastContactedBy(EmbeddedResource lastContactedBy) {
    this.lastContactedBy = lastContactedBy;
  }


  public Person lastContactedType(String lastContactedType) {
    this.lastContactedType = lastContactedType;
    return this;
  }

  /**
   * The type of the last touch to this person. Can be call, email, other
   * @return lastContactedType
   */
  @javax.annotation.Nullable
  public String getLastContactedType() {
    return lastContactedType;
  }

  public void setLastContactedType(String lastContactedType) {
    this.lastContactedType = lastContactedType;
  }


  public Person lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Person lastRepliedAt(OffsetDateTime lastRepliedAt) {
    this.lastRepliedAt = lastRepliedAt;
    return this;
  }

  /**
   * Last datetime this person replied to an email
   * @return lastRepliedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRepliedAt() {
    return lastRepliedAt;
  }

  public void setLastRepliedAt(OffsetDateTime lastRepliedAt) {
    this.lastRepliedAt = lastRepliedAt;
  }


  public Person linkedinUrl(String linkedinUrl) {
    this.linkedinUrl = linkedinUrl;
    return this;
  }

  /**
   * Linkedin URL
   * @return linkedinUrl
   */
  @javax.annotation.Nullable
  public String getLinkedinUrl() {
    return linkedinUrl;
  }

  public void setLinkedinUrl(String linkedinUrl) {
    this.linkedinUrl = linkedinUrl;
  }


  public Person locale(String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * Time locale of the person
   * @return locale
   */
  @javax.annotation.Nullable
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }


  public Person localeUtcOffset(Integer localeUtcOffset) {
    this.localeUtcOffset = localeUtcOffset;
    return this;
  }

  /**
   * The locale&#39;s timezone offset from UTC in minutes
   * @return localeUtcOffset
   */
  @javax.annotation.Nullable
  public Integer getLocaleUtcOffset() {
    return localeUtcOffset;
  }

  public void setLocaleUtcOffset(Integer localeUtcOffset) {
    this.localeUtcOffset = localeUtcOffset;
  }


  public Person mobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
    return this;
  }

  /**
   * Mobile phone without formatting
   * @return mobilePhone
   */
  @javax.annotation.Nullable
  public String getMobilePhone() {
    return mobilePhone;
  }

  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
  }


  public Person mostRecentCadence(EmbeddedResource mostRecentCadence) {
    this.mostRecentCadence = mostRecentCadence;
    return this;
  }

  /**
   * Get mostRecentCadence
   * @return mostRecentCadence
   */
  @javax.annotation.Nullable
  public EmbeddedResource getMostRecentCadence() {
    return mostRecentCadence;
  }

  public void setMostRecentCadence(EmbeddedResource mostRecentCadence) {
    this.mostRecentCadence = mostRecentCadence;
  }


  public Person owner(EmbeddedResource owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Get owner
   * @return owner
   */
  @javax.annotation.Nullable
  public EmbeddedResource getOwner() {
    return owner;
  }

  public void setOwner(EmbeddedResource owner) {
    this.owner = owner;
  }


  public Person ownerCrmId(String ownerCrmId) {
    this.ownerCrmId = ownerCrmId;
    return this;
  }

  /**
   * Mapped owner field from your CRM
   * @return ownerCrmId
   */
  @javax.annotation.Nullable
  public String getOwnerCrmId() {
    return ownerCrmId;
  }

  public void setOwnerCrmId(String ownerCrmId) {
    this.ownerCrmId = ownerCrmId;
  }


  public Person personCompanyIndustry(String personCompanyIndustry) {
    this.personCompanyIndustry = personCompanyIndustry;
    return this;
  }

  /**
   * Company industry. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
   * @return personCompanyIndustry
   */
  @javax.annotation.Nullable
  public String getPersonCompanyIndustry() {
    return personCompanyIndustry;
  }

  public void setPersonCompanyIndustry(String personCompanyIndustry) {
    this.personCompanyIndustry = personCompanyIndustry;
  }


  public Person personCompanyName(String personCompanyName) {
    this.personCompanyName = personCompanyName;
    return this;
  }

  /**
   * Company name. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
   * @return personCompanyName
   */
  @javax.annotation.Nullable
  public String getPersonCompanyName() {
    return personCompanyName;
  }

  public void setPersonCompanyName(String personCompanyName) {
    this.personCompanyName = personCompanyName;
  }


  public Person personCompanyWebsite(String personCompanyWebsite) {
    this.personCompanyWebsite = personCompanyWebsite;
    return this;
  }

  /**
   * Company website. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
   * @return personCompanyWebsite
   */
  @javax.annotation.Nullable
  public String getPersonCompanyWebsite() {
    return personCompanyWebsite;
  }

  public void setPersonCompanyWebsite(String personCompanyWebsite) {
    this.personCompanyWebsite = personCompanyWebsite;
  }


  public Person personStage(EmbeddedResource personStage) {
    this.personStage = personStage;
    return this;
  }

  /**
   * Get personStage
   * @return personStage
   */
  @javax.annotation.Nullable
  public EmbeddedResource getPersonStage() {
    return personStage;
  }

  public void setPersonStage(EmbeddedResource personStage) {
    this.personStage = personStage;
  }


  public Person personalEmailAddress(String personalEmailAddress) {
    this.personalEmailAddress = personalEmailAddress;
    return this;
  }

  /**
   * Personal email address
   * @return personalEmailAddress
   */
  @javax.annotation.Nullable
  public String getPersonalEmailAddress() {
    return personalEmailAddress;
  }

  public void setPersonalEmailAddress(String personalEmailAddress) {
    this.personalEmailAddress = personalEmailAddress;
  }


  public Person personalWebsite(String personalWebsite) {
    this.personalWebsite = personalWebsite;
    return this;
  }

  /**
   * The website of this person
   * @return personalWebsite
   */
  @javax.annotation.Nullable
  public String getPersonalWebsite() {
    return personalWebsite;
  }

  public void setPersonalWebsite(String personalWebsite) {
    this.personalWebsite = personalWebsite;
  }


  public Person phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Phone without formatting
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public Person phoneExtension(String phoneExtension) {
    this.phoneExtension = phoneExtension;
    return this;
  }

  /**
   * Phone extension without formatting
   * @return phoneExtension
   */
  @javax.annotation.Nullable
  public String getPhoneExtension() {
    return phoneExtension;
  }

  public void setPhoneExtension(String phoneExtension) {
    this.phoneExtension = phoneExtension;
  }


  public Person secondaryEmailAddress(String secondaryEmailAddress) {
    this.secondaryEmailAddress = secondaryEmailAddress;
    return this;
  }

  /**
   * Alternate email address
   * @return secondaryEmailAddress
   */
  @javax.annotation.Nullable
  public String getSecondaryEmailAddress() {
    return secondaryEmailAddress;
  }

  public void setSecondaryEmailAddress(String secondaryEmailAddress) {
    this.secondaryEmailAddress = secondaryEmailAddress;
  }


  public Person starred(Boolean starred) {
    this.starred = starred;
    return this;
  }

  /**
   * Whether this person is starred by the current user
   * @return starred
   */
  @javax.annotation.Nullable
  public Boolean getStarred() {
    return starred;
  }

  public void setStarred(Boolean starred) {
    this.starred = starred;
  }


  public Person state(String state) {
    this.state = state;
    return this;
  }

  /**
   * State
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public Person successCount(Integer successCount) {
    this.successCount = successCount;
    return this;
  }

  /**
   * The person&#39;s success count. 1 if person has any active successes, 0 otherwise.
   * @return successCount
   */
  @javax.annotation.Nullable
  public Integer getSuccessCount() {
    return successCount;
  }

  public void setSuccessCount(Integer successCount) {
    this.successCount = successCount;
  }


  public Person tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Person addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * All tags applied to this person
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Person title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Job title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public Person twitterHandle(String twitterHandle) {
    this.twitterHandle = twitterHandle;
    return this;
  }

  /**
   * The twitter handle of this person
   * @return twitterHandle
   */
  @javax.annotation.Nullable
  public String getTwitterHandle() {
    return twitterHandle;
  }

  public void setTwitterHandle(String twitterHandle) {
    this.twitterHandle = twitterHandle;
  }


  public Person untouched(Boolean untouched) {
    this.untouched = untouched;
    return this;
  }

  /**
   * The person&#39;s untouched status
   * @return untouched
   */
  @javax.annotation.Nullable
  public Boolean getUntouched() {
    return untouched;
  }

  public void setUntouched(Boolean untouched) {
    this.untouched = untouched;
  }


  public Person updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Datetime of when the person was last updated
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Person workCity(String workCity) {
    this.workCity = workCity;
    return this;
  }

  /**
   * Work location - city
   * @return workCity
   */
  @javax.annotation.Nullable
  public String getWorkCity() {
    return workCity;
  }

  public void setWorkCity(String workCity) {
    this.workCity = workCity;
  }


  public Person workCountry(String workCountry) {
    this.workCountry = workCountry;
    return this;
  }

  /**
   * Work location - country
   * @return workCountry
   */
  @javax.annotation.Nullable
  public String getWorkCountry() {
    return workCountry;
  }

  public void setWorkCountry(String workCountry) {
    this.workCountry = workCountry;
  }


  public Person workState(String workState) {
    this.workState = workState;
    return this;
  }

  /**
   * Work location - state
   * @return workState
   */
  @javax.annotation.Nullable
  public String getWorkState() {
    return workState;
  }

  public void setWorkState(String workState) {
    this.workState = workState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Person person = (Person) o;
    return Objects.equals(this.account, person.account) &&
        Objects.equals(this.bouncing, person.bouncing) &&
        Objects.equals(this.cadences, person.cadences) &&
        Objects.equals(this.city, person.city) &&
        Objects.equals(this.contactRestrictions, person.contactRestrictions) &&
        Objects.equals(this.country, person.country) &&
        Objects.equals(this.counts, person.counts) &&
        Objects.equals(this.createdAt, person.createdAt) &&
        Objects.equals(this.crmId, person.crmId) &&
        Objects.equals(this.crmObjectType, person.crmObjectType) &&
        Objects.equals(this.crmUrl, person.crmUrl) &&
        Objects.equals(this.customFields, person.customFields) &&
        Objects.equals(this.displayName, person.displayName) &&
        Objects.equals(this.doNotContact, person.doNotContact) &&
        Objects.equals(this.emailAddress, person.emailAddress) &&
        Objects.equals(this.euResident, person.euResident) &&
        Objects.equals(this.firstName, person.firstName) &&
        Objects.equals(this.fullEmailAddress, person.fullEmailAddress) &&
        Objects.equals(this.homePhone, person.homePhone) &&
        Objects.equals(this.id, person.id) &&
        Objects.equals(this._import, person._import) &&
        Objects.equals(this.jobSeniority, person.jobSeniority) &&
        Objects.equals(this.lastCompletedStep, person.lastCompletedStep) &&
        Objects.equals(this.lastCompletedStepCadence, person.lastCompletedStepCadence) &&
        Objects.equals(this.lastContactedAt, person.lastContactedAt) &&
        Objects.equals(this.lastContactedBy, person.lastContactedBy) &&
        Objects.equals(this.lastContactedType, person.lastContactedType) &&
        Objects.equals(this.lastName, person.lastName) &&
        Objects.equals(this.lastRepliedAt, person.lastRepliedAt) &&
        Objects.equals(this.linkedinUrl, person.linkedinUrl) &&
        Objects.equals(this.locale, person.locale) &&
        Objects.equals(this.localeUtcOffset, person.localeUtcOffset) &&
        Objects.equals(this.mobilePhone, person.mobilePhone) &&
        Objects.equals(this.mostRecentCadence, person.mostRecentCadence) &&
        Objects.equals(this.owner, person.owner) &&
        Objects.equals(this.ownerCrmId, person.ownerCrmId) &&
        Objects.equals(this.personCompanyIndustry, person.personCompanyIndustry) &&
        Objects.equals(this.personCompanyName, person.personCompanyName) &&
        Objects.equals(this.personCompanyWebsite, person.personCompanyWebsite) &&
        Objects.equals(this.personStage, person.personStage) &&
        Objects.equals(this.personalEmailAddress, person.personalEmailAddress) &&
        Objects.equals(this.personalWebsite, person.personalWebsite) &&
        Objects.equals(this.phone, person.phone) &&
        Objects.equals(this.phoneExtension, person.phoneExtension) &&
        Objects.equals(this.secondaryEmailAddress, person.secondaryEmailAddress) &&
        Objects.equals(this.starred, person.starred) &&
        Objects.equals(this.state, person.state) &&
        Objects.equals(this.successCount, person.successCount) &&
        Objects.equals(this.tags, person.tags) &&
        Objects.equals(this.title, person.title) &&
        Objects.equals(this.twitterHandle, person.twitterHandle) &&
        Objects.equals(this.untouched, person.untouched) &&
        Objects.equals(this.updatedAt, person.updatedAt) &&
        Objects.equals(this.workCity, person.workCity) &&
        Objects.equals(this.workCountry, person.workCountry) &&
        Objects.equals(this.workState, person.workState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, bouncing, cadences, city, contactRestrictions, country, counts, createdAt, crmId, crmObjectType, crmUrl, customFields, displayName, doNotContact, emailAddress, euResident, firstName, fullEmailAddress, homePhone, id, _import, jobSeniority, lastCompletedStep, lastCompletedStepCadence, lastContactedAt, lastContactedBy, lastContactedType, lastName, lastRepliedAt, linkedinUrl, locale, localeUtcOffset, mobilePhone, mostRecentCadence, owner, ownerCrmId, personCompanyIndustry, personCompanyName, personCompanyWebsite, personStage, personalEmailAddress, personalWebsite, phone, phoneExtension, secondaryEmailAddress, starred, state, successCount, tags, title, twitterHandle, untouched, updatedAt, workCity, workCountry, workState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Person {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    bouncing: ").append(toIndentedString(bouncing)).append("\n");
    sb.append("    cadences: ").append(toIndentedString(cadences)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    contactRestrictions: ").append(toIndentedString(contactRestrictions)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    counts: ").append(toIndentedString(counts)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    crmId: ").append(toIndentedString(crmId)).append("\n");
    sb.append("    crmObjectType: ").append(toIndentedString(crmObjectType)).append("\n");
    sb.append("    crmUrl: ").append(toIndentedString(crmUrl)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    doNotContact: ").append(toIndentedString(doNotContact)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    euResident: ").append(toIndentedString(euResident)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    fullEmailAddress: ").append(toIndentedString(fullEmailAddress)).append("\n");
    sb.append("    homePhone: ").append(toIndentedString(homePhone)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    _import: ").append(toIndentedString(_import)).append("\n");
    sb.append("    jobSeniority: ").append(toIndentedString(jobSeniority)).append("\n");
    sb.append("    lastCompletedStep: ").append(toIndentedString(lastCompletedStep)).append("\n");
    sb.append("    lastCompletedStepCadence: ").append(toIndentedString(lastCompletedStepCadence)).append("\n");
    sb.append("    lastContactedAt: ").append(toIndentedString(lastContactedAt)).append("\n");
    sb.append("    lastContactedBy: ").append(toIndentedString(lastContactedBy)).append("\n");
    sb.append("    lastContactedType: ").append(toIndentedString(lastContactedType)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    lastRepliedAt: ").append(toIndentedString(lastRepliedAt)).append("\n");
    sb.append("    linkedinUrl: ").append(toIndentedString(linkedinUrl)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    localeUtcOffset: ").append(toIndentedString(localeUtcOffset)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    mostRecentCadence: ").append(toIndentedString(mostRecentCadence)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    ownerCrmId: ").append(toIndentedString(ownerCrmId)).append("\n");
    sb.append("    personCompanyIndustry: ").append(toIndentedString(personCompanyIndustry)).append("\n");
    sb.append("    personCompanyName: ").append(toIndentedString(personCompanyName)).append("\n");
    sb.append("    personCompanyWebsite: ").append(toIndentedString(personCompanyWebsite)).append("\n");
    sb.append("    personStage: ").append(toIndentedString(personStage)).append("\n");
    sb.append("    personalEmailAddress: ").append(toIndentedString(personalEmailAddress)).append("\n");
    sb.append("    personalWebsite: ").append(toIndentedString(personalWebsite)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneExtension: ").append(toIndentedString(phoneExtension)).append("\n");
    sb.append("    secondaryEmailAddress: ").append(toIndentedString(secondaryEmailAddress)).append("\n");
    sb.append("    starred: ").append(toIndentedString(starred)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    successCount: ").append(toIndentedString(successCount)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    twitterHandle: ").append(toIndentedString(twitterHandle)).append("\n");
    sb.append("    untouched: ").append(toIndentedString(untouched)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    workCity: ").append(toIndentedString(workCity)).append("\n");
    sb.append("    workCountry: ").append(toIndentedString(workCountry)).append("\n");
    sb.append("    workState: ").append(toIndentedString(workState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account");
    openapiFields.add("bouncing");
    openapiFields.add("cadences");
    openapiFields.add("city");
    openapiFields.add("contact_restrictions");
    openapiFields.add("country");
    openapiFields.add("counts");
    openapiFields.add("created_at");
    openapiFields.add("crm_id");
    openapiFields.add("crm_object_type");
    openapiFields.add("crm_url");
    openapiFields.add("custom_fields");
    openapiFields.add("display_name");
    openapiFields.add("do_not_contact");
    openapiFields.add("email_address");
    openapiFields.add("eu_resident");
    openapiFields.add("first_name");
    openapiFields.add("full_email_address");
    openapiFields.add("home_phone");
    openapiFields.add("id");
    openapiFields.add("import");
    openapiFields.add("job_seniority");
    openapiFields.add("last_completed_step");
    openapiFields.add("last_completed_step_cadence");
    openapiFields.add("last_contacted_at");
    openapiFields.add("last_contacted_by");
    openapiFields.add("last_contacted_type");
    openapiFields.add("last_name");
    openapiFields.add("last_replied_at");
    openapiFields.add("linkedin_url");
    openapiFields.add("locale");
    openapiFields.add("locale_utc_offset");
    openapiFields.add("mobile_phone");
    openapiFields.add("most_recent_cadence");
    openapiFields.add("owner");
    openapiFields.add("owner_crm_id");
    openapiFields.add("person_company_industry");
    openapiFields.add("person_company_name");
    openapiFields.add("person_company_website");
    openapiFields.add("person_stage");
    openapiFields.add("personal_email_address");
    openapiFields.add("personal_website");
    openapiFields.add("phone");
    openapiFields.add("phone_extension");
    openapiFields.add("secondary_email_address");
    openapiFields.add("starred");
    openapiFields.add("state");
    openapiFields.add("success_count");
    openapiFields.add("tags");
    openapiFields.add("title");
    openapiFields.add("twitter_handle");
    openapiFields.add("untouched");
    openapiFields.add("updated_at");
    openapiFields.add("work_city");
    openapiFields.add("work_country");
    openapiFields.add("work_state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Person
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Person.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Person is not found in the empty JSON string", Person.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Person.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Person` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `account`
      if (jsonObj.get("account") != null && !jsonObj.get("account").isJsonNull()) {
        EmbeddedResource.validateJsonElement(jsonObj.get("account"));
      }
      if (jsonObj.get("cadences") != null && !jsonObj.get("cadences").isJsonNull()) {
        JsonArray jsonArraycadences = jsonObj.getAsJsonArray("cadences");
        if (jsonArraycadences != null) {
          // ensure the json data is an array
          if (!jsonObj.get("cadences").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `cadences` to be an array in the JSON string but got `%s`", jsonObj.get("cadences").toString()));
          }

          // validate the optional field `cadences` (array)
          for (int i = 0; i < jsonArraycadences.size(); i++) {
            EmbeddedResource.validateJsonElement(jsonArraycadences.get(i));
          };
        }
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("contact_restrictions") != null && !jsonObj.get("contact_restrictions").isJsonNull() && !jsonObj.get("contact_restrictions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_restrictions` to be an array in the JSON string but got `%s`", jsonObj.get("contact_restrictions").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      // validate the optional field `counts`
      if (jsonObj.get("counts") != null && !jsonObj.get("counts").isJsonNull()) {
        PersonCounts.validateJsonElement(jsonObj.get("counts"));
      }
      if ((jsonObj.get("crm_id") != null && !jsonObj.get("crm_id").isJsonNull()) && !jsonObj.get("crm_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crm_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crm_id").toString()));
      }
      if ((jsonObj.get("crm_object_type") != null && !jsonObj.get("crm_object_type").isJsonNull()) && !jsonObj.get("crm_object_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crm_object_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crm_object_type").toString()));
      }
      if ((jsonObj.get("crm_url") != null && !jsonObj.get("crm_url").isJsonNull()) && !jsonObj.get("crm_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crm_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crm_url").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("email_address") != null && !jsonObj.get("email_address").isJsonNull()) && !jsonObj.get("email_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_address").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if ((jsonObj.get("full_email_address") != null && !jsonObj.get("full_email_address").isJsonNull()) && !jsonObj.get("full_email_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `full_email_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_email_address").toString()));
      }
      if ((jsonObj.get("home_phone") != null && !jsonObj.get("home_phone").isJsonNull()) && !jsonObj.get("home_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `home_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("home_phone").toString()));
      }
      // validate the optional field `import`
      if (jsonObj.get("import") != null && !jsonObj.get("import").isJsonNull()) {
        EmbeddedResource.validateJsonElement(jsonObj.get("import"));
      }
      if ((jsonObj.get("job_seniority") != null && !jsonObj.get("job_seniority").isJsonNull()) && !jsonObj.get("job_seniority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_seniority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_seniority").toString()));
      }
      // validate the optional field `last_completed_step`
      if (jsonObj.get("last_completed_step") != null && !jsonObj.get("last_completed_step").isJsonNull()) {
        EmbeddedResource.validateJsonElement(jsonObj.get("last_completed_step"));
      }
      // validate the optional field `last_completed_step_cadence`
      if (jsonObj.get("last_completed_step_cadence") != null && !jsonObj.get("last_completed_step_cadence").isJsonNull()) {
        EmbeddedResource.validateJsonElement(jsonObj.get("last_completed_step_cadence"));
      }
      // validate the optional field `last_contacted_by`
      if (jsonObj.get("last_contacted_by") != null && !jsonObj.get("last_contacted_by").isJsonNull()) {
        EmbeddedResource.validateJsonElement(jsonObj.get("last_contacted_by"));
      }
      if ((jsonObj.get("last_contacted_type") != null && !jsonObj.get("last_contacted_type").isJsonNull()) && !jsonObj.get("last_contacted_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_contacted_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_contacted_type").toString()));
      }
      if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if ((jsonObj.get("linkedin_url") != null && !jsonObj.get("linkedin_url").isJsonNull()) && !jsonObj.get("linkedin_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedin_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedin_url").toString()));
      }
      if ((jsonObj.get("locale") != null && !jsonObj.get("locale").isJsonNull()) && !jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      if ((jsonObj.get("mobile_phone") != null && !jsonObj.get("mobile_phone").isJsonNull()) && !jsonObj.get("mobile_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile_phone").toString()));
      }
      // validate the optional field `most_recent_cadence`
      if (jsonObj.get("most_recent_cadence") != null && !jsonObj.get("most_recent_cadence").isJsonNull()) {
        EmbeddedResource.validateJsonElement(jsonObj.get("most_recent_cadence"));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        EmbeddedResource.validateJsonElement(jsonObj.get("owner"));
      }
      if ((jsonObj.get("owner_crm_id") != null && !jsonObj.get("owner_crm_id").isJsonNull()) && !jsonObj.get("owner_crm_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_crm_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_crm_id").toString()));
      }
      if ((jsonObj.get("person_company_industry") != null && !jsonObj.get("person_company_industry").isJsonNull()) && !jsonObj.get("person_company_industry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `person_company_industry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("person_company_industry").toString()));
      }
      if ((jsonObj.get("person_company_name") != null && !jsonObj.get("person_company_name").isJsonNull()) && !jsonObj.get("person_company_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `person_company_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("person_company_name").toString()));
      }
      if ((jsonObj.get("person_company_website") != null && !jsonObj.get("person_company_website").isJsonNull()) && !jsonObj.get("person_company_website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `person_company_website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("person_company_website").toString()));
      }
      // validate the optional field `person_stage`
      if (jsonObj.get("person_stage") != null && !jsonObj.get("person_stage").isJsonNull()) {
        EmbeddedResource.validateJsonElement(jsonObj.get("person_stage"));
      }
      if ((jsonObj.get("personal_email_address") != null && !jsonObj.get("personal_email_address").isJsonNull()) && !jsonObj.get("personal_email_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personal_email_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personal_email_address").toString()));
      }
      if ((jsonObj.get("personal_website") != null && !jsonObj.get("personal_website").isJsonNull()) && !jsonObj.get("personal_website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personal_website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personal_website").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("phone_extension") != null && !jsonObj.get("phone_extension").isJsonNull()) && !jsonObj.get("phone_extension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_extension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_extension").toString()));
      }
      if ((jsonObj.get("secondary_email_address") != null && !jsonObj.get("secondary_email_address").isJsonNull()) && !jsonObj.get("secondary_email_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondary_email_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondary_email_address").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("twitter_handle") != null && !jsonObj.get("twitter_handle").isJsonNull()) && !jsonObj.get("twitter_handle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitter_handle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitter_handle").toString()));
      }
      if ((jsonObj.get("work_city") != null && !jsonObj.get("work_city").isJsonNull()) && !jsonObj.get("work_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_city").toString()));
      }
      if ((jsonObj.get("work_country") != null && !jsonObj.get("work_country").isJsonNull()) && !jsonObj.get("work_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_country").toString()));
      }
      if ((jsonObj.get("work_state") != null && !jsonObj.get("work_state").isJsonNull()) && !jsonObj.get("work_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_state").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Person.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Person' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Person> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Person.class));

       return (TypeAdapter<T>) new TypeAdapter<Person>() {
           @Override
           public void write(JsonWriter out, Person value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Person read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Person given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Person
   * @throws IOException if the JSON string is invalid with respect to Person
   */
  public static Person fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Person.class);
  }

  /**
   * Convert an instance of Person to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

