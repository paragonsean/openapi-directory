/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.EmailTemplate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EmailTemplatesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public EmailTemplatesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EmailTemplatesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for v2EmailTemplatesIdJsonGet
     * @param id EmailTemplate ID (required)
     * @param includeSignature Optionally will return the templates with the current user&#39;s email signature (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2EmailTemplatesIdJsonGetCall(String id, Boolean includeSignature, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/email_templates/{id}.json"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (includeSignature != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_signature", includeSignature));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v2EmailTemplatesIdJsonGetValidateBeforeCall(String id, Boolean includeSignature, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling v2EmailTemplatesIdJsonGet(Async)");
        }

        return v2EmailTemplatesIdJsonGetCall(id, includeSignature, _callback);

    }

    /**
     * Fetch an email template
     * Fetches an email template, by ID only. 
     * @param id EmailTemplate ID (required)
     * @param includeSignature Optionally will return the templates with the current user&#39;s email signature (optional)
     * @return EmailTemplate
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public EmailTemplate v2EmailTemplatesIdJsonGet(String id, Boolean includeSignature) throws ApiException {
        ApiResponse<EmailTemplate> localVarResp = v2EmailTemplatesIdJsonGetWithHttpInfo(id, includeSignature);
        return localVarResp.getData();
    }

    /**
     * Fetch an email template
     * Fetches an email template, by ID only. 
     * @param id EmailTemplate ID (required)
     * @param includeSignature Optionally will return the templates with the current user&#39;s email signature (optional)
     * @return ApiResponse&lt;EmailTemplate&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EmailTemplate> v2EmailTemplatesIdJsonGetWithHttpInfo(String id, Boolean includeSignature) throws ApiException {
        okhttp3.Call localVarCall = v2EmailTemplatesIdJsonGetValidateBeforeCall(id, includeSignature, null);
        Type localVarReturnType = new TypeToken<EmailTemplate>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Fetch an email template (asynchronously)
     * Fetches an email template, by ID only. 
     * @param id EmailTemplate ID (required)
     * @param includeSignature Optionally will return the templates with the current user&#39;s email signature (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2EmailTemplatesIdJsonGetAsync(String id, Boolean includeSignature, final ApiCallback<EmailTemplate> _callback) throws ApiException {

        okhttp3.Call localVarCall = v2EmailTemplatesIdJsonGetValidateBeforeCall(id, includeSignature, _callback);
        Type localVarReturnType = new TypeToken<EmailTemplate>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v2EmailTemplatesJsonGet
     * @param ids IDs of email templates to fetch. If a record can&#39;t be found, that record won&#39;t be returned and your request will be successful (optional)
     * @param updatedAt Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.  ---CUSTOM--- {\&quot;type\&quot;:\&quot;object\&quot;,\&quot;keys\&quot;:[{\&quot;name\&quot;:\&quot;gt\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;gte\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;lt\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;lte\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;}]}  (optional)
     * @param linkedToTeamTemplate Filters email templates by whether they are linked to a team template or not (optional)
     * @param search Filters email templates by title or subject (optional)
     * @param tagIds Filters email templates by tags applied to the template by tag ID, not to exceed 100 IDs (optional)
     * @param tag Filters email templates by tags applied to the template, not to exceed 100 tags (optional)
     * @param filterByOwner Filters email templates by current authenticated user (optional)
     * @param groupId Filters email templates by groups applied to the template by group ID. Not to exceed 500 IDs. Returns templates that are assigned to any of the group ids. (optional)
     * @param includeCadenceTemplates Filters email templates based on whether or not the template has been used on a cadence (optional)
     * @param includeArchivedTemplates Filters email templates to include archived templates or not (optional)
     * @param cadenceId Filters email templates to those belonging to the cadence. Not to exceed 100 IDs. If a record can&#39;t be found, that record won&#39;t be returned and your request will be successful (optional)
     * @param sortBy Key to sort on, must be one of: created_at, updated_at, last_used_at. Defaults to updated_at (optional)
     * @param sortDirection Direction to sort in, must be one of: ASC, DESC. Defaults to DESC (optional)
     * @param perPage How many records to show per page in the range [1, 100]. Defaults to 25 (optional)
     * @param page The current page to fetch results from. Defaults to 1 (optional)
     * @param includePagingCounts Whether to include total_pages and total_count in the metadata. Defaults to false (optional)
     * @param limitPagingCounts Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2EmailTemplatesJsonGetCall(List<Integer> ids, List<String> updatedAt, Boolean linkedToTeamTemplate, String search, List<Integer> tagIds, List<String> tag, Boolean filterByOwner, List<Integer> groupId, Boolean includeCadenceTemplates, Boolean includeArchivedTemplates, List<Integer> cadenceId, String sortBy, String sortDirection, Integer perPage, Integer page, Boolean includePagingCounts, Boolean limitPagingCounts, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/email_templates.json";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (ids != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "ids", ids));
        }

        if (updatedAt != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "updated_at", updatedAt));
        }

        if (linkedToTeamTemplate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linked_to_team_template", linkedToTeamTemplate));
        }

        if (search != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search", search));
        }

        if (tagIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "tag_ids", tagIds));
        }

        if (tag != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "tag", tag));
        }

        if (filterByOwner != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_by_owner", filterByOwner));
        }

        if (groupId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "group_id", groupId));
        }

        if (includeCadenceTemplates != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_cadence_templates", includeCadenceTemplates));
        }

        if (includeArchivedTemplates != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_archived_templates", includeArchivedTemplates));
        }

        if (cadenceId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "cadence_id", cadenceId));
        }

        if (sortBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_by", sortBy));
        }

        if (sortDirection != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_direction", sortDirection));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (includePagingCounts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_paging_counts", includePagingCounts));
        }

        if (limitPagingCounts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit_paging_counts", limitPagingCounts));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v2EmailTemplatesJsonGetValidateBeforeCall(List<Integer> ids, List<String> updatedAt, Boolean linkedToTeamTemplate, String search, List<Integer> tagIds, List<String> tag, Boolean filterByOwner, List<Integer> groupId, Boolean includeCadenceTemplates, Boolean includeArchivedTemplates, List<Integer> cadenceId, String sortBy, String sortDirection, Integer perPage, Integer page, Boolean includePagingCounts, Boolean limitPagingCounts, final ApiCallback _callback) throws ApiException {
        return v2EmailTemplatesJsonGetCall(ids, updatedAt, linkedToTeamTemplate, search, tagIds, tag, filterByOwner, groupId, includeCadenceTemplates, includeArchivedTemplates, cadenceId, sortBy, sortDirection, perPage, page, includePagingCounts, limitPagingCounts, _callback);

    }

    /**
     * List email templates
     * Fetches multiple email template records. The records can be filtered, paged, and sorted according to the respective parameters. 
     * @param ids IDs of email templates to fetch. If a record can&#39;t be found, that record won&#39;t be returned and your request will be successful (optional)
     * @param updatedAt Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.  ---CUSTOM--- {\&quot;type\&quot;:\&quot;object\&quot;,\&quot;keys\&quot;:[{\&quot;name\&quot;:\&quot;gt\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;gte\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;lt\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;lte\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;}]}  (optional)
     * @param linkedToTeamTemplate Filters email templates by whether they are linked to a team template or not (optional)
     * @param search Filters email templates by title or subject (optional)
     * @param tagIds Filters email templates by tags applied to the template by tag ID, not to exceed 100 IDs (optional)
     * @param tag Filters email templates by tags applied to the template, not to exceed 100 tags (optional)
     * @param filterByOwner Filters email templates by current authenticated user (optional)
     * @param groupId Filters email templates by groups applied to the template by group ID. Not to exceed 500 IDs. Returns templates that are assigned to any of the group ids. (optional)
     * @param includeCadenceTemplates Filters email templates based on whether or not the template has been used on a cadence (optional)
     * @param includeArchivedTemplates Filters email templates to include archived templates or not (optional)
     * @param cadenceId Filters email templates to those belonging to the cadence. Not to exceed 100 IDs. If a record can&#39;t be found, that record won&#39;t be returned and your request will be successful (optional)
     * @param sortBy Key to sort on, must be one of: created_at, updated_at, last_used_at. Defaults to updated_at (optional)
     * @param sortDirection Direction to sort in, must be one of: ASC, DESC. Defaults to DESC (optional)
     * @param perPage How many records to show per page in the range [1, 100]. Defaults to 25 (optional)
     * @param page The current page to fetch results from. Defaults to 1 (optional)
     * @param includePagingCounts Whether to include total_pages and total_count in the metadata. Defaults to false (optional)
     * @param limitPagingCounts Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data (optional)
     * @return List&lt;EmailTemplate&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public List<EmailTemplate> v2EmailTemplatesJsonGet(List<Integer> ids, List<String> updatedAt, Boolean linkedToTeamTemplate, String search, List<Integer> tagIds, List<String> tag, Boolean filterByOwner, List<Integer> groupId, Boolean includeCadenceTemplates, Boolean includeArchivedTemplates, List<Integer> cadenceId, String sortBy, String sortDirection, Integer perPage, Integer page, Boolean includePagingCounts, Boolean limitPagingCounts) throws ApiException {
        ApiResponse<List<EmailTemplate>> localVarResp = v2EmailTemplatesJsonGetWithHttpInfo(ids, updatedAt, linkedToTeamTemplate, search, tagIds, tag, filterByOwner, groupId, includeCadenceTemplates, includeArchivedTemplates, cadenceId, sortBy, sortDirection, perPage, page, includePagingCounts, limitPagingCounts);
        return localVarResp.getData();
    }

    /**
     * List email templates
     * Fetches multiple email template records. The records can be filtered, paged, and sorted according to the respective parameters. 
     * @param ids IDs of email templates to fetch. If a record can&#39;t be found, that record won&#39;t be returned and your request will be successful (optional)
     * @param updatedAt Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.  ---CUSTOM--- {\&quot;type\&quot;:\&quot;object\&quot;,\&quot;keys\&quot;:[{\&quot;name\&quot;:\&quot;gt\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;gte\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;lt\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;lte\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;}]}  (optional)
     * @param linkedToTeamTemplate Filters email templates by whether they are linked to a team template or not (optional)
     * @param search Filters email templates by title or subject (optional)
     * @param tagIds Filters email templates by tags applied to the template by tag ID, not to exceed 100 IDs (optional)
     * @param tag Filters email templates by tags applied to the template, not to exceed 100 tags (optional)
     * @param filterByOwner Filters email templates by current authenticated user (optional)
     * @param groupId Filters email templates by groups applied to the template by group ID. Not to exceed 500 IDs. Returns templates that are assigned to any of the group ids. (optional)
     * @param includeCadenceTemplates Filters email templates based on whether or not the template has been used on a cadence (optional)
     * @param includeArchivedTemplates Filters email templates to include archived templates or not (optional)
     * @param cadenceId Filters email templates to those belonging to the cadence. Not to exceed 100 IDs. If a record can&#39;t be found, that record won&#39;t be returned and your request will be successful (optional)
     * @param sortBy Key to sort on, must be one of: created_at, updated_at, last_used_at. Defaults to updated_at (optional)
     * @param sortDirection Direction to sort in, must be one of: ASC, DESC. Defaults to DESC (optional)
     * @param perPage How many records to show per page in the range [1, 100]. Defaults to 25 (optional)
     * @param page The current page to fetch results from. Defaults to 1 (optional)
     * @param includePagingCounts Whether to include total_pages and total_count in the metadata. Defaults to false (optional)
     * @param limitPagingCounts Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data (optional)
     * @return ApiResponse&lt;List&lt;EmailTemplate&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<EmailTemplate>> v2EmailTemplatesJsonGetWithHttpInfo(List<Integer> ids, List<String> updatedAt, Boolean linkedToTeamTemplate, String search, List<Integer> tagIds, List<String> tag, Boolean filterByOwner, List<Integer> groupId, Boolean includeCadenceTemplates, Boolean includeArchivedTemplates, List<Integer> cadenceId, String sortBy, String sortDirection, Integer perPage, Integer page, Boolean includePagingCounts, Boolean limitPagingCounts) throws ApiException {
        okhttp3.Call localVarCall = v2EmailTemplatesJsonGetValidateBeforeCall(ids, updatedAt, linkedToTeamTemplate, search, tagIds, tag, filterByOwner, groupId, includeCadenceTemplates, includeArchivedTemplates, cadenceId, sortBy, sortDirection, perPage, page, includePagingCounts, limitPagingCounts, null);
        Type localVarReturnType = new TypeToken<List<EmailTemplate>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List email templates (asynchronously)
     * Fetches multiple email template records. The records can be filtered, paged, and sorted according to the respective parameters. 
     * @param ids IDs of email templates to fetch. If a record can&#39;t be found, that record won&#39;t be returned and your request will be successful (optional)
     * @param updatedAt Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.  ---CUSTOM--- {\&quot;type\&quot;:\&quot;object\&quot;,\&quot;keys\&quot;:[{\&quot;name\&quot;:\&quot;gt\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;gte\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;lt\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;},{\&quot;name\&quot;:\&quot;lte\&quot;,\&quot;type\&quot;:\&quot;iso8601 string\&quot;,\&quot;description\&quot;:\&quot;Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\&quot;}]}  (optional)
     * @param linkedToTeamTemplate Filters email templates by whether they are linked to a team template or not (optional)
     * @param search Filters email templates by title or subject (optional)
     * @param tagIds Filters email templates by tags applied to the template by tag ID, not to exceed 100 IDs (optional)
     * @param tag Filters email templates by tags applied to the template, not to exceed 100 tags (optional)
     * @param filterByOwner Filters email templates by current authenticated user (optional)
     * @param groupId Filters email templates by groups applied to the template by group ID. Not to exceed 500 IDs. Returns templates that are assigned to any of the group ids. (optional)
     * @param includeCadenceTemplates Filters email templates based on whether or not the template has been used on a cadence (optional)
     * @param includeArchivedTemplates Filters email templates to include archived templates or not (optional)
     * @param cadenceId Filters email templates to those belonging to the cadence. Not to exceed 100 IDs. If a record can&#39;t be found, that record won&#39;t be returned and your request will be successful (optional)
     * @param sortBy Key to sort on, must be one of: created_at, updated_at, last_used_at. Defaults to updated_at (optional)
     * @param sortDirection Direction to sort in, must be one of: ASC, DESC. Defaults to DESC (optional)
     * @param perPage How many records to show per page in the range [1, 100]. Defaults to 25 (optional)
     * @param page The current page to fetch results from. Defaults to 1 (optional)
     * @param includePagingCounts Whether to include total_pages and total_count in the metadata. Defaults to false (optional)
     * @param limitPagingCounts Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2EmailTemplatesJsonGetAsync(List<Integer> ids, List<String> updatedAt, Boolean linkedToTeamTemplate, String search, List<Integer> tagIds, List<String> tag, Boolean filterByOwner, List<Integer> groupId, Boolean includeCadenceTemplates, Boolean includeArchivedTemplates, List<Integer> cadenceId, String sortBy, String sortDirection, Integer perPage, Integer page, Boolean includePagingCounts, Boolean limitPagingCounts, final ApiCallback<List<EmailTemplate>> _callback) throws ApiException {

        okhttp3.Call localVarCall = v2EmailTemplatesJsonGetValidateBeforeCall(ids, updatedAt, linkedToTeamTemplate, search, tagIds, tag, filterByOwner, groupId, includeCadenceTemplates, includeArchivedTemplates, cadenceId, sortBy, sortDirection, perPage, page, includePagingCounts, limitPagingCounts, _callback);
        Type localVarReturnType = new TypeToken<List<EmailTemplate>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
