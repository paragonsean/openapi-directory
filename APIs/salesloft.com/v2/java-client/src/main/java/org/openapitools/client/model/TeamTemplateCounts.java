/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TeamTemplateCounts
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:54.467506-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TeamTemplateCounts {
  public static final String SERIALIZED_NAME_BOUNCES = "bounces";
  @SerializedName(SERIALIZED_NAME_BOUNCES)
  private Integer bounces;

  public static final String SERIALIZED_NAME_CLICKS = "clicks";
  @SerializedName(SERIALIZED_NAME_CLICKS)
  private Integer clicks;

  public static final String SERIALIZED_NAME_REPLIES = "replies";
  @SerializedName(SERIALIZED_NAME_REPLIES)
  private Integer replies;

  public static final String SERIALIZED_NAME_SENT_EMAILS = "sent_emails";
  @SerializedName(SERIALIZED_NAME_SENT_EMAILS)
  private Integer sentEmails;

  public static final String SERIALIZED_NAME_VIEWS = "views";
  @SerializedName(SERIALIZED_NAME_VIEWS)
  private Integer views;

  public TeamTemplateCounts() {
  }

  public TeamTemplateCounts bounces(Integer bounces) {
    this.bounces = bounces;
    return this;
  }

  /**
   * The number of bounces the team template received
   * @return bounces
   */
  @javax.annotation.Nullable
  public Integer getBounces() {
    return bounces;
  }

  public void setBounces(Integer bounces) {
    this.bounces = bounces;
  }


  public TeamTemplateCounts clicks(Integer clicks) {
    this.clicks = clicks;
    return this;
  }

  /**
   * The number of times links in the team template were clicked
   * @return clicks
   */
  @javax.annotation.Nullable
  public Integer getClicks() {
    return clicks;
  }

  public void setClicks(Integer clicks) {
    this.clicks = clicks;
  }


  public TeamTemplateCounts replies(Integer replies) {
    this.replies = replies;
    return this;
  }

  /**
   * The number of replies the team template received
   * @return replies
   */
  @javax.annotation.Nullable
  public Integer getReplies() {
    return replies;
  }

  public void setReplies(Integer replies) {
    this.replies = replies;
  }


  public TeamTemplateCounts sentEmails(Integer sentEmails) {
    this.sentEmails = sentEmails;
    return this;
  }

  /**
   * The number of times the team template was sent out
   * @return sentEmails
   */
  @javax.annotation.Nullable
  public Integer getSentEmails() {
    return sentEmails;
  }

  public void setSentEmails(Integer sentEmails) {
    this.sentEmails = sentEmails;
  }


  public TeamTemplateCounts views(Integer views) {
    this.views = views;
    return this;
  }

  /**
   * The number of times the team template was opened
   * @return views
   */
  @javax.annotation.Nullable
  public Integer getViews() {
    return views;
  }

  public void setViews(Integer views) {
    this.views = views;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamTemplateCounts teamTemplateCounts = (TeamTemplateCounts) o;
    return Objects.equals(this.bounces, teamTemplateCounts.bounces) &&
        Objects.equals(this.clicks, teamTemplateCounts.clicks) &&
        Objects.equals(this.replies, teamTemplateCounts.replies) &&
        Objects.equals(this.sentEmails, teamTemplateCounts.sentEmails) &&
        Objects.equals(this.views, teamTemplateCounts.views);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bounces, clicks, replies, sentEmails, views);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamTemplateCounts {\n");
    sb.append("    bounces: ").append(toIndentedString(bounces)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    replies: ").append(toIndentedString(replies)).append("\n");
    sb.append("    sentEmails: ").append(toIndentedString(sentEmails)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bounces");
    openapiFields.add("clicks");
    openapiFields.add("replies");
    openapiFields.add("sent_emails");
    openapiFields.add("views");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TeamTemplateCounts
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TeamTemplateCounts.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TeamTemplateCounts is not found in the empty JSON string", TeamTemplateCounts.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TeamTemplateCounts.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TeamTemplateCounts` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TeamTemplateCounts.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TeamTemplateCounts' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TeamTemplateCounts> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TeamTemplateCounts.class));

       return (TypeAdapter<T>) new TypeAdapter<TeamTemplateCounts>() {
           @Override
           public void write(JsonWriter out, TeamTemplateCounts value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TeamTemplateCounts read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TeamTemplateCounts given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TeamTemplateCounts
   * @throws IOException if the JSON string is invalid with respect to TeamTemplateCounts
   */
  public static TeamTemplateCounts fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TeamTemplateCounts.class);
  }

  /**
   * Convert an instance of TeamTemplateCounts to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

