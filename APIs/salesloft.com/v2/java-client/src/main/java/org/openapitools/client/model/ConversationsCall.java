/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ConversationsCall
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:54.467506-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ConversationsCall {
  public static final String SERIALIZED_NAME_CALL_CREATED_AT = "call_created_at";
  @SerializedName(SERIALIZED_NAME_CALL_CREATED_AT)
  private String callCreatedAt;

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private String direction;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private BigDecimal duration;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_RECORDING = "recording";
  @SerializedName(SERIALIZED_NAME_RECORDING)
  private Object recording;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private String to;

  public static final String SERIALIZED_NAME_USER_GUID = "user_guid";
  @SerializedName(SERIALIZED_NAME_USER_GUID)
  private String userGuid;

  public ConversationsCall() {
  }

  public ConversationsCall callCreatedAt(String callCreatedAt) {
    this.callCreatedAt = callCreatedAt;
    return this;
  }

  /**
   * Timestamp for when the call started. If not provided, will default to the time the request was received
   * @return callCreatedAt
   */
  @javax.annotation.Nullable
  public String getCallCreatedAt() {
    return callCreatedAt;
  }

  public void setCallCreatedAt(String callCreatedAt) {
    this.callCreatedAt = callCreatedAt;
  }


  public ConversationsCall direction(String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Call direction
   * @return direction
   */
  @javax.annotation.Nullable
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }


  public ConversationsCall duration(BigDecimal duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Duration of call in seconds
   * @return duration
   */
  @javax.annotation.Nullable
  public BigDecimal getDuration() {
    return duration;
  }

  public void setDuration(BigDecimal duration) {
    this.duration = duration;
  }


  public ConversationsCall from(String from) {
    this.from = from;
    return this;
  }

  /**
   * Phone number that call was made from
   * @return from
   */
  @javax.annotation.Nullable
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }


  public ConversationsCall recording(Object recording) {
    this.recording = recording;
    return this;
  }

  /**
   * Object containing recording info including the audio file (.mp3, .wav, .ogg, .m4a)
   * @return recording
   */
  @javax.annotation.Nullable
  public Object getRecording() {
    return recording;
  }

  public void setRecording(Object recording) {
    this.recording = recording;
  }


  public ConversationsCall to(String to) {
    this.to = to;
    return this;
  }

  /**
   * Phone number that was called
   * @return to
   */
  @javax.annotation.Nullable
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }


  public ConversationsCall userGuid(String userGuid) {
    this.userGuid = userGuid;
    return this;
  }

  /**
   * Guid of the Salesloft User to assign the call to. If not provided, will default to the user within the authentication token
   * @return userGuid
   */
  @javax.annotation.Nullable
  public String getUserGuid() {
    return userGuid;
  }

  public void setUserGuid(String userGuid) {
    this.userGuid = userGuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationsCall conversationsCall = (ConversationsCall) o;
    return Objects.equals(this.callCreatedAt, conversationsCall.callCreatedAt) &&
        Objects.equals(this.direction, conversationsCall.direction) &&
        Objects.equals(this.duration, conversationsCall.duration) &&
        Objects.equals(this.from, conversationsCall.from) &&
        Objects.equals(this.recording, conversationsCall.recording) &&
        Objects.equals(this.to, conversationsCall.to) &&
        Objects.equals(this.userGuid, conversationsCall.userGuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callCreatedAt, direction, duration, from, recording, to, userGuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationsCall {\n");
    sb.append("    callCreatedAt: ").append(toIndentedString(callCreatedAt)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    recording: ").append(toIndentedString(recording)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    userGuid: ").append(toIndentedString(userGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("call_created_at");
    openapiFields.add("direction");
    openapiFields.add("duration");
    openapiFields.add("from");
    openapiFields.add("recording");
    openapiFields.add("to");
    openapiFields.add("user_guid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConversationsCall
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConversationsCall.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationsCall is not found in the empty JSON string", ConversationsCall.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConversationsCall.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationsCall` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("call_created_at") != null && !jsonObj.get("call_created_at").isJsonNull()) && !jsonObj.get("call_created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_created_at").toString()));
      }
      if ((jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      if ((jsonObj.get("from") != null && !jsonObj.get("from").isJsonNull()) && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if ((jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) && !jsonObj.get("to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to").toString()));
      }
      if ((jsonObj.get("user_guid") != null && !jsonObj.get("user_guid").isJsonNull()) && !jsonObj.get("user_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_guid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationsCall.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationsCall' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationsCall> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationsCall.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationsCall>() {
           @Override
           public void write(JsonWriter out, ConversationsCall value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationsCall read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConversationsCall given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConversationsCall
   * @throws IOException if the JSON string is invalid with respect to ConversationsCall
   */
  public static ConversationsCall fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationsCall.class);
  }

  /**
   * Convert an instance of ConversationsCall to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

