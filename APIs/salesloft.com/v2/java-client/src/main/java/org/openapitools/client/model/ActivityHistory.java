/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ActivityHistory
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:54.467506-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ActivityHistory {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DYNAMIC_DATA = "dynamic_data";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_DATA)
  private Object dynamicData;

  public static final String SERIALIZED_NAME_FAILED_DYNAMIC_RESOURCES = "failed_dynamic_resources";
  @SerializedName(SERIALIZED_NAME_FAILED_DYNAMIC_RESOURCES)
  private Object failedDynamicResources;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_OCCURRED_AT = "occurred_at";
  @SerializedName(SERIALIZED_NAME_OCCURRED_AT)
  private OffsetDateTime occurredAt;

  public static final String SERIALIZED_NAME_PINNED_AT = "pinned_at";
  @SerializedName(SERIALIZED_NAME_PINNED_AT)
  private OffsetDateTime pinnedAt;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "resource_id";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private Integer resourceId;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resource_type";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private Integer resourceType;

  public static final String SERIALIZED_NAME_STATIC_DATA = "static_data";
  @SerializedName(SERIALIZED_NAME_STATIC_DATA)
  private Object staticData;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_USER_GUID = "user_guid";
  @SerializedName(SERIALIZED_NAME_USER_GUID)
  private String userGuid;

  public ActivityHistory() {
  }

  public ActivityHistory createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * When this record was created
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public ActivityHistory dynamicData(Object dynamicData) {
    this.dynamicData = dynamicData;
    return this;
  }

  /**
   * Attributes from associated records. This is specific to the type of activity and may change over time. Not returned for create requests
   * @return dynamicData
   */
  @javax.annotation.Nullable
  public Object getDynamicData() {
    return dynamicData;
  }

  public void setDynamicData(Object dynamicData) {
    this.dynamicData = dynamicData;
  }


  public ActivityHistory failedDynamicResources(Object failedDynamicResources) {
    this.failedDynamicResources = failedDynamicResources;
    return this;
  }

  /**
   * A list of remote resource names that failed to load. This is specific to the type of activity and may change over time. Not returned for create requests
   * @return failedDynamicResources
   */
  @javax.annotation.Nullable
  public Object getFailedDynamicResources() {
    return failedDynamicResources;
  }

  public void setFailedDynamicResources(Object failedDynamicResources) {
    this.failedDynamicResources = failedDynamicResources;
  }


  public ActivityHistory id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * ID of this activity
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ActivityHistory occurredAt(OffsetDateTime occurredAt) {
    this.occurredAt = occurredAt;
    return this;
  }

  /**
   * When this activity occurred
   * @return occurredAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOccurredAt() {
    return occurredAt;
  }

  public void setOccurredAt(OffsetDateTime occurredAt) {
    this.occurredAt = occurredAt;
  }


  public ActivityHistory pinnedAt(OffsetDateTime pinnedAt) {
    this.pinnedAt = pinnedAt;
    return this;
  }

  /**
   * When this record was pinned
   * @return pinnedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPinnedAt() {
    return pinnedAt;
  }

  public void setPinnedAt(OffsetDateTime pinnedAt) {
    this.pinnedAt = pinnedAt;
  }


  public ActivityHistory resourceId(Integer resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * ID of the resource this activity is for. It will be a string for the following resource types: crm_opportunity
   * @return resourceId
   */
  @javax.annotation.Nullable
  public Integer getResourceId() {
    return resourceId;
  }

  public void setResourceId(Integer resourceId) {
    this.resourceId = resourceId;
  }


  public ActivityHistory resourceType(Integer resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Type of the resource this activity is for. One of: account, person
   * @return resourceType
   */
  @javax.annotation.Nullable
  public Integer getResourceType() {
    return resourceType;
  }

  public void setResourceType(Integer resourceType) {
    this.resourceType = resourceType;
  }


  public ActivityHistory staticData(Object staticData) {
    this.staticData = staticData;
    return this;
  }

  /**
   * The static data for this activity
   * @return staticData
   */
  @javax.annotation.Nullable
  public Object getStaticData() {
    return staticData;
  }

  public void setStaticData(Object staticData) {
    this.staticData = staticData;
  }


  public ActivityHistory type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The type of activity
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public ActivityHistory updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * When this record was updated
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public ActivityHistory userGuid(String userGuid) {
    this.userGuid = userGuid;
    return this;
  }

  /**
   * UUID of the user this activity is for
   * @return userGuid
   */
  @javax.annotation.Nullable
  public String getUserGuid() {
    return userGuid;
  }

  public void setUserGuid(String userGuid) {
    this.userGuid = userGuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityHistory activityHistory = (ActivityHistory) o;
    return Objects.equals(this.createdAt, activityHistory.createdAt) &&
        Objects.equals(this.dynamicData, activityHistory.dynamicData) &&
        Objects.equals(this.failedDynamicResources, activityHistory.failedDynamicResources) &&
        Objects.equals(this.id, activityHistory.id) &&
        Objects.equals(this.occurredAt, activityHistory.occurredAt) &&
        Objects.equals(this.pinnedAt, activityHistory.pinnedAt) &&
        Objects.equals(this.resourceId, activityHistory.resourceId) &&
        Objects.equals(this.resourceType, activityHistory.resourceType) &&
        Objects.equals(this.staticData, activityHistory.staticData) &&
        Objects.equals(this.type, activityHistory.type) &&
        Objects.equals(this.updatedAt, activityHistory.updatedAt) &&
        Objects.equals(this.userGuid, activityHistory.userGuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, dynamicData, failedDynamicResources, id, occurredAt, pinnedAt, resourceId, resourceType, staticData, type, updatedAt, userGuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityHistory {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    dynamicData: ").append(toIndentedString(dynamicData)).append("\n");
    sb.append("    failedDynamicResources: ").append(toIndentedString(failedDynamicResources)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    occurredAt: ").append(toIndentedString(occurredAt)).append("\n");
    sb.append("    pinnedAt: ").append(toIndentedString(pinnedAt)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    staticData: ").append(toIndentedString(staticData)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userGuid: ").append(toIndentedString(userGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("dynamic_data");
    openapiFields.add("failed_dynamic_resources");
    openapiFields.add("id");
    openapiFields.add("occurred_at");
    openapiFields.add("pinned_at");
    openapiFields.add("resource_id");
    openapiFields.add("resource_type");
    openapiFields.add("static_data");
    openapiFields.add("type");
    openapiFields.add("updated_at");
    openapiFields.add("user_guid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActivityHistory
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActivityHistory.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActivityHistory is not found in the empty JSON string", ActivityHistory.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActivityHistory.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActivityHistory` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("user_guid") != null && !jsonObj.get("user_guid").isJsonNull()) && !jsonObj.get("user_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_guid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActivityHistory.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActivityHistory' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActivityHistory> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActivityHistory.class));

       return (TypeAdapter<T>) new TypeAdapter<ActivityHistory>() {
           @Override
           public void write(JsonWriter out, ActivityHistory value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActivityHistory read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActivityHistory given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActivityHistory
   * @throws IOException if the JSON string is invalid with respect to ActivityHistory
   */
  public static ActivityHistory fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActivityHistory.class);
  }

  /**
   * Convert an instance of ActivityHistory to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

