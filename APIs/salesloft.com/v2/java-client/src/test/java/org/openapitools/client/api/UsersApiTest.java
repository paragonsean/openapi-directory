/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * Fetch a user
     *
     * Fetches a user, by ID only. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2UsersIdJsonGetTest() throws ApiException {
        String id = null;
        User response = api.v2UsersIdJsonGet(id);
        // TODO: test validations
    }

    /**
     * Update a user
     *
     * Updates a user. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2UsersIdJsonPutTest() throws ApiException {
        String id = null;
        Boolean active = null;
        Integer groupId = null;
        String roleId = null;
        String workCountry = null;
        User response = api.v2UsersIdJsonPut(id, active, groupId, roleId, workCountry);
        // TODO: test validations
    }

    /**
     * List users
     *
     * Non Admin: Lists only your user, or all on team depending on group visibility policy Team Admin: Lists users associated with your team 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2UsersJsonGetTest() throws ApiException {
        List<Integer> ids = null;
        List<String> guid = null;
        List<String> groupId = null;
        List<String> roleId = null;
        String search = null;
        Boolean active = null;
        Boolean visibleOnly = null;
        Integer perPage = null;
        Integer page = null;
        Boolean includePagingCounts = null;
        Boolean hasCrmUser = null;
        List<String> workCountry = null;
        String sortBy = null;
        String sortDirection = null;
        List<User> response = api.v2UsersJsonGet(ids, guid, groupId, roleId, search, active, visibleOnly, perPage, page, includePagingCounts, hasCrmUser, workCountry, sortBy, sortDirection);
        // TODO: test validations
    }

}
