/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Action;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ActionsApi
 */
@Disabled
public class ActionsApiTest {

    private final ActionsApi api = new ActionsApi();

    /**
     * Fetch an action
     *
     * Fetches an action, by ID only. This endpoint will only return actions that are in_progress or pending_activity. Once an action is complete, the request for that action will return a 404 status code. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2ActionsIdJsonGetTest() throws ApiException {
        String id = null;
        Action response = api.v2ActionsIdJsonGet(id);
        // TODO: test validations
    }

    /**
     * List actions
     *
     * Fetches multiple action records. The records can be filtered, paged, and sorted according to the respective parameters. Only actions that are currently \&quot;in_progess\&quot; will be returned by this endpoint.  If the requester is not an admin, this endpoint will only return actions belonging to the requester. If the request is an admin, this endpoint will return actions for the entire team. Additionaly, an admin may use the user_guid parameter to request actions that belong to specific users on the team. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2ActionsJsonGetTest() throws ApiException {
        List<Integer> ids = null;
        Integer stepId = null;
        String type = null;
        List<String> dueOn = null;
        List<String> userGuid = null;
        List<Integer> personId = null;
        List<Integer> cadenceId = null;
        List<Integer> multitouchGroupId = null;
        List<String> updatedAt = null;
        String sortBy = null;
        String sortDirection = null;
        Integer perPage = null;
        Integer page = null;
        Boolean includePagingCounts = null;
        Boolean limitPagingCounts = null;
        List<Action> response = api.v2ActionsJsonGet(ids, stepId, type, dueOn, userGuid, personId, cadenceId, multitouchGroupId, updatedAt, sortBy, sortDirection, perPage, page, includePagingCounts, limitPagingCounts);
        // TODO: test validations
    }

}
