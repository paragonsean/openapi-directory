/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Note;
import org.openapitools.client.model.Person;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotesApi
 */
@Disabled
public class NotesApiTest {

    private final NotesApi api = new NotesApi();

    /**
     * Delete a note
     *
     * Deletes a note owned by authorized account. This operation is not reversible without contacting support. This operation can be called multiple times successfully. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NotesIdJsonDeleteTest() throws ApiException {
        String id = null;
        api.v2NotesIdJsonDelete(id);
        // TODO: test validations
    }

    /**
     * Fetch a note
     *
     * Fetches a note, by ID only. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NotesIdJsonGetTest() throws ApiException {
        String id = null;
        Note response = api.v2NotesIdJsonGet(id);
        // TODO: test validations
    }

    /**
     * Update a note
     *
     * Updates a note. Any changes to the note or associated records will not reflect in your CRM. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NotesIdJsonPutTest() throws ApiException {
        String id = null;
        String content = null;
        Integer callId = null;
        Person response = api.v2NotesIdJsonPut(id, content, callId);
        // TODO: test validations
    }

    /**
     * List notes
     *
     * Fetches multiple note records. The records can be filtered, paged, and sorted according to the respective parameters. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NotesJsonGetTest() throws ApiException {
        String associatedWithType = null;
        Integer associatedWithId = null;
        List<String> updatedAt = null;
        List<Integer> ids = null;
        String sortBy = null;
        String sortDirection = null;
        Integer perPage = null;
        Integer page = null;
        Boolean includePagingCounts = null;
        Boolean limitPagingCounts = null;
        List<Note> response = api.v2NotesJsonGet(associatedWithType, associatedWithId, updatedAt, ids, sortBy, sortDirection, perPage, page, includePagingCounts, limitPagingCounts);
        // TODO: test validations
    }

    /**
     * Create a note
     *
     * Creates a note. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NotesJsonPostTest() throws ApiException {
        Integer associatedWithId = null;
        String associatedWithType = null;
        String content = null;
        Integer callId = null;
        Boolean skipCrmSync = null;
        String subject = null;
        String userGuid = null;
        Note response = api.v2NotesJsonPost(associatedWithId, associatedWithType, content, callId, skipCrmSync, subject, userGuid);
        // TODO: test validations
    }

}
