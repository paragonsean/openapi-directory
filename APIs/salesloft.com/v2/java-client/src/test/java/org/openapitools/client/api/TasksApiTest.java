/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Step;
import org.openapitools.client.model.Task;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TasksApi
 */
@Disabled
public class TasksApiTest {

    private final TasksApi api = new TasksApi();

    /**
     * Fetch a task
     *
     * Fetches a task, by ID only. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2TasksIdJsonGetTest() throws ApiException {
        String id = null;
        Step response = api.v2TasksIdJsonGet(id);
        // TODO: test validations
    }

    /**
     * Update a Task
     *
     * Updates a task. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2TasksIdJsonPutTest() throws ApiException {
        String id = null;
        String currentState = null;
        String description = null;
        String dueDate = null;
        Boolean isLogged = null;
        String remindAt = null;
        String subject = null;
        Task response = api.v2TasksIdJsonPut(id, currentState, description, dueDate, isLogged, remindAt, subject);
        // TODO: test validations
    }

    /**
     * List tasks
     *
     * Fetches multiple task records. The records can be filtered, paged, and sorted according to the respective parameters. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2TasksJsonGetTest() throws ApiException {
        List<Integer> ids = null;
        List<Integer> userId = null;
        List<Integer> personId = null;
        List<Integer> accountId = null;
        List<String> currentState = null;
        List<String> taskType = null;
        String timeIntervalFilter = null;
        String idempotencyKey = null;
        List<String> locale = null;
        String sortBy = null;
        String sortDirection = null;
        Integer perPage = null;
        Integer page = null;
        Boolean includePagingCounts = null;
        Boolean limitPagingCounts = null;
        List<Task> response = api.v2TasksJsonGet(ids, userId, personId, accountId, currentState, taskType, timeIntervalFilter, idempotencyKey, locale, sortBy, sortDirection, perPage, page, includePagingCounts, limitPagingCounts);
        // TODO: test validations
    }

    /**
     * Create a Task
     *
     * Creates a task. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2TasksJsonPostTest() throws ApiException {
        String currentState = null;
        String dueDate = null;
        String personId = null;
        String subject = null;
        String taskType = null;
        Integer userId = null;
        String description = null;
        String idempotencyKey = null;
        String remindAt = null;
        Task response = api.v2TasksJsonPost(currentState, dueDate, personId, subject, taskType, userId, description, idempotencyKey, remindAt);
        // TODO: test validations
    }

}
