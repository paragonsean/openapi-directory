/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Subscription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookSubscriptionsApi
 */
@Disabled
public class WebhookSubscriptionsApiTest {

    private final WebhookSubscriptionsApi api = new WebhookSubscriptionsApi();

    /**
     * List webhook subscriptions
     *
     * Fetches all of the customer&#39;s webhook subscriptions for your application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2WebhookSubscriptionsGetTest() throws ApiException {
        Boolean enabled = null;
        List<Subscription> response = api.v2WebhookSubscriptionsGet(enabled);
        // TODO: test validations
    }

    /**
     * Delete a webhook subscription
     *
     * Deletes a webhook subscription. This operation is not reversible without contacting support. This operation can be called multiple times successfully.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2WebhookSubscriptionsIdDeleteTest() throws ApiException {
        Integer id = null;
        api.v2WebhookSubscriptionsIdDelete(id);
        // TODO: test validations
    }

    /**
     * Fetch a webhook subscription
     *
     * Fetches a webhook subscription, by ID only.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2WebhookSubscriptionsIdGetTest() throws ApiException {
        Integer id = null;
        Subscription response = api.v2WebhookSubscriptionsIdGet(id);
        // TODO: test validations
    }

    /**
     * Update a webhook subscription
     *
     * Updates a webhook subscription. Request must be made with a valid Oauth token or API key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2WebhookSubscriptionsIdPutTest() throws ApiException {
        Integer id = null;
        Boolean enabled = null;
        Subscription response = api.v2WebhookSubscriptionsIdPut(id, enabled);
        // TODO: test validations
    }

    /**
     * Create a webhook subscription
     *
     * Creates a webhook subscription. Visit the &lt;a href&#x3D;\&quot;/webhooks.html\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;webhooks page&lt;/a&gt; for additional details and a list of available webhooks. Request must be made with a valid Oauth token or API key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2WebhookSubscriptionsPostTest() throws ApiException {
        String callbackToken = null;
        String callbackUrl = null;
        String eventType = null;
        Subscription response = api.v2WebhookSubscriptionsPost(callbackToken, callbackUrl, eventType);
        // TODO: test validations
    }

}
