/*
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CalendarEvent;
import java.time.LocalDate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CalendarEventsApi
 */
@Disabled
public class CalendarEventsApiTest {

    private final CalendarEventsApi api = new CalendarEventsApi();

    /**
     * List calendar events
     *
     * Returns all calendar events, paginated and filtered by the date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2CalendarEventsGetTest() throws ApiException {
        Integer perPage = null;
        Integer page = null;
        Boolean includePagingCounts = null;
        String sortBy = null;
        String sortDirection = null;
        String startTime = null;
        String endTime = null;
        String userGuid = null;
        String calendarId = null;
        List<CalendarEvent> response = api.v2CalendarEventsGet(perPage, page, includePagingCounts, sortBy, sortDirection, startTime, endTime, userGuid, calendarId);
        // TODO: test validations
    }

    /**
     * Upsert a calendar event
     *
     *   Upserts a calendar event object.   Upsert key is a combination of &#x60;id&#x60; and &#x60;i_cal_uid&#x60; scoped to the given &#x60;calendar_id&#x60;.   Bulk operations:   This endpoint is used for bulk operations, see https://developers.salesloft.com/bulk.html for integration instructions.   Use &#x60;calendar/events/upsert&#x60; as an event type, and this spec as a data spec.   This endpoint should be used directly for the time sensitive calendar event updates. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2CalendarEventsUpsertPostTest() throws ApiException {
        String calendarId = null;
        LocalDate endTime = null;
        String iCalUid = null;
        String id = null;
        LocalDate startTime = null;
        Boolean allDay = null;
        Object attendees = null;
        String canceledAt = null;
        String description = null;
        String location = null;
        String organizer = null;
        Boolean recurring = null;
        String status = null;
        String title = null;
        String updatedAt = null;
        CalendarEvent response = api.v2CalendarEventsUpsertPost(calendarId, endTime, iCalUid, id, startTime, allDay, attendees, canceledAt, description, location, organizer, recurring, status, title, updatedAt);
        // TODO: test validations
    }

}
