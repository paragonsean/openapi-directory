/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICallerId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICallerId::OAICallerId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICallerId::OAICallerId() {
    this->initializeModel();
}

OAICallerId::~OAICallerId() {}

void OAICallerId::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_person_isSet = false;
    m_person_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAICallerId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICallerId::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("account_name")]);
    m_account_name_isSet = !json[QString("account_name")].isNull() && m_account_name_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_person_isValid = ::OpenAPI::fromJsonValue(m_person, json[QString("person")]);
    m_person_isSet = !json[QString("person")].isNull() && m_person_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAICallerId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICallerId::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("account_name"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_person.isSet()) {
        obj.insert(QString("person"), ::OpenAPI::toJsonValue(m_person));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAICallerId::getAccountName() const {
    return m_account_name;
}
void OAICallerId::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAICallerId::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAICallerId::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAICallerId::getDisplayName() const {
    return m_display_name;
}
void OAICallerId::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICallerId::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICallerId::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIEmbeddedResource OAICallerId::getPerson() const {
    return m_person;
}
void OAICallerId::setPerson(const OAIEmbeddedResource &person) {
    m_person = person;
    m_person_isSet = true;
}

bool OAICallerId::is_person_Set() const{
    return m_person_isSet;
}

bool OAICallerId::is_person_Valid() const{
    return m_person_isValid;
}

QString OAICallerId::getTitle() const {
    return m_title;
}
void OAICallerId::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICallerId::is_title_Set() const{
    return m_title_isSet;
}

bool OAICallerId::is_title_Valid() const{
    return m_title_isValid;
}

bool OAICallerId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_person.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICallerId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
