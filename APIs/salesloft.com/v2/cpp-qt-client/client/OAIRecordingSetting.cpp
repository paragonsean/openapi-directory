/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecordingSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecordingSetting::OAIRecordingSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecordingSetting::OAIRecordingSetting() {
    this->initializeModel();
}

OAIRecordingSetting::~OAIRecordingSetting() {}

void OAIRecordingSetting::initializeModel() {

    m_recording_default_isSet = false;
    m_recording_default_isValid = false;
}

void OAIRecordingSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecordingSetting::fromJsonObject(QJsonObject json) {

    m_recording_default_isValid = ::OpenAPI::fromJsonValue(m_recording_default, json[QString("recording_default")]);
    m_recording_default_isSet = !json[QString("recording_default")].isNull() && m_recording_default_isValid;
}

QString OAIRecordingSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecordingSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_recording_default_isSet) {
        obj.insert(QString("recording_default"), ::OpenAPI::toJsonValue(m_recording_default));
    }
    return obj;
}

bool OAIRecordingSetting::isRecordingDefault() const {
    return m_recording_default;
}
void OAIRecordingSetting::setRecordingDefault(const bool &recording_default) {
    m_recording_default = recording_default;
    m_recording_default_isSet = true;
}

bool OAIRecordingSetting::is_recording_default_Set() const{
    return m_recording_default_isSet;
}

bool OAIRecordingSetting::is_recording_default_Valid() const{
    return m_recording_default_isValid;
}

bool OAIRecordingSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recording_default_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecordingSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
