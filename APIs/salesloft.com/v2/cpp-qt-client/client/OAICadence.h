/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICadence.h
 *
 * 
 */

#ifndef OAICadence_H
#define OAICadence_H

#include <QJsonObject>

#include "OAICadenceCounts.h"
#include "OAIEmbeddedResource.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmbeddedResource;
class OAICadenceCounts;

class OAICadence : public OAIObject {
public:
    OAICadence();
    OAICadence(QString json);
    ~OAICadence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEmbeddedResource getAddedStage() const;
    void setAddedStage(const OAIEmbeddedResource &added_stage);
    bool is_added_stage_Set() const;
    bool is_added_stage_Valid() const;

    QDateTime getArchivedAt() const;
    void setArchivedAt(const QDateTime &archived_at);
    bool is_archived_at_Set() const;
    bool is_archived_at_Valid() const;

    OAIEmbeddedResource getBouncedStage() const;
    void setBouncedStage(const OAIEmbeddedResource &bounced_stage);
    bool is_bounced_stage_Set() const;
    bool is_bounced_stage_Valid() const;

    qint32 getCadenceFrameworkId() const;
    void setCadenceFrameworkId(const qint32 &cadence_framework_id);
    bool is_cadence_framework_id_Set() const;
    bool is_cadence_framework_id_Valid() const;

    QString getCadenceFunction() const;
    void setCadenceFunction(const QString &cadence_function);
    bool is_cadence_function_Set() const;
    bool is_cadence_function_Valid() const;

    OAIEmbeddedResource getCadencePriority() const;
    void setCadencePriority(const OAIEmbeddedResource &cadence_priority);
    bool is_cadence_priority_Set() const;
    bool is_cadence_priority_Valid() const;

    OAICadenceCounts getCounts() const;
    void setCounts(const OAICadenceCounts &counts);
    bool is_counts_Set() const;
    bool is_counts_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIEmbeddedResource getCreator() const;
    void setCreator(const OAIEmbeddedResource &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    bool isDraft() const;
    void setDraft(const bool &draft);
    bool is_draft_Set() const;
    bool is_draft_Valid() const;

    QString getExternalIdentifier() const;
    void setExternalIdentifier(const QString &external_identifier);
    bool is_external_identifier_Set() const;
    bool is_external_identifier_Valid() const;

    OAIEmbeddedResource getFinishedStage() const;
    void setFinishedStage(const OAIEmbeddedResource &finished_stage);
    bool is_finished_stage_Set() const;
    bool is_finished_stage_Valid() const;

    QList<OAIEmbeddedResource> getGroups() const;
    void setGroups(const QList<OAIEmbeddedResource> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOptOutLinkIncluded() const;
    void setOptOutLinkIncluded(const bool &opt_out_link_included);
    bool is_opt_out_link_included_Set() const;
    bool is_opt_out_link_included_Valid() const;

    OAIEmbeddedResource getOwner() const;
    void setOwner(const OAIEmbeddedResource &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    bool isRemoveBouncesEnabled() const;
    void setRemoveBouncesEnabled(const bool &remove_bounces_enabled);
    bool is_remove_bounces_enabled_Set() const;
    bool is_remove_bounces_enabled_Valid() const;

    bool isRemoveRepliesEnabled() const;
    void setRemoveRepliesEnabled(const bool &remove_replies_enabled);
    bool is_remove_replies_enabled_Set() const;
    bool is_remove_replies_enabled_Valid() const;

    OAIEmbeddedResource getRepliedStage() const;
    void setRepliedStage(const OAIEmbeddedResource &replied_stage);
    bool is_replied_stage_Set() const;
    bool is_replied_stage_Valid() const;

    bool isShared() const;
    void setShared(const bool &shared);
    bool is_shared_Set() const;
    bool is_shared_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    bool isTeamCadence() const;
    void setTeamCadence(const bool &team_cadence);
    bool is_team_cadence_Set() const;
    bool is_team_cadence_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEmbeddedResource m_added_stage;
    bool m_added_stage_isSet;
    bool m_added_stage_isValid;

    QDateTime m_archived_at;
    bool m_archived_at_isSet;
    bool m_archived_at_isValid;

    OAIEmbeddedResource m_bounced_stage;
    bool m_bounced_stage_isSet;
    bool m_bounced_stage_isValid;

    qint32 m_cadence_framework_id;
    bool m_cadence_framework_id_isSet;
    bool m_cadence_framework_id_isValid;

    QString m_cadence_function;
    bool m_cadence_function_isSet;
    bool m_cadence_function_isValid;

    OAIEmbeddedResource m_cadence_priority;
    bool m_cadence_priority_isSet;
    bool m_cadence_priority_isValid;

    OAICadenceCounts m_counts;
    bool m_counts_isSet;
    bool m_counts_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIEmbeddedResource m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    bool m_draft;
    bool m_draft_isSet;
    bool m_draft_isValid;

    QString m_external_identifier;
    bool m_external_identifier_isSet;
    bool m_external_identifier_isValid;

    OAIEmbeddedResource m_finished_stage;
    bool m_finished_stage_isSet;
    bool m_finished_stage_isValid;

    QList<OAIEmbeddedResource> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_opt_out_link_included;
    bool m_opt_out_link_included_isSet;
    bool m_opt_out_link_included_isValid;

    OAIEmbeddedResource m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    bool m_remove_bounces_enabled;
    bool m_remove_bounces_enabled_isSet;
    bool m_remove_bounces_enabled_isValid;

    bool m_remove_replies_enabled;
    bool m_remove_replies_enabled_isSet;
    bool m_remove_replies_enabled_isValid;

    OAIEmbeddedResource m_replied_stage;
    bool m_replied_stage_isSet;
    bool m_replied_stage_isValid;

    bool m_shared;
    bool m_shared_isSet;
    bool m_shared_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    bool m_team_cadence;
    bool m_team_cadence_isSet;
    bool m_team_cadence_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICadence)

#endif // OAICadence_H
