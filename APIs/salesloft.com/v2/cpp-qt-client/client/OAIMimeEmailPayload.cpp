/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMimeEmailPayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMimeEmailPayload::OAIMimeEmailPayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMimeEmailPayload::OAIMimeEmailPayload() {
    this->initializeModel();
}

OAIMimeEmailPayload::~OAIMimeEmailPayload() {}

void OAIMimeEmailPayload::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_mailbox_isSet = false;
    m_mailbox_isValid = false;

    m_message_id_isSet = false;
    m_message_id_isValid = false;

    m_raw_isSet = false;
    m_raw_isValid = false;
}

void OAIMimeEmailPayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMimeEmailPayload::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_mailbox_isValid = ::OpenAPI::fromJsonValue(m_mailbox, json[QString("mailbox")]);
    m_mailbox_isSet = !json[QString("mailbox")].isNull() && m_mailbox_isValid;

    m_message_id_isValid = ::OpenAPI::fromJsonValue(m_message_id, json[QString("message_id")]);
    m_message_id_isSet = !json[QString("message_id")].isNull() && m_message_id_isValid;

    m_raw_isValid = ::OpenAPI::fromJsonValue(m_raw, json[QString("raw")]);
    m_raw_isSet = !json[QString("raw")].isNull() && m_raw_isValid;
}

QString OAIMimeEmailPayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMimeEmailPayload::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_mailbox_isSet) {
        obj.insert(QString("mailbox"), ::OpenAPI::toJsonValue(m_mailbox));
    }
    if (m_message_id_isSet) {
        obj.insert(QString("message_id"), ::OpenAPI::toJsonValue(m_message_id));
    }
    if (m_raw_isSet) {
        obj.insert(QString("raw"), ::OpenAPI::toJsonValue(m_raw));
    }
    return obj;
}

qint32 OAIMimeEmailPayload::getId() const {
    return m_id;
}
void OAIMimeEmailPayload::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIMimeEmailPayload::is_id_Set() const{
    return m_id_isSet;
}

bool OAIMimeEmailPayload::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIMimeEmailPayload::getMailbox() const {
    return m_mailbox;
}
void OAIMimeEmailPayload::setMailbox(const QString &mailbox) {
    m_mailbox = mailbox;
    m_mailbox_isSet = true;
}

bool OAIMimeEmailPayload::is_mailbox_Set() const{
    return m_mailbox_isSet;
}

bool OAIMimeEmailPayload::is_mailbox_Valid() const{
    return m_mailbox_isValid;
}

QString OAIMimeEmailPayload::getMessageId() const {
    return m_message_id;
}
void OAIMimeEmailPayload::setMessageId(const QString &message_id) {
    m_message_id = message_id;
    m_message_id_isSet = true;
}

bool OAIMimeEmailPayload::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAIMimeEmailPayload::is_message_id_Valid() const{
    return m_message_id_isValid;
}

QString OAIMimeEmailPayload::getRaw() const {
    return m_raw;
}
void OAIMimeEmailPayload::setRaw(const QString &raw) {
    m_raw = raw;
    m_raw_isSet = true;
}

bool OAIMimeEmailPayload::is_raw_Set() const{
    return m_raw_isSet;
}

bool OAIMimeEmailPayload::is_raw_Valid() const{
    return m_raw_isValid;
}

bool OAIMimeEmailPayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mailbox_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMimeEmailPayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
