/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICall.h
 *
 * 
 */

#ifndef OAICall_H
#define OAICall_H

#include <QJsonObject>

#include "OAIEmbeddedRecordingResource.h"
#include "OAIEmbeddedResource.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmbeddedResource;
class OAIEmbeddedRecordingResource;

class OAICall : public OAIObject {
public:
    OAICall();
    OAICall(QString json);
    ~OAICall() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEmbeddedResource getAction() const;
    void setAction(const OAIEmbeddedResource &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAIEmbeddedResource getCadence() const;
    void setCadence(const OAIEmbeddedResource &cadence);
    bool is_cadence_Set() const;
    bool is_cadence_Valid() const;

    OAIEmbeddedResource getCalledPerson() const;
    void setCalledPerson(const OAIEmbeddedResource &called_person);
    bool is_called_person_Set() const;
    bool is_called_person_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIEmbeddedResource getCrmActivity() const;
    void setCrmActivity(const OAIEmbeddedResource &crm_activity);
    bool is_crm_activity_Set() const;
    bool is_crm_activity_Valid() const;

    QString getDisposition() const;
    void setDisposition(const QString &disposition);
    bool is_disposition_Set() const;
    bool is_disposition_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEmbeddedResource getNote() const;
    void setNote(const OAIEmbeddedResource &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QList<OAIEmbeddedRecordingResource> getRecordings() const;
    void setRecordings(const QList<OAIEmbeddedRecordingResource> &recordings);
    bool is_recordings_Set() const;
    bool is_recordings_Valid() const;

    QString getSentiment() const;
    void setSentiment(const QString &sentiment);
    bool is_sentiment_Set() const;
    bool is_sentiment_Valid() const;

    OAIEmbeddedResource getStep() const;
    void setStep(const OAIEmbeddedResource &step);
    bool is_step_Set() const;
    bool is_step_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIEmbeddedResource getUser() const;
    void setUser(const OAIEmbeddedResource &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEmbeddedResource m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAIEmbeddedResource m_cadence;
    bool m_cadence_isSet;
    bool m_cadence_isValid;

    OAIEmbeddedResource m_called_person;
    bool m_called_person_isSet;
    bool m_called_person_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIEmbeddedResource m_crm_activity;
    bool m_crm_activity_isSet;
    bool m_crm_activity_isValid;

    QString m_disposition;
    bool m_disposition_isSet;
    bool m_disposition_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEmbeddedResource m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QList<OAIEmbeddedRecordingResource> m_recordings;
    bool m_recordings_isSet;
    bool m_recordings_isValid;

    QString m_sentiment;
    bool m_sentiment_isSet;
    bool m_sentiment_isValid;

    OAIEmbeddedResource m_step;
    bool m_step_isSet;
    bool m_step_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIEmbeddedResource m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICall)

#endif // OAICall_H
