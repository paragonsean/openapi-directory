/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISavedListView.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISavedListView::OAISavedListView(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISavedListView::OAISavedListView() {
    this->initializeModel();
}

OAISavedListView::~OAISavedListView() {}

void OAISavedListView::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_default_isSet = false;
    m_is_default_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_view_isSet = false;
    m_view_isValid = false;

    m_view_params_isSet = false;
    m_view_params_isValid = false;
}

void OAISavedListView::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISavedListView::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_default_isValid = ::OpenAPI::fromJsonValue(m_is_default, json[QString("is_default")]);
    m_is_default_isSet = !json[QString("is_default")].isNull() && m_is_default_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_view_isValid = ::OpenAPI::fromJsonValue(m_view, json[QString("view")]);
    m_view_isSet = !json[QString("view")].isNull() && m_view_isValid;

    m_view_params_isValid = ::OpenAPI::fromJsonValue(m_view_params, json[QString("view_params")]);
    m_view_params_isSet = !json[QString("view_params")].isNull() && m_view_params_isValid;
}

QString OAISavedListView::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISavedListView::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_default_isSet) {
        obj.insert(QString("is_default"), ::OpenAPI::toJsonValue(m_is_default));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_view_isSet) {
        obj.insert(QString("view"), ::OpenAPI::toJsonValue(m_view));
    }
    if (m_view_params_isSet) {
        obj.insert(QString("view_params"), ::OpenAPI::toJsonValue(m_view_params));
    }
    return obj;
}

qint32 OAISavedListView::getId() const {
    return m_id;
}
void OAISavedListView::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISavedListView::is_id_Set() const{
    return m_id_isSet;
}

bool OAISavedListView::is_id_Valid() const{
    return m_id_isValid;
}

bool OAISavedListView::isIsDefault() const {
    return m_is_default;
}
void OAISavedListView::setIsDefault(const bool &is_default) {
    m_is_default = is_default;
    m_is_default_isSet = true;
}

bool OAISavedListView::is_is_default_Set() const{
    return m_is_default_isSet;
}

bool OAISavedListView::is_is_default_Valid() const{
    return m_is_default_isValid;
}

QString OAISavedListView::getName() const {
    return m_name;
}
void OAISavedListView::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISavedListView::is_name_Set() const{
    return m_name_isSet;
}

bool OAISavedListView::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISavedListView::getView() const {
    return m_view;
}
void OAISavedListView::setView(const QString &view) {
    m_view = view;
    m_view_isSet = true;
}

bool OAISavedListView::is_view_Set() const{
    return m_view_isSet;
}

bool OAISavedListView::is_view_Valid() const{
    return m_view_isValid;
}

OAIObject OAISavedListView::getViewParams() const {
    return m_view_params;
}
void OAISavedListView::setViewParams(const OAIObject &view_params) {
    m_view_params = view_params;
    m_view_params_isSet = true;
}

bool OAISavedListView::is_view_params_Set() const{
    return m_view_params_isSet;
}

bool OAISavedListView::is_view_params_Valid() const{
    return m_view_params_isValid;
}

bool OAISavedListView::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_view_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_view_params_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISavedListView::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
