/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmail::OAIEmail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmail::OAIEmail() {
    this->initializeModel();
}

OAIEmail::~OAIEmail() {}

void OAIEmail::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_bounced_isSet = false;
    m_bounced_isValid = false;

    m_cadence_isSet = false;
    m_cadence_isValid = false;

    m_click_tracking_isSet = false;
    m_click_tracking_isValid = false;

    m_counts_isSet = false;
    m_counts_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_crm_activity_isSet = false;
    m_crm_activity_isValid = false;

    m_email_template_isSet = false;
    m_email_template_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_headers_isSet = false;
    m_headers_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_mailing_isSet = false;
    m_mailing_isValid = false;

    m_personalization_isSet = false;
    m_personalization_isValid = false;

    m_recipient_isSet = false;
    m_recipient_isValid = false;

    m_recipient_email_address_isSet = false;
    m_recipient_email_address_isValid = false;

    m_send_after_isSet = false;
    m_send_after_isValid = false;

    m_sent_at_isSet = false;
    m_sent_at_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_step_isSet = false;
    m_step_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;

    m_task_isSet = false;
    m_task_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;

    m_view_tracking_isSet = false;
    m_view_tracking_isValid = false;
}

void OAIEmail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmail::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_bounced_isValid = ::OpenAPI::fromJsonValue(m_bounced, json[QString("bounced")]);
    m_bounced_isSet = !json[QString("bounced")].isNull() && m_bounced_isValid;

    m_cadence_isValid = ::OpenAPI::fromJsonValue(m_cadence, json[QString("cadence")]);
    m_cadence_isSet = !json[QString("cadence")].isNull() && m_cadence_isValid;

    m_click_tracking_isValid = ::OpenAPI::fromJsonValue(m_click_tracking, json[QString("click_tracking")]);
    m_click_tracking_isSet = !json[QString("click_tracking")].isNull() && m_click_tracking_isValid;

    m_counts_isValid = ::OpenAPI::fromJsonValue(m_counts, json[QString("counts")]);
    m_counts_isSet = !json[QString("counts")].isNull() && m_counts_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_crm_activity_isValid = ::OpenAPI::fromJsonValue(m_crm_activity, json[QString("crm_activity")]);
    m_crm_activity_isSet = !json[QString("crm_activity")].isNull() && m_crm_activity_isValid;

    m_email_template_isValid = ::OpenAPI::fromJsonValue(m_email_template, json[QString("email_template")]);
    m_email_template_isSet = !json[QString("email_template")].isNull() && m_email_template_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("error_message")]);
    m_error_message_isSet = !json[QString("error_message")].isNull() && m_error_message_isValid;

    m_headers_isValid = ::OpenAPI::fromJsonValue(m_headers, json[QString("headers")]);
    m_headers_isSet = !json[QString("headers")].isNull() && m_headers_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_mailing_isValid = ::OpenAPI::fromJsonValue(m_mailing, json[QString("mailing")]);
    m_mailing_isSet = !json[QString("mailing")].isNull() && m_mailing_isValid;

    m_personalization_isValid = ::OpenAPI::fromJsonValue(m_personalization, json[QString("personalization")]);
    m_personalization_isSet = !json[QString("personalization")].isNull() && m_personalization_isValid;

    m_recipient_isValid = ::OpenAPI::fromJsonValue(m_recipient, json[QString("recipient")]);
    m_recipient_isSet = !json[QString("recipient")].isNull() && m_recipient_isValid;

    m_recipient_email_address_isValid = ::OpenAPI::fromJsonValue(m_recipient_email_address, json[QString("recipient_email_address")]);
    m_recipient_email_address_isSet = !json[QString("recipient_email_address")].isNull() && m_recipient_email_address_isValid;

    m_send_after_isValid = ::OpenAPI::fromJsonValue(m_send_after, json[QString("send_after")]);
    m_send_after_isSet = !json[QString("send_after")].isNull() && m_send_after_isValid;

    m_sent_at_isValid = ::OpenAPI::fromJsonValue(m_sent_at, json[QString("sent_at")]);
    m_sent_at_isSet = !json[QString("sent_at")].isNull() && m_sent_at_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_step_isValid = ::OpenAPI::fromJsonValue(m_step, json[QString("step")]);
    m_step_isSet = !json[QString("step")].isNull() && m_step_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("subject")]);
    m_subject_isSet = !json[QString("subject")].isNull() && m_subject_isValid;

    m_task_isValid = ::OpenAPI::fromJsonValue(m_task, json[QString("task")]);
    m_task_isSet = !json[QString("task")].isNull() && m_task_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;

    m_view_tracking_isValid = ::OpenAPI::fromJsonValue(m_view_tracking, json[QString("view_tracking")]);
    m_view_tracking_isSet = !json[QString("view_tracking")].isNull() && m_view_tracking_isValid;
}

QString OAIEmail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmail::asJsonObject() const {
    QJsonObject obj;
    if (m_action.isSet()) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_bounced_isSet) {
        obj.insert(QString("bounced"), ::OpenAPI::toJsonValue(m_bounced));
    }
    if (m_cadence.isSet()) {
        obj.insert(QString("cadence"), ::OpenAPI::toJsonValue(m_cadence));
    }
    if (m_click_tracking_isSet) {
        obj.insert(QString("click_tracking"), ::OpenAPI::toJsonValue(m_click_tracking));
    }
    if (m_counts.isSet()) {
        obj.insert(QString("counts"), ::OpenAPI::toJsonValue(m_counts));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_crm_activity.isSet()) {
        obj.insert(QString("crm_activity"), ::OpenAPI::toJsonValue(m_crm_activity));
    }
    if (m_email_template.isSet()) {
        obj.insert(QString("email_template"), ::OpenAPI::toJsonValue(m_email_template));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("error_message"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_headers_isSet) {
        obj.insert(QString("headers"), ::OpenAPI::toJsonValue(m_headers));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_mailing.isSet()) {
        obj.insert(QString("mailing"), ::OpenAPI::toJsonValue(m_mailing));
    }
    if (m_personalization_isSet) {
        obj.insert(QString("personalization"), ::OpenAPI::toJsonValue(m_personalization));
    }
    if (m_recipient.isSet()) {
        obj.insert(QString("recipient"), ::OpenAPI::toJsonValue(m_recipient));
    }
    if (m_recipient_email_address_isSet) {
        obj.insert(QString("recipient_email_address"), ::OpenAPI::toJsonValue(m_recipient_email_address));
    }
    if (m_send_after_isSet) {
        obj.insert(QString("send_after"), ::OpenAPI::toJsonValue(m_send_after));
    }
    if (m_sent_at_isSet) {
        obj.insert(QString("sent_at"), ::OpenAPI::toJsonValue(m_sent_at));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_step.isSet()) {
        obj.insert(QString("step"), ::OpenAPI::toJsonValue(m_step));
    }
    if (m_subject_isSet) {
        obj.insert(QString("subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    if (m_task.isSet()) {
        obj.insert(QString("task"), ::OpenAPI::toJsonValue(m_task));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    if (m_view_tracking_isSet) {
        obj.insert(QString("view_tracking"), ::OpenAPI::toJsonValue(m_view_tracking));
    }
    return obj;
}

OAIEmbeddedResource OAIEmail::getAction() const {
    return m_action;
}
void OAIEmail::setAction(const OAIEmbeddedResource &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIEmail::is_action_Set() const{
    return m_action_isSet;
}

bool OAIEmail::is_action_Valid() const{
    return m_action_isValid;
}

bool OAIEmail::isBounced() const {
    return m_bounced;
}
void OAIEmail::setBounced(const bool &bounced) {
    m_bounced = bounced;
    m_bounced_isSet = true;
}

bool OAIEmail::is_bounced_Set() const{
    return m_bounced_isSet;
}

bool OAIEmail::is_bounced_Valid() const{
    return m_bounced_isValid;
}

OAIEmbeddedResource OAIEmail::getCadence() const {
    return m_cadence;
}
void OAIEmail::setCadence(const OAIEmbeddedResource &cadence) {
    m_cadence = cadence;
    m_cadence_isSet = true;
}

bool OAIEmail::is_cadence_Set() const{
    return m_cadence_isSet;
}

bool OAIEmail::is_cadence_Valid() const{
    return m_cadence_isValid;
}

bool OAIEmail::isClickTracking() const {
    return m_click_tracking;
}
void OAIEmail::setClickTracking(const bool &click_tracking) {
    m_click_tracking = click_tracking;
    m_click_tracking_isSet = true;
}

bool OAIEmail::is_click_tracking_Set() const{
    return m_click_tracking_isSet;
}

bool OAIEmail::is_click_tracking_Valid() const{
    return m_click_tracking_isValid;
}

OAIEmailCounts OAIEmail::getCounts() const {
    return m_counts;
}
void OAIEmail::setCounts(const OAIEmailCounts &counts) {
    m_counts = counts;
    m_counts_isSet = true;
}

bool OAIEmail::is_counts_Set() const{
    return m_counts_isSet;
}

bool OAIEmail::is_counts_Valid() const{
    return m_counts_isValid;
}

QDateTime OAIEmail::getCreatedAt() const {
    return m_created_at;
}
void OAIEmail::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIEmail::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIEmail::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIEmbeddedResource OAIEmail::getCrmActivity() const {
    return m_crm_activity;
}
void OAIEmail::setCrmActivity(const OAIEmbeddedResource &crm_activity) {
    m_crm_activity = crm_activity;
    m_crm_activity_isSet = true;
}

bool OAIEmail::is_crm_activity_Set() const{
    return m_crm_activity_isSet;
}

bool OAIEmail::is_crm_activity_Valid() const{
    return m_crm_activity_isValid;
}

OAIEmbeddedResource OAIEmail::getEmailTemplate() const {
    return m_email_template;
}
void OAIEmail::setEmailTemplate(const OAIEmbeddedResource &email_template) {
    m_email_template = email_template;
    m_email_template_isSet = true;
}

bool OAIEmail::is_email_template_Set() const{
    return m_email_template_isSet;
}

bool OAIEmail::is_email_template_Valid() const{
    return m_email_template_isValid;
}

QString OAIEmail::getErrorMessage() const {
    return m_error_message;
}
void OAIEmail::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIEmail::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIEmail::is_error_message_Valid() const{
    return m_error_message_isValid;
}

OAIObject OAIEmail::getHeaders() const {
    return m_headers;
}
void OAIEmail::setHeaders(const OAIObject &headers) {
    m_headers = headers;
    m_headers_isSet = true;
}

bool OAIEmail::is_headers_Set() const{
    return m_headers_isSet;
}

bool OAIEmail::is_headers_Valid() const{
    return m_headers_isValid;
}

qint32 OAIEmail::getId() const {
    return m_id;
}
void OAIEmail::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIEmail::is_id_Set() const{
    return m_id_isSet;
}

bool OAIEmail::is_id_Valid() const{
    return m_id_isValid;
}

OAIEmbeddedResource OAIEmail::getMailing() const {
    return m_mailing;
}
void OAIEmail::setMailing(const OAIEmbeddedResource &mailing) {
    m_mailing = mailing;
    m_mailing_isSet = true;
}

bool OAIEmail::is_mailing_Set() const{
    return m_mailing_isSet;
}

bool OAIEmail::is_mailing_Valid() const{
    return m_mailing_isValid;
}

QString OAIEmail::getPersonalization() const {
    return m_personalization;
}
void OAIEmail::setPersonalization(const QString &personalization) {
    m_personalization = personalization;
    m_personalization_isSet = true;
}

bool OAIEmail::is_personalization_Set() const{
    return m_personalization_isSet;
}

bool OAIEmail::is_personalization_Valid() const{
    return m_personalization_isValid;
}

OAIEmbeddedResource OAIEmail::getRecipient() const {
    return m_recipient;
}
void OAIEmail::setRecipient(const OAIEmbeddedResource &recipient) {
    m_recipient = recipient;
    m_recipient_isSet = true;
}

bool OAIEmail::is_recipient_Set() const{
    return m_recipient_isSet;
}

bool OAIEmail::is_recipient_Valid() const{
    return m_recipient_isValid;
}

QString OAIEmail::getRecipientEmailAddress() const {
    return m_recipient_email_address;
}
void OAIEmail::setRecipientEmailAddress(const QString &recipient_email_address) {
    m_recipient_email_address = recipient_email_address;
    m_recipient_email_address_isSet = true;
}

bool OAIEmail::is_recipient_email_address_Set() const{
    return m_recipient_email_address_isSet;
}

bool OAIEmail::is_recipient_email_address_Valid() const{
    return m_recipient_email_address_isValid;
}

QDateTime OAIEmail::getSendAfter() const {
    return m_send_after;
}
void OAIEmail::setSendAfter(const QDateTime &send_after) {
    m_send_after = send_after;
    m_send_after_isSet = true;
}

bool OAIEmail::is_send_after_Set() const{
    return m_send_after_isSet;
}

bool OAIEmail::is_send_after_Valid() const{
    return m_send_after_isValid;
}

QDateTime OAIEmail::getSentAt() const {
    return m_sent_at;
}
void OAIEmail::setSentAt(const QDateTime &sent_at) {
    m_sent_at = sent_at;
    m_sent_at_isSet = true;
}

bool OAIEmail::is_sent_at_Set() const{
    return m_sent_at_isSet;
}

bool OAIEmail::is_sent_at_Valid() const{
    return m_sent_at_isValid;
}

QString OAIEmail::getStatus() const {
    return m_status;
}
void OAIEmail::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIEmail::is_status_Set() const{
    return m_status_isSet;
}

bool OAIEmail::is_status_Valid() const{
    return m_status_isValid;
}

OAIEmbeddedResource OAIEmail::getStep() const {
    return m_step;
}
void OAIEmail::setStep(const OAIEmbeddedResource &step) {
    m_step = step;
    m_step_isSet = true;
}

bool OAIEmail::is_step_Set() const{
    return m_step_isSet;
}

bool OAIEmail::is_step_Valid() const{
    return m_step_isValid;
}

QString OAIEmail::getSubject() const {
    return m_subject;
}
void OAIEmail::setSubject(const QString &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAIEmail::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAIEmail::is_subject_Valid() const{
    return m_subject_isValid;
}

OAIEmbeddedResource OAIEmail::getTask() const {
    return m_task;
}
void OAIEmail::setTask(const OAIEmbeddedResource &task) {
    m_task = task;
    m_task_isSet = true;
}

bool OAIEmail::is_task_Set() const{
    return m_task_isSet;
}

bool OAIEmail::is_task_Valid() const{
    return m_task_isValid;
}

QDateTime OAIEmail::getUpdatedAt() const {
    return m_updated_at;
}
void OAIEmail::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIEmail::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIEmail::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

OAIEmbeddedResource OAIEmail::getUser() const {
    return m_user;
}
void OAIEmail::setUser(const OAIEmbeddedResource &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIEmail::is_user_Set() const{
    return m_user_isSet;
}

bool OAIEmail::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIEmail::isViewTracking() const {
    return m_view_tracking;
}
void OAIEmail::setViewTracking(const bool &view_tracking) {
    m_view_tracking = view_tracking;
    m_view_tracking_isSet = true;
}

bool OAIEmail::is_view_tracking_Set() const{
    return m_view_tracking_isSet;
}

bool OAIEmail::is_view_tracking_Valid() const{
    return m_view_tracking_isValid;
}

bool OAIEmail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bounced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cadence.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_click_tracking_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_counts.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crm_activity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mailing.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_personalization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sent_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_task.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_view_tracking_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
