/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomField::OAICustomField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomField::OAICustomField() {
    this->initializeModel();
}

OAICustomField::~OAICustomField() {}

void OAICustomField::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_field_type_isSet = false;
    m_field_type_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_value_type_isSet = false;
    m_value_type_isValid = false;
}

void OAICustomField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomField::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_field_type_isValid = ::OpenAPI::fromJsonValue(m_field_type, json[QString("field_type")]);
    m_field_type_isSet = !json[QString("field_type")].isNull() && m_field_type_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_value_type_isValid = ::OpenAPI::fromJsonValue(m_value_type, json[QString("value_type")]);
    m_value_type_isSet = !json[QString("value_type")].isNull() && m_value_type_isValid;
}

QString OAICustomField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomField::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_field_type_isSet) {
        obj.insert(QString("field_type"), ::OpenAPI::toJsonValue(m_field_type));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_value_type_isSet) {
        obj.insert(QString("value_type"), ::OpenAPI::toJsonValue(m_value_type));
    }
    return obj;
}

QDateTime OAICustomField::getCreatedAt() const {
    return m_created_at;
}
void OAICustomField::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICustomField::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICustomField::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICustomField::getFieldType() const {
    return m_field_type;
}
void OAICustomField::setFieldType(const QString &field_type) {
    m_field_type = field_type;
    m_field_type_isSet = true;
}

bool OAICustomField::is_field_type_Set() const{
    return m_field_type_isSet;
}

bool OAICustomField::is_field_type_Valid() const{
    return m_field_type_isValid;
}

qint32 OAICustomField::getId() const {
    return m_id;
}
void OAICustomField::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomField::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomField::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICustomField::getName() const {
    return m_name;
}
void OAICustomField::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICustomField::is_name_Set() const{
    return m_name_isSet;
}

bool OAICustomField::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAICustomField::getUpdatedAt() const {
    return m_updated_at;
}
void OAICustomField::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAICustomField::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAICustomField::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

QString OAICustomField::getValueType() const {
    return m_value_type;
}
void OAICustomField::setValueType(const QString &value_type) {
    m_value_type = value_type;
    m_value_type_isSet = true;
}

bool OAICustomField::is_value_type_Set() const{
    return m_value_type_isSet;
}

bool OAICustomField::is_value_type_Valid() const{
    return m_value_type_isValid;
}

bool OAICustomField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
