/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBulkJob.h
 *
 * 
 */

#ifndef OAIBulkJob_H
#define OAIBulkJob_H

#include <QJsonObject>

#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBulkJob : public OAIObject {
public:
    OAIBulkJob();
    OAIBulkJob(QString json);
    ~OAIBulkJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getErrors() const;
    void setErrors(const qint32 &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QDateTime getFinishedAt() const;
    void setFinishedAt(const QDateTime &finished_at);
    bool is_finished_at_Set() const;
    bool is_finished_at_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getMarkedReadyAt() const;
    void setMarkedReadyAt(const QDateTime &marked_ready_at);
    bool is_marked_ready_at_Set() const;
    bool is_marked_ready_at_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getProcessed() const;
    void setProcessed(const qint32 &processed);
    bool is_processed_Set() const;
    bool is_processed_Valid() const;

    bool isReadyToExecute() const;
    void setReadyToExecute(const bool &ready_to_execute);
    bool is_ready_to_execute_Set() const;
    bool is_ready_to_execute_Valid() const;

    QList<QJsonValue> getScopes() const;
    void setScopes(const QList<QJsonValue> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QDateTime m_finished_at;
    bool m_finished_at_isSet;
    bool m_finished_at_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_marked_ready_at;
    bool m_marked_ready_at_isSet;
    bool m_marked_ready_at_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_processed;
    bool m_processed_isSet;
    bool m_processed_isValid;

    bool m_ready_to_execute;
    bool m_ready_to_execute_isSet;
    bool m_ready_to_execute_isValid;

    QList<QJsonValue> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBulkJob)

#endif // OAIBulkJob_H
