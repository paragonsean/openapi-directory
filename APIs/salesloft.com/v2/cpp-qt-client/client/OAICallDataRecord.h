/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICallDataRecord.h
 *
 * 
 */

#ifndef OAICallDataRecord_H
#define OAICallDataRecord_H

#include <QJsonObject>

#include "OAIEmbeddedRecordingResource.h"
#include "OAIEmbeddedResource.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmbeddedResource;
class OAIEmbeddedRecordingResource;

class OAICallDataRecord : public OAIObject {
public:
    OAICallDataRecord();
    OAICallDataRecord(QString json);
    ~OAICallDataRecord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEmbeddedResource getCall() const;
    void setCall(const OAIEmbeddedResource &call);
    bool is_call_Set() const;
    bool is_call_Valid() const;

    QString getCallType() const;
    void setCallType(const QString &call_type);
    bool is_call_type_Set() const;
    bool is_call_type_Valid() const;

    QString getCallUuid() const;
    void setCallUuid(const QString &call_uuid);
    bool is_call_uuid_Set() const;
    bool is_call_uuid_Valid() const;

    OAIEmbeddedResource getCalledPerson() const;
    void setCalledPerson(const OAIEmbeddedResource &called_person);
    bool is_called_person_Set() const;
    bool is_called_person_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEmbeddedRecordingResource getRecording() const;
    void setRecording(const OAIEmbeddedRecordingResource &recording);
    bool is_recording_Set() const;
    bool is_recording_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIEmbeddedResource getUser() const;
    void setUser(const OAIEmbeddedResource &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEmbeddedResource m_call;
    bool m_call_isSet;
    bool m_call_isValid;

    QString m_call_type;
    bool m_call_type_isSet;
    bool m_call_type_isValid;

    QString m_call_uuid;
    bool m_call_uuid_isSet;
    bool m_call_uuid_isValid;

    OAIEmbeddedResource m_called_person;
    bool m_called_person_isSet;
    bool m_called_person_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEmbeddedRecordingResource m_recording;
    bool m_recording_isSet;
    bool m_recording_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIEmbeddedResource m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICallDataRecord)

#endif // OAICallDataRecord_H
