/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITask.h
 *
 * 
 */

#ifndef OAITask_H
#define OAITask_H

#include <QJsonObject>

#include "OAIEmbeddedResource.h"
#include <QDate>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmbeddedResource;

class OAITask : public OAIObject {
public:
    OAITask();
    OAITask(QString json);
    ~OAITask() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCompletedAt() const;
    void setCompletedAt(const QDateTime &completed_at);
    bool is_completed_at_Set() const;
    bool is_completed_at_Valid() const;

    OAIEmbeddedResource getCompletedBy() const;
    void setCompletedBy(const OAIEmbeddedResource &completed_by);
    bool is_completed_by_Set() const;
    bool is_completed_by_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIEmbeddedResource getCreatedByUser() const;
    void setCreatedByUser(const OAIEmbeddedResource &created_by_user);
    bool is_created_by_user_Set() const;
    bool is_created_by_user_Valid() const;

    QString getCurrentState() const;
    void setCurrentState(const QString &current_state);
    bool is_current_state_Set() const;
    bool is_current_state_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getDueAt() const;
    void setDueAt(const QDateTime &due_at);
    bool is_due_at_Set() const;
    bool is_due_at_Valid() const;

    QDate getDueDate() const;
    void setDueDate(const QDate &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEmbeddedResource getPerson() const;
    void setPerson(const OAIEmbeddedResource &person);
    bool is_person_Set() const;
    bool is_person_Valid() const;

    QDateTime getRemindAt() const;
    void setRemindAt(const QDateTime &remind_at);
    bool is_remind_at_Set() const;
    bool is_remind_at_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getTaskType() const;
    void setTaskType(const QString &task_type);
    bool is_task_type_Set() const;
    bool is_task_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIEmbeddedResource getUser() const;
    void setUser(const OAIEmbeddedResource &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_completed_at;
    bool m_completed_at_isSet;
    bool m_completed_at_isValid;

    OAIEmbeddedResource m_completed_by;
    bool m_completed_by_isSet;
    bool m_completed_by_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIEmbeddedResource m_created_by_user;
    bool m_created_by_user_isSet;
    bool m_created_by_user_isValid;

    QString m_current_state;
    bool m_current_state_isSet;
    bool m_current_state_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_due_at;
    bool m_due_at_isSet;
    bool m_due_at_isValid;

    QDate m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEmbeddedResource m_person;
    bool m_person_isSet;
    bool m_person_isValid;

    QDateTime m_remind_at;
    bool m_remind_at_isSet;
    bool m_remind_at_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_task_type;
    bool m_task_type_isSet;
    bool m_task_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIEmbeddedResource m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITask)

#endif // OAITask_H
