/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISuccess.h
 *
 * 
 */

#ifndef OAISuccess_H
#define OAISuccess_H

#include <QJsonObject>

#include "OAIEmbeddedResource.h"
#include "OAISuccessCounts.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISuccessCounts;
class OAIEmbeddedResource;

class OAISuccess : public OAIObject {
public:
    OAISuccess();
    OAISuccess(QString json);
    ~OAISuccess() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISuccessCounts getCounts() const;
    void setCounts(const OAISuccessCounts &counts);
    bool is_counts_Set() const;
    bool is_counts_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEmbeddedResource getLatestAction() const;
    void setLatestAction(const OAIEmbeddedResource &latest_action);
    bool is_latest_action_Set() const;
    bool is_latest_action_Valid() const;

    OAIEmbeddedResource getLatestCadence() const;
    void setLatestCadence(const OAIEmbeddedResource &latest_cadence);
    bool is_latest_cadence_Set() const;
    bool is_latest_cadence_Valid() const;

    OAIEmbeddedResource getLatestCall() const;
    void setLatestCall(const OAIEmbeddedResource &latest_call);
    bool is_latest_call_Set() const;
    bool is_latest_call_Valid() const;

    OAIEmbeddedResource getLatestEmail() const;
    void setLatestEmail(const OAIEmbeddedResource &latest_email);
    bool is_latest_email_Set() const;
    bool is_latest_email_Valid() const;

    OAIEmbeddedResource getLatestStep() const;
    void setLatestStep(const OAIEmbeddedResource &latest_step);
    bool is_latest_step_Set() const;
    bool is_latest_step_Valid() const;

    OAIEmbeddedResource getPerson() const;
    void setPerson(const OAIEmbeddedResource &person);
    bool is_person_Set() const;
    bool is_person_Valid() const;

    QDateTime getSucceededAt() const;
    void setSucceededAt(const QDateTime &succeeded_at);
    bool is_succeeded_at_Set() const;
    bool is_succeeded_at_Valid() const;

    QDateTime getSuccessWindowStartedAt() const;
    void setSuccessWindowStartedAt(const QDateTime &success_window_started_at);
    bool is_success_window_started_at_Set() const;
    bool is_success_window_started_at_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIEmbeddedResource getUser() const;
    void setUser(const OAIEmbeddedResource &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISuccessCounts m_counts;
    bool m_counts_isSet;
    bool m_counts_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEmbeddedResource m_latest_action;
    bool m_latest_action_isSet;
    bool m_latest_action_isValid;

    OAIEmbeddedResource m_latest_cadence;
    bool m_latest_cadence_isSet;
    bool m_latest_cadence_isValid;

    OAIEmbeddedResource m_latest_call;
    bool m_latest_call_isSet;
    bool m_latest_call_isValid;

    OAIEmbeddedResource m_latest_email;
    bool m_latest_email_isSet;
    bool m_latest_email_isValid;

    OAIEmbeddedResource m_latest_step;
    bool m_latest_step_isSet;
    bool m_latest_step_isValid;

    OAIEmbeddedResource m_person;
    bool m_person_isSet;
    bool m_person_isValid;

    QDateTime m_succeeded_at;
    bool m_succeeded_at_isSet;
    bool m_succeeded_at_isValid;

    QDateTime m_success_window_started_at;
    bool m_success_window_started_at_isSet;
    bool m_success_window_started_at_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIEmbeddedResource m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISuccess)

#endif // OAISuccess_H
