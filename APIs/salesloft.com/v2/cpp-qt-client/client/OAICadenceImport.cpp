/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICadenceImport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICadenceImport::OAICadenceImport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICadenceImport::OAICadenceImport() {
    this->initializeModel();
}

OAICadenceImport::~OAICadenceImport() {}

void OAICadenceImport::initializeModel() {

    m_cadence_isSet = false;
    m_cadence_isValid = false;
}

void OAICadenceImport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICadenceImport::fromJsonObject(QJsonObject json) {

    m_cadence_isValid = ::OpenAPI::fromJsonValue(m_cadence, json[QString("cadence")]);
    m_cadence_isSet = !json[QString("cadence")].isNull() && m_cadence_isValid;
}

QString OAICadenceImport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICadenceImport::asJsonObject() const {
    QJsonObject obj;
    if (m_cadence.isSet()) {
        obj.insert(QString("cadence"), ::OpenAPI::toJsonValue(m_cadence));
    }
    return obj;
}

OAIEmbeddedResource OAICadenceImport::getCadence() const {
    return m_cadence;
}
void OAICadenceImport::setCadence(const OAIEmbeddedResource &cadence) {
    m_cadence = cadence;
    m_cadence_isSet = true;
}

bool OAICadenceImport::is_cadence_Set() const{
    return m_cadence_isSet;
}

bool OAICadenceImport::is_cadence_Valid() const{
    return m_cadence_isValid;
}

bool OAICadenceImport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cadence.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICadenceImport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
