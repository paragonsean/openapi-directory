/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAction.h
 *
 * 
 */

#ifndef OAIAction_H
#define OAIAction_H

#include <QJsonObject>

#include "OAIEmbeddedResource.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmbeddedResource;

class OAIAction : public OAIObject {
public:
    OAIAction();
    OAIAction(QString json);
    ~OAIAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEmbeddedResource getActionDetails() const;
    void setActionDetails(const OAIEmbeddedResource &action_details);
    bool is_action_details_Set() const;
    bool is_action_details_Valid() const;

    OAIEmbeddedResource getCadence() const;
    void setCadence(const OAIEmbeddedResource &cadence);
    bool is_cadence_Set() const;
    bool is_cadence_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isDue() const;
    void setDue(const bool &due);
    bool is_due_Set() const;
    bool is_due_Valid() const;

    QDateTime getDueOn() const;
    void setDueOn(const QDateTime &due_on);
    bool is_due_on_Set() const;
    bool is_due_on_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getMultitouchGroupId() const;
    void setMultitouchGroupId(const qint32 &multitouch_group_id);
    bool is_multitouch_group_id_Set() const;
    bool is_multitouch_group_id_Valid() const;

    OAIEmbeddedResource getPerson() const;
    void setPerson(const OAIEmbeddedResource &person);
    bool is_person_Set() const;
    bool is_person_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIEmbeddedResource getStep() const;
    void setStep(const OAIEmbeddedResource &step);
    bool is_step_Set() const;
    bool is_step_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIEmbeddedResource getUser() const;
    void setUser(const OAIEmbeddedResource &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEmbeddedResource m_action_details;
    bool m_action_details_isSet;
    bool m_action_details_isValid;

    OAIEmbeddedResource m_cadence;
    bool m_cadence_isSet;
    bool m_cadence_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_due;
    bool m_due_isSet;
    bool m_due_isValid;

    QDateTime m_due_on;
    bool m_due_on_isSet;
    bool m_due_on_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_multitouch_group_id;
    bool m_multitouch_group_id_isSet;
    bool m_multitouch_group_id_isValid;

    OAIEmbeddedResource m_person;
    bool m_person_isSet;
    bool m_person_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIEmbeddedResource m_step;
    bool m_step_isSet;
    bool m_step_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIEmbeddedResource m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAction)

#endif // OAIAction_H
