/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICrmActivityField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICrmActivityField::OAICrmActivityField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICrmActivityField::OAICrmActivityField() {
    this->initializeModel();
}

OAICrmActivityField::~OAICrmActivityField() {}

void OAICrmActivityField::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_crm_object_type_isSet = false;
    m_crm_object_type_isValid = false;

    m_field_isSet = false;
    m_field_isValid = false;

    m_field_type_isSet = false;
    m_field_type_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_picklist_values_isSet = false;
    m_picklist_values_isValid = false;

    m_salesforce_object_type_isSet = false;
    m_salesforce_object_type_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAICrmActivityField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICrmActivityField::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_crm_object_type_isValid = ::OpenAPI::fromJsonValue(m_crm_object_type, json[QString("crm_object_type")]);
    m_crm_object_type_isSet = !json[QString("crm_object_type")].isNull() && m_crm_object_type_isValid;

    m_field_isValid = ::OpenAPI::fromJsonValue(m_field, json[QString("field")]);
    m_field_isSet = !json[QString("field")].isNull() && m_field_isValid;

    m_field_type_isValid = ::OpenAPI::fromJsonValue(m_field_type, json[QString("field_type")]);
    m_field_type_isSet = !json[QString("field_type")].isNull() && m_field_type_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_picklist_values_isValid = ::OpenAPI::fromJsonValue(m_picklist_values, json[QString("picklist_values")]);
    m_picklist_values_isSet = !json[QString("picklist_values")].isNull() && m_picklist_values_isValid;

    m_salesforce_object_type_isValid = ::OpenAPI::fromJsonValue(m_salesforce_object_type, json[QString("salesforce_object_type")]);
    m_salesforce_object_type_isSet = !json[QString("salesforce_object_type")].isNull() && m_salesforce_object_type_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAICrmActivityField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICrmActivityField::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_crm_object_type_isSet) {
        obj.insert(QString("crm_object_type"), ::OpenAPI::toJsonValue(m_crm_object_type));
    }
    if (m_field_isSet) {
        obj.insert(QString("field"), ::OpenAPI::toJsonValue(m_field));
    }
    if (m_field_type_isSet) {
        obj.insert(QString("field_type"), ::OpenAPI::toJsonValue(m_field_type));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_picklist_values_isSet) {
        obj.insert(QString("picklist_values"), ::OpenAPI::toJsonValue(m_picklist_values));
    }
    if (m_salesforce_object_type_isSet) {
        obj.insert(QString("salesforce_object_type"), ::OpenAPI::toJsonValue(m_salesforce_object_type));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QDateTime OAICrmActivityField::getCreatedAt() const {
    return m_created_at;
}
void OAICrmActivityField::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICrmActivityField::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICrmActivityField::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICrmActivityField::getCrmObjectType() const {
    return m_crm_object_type;
}
void OAICrmActivityField::setCrmObjectType(const QString &crm_object_type) {
    m_crm_object_type = crm_object_type;
    m_crm_object_type_isSet = true;
}

bool OAICrmActivityField::is_crm_object_type_Set() const{
    return m_crm_object_type_isSet;
}

bool OAICrmActivityField::is_crm_object_type_Valid() const{
    return m_crm_object_type_isValid;
}

QString OAICrmActivityField::getField() const {
    return m_field;
}
void OAICrmActivityField::setField(const QString &field) {
    m_field = field;
    m_field_isSet = true;
}

bool OAICrmActivityField::is_field_Set() const{
    return m_field_isSet;
}

bool OAICrmActivityField::is_field_Valid() const{
    return m_field_isValid;
}

QString OAICrmActivityField::getFieldType() const {
    return m_field_type;
}
void OAICrmActivityField::setFieldType(const QString &field_type) {
    m_field_type = field_type;
    m_field_type_isSet = true;
}

bool OAICrmActivityField::is_field_type_Set() const{
    return m_field_type_isSet;
}

bool OAICrmActivityField::is_field_type_Valid() const{
    return m_field_type_isValid;
}

qint32 OAICrmActivityField::getId() const {
    return m_id;
}
void OAICrmActivityField::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICrmActivityField::is_id_Set() const{
    return m_id_isSet;
}

bool OAICrmActivityField::is_id_Valid() const{
    return m_id_isValid;
}

OAIObject OAICrmActivityField::getPicklistValues() const {
    return m_picklist_values;
}
void OAICrmActivityField::setPicklistValues(const OAIObject &picklist_values) {
    m_picklist_values = picklist_values;
    m_picklist_values_isSet = true;
}

bool OAICrmActivityField::is_picklist_values_Set() const{
    return m_picklist_values_isSet;
}

bool OAICrmActivityField::is_picklist_values_Valid() const{
    return m_picklist_values_isValid;
}

QString OAICrmActivityField::getSalesforceObjectType() const {
    return m_salesforce_object_type;
}
void OAICrmActivityField::setSalesforceObjectType(const QString &salesforce_object_type) {
    m_salesforce_object_type = salesforce_object_type;
    m_salesforce_object_type_isSet = true;
}

bool OAICrmActivityField::is_salesforce_object_type_Set() const{
    return m_salesforce_object_type_isSet;
}

bool OAICrmActivityField::is_salesforce_object_type_Valid() const{
    return m_salesforce_object_type_isValid;
}

QString OAICrmActivityField::getSource() const {
    return m_source;
}
void OAICrmActivityField::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAICrmActivityField::is_source_Set() const{
    return m_source_isSet;
}

bool OAICrmActivityField::is_source_Valid() const{
    return m_source_isValid;
}

QString OAICrmActivityField::getTitle() const {
    return m_title;
}
void OAICrmActivityField::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICrmActivityField::is_title_Set() const{
    return m_title_isSet;
}

bool OAICrmActivityField::is_title_Valid() const{
    return m_title_isValid;
}

QDateTime OAICrmActivityField::getUpdatedAt() const {
    return m_updated_at;
}
void OAICrmActivityField::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAICrmActivityField::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAICrmActivityField::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

QString OAICrmActivityField::getValue() const {
    return m_value;
}
void OAICrmActivityField::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAICrmActivityField::is_value_Set() const{
    return m_value_isSet;
}

bool OAICrmActivityField::is_value_Valid() const{
    return m_value_isValid;
}

bool OAICrmActivityField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crm_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picklist_values_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_salesforce_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICrmActivityField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
