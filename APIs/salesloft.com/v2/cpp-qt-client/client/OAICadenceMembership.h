/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICadenceMembership.h
 *
 * 
 */

#ifndef OAICadenceMembership_H
#define OAICadenceMembership_H

#include <QJsonObject>

#include "OAICadenceMembershipCounts.h"
#include "OAIEmbeddedResource.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmbeddedResource;
class OAICadenceMembershipCounts;

class OAICadenceMembership : public OAIObject {
public:
    OAICadenceMembership();
    OAICadenceMembership(QString json);
    ~OAICadenceMembership() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAddedAt() const;
    void setAddedAt(const QDateTime &added_at);
    bool is_added_at_Set() const;
    bool is_added_at_Valid() const;

    OAIEmbeddedResource getCadence() const;
    void setCadence(const OAIEmbeddedResource &cadence);
    bool is_cadence_Set() const;
    bool is_cadence_Valid() const;

    OAICadenceMembershipCounts getCounts() const;
    void setCounts(const OAICadenceMembershipCounts &counts);
    bool is_counts_Set() const;
    bool is_counts_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCurrentState() const;
    void setCurrentState(const QString &current_state);
    bool is_current_state_Set() const;
    bool is_current_state_Valid() const;

    bool isCurrentlyOnCadence() const;
    void setCurrentlyOnCadence(const bool &currently_on_cadence);
    bool is_currently_on_cadence_Set() const;
    bool is_currently_on_cadence_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEmbeddedResource getLatestAction() const;
    void setLatestAction(const OAIEmbeddedResource &latest_action);
    bool is_latest_action_Set() const;
    bool is_latest_action_Valid() const;

    OAIEmbeddedResource getPerson() const;
    void setPerson(const OAIEmbeddedResource &person);
    bool is_person_Set() const;
    bool is_person_Valid() const;

    bool isPersonDeleted() const;
    void setPersonDeleted(const bool &person_deleted);
    bool is_person_deleted_Set() const;
    bool is_person_deleted_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIEmbeddedResource getUser() const;
    void setUser(const OAIEmbeddedResource &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_added_at;
    bool m_added_at_isSet;
    bool m_added_at_isValid;

    OAIEmbeddedResource m_cadence;
    bool m_cadence_isSet;
    bool m_cadence_isValid;

    OAICadenceMembershipCounts m_counts;
    bool m_counts_isSet;
    bool m_counts_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_current_state;
    bool m_current_state_isSet;
    bool m_current_state_isValid;

    bool m_currently_on_cadence;
    bool m_currently_on_cadence_isSet;
    bool m_currently_on_cadence_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEmbeddedResource m_latest_action;
    bool m_latest_action_isSet;
    bool m_latest_action_isValid;

    OAIEmbeddedResource m_person;
    bool m_person_isSet;
    bool m_person_isValid;

    bool m_person_deleted;
    bool m_person_deleted_isSet;
    bool m_person_deleted_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIEmbeddedResource m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICadenceMembership)

#endif // OAICadenceMembership_H
