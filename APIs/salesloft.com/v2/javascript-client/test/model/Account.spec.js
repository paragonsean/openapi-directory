/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SalesLoftPlatform);
  }
}(this, function(expect, SalesLoftPlatform) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SalesLoftPlatform.Account();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Account', function() {
    it('should create an instance of Account', function() {
      // uncomment below and update the code to test Account
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be.a(SalesLoftPlatform.Account);
    });

    it('should have the property accountTier (base name: "account_tier")', function() {
      // uncomment below and update the code to test the property accountTier
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property archivedAt (base name: "archived_at")', function() {
      // uncomment below and update the code to test the property archivedAt
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property companyStage (base name: "company_stage")', function() {
      // uncomment below and update the code to test the property companyStage
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property companyType (base name: "company_type")', function() {
      // uncomment below and update the code to test the property companyType
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property conversationalName (base name: "conversational_name")', function() {
      // uncomment below and update the code to test the property conversationalName
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property counts (base name: "counts")', function() {
      // uncomment below and update the code to test the property counts
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property creator (base name: "creator")', function() {
      // uncomment below and update the code to test the property creator
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property crmId (base name: "crm_id")', function() {
      // uncomment below and update the code to test the property crmId
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property crmObjectType (base name: "crm_object_type")', function() {
      // uncomment below and update the code to test the property crmObjectType
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property crmUrl (base name: "crm_url")', function() {
      // uncomment below and update the code to test the property crmUrl
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "custom_fields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property doNotContact (base name: "do_not_contact")', function() {
      // uncomment below and update the code to test the property doNotContact
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property domain (base name: "domain")', function() {
      // uncomment below and update the code to test the property domain
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property founded (base name: "founded")', function() {
      // uncomment below and update the code to test the property founded
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property industry (base name: "industry")', function() {
      // uncomment below and update the code to test the property industry
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property lastContactedAt (base name: "last_contacted_at")', function() {
      // uncomment below and update the code to test the property lastContactedAt
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property lastContactedBy (base name: "last_contacted_by")', function() {
      // uncomment below and update the code to test the property lastContactedBy
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property lastContactedPerson (base name: "last_contacted_person")', function() {
      // uncomment below and update the code to test the property lastContactedPerson
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property lastContactedType (base name: "last_contacted_type")', function() {
      // uncomment below and update the code to test the property lastContactedType
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property linkedinUrl (base name: "linkedin_url")', function() {
      // uncomment below and update the code to test the property linkedinUrl
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property ownerCrmId (base name: "owner_crm_id")', function() {
      // uncomment below and update the code to test the property ownerCrmId
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property revenueRange (base name: "revenue_range")', function() {
      // uncomment below and update the code to test the property revenueRange
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property twitterHandle (base name: "twitter_handle")', function() {
      // uncomment below and update the code to test the property twitterHandle
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property userRelationships (base name: "user_relationships")', function() {
      // uncomment below and update the code to test the property userRelationships
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new SalesLoftPlatform.Account();
      //expect(instance).to.be();
    });

  });

}));
