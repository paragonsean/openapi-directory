/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SalesLoftPlatform);
  }
}(this, function(expect, SalesLoftPlatform) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SalesLoftPlatform.Person();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Person', function() {
    it('should create an instance of Person', function() {
      // uncomment below and update the code to test Person
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be.a(SalesLoftPlatform.Person);
    });

    it('should have the property account (base name: "account")', function() {
      // uncomment below and update the code to test the property account
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property bouncing (base name: "bouncing")', function() {
      // uncomment below and update the code to test the property bouncing
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property cadences (base name: "cadences")', function() {
      // uncomment below and update the code to test the property cadences
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property contactRestrictions (base name: "contact_restrictions")', function() {
      // uncomment below and update the code to test the property contactRestrictions
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property counts (base name: "counts")', function() {
      // uncomment below and update the code to test the property counts
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property crmId (base name: "crm_id")', function() {
      // uncomment below and update the code to test the property crmId
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property crmObjectType (base name: "crm_object_type")', function() {
      // uncomment below and update the code to test the property crmObjectType
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property crmUrl (base name: "crm_url")', function() {
      // uncomment below and update the code to test the property crmUrl
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "custom_fields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property doNotContact (base name: "do_not_contact")', function() {
      // uncomment below and update the code to test the property doNotContact
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property emailAddress (base name: "email_address")', function() {
      // uncomment below and update the code to test the property emailAddress
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property euResident (base name: "eu_resident")', function() {
      // uncomment below and update the code to test the property euResident
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property fullEmailAddress (base name: "full_email_address")', function() {
      // uncomment below and update the code to test the property fullEmailAddress
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property homePhone (base name: "home_phone")', function() {
      // uncomment below and update the code to test the property homePhone
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property _import (base name: "import")', function() {
      // uncomment below and update the code to test the property _import
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property jobSeniority (base name: "job_seniority")', function() {
      // uncomment below and update the code to test the property jobSeniority
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property lastCompletedStep (base name: "last_completed_step")', function() {
      // uncomment below and update the code to test the property lastCompletedStep
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property lastCompletedStepCadence (base name: "last_completed_step_cadence")', function() {
      // uncomment below and update the code to test the property lastCompletedStepCadence
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property lastContactedAt (base name: "last_contacted_at")', function() {
      // uncomment below and update the code to test the property lastContactedAt
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property lastContactedBy (base name: "last_contacted_by")', function() {
      // uncomment below and update the code to test the property lastContactedBy
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property lastContactedType (base name: "last_contacted_type")', function() {
      // uncomment below and update the code to test the property lastContactedType
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property lastRepliedAt (base name: "last_replied_at")', function() {
      // uncomment below and update the code to test the property lastRepliedAt
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property linkedinUrl (base name: "linkedin_url")', function() {
      // uncomment below and update the code to test the property linkedinUrl
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property localeUtcOffset (base name: "locale_utc_offset")', function() {
      // uncomment below and update the code to test the property localeUtcOffset
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property mobilePhone (base name: "mobile_phone")', function() {
      // uncomment below and update the code to test the property mobilePhone
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property mostRecentCadence (base name: "most_recent_cadence")', function() {
      // uncomment below and update the code to test the property mostRecentCadence
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property ownerCrmId (base name: "owner_crm_id")', function() {
      // uncomment below and update the code to test the property ownerCrmId
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property personCompanyIndustry (base name: "person_company_industry")', function() {
      // uncomment below and update the code to test the property personCompanyIndustry
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property personCompanyName (base name: "person_company_name")', function() {
      // uncomment below and update the code to test the property personCompanyName
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property personCompanyWebsite (base name: "person_company_website")', function() {
      // uncomment below and update the code to test the property personCompanyWebsite
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property personStage (base name: "person_stage")', function() {
      // uncomment below and update the code to test the property personStage
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property personalEmailAddress (base name: "personal_email_address")', function() {
      // uncomment below and update the code to test the property personalEmailAddress
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property personalWebsite (base name: "personal_website")', function() {
      // uncomment below and update the code to test the property personalWebsite
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property phoneExtension (base name: "phone_extension")', function() {
      // uncomment below and update the code to test the property phoneExtension
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property secondaryEmailAddress (base name: "secondary_email_address")', function() {
      // uncomment below and update the code to test the property secondaryEmailAddress
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property starred (base name: "starred")', function() {
      // uncomment below and update the code to test the property starred
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property successCount (base name: "success_count")', function() {
      // uncomment below and update the code to test the property successCount
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property twitterHandle (base name: "twitter_handle")', function() {
      // uncomment below and update the code to test the property twitterHandle
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property untouched (base name: "untouched")', function() {
      // uncomment below and update the code to test the property untouched
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property workCity (base name: "work_city")', function() {
      // uncomment below and update the code to test the property workCity
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property workCountry (base name: "work_country")', function() {
      // uncomment below and update the code to test the property workCountry
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

    it('should have the property workState (base name: "work_state")', function() {
      // uncomment below and update the code to test the property workState
      //var instance = new SalesLoftPlatform.Person();
      //expect(instance).to.be();
    });

  });

}));
