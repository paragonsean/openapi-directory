/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SalesLoftPlatform);
  }
}(this, function(expect, SalesLoftPlatform) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SalesLoftPlatform.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be.a(SalesLoftPlatform.User);
    });

    it('should have the property privateFields (base name: "_private_fields")', function() {
      // uncomment below and update the code to test the property privateFields
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property bccEmailAddress (base name: "bcc_email_address")', function() {
      // uncomment below and update the code to test the property bccEmailAddress
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property clickToCallEnabled (base name: "click_to_call_enabled")', function() {
      // uncomment below and update the code to test the property clickToCallEnabled
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property crmConnected (base name: "crm_connected")', function() {
      // uncomment below and update the code to test the property crmConnected
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property emailClientConfigured (base name: "email_client_configured")', function() {
      // uncomment below and update the code to test the property emailClientConfigured
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property emailClientEmailAddress (base name: "email_client_email_address")', function() {
      // uncomment below and update the code to test the property emailClientEmailAddress
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property emailSignature (base name: "email_signature")', function() {
      // uncomment below and update the code to test the property emailSignature
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property emailSignatureClickTrackingDisabled (base name: "email_signature_click_tracking_disabled")', function() {
      // uncomment below and update the code to test the property emailSignatureClickTrackingDisabled
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property emailSignatureType (base name: "email_signature_type")', function() {
      // uncomment below and update the code to test the property emailSignatureType
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property externalFeatureFlags (base name: "external_feature_flags")', function() {
      // uncomment below and update the code to test the property externalFeatureFlags
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property fromAddress (base name: "from_address")', function() {
      // uncomment below and update the code to test the property fromAddress
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property fullEmailAddress (base name: "full_email_address")', function() {
      // uncomment below and update the code to test the property fullEmailAddress
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property group (base name: "group")', function() {
      // uncomment below and update the code to test the property group
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property guid (base name: "guid")', function() {
      // uncomment below and update the code to test the property guid
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property jobRole (base name: "job_role")', function() {
      // uncomment below and update the code to test the property jobRole
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property localDialEnabled (base name: "local_dial_enabled")', function() {
      // uncomment below and update the code to test the property localDialEnabled
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property phoneClient (base name: "phone_client")', function() {
      // uncomment below and update the code to test the property phoneClient
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberAssignment (base name: "phone_number_assignment")', function() {
      // uncomment below and update the code to test the property phoneNumberAssignment
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property role (base name: "role")', function() {
      // uncomment below and update the code to test the property role
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property sendingEmailAddress (base name: "sending_email_address")', function() {
      // uncomment below and update the code to test the property sendingEmailAddress
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property slackUsername (base name: "slack_username")', function() {
      // uncomment below and update the code to test the property slackUsername
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property teamAdmin (base name: "team_admin")', function() {
      // uncomment below and update the code to test the property teamAdmin
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "time_zone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property twitterHandle (base name: "twitter_handle")', function() {
      // uncomment below and update the code to test the property twitterHandle
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

    it('should have the property workCountry (base name: "work_country")', function() {
      // uncomment below and update the code to test the property workCountry
      //var instance = new SalesLoftPlatform.User();
      //expect(instance).to.be();
    });

  });

}));
