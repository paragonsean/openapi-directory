/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConversationsCall from '../model/ConversationsCall';

/**
* ConversationsCalls service.
* @module api/ConversationsCallsApi
* @version v2
*/
export default class ConversationsCallsApi {

    /**
    * Constructs a new ConversationsCallsApi. 
    * @alias module:api/ConversationsCallsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v2ConversationsCallsPost operation.
     * @callback module:api/ConversationsCallsApi~v2ConversationsCallsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConversationsCall} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Conversations Call
     * Enqueue a Conversations Call for processing
     * @param {Number} duration Duration of call in seconds
     * @param {String} from Phone number that call was made from
     * @param {Object.<String, Object>} recording Object containing recording info including the audio file (.mp3, .wav, .ogg, .m4a)
     * @param {String} to  Phone number that was called
     * @param {Object} opts Optional parameters
     * @param {String} [callCreatedAt] Timestamp for when the call started. If not provided, will default to the time the request was received
     * @param {String} [direction] Call direction
     * @param {String} [userGuid] Guid of the Salesloft User to assign the call to. If not provided, will default to the user within the authentication token
     * @param {module:api/ConversationsCallsApi~v2ConversationsCallsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConversationsCall}
     */
    v2ConversationsCallsPost(duration, from, recording, to, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'duration' is set
      if (duration === undefined || duration === null) {
        throw new Error("Missing the required parameter 'duration' when calling v2ConversationsCallsPost");
      }
      // verify the required parameter 'from' is set
      if (from === undefined || from === null) {
        throw new Error("Missing the required parameter 'from' when calling v2ConversationsCallsPost");
      }
      // verify the required parameter 'recording' is set
      if (recording === undefined || recording === null) {
        throw new Error("Missing the required parameter 'recording' when calling v2ConversationsCallsPost");
      }
      // verify the required parameter 'to' is set
      if (to === undefined || to === null) {
        throw new Error("Missing the required parameter 'to' when calling v2ConversationsCallsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'call_created_at': opts['callCreatedAt'],
        'direction': opts['direction'],
        'duration': duration,
        'from': from,
        'recording': recording,
        'to': to,
        'user_guid': opts['userGuid']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['*/*'];
      let returnType = ConversationsCall;
      return this.apiClient.callApi(
        '/v2/conversations/calls', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
