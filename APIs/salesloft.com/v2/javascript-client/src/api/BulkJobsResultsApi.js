/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BulkJobResult from '../model/BulkJobResult';

/**
* BulkJobsResults service.
* @module api/BulkJobsResultsApi
* @version v2
*/
export default class BulkJobsResultsApi {

    /**
    * Constructs a new BulkJobsResultsApi. 
    * @alias module:api/BulkJobsResultsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v2BulkJobsBulkJobsIdResultsGet operation.
     * @callback module:api/BulkJobsResultsApi~v2BulkJobsBulkJobsIdResultsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/BulkJobResult>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List job data for a completed bulk job.
     * Fetches multiple job data records for a completed bulk job. Note that until a bulk job's state is set to `done` the returned `data` will be an empty array. Pagination is not supported, but cursor based polling is via use of the `id[gt]` filter. Pass the last id seen (i.e. `id[gt]=1234`) in order to get the next batch of records.
     * @param {Number} bulkJobsId The id for the Bulk Job
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [status] Filter by result status. Accepts multiple statuses. Each status must be one of pending, success, error, retrying
     * @param {Object.<String, Object>} [id] Filter by id using comparison operators. Only supports greater than (gt) comparison (i.e. id[gt]=123)
     * @param {Number} [perPage] How many records to show per page in the range [1, 100]. Defaults to 25
     * @param {module:api/BulkJobsResultsApi~v2BulkJobsBulkJobsIdResultsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/BulkJobResult>}
     */
    v2BulkJobsBulkJobsIdResultsGet(bulkJobsId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bulkJobsId' is set
      if (bulkJobsId === undefined || bulkJobsId === null) {
        throw new Error("Missing the required parameter 'bulkJobsId' when calling v2BulkJobsBulkJobsIdResultsGet");
      }

      let pathParams = {
        'bulk_jobs_id': bulkJobsId
      };
      let queryParams = {
        'status': this.apiClient.buildCollectionParam(opts['status'], 'csv'),
        'id': opts['id'],
        'per_page': opts['perPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [BulkJobResult];
      return this.apiClient.callApi(
        '/v2/bulk_jobs/{bulk_jobs_id}/results', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
