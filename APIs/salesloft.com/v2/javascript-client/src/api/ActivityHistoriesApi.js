/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActivityHistory from '../model/ActivityHistory';

/**
* ActivityHistories service.
* @module api/ActivityHistoriesApi
* @version v2
*/
export default class ActivityHistoriesApi {

    /**
    * Constructs a new ActivityHistoriesApi. 
    * @alias module:api/ActivityHistoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v2ActivityHistoriesGet operation.
     * @callback module:api/ActivityHistoriesApi~v2ActivityHistoriesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActivityHistory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Past Activities
     * Fetches all of the customer's past activities for your application. Returns all the Activities that are found on the Salesloft Activity Feed. <a href=\"/activity-history.html\" target=\"_blank\" rel=\"noopener noreferrer\">Visit here for more details</a>.
     * @param {Object} opts Optional parameters
     * @param {Number} [perPage] How many records to show per page in the range [1, 100]. Defaults to 25
     * @param {Number} [page] The current page to fetch results from. Defaults to 1
     * @param {Boolean} [includePagingCounts] Whether to include total_pages and total_count in the metadata. Defaults to false
     * @param {String} [sortBy] Key to sort on, must be one of: occurred_at, updated_at. Defaults to occurred_at
     * @param {String} [sortDirection] Direction to sort in, must be one of: ASC, DESC. Defaults to DESC
     * @param {String} [type] Filter by the type of activity. Must be one of: added_to_cadence, completed_action, call, requested_email, sent_email, received_email, email_reply, note, success, dnc_event, residency_change, meeting, meeting_held, message_conversation, task, voicemail, opportunity_stage_change, opportunity_amount_change, opportunity_close_date_change. Can be provided as an array, or as an object of type[resource_type][]=type
     * @param {String} [resource] For internal use only. This field does not comply with our backwards compatibility policies. This filter is for authenticated users of Salesloft only and will not work for OAuth Applications. Filter by the {resource_type, resource_id} of activity. Provide this in the format resource[]=person,1234
     * @param {Object.<String, Object>} [occurredAt] Equality filters that are applied to the occurred_at field. A single filter can be used by itself or combined with other filters to create a range. ---CUSTOM--- {\"keys\":[{\"description\":\"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.\",\"name\":\"gt\",\"type\":\"iso8601 string\"},{\"description\":\"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\",\"name\":\"gte\",\"type\":\"iso8601 string\"},{\"description\":\"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.\",\"name\":\"lt\",\"type\":\"iso8601 string\"},{\"description\":\"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\",\"name\":\"lte\",\"type\":\"iso8601 string\"}],\"type\":\"object\"} 
     * @param {Boolean} [pinned] Filter by the pinned status of activity. Must be 'true' or 'false'
     * @param {String} [resourceType] Filter by the resource type. A resource is a Salesloft object that the activity is attributed to. A valid resource types must be one of person, account, crm_opportunity. Can be provided as an array
     * @param {Array.<String>} [resourceId] Filter by the resource id. \"resource_type\" filter is required to use this filter.
     * @param {Object.<String, Object>} [updatedAt] Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range. ---CUSTOM--- {\"keys\":[{\"description\":\"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.\",\"name\":\"gt\",\"type\":\"iso8601 string\"},{\"description\":\"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\",\"name\":\"gte\",\"type\":\"iso8601 string\"},{\"description\":\"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.\",\"name\":\"lt\",\"type\":\"iso8601 string\"},{\"description\":\"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.\",\"name\":\"lte\",\"type\":\"iso8601 string\"}],\"type\":\"object\"} 
     * @param {String} [userGuid] Filter activities by a user's guid.
     * @param {module:api/ActivityHistoriesApi~v2ActivityHistoriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActivityHistory}
     */
    v2ActivityHistoriesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'per_page': opts['perPage'],
        'page': opts['page'],
        'include_paging_counts': opts['includePagingCounts'],
        'sort_by': opts['sortBy'],
        'sort_direction': opts['sortDirection'],
        'type': opts['type'],
        '_resource': opts['resource'],
        'occurred_at': opts['occurredAt'],
        'pinned': opts['pinned'],
        'resource_type': opts['resourceType'],
        'resource_id': this.apiClient.buildCollectionParam(opts['resourceId'], 'csv'),
        'updated_at': opts['updatedAt'],
        'user_guid': opts['userGuid']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ActivityHistory;
      return this.apiClient.callApi(
        '/v2/activity_histories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
