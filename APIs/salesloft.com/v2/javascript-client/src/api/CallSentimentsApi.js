/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CallSentiment from '../model/CallSentiment';

/**
* CallSentiments service.
* @module api/CallSentimentsApi
* @version v2
*/
export default class CallSentimentsApi {

    /**
    * Constructs a new CallSentimentsApi. 
    * @alias module:api/CallSentimentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v2CallSentimentsJsonGet operation.
     * @callback module:api/CallSentimentsApi~v2CallSentimentsJsonGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CallSentiment>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List call sentiments
     * Fetches multiple call sentiment records. The records can be sorted according to the respective parameters. Call sentiments must be configured in application. This will change in the future, but please contact us if you have a pressing use case. 
     * @param {Object} opts Optional parameters
     * @param {String} [name] Filters call sentiments by name
     * @param {String} [sortBy] Key to sort on, must be one of: name, updated_at. Defaults to name
     * @param {String} [sortDirection] Direction to sort in, must be one of: ASC, DESC. Defaults to ASC
     * @param {Number} [perPage] How many records to show per page in the range [1, 100]. Defaults to 25
     * @param {Number} [page] The current page to fetch results from. Defaults to 1
     * @param {Boolean} [includePagingCounts] Whether to include total_pages and total_count in the metadata. Defaults to false
     * @param {Boolean} [limitPagingCounts] Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data
     * @param {module:api/CallSentimentsApi~v2CallSentimentsJsonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CallSentiment>}
     */
    v2CallSentimentsJsonGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'sort_by': opts['sortBy'],
        'sort_direction': opts['sortDirection'],
        'per_page': opts['perPage'],
        'page': opts['page'],
        'include_paging_counts': opts['includePagingCounts'],
        'limit_paging_counts': opts['limitPagingCounts']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [CallSentiment];
      return this.apiClient.callApi(
        '/v2/call_sentiments.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
