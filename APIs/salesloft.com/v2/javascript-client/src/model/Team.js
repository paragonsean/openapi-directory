/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Team model module.
 * @module model/Team
 * @version v2
 */
class Team {
    /**
     * Constructs a new <code>Team</code>.
     * @alias module:model/Team
     */
    constructor() { 
        
        Team.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Team</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Team} obj Optional instance to populate.
     * @return {module:model/Team} The populated <code>Team</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Team();

            if (data.hasOwnProperty('_private_fields')) {
                obj['_private_fields'] = ApiClient.convertToType(data['_private_fields'], Object);
            }
            if (data.hasOwnProperty('allow_automated_email_steps')) {
                obj['allow_automated_email_steps'] = ApiClient.convertToType(data['allow_automated_email_steps'], 'Boolean');
            }
            if (data.hasOwnProperty('call_recording_disabled')) {
                obj['call_recording_disabled'] = ApiClient.convertToType(data['call_recording_disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('click_tracking_default')) {
                obj['click_tracking_default'] = ApiClient.convertToType(data['click_tracking_default'], 'Boolean');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('custom_tracking_domain')) {
                obj['custom_tracking_domain'] = ApiClient.convertToType(data['custom_tracking_domain'], 'String');
            }
            if (data.hasOwnProperty('deactivated')) {
                obj['deactivated'] = ApiClient.convertToType(data['deactivated'], 'Boolean');
            }
            if (data.hasOwnProperty('dispositions_required')) {
                obj['dispositions_required'] = ApiClient.convertToType(data['dispositions_required'], 'Boolean');
            }
            if (data.hasOwnProperty('email_daily_limit')) {
                obj['email_daily_limit'] = ApiClient.convertToType(data['email_daily_limit'], 'Number');
            }
            if (data.hasOwnProperty('group_privacy_setting')) {
                obj['group_privacy_setting'] = ApiClient.convertToType(data['group_privacy_setting'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('license_limit')) {
                obj['license_limit'] = ApiClient.convertToType(data['license_limit'], 'Number');
            }
            if (data.hasOwnProperty('local_dial_enabled')) {
                obj['local_dial_enabled'] = ApiClient.convertToType(data['local_dial_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = ApiClient.convertToType(data['plan'], 'String');
            }
            if (data.hasOwnProperty('plan_features')) {
                obj['plan_features'] = ApiClient.convertToType(data['plan_features'], Object);
            }
            if (data.hasOwnProperty('record_by_default')) {
                obj['record_by_default'] = ApiClient.convertToType(data['record_by_default'], 'Boolean');
            }
            if (data.hasOwnProperty('sentiments_required')) {
                obj['sentiments_required'] = ApiClient.convertToType(data['sentiments_required'], 'Boolean');
            }
            if (data.hasOwnProperty('team_visibility_default')) {
                obj['team_visibility_default'] = ApiClient.convertToType(data['team_visibility_default'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Team</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Team</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['custom_tracking_domain'] && !(typeof data['custom_tracking_domain'] === 'string' || data['custom_tracking_domain'] instanceof String)) {
            throw new Error("Expected the field `custom_tracking_domain` to be a primitive type in the JSON string but got " + data['custom_tracking_domain']);
        }
        // ensure the json data is a string
        if (data['group_privacy_setting'] && !(typeof data['group_privacy_setting'] === 'string' || data['group_privacy_setting'] instanceof String)) {
            throw new Error("Expected the field `group_privacy_setting` to be a primitive type in the JSON string but got " + data['group_privacy_setting']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['plan'] && !(typeof data['plan'] === 'string' || data['plan'] instanceof String)) {
            throw new Error("Expected the field `plan` to be a primitive type in the JSON string but got " + data['plan']);
        }
        // ensure the json data is a string
        if (data['team_visibility_default'] && !(typeof data['team_visibility_default'] === 'string' || data['team_visibility_default'] instanceof String)) {
            throw new Error("Expected the field `team_visibility_default` to be a primitive type in the JSON string but got " + data['team_visibility_default']);
        }

        return true;
    }


}



/**
 * For internal use only. This field does not comply with our backwards compatability policies.
 * @member {Object} _private_fields
 */
Team.prototype['_private_fields'] = undefined;

/**
 * Whether team members are allowed to have automated email steps
 * @member {Boolean} allow_automated_email_steps
 */
Team.prototype['allow_automated_email_steps'] = undefined;

/**
 * Whether all call recording is disabled
 * @member {Boolean} call_recording_disabled
 */
Team.prototype['call_recording_disabled'] = undefined;

/**
 * The team default for click tracking when composing emails
 * @member {Boolean} click_tracking_default
 */
Team.prototype['click_tracking_default'] = undefined;

/**
 * Datetime of when the team was created
 * @member {Date} created_at
 */
Team.prototype['created_at'] = undefined;

/**
 * The domain click and open tracking will be proxied through
 * @member {String} custom_tracking_domain
 */
Team.prototype['custom_tracking_domain'] = undefined;

/**
 * Indicates if the team has been deactivated
 * @member {Boolean} deactivated
 */
Team.prototype['deactivated'] = undefined;

/**
 * Whether team members are required to mark disposition at the end of calls
 * @member {Boolean} dispositions_required
 */
Team.prototype['dispositions_required'] = undefined;

/**
 * Daily email limit for each member on the team
 * @member {Number} email_daily_limit
 */
Team.prototype['email_daily_limit'] = undefined;

/**
 * Visibility setting for resources across the team. Possible values are: group_public, all_public. When the value is group_public, certain resources will only be visible to members of the same group. When the value is all_public, all resources are visible to all users on this team. 
 * @member {String} group_privacy_setting
 */
Team.prototype['group_privacy_setting'] = undefined;

/**
 * Team ID
 * @member {Number} id
 */
Team.prototype['id'] = undefined;

/**
 * Count of seats that this team has licensed
 * @member {Number} license_limit
 */
Team.prototype['license_limit'] = undefined;

/**
 * Whether this team has local dial enabled
 * @member {Boolean} local_dial_enabled
 */
Team.prototype['local_dial_enabled'] = undefined;

/**
 * Team name
 * @member {String} name
 */
Team.prototype['name'] = undefined;

/**
 * Plan type of the team, Possible values are: group, professional, enterprise
 * @member {String} plan
 */
Team.prototype['plan'] = undefined;

/**
 * Add on features for this team
 * @member {Object} plan_features
 */
Team.prototype['plan_features'] = undefined;

/**
 * Whether calls will record by default
 * @member {Boolean} record_by_default
 */
Team.prototype['record_by_default'] = undefined;

/**
 * Whether team members are required to log sentiments
 * @member {Boolean} sentiments_required
 */
Team.prototype['sentiments_required'] = undefined;

/**
 * The default visibility of resources on the team, in the UI only. The API does not utilize this default. Possible values are: public, private. 
 * @member {String} team_visibility_default
 */
Team.prototype['team_visibility_default'] = undefined;

/**
 * Datetime of when the team was last updated
 * @member {Date} updated_at
 */
Team.prototype['updated_at'] = undefined;






export default Team;

