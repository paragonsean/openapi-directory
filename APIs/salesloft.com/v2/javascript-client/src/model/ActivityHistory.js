/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActivityHistory model module.
 * @module model/ActivityHistory
 * @version v2
 */
class ActivityHistory {
    /**
     * Constructs a new <code>ActivityHistory</code>.
     * @alias module:model/ActivityHistory
     */
    constructor() { 
        
        ActivityHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityHistory} obj Optional instance to populate.
     * @return {module:model/ActivityHistory} The populated <code>ActivityHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityHistory();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('dynamic_data')) {
                obj['dynamic_data'] = ApiClient.convertToType(data['dynamic_data'], Object);
            }
            if (data.hasOwnProperty('failed_dynamic_resources')) {
                obj['failed_dynamic_resources'] = ApiClient.convertToType(data['failed_dynamic_resources'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('occurred_at')) {
                obj['occurred_at'] = ApiClient.convertToType(data['occurred_at'], 'Date');
            }
            if (data.hasOwnProperty('pinned_at')) {
                obj['pinned_at'] = ApiClient.convertToType(data['pinned_at'], 'Date');
            }
            if (data.hasOwnProperty('resource_id')) {
                obj['resource_id'] = ApiClient.convertToType(data['resource_id'], 'Number');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'Number');
            }
            if (data.hasOwnProperty('static_data')) {
                obj['static_data'] = ApiClient.convertToType(data['static_data'], Object);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('user_guid')) {
                obj['user_guid'] = ApiClient.convertToType(data['user_guid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityHistory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['user_guid'] && !(typeof data['user_guid'] === 'string' || data['user_guid'] instanceof String)) {
            throw new Error("Expected the field `user_guid` to be a primitive type in the JSON string but got " + data['user_guid']);
        }

        return true;
    }


}



/**
 * When this record was created
 * @member {Date} created_at
 */
ActivityHistory.prototype['created_at'] = undefined;

/**
 * Attributes from associated records. This is specific to the type of activity and may change over time. Not returned for create requests
 * @member {Object} dynamic_data
 */
ActivityHistory.prototype['dynamic_data'] = undefined;

/**
 * A list of remote resource names that failed to load. This is specific to the type of activity and may change over time. Not returned for create requests
 * @member {Object} failed_dynamic_resources
 */
ActivityHistory.prototype['failed_dynamic_resources'] = undefined;

/**
 * ID of this activity
 * @member {Number} id
 */
ActivityHistory.prototype['id'] = undefined;

/**
 * When this activity occurred
 * @member {Date} occurred_at
 */
ActivityHistory.prototype['occurred_at'] = undefined;

/**
 * When this record was pinned
 * @member {Date} pinned_at
 */
ActivityHistory.prototype['pinned_at'] = undefined;

/**
 * ID of the resource this activity is for. It will be a string for the following resource types: crm_opportunity
 * @member {Number} resource_id
 */
ActivityHistory.prototype['resource_id'] = undefined;

/**
 * Type of the resource this activity is for. One of: account, person
 * @member {Number} resource_type
 */
ActivityHistory.prototype['resource_type'] = undefined;

/**
 * The static data for this activity
 * @member {Object} static_data
 */
ActivityHistory.prototype['static_data'] = undefined;

/**
 * The type of activity
 * @member {String} type
 */
ActivityHistory.prototype['type'] = undefined;

/**
 * When this record was updated
 * @member {Date} updated_at
 */
ActivityHistory.prototype['updated_at'] = undefined;

/**
 * UUID of the user this activity is for
 * @member {String} user_guid
 */
ActivityHistory.prototype['user_guid'] = undefined;






export default ActivityHistory;

