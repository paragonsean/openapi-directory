/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmbeddedResource from './EmbeddedResource';

/**
 * The EmailTemplateAttachment model module.
 * @module model/EmailTemplateAttachment
 * @version v2
 */
class EmailTemplateAttachment {
    /**
     * Constructs a new <code>EmailTemplateAttachment</code>.
     * @alias module:model/EmailTemplateAttachment
     */
    constructor() { 
        
        EmailTemplateAttachment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmailTemplateAttachment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmailTemplateAttachment} obj Optional instance to populate.
     * @return {module:model/EmailTemplateAttachment} The populated <code>EmailTemplateAttachment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailTemplateAttachment();

            if (data.hasOwnProperty('attachment_content_type')) {
                obj['attachment_content_type'] = ApiClient.convertToType(data['attachment_content_type'], 'String');
            }
            if (data.hasOwnProperty('attachment_file_size')) {
                obj['attachment_file_size'] = ApiClient.convertToType(data['attachment_file_size'], 'Number');
            }
            if (data.hasOwnProperty('attachment_fingerprint')) {
                obj['attachment_fingerprint'] = ApiClient.convertToType(data['attachment_fingerprint'], 'Number');
            }
            if (data.hasOwnProperty('attachment_id')) {
                obj['attachment_id'] = ApiClient.convertToType(data['attachment_id'], 'Number');
            }
            if (data.hasOwnProperty('download_url')) {
                obj['download_url'] = ApiClient.convertToType(data['download_url'], 'String');
            }
            if (data.hasOwnProperty('email_template')) {
                obj['email_template'] = EmbeddedResource.constructFromObject(data['email_template']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('scanned')) {
                obj['scanned'] = ApiClient.convertToType(data['scanned'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailTemplateAttachment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailTemplateAttachment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['attachment_content_type'] && !(typeof data['attachment_content_type'] === 'string' || data['attachment_content_type'] instanceof String)) {
            throw new Error("Expected the field `attachment_content_type` to be a primitive type in the JSON string but got " + data['attachment_content_type']);
        }
        // ensure the json data is a string
        if (data['download_url'] && !(typeof data['download_url'] === 'string' || data['download_url'] instanceof String)) {
            throw new Error("Expected the field `download_url` to be a primitive type in the JSON string but got " + data['download_url']);
        }
        // validate the optional field `email_template`
        if (data['email_template']) { // data not null
          EmbeddedResource.validateJSON(data['email_template']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Content type of the attachment
 * @member {String} attachment_content_type
 */
EmailTemplateAttachment.prototype['attachment_content_type'] = undefined;

/**
 * The size of the attachment
 * @member {Number} attachment_file_size
 */
EmailTemplateAttachment.prototype['attachment_file_size'] = undefined;

/**
 * Unique attachment Identifier
 * @member {Number} attachment_fingerprint
 */
EmailTemplateAttachment.prototype['attachment_fingerprint'] = undefined;

/**
 * ID of the email template attachment
 * @member {Number} attachment_id
 */
EmailTemplateAttachment.prototype['attachment_id'] = undefined;

/**
 * Download url of the attachment
 * @member {String} download_url
 */
EmailTemplateAttachment.prototype['download_url'] = undefined;

/**
 * @member {module:model/EmbeddedResource} email_template
 */
EmailTemplateAttachment.prototype['email_template'] = undefined;

/**
 * ID of email template attachment association
 * @member {Number} id
 */
EmailTemplateAttachment.prototype['id'] = undefined;

/**
 * Name of the attachment
 * @member {String} name
 */
EmailTemplateAttachment.prototype['name'] = undefined;

/**
 * Checks if attachment has been scanned
 * @member {Boolean} scanned
 */
EmailTemplateAttachment.prototype['scanned'] = undefined;






export default EmailTemplateAttachment;

