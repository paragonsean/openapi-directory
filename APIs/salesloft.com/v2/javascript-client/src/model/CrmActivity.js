/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmbeddedResource from './EmbeddedResource';

/**
 * The CrmActivity model module.
 * @module model/CrmActivity
 * @version v2
 */
class CrmActivity {
    /**
     * Constructs a new <code>CrmActivity</code>.
     * @alias module:model/CrmActivity
     */
    constructor() { 
        
        CrmActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CrmActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrmActivity} obj Optional instance to populate.
     * @return {module:model/CrmActivity} The populated <code>CrmActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrmActivity();

            if (data.hasOwnProperty('activity_type')) {
                obj['activity_type'] = ApiClient.convertToType(data['activity_type'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('crm_id')) {
                obj['crm_id'] = ApiClient.convertToType(data['crm_id'], 'String');
            }
            if (data.hasOwnProperty('custom_crm_fields')) {
                obj['custom_crm_fields'] = ApiClient.convertToType(data['custom_crm_fields'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('person')) {
                obj['person'] = EmbeddedResource.constructFromObject(data['person']);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = EmbeddedResource.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrmActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrmActivity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activity_type'] && !(typeof data['activity_type'] === 'string' || data['activity_type'] instanceof String)) {
            throw new Error("Expected the field `activity_type` to be a primitive type in the JSON string but got " + data['activity_type']);
        }
        // ensure the json data is a string
        if (data['crm_id'] && !(typeof data['crm_id'] === 'string' || data['crm_id'] instanceof String)) {
            throw new Error("Expected the field `crm_id` to be a primitive type in the JSON string but got " + data['crm_id']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // validate the optional field `person`
        if (data['person']) { // data not null
          EmbeddedResource.validateJSON(data['person']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          EmbeddedResource.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * The type of activity that is being recorded, if available. The values can change over time, but could be one of: email, phone, email reminder, inmail
 * @member {String} activity_type
 */
CrmActivity.prototype['activity_type'] = undefined;

/**
 * Datetime of when the crm activity was created
 * @member {Date} created_at
 */
CrmActivity.prototype['created_at'] = undefined;

/**
 * The ID of the activity in your CRM, if written to your CRM
 * @member {String} crm_id
 */
CrmActivity.prototype['crm_id'] = undefined;

/**
 * Additional fields that are logged to your CRM, if mapped by the team at the time of writing to your CRM
 * @member {Object} custom_crm_fields
 */
CrmActivity.prototype['custom_crm_fields'] = undefined;

/**
 * The description field of the activity in your CRM
 * @member {String} description
 */
CrmActivity.prototype['description'] = undefined;

/**
 * Information about why this crm activity failed to sync, if it did fail to sync. Failed activities will be automatically retried and may become successful in the future
 * @member {String} error
 */
CrmActivity.prototype['error'] = undefined;

/**
 * CrmActivity ID
 * @member {Number} id
 */
CrmActivity.prototype['id'] = undefined;

/**
 * @member {module:model/EmbeddedResource} person
 */
CrmActivity.prototype['person'] = undefined;

/**
 * The subject field of the activity in your CRM
 * @member {String} subject
 */
CrmActivity.prototype['subject'] = undefined;

/**
 * Datetime of when the crm activity was last updated
 * @member {Date} updated_at
 */
CrmActivity.prototype['updated_at'] = undefined;

/**
 * @member {module:model/EmbeddedResource} user
 */
CrmActivity.prototype['user'] = undefined;






export default CrmActivity;

