/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmailTemplateCounts from './EmailTemplateCounts';
import EmbeddedResource from './EmbeddedResource';

/**
 * The EmailTemplate model module.
 * @module model/EmailTemplate
 * @version v2
 */
class EmailTemplate {
    /**
     * Constructs a new <code>EmailTemplate</code>.
     * @alias module:model/EmailTemplate
     */
    constructor() { 
        
        EmailTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmailTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmailTemplate} obj Optional instance to populate.
     * @return {module:model/EmailTemplate} The populated <code>EmailTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailTemplate();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = ApiClient.convertToType(data['_links'], Object);
            }
            if (data.hasOwnProperty('archived_at')) {
                obj['archived_at'] = ApiClient.convertToType(data['archived_at'], 'Date');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('body_preview')) {
                obj['body_preview'] = ApiClient.convertToType(data['body_preview'], 'String');
            }
            if (data.hasOwnProperty('cadence_template')) {
                obj['cadence_template'] = ApiClient.convertToType(data['cadence_template'], 'Boolean');
            }
            if (data.hasOwnProperty('click_tracking_enabled')) {
                obj['click_tracking_enabled'] = ApiClient.convertToType(data['click_tracking_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('counts')) {
                obj['counts'] = EmailTemplateCounts.constructFromObject(data['counts']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [EmbeddedResource]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('last_used_at')) {
                obj['last_used_at'] = ApiClient.convertToType(data['last_used_at'], 'Date');
            }
            if (data.hasOwnProperty('open_tracking_enabled')) {
                obj['open_tracking_enabled'] = ApiClient.convertToType(data['open_tracking_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('shared')) {
                obj['shared'] = ApiClient.convertToType(data['shared'], 'Boolean');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('team_template')) {
                obj['team_template'] = EmbeddedResource.constructFromObject(data['team_template']);
            }
            if (data.hasOwnProperty('template_owner')) {
                obj['template_owner'] = EmbeddedResource.constructFromObject(data['template_owner']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailTemplate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['body_preview'] && !(typeof data['body_preview'] === 'string' || data['body_preview'] instanceof String)) {
            throw new Error("Expected the field `body_preview` to be a primitive type in the JSON string but got " + data['body_preview']);
        }
        // validate the optional field `counts`
        if (data['counts']) { // data not null
          EmailTemplateCounts.validateJSON(data['counts']);
        }
        if (data['groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groups'])) {
                throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
            }
            // validate the optional field `groups` (array)
            for (const item of data['groups']) {
                EmbeddedResource.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // validate the optional field `team_template`
        if (data['team_template']) { // data not null
          EmbeddedResource.validateJSON(data['team_template']);
        }
        // validate the optional field `template_owner`
        if (data['template_owner']) { // data not null
          EmbeddedResource.validateJSON(data['template_owner']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Links to attachments and tags resources for this email template.
 * @member {Object} _links
 */
EmailTemplate.prototype['_links'] = undefined;

/**
 * Datetime of when the email template was archived, if archived
 * @member {Date} archived_at
 */
EmailTemplate.prototype['archived_at'] = undefined;

/**
 * Sanitized body of the email template without email signature
 * @member {String} body
 */
EmailTemplate.prototype['body'] = undefined;

/**
 * A plain text version of the first 100 characters of the body of the email template
 * @member {String} body_preview
 */
EmailTemplate.prototype['body_preview'] = undefined;

/**
 * Whether this email template is only used on a cadence step. These templates are not visible in the SalesLoft application template list. If false, this email template is visible in the SalesLoft application, and may be used when composing an email or creating a cadence step.
 * @member {Boolean} cadence_template
 */
EmailTemplate.prototype['cadence_template'] = undefined;

/**
 * Whether click tracking is enabled for this email template
 * @member {Boolean} click_tracking_enabled
 */
EmailTemplate.prototype['click_tracking_enabled'] = undefined;

/**
 * @member {module:model/EmailTemplateCounts} counts
 */
EmailTemplate.prototype['counts'] = undefined;

/**
 * Datetime of when the email template was created
 * @member {Date} created_at
 */
EmailTemplate.prototype['created_at'] = undefined;

/**
 * Groups to which this template is assigned, if any
 * @member {Array.<module:model/EmbeddedResource>} groups
 */
EmailTemplate.prototype['groups'] = undefined;

/**
 * ID of email template
 * @member {Number} id
 */
EmailTemplate.prototype['id'] = undefined;

/**
 * Datetime of when the email template was last used
 * @member {Date} last_used_at
 */
EmailTemplate.prototype['last_used_at'] = undefined;

/**
 * Whether open tracking is enabled for this email template
 * @member {Boolean} open_tracking_enabled
 */
EmailTemplate.prototype['open_tracking_enabled'] = undefined;

/**
 * Whether this email template is visible to team members (shared)
 * @member {Boolean} shared
 */
EmailTemplate.prototype['shared'] = undefined;

/**
 * Subject of the email template
 * @member {String} subject
 */
EmailTemplate.prototype['subject'] = undefined;

/**
 * All tags applied to this email template
 * @member {Array.<String>} tags
 */
EmailTemplate.prototype['tags'] = undefined;

/**
 * @member {module:model/EmbeddedResource} team_template
 */
EmailTemplate.prototype['team_template'] = undefined;

/**
 * @member {module:model/EmbeddedResource} template_owner
 */
EmailTemplate.prototype['template_owner'] = undefined;

/**
 * Title of the email template
 * @member {String} title
 */
EmailTemplate.prototype['title'] = undefined;

/**
 * Datetime of when the email template was last updated
 * @member {Date} updated_at
 */
EmailTemplate.prototype['updated_at'] = undefined;






export default EmailTemplate;

