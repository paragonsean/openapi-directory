/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Subscription model module.
 * @module model/Subscription
 * @version v2
 */
class Subscription {
    /**
     * Constructs a new <code>Subscription</code>.
     * @alias module:model/Subscription
     */
    constructor() { 
        
        Subscription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Subscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Subscription} obj Optional instance to populate.
     * @return {module:model/Subscription} The populated <code>Subscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Subscription();

            if (data.hasOwnProperty('callback_token')) {
                obj['callback_token'] = ApiClient.convertToType(data['callback_token'], 'String');
            }
            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('event_type')) {
                obj['event_type'] = ApiClient.convertToType(data['event_type'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('tenant_id')) {
                obj['tenant_id'] = ApiClient.convertToType(data['tenant_id'], 'Number');
            }
            if (data.hasOwnProperty('user_guid')) {
                obj['user_guid'] = ApiClient.convertToType(data['user_guid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Subscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Subscription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['callback_token'] && !(typeof data['callback_token'] === 'string' || data['callback_token'] instanceof String)) {
            throw new Error("Expected the field `callback_token` to be a primitive type in the JSON string but got " + data['callback_token']);
        }
        // ensure the json data is a string
        if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
            throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
        }
        // ensure the json data is a string
        if (data['event_type'] && !(typeof data['event_type'] === 'string' || data['event_type'] instanceof String)) {
            throw new Error("Expected the field `event_type` to be a primitive type in the JSON string but got " + data['event_type']);
        }
        // ensure the json data is a string
        if (data['user_guid'] && !(typeof data['user_guid'] === 'string' || data['user_guid'] instanceof String)) {
            throw new Error("Expected the field `user_guid` to be a primitive type in the JSON string but got " + data['user_guid']);
        }

        return true;
    }


}



/**
 * SalesLoft will include this token in the webhook event payload when calling your callback_url. It is strongly encouraged for your handler to verify this value in order to ensure the request came from SalesLoft.
 * @member {String} callback_token
 */
Subscription.prototype['callback_token'] = undefined;

/**
 * URL for your callback handler
 * @member {String} callback_url
 */
Subscription.prototype['callback_url'] = undefined;

/**
 * Is the Webhook Subscription enabled or not
 * @member {Boolean} enabled
 */
Subscription.prototype['enabled'] = undefined;

/**
 * Type of event the subscription is for
 * @member {String} event_type
 */
Subscription.prototype['event_type'] = undefined;

/**
 * ID for the Webhook Subscription
 * @member {Number} id
 */
Subscription.prototype['id'] = undefined;

/**
 * ID for the tenant to which user is assigned
 * @member {Number} tenant_id
 */
Subscription.prototype['tenant_id'] = undefined;

/**
 * UUID of the user the token is associated with
 * @member {String} user_guid
 */
Subscription.prototype['user_guid'] = undefined;






export default Subscription;

