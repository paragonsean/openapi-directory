/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Import model module.
 * @module model/Import
 * @version v2
 */
class Import {
    /**
     * Constructs a new <code>Import</code>.
     * @alias module:model/Import
     */
    constructor() { 
        
        Import.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Import</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Import} obj Optional instance to populate.
     * @return {module:model/Import} The populated <code>Import</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Import();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('current_people_count')) {
                obj['current_people_count'] = ApiClient.convertToType(data['current_people_count'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('imported_people_count')) {
                obj['imported_people_count'] = ApiClient.convertToType(data['imported_people_count'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Import</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Import</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Datetime of when the import was created
 * @member {Date} created_at
 */
Import.prototype['created_at'] = undefined;

/**
 * Count of People that have not been deleted
 * @member {Number} current_people_count
 */
Import.prototype['current_people_count'] = undefined;

/**
 * Import ID
 * @member {Number} id
 */
Import.prototype['id'] = undefined;

/**
 * Count of People that have ever been on this Import
 * @member {Number} imported_people_count
 */
Import.prototype['imported_people_count'] = undefined;

/**
 * Name of Import
 * @member {String} name
 */
Import.prototype['name'] = undefined;

/**
 * Datetime of when the import was last updated, ignoring relationship changes
 * @member {Date} updated_at
 */
Import.prototype['updated_at'] = undefined;






export default Import;

