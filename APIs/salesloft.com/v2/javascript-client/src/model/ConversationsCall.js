/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConversationsCall model module.
 * @module model/ConversationsCall
 * @version v2
 */
class ConversationsCall {
    /**
     * Constructs a new <code>ConversationsCall</code>.
     * @alias module:model/ConversationsCall
     */
    constructor() { 
        
        ConversationsCall.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationsCall</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsCall} obj Optional instance to populate.
     * @return {module:model/ConversationsCall} The populated <code>ConversationsCall</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsCall();

            if (data.hasOwnProperty('call_created_at')) {
                obj['call_created_at'] = ApiClient.convertToType(data['call_created_at'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('recording')) {
                obj['recording'] = ApiClient.convertToType(data['recording'], Object);
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('user_guid')) {
                obj['user_guid'] = ApiClient.convertToType(data['user_guid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsCall</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsCall</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['call_created_at'] && !(typeof data['call_created_at'] === 'string' || data['call_created_at'] instanceof String)) {
            throw new Error("Expected the field `call_created_at` to be a primitive type in the JSON string but got " + data['call_created_at']);
        }
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }
        // ensure the json data is a string
        if (data['user_guid'] && !(typeof data['user_guid'] === 'string' || data['user_guid'] instanceof String)) {
            throw new Error("Expected the field `user_guid` to be a primitive type in the JSON string but got " + data['user_guid']);
        }

        return true;
    }


}



/**
 * Timestamp for when the call started. If not provided, will default to the time the request was received
 * @member {String} call_created_at
 */
ConversationsCall.prototype['call_created_at'] = undefined;

/**
 * Call direction
 * @member {String} direction
 */
ConversationsCall.prototype['direction'] = undefined;

/**
 * Duration of call in seconds
 * @member {Number} duration
 */
ConversationsCall.prototype['duration'] = undefined;

/**
 * Phone number that call was made from
 * @member {String} from
 */
ConversationsCall.prototype['from'] = undefined;

/**
 * Object containing recording info including the audio file (.mp3, .wav, .ogg, .m4a)
 * @member {Object} recording
 */
ConversationsCall.prototype['recording'] = undefined;

/**
 * Phone number that was called
 * @member {String} to
 */
ConversationsCall.prototype['to'] = undefined;

/**
 * Guid of the Salesloft User to assign the call to. If not provided, will default to the user within the authentication token
 * @member {String} user_guid
 */
ConversationsCall.prototype['user_guid'] = undefined;






export default ConversationsCall;

