/**
 * SalesLoft Platform
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts 
 *
 * The version of the OpenAPI document: v2
 * Contact: integrations@salesloft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmbeddedResource from './EmbeddedResource';
import TeamTemplateCounts from './TeamTemplateCounts';

/**
 * The TeamTemplate model module.
 * @module model/TeamTemplate
 * @version v2
 */
class TeamTemplate {
    /**
     * Constructs a new <code>TeamTemplate</code>.
     * @alias module:model/TeamTemplate
     */
    constructor() { 
        
        TeamTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamTemplate} obj Optional instance to populate.
     * @return {module:model/TeamTemplate} The populated <code>TeamTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamTemplate();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = ApiClient.convertToType(data['_links'], Object);
            }
            if (data.hasOwnProperty('archived_at')) {
                obj['archived_at'] = ApiClient.convertToType(data['archived_at'], 'Date');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('body_preview')) {
                obj['body_preview'] = ApiClient.convertToType(data['body_preview'], 'String');
            }
            if (data.hasOwnProperty('click_tracking_enabled')) {
                obj['click_tracking_enabled'] = ApiClient.convertToType(data['click_tracking_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('counts')) {
                obj['counts'] = TeamTemplateCounts.constructFromObject(data['counts']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('last_modified_at')) {
                obj['last_modified_at'] = ApiClient.convertToType(data['last_modified_at'], 'Date');
            }
            if (data.hasOwnProperty('last_modified_user')) {
                obj['last_modified_user'] = EmbeddedResource.constructFromObject(data['last_modified_user']);
            }
            if (data.hasOwnProperty('last_used_at')) {
                obj['last_used_at'] = ApiClient.convertToType(data['last_used_at'], 'Date');
            }
            if (data.hasOwnProperty('open_tracking_enabled')) {
                obj['open_tracking_enabled'] = ApiClient.convertToType(data['open_tracking_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamTemplate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['body_preview'] && !(typeof data['body_preview'] === 'string' || data['body_preview'] instanceof String)) {
            throw new Error("Expected the field `body_preview` to be a primitive type in the JSON string but got " + data['body_preview']);
        }
        // validate the optional field `counts`
        if (data['counts']) { // data not null
          TeamTemplateCounts.validateJSON(data['counts']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `last_modified_user`
        if (data['last_modified_user']) { // data not null
          EmbeddedResource.validateJSON(data['last_modified_user']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Links to attachments resource for this template 
 * @member {Object} _links
 */
TeamTemplate.prototype['_links'] = undefined;

/**
 * Datetime of when the team template was archived, if archived
 * @member {Date} archived_at
 */
TeamTemplate.prototype['archived_at'] = undefined;

/**
 * Body of the team template
 * @member {String} body
 */
TeamTemplate.prototype['body'] = undefined;

/**
 * A plain text version of the first 100 characters of the body of the team template
 * @member {String} body_preview
 */
TeamTemplate.prototype['body_preview'] = undefined;

/**
 * Whether click tracking is enabled for this team template
 * @member {Boolean} click_tracking_enabled
 */
TeamTemplate.prototype['click_tracking_enabled'] = undefined;

/**
 * @member {module:model/TeamTemplateCounts} counts
 */
TeamTemplate.prototype['counts'] = undefined;

/**
 * Datetime of when the team template was created
 * @member {Date} created_at
 */
TeamTemplate.prototype['created_at'] = undefined;

/**
 * ID of team template
 * @member {String} id
 */
TeamTemplate.prototype['id'] = undefined;

/**
 * Datetime of when the team template was last modified
 * @member {Date} last_modified_at
 */
TeamTemplate.prototype['last_modified_at'] = undefined;

/**
 * @member {module:model/EmbeddedResource} last_modified_user
 */
TeamTemplate.prototype['last_modified_user'] = undefined;

/**
 * Datetime of when the team template was last used
 * @member {Date} last_used_at
 */
TeamTemplate.prototype['last_used_at'] = undefined;

/**
 * Whether open tracking is enabled for this team template
 * @member {Boolean} open_tracking_enabled
 */
TeamTemplate.prototype['open_tracking_enabled'] = undefined;

/**
 * Subject of the team template
 * @member {String} subject
 */
TeamTemplate.prototype['subject'] = undefined;

/**
 * All tags applied to this team template
 * @member {Array.<String>} tags
 */
TeamTemplate.prototype['tags'] = undefined;

/**
 * Title of the team template
 * @member {String} title
 */
TeamTemplate.prototype['title'] = undefined;

/**
 * Datetime of when the team template was last updated
 * @member {Date} updated_at
 */
TeamTemplate.prototype['updated_at'] = undefined;






export default TeamTemplate;

