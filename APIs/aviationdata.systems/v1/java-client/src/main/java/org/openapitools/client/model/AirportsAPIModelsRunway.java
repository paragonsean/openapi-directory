/*
 * AviationData.Systems Airports API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AirportsAPIModelsRunway
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:09.287067-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AirportsAPIModelsRunway {
  public static final String SERIALIZED_NAME_CLOSED = "closed";
  @SerializedName(SERIALIZED_NAME_CLOSED)
  private Boolean closed;

  public static final String SERIALIZED_NAME_H_E_LATITUDE = "hE_latitude";
  @SerializedName(SERIALIZED_NAME_H_E_LATITUDE)
  private String hELatitude;

  public static final String SERIALIZED_NAME_H_E_LONGITUDE = "hE_longitude";
  @SerializedName(SERIALIZED_NAME_H_E_LONGITUDE)
  private String hELongitude;

  public static final String SERIALIZED_NAME_HE_DISPLACED_THRESHOLD_FT = "he_displaced_threshold_ft";
  @SerializedName(SERIALIZED_NAME_HE_DISPLACED_THRESHOLD_FT)
  private String heDisplacedThresholdFt;

  public static final String SERIALIZED_NAME_HE_ELEVATION_FT = "he_elevation_ft";
  @SerializedName(SERIALIZED_NAME_HE_ELEVATION_FT)
  private String heElevationFt;

  public static final String SERIALIZED_NAME_HE_HEADING_DEG = "he_heading_deg";
  @SerializedName(SERIALIZED_NAME_HE_HEADING_DEG)
  private String heHeadingDeg;

  public static final String SERIALIZED_NAME_LE_DISPLACED_THRESHOLD_FT = "le_displaced_threshold_ft";
  @SerializedName(SERIALIZED_NAME_LE_DISPLACED_THRESHOLD_FT)
  private String leDisplacedThresholdFt;

  public static final String SERIALIZED_NAME_LE_ELEVATION_FT = "le_elevation_ft";
  @SerializedName(SERIALIZED_NAME_LE_ELEVATION_FT)
  private String leElevationFt;

  public static final String SERIALIZED_NAME_LE_HEADING_DEG = "le_heading_deg";
  @SerializedName(SERIALIZED_NAME_LE_HEADING_DEG)
  private String leHeadingDeg;

  public static final String SERIALIZED_NAME_LE_LATITUDE = "le_latitude";
  @SerializedName(SERIALIZED_NAME_LE_LATITUDE)
  private String leLatitude;

  public static final String SERIALIZED_NAME_LE_LONGITUDE = "le_longitude";
  @SerializedName(SERIALIZED_NAME_LE_LONGITUDE)
  private String leLongitude;

  public static final String SERIALIZED_NAME_LENGTH_FT = "length_ft";
  @SerializedName(SERIALIZED_NAME_LENGTH_FT)
  private String lengthFt;

  public static final String SERIALIZED_NAME_LIGHTED = "lighted";
  @SerializedName(SERIALIZED_NAME_LIGHTED)
  private Boolean lighted;

  public static final String SERIALIZED_NAME_SURFACE_TYPE = "surface_type";
  @SerializedName(SERIALIZED_NAME_SURFACE_TYPE)
  private String surfaceType;

  public static final String SERIALIZED_NAME_WIDTH_FT = "width_ft";
  @SerializedName(SERIALIZED_NAME_WIDTH_FT)
  private String widthFt;

  public AirportsAPIModelsRunway() {
  }

  public AirportsAPIModelsRunway closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

  /**
   * Get closed
   * @return closed
   */
  @javax.annotation.Nullable
  public Boolean getClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }


  public AirportsAPIModelsRunway hELatitude(String hELatitude) {
    this.hELatitude = hELatitude;
    return this;
  }

  /**
   * Get hELatitude
   * @return hELatitude
   */
  @javax.annotation.Nullable
  public String gethELatitude() {
    return hELatitude;
  }

  public void sethELatitude(String hELatitude) {
    this.hELatitude = hELatitude;
  }


  public AirportsAPIModelsRunway hELongitude(String hELongitude) {
    this.hELongitude = hELongitude;
    return this;
  }

  /**
   * Get hELongitude
   * @return hELongitude
   */
  @javax.annotation.Nullable
  public String gethELongitude() {
    return hELongitude;
  }

  public void sethELongitude(String hELongitude) {
    this.hELongitude = hELongitude;
  }


  public AirportsAPIModelsRunway heDisplacedThresholdFt(String heDisplacedThresholdFt) {
    this.heDisplacedThresholdFt = heDisplacedThresholdFt;
    return this;
  }

  /**
   * Get heDisplacedThresholdFt
   * @return heDisplacedThresholdFt
   */
  @javax.annotation.Nullable
  public String getHeDisplacedThresholdFt() {
    return heDisplacedThresholdFt;
  }

  public void setHeDisplacedThresholdFt(String heDisplacedThresholdFt) {
    this.heDisplacedThresholdFt = heDisplacedThresholdFt;
  }


  public AirportsAPIModelsRunway heElevationFt(String heElevationFt) {
    this.heElevationFt = heElevationFt;
    return this;
  }

  /**
   * Get heElevationFt
   * @return heElevationFt
   */
  @javax.annotation.Nullable
  public String getHeElevationFt() {
    return heElevationFt;
  }

  public void setHeElevationFt(String heElevationFt) {
    this.heElevationFt = heElevationFt;
  }


  public AirportsAPIModelsRunway heHeadingDeg(String heHeadingDeg) {
    this.heHeadingDeg = heHeadingDeg;
    return this;
  }

  /**
   * Get heHeadingDeg
   * @return heHeadingDeg
   */
  @javax.annotation.Nullable
  public String getHeHeadingDeg() {
    return heHeadingDeg;
  }

  public void setHeHeadingDeg(String heHeadingDeg) {
    this.heHeadingDeg = heHeadingDeg;
  }


  public AirportsAPIModelsRunway leDisplacedThresholdFt(String leDisplacedThresholdFt) {
    this.leDisplacedThresholdFt = leDisplacedThresholdFt;
    return this;
  }

  /**
   * Get leDisplacedThresholdFt
   * @return leDisplacedThresholdFt
   */
  @javax.annotation.Nullable
  public String getLeDisplacedThresholdFt() {
    return leDisplacedThresholdFt;
  }

  public void setLeDisplacedThresholdFt(String leDisplacedThresholdFt) {
    this.leDisplacedThresholdFt = leDisplacedThresholdFt;
  }


  public AirportsAPIModelsRunway leElevationFt(String leElevationFt) {
    this.leElevationFt = leElevationFt;
    return this;
  }

  /**
   * Get leElevationFt
   * @return leElevationFt
   */
  @javax.annotation.Nullable
  public String getLeElevationFt() {
    return leElevationFt;
  }

  public void setLeElevationFt(String leElevationFt) {
    this.leElevationFt = leElevationFt;
  }


  public AirportsAPIModelsRunway leHeadingDeg(String leHeadingDeg) {
    this.leHeadingDeg = leHeadingDeg;
    return this;
  }

  /**
   * Get leHeadingDeg
   * @return leHeadingDeg
   */
  @javax.annotation.Nullable
  public String getLeHeadingDeg() {
    return leHeadingDeg;
  }

  public void setLeHeadingDeg(String leHeadingDeg) {
    this.leHeadingDeg = leHeadingDeg;
  }


  public AirportsAPIModelsRunway leLatitude(String leLatitude) {
    this.leLatitude = leLatitude;
    return this;
  }

  /**
   * Get leLatitude
   * @return leLatitude
   */
  @javax.annotation.Nullable
  public String getLeLatitude() {
    return leLatitude;
  }

  public void setLeLatitude(String leLatitude) {
    this.leLatitude = leLatitude;
  }


  public AirportsAPIModelsRunway leLongitude(String leLongitude) {
    this.leLongitude = leLongitude;
    return this;
  }

  /**
   * Get leLongitude
   * @return leLongitude
   */
  @javax.annotation.Nullable
  public String getLeLongitude() {
    return leLongitude;
  }

  public void setLeLongitude(String leLongitude) {
    this.leLongitude = leLongitude;
  }


  public AirportsAPIModelsRunway lengthFt(String lengthFt) {
    this.lengthFt = lengthFt;
    return this;
  }

  /**
   * Get lengthFt
   * @return lengthFt
   */
  @javax.annotation.Nullable
  public String getLengthFt() {
    return lengthFt;
  }

  public void setLengthFt(String lengthFt) {
    this.lengthFt = lengthFt;
  }


  public AirportsAPIModelsRunway lighted(Boolean lighted) {
    this.lighted = lighted;
    return this;
  }

  /**
   * Get lighted
   * @return lighted
   */
  @javax.annotation.Nullable
  public Boolean getLighted() {
    return lighted;
  }

  public void setLighted(Boolean lighted) {
    this.lighted = lighted;
  }


  public AirportsAPIModelsRunway surfaceType(String surfaceType) {
    this.surfaceType = surfaceType;
    return this;
  }

  /**
   * Get surfaceType
   * @return surfaceType
   */
  @javax.annotation.Nullable
  public String getSurfaceType() {
    return surfaceType;
  }

  public void setSurfaceType(String surfaceType) {
    this.surfaceType = surfaceType;
  }


  public AirportsAPIModelsRunway widthFt(String widthFt) {
    this.widthFt = widthFt;
    return this;
  }

  /**
   * Get widthFt
   * @return widthFt
   */
  @javax.annotation.Nullable
  public String getWidthFt() {
    return widthFt;
  }

  public void setWidthFt(String widthFt) {
    this.widthFt = widthFt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AirportsAPIModelsRunway airportsAPIModelsRunway = (AirportsAPIModelsRunway) o;
    return Objects.equals(this.closed, airportsAPIModelsRunway.closed) &&
        Objects.equals(this.hELatitude, airportsAPIModelsRunway.hELatitude) &&
        Objects.equals(this.hELongitude, airportsAPIModelsRunway.hELongitude) &&
        Objects.equals(this.heDisplacedThresholdFt, airportsAPIModelsRunway.heDisplacedThresholdFt) &&
        Objects.equals(this.heElevationFt, airportsAPIModelsRunway.heElevationFt) &&
        Objects.equals(this.heHeadingDeg, airportsAPIModelsRunway.heHeadingDeg) &&
        Objects.equals(this.leDisplacedThresholdFt, airportsAPIModelsRunway.leDisplacedThresholdFt) &&
        Objects.equals(this.leElevationFt, airportsAPIModelsRunway.leElevationFt) &&
        Objects.equals(this.leHeadingDeg, airportsAPIModelsRunway.leHeadingDeg) &&
        Objects.equals(this.leLatitude, airportsAPIModelsRunway.leLatitude) &&
        Objects.equals(this.leLongitude, airportsAPIModelsRunway.leLongitude) &&
        Objects.equals(this.lengthFt, airportsAPIModelsRunway.lengthFt) &&
        Objects.equals(this.lighted, airportsAPIModelsRunway.lighted) &&
        Objects.equals(this.surfaceType, airportsAPIModelsRunway.surfaceType) &&
        Objects.equals(this.widthFt, airportsAPIModelsRunway.widthFt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(closed, hELatitude, hELongitude, heDisplacedThresholdFt, heElevationFt, heHeadingDeg, leDisplacedThresholdFt, leElevationFt, leHeadingDeg, leLatitude, leLongitude, lengthFt, lighted, surfaceType, widthFt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AirportsAPIModelsRunway {\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    hELatitude: ").append(toIndentedString(hELatitude)).append("\n");
    sb.append("    hELongitude: ").append(toIndentedString(hELongitude)).append("\n");
    sb.append("    heDisplacedThresholdFt: ").append(toIndentedString(heDisplacedThresholdFt)).append("\n");
    sb.append("    heElevationFt: ").append(toIndentedString(heElevationFt)).append("\n");
    sb.append("    heHeadingDeg: ").append(toIndentedString(heHeadingDeg)).append("\n");
    sb.append("    leDisplacedThresholdFt: ").append(toIndentedString(leDisplacedThresholdFt)).append("\n");
    sb.append("    leElevationFt: ").append(toIndentedString(leElevationFt)).append("\n");
    sb.append("    leHeadingDeg: ").append(toIndentedString(leHeadingDeg)).append("\n");
    sb.append("    leLatitude: ").append(toIndentedString(leLatitude)).append("\n");
    sb.append("    leLongitude: ").append(toIndentedString(leLongitude)).append("\n");
    sb.append("    lengthFt: ").append(toIndentedString(lengthFt)).append("\n");
    sb.append("    lighted: ").append(toIndentedString(lighted)).append("\n");
    sb.append("    surfaceType: ").append(toIndentedString(surfaceType)).append("\n");
    sb.append("    widthFt: ").append(toIndentedString(widthFt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("closed");
    openapiFields.add("hE_latitude");
    openapiFields.add("hE_longitude");
    openapiFields.add("he_displaced_threshold_ft");
    openapiFields.add("he_elevation_ft");
    openapiFields.add("he_heading_deg");
    openapiFields.add("le_displaced_threshold_ft");
    openapiFields.add("le_elevation_ft");
    openapiFields.add("le_heading_deg");
    openapiFields.add("le_latitude");
    openapiFields.add("le_longitude");
    openapiFields.add("length_ft");
    openapiFields.add("lighted");
    openapiFields.add("surface_type");
    openapiFields.add("width_ft");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AirportsAPIModelsRunway
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AirportsAPIModelsRunway.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AirportsAPIModelsRunway is not found in the empty JSON string", AirportsAPIModelsRunway.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AirportsAPIModelsRunway.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AirportsAPIModelsRunway` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("hE_latitude") != null && !jsonObj.get("hE_latitude").isJsonNull()) && !jsonObj.get("hE_latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hE_latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hE_latitude").toString()));
      }
      if ((jsonObj.get("hE_longitude") != null && !jsonObj.get("hE_longitude").isJsonNull()) && !jsonObj.get("hE_longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hE_longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hE_longitude").toString()));
      }
      if ((jsonObj.get("he_displaced_threshold_ft") != null && !jsonObj.get("he_displaced_threshold_ft").isJsonNull()) && !jsonObj.get("he_displaced_threshold_ft").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `he_displaced_threshold_ft` to be a primitive type in the JSON string but got `%s`", jsonObj.get("he_displaced_threshold_ft").toString()));
      }
      if ((jsonObj.get("he_elevation_ft") != null && !jsonObj.get("he_elevation_ft").isJsonNull()) && !jsonObj.get("he_elevation_ft").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `he_elevation_ft` to be a primitive type in the JSON string but got `%s`", jsonObj.get("he_elevation_ft").toString()));
      }
      if ((jsonObj.get("he_heading_deg") != null && !jsonObj.get("he_heading_deg").isJsonNull()) && !jsonObj.get("he_heading_deg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `he_heading_deg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("he_heading_deg").toString()));
      }
      if ((jsonObj.get("le_displaced_threshold_ft") != null && !jsonObj.get("le_displaced_threshold_ft").isJsonNull()) && !jsonObj.get("le_displaced_threshold_ft").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `le_displaced_threshold_ft` to be a primitive type in the JSON string but got `%s`", jsonObj.get("le_displaced_threshold_ft").toString()));
      }
      if ((jsonObj.get("le_elevation_ft") != null && !jsonObj.get("le_elevation_ft").isJsonNull()) && !jsonObj.get("le_elevation_ft").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `le_elevation_ft` to be a primitive type in the JSON string but got `%s`", jsonObj.get("le_elevation_ft").toString()));
      }
      if ((jsonObj.get("le_heading_deg") != null && !jsonObj.get("le_heading_deg").isJsonNull()) && !jsonObj.get("le_heading_deg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `le_heading_deg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("le_heading_deg").toString()));
      }
      if ((jsonObj.get("le_latitude") != null && !jsonObj.get("le_latitude").isJsonNull()) && !jsonObj.get("le_latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `le_latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("le_latitude").toString()));
      }
      if ((jsonObj.get("le_longitude") != null && !jsonObj.get("le_longitude").isJsonNull()) && !jsonObj.get("le_longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `le_longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("le_longitude").toString()));
      }
      if ((jsonObj.get("length_ft") != null && !jsonObj.get("length_ft").isJsonNull()) && !jsonObj.get("length_ft").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `length_ft` to be a primitive type in the JSON string but got `%s`", jsonObj.get("length_ft").toString()));
      }
      if ((jsonObj.get("surface_type") != null && !jsonObj.get("surface_type").isJsonNull()) && !jsonObj.get("surface_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `surface_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("surface_type").toString()));
      }
      if ((jsonObj.get("width_ft") != null && !jsonObj.get("width_ft").isJsonNull()) && !jsonObj.get("width_ft").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `width_ft` to be a primitive type in the JSON string but got `%s`", jsonObj.get("width_ft").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AirportsAPIModelsRunway.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AirportsAPIModelsRunway' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AirportsAPIModelsRunway> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AirportsAPIModelsRunway.class));

       return (TypeAdapter<T>) new TypeAdapter<AirportsAPIModelsRunway>() {
           @Override
           public void write(JsonWriter out, AirportsAPIModelsRunway value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AirportsAPIModelsRunway read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AirportsAPIModelsRunway given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AirportsAPIModelsRunway
   * @throws IOException if the JSON string is invalid with respect to AirportsAPIModelsRunway
   */
  public static AirportsAPIModelsRunway fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AirportsAPIModelsRunway.class);
  }

  /**
   * Convert an instance of AirportsAPIModelsRunway to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

