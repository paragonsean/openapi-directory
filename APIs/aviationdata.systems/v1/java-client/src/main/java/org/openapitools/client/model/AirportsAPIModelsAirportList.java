/*
 * AviationData.Systems Airports API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AirportsAPIModelsAirportList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:09.287067-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AirportsAPIModelsAirportList {
  public static final String SERIALIZED_NAME_AIRPORT_NAME = "airport_name";
  @SerializedName(SERIALIZED_NAME_AIRPORT_NAME)
  private String airportName;

  public static final String SERIALIZED_NAME_AIRPORT_TYPE = "airport_type";
  @SerializedName(SERIALIZED_NAME_AIRPORT_TYPE)
  private String airportType;

  public static final String SERIALIZED_NAME_IATA_CODE = "iata_code";
  @SerializedName(SERIALIZED_NAME_IATA_CODE)
  private String iataCode;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private String latitude;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private String longitude;

  public AirportsAPIModelsAirportList() {
  }

  public AirportsAPIModelsAirportList airportName(String airportName) {
    this.airportName = airportName;
    return this;
  }

  /**
   * Get airportName
   * @return airportName
   */
  @javax.annotation.Nullable
  public String getAirportName() {
    return airportName;
  }

  public void setAirportName(String airportName) {
    this.airportName = airportName;
  }


  public AirportsAPIModelsAirportList airportType(String airportType) {
    this.airportType = airportType;
    return this;
  }

  /**
   * Get airportType
   * @return airportType
   */
  @javax.annotation.Nullable
  public String getAirportType() {
    return airportType;
  }

  public void setAirportType(String airportType) {
    this.airportType = airportType;
  }


  public AirportsAPIModelsAirportList iataCode(String iataCode) {
    this.iataCode = iataCode;
    return this;
  }

  /**
   * Get iataCode
   * @return iataCode
   */
  @javax.annotation.Nullable
  public String getIataCode() {
    return iataCode;
  }

  public void setIataCode(String iataCode) {
    this.iataCode = iataCode;
  }


  public AirportsAPIModelsAirportList latitude(String latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public String getLatitude() {
    return latitude;
  }

  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }


  public AirportsAPIModelsAirportList location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public AirportsAPIModelsAirportList longitude(String longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nullable
  public String getLongitude() {
    return longitude;
  }

  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AirportsAPIModelsAirportList airportsAPIModelsAirportList = (AirportsAPIModelsAirportList) o;
    return Objects.equals(this.airportName, airportsAPIModelsAirportList.airportName) &&
        Objects.equals(this.airportType, airportsAPIModelsAirportList.airportType) &&
        Objects.equals(this.iataCode, airportsAPIModelsAirportList.iataCode) &&
        Objects.equals(this.latitude, airportsAPIModelsAirportList.latitude) &&
        Objects.equals(this.location, airportsAPIModelsAirportList.location) &&
        Objects.equals(this.longitude, airportsAPIModelsAirportList.longitude);
  }

  @Override
  public int hashCode() {
    return Objects.hash(airportName, airportType, iataCode, latitude, location, longitude);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AirportsAPIModelsAirportList {\n");
    sb.append("    airportName: ").append(toIndentedString(airportName)).append("\n");
    sb.append("    airportType: ").append(toIndentedString(airportType)).append("\n");
    sb.append("    iataCode: ").append(toIndentedString(iataCode)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("airport_name");
    openapiFields.add("airport_type");
    openapiFields.add("iata_code");
    openapiFields.add("latitude");
    openapiFields.add("location");
    openapiFields.add("longitude");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AirportsAPIModelsAirportList
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AirportsAPIModelsAirportList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AirportsAPIModelsAirportList is not found in the empty JSON string", AirportsAPIModelsAirportList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AirportsAPIModelsAirportList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AirportsAPIModelsAirportList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("airport_name") != null && !jsonObj.get("airport_name").isJsonNull()) && !jsonObj.get("airport_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `airport_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("airport_name").toString()));
      }
      if ((jsonObj.get("airport_type") != null && !jsonObj.get("airport_type").isJsonNull()) && !jsonObj.get("airport_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `airport_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("airport_type").toString()));
      }
      if ((jsonObj.get("iata_code") != null && !jsonObj.get("iata_code").isJsonNull()) && !jsonObj.get("iata_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iata_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iata_code").toString()));
      }
      if ((jsonObj.get("latitude") != null && !jsonObj.get("latitude").isJsonNull()) && !jsonObj.get("latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latitude").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("longitude") != null && !jsonObj.get("longitude").isJsonNull()) && !jsonObj.get("longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("longitude").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AirportsAPIModelsAirportList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AirportsAPIModelsAirportList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AirportsAPIModelsAirportList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AirportsAPIModelsAirportList.class));

       return (TypeAdapter<T>) new TypeAdapter<AirportsAPIModelsAirportList>() {
           @Override
           public void write(JsonWriter out, AirportsAPIModelsAirportList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AirportsAPIModelsAirportList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AirportsAPIModelsAirportList given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AirportsAPIModelsAirportList
   * @throws IOException if the JSON string is invalid with respect to AirportsAPIModelsAirportList
   */
  public static AirportsAPIModelsAirportList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AirportsAPIModelsAirportList.class);
  }

  /**
   * Convert an instance of AirportsAPIModelsAirportList to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

