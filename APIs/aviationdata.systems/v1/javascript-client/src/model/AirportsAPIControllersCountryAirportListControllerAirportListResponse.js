/**
 * AviationData.Systems Airports API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AirportsAPIModelsAirportList from './AirportsAPIModelsAirportList';
import AirportsAPIModelsCountry from './AirportsAPIModelsCountry';

/**
 * The AirportsAPIControllersCountryAirportListControllerAirportListResponse model module.
 * @module model/AirportsAPIControllersCountryAirportListControllerAirportListResponse
 * @version v1
 */
class AirportsAPIControllersCountryAirportListControllerAirportListResponse {
    /**
     * Constructs a new <code>AirportsAPIControllersCountryAirportListControllerAirportListResponse</code>.
     * @alias module:model/AirportsAPIControllersCountryAirportListControllerAirportListResponse
     */
    constructor() { 
        
        AirportsAPIControllersCountryAirportListControllerAirportListResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AirportsAPIControllersCountryAirportListControllerAirportListResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AirportsAPIControllersCountryAirportListControllerAirportListResponse} obj Optional instance to populate.
     * @return {module:model/AirportsAPIControllersCountryAirportListControllerAirportListResponse} The populated <code>AirportsAPIControllersCountryAirportListControllerAirportListResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AirportsAPIControllersCountryAirportListControllerAirportListResponse();

            if (data.hasOwnProperty('airport_list')) {
                obj['airport_list'] = ApiClient.convertToType(data['airport_list'], [AirportsAPIModelsAirportList]);
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = AirportsAPIModelsCountry.constructFromObject(data['country']);
            }
            if (data.hasOwnProperty('disclaimer')) {
                obj['disclaimer'] = ApiClient.convertToType(data['disclaimer'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('status_code')) {
                obj['status_code'] = ApiClient.convertToType(data['status_code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AirportsAPIControllersCountryAirportListControllerAirportListResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AirportsAPIControllersCountryAirportListControllerAirportListResponse</code>.
     */
    static validateJSON(data) {
        if (data['airport_list']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['airport_list'])) {
                throw new Error("Expected the field `airport_list` to be an array in the JSON data but got " + data['airport_list']);
            }
            // validate the optional field `airport_list` (array)
            for (const item of data['airport_list']) {
                AirportsAPIModelsAirportList.validateJSON(item);
            };
        }
        // validate the optional field `country`
        if (data['country']) { // data not null
          AirportsAPIModelsCountry.validateJSON(data['country']);
        }
        // ensure the json data is a string
        if (data['disclaimer'] && !(typeof data['disclaimer'] === 'string' || data['disclaimer'] instanceof String)) {
            throw new Error("Expected the field `disclaimer` to be a primitive type in the JSON string but got " + data['disclaimer']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['status_code'] && !(typeof data['status_code'] === 'string' || data['status_code'] instanceof String)) {
            throw new Error("Expected the field `status_code` to be a primitive type in the JSON string but got " + data['status_code']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AirportsAPIModelsAirportList>} airport_list
 */
AirportsAPIControllersCountryAirportListControllerAirportListResponse.prototype['airport_list'] = undefined;

/**
 * @member {module:model/AirportsAPIModelsCountry} country
 */
AirportsAPIControllersCountryAirportListControllerAirportListResponse.prototype['country'] = undefined;

/**
 * @member {String} disclaimer
 */
AirportsAPIControllersCountryAirportListControllerAirportListResponse.prototype['disclaimer'] = undefined;

/**
 * @member {String} message
 */
AirportsAPIControllersCountryAirportListControllerAirportListResponse.prototype['message'] = undefined;

/**
 * @member {String} status_code
 */
AirportsAPIControllersCountryAirportListControllerAirportListResponse.prototype['status_code'] = undefined;






export default AirportsAPIControllersCountryAirportListControllerAirportListResponse;

