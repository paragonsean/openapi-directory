/**
 * AviationData.Systems Airports API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AirportsAPIModelsAirportList model module.
 * @module model/AirportsAPIModelsAirportList
 * @version v1
 */
class AirportsAPIModelsAirportList {
    /**
     * Constructs a new <code>AirportsAPIModelsAirportList</code>.
     * @alias module:model/AirportsAPIModelsAirportList
     */
    constructor() { 
        
        AirportsAPIModelsAirportList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AirportsAPIModelsAirportList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AirportsAPIModelsAirportList} obj Optional instance to populate.
     * @return {module:model/AirportsAPIModelsAirportList} The populated <code>AirportsAPIModelsAirportList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AirportsAPIModelsAirportList();

            if (data.hasOwnProperty('airport_name')) {
                obj['airport_name'] = ApiClient.convertToType(data['airport_name'], 'String');
            }
            if (data.hasOwnProperty('airport_type')) {
                obj['airport_type'] = ApiClient.convertToType(data['airport_type'], 'String');
            }
            if (data.hasOwnProperty('iata_code')) {
                obj['iata_code'] = ApiClient.convertToType(data['iata_code'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AirportsAPIModelsAirportList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AirportsAPIModelsAirportList</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['airport_name'] && !(typeof data['airport_name'] === 'string' || data['airport_name'] instanceof String)) {
            throw new Error("Expected the field `airport_name` to be a primitive type in the JSON string but got " + data['airport_name']);
        }
        // ensure the json data is a string
        if (data['airport_type'] && !(typeof data['airport_type'] === 'string' || data['airport_type'] instanceof String)) {
            throw new Error("Expected the field `airport_type` to be a primitive type in the JSON string but got " + data['airport_type']);
        }
        // ensure the json data is a string
        if (data['iata_code'] && !(typeof data['iata_code'] === 'string' || data['iata_code'] instanceof String)) {
            throw new Error("Expected the field `iata_code` to be a primitive type in the JSON string but got " + data['iata_code']);
        }
        // ensure the json data is a string
        if (data['latitude'] && !(typeof data['latitude'] === 'string' || data['latitude'] instanceof String)) {
            throw new Error("Expected the field `latitude` to be a primitive type in the JSON string but got " + data['latitude']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['longitude'] && !(typeof data['longitude'] === 'string' || data['longitude'] instanceof String)) {
            throw new Error("Expected the field `longitude` to be a primitive type in the JSON string but got " + data['longitude']);
        }

        return true;
    }


}



/**
 * @member {String} airport_name
 */
AirportsAPIModelsAirportList.prototype['airport_name'] = undefined;

/**
 * @member {String} airport_type
 */
AirportsAPIModelsAirportList.prototype['airport_type'] = undefined;

/**
 * @member {String} iata_code
 */
AirportsAPIModelsAirportList.prototype['iata_code'] = undefined;

/**
 * @member {String} latitude
 */
AirportsAPIModelsAirportList.prototype['latitude'] = undefined;

/**
 * @member {String} location
 */
AirportsAPIModelsAirportList.prototype['location'] = undefined;

/**
 * @member {String} longitude
 */
AirportsAPIModelsAirportList.prototype['longitude'] = undefined;






export default AirportsAPIModelsAirportList;

