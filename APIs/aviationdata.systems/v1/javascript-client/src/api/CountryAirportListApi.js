/**
 * AviationData.Systems Airports API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AirportsAPIControllersCountryAirportListControllerAirportListResponse from '../model/AirportsAPIControllersCountryAirportListControllerAirportListResponse';

/**
* CountryAirportList service.
* @module api/CountryAirportListApi
* @version v1
*/
export default class CountryAirportListApi {

    /**
    * Constructs a new CountryAirportListApi. 
    * @alias module:api/CountryAirportListApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the countryAirportListCountryAirportList operation.
     * @callback module:api/CountryAirportListApi~countryAirportListCountryAirportListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AirportsAPIControllersCountryAirportListControllerAirportListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Country airports. Returns a list of airports for a country code(ISO 3166-1 alpha-2 code)
     * Required parameters: country code (ISO 3166-1), airport_service_type.
     * @param {String} countryCode Country code (ISO 3166-1). This can be found via /countries
     * @param {module:model/String} airportServiceType Required: Needs to be: All, Scheduled or NonScheduled
     * @param {module:api/CountryAirportListApi~countryAirportListCountryAirportListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AirportsAPIControllersCountryAirportListControllerAirportListResponse}
     */
    countryAirportListCountryAirportList(countryCode, airportServiceType, callback) {
      let postBody = null;
      // verify the required parameter 'countryCode' is set
      if (countryCode === undefined || countryCode === null) {
        throw new Error("Missing the required parameter 'countryCode' when calling countryAirportListCountryAirportList");
      }
      // verify the required parameter 'airportServiceType' is set
      if (airportServiceType === undefined || airportServiceType === null) {
        throw new Error("Missing the required parameter 'airportServiceType' when calling countryAirportListCountryAirportList");
      }

      let pathParams = {
        'country_code': countryCode
      };
      let queryParams = {
        'airport_service_type': airportServiceType
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = AirportsAPIControllersCountryAirportListControllerAirportListResponse;
      return this.apiClient.callApi(
        '/v1/country/code/{country_code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
