/**
 * AviationData.Systems Airports API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AirportsAPIControllersAutoCompleteAirportNameControllerResponse from '../model/AirportsAPIControllersAutoCompleteAirportNameControllerResponse';

/**
* AutoCompleteAirportName service.
* @module api/AutoCompleteAirportNameApi
* @version v1
*/
export default class AutoCompleteAirportNameApi {

    /**
    * Constructs a new AutoCompleteAirportNameApi. 
    * @alias module:api/AutoCompleteAirportNameApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the autoCompleteAirportNameAirportNameSearch operation.
     * @callback module:api/AutoCompleteAirportNameApi~autoCompleteAirportNameAirportNameSearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AirportsAPIControllersAutoCompleteAirportNameControllerResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Autocomplete airport names. Returns a maximum of 10 airport names.
     * Required parameters: airport_name, airport_service_type. Optional parameter: country code (ISO 3166-1).
     * @param {String} airportName Required: The airports name
     * @param {module:model/String} airportServiceType Required: Needs to be: All, Scheduled or NonScheduled
     * @param {Object} opts Optional parameters
     * @param {String} [optionalCountryCode] Optional: Country code (ISO 3166-1). This can be found via /countries
     * @param {module:api/AutoCompleteAirportNameApi~autoCompleteAirportNameAirportNameSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AirportsAPIControllersAutoCompleteAirportNameControllerResponse}
     */
    autoCompleteAirportNameAirportNameSearch(airportName, airportServiceType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'airportName' is set
      if (airportName === undefined || airportName === null) {
        throw new Error("Missing the required parameter 'airportName' when calling autoCompleteAirportNameAirportNameSearch");
      }
      // verify the required parameter 'airportServiceType' is set
      if (airportServiceType === undefined || airportServiceType === null) {
        throw new Error("Missing the required parameter 'airportServiceType' when calling autoCompleteAirportNameAirportNameSearch");
      }

      let pathParams = {
        'airport_name': airportName
      };
      let queryParams = {
        'airport_service_type': airportServiceType,
        'optional_country_code': opts['optionalCountryCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = AirportsAPIControllersAutoCompleteAirportNameControllerResponse;
      return this.apiClient.callApi(
        '/v1/airport/autocomplete/{airport_name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
