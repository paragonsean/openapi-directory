/**
 * AviationData.Systems Airports API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AviationDataSystemsAirportsApiV1);
  }
}(this, function(expect, AviationDataSystemsAirportsApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AirportsAPIModelsRunway', function() {
    it('should create an instance of AirportsAPIModelsRunway', function() {
      // uncomment below and update the code to test AirportsAPIModelsRunway
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be.a(AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway);
    });

    it('should have the property closed (base name: "closed")', function() {
      // uncomment below and update the code to test the property closed
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property hELatitude (base name: "hE_latitude")', function() {
      // uncomment below and update the code to test the property hELatitude
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property hELongitude (base name: "hE_longitude")', function() {
      // uncomment below and update the code to test the property hELongitude
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property heDisplacedThresholdFt (base name: "he_displaced_threshold_ft")', function() {
      // uncomment below and update the code to test the property heDisplacedThresholdFt
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property heElevationFt (base name: "he_elevation_ft")', function() {
      // uncomment below and update the code to test the property heElevationFt
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property heHeadingDeg (base name: "he_heading_deg")', function() {
      // uncomment below and update the code to test the property heHeadingDeg
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property leDisplacedThresholdFt (base name: "le_displaced_threshold_ft")', function() {
      // uncomment below and update the code to test the property leDisplacedThresholdFt
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property leElevationFt (base name: "le_elevation_ft")', function() {
      // uncomment below and update the code to test the property leElevationFt
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property leHeadingDeg (base name: "le_heading_deg")', function() {
      // uncomment below and update the code to test the property leHeadingDeg
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property leLatitude (base name: "le_latitude")', function() {
      // uncomment below and update the code to test the property leLatitude
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property leLongitude (base name: "le_longitude")', function() {
      // uncomment below and update the code to test the property leLongitude
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property lengthFt (base name: "length_ft")', function() {
      // uncomment below and update the code to test the property lengthFt
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property lighted (base name: "lighted")', function() {
      // uncomment below and update the code to test the property lighted
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property surfaceType (base name: "surface_type")', function() {
      // uncomment below and update the code to test the property surfaceType
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

    it('should have the property widthFt (base name: "width_ft")', function() {
      // uncomment below and update the code to test the property widthFt
      //var instance = new AviationDataSystemsAirportsApiV1.AirportsAPIModelsRunway();
      //expect(instance).to.be();
    });

  });

}));
