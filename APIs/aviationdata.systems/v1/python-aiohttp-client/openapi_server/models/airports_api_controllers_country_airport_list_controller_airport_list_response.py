# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.airports_api_models_airport_list import AirportsAPIModelsAirportList
from openapi_server.models.airports_api_models_country import AirportsAPIModelsCountry
from openapi_server import util


class AirportsAPIControllersCountryAirportListControllerAirportListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, airport_list: List[AirportsAPIModelsAirportList]=None, country: AirportsAPIModelsCountry=None, disclaimer: str=None, message: str=None, status_code: str=None):
        """AirportsAPIControllersCountryAirportListControllerAirportListResponse - a model defined in OpenAPI

        :param airport_list: The airport_list of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :param country: The country of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :param disclaimer: The disclaimer of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :param message: The message of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :param status_code: The status_code of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        """
        self.openapi_types = {
            'airport_list': List[AirportsAPIModelsAirportList],
            'country': AirportsAPIModelsCountry,
            'disclaimer': str,
            'message': str,
            'status_code': str
        }

        self.attribute_map = {
            'airport_list': 'airport_list',
            'country': 'country',
            'disclaimer': 'disclaimer',
            'message': 'message',
            'status_code': 'status_code'
        }

        self._airport_list = airport_list
        self._country = country
        self._disclaimer = disclaimer
        self._message = message
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AirportsAPIControllersCountryAirportListControllerAirportListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AirportsAPI.Controllers.CountryAirportListController.AirportListResponse of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def airport_list(self):
        """Gets the airport_list of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :return: The airport_list of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :rtype: List[AirportsAPIModelsAirportList]
        """
        return self._airport_list

    @airport_list.setter
    def airport_list(self, airport_list):
        """Sets the airport_list of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :param airport_list: The airport_list of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :type airport_list: List[AirportsAPIModelsAirportList]
        """

        self._airport_list = airport_list

    @property
    def country(self):
        """Gets the country of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :return: The country of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :rtype: AirportsAPIModelsCountry
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :param country: The country of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :type country: AirportsAPIModelsCountry
        """

        self._country = country

    @property
    def disclaimer(self):
        """Gets the disclaimer of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :return: The disclaimer of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :rtype: str
        """
        return self._disclaimer

    @disclaimer.setter
    def disclaimer(self, disclaimer):
        """Sets the disclaimer of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :param disclaimer: The disclaimer of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :type disclaimer: str
        """

        self._disclaimer = disclaimer

    @property
    def message(self):
        """Gets the message of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :return: The message of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :param message: The message of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :type message: str
        """

        self._message = message

    @property
    def status_code(self):
        """Gets the status_code of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :return: The status_code of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.


        :param status_code: The status_code of this AirportsAPIControllersCountryAirportListControllerAirportListResponse.
        :type status_code: str
        """

        self._status_code = status_code
