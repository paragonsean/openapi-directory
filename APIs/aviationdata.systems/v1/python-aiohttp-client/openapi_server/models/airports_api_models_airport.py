# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.airports_api_models_frequency import AirportsAPIModelsFrequency
from openapi_server.models.airports_api_models_location_country import AirportsAPIModelsLocationCountry
from openapi_server.models.airports_api_models_location_region import AirportsAPIModelsLocationRegion
from openapi_server.models.airports_api_models_runway import AirportsAPIModelsRunway
from openapi_server import util


class AirportsAPIModelsAirport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: AirportsAPIModelsLocationCountry=None, frequency: List[AirportsAPIModelsFrequency]=None, region: AirportsAPIModelsLocationRegion=None, runway: List[AirportsAPIModelsRunway]=None, airport_name: str=None, airport_type: str=None, elevation_ft: str=None, gps_code: str=None, iata_code: str=None, latitude: str=None, local_code: str=None, location: str=None, logo_url: str=None, longitude: str=None, scheduled_service: bool=None, website: str=None, wikipedia: str=None):
        """AirportsAPIModelsAirport - a model defined in OpenAPI

        :param country: The country of this AirportsAPIModelsAirport.
        :param frequency: The frequency of this AirportsAPIModelsAirport.
        :param region: The region of this AirportsAPIModelsAirport.
        :param runway: The runway of this AirportsAPIModelsAirport.
        :param airport_name: The airport_name of this AirportsAPIModelsAirport.
        :param airport_type: The airport_type of this AirportsAPIModelsAirport.
        :param elevation_ft: The elevation_ft of this AirportsAPIModelsAirport.
        :param gps_code: The gps_code of this AirportsAPIModelsAirport.
        :param iata_code: The iata_code of this AirportsAPIModelsAirport.
        :param latitude: The latitude of this AirportsAPIModelsAirport.
        :param local_code: The local_code of this AirportsAPIModelsAirport.
        :param location: The location of this AirportsAPIModelsAirport.
        :param logo_url: The logo_url of this AirportsAPIModelsAirport.
        :param longitude: The longitude of this AirportsAPIModelsAirport.
        :param scheduled_service: The scheduled_service of this AirportsAPIModelsAirport.
        :param website: The website of this AirportsAPIModelsAirport.
        :param wikipedia: The wikipedia of this AirportsAPIModelsAirport.
        """
        self.openapi_types = {
            'country': AirportsAPIModelsLocationCountry,
            'frequency': List[AirportsAPIModelsFrequency],
            'region': AirportsAPIModelsLocationRegion,
            'runway': List[AirportsAPIModelsRunway],
            'airport_name': str,
            'airport_type': str,
            'elevation_ft': str,
            'gps_code': str,
            'iata_code': str,
            'latitude': str,
            'local_code': str,
            'location': str,
            'logo_url': str,
            'longitude': str,
            'scheduled_service': bool,
            'website': str,
            'wikipedia': str
        }

        self.attribute_map = {
            'country': 'Country',
            'frequency': 'Frequency',
            'region': 'Region',
            'runway': 'Runway',
            'airport_name': 'airport_name',
            'airport_type': 'airport_type',
            'elevation_ft': 'elevation_ft',
            'gps_code': 'gps_code',
            'iata_code': 'iata_code',
            'latitude': 'latitude',
            'local_code': 'local_code',
            'location': 'location',
            'logo_url': 'logo_url',
            'longitude': 'longitude',
            'scheduled_service': 'scheduled_service',
            'website': 'website',
            'wikipedia': 'wikipedia'
        }

        self._country = country
        self._frequency = frequency
        self._region = region
        self._runway = runway
        self._airport_name = airport_name
        self._airport_type = airport_type
        self._elevation_ft = elevation_ft
        self._gps_code = gps_code
        self._iata_code = iata_code
        self._latitude = latitude
        self._local_code = local_code
        self._location = location
        self._logo_url = logo_url
        self._longitude = longitude
        self._scheduled_service = scheduled_service
        self._website = website
        self._wikipedia = wikipedia

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AirportsAPIModelsAirport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AirportsAPI.Models.Airport of this AirportsAPIModelsAirport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this AirportsAPIModelsAirport.


        :return: The country of this AirportsAPIModelsAirport.
        :rtype: AirportsAPIModelsLocationCountry
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this AirportsAPIModelsAirport.


        :param country: The country of this AirportsAPIModelsAirport.
        :type country: AirportsAPIModelsLocationCountry
        """

        self._country = country

    @property
    def frequency(self):
        """Gets the frequency of this AirportsAPIModelsAirport.


        :return: The frequency of this AirportsAPIModelsAirport.
        :rtype: List[AirportsAPIModelsFrequency]
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this AirportsAPIModelsAirport.


        :param frequency: The frequency of this AirportsAPIModelsAirport.
        :type frequency: List[AirportsAPIModelsFrequency]
        """

        self._frequency = frequency

    @property
    def region(self):
        """Gets the region of this AirportsAPIModelsAirport.


        :return: The region of this AirportsAPIModelsAirport.
        :rtype: AirportsAPIModelsLocationRegion
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this AirportsAPIModelsAirport.


        :param region: The region of this AirportsAPIModelsAirport.
        :type region: AirportsAPIModelsLocationRegion
        """

        self._region = region

    @property
    def runway(self):
        """Gets the runway of this AirportsAPIModelsAirport.


        :return: The runway of this AirportsAPIModelsAirport.
        :rtype: List[AirportsAPIModelsRunway]
        """
        return self._runway

    @runway.setter
    def runway(self, runway):
        """Sets the runway of this AirportsAPIModelsAirport.


        :param runway: The runway of this AirportsAPIModelsAirport.
        :type runway: List[AirportsAPIModelsRunway]
        """

        self._runway = runway

    @property
    def airport_name(self):
        """Gets the airport_name of this AirportsAPIModelsAirport.


        :return: The airport_name of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._airport_name

    @airport_name.setter
    def airport_name(self, airport_name):
        """Sets the airport_name of this AirportsAPIModelsAirport.


        :param airport_name: The airport_name of this AirportsAPIModelsAirport.
        :type airport_name: str
        """

        self._airport_name = airport_name

    @property
    def airport_type(self):
        """Gets the airport_type of this AirportsAPIModelsAirport.


        :return: The airport_type of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._airport_type

    @airport_type.setter
    def airport_type(self, airport_type):
        """Sets the airport_type of this AirportsAPIModelsAirport.


        :param airport_type: The airport_type of this AirportsAPIModelsAirport.
        :type airport_type: str
        """

        self._airport_type = airport_type

    @property
    def elevation_ft(self):
        """Gets the elevation_ft of this AirportsAPIModelsAirport.


        :return: The elevation_ft of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._elevation_ft

    @elevation_ft.setter
    def elevation_ft(self, elevation_ft):
        """Sets the elevation_ft of this AirportsAPIModelsAirport.


        :param elevation_ft: The elevation_ft of this AirportsAPIModelsAirport.
        :type elevation_ft: str
        """

        self._elevation_ft = elevation_ft

    @property
    def gps_code(self):
        """Gets the gps_code of this AirportsAPIModelsAirport.


        :return: The gps_code of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._gps_code

    @gps_code.setter
    def gps_code(self, gps_code):
        """Sets the gps_code of this AirportsAPIModelsAirport.


        :param gps_code: The gps_code of this AirportsAPIModelsAirport.
        :type gps_code: str
        """

        self._gps_code = gps_code

    @property
    def iata_code(self):
        """Gets the iata_code of this AirportsAPIModelsAirport.


        :return: The iata_code of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._iata_code

    @iata_code.setter
    def iata_code(self, iata_code):
        """Sets the iata_code of this AirportsAPIModelsAirport.


        :param iata_code: The iata_code of this AirportsAPIModelsAirport.
        :type iata_code: str
        """

        self._iata_code = iata_code

    @property
    def latitude(self):
        """Gets the latitude of this AirportsAPIModelsAirport.


        :return: The latitude of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this AirportsAPIModelsAirport.


        :param latitude: The latitude of this AirportsAPIModelsAirport.
        :type latitude: str
        """

        self._latitude = latitude

    @property
    def local_code(self):
        """Gets the local_code of this AirportsAPIModelsAirport.


        :return: The local_code of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._local_code

    @local_code.setter
    def local_code(self, local_code):
        """Sets the local_code of this AirportsAPIModelsAirport.


        :param local_code: The local_code of this AirportsAPIModelsAirport.
        :type local_code: str
        """

        self._local_code = local_code

    @property
    def location(self):
        """Gets the location of this AirportsAPIModelsAirport.


        :return: The location of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this AirportsAPIModelsAirport.


        :param location: The location of this AirportsAPIModelsAirport.
        :type location: str
        """

        self._location = location

    @property
    def logo_url(self):
        """Gets the logo_url of this AirportsAPIModelsAirport.


        :return: The logo_url of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._logo_url

    @logo_url.setter
    def logo_url(self, logo_url):
        """Sets the logo_url of this AirportsAPIModelsAirport.


        :param logo_url: The logo_url of this AirportsAPIModelsAirport.
        :type logo_url: str
        """

        self._logo_url = logo_url

    @property
    def longitude(self):
        """Gets the longitude of this AirportsAPIModelsAirport.


        :return: The longitude of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this AirportsAPIModelsAirport.


        :param longitude: The longitude of this AirportsAPIModelsAirport.
        :type longitude: str
        """

        self._longitude = longitude

    @property
    def scheduled_service(self):
        """Gets the scheduled_service of this AirportsAPIModelsAirport.


        :return: The scheduled_service of this AirportsAPIModelsAirport.
        :rtype: bool
        """
        return self._scheduled_service

    @scheduled_service.setter
    def scheduled_service(self, scheduled_service):
        """Sets the scheduled_service of this AirportsAPIModelsAirport.


        :param scheduled_service: The scheduled_service of this AirportsAPIModelsAirport.
        :type scheduled_service: bool
        """

        self._scheduled_service = scheduled_service

    @property
    def website(self):
        """Gets the website of this AirportsAPIModelsAirport.


        :return: The website of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this AirportsAPIModelsAirport.


        :param website: The website of this AirportsAPIModelsAirport.
        :type website: str
        """

        self._website = website

    @property
    def wikipedia(self):
        """Gets the wikipedia of this AirportsAPIModelsAirport.


        :return: The wikipedia of this AirportsAPIModelsAirport.
        :rtype: str
        """
        return self._wikipedia

    @wikipedia.setter
    def wikipedia(self, wikipedia):
        """Sets the wikipedia of this AirportsAPIModelsAirport.


        :param wikipedia: The wikipedia of this AirportsAPIModelsAirport.
        :type wikipedia: str
        """

        self._wikipedia = wikipedia
