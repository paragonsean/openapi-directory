# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AirportsAPIModelsCountry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continent: str=None, country_code: str=None, flag_url: str=None, name: str=None):
        """AirportsAPIModelsCountry - a model defined in OpenAPI

        :param continent: The continent of this AirportsAPIModelsCountry.
        :param country_code: The country_code of this AirportsAPIModelsCountry.
        :param flag_url: The flag_url of this AirportsAPIModelsCountry.
        :param name: The name of this AirportsAPIModelsCountry.
        """
        self.openapi_types = {
            'continent': str,
            'country_code': str,
            'flag_url': str,
            'name': str
        }

        self.attribute_map = {
            'continent': 'continent',
            'country_code': 'country_code',
            'flag_url': 'flag_url',
            'name': 'name'
        }

        self._continent = continent
        self._country_code = country_code
        self._flag_url = flag_url
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AirportsAPIModelsCountry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AirportsAPI.Models.Country of this AirportsAPIModelsCountry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continent(self):
        """Gets the continent of this AirportsAPIModelsCountry.


        :return: The continent of this AirportsAPIModelsCountry.
        :rtype: str
        """
        return self._continent

    @continent.setter
    def continent(self, continent):
        """Sets the continent of this AirportsAPIModelsCountry.


        :param continent: The continent of this AirportsAPIModelsCountry.
        :type continent: str
        """

        self._continent = continent

    @property
    def country_code(self):
        """Gets the country_code of this AirportsAPIModelsCountry.


        :return: The country_code of this AirportsAPIModelsCountry.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this AirportsAPIModelsCountry.


        :param country_code: The country_code of this AirportsAPIModelsCountry.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def flag_url(self):
        """Gets the flag_url of this AirportsAPIModelsCountry.


        :return: The flag_url of this AirportsAPIModelsCountry.
        :rtype: str
        """
        return self._flag_url

    @flag_url.setter
    def flag_url(self, flag_url):
        """Sets the flag_url of this AirportsAPIModelsCountry.


        :param flag_url: The flag_url of this AirportsAPIModelsCountry.
        :type flag_url: str
        """

        self._flag_url = flag_url

    @property
    def name(self):
        """Gets the name of this AirportsAPIModelsCountry.


        :return: The name of this AirportsAPIModelsCountry.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AirportsAPIModelsCountry.


        :param name: The name of this AirportsAPIModelsCountry.
        :type name: str
        """

        self._name = name
