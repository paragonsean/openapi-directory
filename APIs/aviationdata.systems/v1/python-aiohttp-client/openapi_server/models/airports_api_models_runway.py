# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AirportsAPIModelsRunway(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, closed: bool=None, h_e_latitude: str=None, h_e_longitude: str=None, he_displaced_threshold_ft: str=None, he_elevation_ft: str=None, he_heading_deg: str=None, le_displaced_threshold_ft: str=None, le_elevation_ft: str=None, le_heading_deg: str=None, le_latitude: str=None, le_longitude: str=None, length_ft: str=None, lighted: bool=None, surface_type: str=None, width_ft: str=None):
        """AirportsAPIModelsRunway - a model defined in OpenAPI

        :param closed: The closed of this AirportsAPIModelsRunway.
        :param h_e_latitude: The h_e_latitude of this AirportsAPIModelsRunway.
        :param h_e_longitude: The h_e_longitude of this AirportsAPIModelsRunway.
        :param he_displaced_threshold_ft: The he_displaced_threshold_ft of this AirportsAPIModelsRunway.
        :param he_elevation_ft: The he_elevation_ft of this AirportsAPIModelsRunway.
        :param he_heading_deg: The he_heading_deg of this AirportsAPIModelsRunway.
        :param le_displaced_threshold_ft: The le_displaced_threshold_ft of this AirportsAPIModelsRunway.
        :param le_elevation_ft: The le_elevation_ft of this AirportsAPIModelsRunway.
        :param le_heading_deg: The le_heading_deg of this AirportsAPIModelsRunway.
        :param le_latitude: The le_latitude of this AirportsAPIModelsRunway.
        :param le_longitude: The le_longitude of this AirportsAPIModelsRunway.
        :param length_ft: The length_ft of this AirportsAPIModelsRunway.
        :param lighted: The lighted of this AirportsAPIModelsRunway.
        :param surface_type: The surface_type of this AirportsAPIModelsRunway.
        :param width_ft: The width_ft of this AirportsAPIModelsRunway.
        """
        self.openapi_types = {
            'closed': bool,
            'h_e_latitude': str,
            'h_e_longitude': str,
            'he_displaced_threshold_ft': str,
            'he_elevation_ft': str,
            'he_heading_deg': str,
            'le_displaced_threshold_ft': str,
            'le_elevation_ft': str,
            'le_heading_deg': str,
            'le_latitude': str,
            'le_longitude': str,
            'length_ft': str,
            'lighted': bool,
            'surface_type': str,
            'width_ft': str
        }

        self.attribute_map = {
            'closed': 'closed',
            'h_e_latitude': 'hE_latitude',
            'h_e_longitude': 'hE_longitude',
            'he_displaced_threshold_ft': 'he_displaced_threshold_ft',
            'he_elevation_ft': 'he_elevation_ft',
            'he_heading_deg': 'he_heading_deg',
            'le_displaced_threshold_ft': 'le_displaced_threshold_ft',
            'le_elevation_ft': 'le_elevation_ft',
            'le_heading_deg': 'le_heading_deg',
            'le_latitude': 'le_latitude',
            'le_longitude': 'le_longitude',
            'length_ft': 'length_ft',
            'lighted': 'lighted',
            'surface_type': 'surface_type',
            'width_ft': 'width_ft'
        }

        self._closed = closed
        self._h_e_latitude = h_e_latitude
        self._h_e_longitude = h_e_longitude
        self._he_displaced_threshold_ft = he_displaced_threshold_ft
        self._he_elevation_ft = he_elevation_ft
        self._he_heading_deg = he_heading_deg
        self._le_displaced_threshold_ft = le_displaced_threshold_ft
        self._le_elevation_ft = le_elevation_ft
        self._le_heading_deg = le_heading_deg
        self._le_latitude = le_latitude
        self._le_longitude = le_longitude
        self._length_ft = length_ft
        self._lighted = lighted
        self._surface_type = surface_type
        self._width_ft = width_ft

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AirportsAPIModelsRunway':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AirportsAPI.Models.Runway of this AirportsAPIModelsRunway.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def closed(self):
        """Gets the closed of this AirportsAPIModelsRunway.


        :return: The closed of this AirportsAPIModelsRunway.
        :rtype: bool
        """
        return self._closed

    @closed.setter
    def closed(self, closed):
        """Sets the closed of this AirportsAPIModelsRunway.


        :param closed: The closed of this AirportsAPIModelsRunway.
        :type closed: bool
        """

        self._closed = closed

    @property
    def h_e_latitude(self):
        """Gets the h_e_latitude of this AirportsAPIModelsRunway.


        :return: The h_e_latitude of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._h_e_latitude

    @h_e_latitude.setter
    def h_e_latitude(self, h_e_latitude):
        """Sets the h_e_latitude of this AirportsAPIModelsRunway.


        :param h_e_latitude: The h_e_latitude of this AirportsAPIModelsRunway.
        :type h_e_latitude: str
        """

        self._h_e_latitude = h_e_latitude

    @property
    def h_e_longitude(self):
        """Gets the h_e_longitude of this AirportsAPIModelsRunway.


        :return: The h_e_longitude of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._h_e_longitude

    @h_e_longitude.setter
    def h_e_longitude(self, h_e_longitude):
        """Sets the h_e_longitude of this AirportsAPIModelsRunway.


        :param h_e_longitude: The h_e_longitude of this AirportsAPIModelsRunway.
        :type h_e_longitude: str
        """

        self._h_e_longitude = h_e_longitude

    @property
    def he_displaced_threshold_ft(self):
        """Gets the he_displaced_threshold_ft of this AirportsAPIModelsRunway.


        :return: The he_displaced_threshold_ft of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._he_displaced_threshold_ft

    @he_displaced_threshold_ft.setter
    def he_displaced_threshold_ft(self, he_displaced_threshold_ft):
        """Sets the he_displaced_threshold_ft of this AirportsAPIModelsRunway.


        :param he_displaced_threshold_ft: The he_displaced_threshold_ft of this AirportsAPIModelsRunway.
        :type he_displaced_threshold_ft: str
        """

        self._he_displaced_threshold_ft = he_displaced_threshold_ft

    @property
    def he_elevation_ft(self):
        """Gets the he_elevation_ft of this AirportsAPIModelsRunway.


        :return: The he_elevation_ft of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._he_elevation_ft

    @he_elevation_ft.setter
    def he_elevation_ft(self, he_elevation_ft):
        """Sets the he_elevation_ft of this AirportsAPIModelsRunway.


        :param he_elevation_ft: The he_elevation_ft of this AirportsAPIModelsRunway.
        :type he_elevation_ft: str
        """

        self._he_elevation_ft = he_elevation_ft

    @property
    def he_heading_deg(self):
        """Gets the he_heading_deg of this AirportsAPIModelsRunway.


        :return: The he_heading_deg of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._he_heading_deg

    @he_heading_deg.setter
    def he_heading_deg(self, he_heading_deg):
        """Sets the he_heading_deg of this AirportsAPIModelsRunway.


        :param he_heading_deg: The he_heading_deg of this AirportsAPIModelsRunway.
        :type he_heading_deg: str
        """

        self._he_heading_deg = he_heading_deg

    @property
    def le_displaced_threshold_ft(self):
        """Gets the le_displaced_threshold_ft of this AirportsAPIModelsRunway.


        :return: The le_displaced_threshold_ft of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._le_displaced_threshold_ft

    @le_displaced_threshold_ft.setter
    def le_displaced_threshold_ft(self, le_displaced_threshold_ft):
        """Sets the le_displaced_threshold_ft of this AirportsAPIModelsRunway.


        :param le_displaced_threshold_ft: The le_displaced_threshold_ft of this AirportsAPIModelsRunway.
        :type le_displaced_threshold_ft: str
        """

        self._le_displaced_threshold_ft = le_displaced_threshold_ft

    @property
    def le_elevation_ft(self):
        """Gets the le_elevation_ft of this AirportsAPIModelsRunway.


        :return: The le_elevation_ft of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._le_elevation_ft

    @le_elevation_ft.setter
    def le_elevation_ft(self, le_elevation_ft):
        """Sets the le_elevation_ft of this AirportsAPIModelsRunway.


        :param le_elevation_ft: The le_elevation_ft of this AirportsAPIModelsRunway.
        :type le_elevation_ft: str
        """

        self._le_elevation_ft = le_elevation_ft

    @property
    def le_heading_deg(self):
        """Gets the le_heading_deg of this AirportsAPIModelsRunway.


        :return: The le_heading_deg of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._le_heading_deg

    @le_heading_deg.setter
    def le_heading_deg(self, le_heading_deg):
        """Sets the le_heading_deg of this AirportsAPIModelsRunway.


        :param le_heading_deg: The le_heading_deg of this AirportsAPIModelsRunway.
        :type le_heading_deg: str
        """

        self._le_heading_deg = le_heading_deg

    @property
    def le_latitude(self):
        """Gets the le_latitude of this AirportsAPIModelsRunway.


        :return: The le_latitude of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._le_latitude

    @le_latitude.setter
    def le_latitude(self, le_latitude):
        """Sets the le_latitude of this AirportsAPIModelsRunway.


        :param le_latitude: The le_latitude of this AirportsAPIModelsRunway.
        :type le_latitude: str
        """

        self._le_latitude = le_latitude

    @property
    def le_longitude(self):
        """Gets the le_longitude of this AirportsAPIModelsRunway.


        :return: The le_longitude of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._le_longitude

    @le_longitude.setter
    def le_longitude(self, le_longitude):
        """Sets the le_longitude of this AirportsAPIModelsRunway.


        :param le_longitude: The le_longitude of this AirportsAPIModelsRunway.
        :type le_longitude: str
        """

        self._le_longitude = le_longitude

    @property
    def length_ft(self):
        """Gets the length_ft of this AirportsAPIModelsRunway.


        :return: The length_ft of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._length_ft

    @length_ft.setter
    def length_ft(self, length_ft):
        """Sets the length_ft of this AirportsAPIModelsRunway.


        :param length_ft: The length_ft of this AirportsAPIModelsRunway.
        :type length_ft: str
        """

        self._length_ft = length_ft

    @property
    def lighted(self):
        """Gets the lighted of this AirportsAPIModelsRunway.


        :return: The lighted of this AirportsAPIModelsRunway.
        :rtype: bool
        """
        return self._lighted

    @lighted.setter
    def lighted(self, lighted):
        """Sets the lighted of this AirportsAPIModelsRunway.


        :param lighted: The lighted of this AirportsAPIModelsRunway.
        :type lighted: bool
        """

        self._lighted = lighted

    @property
    def surface_type(self):
        """Gets the surface_type of this AirportsAPIModelsRunway.


        :return: The surface_type of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._surface_type

    @surface_type.setter
    def surface_type(self, surface_type):
        """Sets the surface_type of this AirportsAPIModelsRunway.


        :param surface_type: The surface_type of this AirportsAPIModelsRunway.
        :type surface_type: str
        """

        self._surface_type = surface_type

    @property
    def width_ft(self):
        """Gets the width_ft of this AirportsAPIModelsRunway.


        :return: The width_ft of this AirportsAPIModelsRunway.
        :rtype: str
        """
        return self._width_ft

    @width_ft.setter
    def width_ft(self, width_ft):
        """Sets the width_ft of this AirportsAPIModelsRunway.


        :param width_ft: The width_ft of this AirportsAPIModelsRunway.
        :type width_ft: str
        """

        self._width_ft = width_ft
