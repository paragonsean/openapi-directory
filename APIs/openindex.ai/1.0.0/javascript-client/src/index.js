/**
 * OpenIndex Retrieval Plugin API
 * A retrieval API for querying and filtering documents based on natural language queries and metadata
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DocumentChunkMetadata from './model/DocumentChunkMetadata';
import DocumentChunkWithScore from './model/DocumentChunkWithScore';
import DocumentMetadataFilter from './model/DocumentMetadataFilter';
import HTTPValidationError from './model/HTTPValidationError';
import LocationInner from './model/LocationInner';
import Query from './model/Query';
import QueryRequest from './model/QueryRequest';
import QueryResponse from './model/QueryResponse';
import QueryResult from './model/QueryResult';
import Source from './model/Source';
import ValidationError from './model/ValidationError';
import DefaultApi from './api/DefaultApi';


/**
* A retrieval API for querying and filtering documents based on natural language queries and metadata.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OpenIndexRetrievalPluginApi = require('index'); // See note below*.
* var xxxSvc = new OpenIndexRetrievalPluginApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OpenIndexRetrievalPluginApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OpenIndexRetrievalPluginApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OpenIndexRetrievalPluginApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DocumentChunkMetadata model constructor.
     * @property {module:model/DocumentChunkMetadata}
     */
    DocumentChunkMetadata,

    /**
     * The DocumentChunkWithScore model constructor.
     * @property {module:model/DocumentChunkWithScore}
     */
    DocumentChunkWithScore,

    /**
     * The DocumentMetadataFilter model constructor.
     * @property {module:model/DocumentMetadataFilter}
     */
    DocumentMetadataFilter,

    /**
     * The HTTPValidationError model constructor.
     * @property {module:model/HTTPValidationError}
     */
    HTTPValidationError,

    /**
     * The LocationInner model constructor.
     * @property {module:model/LocationInner}
     */
    LocationInner,

    /**
     * The Query model constructor.
     * @property {module:model/Query}
     */
    Query,

    /**
     * The QueryRequest model constructor.
     * @property {module:model/QueryRequest}
     */
    QueryRequest,

    /**
     * The QueryResponse model constructor.
     * @property {module:model/QueryResponse}
     */
    QueryResponse,

    /**
     * The QueryResult model constructor.
     * @property {module:model/QueryResult}
     */
    QueryResult,

    /**
     * The Source model constructor.
     * @property {module:model/Source}
     */
    Source,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
