/**
 * OpenIndex Retrieval Plugin API
 * A retrieval API for querying and filtering documents based on natural language queries and metadata
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISource::OAISource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISource::OAISource() {
    this->initializeModel();
}

OAISource::~OAISource() {}

void OAISource::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISource::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISource::fromJson(QString jsonString) {
    
    if ( jsonString.compare("email", Qt::CaseInsensitive) == 0) {
        m_value = eOAISource::EMAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("web", Qt::CaseInsensitive) == 0) {
        m_value = eOAISource::WEB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("file", Qt::CaseInsensitive) == 0) {
        m_value = eOAISource::FILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("chat", Qt::CaseInsensitive) == 0) {
        m_value = eOAISource::CHAT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISource::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISource::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISource::EMAIL:
            val = "email";
            break;
        case eOAISource::WEB:
            val = "web";
            break;
        case eOAISource::FILE:
            val = "file";
            break;
        case eOAISource::CHAT:
            val = "chat";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISource::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISource::eOAISource OAISource::getValue() const {
    return m_value;
}

void OAISource::setValue(const OAISource::eOAISource& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISource::isSet() const {
    
    return m_value_isSet;
}

bool OAISource::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
