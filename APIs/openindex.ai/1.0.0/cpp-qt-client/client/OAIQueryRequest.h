/**
 * OpenIndex Retrieval Plugin API
 * A retrieval API for querying and filtering documents based on natural language queries and metadata
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryRequest.h
 *
 * 
 */

#ifndef OAIQueryRequest_H
#define OAIQueryRequest_H

#include <QJsonObject>

#include "OAIQuery.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuery;

class OAIQueryRequest : public OAIObject {
public:
    OAIQueryRequest();
    OAIQueryRequest(QString json);
    ~OAIQueryRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QList<OAIQuery> getQueries() const;
    void setQueries(const QList<OAIQuery> &queries);
    bool is_queries_Set() const;
    bool is_queries_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QList<OAIQuery> m_queries;
    bool m_queries_isSet;
    bool m_queries_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryRequest)

#endif // OAIQueryRequest_H
