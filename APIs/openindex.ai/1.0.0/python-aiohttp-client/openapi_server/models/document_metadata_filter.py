# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source import Source
from openapi_server import util


class DocumentMetadataFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, collection_id: str=None, document_id: str=None, end_date: str=None, keywords: List[str]=None, language: str=None, source: Source=None, source_id: str=None, start_date: str=None, time_period: str=None, user_id: str=None):
        """DocumentMetadataFilter - a model defined in OpenAPI

        :param author: The author of this DocumentMetadataFilter.
        :param collection_id: The collection_id of this DocumentMetadataFilter.
        :param document_id: The document_id of this DocumentMetadataFilter.
        :param end_date: The end_date of this DocumentMetadataFilter.
        :param keywords: The keywords of this DocumentMetadataFilter.
        :param language: The language of this DocumentMetadataFilter.
        :param source: The source of this DocumentMetadataFilter.
        :param source_id: The source_id of this DocumentMetadataFilter.
        :param start_date: The start_date of this DocumentMetadataFilter.
        :param time_period: The time_period of this DocumentMetadataFilter.
        :param user_id: The user_id of this DocumentMetadataFilter.
        """
        self.openapi_types = {
            'author': str,
            'collection_id': str,
            'document_id': str,
            'end_date': str,
            'keywords': List[str],
            'language': str,
            'source': Source,
            'source_id': str,
            'start_date': str,
            'time_period': str,
            'user_id': str
        }

        self.attribute_map = {
            'author': 'author',
            'collection_id': 'collection_id',
            'document_id': 'document_id',
            'end_date': 'end_date',
            'keywords': 'keywords',
            'language': 'language',
            'source': 'source',
            'source_id': 'source_id',
            'start_date': 'start_date',
            'time_period': 'time_period',
            'user_id': 'user_id'
        }

        self._author = author
        self._collection_id = collection_id
        self._document_id = document_id
        self._end_date = end_date
        self._keywords = keywords
        self._language = language
        self._source = source
        self._source_id = source_id
        self._start_date = start_date
        self._time_period = time_period
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentMetadataFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentMetadataFilter of this DocumentMetadataFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this DocumentMetadataFilter.


        :return: The author of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this DocumentMetadataFilter.


        :param author: The author of this DocumentMetadataFilter.
        :type author: str
        """

        self._author = author

    @property
    def collection_id(self):
        """Gets the collection_id of this DocumentMetadataFilter.


        :return: The collection_id of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._collection_id

    @collection_id.setter
    def collection_id(self, collection_id):
        """Sets the collection_id of this DocumentMetadataFilter.


        :param collection_id: The collection_id of this DocumentMetadataFilter.
        :type collection_id: str
        """

        self._collection_id = collection_id

    @property
    def document_id(self):
        """Gets the document_id of this DocumentMetadataFilter.


        :return: The document_id of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this DocumentMetadataFilter.


        :param document_id: The document_id of this DocumentMetadataFilter.
        :type document_id: str
        """

        self._document_id = document_id

    @property
    def end_date(self):
        """Gets the end_date of this DocumentMetadataFilter.


        :return: The end_date of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this DocumentMetadataFilter.


        :param end_date: The end_date of this DocumentMetadataFilter.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def keywords(self):
        """Gets the keywords of this DocumentMetadataFilter.


        :return: The keywords of this DocumentMetadataFilter.
        :rtype: List[str]
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this DocumentMetadataFilter.


        :param keywords: The keywords of this DocumentMetadataFilter.
        :type keywords: List[str]
        """

        self._keywords = keywords

    @property
    def language(self):
        """Gets the language of this DocumentMetadataFilter.


        :return: The language of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this DocumentMetadataFilter.


        :param language: The language of this DocumentMetadataFilter.
        :type language: str
        """

        self._language = language

    @property
    def source(self):
        """Gets the source of this DocumentMetadataFilter.


        :return: The source of this DocumentMetadataFilter.
        :rtype: Source
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this DocumentMetadataFilter.


        :param source: The source of this DocumentMetadataFilter.
        :type source: Source
        """

        self._source = source

    @property
    def source_id(self):
        """Gets the source_id of this DocumentMetadataFilter.


        :return: The source_id of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this DocumentMetadataFilter.


        :param source_id: The source_id of this DocumentMetadataFilter.
        :type source_id: str
        """

        self._source_id = source_id

    @property
    def start_date(self):
        """Gets the start_date of this DocumentMetadataFilter.


        :return: The start_date of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this DocumentMetadataFilter.


        :param start_date: The start_date of this DocumentMetadataFilter.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def time_period(self):
        """Gets the time_period of this DocumentMetadataFilter.


        :return: The time_period of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period):
        """Sets the time_period of this DocumentMetadataFilter.


        :param time_period: The time_period of this DocumentMetadataFilter.
        :type time_period: str
        """

        self._time_period = time_period

    @property
    def user_id(self):
        """Gets the user_id of this DocumentMetadataFilter.


        :return: The user_id of this DocumentMetadataFilter.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this DocumentMetadataFilter.


        :param user_id: The user_id of this DocumentMetadataFilter.
        :type user_id: str
        """

        self._user_id = user_id
