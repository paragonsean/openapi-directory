openapi: 3.0.2
info:
  description: A retrieval API for querying and filtering documents based on natural
    language queries and metadata
  title: OpenIndex Retrieval Plugin API
  version: 1.0.0
  x-apisguru-categories:
  - machine_learning
  x-logo:
    url: https://retriever.openindex.ai/.well-known/logo.png
  x-origin:
  - format: openapi
    url: https://retriever.openindex.ai/.well-known/openapi.yaml
    version: "3.0"
  x-providerName: openindex.ai
servers:
- url: /sub
- url: https://retriever.openindex.ai
paths:
  /query:
    post:
      description: "Accepts search query objects array each with query and optional\
        \ filter. Break down complex questions into sub-questions. Refine results\
        \ by criteria, e.g. time / source, don't do this often. Split queries if ResponseTooLargeError\
        \ occurs."
      operationId: query_query_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Query
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    DocumentChunkMetadata:
      example:
        collection_id: collection_id
        keywords:
        - keywords
        - keywords
        updated_at: updated_at
        user_id: user_id
        author: author
        created_at: created_at
        language: language
        source: email
        source_id: source_id
        document_id: document_id
        time_period: time_period
        url: url
      properties:
        author:
          title: Author
          type: string
        collection_id:
          title: Collection Id
          type: string
        created_at:
          title: Created At
          type: string
        document_id:
          title: Document Id
          type: string
        keywords:
          items:
            type: string
          title: Keywords
          type: array
        language:
          title: Language
          type: string
        source:
          $ref: '#/components/schemas/Source'
        source_id:
          title: Source Id
          type: string
        time_period:
          title: Time Period
          type: string
        updated_at:
          title: Updated At
          type: string
        url:
          title: Url
          type: string
        user_id:
          title: User Id
          type: string
      title: DocumentChunkMetadata
      type: object
    DocumentChunkWithScore:
      example:
        score: 6.027456183070403
        metadata:
          collection_id: collection_id
          keywords:
          - keywords
          - keywords
          updated_at: updated_at
          user_id: user_id
          author: author
          created_at: created_at
          language: language
          source: email
          source_id: source_id
          document_id: document_id
          time_period: time_period
          url: url
        embedding:
        - 0.8008281904610115
        - 0.8008281904610115
        id: id
        text: text
      properties:
        embedding:
          items:
            type: number
          title: Embedding
          type: array
        id:
          title: Id
          type: string
        metadata:
          $ref: '#/components/schemas/DocumentChunkMetadata'
        score:
          title: Score
          type: number
        text:
          title: Text
          type: string
      required:
      - metadata
      - score
      - text
      title: DocumentChunkWithScore
      type: object
    DocumentMetadataFilter:
      example:
        collection_id: collection_id
        end_date: end_date
        keywords:
        - keywords
        - keywords
        user_id: user_id
        author: author
        language: language
        source: email
        source_id: source_id
        document_id: document_id
        time_period: time_period
        start_date: start_date
      properties:
        author:
          title: Author
          type: string
        collection_id:
          title: Collection Id
          type: string
        document_id:
          title: Document Id
          type: string
        end_date:
          title: End Date
          type: string
        keywords:
          items:
            type: string
          title: Keywords
          type: array
        language:
          title: Language
          type: string
        source:
          $ref: '#/components/schemas/Source'
        source_id:
          title: Source Id
          type: string
        start_date:
          title: Start Date
          type: string
        time_period:
          title: Time Period
          type: string
        user_id:
          title: User Id
          type: string
      title: DocumentMetadataFilter
      type: object
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - Location_inner
          - Location_inner
          type: type
        - msg: msg
          loc:
          - Location_inner
          - Location_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Query:
      example:
        filter:
          collection_id: collection_id
          end_date: end_date
          keywords:
          - keywords
          - keywords
          user_id: user_id
          author: author
          language: language
          source: email
          source_id: source_id
          document_id: document_id
          time_period: time_period
          start_date: start_date
        query: query
        top_k: 0
      properties:
        filter:
          $ref: '#/components/schemas/DocumentMetadataFilter'
        query:
          title: Query
          type: string
        top_k:
          default: 3
          title: Top K
          type: integer
      required:
      - query
      title: Query
      type: object
    QueryRequest:
      example:
        namespace: namespace
        queries:
        - filter:
            collection_id: collection_id
            end_date: end_date
            keywords:
            - keywords
            - keywords
            user_id: user_id
            author: author
            language: language
            source: email
            source_id: source_id
            document_id: document_id
            time_period: time_period
            start_date: start_date
          query: query
          top_k: 0
        - filter:
            collection_id: collection_id
            end_date: end_date
            keywords:
            - keywords
            - keywords
            user_id: user_id
            author: author
            language: language
            source: email
            source_id: source_id
            document_id: document_id
            time_period: time_period
            start_date: start_date
          query: query
          top_k: 0
      properties:
        namespace:
          title: Namespace
          type: string
        queries:
          items:
            $ref: '#/components/schemas/Query'
          title: Queries
          type: array
      required:
      - queries
      title: QueryRequest
      type: object
    QueryResponse:
      example:
        results:
        - query: query
          results:
          - score: 6.027456183070403
            metadata:
              collection_id: collection_id
              keywords:
              - keywords
              - keywords
              updated_at: updated_at
              user_id: user_id
              author: author
              created_at: created_at
              language: language
              source: email
              source_id: source_id
              document_id: document_id
              time_period: time_period
              url: url
            embedding:
            - 0.8008281904610115
            - 0.8008281904610115
            id: id
            text: text
          - score: 6.027456183070403
            metadata:
              collection_id: collection_id
              keywords:
              - keywords
              - keywords
              updated_at: updated_at
              user_id: user_id
              author: author
              created_at: created_at
              language: language
              source: email
              source_id: source_id
              document_id: document_id
              time_period: time_period
              url: url
            embedding:
            - 0.8008281904610115
            - 0.8008281904610115
            id: id
            text: text
        - query: query
          results:
          - score: 6.027456183070403
            metadata:
              collection_id: collection_id
              keywords:
              - keywords
              - keywords
              updated_at: updated_at
              user_id: user_id
              author: author
              created_at: created_at
              language: language
              source: email
              source_id: source_id
              document_id: document_id
              time_period: time_period
              url: url
            embedding:
            - 0.8008281904610115
            - 0.8008281904610115
            id: id
            text: text
          - score: 6.027456183070403
            metadata:
              collection_id: collection_id
              keywords:
              - keywords
              - keywords
              updated_at: updated_at
              user_id: user_id
              author: author
              created_at: created_at
              language: language
              source: email
              source_id: source_id
              document_id: document_id
              time_period: time_period
              url: url
            embedding:
            - 0.8008281904610115
            - 0.8008281904610115
            id: id
            text: text
      properties:
        results:
          items:
            $ref: '#/components/schemas/QueryResult'
          title: Results
          type: array
      required:
      - results
      title: QueryResponse
      type: object
    QueryResult:
      example:
        query: query
        results:
        - score: 6.027456183070403
          metadata:
            collection_id: collection_id
            keywords:
            - keywords
            - keywords
            updated_at: updated_at
            user_id: user_id
            author: author
            created_at: created_at
            language: language
            source: email
            source_id: source_id
            document_id: document_id
            time_period: time_period
            url: url
          embedding:
          - 0.8008281904610115
          - 0.8008281904610115
          id: id
          text: text
        - score: 6.027456183070403
          metadata:
            collection_id: collection_id
            keywords:
            - keywords
            - keywords
            updated_at: updated_at
            user_id: user_id
            author: author
            created_at: created_at
            language: language
            source: email
            source_id: source_id
            document_id: document_id
            time_period: time_period
            url: url
          embedding:
          - 0.8008281904610115
          - 0.8008281904610115
          id: id
          text: text
      properties:
        query:
          title: Query
          type: string
        results:
          items:
            $ref: '#/components/schemas/DocumentChunkWithScore'
          title: Results
          type: array
      required:
      - query
      - results
      title: QueryResult
      type: object
    Source:
      description: An enumeration.
      enum:
      - email
      - web
      - file
      - chat
      title: Source
      type: string
    ValidationError:
      example:
        msg: msg
        loc:
        - Location_inner
        - Location_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/Location_inner'
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    Location_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http

