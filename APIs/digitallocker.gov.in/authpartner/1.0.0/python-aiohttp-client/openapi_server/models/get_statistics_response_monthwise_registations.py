# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_statistics_response_monthwise_registations_details2 import GetStatisticsResponseMonthwiseRegistationsDetails2
from openapi_server import util


class GetStatisticsResponseMonthwiseRegistations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, details2: GetStatisticsResponseMonthwiseRegistationsDetails2=None, id: int=None, month: int=None, year: int=None):
        """GetStatisticsResponseMonthwiseRegistations - a model defined in OpenAPI

        :param count: The count of this GetStatisticsResponseMonthwiseRegistations.
        :param details2: The details2 of this GetStatisticsResponseMonthwiseRegistations.
        :param id: The id of this GetStatisticsResponseMonthwiseRegistations.
        :param month: The month of this GetStatisticsResponseMonthwiseRegistations.
        :param year: The year of this GetStatisticsResponseMonthwiseRegistations.
        """
        self.openapi_types = {
            'count': int,
            'details2': GetStatisticsResponseMonthwiseRegistationsDetails2,
            'id': int,
            'month': int,
            'year': int
        }

        self.attribute_map = {
            'count': 'count',
            'details2': 'details2',
            'id': 'id',
            'month': 'month',
            'year': 'year'
        }

        self._count = count
        self._details2 = details2
        self._id = id
        self._month = month
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetStatisticsResponseMonthwiseRegistations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetStatisticsResponse_monthwise_registations of this GetStatisticsResponseMonthwiseRegistations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this GetStatisticsResponseMonthwiseRegistations.

        Count of cumulative user registrations in the given month.

        :return: The count of this GetStatisticsResponseMonthwiseRegistations.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GetStatisticsResponseMonthwiseRegistations.

        Count of cumulative user registrations in the given month.

        :param count: The count of this GetStatisticsResponseMonthwiseRegistations.
        :type count: int
        """

        self._count = count

    @property
    def details2(self):
        """Gets the details2 of this GetStatisticsResponseMonthwiseRegistations.


        :return: The details2 of this GetStatisticsResponseMonthwiseRegistations.
        :rtype: GetStatisticsResponseMonthwiseRegistationsDetails2
        """
        return self._details2

    @details2.setter
    def details2(self, details2):
        """Sets the details2 of this GetStatisticsResponseMonthwiseRegistations.


        :param details2: The details2 of this GetStatisticsResponseMonthwiseRegistations.
        :type details2: GetStatisticsResponseMonthwiseRegistationsDetails2
        """

        self._details2 = details2

    @property
    def id(self):
        """Gets the id of this GetStatisticsResponseMonthwiseRegistations.

        Unique id of the list item.

        :return: The id of this GetStatisticsResponseMonthwiseRegistations.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetStatisticsResponseMonthwiseRegistations.

        Unique id of the list item.

        :param id: The id of this GetStatisticsResponseMonthwiseRegistations.
        :type id: int
        """

        self._id = id

    @property
    def month(self):
        """Gets the month of this GetStatisticsResponseMonthwiseRegistations.

        Month of the year in numeric format with January as 1

        :return: The month of this GetStatisticsResponseMonthwiseRegistations.
        :rtype: int
        """
        return self._month

    @month.setter
    def month(self, month):
        """Sets the month of this GetStatisticsResponseMonthwiseRegistations.

        Month of the year in numeric format with January as 1

        :param month: The month of this GetStatisticsResponseMonthwiseRegistations.
        :type month: int
        """

        self._month = month

    @property
    def year(self):
        """Gets the year of this GetStatisticsResponseMonthwiseRegistations.

        Year in YYYY format

        :return: The year of this GetStatisticsResponseMonthwiseRegistations.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this GetStatisticsResponseMonthwiseRegistations.

        Year in YYYY format

        :param year: The year of this GetStatisticsResponseMonthwiseRegistations.
        :type year: int
        """

        self._year = year
