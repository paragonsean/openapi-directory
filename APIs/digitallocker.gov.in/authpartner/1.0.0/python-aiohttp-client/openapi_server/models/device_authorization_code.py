# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceAuthorizationCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, dl_mobile: int=None, dl_username: str=None, response_type: str=None):
        """DeviceAuthorizationCode - a model defined in OpenAPI

        :param client_id: The client_id of this DeviceAuthorizationCode.
        :param dl_mobile: The dl_mobile of this DeviceAuthorizationCode.
        :param dl_username: The dl_username of this DeviceAuthorizationCode.
        :param response_type: The response_type of this DeviceAuthorizationCode.
        """
        self.openapi_types = {
            'client_id': str,
            'dl_mobile': int,
            'dl_username': str,
            'response_type': str
        }

        self.attribute_map = {
            'client_id': 'client_id',
            'dl_mobile': 'dl_mobile',
            'dl_username': 'dl_username',
            'response_type': 'response_type'
        }

        self._client_id = client_id
        self._dl_mobile = dl_mobile
        self._dl_username = dl_username
        self._response_type = response_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceAuthorizationCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceAuthorizationCode of this DeviceAuthorizationCode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this DeviceAuthorizationCode.


        :return: The client_id of this DeviceAuthorizationCode.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this DeviceAuthorizationCode.


        :param client_id: The client_id of this DeviceAuthorizationCode.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def dl_mobile(self):
        """Gets the dl_mobile of this DeviceAuthorizationCode.

        Mobile number associated with DigiLocker account of the   user. The client device accepts the mobile number on the device from user and sends it in this parameter. Either the username or the mobile number must be provided.

        :return: The dl_mobile of this DeviceAuthorizationCode.
        :rtype: int
        """
        return self._dl_mobile

    @dl_mobile.setter
    def dl_mobile(self, dl_mobile):
        """Sets the dl_mobile of this DeviceAuthorizationCode.

        Mobile number associated with DigiLocker account of the   user. The client device accepts the mobile number on the device from user and sends it in this parameter. Either the username or the mobile number must be provided.

        :param dl_mobile: The dl_mobile of this DeviceAuthorizationCode.
        :type dl_mobile: int
        """

        self._dl_mobile = dl_mobile

    @property
    def dl_username(self):
        """Gets the dl_username of this DeviceAuthorizationCode.

        DigiLocker username of the user. The client device accepts the username on the device from user and sends the username in this parameter. Either the username or the mobile number must be provided.   

        :return: The dl_username of this DeviceAuthorizationCode.
        :rtype: str
        """
        return self._dl_username

    @dl_username.setter
    def dl_username(self, dl_username):
        """Sets the dl_username of this DeviceAuthorizationCode.

        DigiLocker username of the user. The client device accepts the username on the device from user and sends the username in this parameter. Either the username or the mobile number must be provided.   

        :param dl_username: The dl_username of this DeviceAuthorizationCode.
        :type dl_username: str
        """

        self._dl_username = dl_username

    @property
    def response_type(self):
        """Gets the response_type of this DeviceAuthorizationCode.

        The parameter must be set to device_code.

        :return: The response_type of this DeviceAuthorizationCode.
        :rtype: str
        """
        return self._response_type

    @response_type.setter
    def response_type(self, response_type):
        """Sets the response_type of this DeviceAuthorizationCode.

        The parameter must be set to device_code.

        :param response_type: The response_type of this DeviceAuthorizationCode.
        :type response_type: str
        """

        self._response_type = response_type
