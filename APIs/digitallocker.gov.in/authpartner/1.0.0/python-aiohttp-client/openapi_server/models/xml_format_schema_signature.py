# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.xml_format_schema_signature_key_info import XMLFormatSchemaSignatureKeyInfo
from openapi_server import util


class XMLFormatSchemaSignature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_info: XMLFormatSchemaSignatureKeyInfo=None, signature_value: object=None, signed_info: object=None):
        """XMLFormatSchemaSignature - a model defined in OpenAPI

        :param key_info: The key_info of this XMLFormatSchemaSignature.
        :param signature_value: The signature_value of this XMLFormatSchemaSignature.
        :param signed_info: The signed_info of this XMLFormatSchemaSignature.
        """
        self.openapi_types = {
            'key_info': XMLFormatSchemaSignatureKeyInfo,
            'signature_value': object,
            'signed_info': object
        }

        self.attribute_map = {
            'key_info': 'KeyInfo',
            'signature_value': 'SignatureValue',
            'signed_info': 'SignedInfo'
        }

        self._key_info = key_info
        self._signature_value = signature_value
        self._signed_info = signed_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'XMLFormatSchemaSignature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The XMLFormatSchema_Signature of this XMLFormatSchemaSignature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_info(self):
        """Gets the key_info of this XMLFormatSchemaSignature.


        :return: The key_info of this XMLFormatSchemaSignature.
        :rtype: XMLFormatSchemaSignatureKeyInfo
        """
        return self._key_info

    @key_info.setter
    def key_info(self, key_info):
        """Sets the key_info of this XMLFormatSchemaSignature.


        :param key_info: The key_info of this XMLFormatSchemaSignature.
        :type key_info: XMLFormatSchemaSignatureKeyInfo
        """
        if key_info is None:
            raise ValueError("Invalid value for `key_info`, must not be `None`")

        self._key_info = key_info

    @property
    def signature_value(self):
        """Gets the signature_value of this XMLFormatSchemaSignature.


        :return: The signature_value of this XMLFormatSchemaSignature.
        :rtype: object
        """
        return self._signature_value

    @signature_value.setter
    def signature_value(self, signature_value):
        """Sets the signature_value of this XMLFormatSchemaSignature.


        :param signature_value: The signature_value of this XMLFormatSchemaSignature.
        :type signature_value: object
        """

        self._signature_value = signature_value

    @property
    def signed_info(self):
        """Gets the signed_info of this XMLFormatSchemaSignature.


        :return: The signed_info of this XMLFormatSchemaSignature.
        :rtype: object
        """
        return self._signed_info

    @signed_info.setter
    def signed_info(self, signed_info):
        """Sets the signed_info of this XMLFormatSchemaSignature.


        :param signed_info: The signed_info of this XMLFormatSchemaSignature.
        :type signed_info: object
        """

        self._signed_info = signed_info
