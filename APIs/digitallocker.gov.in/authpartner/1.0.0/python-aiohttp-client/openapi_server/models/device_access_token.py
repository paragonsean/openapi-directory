# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceAccessToken(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, device_code: str=None, dl_otp: str=None, grant_type: str=None):
        """DeviceAccessToken - a model defined in OpenAPI

        :param client_id: The client_id of this DeviceAccessToken.
        :param device_code: The device_code of this DeviceAccessToken.
        :param dl_otp: The dl_otp of this DeviceAccessToken.
        :param grant_type: The grant_type of this DeviceAccessToken.
        """
        self.openapi_types = {
            'client_id': str,
            'device_code': str,
            'dl_otp': str,
            'grant_type': str
        }

        self.attribute_map = {
            'client_id': 'client_id',
            'device_code': 'device_code',
            'dl_otp': 'dl_otp',
            'grant_type': 'grant_type'
        }

        self._client_id = client_id
        self._device_code = device_code
        self._dl_otp = dl_otp
        self._grant_type = grant_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceAccessToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceAccessToken of this DeviceAccessToken.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this DeviceAccessToken.

        Provide the client id that was created during the application registration process on Partners Portal.

        :return: The client_id of this DeviceAccessToken.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this DeviceAccessToken.

        Provide the client id that was created during the application registration process on Partners Portal.

        :param client_id: The client_id of this DeviceAccessToken.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def device_code(self):
        """Gets the device_code of this DeviceAccessToken.

        The device verification code. The device_code field from Get Device Code Response.

        :return: The device_code of this DeviceAccessToken.
        :rtype: str
        """
        return self._device_code

    @device_code.setter
    def device_code(self, device_code):
        """Sets the device_code of this DeviceAccessToken.

        The device verification code. The device_code field from Get Device Code Response.

        :param device_code: The device_code of this DeviceAccessToken.
        :type device_code: str
        """

        self._device_code = device_code

    @property
    def dl_otp(self):
        """Gets the dl_otp of this DeviceAccessToken.

        The OTP collected from the user

        :return: The dl_otp of this DeviceAccessToken.
        :rtype: str
        """
        return self._dl_otp

    @dl_otp.setter
    def dl_otp(self, dl_otp):
        """Sets the dl_otp of this DeviceAccessToken.

        The OTP collected from the user

        :param dl_otp: The dl_otp of this DeviceAccessToken.
        :type dl_otp: str
        """

        self._dl_otp = dl_otp

    @property
    def grant_type(self):
        """Gets the grant_type of this DeviceAccessToken.

        The grant type, which must be “urn:ietf:params:oauth:grant-type:device_code”.

        :return: The grant_type of this DeviceAccessToken.
        :rtype: str
        """
        return self._grant_type

    @grant_type.setter
    def grant_type(self, grant_type):
        """Sets the grant_type of this DeviceAccessToken.

        The grant type, which must be “urn:ietf:params:oauth:grant-type:device_code”.

        :param grant_type: The grant_type of this DeviceAccessToken.
        :type grant_type: str
        """

        self._grant_type = grant_type
