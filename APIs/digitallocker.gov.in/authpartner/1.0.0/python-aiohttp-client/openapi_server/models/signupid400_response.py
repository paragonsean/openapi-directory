# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response10 import Response10
from openapi_server.models.response11 import Response11
from openapi_server.models.response12 import Response12
from openapi_server import util


class SIGNUPId400Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: str=None, error_description: str=None):
        """SIGNUPId400Response - a model defined in OpenAPI

        :param error: The error of this SIGNUPId400Response.
        :param error_description: The error_description of this SIGNUPId400Response.
        """
        self.openapi_types = {
            'error': str,
            'error_description': str
        }

        self.attribute_map = {
            'error': 'error',
            'error_description': 'error_description'
        }

        self._error = error
        self._error_description = error_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SIGNUPId400Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SIGN_UP_id_400_response of this SIGNUPId400Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this SIGNUPId400Response.

        invalid_parameter

        :return: The error of this SIGNUPId400Response.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this SIGNUPId400Response.

        invalid_parameter

        :param error: The error of this SIGNUPId400Response.
        :type error: str
        """

        self._error = error

    @property
    def error_description(self):
        """Gets the error_description of this SIGNUPId400Response.

        One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  uid parameter is missing or invalid  Name parameter is missing or invalid  Dob parameter is missing or invalid  Gender parameter is missing or invalid  Mobile parameter is missing or invalid  Verification parameter is missing or invalid  Consent parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid

        :return: The error_description of this SIGNUPId400Response.
        :rtype: str
        """
        return self._error_description

    @error_description.setter
    def error_description(self, error_description):
        """Sets the error_description of this SIGNUPId400Response.

        One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  uid parameter is missing or invalid  Name parameter is missing or invalid  Dob parameter is missing or invalid  Gender parameter is missing or invalid  Mobile parameter is missing or invalid  Verification parameter is missing or invalid  Consent parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid

        :param error_description: The error_description of this SIGNUPId400Response.
        :type error_description: str
        """

        self._error_description = error_description
