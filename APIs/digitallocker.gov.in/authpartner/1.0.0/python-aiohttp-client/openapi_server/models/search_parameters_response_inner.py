# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchParametersResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, example: str=None, label: str=None, paramname: str=None, valuelist: object=None):
        """SearchParametersResponseInner - a model defined in OpenAPI

        :param example: The example of this SearchParametersResponseInner.
        :param label: The label of this SearchParametersResponseInner.
        :param paramname: The paramname of this SearchParametersResponseInner.
        :param valuelist: The valuelist of this SearchParametersResponseInner.
        """
        self.openapi_types = {
            'example': str,
            'label': str,
            'paramname': str,
            'valuelist': object
        }

        self.attribute_map = {
            'example': 'example',
            'label': 'label',
            'paramname': 'paramname',
            'valuelist': 'valuelist'
        }

        self._example = example
        self._label = label
        self._paramname = paramname
        self._valuelist = valuelist

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchParametersResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchParametersResponse_inner of this SearchParametersResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def example(self):
        """Gets the example of this SearchParametersResponseInner.


        :return: The example of this SearchParametersResponseInner.
        :rtype: str
        """
        return self._example

    @example.setter
    def example(self, example):
        """Sets the example of this SearchParametersResponseInner.


        :param example: The example of this SearchParametersResponseInner.
        :type example: str
        """
        if example is None:
            raise ValueError("Invalid value for `example`, must not be `None`")
        if example is not None and len(example) < 1:
            raise ValueError("Invalid value for `example`, length must be greater than or equal to `1`")

        self._example = example

    @property
    def label(self):
        """Gets the label of this SearchParametersResponseInner.


        :return: The label of this SearchParametersResponseInner.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this SearchParametersResponseInner.


        :param label: The label of this SearchParametersResponseInner.
        :type label: str
        """
        if label is None:
            raise ValueError("Invalid value for `label`, must not be `None`")
        if label is not None and len(label) < 1:
            raise ValueError("Invalid value for `label`, length must be greater than or equal to `1`")

        self._label = label

    @property
    def paramname(self):
        """Gets the paramname of this SearchParametersResponseInner.


        :return: The paramname of this SearchParametersResponseInner.
        :rtype: str
        """
        return self._paramname

    @paramname.setter
    def paramname(self, paramname):
        """Sets the paramname of this SearchParametersResponseInner.


        :param paramname: The paramname of this SearchParametersResponseInner.
        :type paramname: str
        """
        if paramname is None:
            raise ValueError("Invalid value for `paramname`, must not be `None`")
        if paramname is not None and len(paramname) < 1:
            raise ValueError("Invalid value for `paramname`, length must be greater than or equal to `1`")

        self._paramname = paramname

    @property
    def valuelist(self):
        """Gets the valuelist of this SearchParametersResponseInner.


        :return: The valuelist of this SearchParametersResponseInner.
        :rtype: object
        """
        return self._valuelist

    @valuelist.setter
    def valuelist(self, valuelist):
        """Sets the valuelist of this SearchParametersResponseInner.


        :param valuelist: The valuelist of this SearchParametersResponseInner.
        :type valuelist: object
        """

        self._valuelist = valuelist
