# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.eaadhar_xaml_schema_kyc_res import EaadharXamlSchemaKycRes
from openapi_server import util


class EaadharXamlSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kyc_res: EaadharXamlSchemaKycRes=None):
        """EaadharXamlSchema - a model defined in OpenAPI

        :param kyc_res: The kyc_res of this EaadharXamlSchema.
        """
        self.openapi_types = {
            'kyc_res': EaadharXamlSchemaKycRes
        }

        self.attribute_map = {
            'kyc_res': 'KycRes'
        }

        self._kyc_res = kyc_res

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EaadharXamlSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EaadharXamlSchema of this EaadharXamlSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kyc_res(self):
        """Gets the kyc_res of this EaadharXamlSchema.


        :return: The kyc_res of this EaadharXamlSchema.
        :rtype: EaadharXamlSchemaKycRes
        """
        return self._kyc_res

    @kyc_res.setter
    def kyc_res(self, kyc_res):
        """Sets the kyc_res of this EaadharXamlSchema.


        :param kyc_res: The kyc_res of this EaadharXamlSchema.
        :type kyc_res: EaadharXamlSchemaKycRes
        """
        if kyc_res is None:
            raise ValueError("Invalid value for `kyc_res`, must not be `None`")

        self._kyc_res = kyc_res
