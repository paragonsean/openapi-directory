/*
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DocTypeResponse;
import java.io.File;
import org.openapitools.client.model.GetDeviceCodeId401Response;
import org.openapitools.client.model.GetListOfDocumentsProvidedByAnIssuerId400Response;
import org.openapitools.client.model.GetListOfIssuersId400Response;
import org.openapitools.client.model.GetSearchParametersForADocumentId400Response;
import org.openapitools.client.model.GetStatisticsId400Response;
import org.openapitools.client.model.GetStatisticsResponse;
import org.openapitools.client.model.IssuerResponse;
import org.openapitools.client.model.PushURIToAccountId400Response;
import org.openapitools.client.model.PushURIToAccountId401Response;
import org.openapitools.client.model.PushURIToAccountId404Response;
import org.openapitools.client.model.PushURIToAccountId500Response;
import org.openapitools.client.model.SearchParametersResponseInner;
import java.util.Set;
import org.openapitools.client.model.VerifyAccountId400Response;
import org.openapitools.client.model.VerifyAccountId500Response;
import org.openapitools.client.model.VerifyAccountResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DigiLockerMetaApisApi
 */
@Disabled
public class DigiLockerMetaApisApiTest {

    private final DigiLockerMetaApisApi api = new DigiLockerMetaApisApi();

    /**
     * Get List of Documents Provided by an Issuer
     *
     * Returns a list of documents/certificates issued by an issuer organization registered with DigiLocker.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListOfDocumentsProvidedByAnIssuerIdTest() throws ApiException {
        String clientid = null;
        File hmac = null;
        String orgid = null;
        String ts = null;
        DocTypeResponse response = api.getListOfDocumentsProvidedByAnIssuerId(clientid, hmac, orgid, ts);
        // TODO: test validations
    }

    /**
     * Get List of Issuers
     *
     * Returns the list of issuers registered with DigiLocker.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListOfIssuersIdTest() throws ApiException {
        String clientid = null;
        File hmac = null;
        String ts = null;
        IssuerResponse response = api.getListOfIssuersId(clientid, hmac, ts);
        // TODO: test validations
    }

    /**
     * Get Search Parameters for a Document
     *
     * Returns a list of parameters required to search a document/certificate of an issuer organization registered with DigiLocker. These parameters are used to pull a document from issuer’s repository using Pull Document API mentioned in subsequent section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchParametersForADocumentIdTest() throws ApiException {
        String clientid = null;
        String doctype = null;
        File hmac = null;
        String orgid = null;
        String ts = null;
        Set<SearchParametersResponseInner> response = api.getSearchParametersForADocumentId(clientid, doctype, hmac, orgid, ts);
        // TODO: test validations
    }

    /**
     * Get Statistics
     *
     * Returns DigiLocker statistics such as the count of users, authentic documents, issuers and requesters as on a specific date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatisticsIdTest() throws ApiException {
        String clientid = null;
        File hmac = null;
        String ts = null;
        GetStatisticsResponse response = api.getStatisticsId(clientid, hmac, ts);
        // TODO: test validations
    }

    /**
     * Push URI to Account
     *
     * The API can use to push or delete a single URI into Digital Locker using DigiLocker Id acquired using Get User Details API. This API can be used to push the certificate details to Digital Locker as and when a certificate is generated in the issuer system. The issuing departments must register on DigiLocker as a registered Issuer and implement the requisite Issuer APIs as mentioned in Digital Locker Issuer API Specification document prior to pushing certificates using this API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pushURIToAccountIdTest() throws ApiException {
        String action = null;
        String clientid = null;
        Integer digilockerid = null;
        String docid = null;
        File hmac = null;
        String issuedate = null;
        String ts = null;
        String uri = null;
        Integer validfrom = null;
        String validto = null;
        Object response = api.pushURIToAccountId(action, clientid, digilockerid, docid, hmac, issuedate, ts, uri, validfrom, validto);
        // TODO: test validations
    }

    /**
     * Verify Account
     *
     * This API can be used to verify whether a mobile number or Aadhaar number is already registered with DigiLocker.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyAccountIdTest() throws ApiException {
        String clientid = null;
        File hmac = null;
        Integer mobile = null;
        String ts = null;
        Integer uid = null;
        VerifyAccountResponse response = api.verifyAccountId(clientid, hmac, mobile, ts, uid);
        // TODO: test validations
    }

}
