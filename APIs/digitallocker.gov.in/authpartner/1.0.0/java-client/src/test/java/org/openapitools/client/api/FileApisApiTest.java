/*
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EaadharXamlSchema;
import java.io.File;
import org.openapitools.client.model.FileUpload;
import org.openapitools.client.model.FileUploadResponse;
import org.openapitools.client.model.GetEAadhaarDataInXMLFormatId401Response;
import org.openapitools.client.model.GetEAadhaarDataInXMLFormatId404Response;
import org.openapitools.client.model.GetFileFromURIId400Response;
import org.openapitools.client.model.GetFileFromURIId404Response;
import org.openapitools.client.model.GetFileFromURIId500Response;
import org.openapitools.client.model.GetFileFromURIId503Response;
import org.openapitools.client.model.GetListOfIssuedDocumentsId200Response;
import org.openapitools.client.model.GetListOfIssuedDocumentsVersion1Id500Response;
import org.openapitools.client.model.GetListOfSelfUploadedDocuments404Response;
import org.openapitools.client.model.GetListOfSelfUploadedDocuments500Response;
import org.openapitools.client.model.PullDocumentId400Response;
import org.openapitools.client.model.PullDocumentId404Response;
import org.openapitools.client.model.PullDocumentId500Response;
import org.openapitools.client.model.PushURIToAccountId500Response;
import org.openapitools.client.model.Sample1;
import org.openapitools.client.model.Sample2;
import org.openapitools.client.model.Sample3;
import org.openapitools.client.model.Sample4;
import org.openapitools.client.model.UploadFileToLockerId400Response;
import org.openapitools.client.model.UploadFileToLockerId401Response;
import org.openapitools.client.model.XMLFormatSchema;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FileApisApi
 */
@Disabled
public class FileApisApiTest {

    private final FileApisApi api = new FileApisApi();

    /**
     * Get Certificate Data in XML Format from URI
     *
     * Returns the certificate data in machine readable XML format for a URI. This API can be used to only for issued documents. The XML data may not be available for all documents. If the XML data is available for a particular document, the mime parameter in Get List of Issued Documents API will contain application/xml. Please refer to Digital Locker XML Certificate Formats for more details of XML formats of various documents.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCertificateDataInXMLFormatFromURIIdTest() throws ApiException {
        String uri = null;
        XMLFormatSchema response = api.getCertificateDataInXMLFormatFromURIId(uri);
        // TODO: test validations
    }

    /**
     * Get e-Aadhaar Data in XML Format
     *
     * Returns e-Aadhaar data in XML format for the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEAadhaarDataInXMLFormatIdTest() throws ApiException {
        EaadharXamlSchema response = api.getEAadhaarDataInXMLFormatId();
        // TODO: test validations
    }

    /**
     * Get File from URI
     *
     * Returns a file from URI. This API can be used to fetch both issued document and uploaded document.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFileFromURIIdTest() throws ApiException {
        String uri = null;
        String response = api.getFileFromURIId(uri);
        // TODO: test validations
    }

    /**
     * Issued Documents
     *
     * Returns the list of meta-data about issued documents in user’s DigiLocker.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListOfIssuedDocumentsIdTest() throws ApiException {
        GetListOfIssuedDocumentsId200Response response = api.getListOfIssuedDocumentsId();
        // TODO: test validations
    }

    /**
     * Issued Documents
     *
     * Returns the list of meta-data about issued documents in user’s DigiLocker.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListOfIssuedDocumentsVersion1IdTest() throws ApiException {
        Sample2 response = api.getListOfIssuedDocumentsVersion1Id();
        // TODO: test validations
    }

    /**
     * Get List of Self Uploaded Documents
     *
     * Returns the list of meta-data about documents or folders in user’s DigiLocker in a specific location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListOfSelfUploadedDocumentsTest() throws ApiException {
        Sample1 response = api.getListOfSelfUploadedDocuments();
        // TODO: test validations
    }

    /**
     * Get List of Self Uploaded Documents
     *
     * Returns the list of meta-data about documents or folders in user’s DigiLocker in a specific location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListOfSelfUploadedDocumentsIdTest() throws ApiException {
        String id = null;
        Sample3 response = api.getListOfSelfUploadedDocumentsId(id);
        // TODO: test validations
    }

    /**
     * Pull Document
     *
     * This API allows a client application to search a document/certificate from issuer’s repository using the parameters provided by a user. The searched document is saved in user’s issued document section of DigiLocker if the search is successful.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pullDocumentIdTest() throws ApiException {
        String chasisNo = null;
        String consent = null;
        String doctype = null;
        String orgid = null;
        String regNo = null;
        Sample4 response = api.pullDocumentId(chasisNo, consent, doctype, orgid, regNo);
        // TODO: test validations
    }

    /**
     * Upload file to locker
     *
     * This API can be used to save/upload a file to uploaded documents in DigiLocker. The allowed file types are JPG, JPEG, PNG and PDF. The file size must not exceed 10MB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadFileToLockerIdTest() throws ApiException {
        String path = null;
        String hmac = null;
        FileUpload fileUpload = null;
        FileUploadResponse response = api.uploadFileToLockerId(path, hmac, fileUpload);
        // TODO: test validations
    }

}
