/*
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EaadharXamlSchemaKycResUidDataPoa
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:04:03.399628-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EaadharXamlSchemaKycResUidDataPoa {
  public static final String SERIALIZED_NAME_CO = "co";
  @SerializedName(SERIALIZED_NAME_CO)
  private String co;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_DIST = "dist";
  @SerializedName(SERIALIZED_NAME_DIST)
  private String dist;

  public static final String SERIALIZED_NAME_LM = "lm";
  @SerializedName(SERIALIZED_NAME_LM)
  private String lm;

  public static final String SERIALIZED_NAME_LOC = "loc";
  @SerializedName(SERIALIZED_NAME_LOC)
  private String loc;

  public static final String SERIALIZED_NAME_PC = "pc";
  @SerializedName(SERIALIZED_NAME_PC)
  private String pc;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_VTC = "vtc";
  @SerializedName(SERIALIZED_NAME_VTC)
  private String vtc;

  public EaadharXamlSchemaKycResUidDataPoa() {
  }

  public EaadharXamlSchemaKycResUidDataPoa co(String co) {
    this.co = co;
    return this;
  }

  /**
   * Get co
   * @return co
   */
  @javax.annotation.Nonnull
  public String getCo() {
    return co;
  }

  public void setCo(String co) {
    this.co = co;
  }


  public EaadharXamlSchemaKycResUidDataPoa country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nonnull
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public EaadharXamlSchemaKycResUidDataPoa dist(String dist) {
    this.dist = dist;
    return this;
  }

  /**
   * Get dist
   * @return dist
   */
  @javax.annotation.Nonnull
  public String getDist() {
    return dist;
  }

  public void setDist(String dist) {
    this.dist = dist;
  }


  public EaadharXamlSchemaKycResUidDataPoa lm(String lm) {
    this.lm = lm;
    return this;
  }

  /**
   * Get lm
   * @return lm
   */
  @javax.annotation.Nonnull
  public String getLm() {
    return lm;
  }

  public void setLm(String lm) {
    this.lm = lm;
  }


  public EaadharXamlSchemaKycResUidDataPoa loc(String loc) {
    this.loc = loc;
    return this;
  }

  /**
   * Get loc
   * @return loc
   */
  @javax.annotation.Nonnull
  public String getLoc() {
    return loc;
  }

  public void setLoc(String loc) {
    this.loc = loc;
  }


  public EaadharXamlSchemaKycResUidDataPoa pc(String pc) {
    this.pc = pc;
    return this;
  }

  /**
   * Get pc
   * @return pc
   */
  @javax.annotation.Nonnull
  public String getPc() {
    return pc;
  }

  public void setPc(String pc) {
    this.pc = pc;
  }


  public EaadharXamlSchemaKycResUidDataPoa state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nonnull
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public EaadharXamlSchemaKycResUidDataPoa vtc(String vtc) {
    this.vtc = vtc;
    return this;
  }

  /**
   * Get vtc
   * @return vtc
   */
  @javax.annotation.Nonnull
  public String getVtc() {
    return vtc;
  }

  public void setVtc(String vtc) {
    this.vtc = vtc;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EaadharXamlSchemaKycResUidDataPoa eaadharXamlSchemaKycResUidDataPoa = (EaadharXamlSchemaKycResUidDataPoa) o;
    return Objects.equals(this.co, eaadharXamlSchemaKycResUidDataPoa.co) &&
        Objects.equals(this.country, eaadharXamlSchemaKycResUidDataPoa.country) &&
        Objects.equals(this.dist, eaadharXamlSchemaKycResUidDataPoa.dist) &&
        Objects.equals(this.lm, eaadharXamlSchemaKycResUidDataPoa.lm) &&
        Objects.equals(this.loc, eaadharXamlSchemaKycResUidDataPoa.loc) &&
        Objects.equals(this.pc, eaadharXamlSchemaKycResUidDataPoa.pc) &&
        Objects.equals(this.state, eaadharXamlSchemaKycResUidDataPoa.state) &&
        Objects.equals(this.vtc, eaadharXamlSchemaKycResUidDataPoa.vtc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(co, country, dist, lm, loc, pc, state, vtc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EaadharXamlSchemaKycResUidDataPoa {\n");
    sb.append("    co: ").append(toIndentedString(co)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    dist: ").append(toIndentedString(dist)).append("\n");
    sb.append("    lm: ").append(toIndentedString(lm)).append("\n");
    sb.append("    loc: ").append(toIndentedString(loc)).append("\n");
    sb.append("    pc: ").append(toIndentedString(pc)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    vtc: ").append(toIndentedString(vtc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("co");
    openapiFields.add("country");
    openapiFields.add("dist");
    openapiFields.add("lm");
    openapiFields.add("loc");
    openapiFields.add("pc");
    openapiFields.add("state");
    openapiFields.add("vtc");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("co");
    openapiRequiredFields.add("country");
    openapiRequiredFields.add("dist");
    openapiRequiredFields.add("lm");
    openapiRequiredFields.add("loc");
    openapiRequiredFields.add("pc");
    openapiRequiredFields.add("state");
    openapiRequiredFields.add("vtc");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EaadharXamlSchemaKycResUidDataPoa
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EaadharXamlSchemaKycResUidDataPoa.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EaadharXamlSchemaKycResUidDataPoa is not found in the empty JSON string", EaadharXamlSchemaKycResUidDataPoa.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EaadharXamlSchemaKycResUidDataPoa.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EaadharXamlSchemaKycResUidDataPoa` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EaadharXamlSchemaKycResUidDataPoa.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("co").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `co` to be a primitive type in the JSON string but got `%s`", jsonObj.get("co").toString()));
      }
      if (!jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if (!jsonObj.get("dist").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dist` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dist").toString()));
      }
      if (!jsonObj.get("lm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lm").toString()));
      }
      if (!jsonObj.get("loc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loc").toString()));
      }
      if (!jsonObj.get("pc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pc").toString()));
      }
      if (!jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if (!jsonObj.get("vtc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vtc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vtc").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EaadharXamlSchemaKycResUidDataPoa.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EaadharXamlSchemaKycResUidDataPoa' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EaadharXamlSchemaKycResUidDataPoa> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EaadharXamlSchemaKycResUidDataPoa.class));

       return (TypeAdapter<T>) new TypeAdapter<EaadharXamlSchemaKycResUidDataPoa>() {
           @Override
           public void write(JsonWriter out, EaadharXamlSchemaKycResUidDataPoa value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EaadharXamlSchemaKycResUidDataPoa read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EaadharXamlSchemaKycResUidDataPoa given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EaadharXamlSchemaKycResUidDataPoa
   * @throws IOException if the JSON string is invalid with respect to EaadharXamlSchemaKycResUidDataPoa
   */
  public static EaadharXamlSchemaKycResUidDataPoa fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EaadharXamlSchemaKycResUidDataPoa.class);
  }

  /**
   * Convert an instance of EaadharXamlSchemaKycResUidDataPoa to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

