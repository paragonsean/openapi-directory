/*
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.EaadharXamlSchemaKycResUidDataLData;
import org.openapitools.client.model.EaadharXamlSchemaKycResUidDataPoa;
import org.openapitools.client.model.EaadharXamlSchemaKycResUidDataPoi;
import org.openapitools.client.model.EaadharXamlSchemaKycResUidDataPrn;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EaadharXamlSchemaKycResUidData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:04:03.399628-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EaadharXamlSchemaKycResUidData {
  public static final String SERIALIZED_NAME_LDATA = "LData";
  @SerializedName(SERIALIZED_NAME_LDATA)
  private EaadharXamlSchemaKycResUidDataLData ldata;

  public static final String SERIALIZED_NAME_PHT = "Pht";
  @SerializedName(SERIALIZED_NAME_PHT)
  private String pht;

  public static final String SERIALIZED_NAME_POA = "Poa";
  @SerializedName(SERIALIZED_NAME_POA)
  private EaadharXamlSchemaKycResUidDataPoa poa;

  public static final String SERIALIZED_NAME_POI = "Poi";
  @SerializedName(SERIALIZED_NAME_POI)
  private EaadharXamlSchemaKycResUidDataPoi poi;

  public static final String SERIALIZED_NAME_PRN = "Prn";
  @SerializedName(SERIALIZED_NAME_PRN)
  private EaadharXamlSchemaKycResUidDataPrn prn;

  public static final String SERIALIZED_NAME_TKN = "tkn";
  @SerializedName(SERIALIZED_NAME_TKN)
  private String tkn;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public EaadharXamlSchemaKycResUidData() {
  }

  public EaadharXamlSchemaKycResUidData ldata(EaadharXamlSchemaKycResUidDataLData ldata) {
    this.ldata = ldata;
    return this;
  }

  /**
   * Get ldata
   * @return ldata
   */
  @javax.annotation.Nonnull
  public EaadharXamlSchemaKycResUidDataLData getLdata() {
    return ldata;
  }

  public void setLdata(EaadharXamlSchemaKycResUidDataLData ldata) {
    this.ldata = ldata;
  }


  public EaadharXamlSchemaKycResUidData pht(String pht) {
    this.pht = pht;
    return this;
  }

  /**
   * Get pht
   * @return pht
   */
  @javax.annotation.Nonnull
  public String getPht() {
    return pht;
  }

  public void setPht(String pht) {
    this.pht = pht;
  }


  public EaadharXamlSchemaKycResUidData poa(EaadharXamlSchemaKycResUidDataPoa poa) {
    this.poa = poa;
    return this;
  }

  /**
   * Get poa
   * @return poa
   */
  @javax.annotation.Nonnull
  public EaadharXamlSchemaKycResUidDataPoa getPoa() {
    return poa;
  }

  public void setPoa(EaadharXamlSchemaKycResUidDataPoa poa) {
    this.poa = poa;
  }


  public EaadharXamlSchemaKycResUidData poi(EaadharXamlSchemaKycResUidDataPoi poi) {
    this.poi = poi;
    return this;
  }

  /**
   * Get poi
   * @return poi
   */
  @javax.annotation.Nonnull
  public EaadharXamlSchemaKycResUidDataPoi getPoi() {
    return poi;
  }

  public void setPoi(EaadharXamlSchemaKycResUidDataPoi poi) {
    this.poi = poi;
  }


  public EaadharXamlSchemaKycResUidData prn(EaadharXamlSchemaKycResUidDataPrn prn) {
    this.prn = prn;
    return this;
  }

  /**
   * Get prn
   * @return prn
   */
  @javax.annotation.Nonnull
  public EaadharXamlSchemaKycResUidDataPrn getPrn() {
    return prn;
  }

  public void setPrn(EaadharXamlSchemaKycResUidDataPrn prn) {
    this.prn = prn;
  }


  public EaadharXamlSchemaKycResUidData tkn(String tkn) {
    this.tkn = tkn;
    return this;
  }

  /**
   * Get tkn
   * @return tkn
   */
  @javax.annotation.Nonnull
  public String getTkn() {
    return tkn;
  }

  public void setTkn(String tkn) {
    this.tkn = tkn;
  }


  public EaadharXamlSchemaKycResUidData uid(String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Get uid
   * @return uid
   */
  @javax.annotation.Nonnull
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EaadharXamlSchemaKycResUidData eaadharXamlSchemaKycResUidData = (EaadharXamlSchemaKycResUidData) o;
    return Objects.equals(this.ldata, eaadharXamlSchemaKycResUidData.ldata) &&
        Objects.equals(this.pht, eaadharXamlSchemaKycResUidData.pht) &&
        Objects.equals(this.poa, eaadharXamlSchemaKycResUidData.poa) &&
        Objects.equals(this.poi, eaadharXamlSchemaKycResUidData.poi) &&
        Objects.equals(this.prn, eaadharXamlSchemaKycResUidData.prn) &&
        Objects.equals(this.tkn, eaadharXamlSchemaKycResUidData.tkn) &&
        Objects.equals(this.uid, eaadharXamlSchemaKycResUidData.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ldata, pht, poa, poi, prn, tkn, uid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EaadharXamlSchemaKycResUidData {\n");
    sb.append("    ldata: ").append(toIndentedString(ldata)).append("\n");
    sb.append("    pht: ").append(toIndentedString(pht)).append("\n");
    sb.append("    poa: ").append(toIndentedString(poa)).append("\n");
    sb.append("    poi: ").append(toIndentedString(poi)).append("\n");
    sb.append("    prn: ").append(toIndentedString(prn)).append("\n");
    sb.append("    tkn: ").append(toIndentedString(tkn)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LData");
    openapiFields.add("Pht");
    openapiFields.add("Poa");
    openapiFields.add("Poi");
    openapiFields.add("Prn");
    openapiFields.add("tkn");
    openapiFields.add("uid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("LData");
    openapiRequiredFields.add("Pht");
    openapiRequiredFields.add("Poa");
    openapiRequiredFields.add("Poi");
    openapiRequiredFields.add("Prn");
    openapiRequiredFields.add("tkn");
    openapiRequiredFields.add("uid");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EaadharXamlSchemaKycResUidData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EaadharXamlSchemaKycResUidData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EaadharXamlSchemaKycResUidData is not found in the empty JSON string", EaadharXamlSchemaKycResUidData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EaadharXamlSchemaKycResUidData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EaadharXamlSchemaKycResUidData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EaadharXamlSchemaKycResUidData.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `LData`
      EaadharXamlSchemaKycResUidDataLData.validateJsonElement(jsonObj.get("LData"));
      if (!jsonObj.get("Pht").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Pht` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Pht").toString()));
      }
      // validate the required field `Poa`
      EaadharXamlSchemaKycResUidDataPoa.validateJsonElement(jsonObj.get("Poa"));
      // validate the required field `Poi`
      EaadharXamlSchemaKycResUidDataPoi.validateJsonElement(jsonObj.get("Poi"));
      // validate the required field `Prn`
      EaadharXamlSchemaKycResUidDataPrn.validateJsonElement(jsonObj.get("Prn"));
      if (!jsonObj.get("tkn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tkn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tkn").toString()));
      }
      if (!jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EaadharXamlSchemaKycResUidData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EaadharXamlSchemaKycResUidData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EaadharXamlSchemaKycResUidData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EaadharXamlSchemaKycResUidData.class));

       return (TypeAdapter<T>) new TypeAdapter<EaadharXamlSchemaKycResUidData>() {
           @Override
           public void write(JsonWriter out, EaadharXamlSchemaKycResUidData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EaadharXamlSchemaKycResUidData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EaadharXamlSchemaKycResUidData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EaadharXamlSchemaKycResUidData
   * @throws IOException if the JSON string is invalid with respect to EaadharXamlSchemaKycResUidData
   */
  public static EaadharXamlSchemaKycResUidData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EaadharXamlSchemaKycResUidData.class);
  }

  /**
   * Convert an instance of EaadharXamlSchemaKycResUidData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

