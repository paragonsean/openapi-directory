/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssuerResponseIssuersInner model module.
 * @module model/IssuerResponseIssuersInner
 * @version 1.0.0
 */
class IssuerResponseIssuersInner {
    /**
     * Constructs a new <code>IssuerResponseIssuersInner</code>.
     * @alias module:model/IssuerResponseIssuersInner
     * @param categories {String} 
     * @param description {String} 
     * @param issuerid {String} 
     * @param name {String} 
     * @param orgid {String} 
     */
    constructor(categories, description, issuerid, name, orgid) { 
        
        IssuerResponseIssuersInner.initialize(this, categories, description, issuerid, name, orgid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, categories, description, issuerid, name, orgid) { 
        obj['categories'] = categories;
        obj['description'] = description;
        obj['issuerid'] = issuerid;
        obj['name'] = name;
        obj['orgid'] = orgid;
    }

    /**
     * Constructs a <code>IssuerResponseIssuersInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuerResponseIssuersInner} obj Optional instance to populate.
     * @return {module:model/IssuerResponseIssuersInner} The populated <code>IssuerResponseIssuersInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuerResponseIssuersInner();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('issuerid')) {
                obj['issuerid'] = ApiClient.convertToType(data['issuerid'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('orgid')) {
                obj['orgid'] = ApiClient.convertToType(data['orgid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuerResponseIssuersInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuerResponseIssuersInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IssuerResponseIssuersInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['categories'] && !(typeof data['categories'] === 'string' || data['categories'] instanceof String)) {
            throw new Error("Expected the field `categories` to be a primitive type in the JSON string but got " + data['categories']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['issuerid'] && !(typeof data['issuerid'] === 'string' || data['issuerid'] instanceof String)) {
            throw new Error("Expected the field `issuerid` to be a primitive type in the JSON string but got " + data['issuerid']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['orgid'] && !(typeof data['orgid'] === 'string' || data['orgid'] instanceof String)) {
            throw new Error("Expected the field `orgid` to be a primitive type in the JSON string but got " + data['orgid']);
        }

        return true;
    }


}

IssuerResponseIssuersInner.RequiredProperties = ["categories", "description", "issuerid", "name", "orgid"];

/**
 * @member {String} categories
 */
IssuerResponseIssuersInner.prototype['categories'] = undefined;

/**
 * @member {String} description
 */
IssuerResponseIssuersInner.prototype['description'] = undefined;

/**
 * @member {String} issuerid
 */
IssuerResponseIssuersInner.prototype['issuerid'] = undefined;

/**
 * @member {String} name
 */
IssuerResponseIssuersInner.prototype['name'] = undefined;

/**
 * @member {String} orgid
 */
IssuerResponseIssuersInner.prototype['orgid'] = undefined;






export default IssuerResponseIssuersInner;

