/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessToken from './AccessToken';
import DeviceAccessToken from './DeviceAccessToken';
import RefreshToken from './RefreshToken';

/**
 * The GetaccesstokenIdRequest model module.
 * @module model/GetaccesstokenIdRequest
 * @version 1.0.0
 */
class GetaccesstokenIdRequest {
    /**
     * Constructs a new <code>GetaccesstokenIdRequest</code>.
     * @alias module:model/GetaccesstokenIdRequest
     */
    constructor() { 
        
        GetaccesstokenIdRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetaccesstokenIdRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetaccesstokenIdRequest} obj Optional instance to populate.
     * @return {module:model/GetaccesstokenIdRequest} The populated <code>GetaccesstokenIdRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetaccesstokenIdRequest();

            if (data.hasOwnProperty('Get access token using authorization code')) {
                obj['Get access token using authorization code'] = AccessToken.constructFromObject(data['Get access token using authorization code']);
            }
            if (data.hasOwnProperty('Get access token using device code and OTP')) {
                obj['Get access token using device code and OTP'] = DeviceAccessToken.constructFromObject(data['Get access token using device code and OTP']);
            }
            if (data.hasOwnProperty('Get access token using refresh token')) {
                obj['Get access token using refresh token'] = RefreshToken.constructFromObject(data['Get access token using refresh token']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetaccesstokenIdRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetaccesstokenIdRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Get access token using authorization code`
        if (data['Get access token using authorization code']) { // data not null
          AccessToken.validateJSON(data['Get access token using authorization code']);
        }
        // validate the optional field `Get access token using device code and OTP`
        if (data['Get access token using device code and OTP']) { // data not null
          DeviceAccessToken.validateJSON(data['Get access token using device code and OTP']);
        }
        // validate the optional field `Get access token using refresh token`
        if (data['Get access token using refresh token']) { // data not null
          RefreshToken.validateJSON(data['Get access token using refresh token']);
        }

        return true;
    }


}



/**
 * @member {module:model/AccessToken} Get access token using authorization code
 */
GetaccesstokenIdRequest.prototype['Get access token using authorization code'] = undefined;

/**
 * @member {module:model/DeviceAccessToken} Get access token using device code and OTP
 */
GetaccesstokenIdRequest.prototype['Get access token using device code and OTP'] = undefined;

/**
 * @member {module:model/RefreshToken} Get access token using refresh token
 */
GetaccesstokenIdRequest.prototype['Get access token using refresh token'] = undefined;






export default GetaccesstokenIdRequest;

