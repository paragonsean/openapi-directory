/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceAuthorizationCode model module.
 * @module model/DeviceAuthorizationCode
 * @version 1.0.0
 */
class DeviceAuthorizationCode {
    /**
     * Constructs a new <code>DeviceAuthorizationCode</code>.
     * @alias module:model/DeviceAuthorizationCode
     */
    constructor() { 
        
        DeviceAuthorizationCode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceAuthorizationCode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceAuthorizationCode} obj Optional instance to populate.
     * @return {module:model/DeviceAuthorizationCode} The populated <code>DeviceAuthorizationCode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceAuthorizationCode();

            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('dl_mobile')) {
                obj['dl_mobile'] = ApiClient.convertToType(data['dl_mobile'], 'Number');
            }
            if (data.hasOwnProperty('dl_username')) {
                obj['dl_username'] = ApiClient.convertToType(data['dl_username'], 'String');
            }
            if (data.hasOwnProperty('response_type')) {
                obj['response_type'] = ApiClient.convertToType(data['response_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceAuthorizationCode</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceAuthorizationCode</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['dl_username'] && !(typeof data['dl_username'] === 'string' || data['dl_username'] instanceof String)) {
            throw new Error("Expected the field `dl_username` to be a primitive type in the JSON string but got " + data['dl_username']);
        }
        // ensure the json data is a string
        if (data['response_type'] && !(typeof data['response_type'] === 'string' || data['response_type'] instanceof String)) {
            throw new Error("Expected the field `response_type` to be a primitive type in the JSON string but got " + data['response_type']);
        }

        return true;
    }


}



/**
 * @member {String} client_id
 */
DeviceAuthorizationCode.prototype['client_id'] = undefined;

/**
 * Mobile number associated with DigiLocker account of the   user. The client device accepts the mobile number on the device from user and sends it in this parameter. Either the username or the mobile number must be provided.
 * @member {Number} dl_mobile
 */
DeviceAuthorizationCode.prototype['dl_mobile'] = undefined;

/**
 * DigiLocker username of the user. The client device accepts the username on the device from user and sends the username in this parameter. Either the username or the mobile number must be provided.   
 * @member {String} dl_username
 */
DeviceAuthorizationCode.prototype['dl_username'] = undefined;

/**
 * The parameter must be set to device_code.
 * @member {String} response_type
 */
DeviceAuthorizationCode.prototype['response_type'] = undefined;






export default DeviceAuthorizationCode;

