/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceAccessToken model module.
 * @module model/DeviceAccessToken
 * @version 1.0.0
 */
class DeviceAccessToken {
    /**
     * Constructs a new <code>DeviceAccessToken</code>.
     * @alias module:model/DeviceAccessToken
     */
    constructor() { 
        
        DeviceAccessToken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceAccessToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceAccessToken} obj Optional instance to populate.
     * @return {module:model/DeviceAccessToken} The populated <code>DeviceAccessToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceAccessToken();

            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('device_code')) {
                obj['device_code'] = ApiClient.convertToType(data['device_code'], 'String');
            }
            if (data.hasOwnProperty('dl_otp')) {
                obj['dl_otp'] = ApiClient.convertToType(data['dl_otp'], 'String');
            }
            if (data.hasOwnProperty('grant_type')) {
                obj['grant_type'] = ApiClient.convertToType(data['grant_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceAccessToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceAccessToken</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['device_code'] && !(typeof data['device_code'] === 'string' || data['device_code'] instanceof String)) {
            throw new Error("Expected the field `device_code` to be a primitive type in the JSON string but got " + data['device_code']);
        }
        // ensure the json data is a string
        if (data['dl_otp'] && !(typeof data['dl_otp'] === 'string' || data['dl_otp'] instanceof String)) {
            throw new Error("Expected the field `dl_otp` to be a primitive type in the JSON string but got " + data['dl_otp']);
        }
        // ensure the json data is a string
        if (data['grant_type'] && !(typeof data['grant_type'] === 'string' || data['grant_type'] instanceof String)) {
            throw new Error("Expected the field `grant_type` to be a primitive type in the JSON string but got " + data['grant_type']);
        }

        return true;
    }


}



/**
 * Provide the client id that was created during the application registration process on Partners Portal.
 * @member {String} client_id
 */
DeviceAccessToken.prototype['client_id'] = undefined;

/**
 * The device verification code. The device_code field from Get Device Code Response.
 * @member {String} device_code
 */
DeviceAccessToken.prototype['device_code'] = undefined;

/**
 * The OTP collected from the user
 * @member {String} dl_otp
 */
DeviceAccessToken.prototype['dl_otp'] = undefined;

/**
 * The grant type, which must be “urn:ietf:params:oauth:grant-type:device_code”.
 * @member {String} grant_type
 */
DeviceAccessToken.prototype['grant_type'] = undefined;






export default DeviceAccessToken;

