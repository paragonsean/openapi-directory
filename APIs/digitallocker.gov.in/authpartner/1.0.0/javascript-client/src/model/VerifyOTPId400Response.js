/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Response7 from './Response7';
import Response8 from './Response8';
import Response9 from './Response9';

/**
 * The VerifyOTPId400Response model module.
 * @module model/VerifyOTPId400Response
 * @version 1.0.0
 */
class VerifyOTPId400Response {
    /**
     * Constructs a new <code>VerifyOTPId400Response</code>.
     * @alias module:model/VerifyOTPId400Response
     * @param {(module:model/Response7|module:model/Response8|module:model/Response9)} instance The actual instance to initialize VerifyOTPId400Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "Response7") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Response7.validateJSON(instance); // throw an exception if no match
                // create Response7 from JS object
                this.actualInstance = Response7.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Response7
            errorMessages.push("Failed to construct Response7: " + err)
        }

        try {
            if (typeof instance === "Response8") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Response8.validateJSON(instance); // throw an exception if no match
                // create Response8 from JS object
                this.actualInstance = Response8.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Response8
            errorMessages.push("Failed to construct Response8: " + err)
        }

        try {
            if (typeof instance === "Response9") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Response9.validateJSON(instance); // throw an exception if no match
                // create Response9 from JS object
                this.actualInstance = Response9.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Response9
            errorMessages.push("Failed to construct Response9: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `VerifyOTPId400Response` with oneOf schemas Response7, Response8, Response9. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `VerifyOTPId400Response` with oneOf schemas Response7, Response8, Response9. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>VerifyOTPId400Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyOTPId400Response} obj Optional instance to populate.
     * @return {module:model/VerifyOTPId400Response} The populated <code>VerifyOTPId400Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new VerifyOTPId400Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>Response7</code>, <code>Response8</code>, <code>Response9</code>.
     * @return {(module:model/Response7|module:model/Response8|module:model/Response9)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>Response7</code>, <code>Response8</code>, <code>Response9</code>.
     * @param {(module:model/Response7|module:model/Response8|module:model/Response9)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = VerifyOTPId400Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of VerifyOTPId400Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/VerifyOTPId400Response} An instance of VerifyOTPId400Response.
     */
    static fromJSON = function(json_string){
        return VerifyOTPId400Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * hmac_mismatch
 * @member {String} error
 */
VerifyOTPId400Response.prototype['error'] = undefined;

/**
 * HMAC does not match
 * @member {String} error_description
 */
VerifyOTPId400Response.prototype['error_description'] = undefined;


VerifyOTPId400Response.OneOf = ["Response7", "Response8", "Response9"];

export default VerifyOTPId400Response;

