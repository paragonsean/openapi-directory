/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetListOfIssuedDocumentsId200ResponseItemsInner model module.
 * @module model/GetListOfIssuedDocumentsId200ResponseItemsInner
 * @version 1.0.0
 */
class GetListOfIssuedDocumentsId200ResponseItemsInner {
    /**
     * Constructs a new <code>GetListOfIssuedDocumentsId200ResponseItemsInner</code>.
     * @alias module:model/GetListOfIssuedDocumentsId200ResponseItemsInner
     * @param date {String} 
     * @param description {String} 
     * @param doctype {String} 
     * @param issuer {String} 
     * @param issuerid {String} 
     * @param name {String} 
     * @param parent {String} 
     * @param size {String} 
     * @param type {String} 
     * @param uri {String} 
     */
    constructor(date, description, doctype, issuer, issuerid, name, parent, size, type, uri) { 
        
        GetListOfIssuedDocumentsId200ResponseItemsInner.initialize(this, date, description, doctype, issuer, issuerid, name, parent, size, type, uri);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, date, description, doctype, issuer, issuerid, name, parent, size, type, uri) { 
        obj['date'] = date;
        obj['description'] = description;
        obj['doctype'] = doctype;
        obj['issuer'] = issuer;
        obj['issuerid'] = issuerid;
        obj['name'] = name;
        obj['parent'] = parent;
        obj['size'] = size;
        obj['type'] = type;
        obj['uri'] = uri;
    }

    /**
     * Constructs a <code>GetListOfIssuedDocumentsId200ResponseItemsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetListOfIssuedDocumentsId200ResponseItemsInner} obj Optional instance to populate.
     * @return {module:model/GetListOfIssuedDocumentsId200ResponseItemsInner} The populated <code>GetListOfIssuedDocumentsId200ResponseItemsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetListOfIssuedDocumentsId200ResponseItemsInner();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('doctype')) {
                obj['doctype'] = ApiClient.convertToType(data['doctype'], 'String');
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = ApiClient.convertToType(data['issuer'], 'String');
            }
            if (data.hasOwnProperty('issuerid')) {
                obj['issuerid'] = ApiClient.convertToType(data['issuerid'], 'String');
            }
            if (data.hasOwnProperty('mime')) {
                obj['mime'] = ApiClient.convertToType(data['mime'], [Object]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetListOfIssuedDocumentsId200ResponseItemsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetListOfIssuedDocumentsId200ResponseItemsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetListOfIssuedDocumentsId200ResponseItemsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['doctype'] && !(typeof data['doctype'] === 'string' || data['doctype'] instanceof String)) {
            throw new Error("Expected the field `doctype` to be a primitive type in the JSON string but got " + data['doctype']);
        }
        // ensure the json data is a string
        if (data['issuer'] && !(typeof data['issuer'] === 'string' || data['issuer'] instanceof String)) {
            throw new Error("Expected the field `issuer` to be a primitive type in the JSON string but got " + data['issuer']);
        }
        // ensure the json data is a string
        if (data['issuerid'] && !(typeof data['issuerid'] === 'string' || data['issuerid'] instanceof String)) {
            throw new Error("Expected the field `issuerid` to be a primitive type in the JSON string but got " + data['issuerid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['mime'])) {
            throw new Error("Expected the field `mime` to be an array in the JSON data but got " + data['mime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parent'] && !(typeof data['parent'] === 'string' || data['parent'] instanceof String)) {
            throw new Error("Expected the field `parent` to be a primitive type in the JSON string but got " + data['parent']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}

GetListOfIssuedDocumentsId200ResponseItemsInner.RequiredProperties = ["date", "description", "doctype", "issuer", "issuerid", "name", "parent", "size", "type", "uri"];

/**
 * @member {String} date
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['date'] = undefined;

/**
 * @member {String} description
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['description'] = undefined;

/**
 * @member {String} doctype
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['doctype'] = undefined;

/**
 * @member {String} issuer
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['issuer'] = undefined;

/**
 * @member {String} issuerid
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['issuerid'] = undefined;

/**
 * @member {Array.<Object>} mime
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['mime'] = undefined;

/**
 * @member {String} name
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['name'] = undefined;

/**
 * @member {String} parent
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['parent'] = undefined;

/**
 * @member {String} size
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['size'] = undefined;

/**
 * @member {String} type
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['type'] = undefined;

/**
 * @member {String} uri
 */
GetListOfIssuedDocumentsId200ResponseItemsInner.prototype['uri'] = undefined;






export default GetListOfIssuedDocumentsId200ResponseItemsInner;

