/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DocTypeResponseDocumentsInner model module.
 * @module model/DocTypeResponseDocumentsInner
 * @version 1.0.0
 */
class DocTypeResponseDocumentsInner {
    /**
     * Constructs a new <code>DocTypeResponseDocumentsInner</code>.
     * @alias module:model/DocTypeResponseDocumentsInner
     * @param description {String} 
     * @param doctype {String} 
     */
    constructor(description, doctype) { 
        
        DocTypeResponseDocumentsInner.initialize(this, description, doctype);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, doctype) { 
        obj['description'] = description;
        obj['doctype'] = doctype;
    }

    /**
     * Constructs a <code>DocTypeResponseDocumentsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocTypeResponseDocumentsInner} obj Optional instance to populate.
     * @return {module:model/DocTypeResponseDocumentsInner} The populated <code>DocTypeResponseDocumentsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocTypeResponseDocumentsInner();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('doctype')) {
                obj['doctype'] = ApiClient.convertToType(data['doctype'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DocTypeResponseDocumentsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DocTypeResponseDocumentsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DocTypeResponseDocumentsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['doctype'] && !(typeof data['doctype'] === 'string' || data['doctype'] instanceof String)) {
            throw new Error("Expected the field `doctype` to be a primitive type in the JSON string but got " + data['doctype']);
        }

        return true;
    }


}

DocTypeResponseDocumentsInner.RequiredProperties = ["description", "doctype"];

/**
 * @member {String} description
 */
DocTypeResponseDocumentsInner.prototype['description'] = undefined;

/**
 * @member {String} doctype
 */
DocTypeResponseDocumentsInner.prototype['doctype'] = undefined;






export default DocTypeResponseDocumentsInner;

