/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EaadharXamlSchemaKycResSignature from './EaadharXamlSchemaKycResSignature';
import EaadharXamlSchemaKycResUidData from './EaadharXamlSchemaKycResUidData';

/**
 * The EaadharXamlSchemaKycRes model module.
 * @module model/EaadharXamlSchemaKycRes
 * @version 1.0.0
 */
class EaadharXamlSchemaKycRes {
    /**
     * Constructs a new <code>EaadharXamlSchemaKycRes</code>.
     * @alias module:model/EaadharXamlSchemaKycRes
     * @param rar {String} 
     * @param signature {module:model/EaadharXamlSchemaKycResSignature} 
     * @param uidData {module:model/EaadharXamlSchemaKycResUidData} 
     * @param code {String} 
     * @param ret {String} 
     * @param ts {String} 
     * @param ttl {String} 
     * @param txn {String} 
     */
    constructor(rar, signature, uidData, code, ret, ts, ttl, txn) { 
        
        EaadharXamlSchemaKycRes.initialize(this, rar, signature, uidData, code, ret, ts, ttl, txn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rar, signature, uidData, code, ret, ts, ttl, txn) { 
        obj['Rar'] = rar;
        obj['Signature'] = signature;
        obj['UidData'] = uidData;
        obj['code'] = code;
        obj['ret'] = ret;
        obj['ts'] = ts;
        obj['ttl'] = ttl;
        obj['txn'] = txn;
    }

    /**
     * Constructs a <code>EaadharXamlSchemaKycRes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EaadharXamlSchemaKycRes} obj Optional instance to populate.
     * @return {module:model/EaadharXamlSchemaKycRes} The populated <code>EaadharXamlSchemaKycRes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EaadharXamlSchemaKycRes();

            if (data.hasOwnProperty('Rar')) {
                obj['Rar'] = ApiClient.convertToType(data['Rar'], 'String');
            }
            if (data.hasOwnProperty('Signature')) {
                obj['Signature'] = EaadharXamlSchemaKycResSignature.constructFromObject(data['Signature']);
            }
            if (data.hasOwnProperty('UidData')) {
                obj['UidData'] = EaadharXamlSchemaKycResUidData.constructFromObject(data['UidData']);
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('ret')) {
                obj['ret'] = ApiClient.convertToType(data['ret'], 'String');
            }
            if (data.hasOwnProperty('ts')) {
                obj['ts'] = ApiClient.convertToType(data['ts'], 'String');
            }
            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = ApiClient.convertToType(data['ttl'], 'String');
            }
            if (data.hasOwnProperty('txn')) {
                obj['txn'] = ApiClient.convertToType(data['txn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EaadharXamlSchemaKycRes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EaadharXamlSchemaKycRes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EaadharXamlSchemaKycRes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Rar'] && !(typeof data['Rar'] === 'string' || data['Rar'] instanceof String)) {
            throw new Error("Expected the field `Rar` to be a primitive type in the JSON string but got " + data['Rar']);
        }
        // validate the optional field `Signature`
        if (data['Signature']) { // data not null
          EaadharXamlSchemaKycResSignature.validateJSON(data['Signature']);
        }
        // validate the optional field `UidData`
        if (data['UidData']) { // data not null
          EaadharXamlSchemaKycResUidData.validateJSON(data['UidData']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['ret'] && !(typeof data['ret'] === 'string' || data['ret'] instanceof String)) {
            throw new Error("Expected the field `ret` to be a primitive type in the JSON string but got " + data['ret']);
        }
        // ensure the json data is a string
        if (data['ts'] && !(typeof data['ts'] === 'string' || data['ts'] instanceof String)) {
            throw new Error("Expected the field `ts` to be a primitive type in the JSON string but got " + data['ts']);
        }
        // ensure the json data is a string
        if (data['ttl'] && !(typeof data['ttl'] === 'string' || data['ttl'] instanceof String)) {
            throw new Error("Expected the field `ttl` to be a primitive type in the JSON string but got " + data['ttl']);
        }
        // ensure the json data is a string
        if (data['txn'] && !(typeof data['txn'] === 'string' || data['txn'] instanceof String)) {
            throw new Error("Expected the field `txn` to be a primitive type in the JSON string but got " + data['txn']);
        }

        return true;
    }


}

EaadharXamlSchemaKycRes.RequiredProperties = ["Rar", "Signature", "UidData", "code", "ret", "ts", "ttl", "txn"];

/**
 * @member {String} Rar
 */
EaadharXamlSchemaKycRes.prototype['Rar'] = undefined;

/**
 * @member {module:model/EaadharXamlSchemaKycResSignature} Signature
 */
EaadharXamlSchemaKycRes.prototype['Signature'] = undefined;

/**
 * @member {module:model/EaadharXamlSchemaKycResUidData} UidData
 */
EaadharXamlSchemaKycRes.prototype['UidData'] = undefined;

/**
 * @member {String} code
 */
EaadharXamlSchemaKycRes.prototype['code'] = undefined;

/**
 * @member {String} ret
 */
EaadharXamlSchemaKycRes.prototype['ret'] = undefined;

/**
 * @member {String} ts
 */
EaadharXamlSchemaKycRes.prototype['ts'] = undefined;

/**
 * @member {String} ttl
 */
EaadharXamlSchemaKycRes.prototype['ttl'] = undefined;

/**
 * @member {String} txn
 */
EaadharXamlSchemaKycRes.prototype['txn'] = undefined;






export default EaadharXamlSchemaKycRes;

