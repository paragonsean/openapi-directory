/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileUploadResponseDetails model module.
 * @module model/FileUploadResponseDetails
 * @version 1.0.0
 */
class FileUploadResponseDetails {
    /**
     * Constructs a new <code>FileUploadResponseDetails</code>.
     * @alias module:model/FileUploadResponseDetails
     * @param path {String} The destination path of the file in DigiLocker including filename.
     * @param size {String} Size of file.
     */
    constructor(path, size) { 
        
        FileUploadResponseDetails.initialize(this, path, size);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, path, size) { 
        obj['Path'] = path;
        obj['size'] = size;
    }

    /**
     * Constructs a <code>FileUploadResponseDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileUploadResponseDetails} obj Optional instance to populate.
     * @return {module:model/FileUploadResponseDetails} The populated <code>FileUploadResponseDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileUploadResponseDetails();

            if (data.hasOwnProperty('Path')) {
                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileUploadResponseDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileUploadResponseDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FileUploadResponseDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Path'] && !(typeof data['Path'] === 'string' || data['Path'] instanceof String)) {
            throw new Error("Expected the field `Path` to be a primitive type in the JSON string but got " + data['Path']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }

        return true;
    }


}

FileUploadResponseDetails.RequiredProperties = ["Path", "size"];

/**
 * The destination path of the file in DigiLocker including filename.
 * @member {String} Path
 */
FileUploadResponseDetails.prototype['Path'] = undefined;

/**
 * Size of file.
 * @member {String} size
 */
FileUploadResponseDetails.prototype['size'] = undefined;






export default FileUploadResponseDetails;

