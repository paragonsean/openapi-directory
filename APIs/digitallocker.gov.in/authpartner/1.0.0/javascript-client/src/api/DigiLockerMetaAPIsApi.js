/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DocTypeResponse from '../model/DocTypeResponse';
import GetDeviceCodeId401Response from '../model/GetDeviceCodeId401Response';
import GetListOfDocumentsProvidedByAnIssuerId400Response from '../model/GetListOfDocumentsProvidedByAnIssuerId400Response';
import GetListOfIssuersId400Response from '../model/GetListOfIssuersId400Response';
import GetSearchParametersForADocumentId400Response from '../model/GetSearchParametersForADocumentId400Response';
import GetStatisticsId400Response from '../model/GetStatisticsId400Response';
import GetStatisticsResponse from '../model/GetStatisticsResponse';
import IssuerResponse from '../model/IssuerResponse';
import PushURIToAccountId400Response from '../model/PushURIToAccountId400Response';
import PushURIToAccountId401Response from '../model/PushURIToAccountId401Response';
import PushURIToAccountId404Response from '../model/PushURIToAccountId404Response';
import PushURIToAccountId500Response from '../model/PushURIToAccountId500Response';
import SearchParametersResponseInner from '../model/SearchParametersResponseInner';
import VerifyAccountId400Response from '../model/VerifyAccountId400Response';
import VerifyAccountId500Response from '../model/VerifyAccountId500Response';
import VerifyAccountResponse from '../model/VerifyAccountResponse';

/**
* DigiLockerMetaAPIs service.
* @module api/DigiLockerMetaAPIsApi
* @version 1.0.0
*/
export default class DigiLockerMetaAPIsApi {

    /**
    * Constructs a new DigiLockerMetaAPIsApi. 
    * @alias module:api/DigiLockerMetaAPIsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getListOfDocumentsProvidedByAnIssuerId operation.
     * @callback module:api/DigiLockerMetaAPIsApi~getListOfDocumentsProvidedByAnIssuerIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DocTypeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get List of Documents Provided by an Issuer
     * Returns a list of documents/certificates issued by an issuer organization registered with DigiLocker.
     * @param {Object} opts Optional parameters
     * @param {String} [clientid] Provide the client id that was created during the application registration process on Partners Portal.
     * @param {File} [hmac] Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.
     * @param {String} [orgid] The organization id for the issuer in DigiLocker. This organization id is returned in Get List of Issuers API mentioned earlier.
     * @param {String} [ts] Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.
     * @param {module:api/DigiLockerMetaAPIsApi~getListOfDocumentsProvidedByAnIssuerIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DocTypeResponse}
     */
    getListOfDocumentsProvidedByAnIssuerId(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'clientid': opts['clientid'],
        'hmac': opts['hmac'],
        'orgid': opts['orgid'],
        'ts': opts['ts']
      };

      let authNames = ['oauthsecurity'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = DocTypeResponse;
      return this.apiClient.callApi(
        '/oauth2/1/pull/doctype', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getListOfIssuersId operation.
     * @callback module:api/DigiLockerMetaAPIsApi~getListOfIssuersIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IssuerResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get List of Issuers
     * Returns the list of issuers registered with DigiLocker.
     * @param {Object} opts Optional parameters
     * @param {String} [clientid] Provide the client id that was created during the application registration process on Partners Portal.
     * @param {File} [hmac] Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.
     * @param {String} [ts] Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.
     * @param {module:api/DigiLockerMetaAPIsApi~getListOfIssuersIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IssuerResponse}
     */
    getListOfIssuersId(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'clientid': opts['clientid'],
        'hmac': opts['hmac'],
        'ts': opts['ts']
      };

      let authNames = ['oauthsecurity'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = IssuerResponse;
      return this.apiClient.callApi(
        '/oauth2/1/pull/issuers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSearchParametersForADocumentId operation.
     * @callback module:api/DigiLockerMetaAPIsApi~getSearchParametersForADocumentIdCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SearchParametersResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Search Parameters for a Document
     * Returns a list of parameters required to search a document/certificate of an issuer organization registered with DigiLocker. These parameters are used to pull a document from issuer’s repository using Pull Document API mentioned in subsequent section.
     * @param {Object} opts Optional parameters
     * @param {String} [clientid] Provide the client id that was created during the application registration process on Partners Portal.
     * @param {String} [doctype] A 5 character unique document type provided by DigiLocker.
     * @param {File} [hmac] Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.
     * @param {String} [orgid] The organization id for the issuer in DigiLocker. This organization id is returned in Get List of Issuers API mentioned earlier.
     * @param {String} [ts] Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.
     * @param {module:api/DigiLockerMetaAPIsApi~getSearchParametersForADocumentIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SearchParametersResponseInner>}
     */
    getSearchParametersForADocumentId(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'clientid': opts['clientid'],
        'doctype': opts['doctype'],
        'hmac': opts['hmac'],
        'orgid': opts['orgid'],
        'ts': opts['ts']
      };

      let authNames = ['oauthsecurity'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = [SearchParametersResponseInner];
      return this.apiClient.callApi(
        '/oauth2/1/pull/parameters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getStatisticsId operation.
     * @callback module:api/DigiLockerMetaAPIsApi~getStatisticsIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetStatisticsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Statistics
     * Returns DigiLocker statistics such as the count of users, authentic documents, issuers and requesters as on a specific date.
     * @param {Object} opts Optional parameters
     * @param {String} [clientid] Provide the client id that was created during the application registration process on Partners Portal.
     * @param {File} [hmac] Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.
     * @param {String} [ts] Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.
     * @param {module:api/DigiLockerMetaAPIsApi~getStatisticsIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetStatisticsResponse}
     */
    getStatisticsId(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'clientid': opts['clientid'],
        'hmac': opts['hmac'],
        'ts': opts['ts']
      };

      let authNames = ['oauthsecurity'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = GetStatisticsResponse;
      return this.apiClient.callApi(
        '/statistics/1/counts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pushURIToAccountId operation.
     * @callback module:api/DigiLockerMetaAPIsApi~pushURIToAccountIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Push URI to Account
     * The API can use to push or delete a single URI into Digital Locker using DigiLocker Id acquired using Get User Details API. This API can be used to push the certificate details to Digital Locker as and when a certificate is generated in the issuer system. The issuing departments must register on DigiLocker as a registered Issuer and implement the requisite Issuer APIs as mentioned in Digital Locker Issuer API Specification document prior to pushing certificates using this API.
     * @param {Object} opts Optional parameters
     * @param {String} [action] Action that needs to be taken for the Aadhaar number and URI combination. Possible values are A for adding a new URI, U for updating an already added URI details or D for deleting the URI.
     * @param {String} [clientid] Provide the client id that was created during the application registration process on Partners Portal.
     * @param {Number} [digilockerid] This is the DigiLocker Id of the user that was acquired using Get User Details API.
     * @param {String} [docid] A unique number of the document. This id will be unique within the document type issued by the issuer.
     * @param {File} [hmac] Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.
     * @param {String} [issuedate] The issue date of the document in DDMMYYYY format.
     * @param {String} [ts] Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.
     * @param {String} [uri] This is the unique identifier of the document.
     * @param {Number} [validfrom] The date from which the document is valid in DDMMYYYY format. This may be same as the issue date.
     * @param {String} [validto] The expiry date of the document in DDMMYYYY format.
     * @param {module:api/DigiLockerMetaAPIsApi~pushURIToAccountIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    pushURIToAccountId(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'action': opts['action'],
        'clientid': opts['clientid'],
        'digilockerid': opts['digilockerid'],
        'docid': opts['docid'],
        'hmac': opts['hmac'],
        'issuedate': opts['issuedate'],
        'ts': opts['ts'],
        'uri': opts['uri'],
        'validfrom': opts['validfrom'],
        'validto': opts['validto']
      };

      let authNames = ['oauthsecurity'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/account/1/pushuri', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verifyAccountId operation.
     * @callback module:api/DigiLockerMetaAPIsApi~verifyAccountIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify Account
     * This API can be used to verify whether a mobile number or Aadhaar number is already registered with DigiLocker.
     * @param {Object} opts Optional parameters
     * @param {String} [clientid] Provide the client id that was created during the application registration process on Partners Portal.
     * @param {File} [hmac] Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.
     * @param {Number} [mobile] This is the mobile number of the user. DigiLocker will check whether an account exists for this mobile number. Either uid or mobile is required to verify whether an account exists.
     * @param {String} [ts] Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.
     * @param {Number} [uid] This is the Aadhaar number of the user. DigiLocker will check whether an account exists for this Aadhaar number. Either uid or mobile is required to verify whether an account exists.
     * @param {module:api/DigiLockerMetaAPIsApi~verifyAccountIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyAccountResponse}
     */
    verifyAccountId(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'clientid': opts['clientid'],
        'hmac': opts['hmac'],
        'mobile': opts['mobile'],
        'ts': opts['ts'],
        'uid': opts['uid']
      };

      let authNames = ['oauthsecurity'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = VerifyAccountResponse;
      return this.apiClient.callApi(
        '/account/2/verify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
