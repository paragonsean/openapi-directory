/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AuthorizedPartnerApiSpecification);
  }
}(this, function(expect, AuthorizedPartnerApiSpecification) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetStatisticsResponse', function() {
    it('should create an instance of GetStatisticsResponse', function() {
      // uncomment below and update the code to test GetStatisticsResponse
      //var instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
      //expect(instance).to.be.a(AuthorizedPartnerApiSpecification.GetStatisticsResponse);
    });

    it('should have the property authenticDocuments (base name: "authentic_documents")', function() {
      // uncomment below and update the code to test the property authenticDocuments
      //var instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
      //expect(instance).to.be();
    });

    it('should have the property countAsOn (base name: "count_as_on")', function() {
      // uncomment below and update the code to test the property countAsOn
      //var instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
      //expect(instance).to.be();
    });

    it('should have the property issuers (base name: "issuers")', function() {
      // uncomment below and update the code to test the property issuers
      //var instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
      //expect(instance).to.be();
    });

    it('should have the property monthwiseRegistations (base name: "monthwise_registations")', function() {
      // uncomment below and update the code to test the property monthwiseRegistations
      //var instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
      //expect(instance).to.be();
    });

    it('should have the property requestors (base name: "requestors")', function() {
      // uncomment below and update the code to test the property requestors
      //var instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
      //expect(instance).to.be();
    });

    it('should have the property users (base name: "users")', function() {
      // uncomment below and update the code to test the property users
      //var instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
      //expect(instance).to.be();
    });

    it('should have the property yearwiseAuthenticDocuments (base name: "yearwise_authentic_documents")', function() {
      // uncomment below and update the code to test the property yearwiseAuthenticDocuments
      //var instance = new AuthorizedPartnerApiSpecification.GetStatisticsResponse();
      //expect(instance).to.be();
    });

  });

}));
