/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference() {
    this->initializeModel();
}

OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::~OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference() {}

void OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::initializeModel() {

    m_digest_method_isSet = false;
    m_digest_method_isValid = false;

    m_digest_value_isSet = false;
    m_digest_value_isValid = false;

    m_transforms_isSet = false;
    m_transforms_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::fromJsonObject(QJsonObject json) {

    m_digest_method_isValid = ::OpenAPI::fromJsonValue(m_digest_method, json[QString("DigestMethod")]);
    m_digest_method_isSet = !json[QString("DigestMethod")].isNull() && m_digest_method_isValid;

    m_digest_value_isValid = ::OpenAPI::fromJsonValue(m_digest_value, json[QString("DigestValue")]);
    m_digest_value_isSet = !json[QString("DigestValue")].isNull() && m_digest_value_isValid;

    m_transforms_isValid = ::OpenAPI::fromJsonValue(m_transforms, json[QString("Transforms")]);
    m_transforms_isSet = !json[QString("Transforms")].isNull() && m_transforms_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("URI")]);
    m_uri_isSet = !json[QString("URI")].isNull() && m_uri_isValid;
}

QString OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::asJsonObject() const {
    QJsonObject obj;
    if (m_digest_method.isSet()) {
        obj.insert(QString("DigestMethod"), ::OpenAPI::toJsonValue(m_digest_method));
    }
    if (m_digest_value_isSet) {
        obj.insert(QString("DigestValue"), ::OpenAPI::toJsonValue(m_digest_value));
    }
    if (m_transforms.isSet()) {
        obj.insert(QString("Transforms"), ::OpenAPI::toJsonValue(m_transforms));
    }
    if (m_uri_isSet) {
        obj.insert(QString("URI"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_CanonicalizationMethod OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::getDigestMethod() const {
    return m_digest_method;
}
void OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::setDigestMethod(const OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_CanonicalizationMethod &digest_method) {
    m_digest_method = digest_method;
    m_digest_method_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::is_digest_method_Set() const{
    return m_digest_method_isSet;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::is_digest_method_Valid() const{
    return m_digest_method_isValid;
}

QString OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::getDigestValue() const {
    return m_digest_value;
}
void OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::setDigestValue(const QString &digest_value) {
    m_digest_value = digest_value;
    m_digest_value_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::is_digest_value_Set() const{
    return m_digest_value_isSet;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::is_digest_value_Valid() const{
    return m_digest_value_isValid;
}

OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference_Transforms OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::getTransforms() const {
    return m_transforms;
}
void OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::setTransforms(const OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference_Transforms &transforms) {
    m_transforms = transforms;
    m_transforms_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::is_transforms_Set() const{
    return m_transforms_isSet;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::is_transforms_Valid() const{
    return m_transforms_isValid;
}

QString OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::getUri() const {
    return m_uri;
}
void OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_digest_method.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_digest_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transforms.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEaadharXamlSchema_KycRes_Signature_SignedInfo_Reference::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_digest_method_isValid && m_digest_value_isValid && m_transforms_isValid && m_uri_isValid && true;
}

} // namespace OpenAPI
