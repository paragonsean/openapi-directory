/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data() {
    this->initializeModel();
}

OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::~OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data() {}

void OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::initializeModel() {

    m_x509_certificate_isSet = false;
    m_x509_certificate_isValid = false;

    m_x509_subject_name_isSet = false;
    m_x509_subject_name_isValid = false;
}

void OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::fromJsonObject(QJsonObject json) {

    m_x509_certificate_isValid = ::OpenAPI::fromJsonValue(m_x509_certificate, json[QString("X509Certificate")]);
    m_x509_certificate_isSet = !json[QString("X509Certificate")].isNull() && m_x509_certificate_isValid;

    m_x509_subject_name_isValid = ::OpenAPI::fromJsonValue(m_x509_subject_name, json[QString("X509SubjectName")]);
    m_x509_subject_name_isSet = !json[QString("X509SubjectName")].isNull() && m_x509_subject_name_isValid;
}

QString OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::asJsonObject() const {
    QJsonObject obj;
    if (m_x509_certificate_isSet) {
        obj.insert(QString("X509Certificate"), ::OpenAPI::toJsonValue(m_x509_certificate));
    }
    if (m_x509_subject_name_isSet) {
        obj.insert(QString("X509SubjectName"), ::OpenAPI::toJsonValue(m_x509_subject_name));
    }
    return obj;
}

QString OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::getX509Certificate() const {
    return m_x509_certificate;
}
void OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::setX509Certificate(const QString &x509_certificate) {
    m_x509_certificate = x509_certificate;
    m_x509_certificate_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::is_x509_certificate_Set() const{
    return m_x509_certificate_isSet;
}

bool OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::is_x509_certificate_Valid() const{
    return m_x509_certificate_isValid;
}

QString OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::getX509SubjectName() const {
    return m_x509_subject_name;
}
void OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::setX509SubjectName(const QString &x509_subject_name) {
    m_x509_subject_name = x509_subject_name;
    m_x509_subject_name_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::is_x509_subject_name_Set() const{
    return m_x509_subject_name_isSet;
}

bool OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::is_x509_subject_name_Valid() const{
    return m_x509_subject_name_isValid;
}

bool OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_x509_certificate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_x509_subject_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEaadharXamlSchema_KycRes_Signature_KeyInfo_X509Data::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_x509_certificate_isValid && m_x509_subject_name_isValid && true;
}

} // namespace OpenAPI
