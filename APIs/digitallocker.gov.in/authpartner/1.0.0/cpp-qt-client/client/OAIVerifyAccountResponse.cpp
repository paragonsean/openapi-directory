/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerifyAccountResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerifyAccountResponse::OAIVerifyAccountResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerifyAccountResponse::OAIVerifyAccountResponse() {
    this->initializeModel();
}

OAIVerifyAccountResponse::~OAIVerifyAccountResponse() {}

void OAIVerifyAccountResponse::initializeModel() {

    m_digilockerid_isSet = false;
    m_digilockerid_isValid = false;

    m_registered_isSet = false;
    m_registered_isValid = false;
}

void OAIVerifyAccountResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerifyAccountResponse::fromJsonObject(QJsonObject json) {

    m_digilockerid_isValid = ::OpenAPI::fromJsonValue(m_digilockerid, json[QString("digilockerid")]);
    m_digilockerid_isSet = !json[QString("digilockerid")].isNull() && m_digilockerid_isValid;

    m_registered_isValid = ::OpenAPI::fromJsonValue(m_registered, json[QString("registered")]);
    m_registered_isSet = !json[QString("registered")].isNull() && m_registered_isValid;
}

QString OAIVerifyAccountResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerifyAccountResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_digilockerid_isSet) {
        obj.insert(QString("digilockerid"), ::OpenAPI::toJsonValue(m_digilockerid));
    }
    if (m_registered_isSet) {
        obj.insert(QString("registered"), ::OpenAPI::toJsonValue(m_registered));
    }
    return obj;
}

QString OAIVerifyAccountResponse::getDigilockerid() const {
    return m_digilockerid;
}
void OAIVerifyAccountResponse::setDigilockerid(const QString &digilockerid) {
    m_digilockerid = digilockerid;
    m_digilockerid_isSet = true;
}

bool OAIVerifyAccountResponse::is_digilockerid_Set() const{
    return m_digilockerid_isSet;
}

bool OAIVerifyAccountResponse::is_digilockerid_Valid() const{
    return m_digilockerid_isValid;
}

QString OAIVerifyAccountResponse::getRegistered() const {
    return m_registered;
}
void OAIVerifyAccountResponse::setRegistered(const QString &registered) {
    m_registered = registered;
    m_registered_isSet = true;
}

bool OAIVerifyAccountResponse::is_registered_Set() const{
    return m_registered_isSet;
}

bool OAIVerifyAccountResponse::is_registered_Valid() const{
    return m_registered_isValid;
}

bool OAIVerifyAccountResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_digilockerid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registered_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerifyAccountResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_digilockerid_isValid && m_registered_isValid && true;
}

} // namespace OpenAPI
