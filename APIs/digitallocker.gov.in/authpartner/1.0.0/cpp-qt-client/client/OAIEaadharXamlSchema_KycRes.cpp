/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEaadharXamlSchema_KycRes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEaadharXamlSchema_KycRes::OAIEaadharXamlSchema_KycRes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEaadharXamlSchema_KycRes::OAIEaadharXamlSchema_KycRes() {
    this->initializeModel();
}

OAIEaadharXamlSchema_KycRes::~OAIEaadharXamlSchema_KycRes() {}

void OAIEaadharXamlSchema_KycRes::initializeModel() {

    m_rar_isSet = false;
    m_rar_isValid = false;

    m_signature_isSet = false;
    m_signature_isValid = false;

    m_uid_data_isSet = false;
    m_uid_data_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_ret_isSet = false;
    m_ret_isValid = false;

    m_ts_isSet = false;
    m_ts_isValid = false;

    m_ttl_isSet = false;
    m_ttl_isValid = false;

    m_txn_isSet = false;
    m_txn_isValid = false;
}

void OAIEaadharXamlSchema_KycRes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEaadharXamlSchema_KycRes::fromJsonObject(QJsonObject json) {

    m_rar_isValid = ::OpenAPI::fromJsonValue(m_rar, json[QString("Rar")]);
    m_rar_isSet = !json[QString("Rar")].isNull() && m_rar_isValid;

    m_signature_isValid = ::OpenAPI::fromJsonValue(m_signature, json[QString("Signature")]);
    m_signature_isSet = !json[QString("Signature")].isNull() && m_signature_isValid;

    m_uid_data_isValid = ::OpenAPI::fromJsonValue(m_uid_data, json[QString("UidData")]);
    m_uid_data_isSet = !json[QString("UidData")].isNull() && m_uid_data_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_ret_isValid = ::OpenAPI::fromJsonValue(m_ret, json[QString("ret")]);
    m_ret_isSet = !json[QString("ret")].isNull() && m_ret_isValid;

    m_ts_isValid = ::OpenAPI::fromJsonValue(m_ts, json[QString("ts")]);
    m_ts_isSet = !json[QString("ts")].isNull() && m_ts_isValid;

    m_ttl_isValid = ::OpenAPI::fromJsonValue(m_ttl, json[QString("ttl")]);
    m_ttl_isSet = !json[QString("ttl")].isNull() && m_ttl_isValid;

    m_txn_isValid = ::OpenAPI::fromJsonValue(m_txn, json[QString("txn")]);
    m_txn_isSet = !json[QString("txn")].isNull() && m_txn_isValid;
}

QString OAIEaadharXamlSchema_KycRes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEaadharXamlSchema_KycRes::asJsonObject() const {
    QJsonObject obj;
    if (m_rar_isSet) {
        obj.insert(QString("Rar"), ::OpenAPI::toJsonValue(m_rar));
    }
    if (m_signature.isSet()) {
        obj.insert(QString("Signature"), ::OpenAPI::toJsonValue(m_signature));
    }
    if (m_uid_data.isSet()) {
        obj.insert(QString("UidData"), ::OpenAPI::toJsonValue(m_uid_data));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_ret_isSet) {
        obj.insert(QString("ret"), ::OpenAPI::toJsonValue(m_ret));
    }
    if (m_ts_isSet) {
        obj.insert(QString("ts"), ::OpenAPI::toJsonValue(m_ts));
    }
    if (m_ttl_isSet) {
        obj.insert(QString("ttl"), ::OpenAPI::toJsonValue(m_ttl));
    }
    if (m_txn_isSet) {
        obj.insert(QString("txn"), ::OpenAPI::toJsonValue(m_txn));
    }
    return obj;
}

QString OAIEaadharXamlSchema_KycRes::getRar() const {
    return m_rar;
}
void OAIEaadharXamlSchema_KycRes::setRar(const QString &rar) {
    m_rar = rar;
    m_rar_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes::is_rar_Set() const{
    return m_rar_isSet;
}

bool OAIEaadharXamlSchema_KycRes::is_rar_Valid() const{
    return m_rar_isValid;
}

OAIEaadharXamlSchema_KycRes_Signature OAIEaadharXamlSchema_KycRes::getSignature() const {
    return m_signature;
}
void OAIEaadharXamlSchema_KycRes::setSignature(const OAIEaadharXamlSchema_KycRes_Signature &signature) {
    m_signature = signature;
    m_signature_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes::is_signature_Set() const{
    return m_signature_isSet;
}

bool OAIEaadharXamlSchema_KycRes::is_signature_Valid() const{
    return m_signature_isValid;
}

OAIEaadharXamlSchema_KycRes_UidData OAIEaadharXamlSchema_KycRes::getUidData() const {
    return m_uid_data;
}
void OAIEaadharXamlSchema_KycRes::setUidData(const OAIEaadharXamlSchema_KycRes_UidData &uid_data) {
    m_uid_data = uid_data;
    m_uid_data_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes::is_uid_data_Set() const{
    return m_uid_data_isSet;
}

bool OAIEaadharXamlSchema_KycRes::is_uid_data_Valid() const{
    return m_uid_data_isValid;
}

QString OAIEaadharXamlSchema_KycRes::getCode() const {
    return m_code;
}
void OAIEaadharXamlSchema_KycRes::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes::is_code_Set() const{
    return m_code_isSet;
}

bool OAIEaadharXamlSchema_KycRes::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIEaadharXamlSchema_KycRes::getRet() const {
    return m_ret;
}
void OAIEaadharXamlSchema_KycRes::setRet(const QString &ret) {
    m_ret = ret;
    m_ret_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes::is_ret_Set() const{
    return m_ret_isSet;
}

bool OAIEaadharXamlSchema_KycRes::is_ret_Valid() const{
    return m_ret_isValid;
}

QString OAIEaadharXamlSchema_KycRes::getTs() const {
    return m_ts;
}
void OAIEaadharXamlSchema_KycRes::setTs(const QString &ts) {
    m_ts = ts;
    m_ts_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes::is_ts_Set() const{
    return m_ts_isSet;
}

bool OAIEaadharXamlSchema_KycRes::is_ts_Valid() const{
    return m_ts_isValid;
}

QString OAIEaadharXamlSchema_KycRes::getTtl() const {
    return m_ttl;
}
void OAIEaadharXamlSchema_KycRes::setTtl(const QString &ttl) {
    m_ttl = ttl;
    m_ttl_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes::is_ttl_Set() const{
    return m_ttl_isSet;
}

bool OAIEaadharXamlSchema_KycRes::is_ttl_Valid() const{
    return m_ttl_isValid;
}

QString OAIEaadharXamlSchema_KycRes::getTxn() const {
    return m_txn;
}
void OAIEaadharXamlSchema_KycRes::setTxn(const QString &txn) {
    m_txn = txn;
    m_txn_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes::is_txn_Set() const{
    return m_txn_isSet;
}

bool OAIEaadharXamlSchema_KycRes::is_txn_Valid() const{
    return m_txn_isValid;
}

bool OAIEaadharXamlSchema_KycRes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rar_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_signature.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ttl_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEaadharXamlSchema_KycRes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rar_isValid && m_signature_isValid && m_uid_data_isValid && m_code_isValid && m_ret_isValid && m_ts_isValid && m_ttl_isValid && m_txn_isValid && true;
}

} // namespace OpenAPI
