/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEaadharXamlSchema_KycRes_UidData_LData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEaadharXamlSchema_KycRes_UidData_LData::OAIEaadharXamlSchema_KycRes_UidData_LData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEaadharXamlSchema_KycRes_UidData_LData::OAIEaadharXamlSchema_KycRes_UidData_LData() {
    this->initializeModel();
}

OAIEaadharXamlSchema_KycRes_UidData_LData::~OAIEaadharXamlSchema_KycRes_UidData_LData() {}

void OAIEaadharXamlSchema_KycRes_UidData_LData::initializeModel() {

    m_co_isSet = false;
    m_co_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_dist_isSet = false;
    m_dist_isValid = false;

    m_lang_isSet = false;
    m_lang_isValid = false;

    m_lm_isSet = false;
    m_lm_isValid = false;

    m_loc_isSet = false;
    m_loc_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pc_isSet = false;
    m_pc_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_vtc_isSet = false;
    m_vtc_isValid = false;
}

void OAIEaadharXamlSchema_KycRes_UidData_LData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEaadharXamlSchema_KycRes_UidData_LData::fromJsonObject(QJsonObject json) {

    m_co_isValid = ::OpenAPI::fromJsonValue(m_co, json[QString("co")]);
    m_co_isSet = !json[QString("co")].isNull() && m_co_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_dist_isValid = ::OpenAPI::fromJsonValue(m_dist, json[QString("dist")]);
    m_dist_isSet = !json[QString("dist")].isNull() && m_dist_isValid;

    m_lang_isValid = ::OpenAPI::fromJsonValue(m_lang, json[QString("lang")]);
    m_lang_isSet = !json[QString("lang")].isNull() && m_lang_isValid;

    m_lm_isValid = ::OpenAPI::fromJsonValue(m_lm, json[QString("lm")]);
    m_lm_isSet = !json[QString("lm")].isNull() && m_lm_isValid;

    m_loc_isValid = ::OpenAPI::fromJsonValue(m_loc, json[QString("loc")]);
    m_loc_isSet = !json[QString("loc")].isNull() && m_loc_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pc_isValid = ::OpenAPI::fromJsonValue(m_pc, json[QString("pc")]);
    m_pc_isSet = !json[QString("pc")].isNull() && m_pc_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_vtc_isValid = ::OpenAPI::fromJsonValue(m_vtc, json[QString("vtc")]);
    m_vtc_isSet = !json[QString("vtc")].isNull() && m_vtc_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEaadharXamlSchema_KycRes_UidData_LData::asJsonObject() const {
    QJsonObject obj;
    if (m_co_isSet) {
        obj.insert(QString("co"), ::OpenAPI::toJsonValue(m_co));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_dist_isSet) {
        obj.insert(QString("dist"), ::OpenAPI::toJsonValue(m_dist));
    }
    if (m_lang_isSet) {
        obj.insert(QString("lang"), ::OpenAPI::toJsonValue(m_lang));
    }
    if (m_lm_isSet) {
        obj.insert(QString("lm"), ::OpenAPI::toJsonValue(m_lm));
    }
    if (m_loc_isSet) {
        obj.insert(QString("loc"), ::OpenAPI::toJsonValue(m_loc));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pc_isSet) {
        obj.insert(QString("pc"), ::OpenAPI::toJsonValue(m_pc));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_vtc_isSet) {
        obj.insert(QString("vtc"), ::OpenAPI::toJsonValue(m_vtc));
    }
    return obj;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getCo() const {
    return m_co;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setCo(const QString &co) {
    m_co = co;
    m_co_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_co_Set() const{
    return m_co_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_co_Valid() const{
    return m_co_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getCountry() const {
    return m_country;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_country_Set() const{
    return m_country_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getDist() const {
    return m_dist;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setDist(const QString &dist) {
    m_dist = dist;
    m_dist_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_dist_Set() const{
    return m_dist_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_dist_Valid() const{
    return m_dist_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getLang() const {
    return m_lang;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setLang(const QString &lang) {
    m_lang = lang;
    m_lang_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_lang_Set() const{
    return m_lang_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_lang_Valid() const{
    return m_lang_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getLm() const {
    return m_lm;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setLm(const QString &lm) {
    m_lm = lm;
    m_lm_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_lm_Set() const{
    return m_lm_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_lm_Valid() const{
    return m_lm_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getLoc() const {
    return m_loc;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setLoc(const QString &loc) {
    m_loc = loc;
    m_loc_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_loc_Set() const{
    return m_loc_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_loc_Valid() const{
    return m_loc_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getName() const {
    return m_name;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getPc() const {
    return m_pc;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setPc(const QString &pc) {
    m_pc = pc;
    m_pc_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_pc_Set() const{
    return m_pc_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_pc_Valid() const{
    return m_pc_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getState() const {
    return m_state;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_state_Set() const{
    return m_state_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIEaadharXamlSchema_KycRes_UidData_LData::getVtc() const {
    return m_vtc;
}
void OAIEaadharXamlSchema_KycRes_UidData_LData::setVtc(const QString &vtc) {
    m_vtc = vtc;
    m_vtc_isSet = true;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_vtc_Set() const{
    return m_vtc_isSet;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::is_vtc_Valid() const{
    return m_vtc_isValid;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_co_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dist_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lang_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vtc_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEaadharXamlSchema_KycRes_UidData_LData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_co_isValid && m_country_isValid && m_dist_isValid && m_lang_isValid && m_lm_isValid && m_loc_isValid && m_name_isValid && m_pc_isValid && m_state_isValid && m_vtc_isValid && true;
}

} // namespace OpenAPI
