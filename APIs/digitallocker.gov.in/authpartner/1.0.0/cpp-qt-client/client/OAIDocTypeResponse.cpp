/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocTypeResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocTypeResponse::OAIDocTypeResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocTypeResponse::OAIDocTypeResponse() {
    this->initializeModel();
}

OAIDocTypeResponse::~OAIDocTypeResponse() {}

void OAIDocTypeResponse::initializeModel() {

    m_documents_isSet = false;
    m_documents_isValid = false;
}

void OAIDocTypeResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocTypeResponse::fromJsonObject(QJsonObject json) {

    m_documents_isValid = ::OpenAPI::fromJsonValue(m_documents, json[QString("documents")]);
    m_documents_isSet = !json[QString("documents")].isNull() && m_documents_isValid;
}

QString OAIDocTypeResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocTypeResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_documents.size() > 0) {
        obj.insert(QString("documents"), ::OpenAPI::toJsonValue(m_documents));
    }
    return obj;
}

QSet<OAIDocTypeResponse_documents_inner> OAIDocTypeResponse::getDocuments() const {
    return m_documents;
}
void OAIDocTypeResponse::setDocuments(const QSet<OAIDocTypeResponse_documents_inner> &documents) {
    m_documents = documents;
    m_documents_isSet = true;
}

bool OAIDocTypeResponse::is_documents_Set() const{
    return m_documents_isSet;
}

bool OAIDocTypeResponse::is_documents_Valid() const{
    return m_documents_isValid;
}

bool OAIDocTypeResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_documents.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocTypeResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_documents_isValid && true;
}

} // namespace OpenAPI
