/**
 * Authorized Partner API Specification
 * To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@digitallocker.gov.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessResponse.h
 *
 * 
 */

#ifndef OAIAccessResponse_H
#define OAIAccessResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccessResponse : public OAIObject {
public:
    OAIAccessResponse();
    OAIAccessResponse(QString json);
    ~OAIAccessResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessToken() const;
    void setAccessToken(const QString &access_token);
    bool is_access_token_Set() const;
    bool is_access_token_Valid() const;

    QString getDigilockerId() const;
    void setDigilockerId(const QString &digilocker_id);
    bool is_digilocker_id_Set() const;
    bool is_digilocker_id_Valid() const;

    qint32 getDob() const;
    void setDob(const qint32 &dob);
    bool is_dob_Set() const;
    bool is_dob_Valid() const;

    QString getEaadhar() const;
    void setEaadhar(const QString &eaadhar);
    bool is_eaadhar_Set() const;
    bool is_eaadhar_Valid() const;

    qint64 getExpiresIn() const;
    void setExpiresIn(const qint64 &expires_in);
    bool is_expires_in_Set() const;
    bool is_expires_in_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReferenceKey() const;
    void setReferenceKey(const QString &reference_key);
    bool is_reference_key_Set() const;
    bool is_reference_key_Valid() const;

    QString getRefreshToken() const;
    void setRefreshToken(const QString &refresh_token);
    bool is_refresh_token_Set() const;
    bool is_refresh_token_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QString getTokenType() const;
    void setTokenType(const QString &token_type);
    bool is_token_type_Set() const;
    bool is_token_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_token;
    bool m_access_token_isSet;
    bool m_access_token_isValid;

    QString m_digilocker_id;
    bool m_digilocker_id_isSet;
    bool m_digilocker_id_isValid;

    qint32 m_dob;
    bool m_dob_isSet;
    bool m_dob_isValid;

    QString m_eaadhar;
    bool m_eaadhar_isSet;
    bool m_eaadhar_isValid;

    qint64 m_expires_in;
    bool m_expires_in_isSet;
    bool m_expires_in_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_reference_key;
    bool m_reference_key_isSet;
    bool m_reference_key_isValid;

    QString m_refresh_token;
    bool m_refresh_token_isSet;
    bool m_refresh_token_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QString m_token_type;
    bool m_token_type_isSet;
    bool m_token_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessResponse)

#endif // OAIAccessResponse_H
