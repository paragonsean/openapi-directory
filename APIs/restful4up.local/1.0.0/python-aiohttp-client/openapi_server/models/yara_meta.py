# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class YaraMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: str=None, md5sum: str=None, sha256sum: str=None, sha512sum: str=None):
        """YaraMeta - a model defined in OpenAPI

        :param _date: The _date of this YaraMeta.
        :param md5sum: The md5sum of this YaraMeta.
        :param sha256sum: The sha256sum of this YaraMeta.
        :param sha512sum: The sha512sum of this YaraMeta.
        """
        self.openapi_types = {
            '_date': str,
            'md5sum': str,
            'sha256sum': str,
            'sha512sum': str
        }

        self.attribute_map = {
            '_date': 'date',
            'md5sum': 'md5sum',
            'sha256sum': 'sha256sum',
            'sha512sum': 'sha512sum'
        }

        self.__date = _date
        self._md5sum = md5sum
        self._sha256sum = sha256sum
        self._sha512sum = sha512sum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'YaraMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The yara_meta of this YaraMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this YaraMeta.

        Date of the YARA rule created

        :return: The _date of this YaraMeta.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this YaraMeta.

        Date of the YARA rule created

        :param _date: The _date of this YaraMeta.
        :type _date: str
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")

        self.__date = _date

    @property
    def md5sum(self):
        """Gets the md5sum of this YaraMeta.

        MD5 check sum

        :return: The md5sum of this YaraMeta.
        :rtype: str
        """
        return self._md5sum

    @md5sum.setter
    def md5sum(self, md5sum):
        """Sets the md5sum of this YaraMeta.

        MD5 check sum

        :param md5sum: The md5sum of this YaraMeta.
        :type md5sum: str
        """
        if md5sum is None:
            raise ValueError("Invalid value for `md5sum`, must not be `None`")

        self._md5sum = md5sum

    @property
    def sha256sum(self):
        """Gets the sha256sum of this YaraMeta.

        SHA 256 check sum

        :return: The sha256sum of this YaraMeta.
        :rtype: str
        """
        return self._sha256sum

    @sha256sum.setter
    def sha256sum(self, sha256sum):
        """Sets the sha256sum of this YaraMeta.

        SHA 256 check sum

        :param sha256sum: The sha256sum of this YaraMeta.
        :type sha256sum: str
        """
        if sha256sum is None:
            raise ValueError("Invalid value for `sha256sum`, must not be `None`")

        self._sha256sum = sha256sum

    @property
    def sha512sum(self):
        """Gets the sha512sum of this YaraMeta.

        SHA 512 check sum

        :return: The sha512sum of this YaraMeta.
        :rtype: str
        """
        return self._sha512sum

    @sha512sum.setter
    def sha512sum(self, sha512sum):
        """Sets the sha512sum of this YaraMeta.

        SHA 512 check sum

        :param sha512sum: The sha512sum of this YaraMeta.
        :type sha512sum: str
        """
        if sha512sum is None:
            raise ValueError("Invalid value for `sha512sum`, must not be `None`")

        self._sha512sum = sha512sum
