/**
 * Randommer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICaseType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICaseType::OAICaseType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICaseType::OAICaseType() {
    this->initializeModel();
}

OAICaseType::~OAICaseType() {}

void OAICaseType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICaseType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICaseType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("LowerCase", Qt::CaseInsensitive) == 0) {
        m_value = eOAICaseType::LOWERCASE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UpperCase", Qt::CaseInsensitive) == 0) {
        m_value = eOAICaseType::UPPERCASE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SentenceCase", Qt::CaseInsensitive) == 0) {
        m_value = eOAICaseType::SENTENCECASE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TitleCase", Qt::CaseInsensitive) == 0) {
        m_value = eOAICaseType::TITLECASE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICaseType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICaseType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICaseType::LOWERCASE:
            val = "LowerCase";
            break;
        case eOAICaseType::UPPERCASE:
            val = "UpperCase";
            break;
        case eOAICaseType::SENTENCECASE:
            val = "SentenceCase";
            break;
        case eOAICaseType::TITLECASE:
            val = "TitleCase";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICaseType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICaseType::eOAICaseType OAICaseType::getValue() const {
    return m_value;
}

void OAICaseType::setValue(const OAICaseType::eOAICaseType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICaseType::isSet() const {
    
    return m_value_isSet;
}

bool OAICaseType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
