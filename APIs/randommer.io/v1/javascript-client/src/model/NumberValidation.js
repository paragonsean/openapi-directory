/**
 * Randommer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NumberValidation model module.
 * @module model/NumberValidation
 * @version v1
 */
class NumberValidation {
    /**
     * Constructs a new <code>NumberValidation</code>.
     * @alias module:model/NumberValidation
     * @param country {String} 
     * @param number {String} 
     */
    constructor(country, number) { 
        
        NumberValidation.initialize(this, country, number);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, country, number) { 
        obj['country'] = country;
        obj['number'] = number;
    }

    /**
     * Constructs a <code>NumberValidation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NumberValidation} obj Optional instance to populate.
     * @return {module:model/NumberValidation} The populated <code>NumberValidation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NumberValidation();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NumberValidation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NumberValidation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NumberValidation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['number'] && !(typeof data['number'] === 'string' || data['number'] instanceof String)) {
            throw new Error("Expected the field `number` to be a primitive type in the JSON string but got " + data['number']);
        }

        return true;
    }


}

NumberValidation.RequiredProperties = ["country", "number"];

/**
 * @member {String} country
 */
NumberValidation.prototype['country'] = undefined;

/**
 * @member {String} number
 */
NumberValidation.prototype['number'] = undefined;






export default NumberValidation;

