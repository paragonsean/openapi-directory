/**
 * Randommer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Phone service.
* @module api/PhoneApi
* @version v1
*/
export default class PhoneApi {

    /**
    * Constructs a new PhoneApi. 
    * @alias module:api/PhoneApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPhoneCountriesGet operation.
     * @callback module:api/PhoneApi~apiPhoneCountriesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get available countries
     * @param {Object} opts Optional parameters
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/PhoneApi~apiPhoneCountriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPhoneCountriesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Phone/Countries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPhoneGenerateGet operation.
     * @callback module:api/PhoneApi~apiPhoneGenerateGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get bulk telephone numbers for a country
     * @param {String} countryCode 
     * @param {Number} quantity 
     * @param {Object} opts Optional parameters
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/PhoneApi~apiPhoneGenerateGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPhoneGenerateGet(countryCode, quantity, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'countryCode' is set
      if (countryCode === undefined || countryCode === null) {
        throw new Error("Missing the required parameter 'countryCode' when calling apiPhoneGenerateGet");
      }
      // verify the required parameter 'quantity' is set
      if (quantity === undefined || quantity === null) {
        throw new Error("Missing the required parameter 'quantity' when calling apiPhoneGenerateGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'CountryCode': countryCode,
        'Quantity': quantity
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Phone/Generate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPhoneIMEIGet operation.
     * @callback module:api/PhoneApi~apiPhoneIMEIGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get bulk imeis
     * @param {Number} quantity 
     * @param {Object} opts Optional parameters
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/PhoneApi~apiPhoneIMEIGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPhoneIMEIGet(quantity, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'quantity' is set
      if (quantity === undefined || quantity === null) {
        throw new Error("Missing the required parameter 'quantity' when calling apiPhoneIMEIGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'Quantity': quantity
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Phone/IMEI', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPhoneValidateGet operation.
     * @callback module:api/PhoneApi~apiPhoneValidateGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate a phone number
     * @param {String} telephone 
     * @param {Object} opts Optional parameters
     * @param {String} [countryCode] 
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/PhoneApi~apiPhoneValidateGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPhoneValidateGet(telephone, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'telephone' is set
      if (telephone === undefined || telephone === null) {
        throw new Error("Missing the required parameter 'telephone' when calling apiPhoneValidateGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'telephone': telephone,
        'CountryCode': opts['countryCode']
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Phone/Validate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
