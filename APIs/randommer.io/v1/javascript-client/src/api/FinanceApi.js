/**
 * Randommer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Finance service.
* @module api/FinanceApi
* @version v1
*/
export default class FinanceApi {

    /**
    * Constructs a new FinanceApi. 
    * @alias module:api/FinanceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiFinanceCountriesGet operation.
     * @callback module:api/FinanceApi~apiFinanceCountriesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get available countries
     * @param {Object} opts Optional parameters
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/FinanceApi~apiFinanceCountriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiFinanceCountriesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Finance/Countries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiFinanceCryptoAddressGet operation.
     * @callback module:api/FinanceApi~apiFinanceCryptoAddressGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get crypto address
     * @param {Object} opts Optional parameters
     * @param {String} [cryptoType] 
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/FinanceApi~apiFinanceCryptoAddressGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiFinanceCryptoAddressGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'cryptoType': opts['cryptoType']
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Finance/CryptoAddress', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiFinanceCryptoAddressTypesGet operation.
     * @callback module:api/FinanceApi~apiFinanceCryptoAddressTypesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get available crypto types
     * @param {Object} opts Optional parameters
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/FinanceApi~apiFinanceCryptoAddressTypesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiFinanceCryptoAddressTypesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Finance/CryptoAddress/Types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiFinanceIbanCountryCodeGet operation.
     * @callback module:api/FinanceApi~apiFinanceIbanCountryCodeGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get IBAN by countryCode
     * @param {String} countryCode 
     * @param {Object} opts Optional parameters
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/FinanceApi~apiFinanceIbanCountryCodeGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiFinanceIbanCountryCodeGet(countryCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'countryCode' is set
      if (countryCode === undefined || countryCode === null) {
        throw new Error("Missing the required parameter 'countryCode' when calling apiFinanceIbanCountryCodeGet");
      }

      let pathParams = {
        'countryCode': countryCode
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Finance/Iban/{countryCode}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiFinanceVatValidatorPost operation.
     * @callback module:api/FinanceApi~apiFinanceVatValidatorPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} country 
     * @param {String} vat 
     * @param {Object} opts Optional parameters
     * @param {String} [xApiKey] Enter your key
     * @param {module:api/FinanceApi~apiFinanceVatValidatorPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiFinanceVatValidatorPost(country, vat, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling apiFinanceVatValidatorPost");
      }
      // verify the required parameter 'vat' is set
      if (vat === undefined || vat === null) {
        throw new Error("Missing the required parameter 'vat' when calling apiFinanceVatValidatorPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'country': country,
        'vat': vat
      };
      let headerParams = {
        'X-Api-Key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Finance/Vat/Validator', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
