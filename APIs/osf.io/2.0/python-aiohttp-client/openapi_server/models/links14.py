# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Links14(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, doi: str=None, html: str=None, preprint_doi: str=None, _self: str=None):
        """Links14 - a model defined in OpenAPI

        :param doi: The doi of this Links14.
        :param html: The html of this Links14.
        :param preprint_doi: The preprint_doi of this Links14.
        :param _self: The _self of this Links14.
        """
        self.openapi_types = {
            'doi': str,
            'html': str,
            'preprint_doi': str,
            '_self': str
        }

        self.attribute_map = {
            'doi': 'doi',
            'html': 'html',
            'preprint_doi': 'preprint_doi',
            '_self': 'self'
        }

        self._doi = doi
        self._html = html
        self._preprint_doi = preprint_doi
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Links14':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Links_14 of this Links14.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def doi(self):
        """Gets the doi of this Links14.

        The URL representation of the DOI entered by the user for the preprint manuscript.

        :return: The doi of this Links14.
        :rtype: str
        """
        return self._doi

    @doi.setter
    def doi(self, doi):
        """Sets the doi of this Links14.

        The URL representation of the DOI entered by the user for the preprint manuscript.

        :param doi: The doi of this Links14.
        :type doi: str
        """

        self._doi = doi

    @property
    def html(self):
        """Gets the html of this Links14.

        A link to the project on the OSF that was created for the preprint, or from which the preprint was created.

        :return: The html of this Links14.
        :rtype: str
        """
        return self._html

    @html.setter
    def html(self, html):
        """Sets the html of this Links14.

        A link to the project on the OSF that was created for the preprint, or from which the preprint was created.

        :param html: The html of this Links14.
        :type html: str
        """

        self._html = html

    @property
    def preprint_doi(self):
        """Gets the preprint_doi of this Links14.

        The URL representation of the OSF assigned DOI for the preprint.

        :return: The preprint_doi of this Links14.
        :rtype: str
        """
        return self._preprint_doi

    @preprint_doi.setter
    def preprint_doi(self, preprint_doi):
        """Sets the preprint_doi of this Links14.

        The URL representation of the OSF assigned DOI for the preprint.

        :param preprint_doi: The preprint_doi of this Links14.
        :type preprint_doi: str
        """

        self._preprint_doi = preprint_doi

    @property
    def _self(self):
        """Gets the _self of this Links14.

        A link to the detail page for the preprint.

        :return: The _self of this Links14.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this Links14.

        A link to the detail page for the preprint.

        :param _self: The _self of this Links14.
        :type _self: str
        """

        self.__self = _self
