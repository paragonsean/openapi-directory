# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Relationships4(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nodes: str=None, registrations: str=None, users: str=None):
        """Relationships4 - a model defined in OpenAPI

        :param nodes: The nodes of this Relationships4.
        :param registrations: The registrations of this Relationships4.
        :param users: The users of this Relationships4.
        """
        self.openapi_types = {
            'nodes': str,
            'registrations': str,
            'users': str
        }

        self.attribute_map = {
            'nodes': 'nodes',
            'registrations': 'registrations',
            'users': 'users'
        }

        self._nodes = nodes
        self._registrations = registrations
        self._users = users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Relationships4':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Relationships_4 of this Relationships4.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nodes(self):
        """Gets the nodes of this Relationships4.

        A relationship to the nodes affiliated with the institution.

        :return: The nodes of this Relationships4.
        :rtype: str
        """
        return self._nodes

    @nodes.setter
    def nodes(self, nodes):
        """Sets the nodes of this Relationships4.

        A relationship to the nodes affiliated with the institution.

        :param nodes: The nodes of this Relationships4.
        :type nodes: str
        """

        self._nodes = nodes

    @property
    def registrations(self):
        """Gets the registrations of this Relationships4.

        A relationship to the registrations affiliated with the institution.

        :return: The registrations of this Relationships4.
        :rtype: str
        """
        return self._registrations

    @registrations.setter
    def registrations(self, registrations):
        """Sets the registrations of this Relationships4.

        A relationship to the registrations affiliated with the institution.

        :param registrations: The registrations of this Relationships4.
        :type registrations: str
        """

        self._registrations = registrations

    @property
    def users(self):
        """Gets the users of this Relationships4.

        A relationship to the users affiliated with the institution.

        :return: The users of this Relationships4.
        :rtype: str
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this Relationships4.

        A relationship to the users affiliated with the institution.

        :param users: The users of this Relationships4.
        :type users: str
        """

        self._users = users
