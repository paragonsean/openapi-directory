# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Relationships2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branched_from: str=None, initiator: str=None, registration_schema: str=None):
        """Relationships2 - a model defined in OpenAPI

        :param branched_from: The branched_from of this Relationships2.
        :param initiator: The initiator of this Relationships2.
        :param registration_schema: The registration_schema of this Relationships2.
        """
        self.openapi_types = {
            'branched_from': str,
            'initiator': str,
            'registration_schema': str
        }

        self.attribute_map = {
            'branched_from': 'branched_from',
            'initiator': 'initiator',
            'registration_schema': 'registration_schema'
        }

        self._branched_from = branched_from
        self._initiator = initiator
        self._registration_schema = registration_schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Relationships2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Relationships_2 of this Relationships2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branched_from(self):
        """Gets the branched_from of this Relationships2.

        A link to the node that this draft registration was created from.

        :return: The branched_from of this Relationships2.
        :rtype: str
        """
        return self._branched_from

    @branched_from.setter
    def branched_from(self, branched_from):
        """Sets the branched_from of this Relationships2.

        A link to the node that this draft registration was created from.

        :param branched_from: The branched_from of this Relationships2.
        :type branched_from: str
        """

        self._branched_from = branched_from

    @property
    def initiator(self):
        """Gets the initiator of this Relationships2.

        A link to the user who initiated the draft registration.

        :return: The initiator of this Relationships2.
        :rtype: str
        """
        return self._initiator

    @initiator.setter
    def initiator(self, initiator):
        """Sets the initiator of this Relationships2.

        A link to the user who initiated the draft registration.

        :param initiator: The initiator of this Relationships2.
        :type initiator: str
        """

        self._initiator = initiator

    @property
    def registration_schema(self):
        """Gets the registration_schema of this Relationships2.

        A link to the detailed registration schema that this draft conforms to.

        :return: The registration_schema of this Relationships2.
        :rtype: str
        """
        return self._registration_schema

    @registration_schema.setter
    def registration_schema(self, registration_schema):
        """Sets the registration_schema of this Relationships2.

        A link to the detailed registration schema that this draft conforms to.

        :param registration_schema: The registration_schema of this Relationships2.
        :type registration_schema: str
        """

        self._registration_schema = registration_schema
