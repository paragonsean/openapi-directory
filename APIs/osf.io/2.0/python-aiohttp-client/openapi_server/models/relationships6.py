# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Relationships6(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checkout: str=None, comments: str=None, node: str=None, versions: str=None):
        """Relationships6 - a model defined in OpenAPI

        :param checkout: The checkout of this Relationships6.
        :param comments: The comments of this Relationships6.
        :param node: The node of this Relationships6.
        :param versions: The versions of this Relationships6.
        """
        self.openapi_types = {
            'checkout': str,
            'comments': str,
            'node': str,
            'versions': str
        }

        self.attribute_map = {
            'checkout': 'checkout',
            'comments': 'comments',
            'node': 'node',
            'versions': 'versions'
        }

        self._checkout = checkout
        self._comments = comments
        self._node = node
        self._versions = versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Relationships6':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Relationships_6 of this Relationships6.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checkout(self):
        """Gets the checkout of this Relationships6.

        A link to the user who checked out the file.

        :return: The checkout of this Relationships6.
        :rtype: str
        """
        return self._checkout

    @checkout.setter
    def checkout(self, checkout):
        """Sets the checkout of this Relationships6.

        A link to the user who checked out the file.

        :param checkout: The checkout of this Relationships6.
        :type checkout: str
        """

        self._checkout = checkout

    @property
    def comments(self):
        """Gets the comments of this Relationships6.

        A link to the comments on the file.

        :return: The comments of this Relationships6.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this Relationships6.

        A link to the comments on the file.

        :param comments: The comments of this Relationships6.
        :type comments: str
        """

        self._comments = comments

    @property
    def node(self):
        """Gets the node of this Relationships6.

        A link to the node the file is on.

        :return: The node of this Relationships6.
        :rtype: str
        """
        return self._node

    @node.setter
    def node(self, node):
        """Sets the node of this Relationships6.

        A link to the node the file is on.

        :param node: The node of this Relationships6.
        :type node: str
        """

        self._node = node

    @property
    def versions(self):
        """Gets the versions of this Relationships6.

        A link to the versions of the file.

        :return: The versions of this Relationships6.
        :rtype: str
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this Relationships6.

        A link to the versions of the file.

        :param versions: The versions of this Relationships6.
        :type versions: str
        """

        self._versions = versions
