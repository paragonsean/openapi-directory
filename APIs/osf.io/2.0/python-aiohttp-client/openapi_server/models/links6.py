# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Links6(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delete: str=None, download: str=None, info: str=None, move: str=None, new_folder: str=None, _self: str=None, upload: str=None):
        """Links6 - a model defined in OpenAPI

        :param delete: The delete of this Links6.
        :param download: The download of this Links6.
        :param info: The info of this Links6.
        :param move: The move of this Links6.
        :param new_folder: The new_folder of this Links6.
        :param _self: The _self of this Links6.
        :param upload: The upload of this Links6.
        """
        self.openapi_types = {
            'delete': str,
            'download': str,
            'info': str,
            'move': str,
            'new_folder': str,
            '_self': str,
            'upload': str
        }

        self.attribute_map = {
            'delete': 'delete',
            'download': 'download',
            'info': 'info',
            'move': 'move',
            'new_folder': 'new_folder',
            '_self': 'self',
            'upload': 'upload'
        }

        self._delete = delete
        self._download = download
        self._info = info
        self._move = move
        self._new_folder = new_folder
        self.__self = _self
        self._upload = upload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Links6':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Links_6 of this Links6.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delete(self):
        """Gets the delete of this Links6.

        The Waterbutler API route for file deletions.

        :return: The delete of this Links6.
        :rtype: str
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this Links6.

        The Waterbutler API route for file deletions.

        :param delete: The delete of this Links6.
        :type delete: str
        """

        self._delete = delete

    @property
    def download(self):
        """Gets the download of this Links6.

        The Waterbutler API route for file downloads.

        :return: The download of this Links6.
        :rtype: str
        """
        return self._download

    @download.setter
    def download(self, download):
        """Sets the download of this Links6.

        The Waterbutler API route for file downloads.

        :param download: The download of this Links6.
        :type download: str
        """

        self._download = download

    @property
    def info(self):
        """Gets the info of this Links6.

        A link to the page to view a file's information or a folder's contents.

        :return: The info of this Links6.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this Links6.

        A link to the page to view a file's information or a folder's contents.

        :param info: The info of this Links6.
        :type info: str
        """

        self._info = info

    @property
    def move(self):
        """Gets the move of this Links6.

        The Waterbutler API route for file moves.

        :return: The move of this Links6.
        :rtype: str
        """
        return self._move

    @move.setter
    def move(self, move):
        """Sets the move of this Links6.

        The Waterbutler API route for file moves.

        :param move: The move of this Links6.
        :type move: str
        """

        self._move = move

    @property
    def new_folder(self):
        """Gets the new_folder of this Links6.

        The Waterbutler API route for creating a new subfolder (does not exist for files).

        :return: The new_folder of this Links6.
        :rtype: str
        """
        return self._new_folder

    @new_folder.setter
    def new_folder(self, new_folder):
        """Sets the new_folder of this Links6.

        The Waterbutler API route for creating a new subfolder (does not exist for files).

        :param new_folder: The new_folder of this Links6.
        :type new_folder: str
        """

        self._new_folder = new_folder

    @property
    def _self(self):
        """Gets the _self of this Links6.

        A link to the detail page for the file.

        :return: The _self of this Links6.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this Links6.

        A link to the detail page for the file.

        :param _self: The _self of this Links6.
        :type _self: str
        """

        self.__self = _self

    @property
    def upload(self):
        """Gets the upload of this Links6.

        The Waterbutler API route for file uploads.

        :return: The upload of this Links6.
        :rtype: str
        """
        return self._upload

    @upload.setter
    def upload(self, upload):
        """Sets the upload of this Links6.

        The Waterbutler API route for file uploads.

        :param upload: The upload of this Links6.
        :type upload: str
        """

        self._upload = upload
