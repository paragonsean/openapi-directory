# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Relationships15(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, licenses_acceptable: str=None, preprints: str=None, taxonomies: str=None):
        """Relationships15 - a model defined in OpenAPI

        :param licenses_acceptable: The licenses_acceptable of this Relationships15.
        :param preprints: The preprints of this Relationships15.
        :param taxonomies: The taxonomies of this Relationships15.
        """
        self.openapi_types = {
            'licenses_acceptable': str,
            'preprints': str,
            'taxonomies': str
        }

        self.attribute_map = {
            'licenses_acceptable': 'licenses_acceptable',
            'preprints': 'preprints',
            'taxonomies': 'taxonomies'
        }

        self._licenses_acceptable = licenses_acceptable
        self._preprints = preprints
        self._taxonomies = taxonomies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Relationships15':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Relationships_15 of this Relationships15.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def licenses_acceptable(self):
        """Gets the licenses_acceptable of this Relationships15.

        A link to licenses the preprint provider allows.

        :return: The licenses_acceptable of this Relationships15.
        :rtype: str
        """
        return self._licenses_acceptable

    @licenses_acceptable.setter
    def licenses_acceptable(self, licenses_acceptable):
        """Sets the licenses_acceptable of this Relationships15.

        A link to licenses the preprint provider allows.

        :param licenses_acceptable: The licenses_acceptable of this Relationships15.
        :type licenses_acceptable: str
        """

        self._licenses_acceptable = licenses_acceptable

    @property
    def preprints(self):
        """Gets the preprints of this Relationships15.

        A link to the preprint list page for the preprint provider.

        :return: The preprints of this Relationships15.
        :rtype: str
        """
        return self._preprints

    @preprints.setter
    def preprints(self, preprints):
        """Sets the preprints of this Relationships15.

        A link to the preprint list page for the preprint provider.

        :param preprints: The preprints of this Relationships15.
        :type preprints: str
        """

        self._preprints = preprints

    @property
    def taxonomies(self):
        """Gets the taxonomies of this Relationships15.

        A link to the taxonomies the preprint provider allows.

        :return: The taxonomies of this Relationships15.
        :rtype: str
        """
        return self._taxonomies

    @taxonomies.setter
    def taxonomies(self, taxonomies):
        """Sets the taxonomies of this Relationships15.

        A link to the taxonomies the preprint provider allows.

        :param taxonomies: The taxonomies of this Relationships15.
        :type taxonomies: str
        """

        self._taxonomies = taxonomies
