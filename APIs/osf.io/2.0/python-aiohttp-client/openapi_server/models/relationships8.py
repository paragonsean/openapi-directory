# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Relationships8(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, institutions: str=None, nodes: str=None):
        """Relationships8 - a model defined in OpenAPI

        :param institutions: The institutions of this Relationships8.
        :param nodes: The nodes of this Relationships8.
        """
        self.openapi_types = {
            'institutions': str,
            'nodes': str
        }

        self.attribute_map = {
            'institutions': 'institutions',
            'nodes': 'nodes'
        }

        self._institutions = institutions
        self._nodes = nodes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Relationships8':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Relationships_8 of this Relationships8.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def institutions(self):
        """Gets the institutions of this Relationships8.

        A link to the list of institutions the user is affiliated with.

        :return: The institutions of this Relationships8.
        :rtype: str
        """
        return self._institutions

    @institutions.setter
    def institutions(self, institutions):
        """Sets the institutions of this Relationships8.

        A link to the list of institutions the user is affiliated with.

        :param institutions: The institutions of this Relationships8.
        :type institutions: str
        """

        self._institutions = institutions

    @property
    def nodes(self):
        """Gets the nodes of this Relationships8.

        A link to the list of nodes the user is a contributor to.

        :return: The nodes of this Relationships8.
        :rtype: str
        """
        return self._nodes

    @nodes.setter
    def nodes(self, nodes):
        """Sets the nodes of this Relationships8.

        A link to the list of nodes the user is a contributor to.

        :param nodes: The nodes of this Relationships8.
        :type nodes: str
        """

        self._nodes = nodes
