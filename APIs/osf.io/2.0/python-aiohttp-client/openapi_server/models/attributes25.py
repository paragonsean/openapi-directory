# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Attributes25(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_created: int=None, date_modified: int=None, date_submitted: int=None, is_original_response: bool=None, is_pending_current_user_approval: bool=None, reviews_state: str=None, revision_justification: str=None, revision_responses: List[object]=None, updated_response_keys: List[object]=None):
        """Attributes25 - a model defined in OpenAPI

        :param date_created: The date_created of this Attributes25.
        :param date_modified: The date_modified of this Attributes25.
        :param date_submitted: The date_submitted of this Attributes25.
        :param is_original_response: The is_original_response of this Attributes25.
        :param is_pending_current_user_approval: The is_pending_current_user_approval of this Attributes25.
        :param reviews_state: The reviews_state of this Attributes25.
        :param revision_justification: The revision_justification of this Attributes25.
        :param revision_responses: The revision_responses of this Attributes25.
        :param updated_response_keys: The updated_response_keys of this Attributes25.
        """
        self.openapi_types = {
            'date_created': int,
            'date_modified': int,
            'date_submitted': int,
            'is_original_response': bool,
            'is_pending_current_user_approval': bool,
            'reviews_state': str,
            'revision_justification': str,
            'revision_responses': List[object],
            'updated_response_keys': List[object]
        }

        self.attribute_map = {
            'date_created': 'date_created',
            'date_modified': 'date_modified',
            'date_submitted': 'date_submitted',
            'is_original_response': 'is_original_response',
            'is_pending_current_user_approval': 'is_pending_current_user_approval',
            'reviews_state': 'reviews_state',
            'revision_justification': 'revision_justification',
            'revision_responses': 'revision_responses',
            'updated_response_keys': 'updated_response_keys'
        }

        self._date_created = date_created
        self._date_modified = date_modified
        self._date_submitted = date_submitted
        self._is_original_response = is_original_response
        self._is_pending_current_user_approval = is_pending_current_user_approval
        self._reviews_state = reviews_state
        self._revision_justification = revision_justification
        self._revision_responses = revision_responses
        self._updated_response_keys = updated_response_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attributes25':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attributes_25 of this Attributes25.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_created(self):
        """Gets the date_created of this Attributes25.

        The date the Schema Response was created

        :return: The date_created of this Attributes25.
        :rtype: int
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Attributes25.

        The date the Schema Response was created

        :param date_created: The date_created of this Attributes25.
        :type date_created: int
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this Attributes25.

        The date the Schema Response was most recently changed.

        :return: The date_modified of this Attributes25.
        :rtype: int
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this Attributes25.

        The date the Schema Response was most recently changed.

        :param date_modified: The date_modified of this Attributes25.
        :type date_modified: int
        """

        self._date_modified = date_modified

    @property
    def date_submitted(self):
        """Gets the date_submitted of this Attributes25.

        The date the Schema Response was submitted for approval.

        :return: The date_submitted of this Attributes25.
        :rtype: int
        """
        return self._date_submitted

    @date_submitted.setter
    def date_submitted(self, date_submitted):
        """Sets the date_submitted of this Attributes25.

        The date the Schema Response was submitted for approval.

        :param date_submitted: The date_submitted of this Attributes25.
        :type date_submitted: int
        """

        self._date_submitted = date_submitted

    @property
    def is_original_response(self):
        """Gets the is_original_response of this Attributes25.

        A bool that represents whether the Schema Response is the original one that was made when the registration was created.

        :return: The is_original_response of this Attributes25.
        :rtype: bool
        """
        return self._is_original_response

    @is_original_response.setter
    def is_original_response(self, is_original_response):
        """Sets the is_original_response of this Attributes25.

        A bool that represents whether the Schema Response is the original one that was made when the registration was created.

        :param is_original_response: The is_original_response of this Attributes25.
        :type is_original_response: bool
        """

        self._is_original_response = is_original_response

    @property
    def is_pending_current_user_approval(self):
        """Gets the is_pending_current_user_approval of this Attributes25.

        A bool that represents whether the Schema Response needs the current user to approve the state transition.

        :return: The is_pending_current_user_approval of this Attributes25.
        :rtype: bool
        """
        return self._is_pending_current_user_approval

    @is_pending_current_user_approval.setter
    def is_pending_current_user_approval(self, is_pending_current_user_approval):
        """Sets the is_pending_current_user_approval of this Attributes25.

        A bool that represents whether the Schema Response needs the current user to approve the state transition.

        :param is_pending_current_user_approval: The is_pending_current_user_approval of this Attributes25.
        :type is_pending_current_user_approval: bool
        """

        self._is_pending_current_user_approval = is_pending_current_user_approval

    @property
    def reviews_state(self):
        """Gets the reviews_state of this Attributes25.

        A string that represents Schema Response state. `initial` is the state of a Schema Response on a newly registered Registration, to edit a Schema Response you must create a Schema Response Action that triggers a new submission.

        :return: The reviews_state of this Attributes25.
        :rtype: str
        """
        return self._reviews_state

    @reviews_state.setter
    def reviews_state(self, reviews_state):
        """Sets the reviews_state of this Attributes25.

        A string that represents Schema Response state. `initial` is the state of a Schema Response on a newly registered Registration, to edit a Schema Response you must create a Schema Response Action that triggers a new submission.

        :param reviews_state: The reviews_state of this Attributes25.
        :type reviews_state: str
        """
        allowed_values = ["initial", "in_progress", "approved", "pending_moderation"]  # noqa: E501
        if reviews_state not in allowed_values:
            raise ValueError(
                "Invalid value for `reviews_state` ({0}), must be one of {1}"
                .format(reviews_state, allowed_values)
            )

        self._reviews_state = reviews_state

    @property
    def revision_justification(self):
        """Gets the revision_justification of this Attributes25.

        A user provided string representing the reason a new Schema Response was needed.

        :return: The revision_justification of this Attributes25.
        :rtype: str
        """
        return self._revision_justification

    @revision_justification.setter
    def revision_justification(self, revision_justification):
        """Sets the revision_justification of this Attributes25.

        A user provided string representing the reason a new Schema Response was needed.

        :param revision_justification: The revision_justification of this Attributes25.
        :type revision_justification: str
        """

        self._revision_justification = revision_justification

    @property
    def revision_responses(self):
        """Gets the revision_responses of this Attributes25.

        A dictionary object representing responses to to the revision where the key is the block key for that the response. For example in the registration response `{\"q1\": \"Answer 1\"}` the block key is `q1`..

        :return: The revision_responses of this Attributes25.
        :rtype: List[object]
        """
        return self._revision_responses

    @revision_responses.setter
    def revision_responses(self, revision_responses):
        """Sets the revision_responses of this Attributes25.

        A dictionary object representing responses to to the revision where the key is the block key for that the response. For example in the registration response `{\"q1\": \"Answer 1\"}` the block key is `q1`..

        :param revision_responses: The revision_responses of this Attributes25.
        :type revision_responses: List[object]
        """

        self._revision_responses = revision_responses

    @property
    def updated_response_keys(self):
        """Gets the updated_response_keys of this Attributes25.

        A list of strings which the response keys for Registration Response Blocks that were updated from the previous schema.

        :return: The updated_response_keys of this Attributes25.
        :rtype: List[object]
        """
        return self._updated_response_keys

    @updated_response_keys.setter
    def updated_response_keys(self, updated_response_keys):
        """Sets the updated_response_keys of this Attributes25.

        A list of strings which the response keys for Registration Response Blocks that were updated from the previous schema.

        :param updated_response_keys: The updated_response_keys of this Attributes25.
        :type updated_response_keys: List[object]
        """

        self._updated_response_keys = updated_response_keys
