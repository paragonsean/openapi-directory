# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Attributes20(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anonymous: bool=True, date_created: datetime=None, key: str=None, name: str='Shared project link'):
        """Attributes20 - a model defined in OpenAPI

        :param anonymous: The anonymous of this Attributes20.
        :param date_created: The date_created of this Attributes20.
        :param key: The key of this Attributes20.
        :param name: The name of this Attributes20.
        """
        self.openapi_types = {
            'anonymous': bool,
            'date_created': datetime,
            'key': str,
            'name': str
        }

        self.attribute_map = {
            'anonymous': 'anonymous',
            'date_created': 'date_created',
            'key': 'key',
            'name': 'name'
        }

        self._anonymous = anonymous
        self._date_created = date_created
        self._key = key
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attributes20':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attributes_20 of this Attributes20.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anonymous(self):
        """Gets the anonymous of this Attributes20.

        Whether or not the view only link has anonymized contributors

        :return: The anonymous of this Attributes20.
        :rtype: bool
        """
        return self._anonymous

    @anonymous.setter
    def anonymous(self, anonymous):
        """Sets the anonymous of this Attributes20.

        Whether or not the view only link has anonymized contributors

        :param anonymous: The anonymous of this Attributes20.
        :type anonymous: bool
        """

        self._anonymous = anonymous

    @property
    def date_created(self):
        """Gets the date_created of this Attributes20.

        The time at which the view only link was created, as an iso8601 formatted timestamp.

        :return: The date_created of this Attributes20.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Attributes20.

        The time at which the view only link was created, as an iso8601 formatted timestamp.

        :param date_created: The date_created of this Attributes20.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def key(self):
        """Gets the key of this Attributes20.

        The view only key

        :return: The key of this Attributes20.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Attributes20.

        The view only key

        :param key: The key of this Attributes20.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this Attributes20.

        The name of the view only link

        :return: The name of this Attributes20.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Attributes20.

        The name of the view only link

        :param name: The name of this Attributes20.
        :type name: str
        """

        self._name = name
