/*
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SchemaResponses;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SchemaResponsesApi
 */
@Disabled
public class SchemaResponsesApiTest {

    private final SchemaResponsesApi api = new SchemaResponsesApi();

    /**
     * Delete a Incomplete Schema Response
     *
     * This endpoint deletes a new Schema Response. Schema Responses can only be deleted in the &#x60;in_progress&#x60; state. Once a Schema Response is transitioned to an &#x60;approved&#x60; it is immutable and another Schema Response must be created to update the Schema Response for that registration. #### Returns Returns a JSON object with a &#x60;data&#x60; key containing an updated representation of the requested Schema Response, if the request is successful. #### Errors If the request is unsuccessful, an &#x60;errors&#x60; key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void schemaResponseDeleteTest() throws ApiException {
        String schemaResponseId = null;
        api.schemaResponseDelete(schemaResponseId);
        // TODO: test validations
    }

    /**
     * Update a Registration&#39;s Schema Response
     *
     * Patching to this endpoint allows one to directly edit the revision responses on the Schema Response of a Registration if that Schema Response is in an &#x60;in_progress&#x60; state. #### Returns Returns a JSON object with a &#x60;data&#x60; key containing an updated representation of the requested Schema Response, if the request is successful. #### Errors If the request is unsuccessful, an &#x60;errors&#x60; key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void schemaResponsePatchTest() throws ApiException {
        String schemaResponseId = null;
        SchemaResponses schemaResponses = null;
        SchemaResponses response = api.schemaResponsePatch(schemaResponseId, schemaResponses);
        // TODO: test validations
    }

    /**
     * Create a new Schema Response
     *
     * This endpoint creates a new Schema Response with an &#x60;in_progress&#x60; state. A new response can only be created if the current schema response is in an &#x60;approved&#x60; state. #### Returns Returns a JSON object with a &#x60;data&#x60; key containing an updated representation of the requested Schema Response, if the request is successful. #### Errors If the request is unsuccessful, an &#x60;errors&#x60; key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void schemaResponsePpostTest() throws ApiException {
        SchemaResponses schemaResponses = null;
        SchemaResponses response = api.schemaResponsePpost(schemaResponses);
        // TODO: test validations
    }

    /**
     * List all Schema Responses
     *
     * This retrieves a paginated list of all active Schema Responses that are public. #### Returns Returns a JSON object containing &#x60;data&#x60; and &#x60;links&#x60; keys. The &#x60;data&#x60; key contains an array of 10 Schema Responses. Each resource in the array is a separate Registration Schemas object. The &#x60;links&#x60; key contains a dictionary of links that can be used for [pagination](#tag/Pagination). #### Errors This request should never return an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void schemaResponsesListTest() throws ApiException {
        SchemaResponses response = api.schemaResponsesList();
        // TODO: test validations
    }

    /**
     * Retrieve a Schema Response
     *
     * This retrieves a single Schema response using it&#39;s id. #### Returns Returns a JSON object with a &#x60;data&#x60; key containing the representation of the requested Schema Response, if the request is successful. #### Errors If the request is unsuccessful, an &#x60;errors&#x60; key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void schemaResponsesReadTest() throws ApiException {
        String schemaResponseId = null;
        SchemaResponses response = api.schemaResponsesRead(schemaResponseId);
        // TODO: test validations
    }

}
