/*
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.License;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LicensesApi
 */
@Disabled
public class LicensesApiTest {

    private final LicensesApi api = new LicensesApi();

    /**
     * List all licenses
     *
     * A paginated list of licenses. The returned licenses are sorted by their name. #### Returns Returns a JSON object containing &#x60;data&#x60; and &#x60;links&#x60; keys. The &#x60;data&#x60; key contains an array of 10 licenses. Each resource in the array is a separate license object and contains the full representation of the license, meaning additional requests to a license&#39;s detail view are not necessary.  The &#x60;links&#x60; key contains a dictionary of links that can be used for [pagination](#tag/Pagination).  This request should never return an error. #### Filtering You can optionally request that the response only include licenses that match your filters by utilizing the &#x60;filter&#x60; query parameter, e.g. [https://api.osf.io/v2/licenses/?filter[name]&#x3D;apache](https://api.osf.io/v2/licenses/?filter[name]&#x3D;apache).  Licenses may be filtered by their &#x60;id&#x60;, and &#x60;name&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseListTest() throws ApiException {
        List<License> response = api.licenseList();
        // TODO: test validations
    }

    /**
     * Retrieve a license
     *
     * Retrieves the details of a license. #### Returns Returns a JSON object with a &#x60;data&#x60; key containing the representation of the requested license, if the request is successful.  If the request is unsuccessful, an &#x60;errors&#x60; key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licensesReadTest() throws ApiException {
        String licenseId = null;
        License response = api.licensesRead(licenseId);
        // TODO: test validations
    }

}
