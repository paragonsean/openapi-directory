/*
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Relationships12
 */
public class Relationships12Test {
    private final Relationships12 model = new Relationships12();

    /**
     * Model tests for Relationships12
     */
    @Test
    public void testRelationships12() {
        // TODO: test Relationships12
    }

    /**
     * Test the property 'affiliatedInstitutions'
     */
    @Test
    public void affiliatedInstitutionsTest() {
        // TODO: test affiliatedInstitutions
    }

    /**
     * Test the property 'children'
     */
    @Test
    public void childrenTest() {
        // TODO: test children
    }

    /**
     * Test the property 'citation'
     */
    @Test
    public void citationTest() {
        // TODO: test citation
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'contributors'
     */
    @Test
    public void contributorsTest() {
        // TODO: test contributors
    }

    /**
     * Test the property 'files'
     */
    @Test
    public void filesTest() {
        // TODO: test files
    }

    /**
     * Test the property 'forks'
     */
    @Test
    public void forksTest() {
        // TODO: test forks
    }

    /**
     * Test the property 'identifiers'
     */
    @Test
    public void identifiersTest() {
        // TODO: test identifiers
    }

    /**
     * Test the property 'linkedNodes'
     */
    @Test
    public void linkedNodesTest() {
        // TODO: test linkedNodes
    }

    /**
     * Test the property 'logs'
     */
    @Test
    public void logsTest() {
        // TODO: test logs
    }

    /**
     * Test the property 'nodeLinks'
     */
    @Test
    public void nodeLinksTest() {
        // TODO: test nodeLinks
    }

    /**
     * Test the property 'parent'
     */
    @Test
    public void parentTest() {
        // TODO: test parent
    }

    /**
     * Test the property 'registeredBy'
     */
    @Test
    public void registeredByTest() {
        // TODO: test registeredBy
    }

    /**
     * Test the property 'registeredFrom'
     */
    @Test
    public void registeredFromTest() {
        // TODO: test registeredFrom
    }

    /**
     * Test the property 'registrationSchema'
     */
    @Test
    public void registrationSchemaTest() {
        // TODO: test registrationSchema
    }

    /**
     * Test the property 'root'
     */
    @Test
    public void rootTest() {
        // TODO: test root
    }

    /**
     * Test the property 'viewOnlyLinks'
     */
    @Test
    public void viewOnlyLinksTest() {
        // TODO: test viewOnlyLinks
    }

    /**
     * Test the property 'wikis'
     */
    @Test
    public void wikisTest() {
        // TODO: test wikis
    }

}
