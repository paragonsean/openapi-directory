/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_30.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_30::OAIAttributes_30(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_30::OAIAttributes_30() {
    this->initializeModel();
}

OAIAttributes_30::~OAIAttributes_30() {}

void OAIAttributes_30::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_profile_url_isSet = false;
    m_profile_url_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;
}

void OAIAttributes_30::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_30::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_profile_url_isValid = ::OpenAPI::fromJsonValue(m_profile_url, json[QString("profile_url")]);
    m_profile_url_isSet = !json[QString("profile_url")].isNull() && m_profile_url_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;
}

QString OAIAttributes_30::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_30::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_profile_url_isSet) {
        obj.insert(QString("profile_url"), ::OpenAPI::toJsonValue(m_profile_url));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    return obj;
}

QString OAIAttributes_30::getDisplayName() const {
    return m_display_name;
}
void OAIAttributes_30::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIAttributes_30::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIAttributes_30::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIAttributes_30::getProfileUrl() const {
    return m_profile_url;
}
void OAIAttributes_30::setProfileUrl(const QString &profile_url) {
    m_profile_url = profile_url;
    m_profile_url_isSet = true;
}

bool OAIAttributes_30::is_profile_url_Set() const{
    return m_profile_url_isSet;
}

bool OAIAttributes_30::is_profile_url_Valid() const{
    return m_profile_url_isValid;
}

QString OAIAttributes_30::getProvider() const {
    return m_provider;
}
void OAIAttributes_30::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAIAttributes_30::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAIAttributes_30::is_provider_Valid() const{
    return m_provider_isValid;
}

bool OAIAttributes_30::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_30::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_display_name_isValid && m_provider_isValid && true;
}

} // namespace OpenAPI
