/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttributes_10.h
 *
 * The properties of the node entity.
 */

#ifndef OAIAttributes_10_H
#define OAIAttributes_10_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAttributes_10 : public OAIObject {
public:
    OAIAttributes_10();
    OAIAttributes_10(QString json);
    ~OAIAttributes_10() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    bool isCollection() const;
    void setCollection(const bool &collection);
    bool is_collection_Set() const;
    bool is_collection_Valid() const;

    bool isCurrentUserCanComment() const;
    void setCurrentUserCanComment(const bool &current_user_can_comment);
    bool is_current_user_can_comment_Set() const;
    bool is_current_user_can_comment_Valid() const;

    QList<QString> getCurrentUserPermissions() const;
    void setCurrentUserPermissions(const QList<QString> &current_user_permissions);
    bool is_current_user_permissions_Set() const;
    bool is_current_user_permissions_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateModified() const;
    void setDateModified(const QDateTime &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isFork() const;
    void setFork(const bool &fork);
    bool is_fork_Set() const;
    bool is_fork_Valid() const;

    QDateTime getForkedDate() const;
    void setForkedDate(const QDateTime &forked_date);
    bool is_forked_date_Set() const;
    bool is_forked_date_Valid() const;

    QString getNodeLicense() const;
    void setNodeLicense(const QString &node_license);
    bool is_node_license_Set() const;
    bool is_node_license_Valid() const;

    bool isPreprint() const;
    void setPreprint(const bool &preprint);
    bool is_preprint_Set() const;
    bool is_preprint_Valid() const;

    bool isRPublic() const;
    void setRPublic(const bool &r_public);
    bool is_r_public_Set() const;
    bool is_r_public_Valid() const;

    bool isRegistration() const;
    void setRegistration(const bool &registration);
    bool is_registration_Set() const;
    bool is_registration_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTemplateFrom() const;
    void setTemplateFrom(const QString &template_from);
    bool is_template_from_Set() const;
    bool is_template_from_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    bool m_collection;
    bool m_collection_isSet;
    bool m_collection_isValid;

    bool m_current_user_can_comment;
    bool m_current_user_can_comment_isSet;
    bool m_current_user_can_comment_isValid;

    QList<QString> m_current_user_permissions;
    bool m_current_user_permissions_isSet;
    bool m_current_user_permissions_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_fork;
    bool m_fork_isSet;
    bool m_fork_isValid;

    QDateTime m_forked_date;
    bool m_forked_date_isSet;
    bool m_forked_date_isValid;

    QString m_node_license;
    bool m_node_license_isSet;
    bool m_node_license_isValid;

    bool m_preprint;
    bool m_preprint_isSet;
    bool m_preprint_isValid;

    bool m_r_public;
    bool m_r_public_isSet;
    bool m_r_public_isValid;

    bool m_registration;
    bool m_registration_isSet;
    bool m_registration_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_template_from;
    bool m_template_from_isSet;
    bool m_template_from_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttributes_10)

#endif // OAIAttributes_10_H
