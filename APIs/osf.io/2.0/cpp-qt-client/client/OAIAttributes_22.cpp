/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_22.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_22::OAIAttributes_22(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_22::OAIAttributes_22() {
    this->initializeModel();
}

OAIAttributes_22::~OAIAttributes_22() {}

void OAIAttributes_22::initializeModel() {

    m_advisory_board_isSet = false;
    m_advisory_board_isValid = false;

    m_banner_path_isSet = false;
    m_banner_path_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_domain_redirect_enabled_isSet = false;
    m_domain_redirect_enabled_isValid = false;

    m_email_contact_isSet = false;
    m_email_contact_isValid = false;

    m_email_support_isSet = false;
    m_email_support_isValid = false;

    m_example_isSet = false;
    m_example_isValid = false;

    m_logo_path_isSet = false;
    m_logo_path_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_social_facebook_isSet = false;
    m_social_facebook_isValid = false;

    m_social_instagram_isSet = false;
    m_social_instagram_isValid = false;

    m_subjects_acceptable_isSet = false;
    m_subjects_acceptable_isValid = false;
}

void OAIAttributes_22::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_22::fromJsonObject(QJsonObject json) {

    m_advisory_board_isValid = ::OpenAPI::fromJsonValue(m_advisory_board, json[QString("advisory_board")]);
    m_advisory_board_isSet = !json[QString("advisory_board")].isNull() && m_advisory_board_isValid;

    m_banner_path_isValid = ::OpenAPI::fromJsonValue(m_banner_path, json[QString("banner_path")]);
    m_banner_path_isSet = !json[QString("banner_path")].isNull() && m_banner_path_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_domain_redirect_enabled_isValid = ::OpenAPI::fromJsonValue(m_domain_redirect_enabled, json[QString("domain_redirect_enabled")]);
    m_domain_redirect_enabled_isSet = !json[QString("domain_redirect_enabled")].isNull() && m_domain_redirect_enabled_isValid;

    m_email_contact_isValid = ::OpenAPI::fromJsonValue(m_email_contact, json[QString("email_contact")]);
    m_email_contact_isSet = !json[QString("email_contact")].isNull() && m_email_contact_isValid;

    m_email_support_isValid = ::OpenAPI::fromJsonValue(m_email_support, json[QString("email_support")]);
    m_email_support_isSet = !json[QString("email_support")].isNull() && m_email_support_isValid;

    m_example_isValid = ::OpenAPI::fromJsonValue(m_example, json[QString("example")]);
    m_example_isSet = !json[QString("example")].isNull() && m_example_isValid;

    m_logo_path_isValid = ::OpenAPI::fromJsonValue(m_logo_path, json[QString("logo_path")]);
    m_logo_path_isSet = !json[QString("logo_path")].isNull() && m_logo_path_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_social_facebook_isValid = ::OpenAPI::fromJsonValue(m_social_facebook, json[QString("social_facebook")]);
    m_social_facebook_isSet = !json[QString("social_facebook")].isNull() && m_social_facebook_isValid;

    m_social_instagram_isValid = ::OpenAPI::fromJsonValue(m_social_instagram, json[QString("social_instagram")]);
    m_social_instagram_isSet = !json[QString("social_instagram")].isNull() && m_social_instagram_isValid;

    m_subjects_acceptable_isValid = ::OpenAPI::fromJsonValue(m_subjects_acceptable, json[QString("subjects_acceptable")]);
    m_subjects_acceptable_isSet = !json[QString("subjects_acceptable")].isNull() && m_subjects_acceptable_isValid;
}

QString OAIAttributes_22::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_22::asJsonObject() const {
    QJsonObject obj;
    if (m_advisory_board_isSet) {
        obj.insert(QString("advisory_board"), ::OpenAPI::toJsonValue(m_advisory_board));
    }
    if (m_banner_path_isSet) {
        obj.insert(QString("banner_path"), ::OpenAPI::toJsonValue(m_banner_path));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_domain_redirect_enabled_isSet) {
        obj.insert(QString("domain_redirect_enabled"), ::OpenAPI::toJsonValue(m_domain_redirect_enabled));
    }
    if (m_email_contact_isSet) {
        obj.insert(QString("email_contact"), ::OpenAPI::toJsonValue(m_email_contact));
    }
    if (m_email_support_isSet) {
        obj.insert(QString("email_support"), ::OpenAPI::toJsonValue(m_email_support));
    }
    if (m_example_isSet) {
        obj.insert(QString("example"), ::OpenAPI::toJsonValue(m_example));
    }
    if (m_logo_path_isSet) {
        obj.insert(QString("logo_path"), ::OpenAPI::toJsonValue(m_logo_path));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_social_facebook_isSet) {
        obj.insert(QString("social_facebook"), ::OpenAPI::toJsonValue(m_social_facebook));
    }
    if (m_social_instagram_isSet) {
        obj.insert(QString("social_instagram"), ::OpenAPI::toJsonValue(m_social_instagram));
    }
    if (m_subjects_acceptable_isSet) {
        obj.insert(QString("subjects_acceptable"), ::OpenAPI::toJsonValue(m_subjects_acceptable));
    }
    return obj;
}

QString OAIAttributes_22::getAdvisoryBoard() const {
    return m_advisory_board;
}
void OAIAttributes_22::setAdvisoryBoard(const QString &advisory_board) {
    m_advisory_board = advisory_board;
    m_advisory_board_isSet = true;
}

bool OAIAttributes_22::is_advisory_board_Set() const{
    return m_advisory_board_isSet;
}

bool OAIAttributes_22::is_advisory_board_Valid() const{
    return m_advisory_board_isValid;
}

QString OAIAttributes_22::getBannerPath() const {
    return m_banner_path;
}
void OAIAttributes_22::setBannerPath(const QString &banner_path) {
    m_banner_path = banner_path;
    m_banner_path_isSet = true;
}

bool OAIAttributes_22::is_banner_path_Set() const{
    return m_banner_path_isSet;
}

bool OAIAttributes_22::is_banner_path_Valid() const{
    return m_banner_path_isValid;
}

QString OAIAttributes_22::getDescription() const {
    return m_description;
}
void OAIAttributes_22::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAttributes_22::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAttributes_22::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIAttributes_22::getDomain() const {
    return m_domain;
}
void OAIAttributes_22::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAIAttributes_22::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIAttributes_22::is_domain_Valid() const{
    return m_domain_isValid;
}

bool OAIAttributes_22::isDomainRedirectEnabled() const {
    return m_domain_redirect_enabled;
}
void OAIAttributes_22::setDomainRedirectEnabled(const bool &domain_redirect_enabled) {
    m_domain_redirect_enabled = domain_redirect_enabled;
    m_domain_redirect_enabled_isSet = true;
}

bool OAIAttributes_22::is_domain_redirect_enabled_Set() const{
    return m_domain_redirect_enabled_isSet;
}

bool OAIAttributes_22::is_domain_redirect_enabled_Valid() const{
    return m_domain_redirect_enabled_isValid;
}

QString OAIAttributes_22::getEmailContact() const {
    return m_email_contact;
}
void OAIAttributes_22::setEmailContact(const QString &email_contact) {
    m_email_contact = email_contact;
    m_email_contact_isSet = true;
}

bool OAIAttributes_22::is_email_contact_Set() const{
    return m_email_contact_isSet;
}

bool OAIAttributes_22::is_email_contact_Valid() const{
    return m_email_contact_isValid;
}

QString OAIAttributes_22::getEmailSupport() const {
    return m_email_support;
}
void OAIAttributes_22::setEmailSupport(const QString &email_support) {
    m_email_support = email_support;
    m_email_support_isSet = true;
}

bool OAIAttributes_22::is_email_support_Set() const{
    return m_email_support_isSet;
}

bool OAIAttributes_22::is_email_support_Valid() const{
    return m_email_support_isValid;
}

QString OAIAttributes_22::getExample() const {
    return m_example;
}
void OAIAttributes_22::setExample(const QString &example) {
    m_example = example;
    m_example_isSet = true;
}

bool OAIAttributes_22::is_example_Set() const{
    return m_example_isSet;
}

bool OAIAttributes_22::is_example_Valid() const{
    return m_example_isValid;
}

QString OAIAttributes_22::getLogoPath() const {
    return m_logo_path;
}
void OAIAttributes_22::setLogoPath(const QString &logo_path) {
    m_logo_path = logo_path;
    m_logo_path_isSet = true;
}

bool OAIAttributes_22::is_logo_path_Set() const{
    return m_logo_path_isSet;
}

bool OAIAttributes_22::is_logo_path_Valid() const{
    return m_logo_path_isValid;
}

QString OAIAttributes_22::getName() const {
    return m_name;
}
void OAIAttributes_22::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAttributes_22::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAttributes_22::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAttributes_22::getSocialFacebook() const {
    return m_social_facebook;
}
void OAIAttributes_22::setSocialFacebook(const QString &social_facebook) {
    m_social_facebook = social_facebook;
    m_social_facebook_isSet = true;
}

bool OAIAttributes_22::is_social_facebook_Set() const{
    return m_social_facebook_isSet;
}

bool OAIAttributes_22::is_social_facebook_Valid() const{
    return m_social_facebook_isValid;
}

QString OAIAttributes_22::getSocialInstagram() const {
    return m_social_instagram;
}
void OAIAttributes_22::setSocialInstagram(const QString &social_instagram) {
    m_social_instagram = social_instagram;
    m_social_instagram_isSet = true;
}

bool OAIAttributes_22::is_social_instagram_Set() const{
    return m_social_instagram_isSet;
}

bool OAIAttributes_22::is_social_instagram_Valid() const{
    return m_social_instagram_isValid;
}

QString OAIAttributes_22::getSubjectsAcceptable() const {
    return m_subjects_acceptable;
}
void OAIAttributes_22::setSubjectsAcceptable(const QString &subjects_acceptable) {
    m_subjects_acceptable = subjects_acceptable;
    m_subjects_acceptable_isSet = true;
}

bool OAIAttributes_22::is_subjects_acceptable_Set() const{
    return m_subjects_acceptable_isSet;
}

bool OAIAttributes_22::is_subjects_acceptable_Valid() const{
    return m_subjects_acceptable_isValid;
}

bool OAIAttributes_22::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advisory_board_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_redirect_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_support_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_example_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_social_facebook_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_social_instagram_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subjects_acceptable_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_22::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
