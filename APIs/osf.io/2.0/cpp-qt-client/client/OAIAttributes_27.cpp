/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_27.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_27::OAIAttributes_27(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_27::OAIAttributes_27() {
    this->initializeModel();
}

OAIAttributes_27::~OAIAttributes_27() {}

void OAIAttributes_27::initializeModel() {

    m_block_type_isSet = false;
    m_block_type_isValid = false;

    m_display_text_isSet = false;
    m_display_text_isValid = false;

    m_example_text_isSet = false;
    m_example_text_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_registration_response_key_isSet = false;
    m_registration_response_key_isValid = false;

    m_required_isSet = false;
    m_required_isValid = false;

    m_schema_block_group_key_isSet = false;
    m_schema_block_group_key_isValid = false;
}

void OAIAttributes_27::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_27::fromJsonObject(QJsonObject json) {

    m_block_type_isValid = ::OpenAPI::fromJsonValue(m_block_type, json[QString("block_type")]);
    m_block_type_isSet = !json[QString("block_type")].isNull() && m_block_type_isValid;

    m_display_text_isValid = ::OpenAPI::fromJsonValue(m_display_text, json[QString("display_text")]);
    m_display_text_isSet = !json[QString("display_text")].isNull() && m_display_text_isValid;

    m_example_text_isValid = ::OpenAPI::fromJsonValue(m_example_text, json[QString("example_text")]);
    m_example_text_isSet = !json[QString("example_text")].isNull() && m_example_text_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_registration_response_key_isValid = ::OpenAPI::fromJsonValue(m_registration_response_key, json[QString("registration_response_key")]);
    m_registration_response_key_isSet = !json[QString("registration_response_key")].isNull() && m_registration_response_key_isValid;

    m_required_isValid = ::OpenAPI::fromJsonValue(m_required, json[QString("required")]);
    m_required_isSet = !json[QString("required")].isNull() && m_required_isValid;

    m_schema_block_group_key_isValid = ::OpenAPI::fromJsonValue(m_schema_block_group_key, json[QString("schema_block_group_key")]);
    m_schema_block_group_key_isSet = !json[QString("schema_block_group_key")].isNull() && m_schema_block_group_key_isValid;
}

QString OAIAttributes_27::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_27::asJsonObject() const {
    QJsonObject obj;
    if (m_block_type_isSet) {
        obj.insert(QString("block_type"), ::OpenAPI::toJsonValue(m_block_type));
    }
    if (m_display_text_isSet) {
        obj.insert(QString("display_text"), ::OpenAPI::toJsonValue(m_display_text));
    }
    if (m_example_text_isSet) {
        obj.insert(QString("example_text"), ::OpenAPI::toJsonValue(m_example_text));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_registration_response_key_isSet) {
        obj.insert(QString("registration_response_key"), ::OpenAPI::toJsonValue(m_registration_response_key));
    }
    if (m_required_isSet) {
        obj.insert(QString("required"), ::OpenAPI::toJsonValue(m_required));
    }
    if (m_schema_block_group_key_isSet) {
        obj.insert(QString("schema_block_group_key"), ::OpenAPI::toJsonValue(m_schema_block_group_key));
    }
    return obj;
}

QString OAIAttributes_27::getBlockType() const {
    return m_block_type;
}
void OAIAttributes_27::setBlockType(const QString &block_type) {
    m_block_type = block_type;
    m_block_type_isSet = true;
}

bool OAIAttributes_27::is_block_type_Set() const{
    return m_block_type_isSet;
}

bool OAIAttributes_27::is_block_type_Valid() const{
    return m_block_type_isValid;
}

QString OAIAttributes_27::getDisplayText() const {
    return m_display_text;
}
void OAIAttributes_27::setDisplayText(const QString &display_text) {
    m_display_text = display_text;
    m_display_text_isSet = true;
}

bool OAIAttributes_27::is_display_text_Set() const{
    return m_display_text_isSet;
}

bool OAIAttributes_27::is_display_text_Valid() const{
    return m_display_text_isValid;
}

QString OAIAttributes_27::getExampleText() const {
    return m_example_text;
}
void OAIAttributes_27::setExampleText(const QString &example_text) {
    m_example_text = example_text;
    m_example_text_isSet = true;
}

bool OAIAttributes_27::is_example_text_Set() const{
    return m_example_text_isSet;
}

bool OAIAttributes_27::is_example_text_Valid() const{
    return m_example_text_isValid;
}

qint32 OAIAttributes_27::getIndex() const {
    return m_index;
}
void OAIAttributes_27::setIndex(const qint32 &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAIAttributes_27::is_index_Set() const{
    return m_index_isSet;
}

bool OAIAttributes_27::is_index_Valid() const{
    return m_index_isValid;
}

QString OAIAttributes_27::getRegistrationResponseKey() const {
    return m_registration_response_key;
}
void OAIAttributes_27::setRegistrationResponseKey(const QString &registration_response_key) {
    m_registration_response_key = registration_response_key;
    m_registration_response_key_isSet = true;
}

bool OAIAttributes_27::is_registration_response_key_Set() const{
    return m_registration_response_key_isSet;
}

bool OAIAttributes_27::is_registration_response_key_Valid() const{
    return m_registration_response_key_isValid;
}

bool OAIAttributes_27::isRequired() const {
    return m_required;
}
void OAIAttributes_27::setRequired(const bool &required) {
    m_required = required;
    m_required_isSet = true;
}

bool OAIAttributes_27::is_required_Set() const{
    return m_required_isSet;
}

bool OAIAttributes_27::is_required_Valid() const{
    return m_required_isValid;
}

QString OAIAttributes_27::getSchemaBlockGroupKey() const {
    return m_schema_block_group_key;
}
void OAIAttributes_27::setSchemaBlockGroupKey(const QString &schema_block_group_key) {
    m_schema_block_group_key = schema_block_group_key;
    m_schema_block_group_key_isSet = true;
}

bool OAIAttributes_27::is_schema_block_group_key_Set() const{
    return m_schema_block_group_key_isSet;
}

bool OAIAttributes_27::is_schema_block_group_key_Valid() const{
    return m_schema_block_group_key_isValid;
}

bool OAIAttributes_27::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_block_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_example_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_response_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_block_group_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_27::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
