/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_26.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_26::OAIAttributes_26(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_26::OAIAttributes_26() {
    this->initializeModel();
}

OAIAttributes_26::~OAIAttributes_26() {}

void OAIAttributes_26::initializeModel() {

    m_r_auto_isSet = false;
    m_r_auto_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_from_state_isSet = false;
    m_from_state_isValid = false;

    m_to_state_isSet = false;
    m_to_state_isValid = false;

    m_trigger_isSet = false;
    m_trigger_isValid = false;

    m_visible_isSet = false;
    m_visible_isValid = false;
}

void OAIAttributes_26::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_26::fromJsonObject(QJsonObject json) {

    m_r_auto_isValid = ::OpenAPI::fromJsonValue(m_r_auto, json[QString("auto")]);
    m_r_auto_isSet = !json[QString("auto")].isNull() && m_r_auto_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_from_state_isValid = ::OpenAPI::fromJsonValue(m_from_state, json[QString("from_state")]);
    m_from_state_isSet = !json[QString("from_state")].isNull() && m_from_state_isValid;

    m_to_state_isValid = ::OpenAPI::fromJsonValue(m_to_state, json[QString("to_state")]);
    m_to_state_isSet = !json[QString("to_state")].isNull() && m_to_state_isValid;

    m_trigger_isValid = ::OpenAPI::fromJsonValue(m_trigger, json[QString("trigger")]);
    m_trigger_isSet = !json[QString("trigger")].isNull() && m_trigger_isValid;

    m_visible_isValid = ::OpenAPI::fromJsonValue(m_visible, json[QString("visible")]);
    m_visible_isSet = !json[QString("visible")].isNull() && m_visible_isValid;
}

QString OAIAttributes_26::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_26::asJsonObject() const {
    QJsonObject obj;
    if (m_r_auto_isSet) {
        obj.insert(QString("auto"), ::OpenAPI::toJsonValue(m_r_auto));
    }
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_from_state_isSet) {
        obj.insert(QString("from_state"), ::OpenAPI::toJsonValue(m_from_state));
    }
    if (m_to_state_isSet) {
        obj.insert(QString("to_state"), ::OpenAPI::toJsonValue(m_to_state));
    }
    if (m_trigger_isSet) {
        obj.insert(QString("trigger"), ::OpenAPI::toJsonValue(m_trigger));
    }
    if (m_visible_isSet) {
        obj.insert(QString("visible"), ::OpenAPI::toJsonValue(m_visible));
    }
    return obj;
}

bool OAIAttributes_26::isRAuto() const {
    return m_r_auto;
}
void OAIAttributes_26::setRAuto(const bool &r_auto) {
    m_r_auto = r_auto;
    m_r_auto_isSet = true;
}

bool OAIAttributes_26::is_r_auto_Set() const{
    return m_r_auto_isSet;
}

bool OAIAttributes_26::is_r_auto_Valid() const{
    return m_r_auto_isValid;
}

QString OAIAttributes_26::getComment() const {
    return m_comment;
}
void OAIAttributes_26::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIAttributes_26::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIAttributes_26::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAIAttributes_26::getDateCreated() const {
    return m_date_created;
}
void OAIAttributes_26::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIAttributes_26::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIAttributes_26::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIAttributes_26::getFromState() const {
    return m_from_state;
}
void OAIAttributes_26::setFromState(const QString &from_state) {
    m_from_state = from_state;
    m_from_state_isSet = true;
}

bool OAIAttributes_26::is_from_state_Set() const{
    return m_from_state_isSet;
}

bool OAIAttributes_26::is_from_state_Valid() const{
    return m_from_state_isValid;
}

QString OAIAttributes_26::getToState() const {
    return m_to_state;
}
void OAIAttributes_26::setToState(const QString &to_state) {
    m_to_state = to_state;
    m_to_state_isSet = true;
}

bool OAIAttributes_26::is_to_state_Set() const{
    return m_to_state_isSet;
}

bool OAIAttributes_26::is_to_state_Valid() const{
    return m_to_state_isValid;
}

QString OAIAttributes_26::getTrigger() const {
    return m_trigger;
}
void OAIAttributes_26::setTrigger(const QString &trigger) {
    m_trigger = trigger;
    m_trigger_isSet = true;
}

bool OAIAttributes_26::is_trigger_Set() const{
    return m_trigger_isSet;
}

bool OAIAttributes_26::is_trigger_Valid() const{
    return m_trigger_isValid;
}

bool OAIAttributes_26::isVisible() const {
    return m_visible;
}
void OAIAttributes_26::setVisible(const bool &visible) {
    m_visible = visible;
    m_visible_isSet = true;
}

bool OAIAttributes_26::is_visible_Set() const{
    return m_visible_isSet;
}

bool OAIAttributes_26::is_visible_Valid() const{
    return m_visible_isValid;
}

bool OAIAttributes_26::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_auto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visible_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_26::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
