/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelationships_6.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelationships_6::OAIRelationships_6(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelationships_6::OAIRelationships_6() {
    this->initializeModel();
}

OAIRelationships_6::~OAIRelationships_6() {}

void OAIRelationships_6::initializeModel() {

    m_checkout_isSet = false;
    m_checkout_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_node_isSet = false;
    m_node_isValid = false;

    m_versions_isSet = false;
    m_versions_isValid = false;
}

void OAIRelationships_6::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelationships_6::fromJsonObject(QJsonObject json) {

    m_checkout_isValid = ::OpenAPI::fromJsonValue(m_checkout, json[QString("checkout")]);
    m_checkout_isSet = !json[QString("checkout")].isNull() && m_checkout_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_node_isValid = ::OpenAPI::fromJsonValue(m_node, json[QString("node")]);
    m_node_isSet = !json[QString("node")].isNull() && m_node_isValid;

    m_versions_isValid = ::OpenAPI::fromJsonValue(m_versions, json[QString("versions")]);
    m_versions_isSet = !json[QString("versions")].isNull() && m_versions_isValid;
}

QString OAIRelationships_6::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelationships_6::asJsonObject() const {
    QJsonObject obj;
    if (m_checkout_isSet) {
        obj.insert(QString("checkout"), ::OpenAPI::toJsonValue(m_checkout));
    }
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_node_isSet) {
        obj.insert(QString("node"), ::OpenAPI::toJsonValue(m_node));
    }
    if (m_versions_isSet) {
        obj.insert(QString("versions"), ::OpenAPI::toJsonValue(m_versions));
    }
    return obj;
}

QString OAIRelationships_6::getCheckout() const {
    return m_checkout;
}
void OAIRelationships_6::setCheckout(const QString &checkout) {
    m_checkout = checkout;
    m_checkout_isSet = true;
}

bool OAIRelationships_6::is_checkout_Set() const{
    return m_checkout_isSet;
}

bool OAIRelationships_6::is_checkout_Valid() const{
    return m_checkout_isValid;
}

QString OAIRelationships_6::getComments() const {
    return m_comments;
}
void OAIRelationships_6::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIRelationships_6::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIRelationships_6::is_comments_Valid() const{
    return m_comments_isValid;
}

QString OAIRelationships_6::getNode() const {
    return m_node;
}
void OAIRelationships_6::setNode(const QString &node) {
    m_node = node;
    m_node_isSet = true;
}

bool OAIRelationships_6::is_node_Set() const{
    return m_node_isSet;
}

bool OAIRelationships_6::is_node_Valid() const{
    return m_node_isValid;
}

QString OAIRelationships_6::getVersions() const {
    return m_versions;
}
void OAIRelationships_6::setVersions(const QString &versions) {
    m_versions = versions;
    m_versions_isSet = true;
}

bool OAIRelationships_6::is_versions_Set() const{
    return m_versions_isSet;
}

bool OAIRelationships_6::is_versions_Valid() const{
    return m_versions_isValid;
}

bool OAIRelationships_6::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_checkout_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_versions_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelationships_6::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
