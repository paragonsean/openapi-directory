/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelationships_17.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelationships_17::OAIRelationships_17(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelationships_17::OAIRelationships_17() {
    this->initializeModel();
}

OAIRelationships_17::~OAIRelationships_17() {}

void OAIRelationships_17::initializeModel() {

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_initiated_by_isSet = false;
    m_initiated_by_isValid = false;

    m_registration_isSet = false;
    m_registration_isValid = false;

    m_registration_schema_isSet = false;
    m_registration_schema_isValid = false;
}

void OAIRelationships_17::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelationships_17::fromJsonObject(QJsonObject json) {

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("actions")]);
    m_actions_isSet = !json[QString("actions")].isNull() && m_actions_isValid;

    m_initiated_by_isValid = ::OpenAPI::fromJsonValue(m_initiated_by, json[QString("initiated_by")]);
    m_initiated_by_isSet = !json[QString("initiated_by")].isNull() && m_initiated_by_isValid;

    m_registration_isValid = ::OpenAPI::fromJsonValue(m_registration, json[QString("registration")]);
    m_registration_isSet = !json[QString("registration")].isNull() && m_registration_isValid;

    m_registration_schema_isValid = ::OpenAPI::fromJsonValue(m_registration_schema, json[QString("registration_schema")]);
    m_registration_schema_isSet = !json[QString("registration_schema")].isNull() && m_registration_schema_isValid;
}

QString OAIRelationships_17::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelationships_17::asJsonObject() const {
    QJsonObject obj;
    if (m_actions_isSet) {
        obj.insert(QString("actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_initiated_by_isSet) {
        obj.insert(QString("initiated_by"), ::OpenAPI::toJsonValue(m_initiated_by));
    }
    if (m_registration_isSet) {
        obj.insert(QString("registration"), ::OpenAPI::toJsonValue(m_registration));
    }
    if (m_registration_schema_isSet) {
        obj.insert(QString("registration_schema"), ::OpenAPI::toJsonValue(m_registration_schema));
    }
    return obj;
}

QString OAIRelationships_17::getActions() const {
    return m_actions;
}
void OAIRelationships_17::setActions(const QString &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAIRelationships_17::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIRelationships_17::is_actions_Valid() const{
    return m_actions_isValid;
}

QString OAIRelationships_17::getInitiatedBy() const {
    return m_initiated_by;
}
void OAIRelationships_17::setInitiatedBy(const QString &initiated_by) {
    m_initiated_by = initiated_by;
    m_initiated_by_isSet = true;
}

bool OAIRelationships_17::is_initiated_by_Set() const{
    return m_initiated_by_isSet;
}

bool OAIRelationships_17::is_initiated_by_Valid() const{
    return m_initiated_by_isValid;
}

QString OAIRelationships_17::getRegistration() const {
    return m_registration;
}
void OAIRelationships_17::setRegistration(const QString &registration) {
    m_registration = registration;
    m_registration_isSet = true;
}

bool OAIRelationships_17::is_registration_Set() const{
    return m_registration_isSet;
}

bool OAIRelationships_17::is_registration_Valid() const{
    return m_registration_isValid;
}

QString OAIRelationships_17::getRegistrationSchema() const {
    return m_registration_schema;
}
void OAIRelationships_17::setRegistrationSchema(const QString &registration_schema) {
    m_registration_schema = registration_schema;
    m_registration_schema_isSet = true;
}

bool OAIRelationships_17::is_registration_schema_Set() const{
    return m_registration_schema_isSet;
}

bool OAIRelationships_17::is_registration_schema_Valid() const{
    return m_registration_schema_isValid;
}

bool OAIRelationships_17::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initiated_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_schema_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelationships_17::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
