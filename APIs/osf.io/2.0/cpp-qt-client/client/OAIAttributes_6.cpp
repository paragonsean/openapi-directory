/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_6.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_6::OAIAttributes_6(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_6::OAIAttributes_6() {
    this->initializeModel();
}

OAIAttributes_6::~OAIAttributes_6() {}

void OAIAttributes_6::initializeModel() {

    m_auth_url_isSet = false;
    m_auth_url_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_logo_path_isSet = false;
    m_logo_path_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAttributes_6::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_6::fromJsonObject(QJsonObject json) {

    m_auth_url_isValid = ::OpenAPI::fromJsonValue(m_auth_url, json[QString("auth_url")]);
    m_auth_url_isSet = !json[QString("auth_url")].isNull() && m_auth_url_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_logo_path_isValid = ::OpenAPI::fromJsonValue(m_logo_path, json[QString("logo_path")]);
    m_logo_path_isSet = !json[QString("logo_path")].isNull() && m_logo_path_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAttributes_6::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_6::asJsonObject() const {
    QJsonObject obj;
    if (m_auth_url_isSet) {
        obj.insert(QString("auth_url"), ::OpenAPI::toJsonValue(m_auth_url));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_logo_path_isSet) {
        obj.insert(QString("logo_path"), ::OpenAPI::toJsonValue(m_logo_path));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIAttributes_6::getAuthUrl() const {
    return m_auth_url;
}
void OAIAttributes_6::setAuthUrl(const QString &auth_url) {
    m_auth_url = auth_url;
    m_auth_url_isSet = true;
}

bool OAIAttributes_6::is_auth_url_Set() const{
    return m_auth_url_isSet;
}

bool OAIAttributes_6::is_auth_url_Valid() const{
    return m_auth_url_isValid;
}

QString OAIAttributes_6::getDescription() const {
    return m_description;
}
void OAIAttributes_6::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAttributes_6::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAttributes_6::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIAttributes_6::getLogoPath() const {
    return m_logo_path;
}
void OAIAttributes_6::setLogoPath(const QString &logo_path) {
    m_logo_path = logo_path;
    m_logo_path_isSet = true;
}

bool OAIAttributes_6::is_logo_path_Set() const{
    return m_logo_path_isSet;
}

bool OAIAttributes_6::is_logo_path_Valid() const{
    return m_logo_path_isValid;
}

QString OAIAttributes_6::getName() const {
    return m_name;
}
void OAIAttributes_6::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAttributes_6::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAttributes_6::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAttributes_6::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auth_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_6::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
