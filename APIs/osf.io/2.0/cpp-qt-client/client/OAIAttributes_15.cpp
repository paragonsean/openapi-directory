/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_15.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_15::OAIAttributes_15(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_15::OAIAttributes_15() {
    this->initializeModel();
}

OAIAttributes_15::~OAIAttributes_15() {}

void OAIAttributes_15::initializeModel() {

    m_author_isSet = false;
    m_author_isValid = false;

    m_doi_isSet = false;
    m_doi_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIAttributes_15::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_15::fromJsonObject(QJsonObject json) {

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_doi_isValid = ::OpenAPI::fromJsonValue(m_doi, json[QString("doi")]);
    m_doi_isSet = !json[QString("doi")].isNull() && m_doi_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIAttributes_15::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_15::asJsonObject() const {
    QJsonObject obj;
    if (m_author_isSet) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_doi_isSet) {
        obj.insert(QString("doi"), ::OpenAPI::toJsonValue(m_doi));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIAttributes_15::getAuthor() const {
    return m_author;
}
void OAIAttributes_15::setAuthor(const QString &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAIAttributes_15::is_author_Set() const{
    return m_author_isSet;
}

bool OAIAttributes_15::is_author_Valid() const{
    return m_author_isValid;
}

QString OAIAttributes_15::getDoi() const {
    return m_doi;
}
void OAIAttributes_15::setDoi(const QString &doi) {
    m_doi = doi;
    m_doi_isSet = true;
}

bool OAIAttributes_15::is_doi_Set() const{
    return m_doi_isSet;
}

bool OAIAttributes_15::is_doi_Valid() const{
    return m_doi_isValid;
}

QString OAIAttributes_15::getPublisher() const {
    return m_publisher;
}
void OAIAttributes_15::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIAttributes_15::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIAttributes_15::is_publisher_Valid() const{
    return m_publisher_isValid;
}

QString OAIAttributes_15::getTitle() const {
    return m_title;
}
void OAIAttributes_15::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIAttributes_15::is_title_Set() const{
    return m_title_isSet;
}

bool OAIAttributes_15::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIAttributes_15::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_doi_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_15::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
