/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinks_16.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinks_16::OAILinks_16(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinks_16::OAILinks_16() {
    this->initializeModel();
}

OAILinks_16::~OAILinks_16() {}

void OAILinks_16::initializeModel() {

    m_download_isSet = false;
    m_download_isValid = false;

    m_info_isSet = false;
    m_info_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;
}

void OAILinks_16::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinks_16::fromJsonObject(QJsonObject json) {

    m_download_isValid = ::OpenAPI::fromJsonValue(m_download, json[QString("download")]);
    m_download_isSet = !json[QString("download")].isNull() && m_download_isValid;

    m_info_isValid = ::OpenAPI::fromJsonValue(m_info, json[QString("info")]);
    m_info_isSet = !json[QString("info")].isNull() && m_info_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;
}

QString OAILinks_16::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinks_16::asJsonObject() const {
    QJsonObject obj;
    if (m_download_isSet) {
        obj.insert(QString("download"), ::OpenAPI::toJsonValue(m_download));
    }
    if (m_info_isSet) {
        obj.insert(QString("info"), ::OpenAPI::toJsonValue(m_info));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    return obj;
}

QString OAILinks_16::getDownload() const {
    return m_download;
}
void OAILinks_16::setDownload(const QString &download) {
    m_download = download;
    m_download_isSet = true;
}

bool OAILinks_16::is_download_Set() const{
    return m_download_isSet;
}

bool OAILinks_16::is_download_Valid() const{
    return m_download_isValid;
}

QString OAILinks_16::getInfo() const {
    return m_info;
}
void OAILinks_16::setInfo(const QString &info) {
    m_info = info;
    m_info_isSet = true;
}

bool OAILinks_16::is_info_Set() const{
    return m_info_isSet;
}

bool OAILinks_16::is_info_Valid() const{
    return m_info_isValid;
}

QString OAILinks_16::getSelf() const {
    return m_self;
}
void OAILinks_16::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAILinks_16::is_self_Set() const{
    return m_self_isSet;
}

bool OAILinks_16::is_self_Valid() const{
    return m_self_isValid;
}

bool OAILinks_16::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_download_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinks_16::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
