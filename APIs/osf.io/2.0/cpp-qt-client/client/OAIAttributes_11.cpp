/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_11.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_11::OAIAttributes_11(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_11::OAIAttributes_11() {
    this->initializeModel();
}

OAIAttributes_11::~OAIAttributes_11() {}

void OAIAttributes_11::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_date_registered_isSet = false;
    m_date_registered_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_middle_names_isSet = false;
    m_middle_names_isValid = false;

    m_suffix_isSet = false;
    m_suffix_isValid = false;

    m_timezone_isSet = false;
    m_timezone_isValid = false;
}

void OAIAttributes_11::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_11::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_date_registered_isValid = ::OpenAPI::fromJsonValue(m_date_registered, json[QString("date_registered")]);
    m_date_registered_isSet = !json[QString("date_registered")].isNull() && m_date_registered_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("family_name")]);
    m_family_name_isSet = !json[QString("family_name")].isNull() && m_family_name_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("full_name")]);
    m_full_name_isSet = !json[QString("full_name")].isNull() && m_full_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("given_name")]);
    m_given_name_isSet = !json[QString("given_name")].isNull() && m_given_name_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_middle_names_isValid = ::OpenAPI::fromJsonValue(m_middle_names, json[QString("middle_names")]);
    m_middle_names_isSet = !json[QString("middle_names")].isNull() && m_middle_names_isValid;

    m_suffix_isValid = ::OpenAPI::fromJsonValue(m_suffix, json[QString("suffix")]);
    m_suffix_isSet = !json[QString("suffix")].isNull() && m_suffix_isValid;

    m_timezone_isValid = ::OpenAPI::fromJsonValue(m_timezone, json[QString("timezone")]);
    m_timezone_isSet = !json[QString("timezone")].isNull() && m_timezone_isValid;
}

QString OAIAttributes_11::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_11::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_date_registered_isSet) {
        obj.insert(QString("date_registered"), ::OpenAPI::toJsonValue(m_date_registered));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("family_name"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("full_name"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("given_name"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_middle_names_isSet) {
        obj.insert(QString("middle_names"), ::OpenAPI::toJsonValue(m_middle_names));
    }
    if (m_suffix_isSet) {
        obj.insert(QString("suffix"), ::OpenAPI::toJsonValue(m_suffix));
    }
    if (m_timezone_isSet) {
        obj.insert(QString("timezone"), ::OpenAPI::toJsonValue(m_timezone));
    }
    return obj;
}

bool OAIAttributes_11::isActive() const {
    return m_active;
}
void OAIAttributes_11::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIAttributes_11::is_active_Set() const{
    return m_active_isSet;
}

bool OAIAttributes_11::is_active_Valid() const{
    return m_active_isValid;
}

QDateTime OAIAttributes_11::getDateRegistered() const {
    return m_date_registered;
}
void OAIAttributes_11::setDateRegistered(const QDateTime &date_registered) {
    m_date_registered = date_registered;
    m_date_registered_isSet = true;
}

bool OAIAttributes_11::is_date_registered_Set() const{
    return m_date_registered_isSet;
}

bool OAIAttributes_11::is_date_registered_Valid() const{
    return m_date_registered_isValid;
}

QString OAIAttributes_11::getFamilyName() const {
    return m_family_name;
}
void OAIAttributes_11::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAIAttributes_11::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAIAttributes_11::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAIAttributes_11::getFullName() const {
    return m_full_name;
}
void OAIAttributes_11::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIAttributes_11::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIAttributes_11::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIAttributes_11::getGivenName() const {
    return m_given_name;
}
void OAIAttributes_11::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAIAttributes_11::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAIAttributes_11::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAIAttributes_11::getLocale() const {
    return m_locale;
}
void OAIAttributes_11::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIAttributes_11::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIAttributes_11::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIAttributes_11::getMiddleNames() const {
    return m_middle_names;
}
void OAIAttributes_11::setMiddleNames(const QString &middle_names) {
    m_middle_names = middle_names;
    m_middle_names_isSet = true;
}

bool OAIAttributes_11::is_middle_names_Set() const{
    return m_middle_names_isSet;
}

bool OAIAttributes_11::is_middle_names_Valid() const{
    return m_middle_names_isValid;
}

QString OAIAttributes_11::getSuffix() const {
    return m_suffix;
}
void OAIAttributes_11::setSuffix(const QString &suffix) {
    m_suffix = suffix;
    m_suffix_isSet = true;
}

bool OAIAttributes_11::is_suffix_Set() const{
    return m_suffix_isSet;
}

bool OAIAttributes_11::is_suffix_Valid() const{
    return m_suffix_isValid;
}

QString OAIAttributes_11::getTimezone() const {
    return m_timezone;
}
void OAIAttributes_11::setTimezone(const QString &timezone) {
    m_timezone = timezone;
    m_timezone_isSet = true;
}

bool OAIAttributes_11::is_timezone_Set() const{
    return m_timezone_isSet;
}

bool OAIAttributes_11::is_timezone_Valid() const{
    return m_timezone_isValid;
}

bool OAIAttributes_11::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_registered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_names_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suffix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timezone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_11::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_active_isValid && m_date_registered_isValid && m_full_name_isValid && true;
}

} // namespace OpenAPI
