/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttributes_4.h
 *
 * The properties of the Draft Registration entity.
 */

#ifndef OAIAttributes_4_H
#define OAIAttributes_4_H

#include <QJsonObject>

#include "OAINode_License.h"
#include "OAIObject.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINode_License;

class OAIAttributes_4 : public OAIObject {
public:
    OAIAttributes_4();
    OAIAttributes_4(QString json);
    ~OAIAttributes_4() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QList<QString> getCurrentUserPermissions() const;
    void setCurrentUserPermissions(const QList<QString> &current_user_permissions);
    bool is_current_user_permissions_Set() const;
    bool is_current_user_permissions_Valid() const;

    QDateTime getDatetimeInitiated() const;
    void setDatetimeInitiated(const QDateTime &datetime_initiated);
    bool is_datetime_initiated_Set() const;
    bool is_datetime_initiated_Valid() const;

    QDateTime getDatetimeUpdated() const;
    void setDatetimeUpdated(const QDateTime &datetime_updated);
    bool is_datetime_updated_Set() const;
    bool is_datetime_updated_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isHasProject() const;
    void setHasProject(const bool &has_project);
    bool is_has_project_Set() const;
    bool is_has_project_Valid() const;

    OAINode_License getNodeLicense() const;
    void setNodeLicense(const OAINode_License &node_license);
    bool is_node_license_Set() const;
    bool is_node_license_Valid() const;

    OAIObject getRegistrationMetadata() const;
    void setRegistrationMetadata(const OAIObject &registration_metadata);
    bool is_registration_metadata_Set() const;
    bool is_registration_metadata_Valid() const;

    OAIObject getRegistrationResponses() const;
    void setRegistrationResponses(const OAIObject &registration_responses);
    bool is_registration_responses_Set() const;
    bool is_registration_responses_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QList<QString> m_current_user_permissions;
    bool m_current_user_permissions_isSet;
    bool m_current_user_permissions_isValid;

    QDateTime m_datetime_initiated;
    bool m_datetime_initiated_isSet;
    bool m_datetime_initiated_isValid;

    QDateTime m_datetime_updated;
    bool m_datetime_updated_isSet;
    bool m_datetime_updated_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_has_project;
    bool m_has_project_isSet;
    bool m_has_project_isValid;

    OAINode_License m_node_license;
    bool m_node_license_isSet;
    bool m_node_license_isValid;

    OAIObject m_registration_metadata;
    bool m_registration_metadata_isSet;
    bool m_registration_metadata_isValid;

    OAIObject m_registration_responses;
    bool m_registration_responses_isSet;
    bool m_registration_responses_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttributes_4)

#endif // OAIAttributes_4_H
