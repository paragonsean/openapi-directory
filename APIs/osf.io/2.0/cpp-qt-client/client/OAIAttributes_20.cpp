/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_20.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_20::OAIAttributes_20(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_20::OAIAttributes_20() {
    this->initializeModel();
}

OAIAttributes_20::~OAIAttributes_20() {}

void OAIAttributes_20::initializeModel() {

    m_anonymous_isSet = false;
    m_anonymous_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAttributes_20::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_20::fromJsonObject(QJsonObject json) {

    m_anonymous_isValid = ::OpenAPI::fromJsonValue(m_anonymous, json[QString("anonymous")]);
    m_anonymous_isSet = !json[QString("anonymous")].isNull() && m_anonymous_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAttributes_20::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_20::asJsonObject() const {
    QJsonObject obj;
    if (m_anonymous_isSet) {
        obj.insert(QString("anonymous"), ::OpenAPI::toJsonValue(m_anonymous));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

bool OAIAttributes_20::isAnonymous() const {
    return m_anonymous;
}
void OAIAttributes_20::setAnonymous(const bool &anonymous) {
    m_anonymous = anonymous;
    m_anonymous_isSet = true;
}

bool OAIAttributes_20::is_anonymous_Set() const{
    return m_anonymous_isSet;
}

bool OAIAttributes_20::is_anonymous_Valid() const{
    return m_anonymous_isValid;
}

QDateTime OAIAttributes_20::getDateCreated() const {
    return m_date_created;
}
void OAIAttributes_20::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIAttributes_20::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIAttributes_20::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIAttributes_20::getKey() const {
    return m_key;
}
void OAIAttributes_20::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIAttributes_20::is_key_Set() const{
    return m_key_isSet;
}

bool OAIAttributes_20::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIAttributes_20::getName() const {
    return m_name;
}
void OAIAttributes_20::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAttributes_20::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAttributes_20::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAttributes_20::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anonymous_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_20::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
