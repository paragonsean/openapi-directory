/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILog_Params.h
 *
 * The type of action performed on the OSF. See description for full list of possible actions.
 */

#ifndef OAILog_Params_H
#define OAILog_Params_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILog_Params : public OAIObject {
public:
    OAILog_Params();
    OAILog_Params(QString json);
    ~OAILog_Params() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddon() const;
    void setAddon(const QString &addon);
    bool is_addon_Set() const;
    bool is_addon_Valid() const;

    bool isAnonymousLink() const;
    void setAnonymousLink(const bool &anonymous_link);
    bool is_anonymous_link_Set() const;
    bool is_anonymous_link_Valid() const;

    QString getBucket() const;
    void setBucket(const QString &bucket);
    bool is_bucket_Set() const;
    bool is_bucket_Valid() const;

    QString getCitationName() const;
    void setCitationName(const QString &citation_name);
    bool is_citation_name_Set() const;
    bool is_citation_name_Valid() const;

    QString getContributors() const;
    void setContributors(const QString &contributors);
    bool is_contributors_Set() const;
    bool is_contributors_Valid() const;

    QString getDataSet() const;
    void setDataSet(const QString &data_set);
    bool is_data_set_Set() const;
    bool is_data_set_Valid() const;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    QString getFigshareTitle() const;
    void setFigshareTitle(const QString &figshare_title);
    bool is_figshare_title_Set() const;
    bool is_figshare_title_Valid() const;

    QString getFile() const;
    void setFile(const QString &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    QString getFilename() const;
    void setFilename(const QString &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    QString getFolder() const;
    void setFolder(const QString &folder);
    bool is_folder_Set() const;
    bool is_folder_Valid() const;

    QString getFolderName() const;
    void setFolderName(const QString &folder_name);
    bool is_folder_name_Set() const;
    bool is_folder_name_Valid() const;

    QString getForwardUrl() const;
    void setForwardUrl(const QString &forward_url);
    bool is_forward_url_Set() const;
    bool is_forward_url_Valid() const;

    QString getGithubRepo() const;
    void setGithubRepo(const QString &github_repo);
    bool is_github_repo_Set() const;
    bool is_github_repo_Valid() const;

    QString getGithubUser() const;
    void setGithubUser(const QString &github_user);
    bool is_github_user_Set() const;
    bool is_github_user_Valid() const;

    QString getIdentifiers() const;
    void setIdentifiers(const QString &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    QString getInstitution() const;
    void setInstitution(const QString &institution);
    bool is_institution_Set() const;
    bool is_institution_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getOldPage() const;
    void setOldPage(const QString &old_page);
    bool is_old_page_Set() const;
    bool is_old_page_Valid() const;

    QString getPage() const;
    void setPage(const QString &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QString getPageId() const;
    void setPageId(const QString &page_id);
    bool is_page_id_Set() const;
    bool is_page_id_Valid() const;

    QString getParamsNode() const;
    void setParamsNode(const QString &params_node);
    bool is_params_node_Set() const;
    bool is_params_node_Valid() const;

    QString getParamsProject() const;
    void setParamsProject(const QString &params_project);
    bool is_params_project_Set() const;
    bool is_params_project_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPointer() const;
    void setPointer(const QString &pointer);
    bool is_pointer_Set() const;
    bool is_pointer_Valid() const;

    QString getPreprint() const;
    void setPreprint(const QString &preprint);
    bool is_preprint_Set() const;
    bool is_preprint_Valid() const;

    QString getPreprintProvider() const;
    void setPreprintProvider(const QString &preprint_provider);
    bool is_preprint_provider_Set() const;
    bool is_preprint_provider_Valid() const;

    QString getPreviousInstitution() const;
    void setPreviousInstitution(const QString &previous_institution);
    bool is_previous_institution_Set() const;
    bool is_previous_institution_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getStudy() const;
    void setStudy(const QString &study);
    bool is_study_Set() const;
    bool is_study_Valid() const;

    QString getTag() const;
    void setTag(const QString &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    QString getTags() const;
    void setTags(const QString &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    QString getTemplateNode() const;
    void setTemplateNode(const QString &template_node);
    bool is_template_node_Set() const;
    bool is_template_node_Valid() const;

    QString getTitleNew() const;
    void setTitleNew(const QString &title_new);
    bool is_title_new_Set() const;
    bool is_title_new_Valid() const;

    QString getTitleOriginal() const;
    void setTitleOriginal(const QString &title_original);
    bool is_title_original_Set() const;
    bool is_title_original_Valid() const;

    QString getUpdatedFields() const;
    void setUpdatedFields(const QString &updated_fields);
    bool is_updated_fields_Set() const;
    bool is_updated_fields_Valid() const;

    QString getUrls() const;
    void setUrls(const QString &urls);
    bool is_urls_Set() const;
    bool is_urls_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getWiki() const;
    void setWiki(const QString &wiki);
    bool is_wiki_Set() const;
    bool is_wiki_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_addon;
    bool m_addon_isSet;
    bool m_addon_isValid;

    bool m_anonymous_link;
    bool m_anonymous_link_isSet;
    bool m_anonymous_link_isValid;

    QString m_bucket;
    bool m_bucket_isSet;
    bool m_bucket_isValid;

    QString m_citation_name;
    bool m_citation_name_isSet;
    bool m_citation_name_isValid;

    QString m_contributors;
    bool m_contributors_isSet;
    bool m_contributors_isValid;

    QString m_data_set;
    bool m_data_set_isSet;
    bool m_data_set_isValid;

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    QString m_figshare_title;
    bool m_figshare_title_isSet;
    bool m_figshare_title_isValid;

    QString m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    QString m_filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    QString m_folder;
    bool m_folder_isSet;
    bool m_folder_isValid;

    QString m_folder_name;
    bool m_folder_name_isSet;
    bool m_folder_name_isValid;

    QString m_forward_url;
    bool m_forward_url_isSet;
    bool m_forward_url_isValid;

    QString m_github_repo;
    bool m_github_repo_isSet;
    bool m_github_repo_isValid;

    QString m_github_user;
    bool m_github_user_isSet;
    bool m_github_user_isValid;

    QString m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    QString m_institution;
    bool m_institution_isSet;
    bool m_institution_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_old_page;
    bool m_old_page_isSet;
    bool m_old_page_isValid;

    QString m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QString m_page_id;
    bool m_page_id_isSet;
    bool m_page_id_isValid;

    QString m_params_node;
    bool m_params_node_isSet;
    bool m_params_node_isValid;

    QString m_params_project;
    bool m_params_project_isSet;
    bool m_params_project_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_pointer;
    bool m_pointer_isSet;
    bool m_pointer_isValid;

    QString m_preprint;
    bool m_preprint_isSet;
    bool m_preprint_isValid;

    QString m_preprint_provider;
    bool m_preprint_provider_isSet;
    bool m_preprint_provider_isValid;

    QString m_previous_institution;
    bool m_previous_institution_isSet;
    bool m_previous_institution_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_study;
    bool m_study_isSet;
    bool m_study_isValid;

    QString m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    QString m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    QString m_template_node;
    bool m_template_node_isSet;
    bool m_template_node_isValid;

    QString m_title_new;
    bool m_title_new_isSet;
    bool m_title_new_isValid;

    QString m_title_original;
    bool m_title_original_isSet;
    bool m_title_original_isValid;

    QString m_updated_fields;
    bool m_updated_fields_isSet;
    bool m_updated_fields_isValid;

    QString m_urls;
    bool m_urls_isSet;
    bool m_urls_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_wiki;
    bool m_wiki_isSet;
    bool m_wiki_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILog_Params)

#endif // OAILog_Params_H
