/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFile_Version_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFile_Version_attributes::OAIFile_Version_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFile_Version_attributes::OAIFile_Version_attributes() {
    this->initializeModel();
}

OAIFile_Version_attributes::~OAIFile_Version_attributes() {}

void OAIFile_Version_attributes::initializeModel() {

    m_content_type_isSet = false;
    m_content_type_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIFile_Version_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFile_Version_attributes::fromJsonObject(QJsonObject json) {

    m_content_type_isValid = ::OpenAPI::fromJsonValue(m_content_type, json[QString("content_type")]);
    m_content_type_isSet = !json[QString("content_type")].isNull() && m_content_type_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIFile_Version_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFile_Version_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_content_type_isSet) {
        obj.insert(QString("content_type"), ::OpenAPI::toJsonValue(m_content_type));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

OAIObject OAIFile_Version_attributes::getContentType() const {
    return m_content_type;
}
void OAIFile_Version_attributes::setContentType(const OAIObject &content_type) {
    m_content_type = content_type;
    m_content_type_isSet = true;
}

bool OAIFile_Version_attributes::is_content_type_Set() const{
    return m_content_type_isSet;
}

bool OAIFile_Version_attributes::is_content_type_Valid() const{
    return m_content_type_isValid;
}

QDateTime OAIFile_Version_attributes::getDateCreated() const {
    return m_date_created;
}
void OAIFile_Version_attributes::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIFile_Version_attributes::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIFile_Version_attributes::is_date_created_Valid() const{
    return m_date_created_isValid;
}

qint32 OAIFile_Version_attributes::getSize() const {
    return m_size;
}
void OAIFile_Version_attributes::setSize(const qint32 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIFile_Version_attributes::is_size_Set() const{
    return m_size_isSet;
}

bool OAIFile_Version_attributes::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIFile_Version_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFile_Version_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
