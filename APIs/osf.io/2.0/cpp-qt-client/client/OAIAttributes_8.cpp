/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_8.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_8::OAIAttributes_8(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_8::OAIAttributes_8() {
    this->initializeModel();
}

OAIAttributes_8::~OAIAttributes_8() {}

void OAIAttributes_8::initializeModel() {

    m_taxonomy_name_isSet = false;
    m_taxonomy_name_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIAttributes_8::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_8::fromJsonObject(QJsonObject json) {

    m_taxonomy_name_isValid = ::OpenAPI::fromJsonValue(m_taxonomy_name, json[QString("taxonomy_name")]);
    m_taxonomy_name_isSet = !json[QString("taxonomy_name")].isNull() && m_taxonomy_name_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIAttributes_8::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_8::asJsonObject() const {
    QJsonObject obj;
    if (m_taxonomy_name_isSet) {
        obj.insert(QString("taxonomy_name"), ::OpenAPI::toJsonValue(m_taxonomy_name));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

QString OAIAttributes_8::getTaxonomyName() const {
    return m_taxonomy_name;
}
void OAIAttributes_8::setTaxonomyName(const QString &taxonomy_name) {
    m_taxonomy_name = taxonomy_name;
    m_taxonomy_name_isSet = true;
}

bool OAIAttributes_8::is_taxonomy_name_Set() const{
    return m_taxonomy_name_isSet;
}

bool OAIAttributes_8::is_taxonomy_name_Valid() const{
    return m_taxonomy_name_isValid;
}

QString OAIAttributes_8::getText() const {
    return m_text;
}
void OAIAttributes_8::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIAttributes_8::is_text_Set() const{
    return m_text_isSet;
}

bool OAIAttributes_8::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIAttributes_8::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_taxonomy_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_8::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
