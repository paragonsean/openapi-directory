/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinks_17.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinks_17::OAILinks_17(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinks_17::OAILinks_17() {
    this->initializeModel();
}

OAILinks_17::~OAILinks_17() {}

void OAILinks_17::initializeModel() {

    m_external_url_isSet = false;
    m_external_url_isValid = false;

    m_preprints_isSet = false;
    m_preprints_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;
}

void OAILinks_17::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinks_17::fromJsonObject(QJsonObject json) {

    m_external_url_isValid = ::OpenAPI::fromJsonValue(m_external_url, json[QString("external_url")]);
    m_external_url_isSet = !json[QString("external_url")].isNull() && m_external_url_isValid;

    m_preprints_isValid = ::OpenAPI::fromJsonValue(m_preprints, json[QString("preprints")]);
    m_preprints_isSet = !json[QString("preprints")].isNull() && m_preprints_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;
}

QString OAILinks_17::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinks_17::asJsonObject() const {
    QJsonObject obj;
    if (m_external_url_isSet) {
        obj.insert(QString("external_url"), ::OpenAPI::toJsonValue(m_external_url));
    }
    if (m_preprints_isSet) {
        obj.insert(QString("preprints"), ::OpenAPI::toJsonValue(m_preprints));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    return obj;
}

QString OAILinks_17::getExternalUrl() const {
    return m_external_url;
}
void OAILinks_17::setExternalUrl(const QString &external_url) {
    m_external_url = external_url;
    m_external_url_isSet = true;
}

bool OAILinks_17::is_external_url_Set() const{
    return m_external_url_isSet;
}

bool OAILinks_17::is_external_url_Valid() const{
    return m_external_url_isValid;
}

QString OAILinks_17::getPreprints() const {
    return m_preprints;
}
void OAILinks_17::setPreprints(const QString &preprints) {
    m_preprints = preprints;
    m_preprints_isSet = true;
}

bool OAILinks_17::is_preprints_Set() const{
    return m_preprints_isSet;
}

bool OAILinks_17::is_preprints_Valid() const{
    return m_preprints_isValid;
}

QString OAILinks_17::getSelf() const {
    return m_self;
}
void OAILinks_17::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAILinks_17::is_self_Set() const{
    return m_self_isSet;
}

bool OAILinks_17::is_self_Valid() const{
    return m_self_isValid;
}

bool OAILinks_17::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_external_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preprints_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinks_17::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
