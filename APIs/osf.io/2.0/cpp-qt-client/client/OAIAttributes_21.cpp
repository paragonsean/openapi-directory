/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributes_21.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributes_21::OAIAttributes_21(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributes_21::OAIAttributes_21() {
    this->initializeModel();
}

OAIAttributes_21::~OAIAttributes_21() {}

void OAIAttributes_21::initializeModel() {

    m_content_type_isSet = false;
    m_content_type_isValid = false;

    m_current_user_can_comment_isSet = false;
    m_current_user_can_comment_isValid = false;

    m_date_modified_isSet = false;
    m_date_modified_isValid = false;

    m_extra_isSet = false;
    m_extra_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_materialized_path_isSet = false;
    m_materialized_path_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIAttributes_21::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributes_21::fromJsonObject(QJsonObject json) {

    m_content_type_isValid = ::OpenAPI::fromJsonValue(m_content_type, json[QString("content_type")]);
    m_content_type_isSet = !json[QString("content_type")].isNull() && m_content_type_isValid;

    m_current_user_can_comment_isValid = ::OpenAPI::fromJsonValue(m_current_user_can_comment, json[QString("current_user_can_comment")]);
    m_current_user_can_comment_isSet = !json[QString("current_user_can_comment")].isNull() && m_current_user_can_comment_isValid;

    m_date_modified_isValid = ::OpenAPI::fromJsonValue(m_date_modified, json[QString("date_modified")]);
    m_date_modified_isSet = !json[QString("date_modified")].isNull() && m_date_modified_isValid;

    m_extra_isValid = ::OpenAPI::fromJsonValue(m_extra, json[QString("extra")]);
    m_extra_isSet = !json[QString("extra")].isNull() && m_extra_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_materialized_path_isValid = ::OpenAPI::fromJsonValue(m_materialized_path, json[QString("materialized_path")]);
    m_materialized_path_isSet = !json[QString("materialized_path")].isNull() && m_materialized_path_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIAttributes_21::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributes_21::asJsonObject() const {
    QJsonObject obj;
    if (m_content_type_isSet) {
        obj.insert(QString("content_type"), ::OpenAPI::toJsonValue(m_content_type));
    }
    if (m_current_user_can_comment_isSet) {
        obj.insert(QString("current_user_can_comment"), ::OpenAPI::toJsonValue(m_current_user_can_comment));
    }
    if (m_date_modified_isSet) {
        obj.insert(QString("date_modified"), ::OpenAPI::toJsonValue(m_date_modified));
    }
    if (m_extra_isSet) {
        obj.insert(QString("extra"), ::OpenAPI::toJsonValue(m_extra));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_materialized_path_isSet) {
        obj.insert(QString("materialized_path"), ::OpenAPI::toJsonValue(m_materialized_path));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QString OAIAttributes_21::getContentType() const {
    return m_content_type;
}
void OAIAttributes_21::setContentType(const QString &content_type) {
    m_content_type = content_type;
    m_content_type_isSet = true;
}

bool OAIAttributes_21::is_content_type_Set() const{
    return m_content_type_isSet;
}

bool OAIAttributes_21::is_content_type_Valid() const{
    return m_content_type_isValid;
}

QString OAIAttributes_21::getCurrentUserCanComment() const {
    return m_current_user_can_comment;
}
void OAIAttributes_21::setCurrentUserCanComment(const QString &current_user_can_comment) {
    m_current_user_can_comment = current_user_can_comment;
    m_current_user_can_comment_isSet = true;
}

bool OAIAttributes_21::is_current_user_can_comment_Set() const{
    return m_current_user_can_comment_isSet;
}

bool OAIAttributes_21::is_current_user_can_comment_Valid() const{
    return m_current_user_can_comment_isValid;
}

QDateTime OAIAttributes_21::getDateModified() const {
    return m_date_modified;
}
void OAIAttributes_21::setDateModified(const QDateTime &date_modified) {
    m_date_modified = date_modified;
    m_date_modified_isSet = true;
}

bool OAIAttributes_21::is_date_modified_Set() const{
    return m_date_modified_isSet;
}

bool OAIAttributes_21::is_date_modified_Valid() const{
    return m_date_modified_isValid;
}

QString OAIAttributes_21::getExtra() const {
    return m_extra;
}
void OAIAttributes_21::setExtra(const QString &extra) {
    m_extra = extra;
    m_extra_isSet = true;
}

bool OAIAttributes_21::is_extra_Set() const{
    return m_extra_isSet;
}

bool OAIAttributes_21::is_extra_Valid() const{
    return m_extra_isValid;
}

QString OAIAttributes_21::getKind() const {
    return m_kind;
}
void OAIAttributes_21::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIAttributes_21::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIAttributes_21::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIAttributes_21::getMaterializedPath() const {
    return m_materialized_path;
}
void OAIAttributes_21::setMaterializedPath(const QString &materialized_path) {
    m_materialized_path = materialized_path;
    m_materialized_path_isSet = true;
}

bool OAIAttributes_21::is_materialized_path_Set() const{
    return m_materialized_path_isSet;
}

bool OAIAttributes_21::is_materialized_path_Valid() const{
    return m_materialized_path_isValid;
}

QString OAIAttributes_21::getName() const {
    return m_name;
}
void OAIAttributes_21::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAttributes_21::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAttributes_21::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAttributes_21::getPath() const {
    return m_path;
}
void OAIAttributes_21::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIAttributes_21::is_path_Set() const{
    return m_path_isSet;
}

bool OAIAttributes_21::is_path_Valid() const{
    return m_path_isValid;
}

QString OAIAttributes_21::getSize() const {
    return m_size;
}
void OAIAttributes_21::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIAttributes_21::is_size_Set() const{
    return m_size_isSet;
}

bool OAIAttributes_21::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIAttributes_21::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_user_can_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_materialized_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributes_21::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_content_type_isValid && m_current_user_can_comment_isValid && m_date_modified_isValid && m_extra_isValid && m_kind_isValid && m_materialized_path_isValid && m_name_isValid && m_path_isValid && m_size_isValid && true;
}

} // namespace OpenAPI
