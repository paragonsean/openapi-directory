/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelationships_7.h
 *
 * URLs to other entities or entity collections that have a relationship to the node entity.
 */

#ifndef OAIRelationships_7_H
#define OAIRelationships_7_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRelationships_7 : public OAIObject {
public:
    OAIRelationships_7();
    OAIRelationships_7(QString json);
    ~OAIRelationships_7() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAffiliatedInstitutions() const;
    void setAffiliatedInstitutions(const QString &affiliated_institutions);
    bool is_affiliated_institutions_Set() const;
    bool is_affiliated_institutions_Valid() const;

    QString getChildren() const;
    void setChildren(const QString &children);
    bool is_children_Set() const;
    bool is_children_Valid() const;

    QString getCitation() const;
    void setCitation(const QString &citation);
    bool is_citation_Set() const;
    bool is_citation_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getContributors() const;
    void setContributors(const QString &contributors);
    bool is_contributors_Set() const;
    bool is_contributors_Valid() const;

    QString getDraftRegistrations() const;
    void setDraftRegistrations(const QString &draft_registrations);
    bool is_draft_registrations_Set() const;
    bool is_draft_registrations_Valid() const;

    QString getFiles() const;
    void setFiles(const QString &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    QString getForkedFrom() const;
    void setForkedFrom(const QString &forked_from);
    bool is_forked_from_Set() const;
    bool is_forked_from_Valid() const;

    QString getForks() const;
    void setForks(const QString &forks);
    bool is_forks_Set() const;
    bool is_forks_Valid() const;

    QString getIdentifiers() const;
    void setIdentifiers(const QString &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getLinkedNodes() const;
    void setLinkedNodes(const QString &linked_nodes);
    bool is_linked_nodes_Set() const;
    bool is_linked_nodes_Valid() const;

    QString getLogs() const;
    void setLogs(const QString &logs);
    bool is_logs_Set() const;
    bool is_logs_Valid() const;

    QString getNodeLinks() const;
    void setNodeLinks(const QString &node_links);
    bool is_node_links_Set() const;
    bool is_node_links_Valid() const;

    QString getParent() const;
    void setParent(const QString &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    QString getPreprints() const;
    void setPreprints(const QString &preprints);
    bool is_preprints_Set() const;
    bool is_preprints_Valid() const;

    QString getRegistrations() const;
    void setRegistrations(const QString &registrations);
    bool is_registrations_Set() const;
    bool is_registrations_Valid() const;

    QString getRoot() const;
    void setRoot(const QString &root);
    bool is_root_Set() const;
    bool is_root_Valid() const;

    QString getTemplateNode() const;
    void setTemplateNode(const QString &template_node);
    bool is_template_node_Set() const;
    bool is_template_node_Valid() const;

    QString getViewOnlyLinks() const;
    void setViewOnlyLinks(const QString &view_only_links);
    bool is_view_only_links_Set() const;
    bool is_view_only_links_Valid() const;

    QString getWikis() const;
    void setWikis(const QString &wikis);
    bool is_wikis_Set() const;
    bool is_wikis_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_affiliated_institutions;
    bool m_affiliated_institutions_isSet;
    bool m_affiliated_institutions_isValid;

    QString m_children;
    bool m_children_isSet;
    bool m_children_isValid;

    QString m_citation;
    bool m_citation_isSet;
    bool m_citation_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_contributors;
    bool m_contributors_isSet;
    bool m_contributors_isValid;

    QString m_draft_registrations;
    bool m_draft_registrations_isSet;
    bool m_draft_registrations_isValid;

    QString m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    QString m_forked_from;
    bool m_forked_from_isSet;
    bool m_forked_from_isValid;

    QString m_forks;
    bool m_forks_isSet;
    bool m_forks_isValid;

    QString m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_linked_nodes;
    bool m_linked_nodes_isSet;
    bool m_linked_nodes_isValid;

    QString m_logs;
    bool m_logs_isSet;
    bool m_logs_isValid;

    QString m_node_links;
    bool m_node_links_isSet;
    bool m_node_links_isValid;

    QString m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    QString m_preprints;
    bool m_preprints_isSet;
    bool m_preprints_isValid;

    QString m_registrations;
    bool m_registrations_isSet;
    bool m_registrations_isValid;

    QString m_root;
    bool m_root_isSet;
    bool m_root_isValid;

    QString m_template_node;
    bool m_template_node_isSet;
    bool m_template_node_isValid;

    QString m_view_only_links;
    bool m_view_only_links_isSet;
    bool m_view_only_links_isValid;

    QString m_wikis;
    bool m_wikis_isSet;
    bool m_wikis_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelationships_7)

#endif // OAIRelationships_7_H
