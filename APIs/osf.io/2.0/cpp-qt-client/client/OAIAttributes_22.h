/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttributes_22.h
 *
 * The properties of the preprint provider entity.
 */

#ifndef OAIAttributes_22_H
#define OAIAttributes_22_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAttributes_22 : public OAIObject {
public:
    OAIAttributes_22();
    OAIAttributes_22(QString json);
    ~OAIAttributes_22() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdvisoryBoard() const;
    void setAdvisoryBoard(const QString &advisory_board);
    bool is_advisory_board_Set() const;
    bool is_advisory_board_Valid() const;

    QString getBannerPath() const;
    void setBannerPath(const QString &banner_path);
    bool is_banner_path_Set() const;
    bool is_banner_path_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    bool isDomainRedirectEnabled() const;
    void setDomainRedirectEnabled(const bool &domain_redirect_enabled);
    bool is_domain_redirect_enabled_Set() const;
    bool is_domain_redirect_enabled_Valid() const;

    QString getEmailContact() const;
    void setEmailContact(const QString &email_contact);
    bool is_email_contact_Set() const;
    bool is_email_contact_Valid() const;

    QString getEmailSupport() const;
    void setEmailSupport(const QString &email_support);
    bool is_email_support_Set() const;
    bool is_email_support_Valid() const;

    QString getExample() const;
    void setExample(const QString &example);
    bool is_example_Set() const;
    bool is_example_Valid() const;

    QString getLogoPath() const;
    void setLogoPath(const QString &logo_path);
    bool is_logo_path_Set() const;
    bool is_logo_path_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSocialFacebook() const;
    void setSocialFacebook(const QString &social_facebook);
    bool is_social_facebook_Set() const;
    bool is_social_facebook_Valid() const;

    QString getSocialInstagram() const;
    void setSocialInstagram(const QString &social_instagram);
    bool is_social_instagram_Set() const;
    bool is_social_instagram_Valid() const;

    QString getSubjectsAcceptable() const;
    void setSubjectsAcceptable(const QString &subjects_acceptable);
    bool is_subjects_acceptable_Set() const;
    bool is_subjects_acceptable_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_advisory_board;
    bool m_advisory_board_isSet;
    bool m_advisory_board_isValid;

    QString m_banner_path;
    bool m_banner_path_isSet;
    bool m_banner_path_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    bool m_domain_redirect_enabled;
    bool m_domain_redirect_enabled_isSet;
    bool m_domain_redirect_enabled_isValid;

    QString m_email_contact;
    bool m_email_contact_isSet;
    bool m_email_contact_isValid;

    QString m_email_support;
    bool m_email_support_isSet;
    bool m_email_support_isValid;

    QString m_example;
    bool m_example_isSet;
    bool m_example_isValid;

    QString m_logo_path;
    bool m_logo_path_isSet;
    bool m_logo_path_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_social_facebook;
    bool m_social_facebook_isSet;
    bool m_social_facebook_isValid;

    QString m_social_instagram;
    bool m_social_instagram_isSet;
    bool m_social_instagram_isValid;

    QString m_subjects_acceptable;
    bool m_subjects_acceptable_isSet;
    bool m_subjects_acceptable_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttributes_22)

#endif // OAIAttributes_22_H
