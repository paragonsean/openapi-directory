/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attributes22 model module.
 * @module model/Attributes22
 * @version 2.0
 */
class Attributes22 {
    /**
     * Constructs a new <code>Attributes22</code>.
     * The properties of the preprint provider entity.
     * @alias module:model/Attributes22
     */
    constructor() { 
        
        Attributes22.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attributes22</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes22} obj Optional instance to populate.
     * @return {module:model/Attributes22} The populated <code>Attributes22</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes22();

            if (data.hasOwnProperty('advisory_board')) {
                obj['advisory_board'] = ApiClient.convertToType(data['advisory_board'], 'String');
            }
            if (data.hasOwnProperty('banner_path')) {
                obj['banner_path'] = ApiClient.convertToType(data['banner_path'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('domain_redirect_enabled')) {
                obj['domain_redirect_enabled'] = ApiClient.convertToType(data['domain_redirect_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('email_contact')) {
                obj['email_contact'] = ApiClient.convertToType(data['email_contact'], 'String');
            }
            if (data.hasOwnProperty('email_support')) {
                obj['email_support'] = ApiClient.convertToType(data['email_support'], 'String');
            }
            if (data.hasOwnProperty('example')) {
                obj['example'] = ApiClient.convertToType(data['example'], 'String');
            }
            if (data.hasOwnProperty('logo_path')) {
                obj['logo_path'] = ApiClient.convertToType(data['logo_path'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('social_facebook')) {
                obj['social_facebook'] = ApiClient.convertToType(data['social_facebook'], 'String');
            }
            if (data.hasOwnProperty('social_instagram')) {
                obj['social_instagram'] = ApiClient.convertToType(data['social_instagram'], 'String');
            }
            if (data.hasOwnProperty('subjects_acceptable')) {
                obj['subjects_acceptable'] = ApiClient.convertToType(data['subjects_acceptable'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes22</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes22</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['advisory_board'] && !(typeof data['advisory_board'] === 'string' || data['advisory_board'] instanceof String)) {
            throw new Error("Expected the field `advisory_board` to be a primitive type in the JSON string but got " + data['advisory_board']);
        }
        // ensure the json data is a string
        if (data['banner_path'] && !(typeof data['banner_path'] === 'string' || data['banner_path'] instanceof String)) {
            throw new Error("Expected the field `banner_path` to be a primitive type in the JSON string but got " + data['banner_path']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['email_contact'] && !(typeof data['email_contact'] === 'string' || data['email_contact'] instanceof String)) {
            throw new Error("Expected the field `email_contact` to be a primitive type in the JSON string but got " + data['email_contact']);
        }
        // ensure the json data is a string
        if (data['email_support'] && !(typeof data['email_support'] === 'string' || data['email_support'] instanceof String)) {
            throw new Error("Expected the field `email_support` to be a primitive type in the JSON string but got " + data['email_support']);
        }
        // ensure the json data is a string
        if (data['example'] && !(typeof data['example'] === 'string' || data['example'] instanceof String)) {
            throw new Error("Expected the field `example` to be a primitive type in the JSON string but got " + data['example']);
        }
        // ensure the json data is a string
        if (data['logo_path'] && !(typeof data['logo_path'] === 'string' || data['logo_path'] instanceof String)) {
            throw new Error("Expected the field `logo_path` to be a primitive type in the JSON string but got " + data['logo_path']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['social_facebook'] && !(typeof data['social_facebook'] === 'string' || data['social_facebook'] instanceof String)) {
            throw new Error("Expected the field `social_facebook` to be a primitive type in the JSON string but got " + data['social_facebook']);
        }
        // ensure the json data is a string
        if (data['social_instagram'] && !(typeof data['social_instagram'] === 'string' || data['social_instagram'] instanceof String)) {
            throw new Error("Expected the field `social_instagram` to be a primitive type in the JSON string but got " + data['social_instagram']);
        }
        // ensure the json data is a string
        if (data['subjects_acceptable'] && !(typeof data['subjects_acceptable'] === 'string' || data['subjects_acceptable'] instanceof String)) {
            throw new Error("Expected the field `subjects_acceptable` to be a primitive type in the JSON string but got " + data['subjects_acceptable']);
        }

        return true;
    }


}



/**
 * The HTML representation of the preprint provider's advisory board.
 * @member {String} advisory_board
 */
Attributes22.prototype['advisory_board'] = undefined;

/**
 * A static path to the preprint provider's banner image. This field is deprecated as of verson 2.4.
 * @member {String} banner_path
 */
Attributes22.prototype['banner_path'] = undefined;

/**
 * The description of the preprint provider.
 * @member {String} description
 */
Attributes22.prototype['description'] = undefined;

/**
 * The preprint provider's domain, if the provider is using a domain to for their preprint service.
 * @member {String} domain
 */
Attributes22.prototype['domain'] = undefined;

/**
 * Whether or not redirects are enabled for the provider's domain.
 * @member {Boolean} domain_redirect_enabled
 */
Attributes22.prototype['domain_redirect_enabled'] = undefined;

/**
 * The preprint provider's contact email address. This field is deprecated as of verson 2.4.
 * @member {String} email_contact
 */
Attributes22.prototype['email_contact'] = undefined;

/**
 * The preprint providers's support email address.
 * @member {String} email_support
 */
Attributes22.prototype['email_support'] = undefined;

/**
 * The GUID for an example preprint from this preprint provider.
 * @member {String} example
 */
Attributes22.prototype['example'] = undefined;

/**
 * A static path to the preprint provider's logo image. This field is deprecated as of verson 2.4.
 * @member {String} logo_path
 */
Attributes22.prototype['logo_path'] = undefined;

/**
 * The name of the preprint provider.
 * @member {String} name
 */
Attributes22.prototype['name'] = undefined;

/**
 * The preprint provider's Facebook account ID. This field is deprecated as of verson 2.4.
 * @member {String} social_facebook
 */
Attributes22.prototype['social_facebook'] = undefined;

/**
 * The preprint provider's Instagram account ID. This field is deprecated as of verson 2.4.
 * @member {String} social_instagram
 */
Attributes22.prototype['social_instagram'] = undefined;

/**
 * A nested array structure defining allowed subjects for this preprint provider, in the BePress taxonomy.
 * @member {String} subjects_acceptable
 */
Attributes22.prototype['subjects_acceptable'] = undefined;






export default Attributes22;

