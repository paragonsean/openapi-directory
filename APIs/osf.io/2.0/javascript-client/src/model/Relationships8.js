/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Relationships8 model module.
 * @module model/Relationships8
 * @version 2.0
 */
class Relationships8 {
    /**
     * Constructs a new <code>Relationships8</code>.
     * URLs to other entities or entity collections that have a relationship to the user entity.
     * @alias module:model/Relationships8
     */
    constructor() { 
        
        Relationships8.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Relationships8</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Relationships8} obj Optional instance to populate.
     * @return {module:model/Relationships8} The populated <code>Relationships8</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Relationships8();

            if (data.hasOwnProperty('institutions')) {
                obj['institutions'] = ApiClient.convertToType(data['institutions'], 'String');
            }
            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Relationships8</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Relationships8</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['institutions'] && !(typeof data['institutions'] === 'string' || data['institutions'] instanceof String)) {
            throw new Error("Expected the field `institutions` to be a primitive type in the JSON string but got " + data['institutions']);
        }
        // ensure the json data is a string
        if (data['nodes'] && !(typeof data['nodes'] === 'string' || data['nodes'] instanceof String)) {
            throw new Error("Expected the field `nodes` to be a primitive type in the JSON string but got " + data['nodes']);
        }

        return true;
    }


}



/**
 * A link to the list of institutions the user is affiliated with.
 * @member {String} institutions
 */
Relationships8.prototype['institutions'] = undefined;

/**
 * A link to the list of nodes the user is a contributor to.
 * @member {String} nodes
 */
Relationships8.prototype['nodes'] = undefined;






export default Relationships8;

