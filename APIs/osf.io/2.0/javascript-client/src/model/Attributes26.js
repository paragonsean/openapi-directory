/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attributes26 model module.
 * @module model/Attributes26
 * @version 2.0
 */
class Attributes26 {
    /**
     * Constructs a new <code>Attributes26</code>.
     * @alias module:model/Attributes26
     */
    constructor() { 
        
        Attributes26.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attributes26</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes26} obj Optional instance to populate.
     * @return {module:model/Attributes26} The populated <code>Attributes26</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes26();

            if (data.hasOwnProperty('auto')) {
                obj['auto'] = ApiClient.convertToType(data['auto'], 'Boolean');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'String');
            }
            if (data.hasOwnProperty('from_state')) {
                obj['from_state'] = ApiClient.convertToType(data['from_state'], 'String');
            }
            if (data.hasOwnProperty('to_state')) {
                obj['to_state'] = ApiClient.convertToType(data['to_state'], 'String');
            }
            if (data.hasOwnProperty('trigger')) {
                obj['trigger'] = ApiClient.convertToType(data['trigger'], 'String');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes26</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes26</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['date_created'] && !(typeof data['date_created'] === 'string' || data['date_created'] instanceof String)) {
            throw new Error("Expected the field `date_created` to be a primitive type in the JSON string but got " + data['date_created']);
        }
        // ensure the json data is a string
        if (data['from_state'] && !(typeof data['from_state'] === 'string' || data['from_state'] instanceof String)) {
            throw new Error("Expected the field `from_state` to be a primitive type in the JSON string but got " + data['from_state']);
        }
        // ensure the json data is a string
        if (data['to_state'] && !(typeof data['to_state'] === 'string' || data['to_state'] instanceof String)) {
            throw new Error("Expected the field `to_state` to be a primitive type in the JSON string but got " + data['to_state']);
        }
        // ensure the json data is a string
        if (data['trigger'] && !(typeof data['trigger'] === 'string' || data['trigger'] instanceof String)) {
            throw new Error("Expected the field `trigger` to be a primitive type in the JSON string but got " + data['trigger']);
        }

        return true;
    }


}



/**
 * Bool of representing whether a user created the action.
 * @member {Boolean} auto
 */
Attributes26.prototype['auto'] = undefined;

/**
 * A comment made explaining the reasoning of the action.
 * @member {String} comment
 */
Attributes26.prototype['comment'] = undefined;

/**
 * The date the action was created.
 * @member {String} date_created
 */
Attributes26.prototype['date_created'] = undefined;

/**
 * The name of the state of the Schema Response prior to the creation of the action.
 * @member {module:model/Attributes26.FromStateEnum} from_state
 */
Attributes26.prototype['from_state'] = undefined;

/**
 * The name of the state of the Schema Response after the creation of the action
 * @member {module:model/Attributes26.ToStateEnum} to_state
 */
Attributes26.prototype['to_state'] = undefined;

/**
 * The name of the trigger that caused the action.
 * @member {module:model/Attributes26.TriggerEnum} trigger
 */
Attributes26.prototype['trigger'] = undefined;

/**
 * Bool of representing whether the action is visible.
 * @member {Boolean} visible
 */
Attributes26.prototype['visible'] = undefined;





/**
 * Allowed values for the <code>from_state</code> property.
 * @enum {String}
 * @readonly
 */
Attributes26['FromStateEnum'] = {

    /**
     * value: "initial"
     * @const
     */
    "initial": "initial",

    /**
     * value: "in_progress"
     * @const
     */
    "in_progress": "in_progress",

    /**
     * value: "approved"
     * @const
     */
    "approved": "approved",

    /**
     * value: "pending_moderation"
     * @const
     */
    "pending_moderation": "pending_moderation"
};


/**
 * Allowed values for the <code>to_state</code> property.
 * @enum {String}
 * @readonly
 */
Attributes26['ToStateEnum'] = {

    /**
     * value: "in_progress"
     * @const
     */
    "in_progress": "in_progress",

    /**
     * value: "approved"
     * @const
     */
    "approved": "approved",

    /**
     * value: "pending_moderation"
     * @const
     */
    "pending_moderation": "pending_moderation"
};


/**
 * Allowed values for the <code>trigger</code> property.
 * @enum {String}
 * @readonly
 */
Attributes26['TriggerEnum'] = {

    /**
     * value: "submit"
     * @const
     */
    "submit": "submit",

    /**
     * value: "approve"
     * @const
     */
    "approve": "approve",

    /**
     * value: "accept"
     * @const
     */
    "accept": "accept",

    /**
     * value: "admin_reject"
     * @const
     */
    "admin_reject": "admin_reject",

    /**
     * value: "moderator_reject"
     * @const
     */
    "moderator_reject": "moderator_reject"
};



export default Attributes26;

