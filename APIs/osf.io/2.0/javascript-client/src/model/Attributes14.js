/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attributes14 model module.
 * @module model/Attributes14
 * @version 2.0
 */
class Attributes14 {
    /**
     * Constructs a new <code>Attributes14</code>.
     * The properties of the node addon entity.
     * @alias module:model/Attributes14
     */
    constructor() { 
        
        Attributes14.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attributes14</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes14} obj Optional instance to populate.
     * @return {module:model/Attributes14} The populated <code>Attributes14</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes14();

            if (data.hasOwnProperty('configured')) {
                obj['configured'] = ApiClient.convertToType(data['configured'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('external_account_id')) {
                obj['external_account_id'] = ApiClient.convertToType(data['external_account_id'], 'String');
            }
            if (data.hasOwnProperty('folder_id')) {
                obj['folder_id'] = ApiClient.convertToType(data['folder_id'], 'String');
            }
            if (data.hasOwnProperty('folder_path')) {
                obj['folder_path'] = ApiClient.convertToType(data['folder_path'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('node_has_auth')) {
                obj['node_has_auth'] = ApiClient.convertToType(data['node_has_auth'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes14</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes14</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['external_account_id'] && !(typeof data['external_account_id'] === 'string' || data['external_account_id'] instanceof String)) {
            throw new Error("Expected the field `external_account_id` to be a primitive type in the JSON string but got " + data['external_account_id']);
        }
        // ensure the json data is a string
        if (data['folder_id'] && !(typeof data['folder_id'] === 'string' || data['folder_id'] instanceof String)) {
            throw new Error("Expected the field `folder_id` to be a primitive type in the JSON string but got " + data['folder_id']);
        }
        // ensure the json data is a string
        if (data['folder_path'] && !(typeof data['folder_path'] === 'string' || data['folder_path'] instanceof String)) {
            throw new Error("Expected the field `folder_path` to be a primitive type in the JSON string but got " + data['folder_path']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Whether or not this node has been configured with an addon folder.
 * @member {Boolean} configured
 */
Attributes14.prototype['configured'] = undefined;

/**
 * Whether or not this node has a NodeSettings object associated with it.
 * @member {Boolean} enabled
 */
Attributes14.prototype['enabled'] = undefined;

/**
 * The ID of the associated node addon account, if any.
 * @member {String} external_account_id
 */
Attributes14.prototype['external_account_id'] = undefined;

/**
 * The ID of the linked folder from the addon provider.
 * @member {String} folder_id
 */
Attributes14.prototype['folder_id'] = undefined;

/**
 * The folder path of the linked folder from the addon provider. Google Drive specific
 * @member {String} folder_path
 */
Attributes14.prototype['folder_path'] = undefined;

/**
 * A label specific to the addon provider.
 * @member {String} label
 */
Attributes14.prototype['label'] = undefined;

/**
 * Whether or not this node is fully authorized to use this node addon.
 * @member {Boolean} node_has_auth
 */
Attributes14.prototype['node_has_auth'] = undefined;

/**
 * An external link specific to the addon provider.
 * @member {String} url
 */
Attributes14.prototype['url'] = undefined;






export default Attributes14;

