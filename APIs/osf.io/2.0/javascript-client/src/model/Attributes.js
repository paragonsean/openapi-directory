/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attributes model module.
 * @module model/Attributes
 * @version 2.0
 */
class Attributes {
    /**
     * Constructs a new <code>Attributes</code>.
     * The properties of the addon entity.
     * @alias module:model/Attributes
     */
    constructor() { 
        
        Attributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes} obj Optional instance to populate.
     * @return {module:model/Attributes} The populated <code>Attributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['categories'])) {
            throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * List of categories this addon belongs to.
 * @member {Array.<module:model/Attributes.CategoriesEnum>} categories
 */
Attributes.prototype['categories'] = undefined;

/**
 * The description of the service provider.
 * @member {String} description
 */
Attributes.prototype['description'] = undefined;

/**
 * The name of the third-party service provider.
 * @member {String} name
 */
Attributes.prototype['name'] = undefined;

/**
 * The URL to the third-party service provider.
 * @member {String} url
 */
Attributes.prototype['url'] = undefined;





/**
 * Allowed values for the <code>categories</code> property.
 * @enum {String}
 * @readonly
 */
Attributes['CategoriesEnum'] = {

    /**
     * value: "documentation"
     * @const
     */
    "documentation": "documentation",

    /**
     * value: "storage"
     * @const
     */
    "storage": "storage",

    /**
     * value: "bibliography"
     * @const
     */
    "bibliography": "bibliography",

    /**
     * value: "other"
     * @const
     */
    "other": "other",

    /**
     * value: "security"
     * @const
     */
    "security": "security",

    /**
     * value: "citations"
     * @const
     */
    "citations": "citations"
};



export default Attributes;

