/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attributes27 model module.
 * @module model/Attributes27
 * @version 2.0
 */
class Attributes27 {
    /**
     * Constructs a new <code>Attributes27</code>.
     * The attributes of the Registration Schema Block.
     * @alias module:model/Attributes27
     */
    constructor() { 
        
        Attributes27.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attributes27</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes27} obj Optional instance to populate.
     * @return {module:model/Attributes27} The populated <code>Attributes27</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes27();

            if (data.hasOwnProperty('block_type')) {
                obj['block_type'] = ApiClient.convertToType(data['block_type'], 'String');
            }
            if (data.hasOwnProperty('display_text')) {
                obj['display_text'] = ApiClient.convertToType(data['display_text'], 'String');
            }
            if (data.hasOwnProperty('example_text')) {
                obj['example_text'] = ApiClient.convertToType(data['example_text'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('registration_response_key')) {
                obj['registration_response_key'] = ApiClient.convertToType(data['registration_response_key'], 'String');
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
            }
            if (data.hasOwnProperty('schema_block_group_key')) {
                obj['schema_block_group_key'] = ApiClient.convertToType(data['schema_block_group_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes27</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes27</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['block_type'] && !(typeof data['block_type'] === 'string' || data['block_type'] instanceof String)) {
            throw new Error("Expected the field `block_type` to be a primitive type in the JSON string but got " + data['block_type']);
        }
        // ensure the json data is a string
        if (data['display_text'] && !(typeof data['display_text'] === 'string' || data['display_text'] instanceof String)) {
            throw new Error("Expected the field `display_text` to be a primitive type in the JSON string but got " + data['display_text']);
        }
        // ensure the json data is a string
        if (data['example_text'] && !(typeof data['example_text'] === 'string' || data['example_text'] instanceof String)) {
            throw new Error("Expected the field `example_text` to be a primitive type in the JSON string but got " + data['example_text']);
        }
        // ensure the json data is a string
        if (data['registration_response_key'] && !(typeof data['registration_response_key'] === 'string' || data['registration_response_key'] instanceof String)) {
            throw new Error("Expected the field `registration_response_key` to be a primitive type in the JSON string but got " + data['registration_response_key']);
        }
        // ensure the json data is a string
        if (data['schema_block_group_key'] && !(typeof data['schema_block_group_key'] === 'string' || data['schema_block_group_key'] instanceof String)) {
            throw new Error("Expected the field `schema_block_group_key` to be a primitive type in the JSON string but got " + data['schema_block_group_key']);
        }

        return true;
    }


}



/**
 * A string that represents the type of input that the schema will take and the UI element that appears to the user on the frontend.
 * @member {module:model/Attributes27.BlockTypeEnum} block_type
 */
Attributes27.prototype['block_type'] = undefined;

/**
 * The text that will accompany the UI element displayed on this Registration Schema Block.
 * @member {String} display_text
 */
Attributes27.prototype['display_text'] = undefined;

/**
 * The text that will accompany the UI element displayed on this Registration Schema Block.
 * @member {String} example_text
 */
Attributes27.prototype['example_text'] = undefined;

/**
 * Integer beginning at zero that represents the order of Registration Schema Block in the Registration Schema.
 * @member {Number} index
 */
Attributes27.prototype['index'] = undefined;

/**
 * This string is the the block key for the Registration Schema Block's corresponding block on the Schema Response.
 * @member {String} registration_response_key
 */
Attributes27.prototype['registration_response_key'] = undefined;

/**
 * Bool that represents if this field is required for creation of a Schema Response.
 * @member {Boolean} required
 */
Attributes27.prototype['required'] = undefined;

/**
 * This string indicates if a block is part of a block group, block groups may contain the different options dropdown menu or a group of inputs and display elements that are validated together.
 * @member {String} schema_block_group_key
 */
Attributes27.prototype['schema_block_group_key'] = undefined;





/**
 * Allowed values for the <code>block_type</code> property.
 * @enum {String}
 * @readonly
 */
Attributes27['BlockTypeEnum'] = {

    /**
     * value: "page-heading"
     * @const
     */
    "page-heading": "page-heading",

    /**
     * value: "section-heading"
     * @const
     */
    "section-heading": "section-heading",

    /**
     * value: "subsection-heading"
     * @const
     */
    "subsection-heading": "subsection-heading",

    /**
     * value: "paragraph"
     * @const
     */
    "paragraph": "paragraph",

    /**
     * value: "question-label"
     * @const
     */
    "question-label": "question-label",

    /**
     * value: "short-text-input"
     * @const
     */
    "short-text-input": "short-text-input",

    /**
     * value: "long-text-input"
     * @const
     */
    "long-text-input": "long-text-input",

    /**
     * value: "file-input"
     * @const
     */
    "file-input": "file-input",

    /**
     * value: "contributors-input"
     * @const
     */
    "contributors-input": "contributors-input",

    /**
     * value: "single-select-input"
     * @const
     */
    "single-select-input": "single-select-input",

    /**
     * value: "multi-select-input"
     * @const
     */
    "multi-select-input": "multi-select-input",

    /**
     * value: "select-input-option"
     * @const
     */
    "select-input-option": "select-input-option",

    /**
     * value: "select-other-option"
     * @const
     */
    "select-other-option": "select-other-option"
};



export default Attributes27;

