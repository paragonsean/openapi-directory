/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Relationships9 model module.
 * @module model/Relationships9
 * @version 2.0
 */
class Relationships9 {
    /**
     * Constructs a new <code>Relationships9</code>.
     * URLs to other entities or entity collections that have a relationship to the log.
     * @alias module:model/Relationships9
     * @param node {String} A relationship to the node associated with this log.
     */
    constructor(node) { 
        
        Relationships9.initialize(this, node);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, node) { 
        obj['node'] = node;
    }

    /**
     * Constructs a <code>Relationships9</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Relationships9} obj Optional instance to populate.
     * @return {module:model/Relationships9} The populated <code>Relationships9</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Relationships9();

            if (data.hasOwnProperty('linked_node')) {
                obj['linked_node'] = ApiClient.convertToType(data['linked_node'], 'String');
            }
            if (data.hasOwnProperty('node')) {
                obj['node'] = ApiClient.convertToType(data['node'], 'String');
            }
            if (data.hasOwnProperty('original_node')) {
                obj['original_node'] = ApiClient.convertToType(data['original_node'], 'String');
            }
            if (data.hasOwnProperty('template_node')) {
                obj['template_node'] = ApiClient.convertToType(data['template_node'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Relationships9</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Relationships9</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Relationships9.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['linked_node'] && !(typeof data['linked_node'] === 'string' || data['linked_node'] instanceof String)) {
            throw new Error("Expected the field `linked_node` to be a primitive type in the JSON string but got " + data['linked_node']);
        }
        // ensure the json data is a string
        if (data['node'] && !(typeof data['node'] === 'string' || data['node'] instanceof String)) {
            throw new Error("Expected the field `node` to be a primitive type in the JSON string but got " + data['node']);
        }
        // ensure the json data is a string
        if (data['original_node'] && !(typeof data['original_node'] === 'string' || data['original_node'] instanceof String)) {
            throw new Error("Expected the field `original_node` to be a primitive type in the JSON string but got " + data['original_node']);
        }
        // ensure the json data is a string
        if (data['template_node'] && !(typeof data['template_node'] === 'string' || data['template_node'] instanceof String)) {
            throw new Error("Expected the field `template_node` to be a primitive type in the JSON string but got " + data['template_node']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }

        return true;
    }


}

Relationships9.RequiredProperties = ["node"];

/**
 * A relationship to the node linked to this log.
 * @member {String} linked_node
 */
Relationships9.prototype['linked_node'] = undefined;

/**
 * A relationship to the node associated with this log.
 * @member {String} node
 */
Relationships9.prototype['node'] = undefined;

/**
 * A relationship to the original node that was associated with this log, in case this log was copied from a node to a fork or registration.
 * @member {String} original_node
 */
Relationships9.prototype['original_node'] = undefined;

/**
 * A relationship to the node used as a template for this log.
 * @member {String} template_node
 */
Relationships9.prototype['template_node'] = undefined;

/**
 * A relationship to the user who performed the log action.
 * @member {String} user
 */
Relationships9.prototype['user'] = undefined;






export default Relationships9;

