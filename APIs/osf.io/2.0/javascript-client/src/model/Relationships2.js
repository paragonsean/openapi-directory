/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Relationships2 model module.
 * @module model/Relationships2
 * @version 2.0
 */
class Relationships2 {
    /**
     * Constructs a new <code>Relationships2</code>.
     * URLs to other entities or entity collections that have a relationship to the draft registration entity.
     * @alias module:model/Relationships2
     */
    constructor() { 
        
        Relationships2.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Relationships2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Relationships2} obj Optional instance to populate.
     * @return {module:model/Relationships2} The populated <code>Relationships2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Relationships2();

            if (data.hasOwnProperty('branched_from')) {
                obj['branched_from'] = ApiClient.convertToType(data['branched_from'], 'String');
            }
            if (data.hasOwnProperty('initiator')) {
                obj['initiator'] = ApiClient.convertToType(data['initiator'], 'String');
            }
            if (data.hasOwnProperty('registration_schema')) {
                obj['registration_schema'] = ApiClient.convertToType(data['registration_schema'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Relationships2</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Relationships2</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['branched_from'] && !(typeof data['branched_from'] === 'string' || data['branched_from'] instanceof String)) {
            throw new Error("Expected the field `branched_from` to be a primitive type in the JSON string but got " + data['branched_from']);
        }
        // ensure the json data is a string
        if (data['initiator'] && !(typeof data['initiator'] === 'string' || data['initiator'] instanceof String)) {
            throw new Error("Expected the field `initiator` to be a primitive type in the JSON string but got " + data['initiator']);
        }
        // ensure the json data is a string
        if (data['registration_schema'] && !(typeof data['registration_schema'] === 'string' || data['registration_schema'] instanceof String)) {
            throw new Error("Expected the field `registration_schema` to be a primitive type in the JSON string but got " + data['registration_schema']);
        }

        return true;
    }


}



/**
 * A link to the node that this draft registration was created from.
 * @member {String} branched_from
 */
Relationships2.prototype['branched_from'] = undefined;

/**
 * A link to the user who initiated the draft registration.
 * @member {String} initiator
 */
Relationships2.prototype['initiator'] = undefined;

/**
 * A link to the detailed registration schema that this draft conforms to.
 * @member {String} registration_schema
 */
Relationships2.prototype['registration_schema'] = undefined;






export default Relationships2;

