/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attributes25 model module.
 * @module model/Attributes25
 * @version 2.0
 */
class Attributes25 {
    /**
     * Constructs a new <code>Attributes25</code>.
     * The properties of the Schema Response.
     * @alias module:model/Attributes25
     */
    constructor() { 
        
        Attributes25.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attributes25</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes25} obj Optional instance to populate.
     * @return {module:model/Attributes25} The populated <code>Attributes25</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes25();

            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Number');
            }
            if (data.hasOwnProperty('date_modified')) {
                obj['date_modified'] = ApiClient.convertToType(data['date_modified'], 'Number');
            }
            if (data.hasOwnProperty('date_submitted')) {
                obj['date_submitted'] = ApiClient.convertToType(data['date_submitted'], 'Number');
            }
            if (data.hasOwnProperty('is_original_response')) {
                obj['is_original_response'] = ApiClient.convertToType(data['is_original_response'], 'Boolean');
            }
            if (data.hasOwnProperty('is_pending_current_user_approval')) {
                obj['is_pending_current_user_approval'] = ApiClient.convertToType(data['is_pending_current_user_approval'], 'Boolean');
            }
            if (data.hasOwnProperty('reviews_state')) {
                obj['reviews_state'] = ApiClient.convertToType(data['reviews_state'], 'String');
            }
            if (data.hasOwnProperty('revision_justification')) {
                obj['revision_justification'] = ApiClient.convertToType(data['revision_justification'], 'String');
            }
            if (data.hasOwnProperty('revision_responses')) {
                obj['revision_responses'] = ApiClient.convertToType(data['revision_responses'], [Object]);
            }
            if (data.hasOwnProperty('updated_response_keys')) {
                obj['updated_response_keys'] = ApiClient.convertToType(data['updated_response_keys'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes25</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes25</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['reviews_state'] && !(typeof data['reviews_state'] === 'string' || data['reviews_state'] instanceof String)) {
            throw new Error("Expected the field `reviews_state` to be a primitive type in the JSON string but got " + data['reviews_state']);
        }
        // ensure the json data is a string
        if (data['revision_justification'] && !(typeof data['revision_justification'] === 'string' || data['revision_justification'] instanceof String)) {
            throw new Error("Expected the field `revision_justification` to be a primitive type in the JSON string but got " + data['revision_justification']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['revision_responses'])) {
            throw new Error("Expected the field `revision_responses` to be an array in the JSON data but got " + data['revision_responses']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['updated_response_keys'])) {
            throw new Error("Expected the field `updated_response_keys` to be an array in the JSON data but got " + data['updated_response_keys']);
        }

        return true;
    }


}



/**
 * The date the Schema Response was created
 * @member {Number} date_created
 */
Attributes25.prototype['date_created'] = undefined;

/**
 * The date the Schema Response was most recently changed.
 * @member {Number} date_modified
 */
Attributes25.prototype['date_modified'] = undefined;

/**
 * The date the Schema Response was submitted for approval.
 * @member {Number} date_submitted
 */
Attributes25.prototype['date_submitted'] = undefined;

/**
 * A bool that represents whether the Schema Response is the original one that was made when the registration was created.
 * @member {Boolean} is_original_response
 */
Attributes25.prototype['is_original_response'] = undefined;

/**
 * A bool that represents whether the Schema Response needs the current user to approve the state transition.
 * @member {Boolean} is_pending_current_user_approval
 */
Attributes25.prototype['is_pending_current_user_approval'] = undefined;

/**
 * A string that represents Schema Response state. `initial` is the state of a Schema Response on a newly registered Registration, to edit a Schema Response you must create a Schema Response Action that triggers a new submission.
 * @member {module:model/Attributes25.ReviewsStateEnum} reviews_state
 */
Attributes25.prototype['reviews_state'] = undefined;

/**
 * A user provided string representing the reason a new Schema Response was needed.
 * @member {String} revision_justification
 */
Attributes25.prototype['revision_justification'] = undefined;

/**
 * A dictionary object representing responses to to the revision where the key is the block key for that the response. For example in the registration response `{\"q1\": \"Answer 1\"}` the block key is `q1`..
 * @member {Array.<Object>} revision_responses
 */
Attributes25.prototype['revision_responses'] = undefined;

/**
 * A list of strings which the response keys for Registration Response Blocks that were updated from the previous schema.
 * @member {Array.<Object>} updated_response_keys
 */
Attributes25.prototype['updated_response_keys'] = undefined;





/**
 * Allowed values for the <code>reviews_state</code> property.
 * @enum {String}
 * @readonly
 */
Attributes25['ReviewsStateEnum'] = {

    /**
     * value: "initial"
     * @const
     */
    "initial": "initial",

    /**
     * value: "in_progress"
     * @const
     */
    "in_progress": "in_progress",

    /**
     * value: "approved"
     * @const
     */
    "approved": "approved",

    /**
     * value: "pending_moderation"
     * @const
     */
    "pending_moderation": "pending_moderation"
};



export default Attributes25;

