/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attributes20 model module.
 * @module model/Attributes20
 * @version 2.0
 */
class Attributes20 {
    /**
     * Constructs a new <code>Attributes20</code>.
     * The properties of the view only link entity.
     * @alias module:model/Attributes20
     */
    constructor() { 
        
        Attributes20.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['anonymous'] = true;
        obj['name'] = 'Shared project link';
    }

    /**
     * Constructs a <code>Attributes20</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes20} obj Optional instance to populate.
     * @return {module:model/Attributes20} The populated <code>Attributes20</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes20();

            if (data.hasOwnProperty('anonymous')) {
                obj['anonymous'] = ApiClient.convertToType(data['anonymous'], 'Boolean');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes20</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes20</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Whether or not the view only link has anonymized contributors
 * @member {Boolean} anonymous
 * @default true
 */
Attributes20.prototype['anonymous'] = true;

/**
 * The time at which the view only link was created, as an iso8601 formatted timestamp.
 * @member {Date} date_created
 */
Attributes20.prototype['date_created'] = undefined;

/**
 * The view only key
 * @member {String} key
 */
Attributes20.prototype['key'] = undefined;

/**
 * The name of the view only link
 * @member {String} name
 * @default 'Shared project link'
 */
Attributes20.prototype['name'] = 'Shared project link';






export default Attributes20;

