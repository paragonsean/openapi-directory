/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Relationships6 model module.
 * @module model/Relationships6
 * @version 2.0
 */
class Relationships6 {
    /**
     * Constructs a new <code>Relationships6</code>.
     * Links to other entities or entity collections that have a relationship to the file entity.
     * @alias module:model/Relationships6
     */
    constructor() { 
        
        Relationships6.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Relationships6</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Relationships6} obj Optional instance to populate.
     * @return {module:model/Relationships6} The populated <code>Relationships6</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Relationships6();

            if (data.hasOwnProperty('checkout')) {
                obj['checkout'] = ApiClient.convertToType(data['checkout'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('node')) {
                obj['node'] = ApiClient.convertToType(data['node'], 'String');
            }
            if (data.hasOwnProperty('versions')) {
                obj['versions'] = ApiClient.convertToType(data['versions'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Relationships6</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Relationships6</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['checkout'] && !(typeof data['checkout'] === 'string' || data['checkout'] instanceof String)) {
            throw new Error("Expected the field `checkout` to be a primitive type in the JSON string but got " + data['checkout']);
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['node'] && !(typeof data['node'] === 'string' || data['node'] instanceof String)) {
            throw new Error("Expected the field `node` to be a primitive type in the JSON string but got " + data['node']);
        }
        // ensure the json data is a string
        if (data['versions'] && !(typeof data['versions'] === 'string' || data['versions'] instanceof String)) {
            throw new Error("Expected the field `versions` to be a primitive type in the JSON string but got " + data['versions']);
        }

        return true;
    }


}



/**
 * A link to the user who checked out the file.
 * @member {String} checkout
 */
Relationships6.prototype['checkout'] = undefined;

/**
 * A link to the comments on the file.
 * @member {String} comments
 */
Relationships6.prototype['comments'] = undefined;

/**
 * A link to the node the file is on.
 * @member {String} node
 */
Relationships6.prototype['node'] = undefined;

/**
 * A link to the versions of the file.
 * @member {String} versions
 */
Relationships6.prototype['versions'] = undefined;






export default Relationships6;

