/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attributes30 model module.
 * @module model/Attributes30
 * @version 2.0
 */
class Attributes30 {
    /**
     * Constructs a new <code>Attributes30</code>.
     * The properties of the addon account entity.
     * @alias module:model/Attributes30
     * @param displayName {String} The user's display name on the third-party service
     * @param provider {String} The short name of the third-party service
     */
    constructor(displayName, provider) { 
        
        Attributes30.initialize(this, displayName, provider);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayName, provider) { 
        obj['display_name'] = displayName;
        obj['provider'] = provider;
    }

    /**
     * Constructs a <code>Attributes30</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes30} obj Optional instance to populate.
     * @return {module:model/Attributes30} The populated <code>Attributes30</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes30();

            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('profile_url')) {
                obj['profile_url'] = ApiClient.convertToType(data['profile_url'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes30</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes30</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Attributes30.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['profile_url'] && !(typeof data['profile_url'] === 'string' || data['profile_url'] instanceof String)) {
            throw new Error("Expected the field `profile_url` to be a primitive type in the JSON string but got " + data['profile_url']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }

        return true;
    }


}

Attributes30.RequiredProperties = ["display_name", "provider"];

/**
 * The user's display name on the third-party service
 * @member {String} display_name
 */
Attributes30.prototype['display_name'] = undefined;

/**
 * The link to user's profile on third-party service
 * @member {String} profile_url
 */
Attributes30.prototype['profile_url'] = undefined;

/**
 * The short name of the third-party service
 * @member {String} provider
 */
Attributes30.prototype['provider'] = undefined;






export default Attributes30;

