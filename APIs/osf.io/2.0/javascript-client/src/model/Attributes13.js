/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LogParams from './LogParams';

/**
 * The Attributes13 model module.
 * @module model/Attributes13
 * @version 2.0
 */
class Attributes13 {
    /**
     * Constructs a new <code>Attributes13</code>.
     * The properties of the log.
     * @alias module:model/Attributes13
     * @param action {String} The type of action performed on the OSF. See actions section for full list of possible actions.
     * @param date {Date} The date and time at which the log was created, as an iso8601 formatted timestamp.
     */
    constructor(action, date) { 
        
        Attributes13.initialize(this, action, date);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, date) { 
        obj['action'] = action;
        obj['date'] = date;
    }

    /**
     * Constructs a <code>Attributes13</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attributes13} obj Optional instance to populate.
     * @return {module:model/Attributes13} The populated <code>Attributes13</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attributes13();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('params')) {
                obj['params'] = LogParams.constructFromObject(data['params']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attributes13</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attributes13</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Attributes13.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // validate the optional field `params`
        if (data['params']) { // data not null
          LogParams.validateJSON(data['params']);
        }

        return true;
    }


}

Attributes13.RequiredProperties = ["action", "date"];

/**
 * The type of action performed on the OSF. See actions section for full list of possible actions.
 * @member {String} action
 */
Attributes13.prototype['action'] = undefined;

/**
 * The date and time at which the log was created, as an iso8601 formatted timestamp.
 * @member {Date} date
 */
Attributes13.prototype['date'] = undefined;

/**
 * @member {module:model/LogParams} params
 */
Attributes13.prototype['params'] = undefined;






export default Attributes13;

