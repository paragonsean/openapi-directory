/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RegistrationSchema from '../model/RegistrationSchema';

/**
* RegistrationSchemas service.
* @module api/RegistrationSchemasApi
* @version 2.0
*/
export default class RegistrationSchemasApi {

    /**
    * Constructs a new RegistrationSchemasApi. 
    * @alias module:api/RegistrationSchemasApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the registrationSchemaRead operation.
     * @callback module:api/RegistrationSchemasApi~registrationSchemaReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegistrationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a Registration Schema
     * Retrieves the details of a given Registration Schema. Registration Schemas defines the desired supplemental information that should accompany be included in a Registration. Registration Schemas are Read-only to API users. #### Returns Returns a JSON object with a `data` key containing the representation of the requested Registration Schemas, if the request is successful. #### Errors If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     * @param {String} registrationSchemaId The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
     * @param {module:api/RegistrationSchemasApi~registrationSchemaReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegistrationSchema}
     */
    registrationSchemaRead(registrationSchemaId, callback) {
      let postBody = null;
      // verify the required parameter 'registrationSchemaId' is set
      if (registrationSchemaId === undefined || registrationSchemaId === null) {
        throw new Error("Missing the required parameter 'registrationSchemaId' when calling registrationSchemaRead");
      }

      let pathParams = {
        'registration_schema_id': registrationSchemaId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = RegistrationSchema;
      return this.apiClient.callApi(
        '/schemas/registrations/{registration_schema_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationSchemasList operation.
     * @callback module:api/RegistrationSchemasApi~registrationSchemasListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegistrationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of Registration Schemas
     * Retrieve a paginated list of all active Registration Schemas. Registration Schemas describe the supplemental questions that accompany a registration. Registration Schemas are read-only for API users. #### Returns Returns a JSON object containing `data` and `links` keys. The `data` key contains an array of 10 Registration Schemas. Each resource in the array is a separate Registration Schemas object. The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination). #### Errors This request should never return an error.
     * @param {module:api/RegistrationSchemasApi~registrationSchemasListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegistrationSchema}
     */
    registrationSchemasList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = RegistrationSchema;
      return this.apiClient.callApi(
        '/schemas/registrations/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
