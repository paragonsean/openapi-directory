/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Addon from '../model/Addon';

/**
* Addons service.
* @module api/AddonsApi
* @version 2.0
*/
export default class AddonsApi {

    /**
    * Constructs a new AddonsApi. 
    * @alias module:api/AddonsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addonsList operation.
     * @callback module:api/AddonsApi~addonsListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Addon>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all addons
     *  A paginated list of addons configurable with the OSF, for read purposes only. #### Returns Returns a JSON object containing `data` and `links` keys.  The `data` key contains an array of up to 10 addons. Each resource in the array is a separate addon object.  The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination). #### Errors This request should never return an error.
     * @param {module:api/AddonsApi~addonsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Addon>}
     */
    addonsList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = [Addon];
      return this.apiClient.callApi(
        '/addons/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
