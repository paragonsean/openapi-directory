/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Node from '../model/Node';
import ViewOnlyLinks from '../model/ViewOnlyLinks';

/**
* ViewOnlyLinks service.
* @module api/ViewOnlyLinksApi
* @version 2.0
*/
export default class ViewOnlyLinksApi {

    /**
    * Constructs a new ViewOnlyLinksApi. 
    * @alias module:api/ViewOnlyLinksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the viewOnlyLinksNodeList operation.
     * @callback module:api/ViewOnlyLinksApi~viewOnlyLinksNodeListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Node>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all nodes
     *  The list of nodes which this view only link gives read-only access to. #### Permissions Only project administrators may retrieve the nodes of a view only link. Attempting to retrieve a view only link without appropriate permissions will result in a 403 Forbidden response. #### Returns Returns a JSON object containing `data` and `links` keys. The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object and contains the full representation of the node, meaning additional requests to a node's detail view are not necessary.  The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).  If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     * @param {String} linkId The unique identifier of the view only link.
     * @param {module:api/ViewOnlyLinksApi~viewOnlyLinksNodeListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Node>}
     */
    viewOnlyLinksNodeList(linkId, callback) {
      let postBody = null;
      // verify the required parameter 'linkId' is set
      if (linkId === undefined || linkId === null) {
        throw new Error("Missing the required parameter 'linkId' when calling viewOnlyLinksNodeList");
      }

      let pathParams = {
        'link_id': linkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = [Node];
      return this.apiClient.callApi(
        '/view_only_links/{link_id}/nodes/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the viewOnlyLinksRead operation.
     * @callback module:api/ViewOnlyLinksApi~viewOnlyLinksReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ViewOnlyLinks} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a view only link
     * Retrieves details about a specific view only link. #### Permissions Only project administrators may retrieve the details of a view only link. Attempting to retrieve a view only link without appropriate permissions will result in a 403 Forbidden response. #### Returns Returns a JSON object with a `data` key containing the representation of the requested view only link, if the request is successful. If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     * @param {String} linkId The unique identifier of the view only link.
     * @param {module:api/ViewOnlyLinksApi~viewOnlyLinksReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ViewOnlyLinks}
     */
    viewOnlyLinksRead(linkId, callback) {
      let postBody = null;
      // verify the required parameter 'linkId' is set
      if (linkId === undefined || linkId === null) {
        throw new Error("Missing the required parameter 'linkId' when calling viewOnlyLinksRead");
      }

      let pathParams = {
        'link_id': linkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = ViewOnlyLinks;
      return this.apiClient.callApi(
        '/view_only_links/{link_id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
