/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Wiki from '../model/Wiki';

/**
* Wikis service.
* @module api/WikisApi
* @version 2.0
*/
export default class WikisApi {

    /**
    * Constructs a new WikisApi. 
    * @alias module:api/WikisApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the wikiContent operation.
     * @callback module:api/WikisApi~wikiContentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the Content of a Wiki
     * Retrieves the plaintext content of a wiki in markdown format. #### Returns Returns `text/markdown` of the wiki content itself. If the request is unsuccessful, plaintext with the error message will be displayed.
     * @param {String} wikiId The unique identifier of the wiki.
     * @param {module:api/WikisApi~wikiContentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    wikiContent(wikiId, callback) {
      let postBody = null;
      // verify the required parameter 'wikiId' is set
      if (wikiId === undefined || wikiId === null) {
        throw new Error("Missing the required parameter 'wikiId' when calling wikiContent");
      }

      let pathParams = {
        'wiki_id': wikiId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/wikis/{wiki_id}/content/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the wikiRead operation.
     * @callback module:api/WikisApi~wikiReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Wiki} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a Wiki
     * Retrieves the details about a specific wiki. A wiki is a collection of markdown text pages that can be used to describe the project or dataset of contained in the attached node. #### Returns Returns a JSON object with a `data` key containing the representation of the requested wiki, if the request was successful.  If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     * @param {String} wikiId The unique identifier of the wiki.
     * @param {module:api/WikisApi~wikiReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Wiki}
     */
    wikiRead(wikiId, callback) {
      let postBody = null;
      // verify the required parameter 'wikiId' is set
      if (wikiId === undefined || wikiId === null) {
        throw new Error("Missing the required parameter 'wikiId' when calling wikiRead");
      }

      let pathParams = {
        'wiki_id': wikiId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = Wiki;
      return this.apiClient.callApi(
        '/wikis/{wiki_id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
