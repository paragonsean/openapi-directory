/**
 * OSF APIv2 Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@osf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OsfApiv2Documentation);
  }
}(this, function(expect, OsfApiv2Documentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OsfApiv2Documentation.NodesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NodesApi', function() {
    describe('nodesAddonRead', function() {
      it('should call nodesAddonRead successfully', function(done) {
        //uncomment below and update the code to test nodesAddonRead
        //instance.nodesAddonRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesAddonsFoldersList', function() {
      it('should call nodesAddonsFoldersList successfully', function(done) {
        //uncomment below and update the code to test nodesAddonsFoldersList
        //instance.nodesAddonsFoldersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesAddonsList', function() {
      it('should call nodesAddonsList successfully', function(done) {
        //uncomment below and update the code to test nodesAddonsList
        //instance.nodesAddonsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesChildrenCreate', function() {
      it('should call nodesChildrenCreate successfully', function(done) {
        //uncomment below and update the code to test nodesChildrenCreate
        //instance.nodesChildrenCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesChildrenList', function() {
      it('should call nodesChildrenList successfully', function(done) {
        //uncomment below and update the code to test nodesChildrenList
        //instance.nodesChildrenList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesCitationList', function() {
      it('should call nodesCitationList successfully', function(done) {
        //uncomment below and update the code to test nodesCitationList
        //instance.nodesCitationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesCitationRead', function() {
      it('should call nodesCitationRead successfully', function(done) {
        //uncomment below and update the code to test nodesCitationRead
        //instance.nodesCitationRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesCommentCreate', function() {
      it('should call nodesCommentCreate successfully', function(done) {
        //uncomment below and update the code to test nodesCommentCreate
        //instance.nodesCommentCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesCommentsList', function() {
      it('should call nodesCommentsList successfully', function(done) {
        //uncomment below and update the code to test nodesCommentsList
        //instance.nodesCommentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesContributorsCreate', function() {
      it('should call nodesContributorsCreate successfully', function(done) {
        //uncomment below and update the code to test nodesContributorsCreate
        //instance.nodesContributorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesContributorsDelete', function() {
      it('should call nodesContributorsDelete successfully', function(done) {
        //uncomment below and update the code to test nodesContributorsDelete
        //instance.nodesContributorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesContributorsList', function() {
      it('should call nodesContributorsList successfully', function(done) {
        //uncomment below and update the code to test nodesContributorsList
        //instance.nodesContributorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesContributorsPartialUpdate', function() {
      it('should call nodesContributorsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test nodesContributorsPartialUpdate
        //instance.nodesContributorsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesContributorsRead', function() {
      it('should call nodesContributorsRead successfully', function(done) {
        //uncomment below and update the code to test nodesContributorsRead
        //instance.nodesContributorsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesCreate', function() {
      it('should call nodesCreate successfully', function(done) {
        //uncomment below and update the code to test nodesCreate
        //instance.nodesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesDelete', function() {
      it('should call nodesDelete successfully', function(done) {
        //uncomment below and update the code to test nodesDelete
        //instance.nodesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesDraftRegistrationsCreate', function() {
      it('should call nodesDraftRegistrationsCreate successfully', function(done) {
        //uncomment below and update the code to test nodesDraftRegistrationsCreate
        //instance.nodesDraftRegistrationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesDraftRegistrationsDelete', function() {
      it('should call nodesDraftRegistrationsDelete successfully', function(done) {
        //uncomment below and update the code to test nodesDraftRegistrationsDelete
        //instance.nodesDraftRegistrationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesDraftRegistrationsList', function() {
      it('should call nodesDraftRegistrationsList successfully', function(done) {
        //uncomment below and update the code to test nodesDraftRegistrationsList
        //instance.nodesDraftRegistrationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesDraftRegistrationsPartialUpdate', function() {
      it('should call nodesDraftRegistrationsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test nodesDraftRegistrationsPartialUpdate
        //instance.nodesDraftRegistrationsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesFilesList', function() {
      it('should call nodesFilesList successfully', function(done) {
        //uncomment below and update the code to test nodesFilesList
        //instance.nodesFilesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesFilesRead', function() {
      it('should call nodesFilesRead successfully', function(done) {
        //uncomment below and update the code to test nodesFilesRead
        //instance.nodesFilesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesForksCreate', function() {
      it('should call nodesForksCreate successfully', function(done) {
        //uncomment below and update the code to test nodesForksCreate
        //instance.nodesForksCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesForksList', function() {
      it('should call nodesForksList successfully', function(done) {
        //uncomment below and update the code to test nodesForksList
        //instance.nodesForksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesIdentifiersList', function() {
      it('should call nodesIdentifiersList successfully', function(done) {
        //uncomment below and update the code to test nodesIdentifiersList
        //instance.nodesIdentifiersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesInstitutionsList', function() {
      it('should call nodesInstitutionsList successfully', function(done) {
        //uncomment below and update the code to test nodesInstitutionsList
        //instance.nodesInstitutionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesLinkedNodesList', function() {
      it('should call nodesLinkedNodesList successfully', function(done) {
        //uncomment below and update the code to test nodesLinkedNodesList
        //instance.nodesLinkedNodesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesList', function() {
      it('should call nodesList successfully', function(done) {
        //uncomment below and update the code to test nodesList
        //instance.nodesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesLogsList', function() {
      it('should call nodesLogsList successfully', function(done) {
        //uncomment below and update the code to test nodesLogsList
        //instance.nodesLogsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesNodeAddonUpdate', function() {
      it('should call nodesNodeAddonUpdate successfully', function(done) {
        //uncomment below and update the code to test nodesNodeAddonUpdate
        //instance.nodesNodeAddonUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesPartialUpdate', function() {
      it('should call nodesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test nodesPartialUpdate
        //instance.nodesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesPreprintsList', function() {
      it('should call nodesPreprintsList successfully', function(done) {
        //uncomment below and update the code to test nodesPreprintsList
        //instance.nodesPreprintsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesProvidersList', function() {
      it('should call nodesProvidersList successfully', function(done) {
        //uncomment below and update the code to test nodesProvidersList
        //instance.nodesProvidersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesProvidersRead', function() {
      it('should call nodesProvidersRead successfully', function(done) {
        //uncomment below and update the code to test nodesProvidersRead
        //instance.nodesProvidersRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesRead', function() {
      it('should call nodesRead successfully', function(done) {
        //uncomment below and update the code to test nodesRead
        //instance.nodesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesRegistrationsList', function() {
      it('should call nodesRegistrationsList successfully', function(done) {
        //uncomment below and update the code to test nodesRegistrationsList
        //instance.nodesRegistrationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesViewOnlyLinksList', function() {
      it('should call nodesViewOnlyLinksList successfully', function(done) {
        //uncomment below and update the code to test nodesViewOnlyLinksList
        //instance.nodesViewOnlyLinksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesViewOnlyLinksRead', function() {
      it('should call nodesViewOnlyLinksRead successfully', function(done) {
        //uncomment below and update the code to test nodesViewOnlyLinksRead
        //instance.nodesViewOnlyLinksRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('nodesWikisList', function() {
      it('should call nodesWikisList successfully', function(done) {
        //uncomment below and update the code to test nodesWikisList
        //instance.nodesWikisList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
