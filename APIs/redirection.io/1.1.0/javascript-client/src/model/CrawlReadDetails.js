/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserReadDetails from './UserReadDetails';

/**
 * The CrawlReadDetails model module.
 * @module model/CrawlReadDetails
 * @version 1.1.0
 */
class CrawlReadDetails {
    /**
     * Constructs a new <code>CrawlReadDetails</code>.
     * 
     * @alias module:model/CrawlReadDetails
     */
    constructor() { 
        
        CrawlReadDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CrawlReadDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrawlReadDetails} obj Optional instance to populate.
     * @return {module:model/CrawlReadDetails} The populated <code>CrawlReadDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrawlReadDetails();

            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('author')) {
                obj['author'] = UserReadDetails.constructFromObject(data['author']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('finishedAt')) {
                obj['finishedAt'] = ApiClient.convertToType(data['finishedAt'], 'Date');
            }
            if (data.hasOwnProperty('firstUrl')) {
                obj['firstUrl'] = ApiClient.convertToType(data['firstUrl'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = ApiClient.convertToType(data['stats'], ['String']);
            }
            if (data.hasOwnProperty('trigger')) {
                obj['trigger'] = ApiClient.convertToType(data['trigger'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrawlReadDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrawlReadDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `author`
        if (data['author']) { // data not null
          UserReadDetails.validateJSON(data['author']);
        }
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['firstUrl'] && !(typeof data['firstUrl'] === 'string' || data['firstUrl'] instanceof String)) {
            throw new Error("Expected the field `firstUrl` to be a primitive type in the JSON string but got " + data['firstUrl']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stats'])) {
            throw new Error("Expected the field `stats` to be an array in the JSON data but got " + data['stats']);
        }
        // ensure the json data is a string
        if (data['trigger'] && !(typeof data['trigger'] === 'string' || data['trigger'] instanceof String)) {
            throw new Error("Expected the field `trigger` to be a primitive type in the JSON string but got " + data['trigger']);
        }

        return true;
    }


}



/**
 * @member {Boolean} archived
 */
CrawlReadDetails.prototype['archived'] = undefined;

/**
 * @member {module:model/UserReadDetails} author
 */
CrawlReadDetails.prototype['author'] = undefined;

/**
 * @member {Date} createdAt
 */
CrawlReadDetails.prototype['createdAt'] = undefined;

/**
 * @member {String} error
 */
CrawlReadDetails.prototype['error'] = undefined;

/**
 * @member {Date} finishedAt
 */
CrawlReadDetails.prototype['finishedAt'] = undefined;

/**
 * @member {String} firstUrl
 */
CrawlReadDetails.prototype['firstUrl'] = undefined;

/**
 * @member {String} id
 */
CrawlReadDetails.prototype['id'] = undefined;

/**
 * @member {Array.<String>} stats
 */
CrawlReadDetails.prototype['stats'] = undefined;

/**
 * @member {String} trigger
 */
CrawlReadDetails.prototype['trigger'] = undefined;

/**
 * @member {Date} updatedAt
 */
CrawlReadDetails.prototype['updatedAt'] = undefined;






export default CrawlReadDetails;

