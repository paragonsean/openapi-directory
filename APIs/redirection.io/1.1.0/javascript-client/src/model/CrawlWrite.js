/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CrawlWrite model module.
 * @module model/CrawlWrite
 * @version 1.1.0
 */
class CrawlWrite {
    /**
     * Constructs a new <code>CrawlWrite</code>.
     * 
     * @alias module:model/CrawlWrite
     * @param concurrency {Number} 
     * @param firstUrl {Object} 
     * @param maxDepth {Number} 
     * @param maxDuration {Number} 
     * @param maxUrls {Number} 
     * @param project {String} 
     * @param sslCheckingDisabled {Boolean} 
     * @param subdomainIncluded {Boolean} 
     */
    constructor(concurrency, firstUrl, maxDepth, maxDuration, maxUrls, project, sslCheckingDisabled, subdomainIncluded) { 
        
        CrawlWrite.initialize(this, concurrency, firstUrl, maxDepth, maxDuration, maxUrls, project, sslCheckingDisabled, subdomainIncluded);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, concurrency, firstUrl, maxDepth, maxDuration, maxUrls, project, sslCheckingDisabled, subdomainIncluded) { 
        obj['concurrency'] = concurrency;
        obj['firstUrl'] = firstUrl;
        obj['maxDepth'] = maxDepth;
        obj['maxDuration'] = maxDuration;
        obj['maxUrls'] = maxUrls;
        obj['project'] = project;
        obj['sslCheckingDisabled'] = sslCheckingDisabled;
        obj['subdomainIncluded'] = subdomainIncluded;
    }

    /**
     * Constructs a <code>CrawlWrite</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrawlWrite} obj Optional instance to populate.
     * @return {module:model/CrawlWrite} The populated <code>CrawlWrite</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrawlWrite();

            if (data.hasOwnProperty('concurrency')) {
                obj['concurrency'] = ApiClient.convertToType(data['concurrency'], 'Number');
            }
            if (data.hasOwnProperty('firstUrl')) {
                obj['firstUrl'] = ApiClient.convertToType(data['firstUrl'], Object);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], ['String']);
            }
            if (data.hasOwnProperty('httpBasicPassword')) {
                obj['httpBasicPassword'] = ApiClient.convertToType(data['httpBasicPassword'], Object);
            }
            if (data.hasOwnProperty('httpBasicUser')) {
                obj['httpBasicUser'] = ApiClient.convertToType(data['httpBasicUser'], Object);
            }
            if (data.hasOwnProperty('maxDepth')) {
                obj['maxDepth'] = ApiClient.convertToType(data['maxDepth'], 'Number');
            }
            if (data.hasOwnProperty('maxDuration')) {
                obj['maxDuration'] = ApiClient.convertToType(data['maxDuration'], 'Number');
            }
            if (data.hasOwnProperty('maxUrls')) {
                obj['maxUrls'] = ApiClient.convertToType(data['maxUrls'], 'Number');
            }
            if (data.hasOwnProperty('otherDomains')) {
                obj['otherDomains'] = ApiClient.convertToType(data['otherDomains'], ['String']);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('sslCheckingDisabled')) {
                obj['sslCheckingDisabled'] = ApiClient.convertToType(data['sslCheckingDisabled'], 'Boolean');
            }
            if (data.hasOwnProperty('subdomainIncluded')) {
                obj['subdomainIncluded'] = ApiClient.convertToType(data['subdomainIncluded'], 'Boolean');
            }
            if (data.hasOwnProperty('userAgent')) {
                obj['userAgent'] = ApiClient.convertToType(data['userAgent'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrawlWrite</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrawlWrite</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CrawlWrite.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['headers'])) {
            throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['otherDomains'])) {
            throw new Error("Expected the field `otherDomains` to be an array in the JSON data but got " + data['otherDomains']);
        }
        // ensure the json data is a string
        if (data['project'] && !(typeof data['project'] === 'string' || data['project'] instanceof String)) {
            throw new Error("Expected the field `project` to be a primitive type in the JSON string but got " + data['project']);
        }

        return true;
    }


}

CrawlWrite.RequiredProperties = ["concurrency", "firstUrl", "maxDepth", "maxDuration", "maxUrls", "project", "sslCheckingDisabled", "subdomainIncluded"];

/**
 * @member {Number} concurrency
 */
CrawlWrite.prototype['concurrency'] = undefined;

/**
 * @member {Object} firstUrl
 */
CrawlWrite.prototype['firstUrl'] = undefined;

/**
 * @member {Array.<String>} headers
 */
CrawlWrite.prototype['headers'] = undefined;

/**
 * @member {Object} httpBasicPassword
 */
CrawlWrite.prototype['httpBasicPassword'] = undefined;

/**
 * @member {Object} httpBasicUser
 */
CrawlWrite.prototype['httpBasicUser'] = undefined;

/**
 * @member {Number} maxDepth
 */
CrawlWrite.prototype['maxDepth'] = undefined;

/**
 * @member {Number} maxDuration
 */
CrawlWrite.prototype['maxDuration'] = undefined;

/**
 * @member {Number} maxUrls
 */
CrawlWrite.prototype['maxUrls'] = undefined;

/**
 * @member {Array.<String>} otherDomains
 */
CrawlWrite.prototype['otherDomains'] = undefined;

/**
 * @member {String} project
 */
CrawlWrite.prototype['project'] = undefined;

/**
 * @member {Boolean} sslCheckingDisabled
 */
CrawlWrite.prototype['sslCheckingDisabled'] = undefined;

/**
 * @member {Boolean} subdomainIncluded
 */
CrawlWrite.prototype['subdomainIncluded'] = undefined;

/**
 * @member {Object} userAgent
 */
CrawlWrite.prototype['userAgent'] = undefined;






export default CrawlWrite;

