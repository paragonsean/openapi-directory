/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CrawlUrlRead model module.
 * @module model/CrawlUrlRead
 * @version 1.1.0
 */
class CrawlUrlRead {
    /**
     * Constructs a new <code>CrawlUrlRead</code>.
     * 
     * @alias module:model/CrawlUrlRead
     */
    constructor() { 
        
        CrawlUrlRead.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CrawlUrlRead</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrawlUrlRead} obj Optional instance to populate.
     * @return {module:model/CrawlUrlRead} The populated <code>CrawlUrlRead</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrawlUrlRead();

            if (data.hasOwnProperty('curlInfo')) {
                obj['curlInfo'] = ApiClient.convertToType(data['curlInfo'], Object);
            }
            if (data.hasOwnProperty('depth')) {
                obj['depth'] = ApiClient.convertToType(data['depth'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], Object);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], Object);
            }
            if (data.hasOwnProperty('redirectUrl')) {
                obj['redirectUrl'] = ApiClient.convertToType(data['redirectUrl'], Object);
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], Object);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], Object);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], Object);
            }
            if (data.hasOwnProperty('urlsTo')) {
                obj['urlsTo'] = ApiClient.convertToType(data['urlsTo'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrawlUrlRead</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrawlUrlRead</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['urlsTo'] && !(typeof data['urlsTo'] === 'string' || data['urlsTo'] instanceof String)) {
            throw new Error("Expected the field `urlsTo` to be a primitive type in the JSON string but got " + data['urlsTo']);
        }

        return true;
    }


}



/**
 * @member {Object} curlInfo
 */
CrawlUrlRead.prototype['curlInfo'] = undefined;

/**
 * @member {Object} depth
 */
CrawlUrlRead.prototype['depth'] = undefined;

/**
 * @member {Object} description
 */
CrawlUrlRead.prototype['description'] = undefined;

/**
 * @member {Object} error
 */
CrawlUrlRead.prototype['error'] = undefined;

/**
 * @member {Object} id
 */
CrawlUrlRead.prototype['id'] = undefined;

/**
 * @member {Object} redirectUrl
 */
CrawlUrlRead.prototype['redirectUrl'] = undefined;

/**
 * @member {Object} statusCode
 */
CrawlUrlRead.prototype['statusCode'] = undefined;

/**
 * @member {Object} title
 */
CrawlUrlRead.prototype['title'] = undefined;

/**
 * @member {Object} url
 */
CrawlUrlRead.prototype['url'] = undefined;

/**
 * @member {String} urlsTo
 */
CrawlUrlRead.prototype['urlsTo'] = undefined;






export default CrawlUrlRead;

