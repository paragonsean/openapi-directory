/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AgentFlushRequest model module.
 * @module model/AgentFlushRequest
 * @version 1.1.0
 */
class AgentFlushRequest {
    /**
     * Constructs a new <code>AgentFlushRequest</code>.
     * 
     * @alias module:model/AgentFlushRequest
     * @param instanceName {Object} 
     * @param instanceTime {Number} 
     * @param logs {Array.<String>} 
     */
    constructor(instanceName, instanceTime, logs) { 
        
        AgentFlushRequest.initialize(this, instanceName, instanceTime, logs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, instanceName, instanceTime, logs) { 
        obj['instanceName'] = instanceName;
        obj['instanceTime'] = instanceTime;
        obj['logs'] = logs;
    }

    /**
     * Constructs a <code>AgentFlushRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AgentFlushRequest} obj Optional instance to populate.
     * @return {module:model/AgentFlushRequest} The populated <code>AgentFlushRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AgentFlushRequest();

            if (data.hasOwnProperty('instanceName')) {
                obj['instanceName'] = ApiClient.convertToType(data['instanceName'], Object);
            }
            if (data.hasOwnProperty('instanceTime')) {
                obj['instanceTime'] = ApiClient.convertToType(data['instanceTime'], 'Number');
            }
            if (data.hasOwnProperty('logs')) {
                obj['logs'] = ApiClient.convertToType(data['logs'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AgentFlushRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AgentFlushRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AgentFlushRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['logs'])) {
            throw new Error("Expected the field `logs` to be an array in the JSON data but got " + data['logs']);
        }

        return true;
    }


}

AgentFlushRequest.RequiredProperties = ["instanceName", "instanceTime", "logs"];

/**
 * @member {Object} instanceName
 */
AgentFlushRequest.prototype['instanceName'] = undefined;

/**
 * @member {Number} instanceTime
 */
AgentFlushRequest.prototype['instanceTime'] = undefined;

/**
 * @member {Array.<String>} logs
 */
AgentFlushRequest.prototype['logs'] = undefined;






export default AgentFlushRequest;

