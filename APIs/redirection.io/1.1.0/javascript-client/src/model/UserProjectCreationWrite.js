/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserProjectCreationWrite model module.
 * @module model/UserProjectCreationWrite
 * @version 1.1.0
 */
class UserProjectCreationWrite {
    /**
     * Constructs a new <code>UserProjectCreationWrite</code>.
     * 
     * @alias module:model/UserProjectCreationWrite
     * @param functionalRoles {Array.<String>} 
     * @param project {String} 
     * @param user {String} 
     */
    constructor(functionalRoles, project, user) { 
        
        UserProjectCreationWrite.initialize(this, functionalRoles, project, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, functionalRoles, project, user) { 
        obj['functionalRoles'] = functionalRoles;
        obj['project'] = project;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>UserProjectCreationWrite</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserProjectCreationWrite} obj Optional instance to populate.
     * @return {module:model/UserProjectCreationWrite} The populated <code>UserProjectCreationWrite</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserProjectCreationWrite();

            if (data.hasOwnProperty('functionalRoles')) {
                obj['functionalRoles'] = ApiClient.convertToType(data['functionalRoles'], ['String']);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserProjectCreationWrite</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserProjectCreationWrite</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserProjectCreationWrite.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['functionalRoles'])) {
            throw new Error("Expected the field `functionalRoles` to be an array in the JSON data but got " + data['functionalRoles']);
        }
        // ensure the json data is a string
        if (data['project'] && !(typeof data['project'] === 'string' || data['project'] instanceof String)) {
            throw new Error("Expected the field `project` to be a primitive type in the JSON string but got " + data['project']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }

        return true;
    }


}

UserProjectCreationWrite.RequiredProperties = ["functionalRoles", "project", "user"];

/**
 * @member {Array.<String>} functionalRoles
 */
UserProjectCreationWrite.prototype['functionalRoles'] = undefined;

/**
 * @member {String} project
 */
UserProjectCreationWrite.prototype['project'] = undefined;

/**
 * @member {String} user
 */
UserProjectCreationWrite.prototype['user'] = undefined;






export default UserProjectCreationWrite;

