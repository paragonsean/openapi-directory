/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RuleChangeRead from '../model/RuleChangeRead';
import RuleChangeWrite from '../model/RuleChangeWrite';

/**
* RuleChange service.
* @module api/RuleChangeApi
* @version 1.1.0
*/
export default class RuleChangeApi {

    /**
    * Constructs a new RuleChangeApi. 
    * @alias module:api/RuleChangeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteRuleChangeItem operation.
     * @callback module:api/RuleChangeApi~deleteRuleChangeItemCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the RuleChange resource.
     * @param {String} id 
     * @param {module:api/RuleChangeApi~deleteRuleChangeItemCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteRuleChangeItem(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteRuleChangeItem");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/rule-changes/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRuleChangeCollection operation.
     * @callback module:api/RuleChangeApi~getRuleChangeCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/RuleChangeRead>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of RuleChange resources.
     * @param {String} versionId 
     * @param {Object} opts Optional parameters
     * @param {Number} [page] The collection page number
     * @param {module:api/RuleChangeApi~getRuleChangeCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/RuleChangeRead>}
     */
    getRuleChangeCollection(versionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'versionId' is set
      if (versionId === undefined || versionId === null) {
        throw new Error("Missing the required parameter 'versionId' when calling getRuleChangeCollection");
      }

      let pathParams = {
      };
      let queryParams = {
        'versionId': versionId,
        'page': opts['page']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html', 'text/csv'];
      let returnType = [RuleChangeRead];
      return this.apiClient.callApi(
        '/rule-changes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRuleChangeItem operation.
     * @callback module:api/RuleChangeApi~getRuleChangeItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RuleChangeRead} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a RuleChange resource.
     * @param {String} id 
     * @param {module:api/RuleChangeApi~getRuleChangeItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RuleChangeRead}
     */
    getRuleChangeItem(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getRuleChangeItem");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html', 'text/csv'];
      let returnType = RuleChangeRead;
      return this.apiClient.callApi(
        '/rule-changes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postRuleChangeCollection operation.
     * @callback module:api/RuleChangeApi~postRuleChangeCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RuleChangeRead} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a RuleChange resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/RuleChangeWrite} [ruleChange] The new RuleChange resource
     * @param {module:api/RuleChangeApi~postRuleChangeCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RuleChangeRead}
     */
    postRuleChangeCollection(opts, callback) {
      opts = opts || {};
      let postBody = opts['ruleChange'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/ld+json', 'application/json', 'text/html', 'text/csv'];
      let accepts = ['application/ld+json', 'application/json', 'text/html', 'text/csv'];
      let returnType = RuleChangeRead;
      return this.apiClient.callApi(
        '/rule-changes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
