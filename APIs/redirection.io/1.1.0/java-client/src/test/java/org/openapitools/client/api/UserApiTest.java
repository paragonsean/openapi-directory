/*
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UserCreationWrite;
import org.openapitools.client.model.UserEditInfo;
import org.openapitools.client.model.UserList;
import org.openapitools.client.model.UserPassword;
import org.openapitools.client.model.UserRead;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Disabled
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * Retrieves a User resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void confirmNewEmailUserItemTest() throws ApiException {
        String id = null;
        String newEmailToken = null;
        UserRead response = api.confirmNewEmailUserItem(id, newEmailToken);
        // TODO: test validations
    }

    /**
     * Removes the User resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserItemTest() throws ApiException {
        String id = null;
        api.deleteUserItem(id);
        // TODO: test validations
    }

    /**
     * Replaces the User resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editEmailUserItemTest() throws ApiException {
        String id = null;
        UserEditInfo user = null;
        UserRead response = api.editEmailUserItem(id, user);
        // TODO: test validations
    }

    /**
     * Replaces the User resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editInfoUserItemTest() throws ApiException {
        String id = null;
        UserEditInfo user = null;
        UserRead response = api.editInfoUserItem(id, user);
        // TODO: test validations
    }

    /**
     * Replaces the User resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editPasswordUserItemTest() throws ApiException {
        String id = null;
        UserEditInfo user = null;
        UserRead response = api.editPasswordUserItem(id, user);
        // TODO: test validations
    }

    /**
     * Replaces the User resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forgotPasswordUserItemTest() throws ApiException {
        String resetToken = null;
        UserPassword user = null;
        UserRead response = api.forgotPasswordUserItem(resetToken, user);
        // TODO: test validations
    }

    /**
     * Retrieves the collection of User resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserCollectionTest() throws ApiException {
        String organizationId = null;
        String search = null;
        List<UserList> response = api.getUserCollection(organizationId, search);
        // TODO: test validations
    }

    /**
     * Retrieves a User resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserItemTest() throws ApiException {
        String id = null;
        UserRead response = api.getUserItem(id);
        // TODO: test validations
    }

    /**
     * Creates a User resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUserCollectionTest() throws ApiException {
        UserCreationWrite user = null;
        UserRead response = api.postUserCollection(user);
        // TODO: test validations
    }

}
