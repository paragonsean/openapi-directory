/*
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:00:05.237264-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CrawlUrlRead {
  public static final String SERIALIZED_NAME_CURL_INFO = "curlInfo";
  @SerializedName(SERIALIZED_NAME_CURL_INFO)
  private Object curlInfo;

  public static final String SERIALIZED_NAME_DEPTH = "depth";
  @SerializedName(SERIALIZED_NAME_DEPTH)
  private Object depth;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private Object description;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Object error;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Object id;

  public static final String SERIALIZED_NAME_REDIRECT_URL = "redirectUrl";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URL)
  private Object redirectUrl;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private Object statusCode;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private Object title;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private Object url;

  public static final String SERIALIZED_NAME_URLS_TO = "urlsTo";
  @SerializedName(SERIALIZED_NAME_URLS_TO)
  private String urlsTo;

  public CrawlUrlRead() {
  }

  public CrawlUrlRead curlInfo(Object curlInfo) {
    this.curlInfo = curlInfo;
    return this;
  }

  /**
   * Get curlInfo
   * @return curlInfo
   */
  @javax.annotation.Nullable
  public Object getCurlInfo() {
    return curlInfo;
  }

  public void setCurlInfo(Object curlInfo) {
    this.curlInfo = curlInfo;
  }


  public CrawlUrlRead depth(Object depth) {
    this.depth = depth;
    return this;
  }

  /**
   * Get depth
   * @return depth
   */
  @javax.annotation.Nullable
  public Object getDepth() {
    return depth;
  }

  public void setDepth(Object depth) {
    this.depth = depth;
  }


  public CrawlUrlRead description(Object description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public Object getDescription() {
    return description;
  }

  public void setDescription(Object description) {
    this.description = description;
  }


  public CrawlUrlRead error(Object error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public Object getError() {
    return error;
  }

  public void setError(Object error) {
    this.error = error;
  }


  public CrawlUrlRead id(Object id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Object getId() {
    return id;
  }

  public void setId(Object id) {
    this.id = id;
  }


  public CrawlUrlRead redirectUrl(Object redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

  /**
   * Get redirectUrl
   * @return redirectUrl
   */
  @javax.annotation.Nullable
  public Object getRedirectUrl() {
    return redirectUrl;
  }

  public void setRedirectUrl(Object redirectUrl) {
    this.redirectUrl = redirectUrl;
  }


  public CrawlUrlRead statusCode(Object statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Get statusCode
   * @return statusCode
   */
  @javax.annotation.Nullable
  public Object getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(Object statusCode) {
    this.statusCode = statusCode;
  }


  public CrawlUrlRead title(Object title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public Object getTitle() {
    return title;
  }

  public void setTitle(Object title) {
    this.title = title;
  }


  public CrawlUrlRead url(Object url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public Object getUrl() {
    return url;
  }

  public void setUrl(Object url) {
    this.url = url;
  }


  public CrawlUrlRead urlsTo(String urlsTo) {
    this.urlsTo = urlsTo;
    return this;
  }

  /**
   * Get urlsTo
   * @return urlsTo
   */
  @javax.annotation.Nullable
  public String getUrlsTo() {
    return urlsTo;
  }

  public void setUrlsTo(String urlsTo) {
    this.urlsTo = urlsTo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrawlUrlRead crawlUrlRead = (CrawlUrlRead) o;
    return Objects.equals(this.curlInfo, crawlUrlRead.curlInfo) &&
        Objects.equals(this.depth, crawlUrlRead.depth) &&
        Objects.equals(this.description, crawlUrlRead.description) &&
        Objects.equals(this.error, crawlUrlRead.error) &&
        Objects.equals(this.id, crawlUrlRead.id) &&
        Objects.equals(this.redirectUrl, crawlUrlRead.redirectUrl) &&
        Objects.equals(this.statusCode, crawlUrlRead.statusCode) &&
        Objects.equals(this.title, crawlUrlRead.title) &&
        Objects.equals(this.url, crawlUrlRead.url) &&
        Objects.equals(this.urlsTo, crawlUrlRead.urlsTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(curlInfo, depth, description, error, id, redirectUrl, statusCode, title, url, urlsTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrawlUrlRead {\n");
    sb.append("    curlInfo: ").append(toIndentedString(curlInfo)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    urlsTo: ").append(toIndentedString(urlsTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("curlInfo");
    openapiFields.add("depth");
    openapiFields.add("description");
    openapiFields.add("error");
    openapiFields.add("id");
    openapiFields.add("redirectUrl");
    openapiFields.add("statusCode");
    openapiFields.add("title");
    openapiFields.add("url");
    openapiFields.add("urlsTo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CrawlUrlRead
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CrawlUrlRead.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CrawlUrlRead is not found in the empty JSON string", CrawlUrlRead.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CrawlUrlRead.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CrawlUrlRead` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("urlsTo") != null && !jsonObj.get("urlsTo").isJsonNull()) && !jsonObj.get("urlsTo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlsTo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlsTo").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CrawlUrlRead.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CrawlUrlRead' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CrawlUrlRead> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CrawlUrlRead.class));

       return (TypeAdapter<T>) new TypeAdapter<CrawlUrlRead>() {
           @Override
           public void write(JsonWriter out, CrawlUrlRead value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CrawlUrlRead read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CrawlUrlRead given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CrawlUrlRead
   * @throws IOException if the JSON string is invalid with respect to CrawlUrlRead
   */
  public static CrawlUrlRead fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CrawlUrlRead.class);
  }

  /**
   * Convert an instance of CrawlUrlRead to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

