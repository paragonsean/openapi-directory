/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_Password.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_Password::OAIUser_Password(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_Password::OAIUser_Password() {
    this->initializeModel();
}

OAIUser_Password::~OAIUser_Password() {}

void OAIUser_Password::initializeModel() {

    m_plain_password_isSet = false;
    m_plain_password_isValid = false;

    m_plain_password_repeat_isSet = false;
    m_plain_password_repeat_isValid = false;
}

void OAIUser_Password::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_Password::fromJsonObject(QJsonObject json) {

    m_plain_password_isValid = ::OpenAPI::fromJsonValue(m_plain_password, json[QString("plainPassword")]);
    m_plain_password_isSet = !json[QString("plainPassword")].isNull() && m_plain_password_isValid;

    m_plain_password_repeat_isValid = ::OpenAPI::fromJsonValue(m_plain_password_repeat, json[QString("plainPasswordRepeat")]);
    m_plain_password_repeat_isSet = !json[QString("plainPasswordRepeat")].isNull() && m_plain_password_repeat_isValid;
}

QString OAIUser_Password::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_Password::asJsonObject() const {
    QJsonObject obj;
    if (m_plain_password_isSet) {
        obj.insert(QString("plainPassword"), ::OpenAPI::toJsonValue(m_plain_password));
    }
    if (m_plain_password_repeat_isSet) {
        obj.insert(QString("plainPasswordRepeat"), ::OpenAPI::toJsonValue(m_plain_password_repeat));
    }
    return obj;
}

QString OAIUser_Password::getPlainPassword() const {
    return m_plain_password;
}
void OAIUser_Password::setPlainPassword(const QString &plain_password) {
    m_plain_password = plain_password;
    m_plain_password_isSet = true;
}

bool OAIUser_Password::is_plain_password_Set() const{
    return m_plain_password_isSet;
}

bool OAIUser_Password::is_plain_password_Valid() const{
    return m_plain_password_isValid;
}

OAIObject OAIUser_Password::getPlainPasswordRepeat() const {
    return m_plain_password_repeat;
}
void OAIUser_Password::setPlainPasswordRepeat(const OAIObject &plain_password_repeat) {
    m_plain_password_repeat = plain_password_repeat;
    m_plain_password_repeat_isSet = true;
}

bool OAIUser_Password::is_plain_password_repeat_Set() const{
    return m_plain_password_repeat_isSet;
}

bool OAIUser_Password::is_plain_password_repeat_Valid() const{
    return m_plain_password_repeat_isValid;
}

bool OAIUser_Password::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_plain_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_plain_password_repeat_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_Password::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
