/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImport_Read.h
 *
 * 
 */

#ifndef OAIImport_Read_H
#define OAIImport_Read_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImport_Read : public OAIObject {
public:
    OAIImport_Read();
    OAIImport_Read(QString json);
    ~OAIImport_Read() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QDateTime getCompletedAt() const;
    void setCompletedAt(const QDateTime &completed_at);
    bool is_completed_at_Set() const;
    bool is_completed_at_Valid() const;

    qint32 getErrorCount() const;
    void setErrorCount(const qint32 &error_count);
    bool is_error_count_Set() const;
    bool is_error_count_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getImportDuration() const;
    void setImportDuration(const qint32 &import_duration);
    bool is_import_duration_Set() const;
    bool is_import_duration_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getProject() const;
    void setProject(const QString &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    OAIObject getStatusAsText() const;
    void setStatusAsText(const OAIObject &status_as_text);
    bool is_status_as_text_Set() const;
    bool is_status_as_text_Valid() const;

    qint32 getSuccessCount() const;
    void setSuccessCount(const qint32 &success_count);
    bool is_success_count_Set() const;
    bool is_success_count_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QDateTime m_completed_at;
    bool m_completed_at_isSet;
    bool m_completed_at_isValid;

    qint32 m_error_count;
    bool m_error_count_isSet;
    bool m_error_count_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_import_duration;
    bool m_import_duration_isSet;
    bool m_import_duration_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    OAIObject m_status_as_text;
    bool m_status_as_text_isSet;
    bool m_status_as_text_isValid;

    qint32 m_success_count;
    bool m_success_count_isSet;
    bool m_success_count_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImport_Read)

#endif // OAIImport_Read_H
