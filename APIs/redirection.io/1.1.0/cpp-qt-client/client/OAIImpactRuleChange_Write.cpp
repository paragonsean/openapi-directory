/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImpactRuleChange_Write.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImpactRuleChange_Write::OAIImpactRuleChange_Write(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImpactRuleChange_Write::OAIImpactRuleChange_Write() {
    this->initializeModel();
}

OAIImpactRuleChange_Write::~OAIImpactRuleChange_Write() {}

void OAIImpactRuleChange_Write::initializeModel() {

    m_project_isSet = false;
    m_project_isValid = false;

    m_rule_change_isSet = false;
    m_rule_change_isValid = false;
}

void OAIImpactRuleChange_Write::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImpactRuleChange_Write::fromJsonObject(QJsonObject json) {

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_rule_change_isValid = ::OpenAPI::fromJsonValue(m_rule_change, json[QString("ruleChange")]);
    m_rule_change_isSet = !json[QString("ruleChange")].isNull() && m_rule_change_isValid;
}

QString OAIImpactRuleChange_Write::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImpactRuleChange_Write::asJsonObject() const {
    QJsonObject obj;
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_rule_change_isSet) {
        obj.insert(QString("ruleChange"), ::OpenAPI::toJsonValue(m_rule_change));
    }
    return obj;
}

QString OAIImpactRuleChange_Write::getProject() const {
    return m_project;
}
void OAIImpactRuleChange_Write::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIImpactRuleChange_Write::is_project_Set() const{
    return m_project_isSet;
}

bool OAIImpactRuleChange_Write::is_project_Valid() const{
    return m_project_isValid;
}

QString OAIImpactRuleChange_Write::getRuleChange() const {
    return m_rule_change;
}
void OAIImpactRuleChange_Write::setRuleChange(const QString &rule_change) {
    m_rule_change = rule_change;
    m_rule_change_isSet = true;
}

bool OAIImpactRuleChange_Write::is_rule_change_Set() const{
    return m_rule_change_isSet;
}

bool OAIImpactRuleChange_Write::is_rule_change_Valid() const{
    return m_rule_change_isValid;
}

bool OAIImpactRuleChange_Write::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_change_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImpactRuleChange_Write::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_isValid && m_rule_change_isValid && true;
}

} // namespace OpenAPI
