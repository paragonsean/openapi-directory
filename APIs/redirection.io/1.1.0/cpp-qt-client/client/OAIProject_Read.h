/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProject_Read.h
 *
 * 
 */

#ifndef OAIProject_Read_H
#define OAIProject_Read_H

#include <QJsonObject>

#include "OAIOrganization_Read.h"
#include "OAIRuleSetVersion_Read.h"
#include "OAIUserProjectFlattened_Read.h"
#include "OAIUserProject_Read.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRuleSetVersion_Read;
class OAIOrganization_Read;
class OAIUserProject_Read;
class OAIUserProjectFlattened_Read;

class OAIProject_Read : public OAIObject {
public:
    OAIProject_Read();
    OAIProject_Read(QString json);
    ~OAIProject_Read() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getComplexRulesCount() const;
    void setComplexRulesCount(const qint32 &complex_rules_count);
    bool is_complex_rules_count_Set() const;
    bool is_complex_rules_count_Valid() const;

    QDateTime getComplexRulesUpdatedAt() const;
    void setComplexRulesUpdatedAt(const QDateTime &complex_rules_updated_at);
    bool is_complex_rules_updated_at_Set() const;
    bool is_complex_rules_updated_at_Valid() const;

    QList<QString> getConfiguration() const;
    void setConfiguration(const QList<QString> &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIRuleSetVersion_Read getCurrentVersion() const;
    void setCurrentVersion(const OAIRuleSetVersion_Read &current_version);
    bool is_current_version_Set() const;
    bool is_current_version_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getIgnoreProjectTypes() const;
    void setIgnoreProjectTypes(const QList<QString> &ignore_project_types);
    bool is_ignore_project_types_Set() const;
    bool is_ignore_project_types_Valid() const;

    bool isIsPublishing() const;
    void setIsPublishing(const bool &is_publishing);
    bool is_is_publishing_Set() const;
    bool is_is_publishing_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getOnboardingCompletedDemos() const;
    void setOnboardingCompletedDemos(const QList<QString> &onboarding_completed_demos);
    bool is_onboarding_completed_demos_Set() const;
    bool is_onboarding_completed_demos_Valid() const;

    OAIOrganization_Read getOrganization() const;
    void setOrganization(const OAIOrganization_Read &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    qint32 getPlan() const;
    void setPlan(const qint32 &plan);
    bool is_plan_Set() const;
    bool is_plan_Valid() const;

    QString getRulesHash() const;
    void setRulesHash(const QString &rules_hash);
    bool is_rules_hash_Set() const;
    bool is_rules_hash_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    qint32 getStraightRulesCount() const;
    void setStraightRulesCount(const qint32 &straight_rules_count);
    bool is_straight_rules_count_Set() const;
    bool is_straight_rules_count_Valid() const;

    QDateTime getStraightRulesUpdatedAt() const;
    void setStraightRulesUpdatedAt(const QDateTime &straight_rules_updated_at);
    bool is_straight_rules_updated_at_Set() const;
    bool is_straight_rules_updated_at_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QList<OAIUserProject_Read> getUserProjects() const;
    void setUserProjects(const QList<OAIUserProject_Read> &user_projects);
    bool is_user_projects_Set() const;
    bool is_user_projects_Valid() const;

    QList<OAIUserProjectFlattened_Read> getUsersFlattened() const;
    void setUsersFlattened(const QList<OAIUserProjectFlattened_Read> &users_flattened);
    bool is_users_flattened_Set() const;
    bool is_users_flattened_Valid() const;

    OAIRuleSetVersion_Read getWorkingVersion() const;
    void setWorkingVersion(const OAIRuleSetVersion_Read &working_version);
    bool is_working_version_Set() const;
    bool is_working_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_complex_rules_count;
    bool m_complex_rules_count_isSet;
    bool m_complex_rules_count_isValid;

    QDateTime m_complex_rules_updated_at;
    bool m_complex_rules_updated_at_isSet;
    bool m_complex_rules_updated_at_isValid;

    QList<QString> m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIRuleSetVersion_Read m_current_version;
    bool m_current_version_isSet;
    bool m_current_version_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_ignore_project_types;
    bool m_ignore_project_types_isSet;
    bool m_ignore_project_types_isValid;

    bool m_is_publishing;
    bool m_is_publishing_isSet;
    bool m_is_publishing_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_onboarding_completed_demos;
    bool m_onboarding_completed_demos_isSet;
    bool m_onboarding_completed_demos_isValid;

    OAIOrganization_Read m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    qint32 m_plan;
    bool m_plan_isSet;
    bool m_plan_isValid;

    QString m_rules_hash;
    bool m_rules_hash_isSet;
    bool m_rules_hash_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    qint32 m_straight_rules_count;
    bool m_straight_rules_count_isSet;
    bool m_straight_rules_count_isValid;

    QDateTime m_straight_rules_updated_at;
    bool m_straight_rules_updated_at_isSet;
    bool m_straight_rules_updated_at_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QList<OAIUserProject_Read> m_user_projects;
    bool m_user_projects_isSet;
    bool m_user_projects_isValid;

    QList<OAIUserProjectFlattened_Read> m_users_flattened;
    bool m_users_flattened_isSet;
    bool m_users_flattened_isValid;

    OAIRuleSetVersion_Read m_working_version;
    bool m_working_version_isSet;
    bool m_working_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProject_Read)

#endif // OAIProject_Read_H
