/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAgentFlushRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAgentFlushRequest::OAIAgentFlushRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAgentFlushRequest::OAIAgentFlushRequest() {
    this->initializeModel();
}

OAIAgentFlushRequest::~OAIAgentFlushRequest() {}

void OAIAgentFlushRequest::initializeModel() {

    m_instance_name_isSet = false;
    m_instance_name_isValid = false;

    m_instance_time_isSet = false;
    m_instance_time_isValid = false;

    m_logs_isSet = false;
    m_logs_isValid = false;
}

void OAIAgentFlushRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAgentFlushRequest::fromJsonObject(QJsonObject json) {

    m_instance_name_isValid = ::OpenAPI::fromJsonValue(m_instance_name, json[QString("instanceName")]);
    m_instance_name_isSet = !json[QString("instanceName")].isNull() && m_instance_name_isValid;

    m_instance_time_isValid = ::OpenAPI::fromJsonValue(m_instance_time, json[QString("instanceTime")]);
    m_instance_time_isSet = !json[QString("instanceTime")].isNull() && m_instance_time_isValid;

    m_logs_isValid = ::OpenAPI::fromJsonValue(m_logs, json[QString("logs")]);
    m_logs_isSet = !json[QString("logs")].isNull() && m_logs_isValid;
}

QString OAIAgentFlushRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAgentFlushRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_name_isSet) {
        obj.insert(QString("instanceName"), ::OpenAPI::toJsonValue(m_instance_name));
    }
    if (m_instance_time_isSet) {
        obj.insert(QString("instanceTime"), ::OpenAPI::toJsonValue(m_instance_time));
    }
    if (m_logs.size() > 0) {
        obj.insert(QString("logs"), ::OpenAPI::toJsonValue(m_logs));
    }
    return obj;
}

OAIObject OAIAgentFlushRequest::getInstanceName() const {
    return m_instance_name;
}
void OAIAgentFlushRequest::setInstanceName(const OAIObject &instance_name) {
    m_instance_name = instance_name;
    m_instance_name_isSet = true;
}

bool OAIAgentFlushRequest::is_instance_name_Set() const{
    return m_instance_name_isSet;
}

bool OAIAgentFlushRequest::is_instance_name_Valid() const{
    return m_instance_name_isValid;
}

qint32 OAIAgentFlushRequest::getInstanceTime() const {
    return m_instance_time;
}
void OAIAgentFlushRequest::setInstanceTime(const qint32 &instance_time) {
    m_instance_time = instance_time;
    m_instance_time_isSet = true;
}

bool OAIAgentFlushRequest::is_instance_time_Set() const{
    return m_instance_time_isSet;
}

bool OAIAgentFlushRequest::is_instance_time_Valid() const{
    return m_instance_time_isValid;
}

QList<QString> OAIAgentFlushRequest::getLogs() const {
    return m_logs;
}
void OAIAgentFlushRequest::setLogs(const QList<QString> &logs) {
    m_logs = logs;
    m_logs_isSet = true;
}

bool OAIAgentFlushRequest::is_logs_Set() const{
    return m_logs_isSet;
}

bool OAIAgentFlushRequest::is_logs_Valid() const{
    return m_logs_isValid;
}

bool OAIAgentFlushRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAgentFlushRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_instance_name_isValid && m_instance_time_isValid && m_logs_isValid && true;
}

} // namespace OpenAPI
