/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPublishHistory_Read.h
 *
 * 
 */

#ifndef OAIPublishHistory_Read_H
#define OAIPublishHistory_Read_H

#include <QJsonObject>

#include "OAIRuleSetVersion_Read.h"
#include "OAIUser_Read.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser_Read;
class OAIRuleSetVersion_Read;

class OAIPublishHistory_Read : public OAIObject {
public:
    OAIPublishHistory_Read();
    OAIPublishHistory_Read(QString json);
    ~OAIPublishHistory_Read() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdded() const;
    void setAdded(const qint32 &added);
    bool is_added_Set() const;
    bool is_added_Valid() const;

    OAIUser_Read getAuthor() const;
    void setAuthor(const OAIUser_Read &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getDeleted() const;
    void setDeleted(const qint32 &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getUpdated() const;
    void setUpdated(const qint32 &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    OAIRuleSetVersion_Read getVersion() const;
    void setVersion(const OAIRuleSetVersion_Read &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_added;
    bool m_added_isSet;
    bool m_added_isValid;

    OAIUser_Read m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    OAIRuleSetVersion_Read m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPublishHistory_Read)

#endif // OAIPublishHistory_Read_H
