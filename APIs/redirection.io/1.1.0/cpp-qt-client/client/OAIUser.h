/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * 
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIOrganization.h"
#include "OAIUserOrganization.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrganization;
class OAIUserOrganization;

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getCurrentPassword() const;
    void setCurrentPassword(const OAIObject &current_password);
    bool is_current_password_Set() const;
    bool is_current_password_Valid() const;

    OAIOrganization getDefaultOrganization() const;
    void setDefaultOrganization(const OAIOrganization &default_organization);
    bool is_default_organization_Set() const;
    bool is_default_organization_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNewEmail() const;
    void setNewEmail(const QString &new_email);
    bool is_new_email_Set() const;
    bool is_new_email_Valid() const;

    QString getNewEmailToken() const;
    void setNewEmailToken(const QString &new_email_token);
    bool is_new_email_token_Set() const;
    bool is_new_email_token_Valid() const;

    QDateTime getNewEmailTokenExpiredAt() const;
    void setNewEmailTokenExpiredAt(const QDateTime &new_email_token_expired_at);
    bool is_new_email_token_expired_at_Set() const;
    bool is_new_email_token_expired_at_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPlainPassword() const;
    void setPlainPassword(const QString &plain_password);
    bool is_plain_password_Set() const;
    bool is_plain_password_Valid() const;

    OAIObject getPlainPasswordRepeat() const;
    void setPlainPasswordRepeat(const OAIObject &plain_password_repeat);
    bool is_plain_password_repeat_Set() const;
    bool is_plain_password_repeat_Valid() const;

    QList<QString> getProjectsFlattened() const;
    void setProjectsFlattened(const QList<QString> &projects_flattened);
    bool is_projects_flattened_Set() const;
    bool is_projects_flattened_Valid() const;

    bool isSuperAdmin() const;
    void setSuperAdmin(const bool &super_admin);
    bool is_super_admin_Set() const;
    bool is_super_admin_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QList<OAIUserOrganization> getUserOrganizations() const;
    void setUserOrganizations(const QList<OAIUserOrganization> &user_organizations);
    bool is_user_organizations_Set() const;
    bool is_user_organizations_Valid() const;

    QList<QString> getUserProjects() const;
    void setUserProjects(const QList<QString> &user_projects);
    bool is_user_projects_Set() const;
    bool is_user_projects_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_current_password;
    bool m_current_password_isSet;
    bool m_current_password_isValid;

    OAIOrganization m_default_organization;
    bool m_default_organization_isSet;
    bool m_default_organization_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_new_email;
    bool m_new_email_isSet;
    bool m_new_email_isValid;

    QString m_new_email_token;
    bool m_new_email_token_isSet;
    bool m_new_email_token_isValid;

    QDateTime m_new_email_token_expired_at;
    bool m_new_email_token_expired_at_isSet;
    bool m_new_email_token_expired_at_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_plain_password;
    bool m_plain_password_isSet;
    bool m_plain_password_isValid;

    OAIObject m_plain_password_repeat;
    bool m_plain_password_repeat_isSet;
    bool m_plain_password_repeat_isValid;

    QList<QString> m_projects_flattened;
    bool m_projects_flattened_isSet;
    bool m_projects_flattened_isValid;

    bool m_super_admin;
    bool m_super_admin_isSet;
    bool m_super_admin_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QList<OAIUserOrganization> m_user_organizations;
    bool m_user_organizations_isSet;
    bool m_user_organizations_isValid;

    QList<QString> m_user_projects;
    bool m_user_projects_isSet;
    bool m_user_projects_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
