/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILog_Read.h
 *
 * 
 */

#ifndef OAILog_Read_H
#define OAILog_Read_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILog_Read : public OAIObject {
public:
    OAILog_Read();
    OAILog_Read(QString json);
    ~OAILog_Read() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isFixed() const;
    void setFixed(const bool &fixed);
    bool is_fixed_Set() const;
    bool is_fixed_Valid() const;

    QList<QString> getFixedByVersions() const;
    void setFixedByVersions(const QList<QString> &fixed_by_versions);
    bool is_fixed_by_versions_Set() const;
    bool is_fixed_by_versions_Valid() const;

    bool isFromSmartList() const;
    void setFromSmartList(const bool &from_smart_list);
    bool is_from_smart_list_Set() const;
    bool is_from_smart_list_Valid() const;

    OAIObject getId() const;
    void setId(const OAIObject &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIObject getInstanceName() const;
    void setInstanceName(const OAIObject &instance_name);
    bool is_instance_name_Set() const;
    bool is_instance_name_Valid() const;

    OAIObject getMethod() const;
    void setMethod(const OAIObject &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QList<QString> getNotFixedByVersions() const;
    void setNotFixedByVersions(const QList<QString> &not_fixed_by_versions);
    bool is_not_fixed_by_versions_Set() const;
    bool is_not_fixed_by_versions_Valid() const;

    QString getProxy() const;
    void setProxy(const QString &proxy);
    bool is_proxy_Set() const;
    bool is_proxy_Valid() const;

    OAIObject getReferrer() const;
    void setReferrer(const OAIObject &referrer);
    bool is_referrer_Set() const;
    bool is_referrer_Valid() const;

    QString getRuleId() const;
    void setRuleId(const QString &rule_id);
    bool is_rule_id_Set() const;
    bool is_rule_id_Valid() const;

    OAIObject getSimplifiedUserAgent() const;
    void setSimplifiedUserAgent(const OAIObject &simplified_user_agent);
    bool is_simplified_user_agent_Set() const;
    bool is_simplified_user_agent_Valid() const;

    QString getSmartList() const;
    void setSmartList(const QString &smart_list);
    bool is_smart_list_Set() const;
    bool is_smart_list_Valid() const;

    OAIObject getSource() const;
    void setSource(const OAIObject &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIObject getStatusCode() const;
    void setStatusCode(const OAIObject &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    OAIObject getTarget() const;
    void setTarget(const OAIObject &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    OAIObject getUserAgent() const;
    void setUserAgent(const OAIObject &user_agent);
    bool is_user_agent_Set() const;
    bool is_user_agent_Valid() const;

    OAIObject getUserAgentType() const;
    void setUserAgentType(const OAIObject &user_agent_type);
    bool is_user_agent_type_Set() const;
    bool is_user_agent_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_fixed;
    bool m_fixed_isSet;
    bool m_fixed_isValid;

    QList<QString> m_fixed_by_versions;
    bool m_fixed_by_versions_isSet;
    bool m_fixed_by_versions_isValid;

    bool m_from_smart_list;
    bool m_from_smart_list_isSet;
    bool m_from_smart_list_isValid;

    OAIObject m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIObject m_instance_name;
    bool m_instance_name_isSet;
    bool m_instance_name_isValid;

    OAIObject m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QList<QString> m_not_fixed_by_versions;
    bool m_not_fixed_by_versions_isSet;
    bool m_not_fixed_by_versions_isValid;

    QString m_proxy;
    bool m_proxy_isSet;
    bool m_proxy_isValid;

    OAIObject m_referrer;
    bool m_referrer_isSet;
    bool m_referrer_isValid;

    QString m_rule_id;
    bool m_rule_id_isSet;
    bool m_rule_id_isValid;

    OAIObject m_simplified_user_agent;
    bool m_simplified_user_agent_isSet;
    bool m_simplified_user_agent_isValid;

    QString m_smart_list;
    bool m_smart_list_isSet;
    bool m_smart_list_isValid;

    OAIObject m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIObject m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    OAIObject m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    OAIObject m_user_agent;
    bool m_user_agent_isSet;
    bool m_user_agent_isValid;

    OAIObject m_user_agent_type;
    bool m_user_agent_type_isSet;
    bool m_user_agent_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILog_Read)

#endif // OAILog_Read_H
