/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAggregateLog_Read.h
 *
 * 
 */

#ifndef OAIAggregateLog_Read_H
#define OAIAggregateLog_Read_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAggregateLog_Read : public OAIObject {
public:
    OAIAggregateLog_Read();
    OAIAggregateLog_Read(QString json);
    ~OAIAggregateLog_Read() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isFixed() const;
    void setFixed(const bool &fixed);
    bool is_fixed_Set() const;
    bool is_fixed_Valid() const;

    OAIObject getId() const;
    void setId(const OAIObject &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastOccurrenceAt() const;
    void setLastOccurrenceAt(const QDateTime &last_occurrence_at);
    bool is_last_occurrence_at_Set() const;
    bool is_last_occurrence_at_Valid() const;

    QString getRuleId() const;
    void setRuleId(const QString &rule_id);
    bool is_rule_id_Set() const;
    bool is_rule_id_Valid() const;

    OAIObject getSource() const;
    void setSource(const OAIObject &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    qint32 getStatusCode() const;
    void setStatusCode(const qint32 &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    OAIObject getTarget() const;
    void setTarget(const OAIObject &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    qint32 getViewCount() const;
    void setViewCount(const qint32 &view_count);
    bool is_view_count_Set() const;
    bool is_view_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_fixed;
    bool m_fixed_isSet;
    bool m_fixed_isValid;

    OAIObject m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_occurrence_at;
    bool m_last_occurrence_at_isSet;
    bool m_last_occurrence_at_isValid;

    QString m_rule_id;
    bool m_rule_id_isSet;
    bool m_rule_id_isValid;

    OAIObject m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    qint32 m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    OAIObject m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    qint32 m_view_count;
    bool m_view_count_isSet;
    bool m_view_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAggregateLog_Read)

#endif // OAIAggregateLog_Read_H
