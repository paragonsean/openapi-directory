/**
 * redirection.io
 * API documentation for redirection.io
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImpactSmartList_Write.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImpactSmartList_Write::OAIImpactSmartList_Write(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImpactSmartList_Write::OAIImpactSmartList_Write() {
    this->initializeModel();
}

OAIImpactSmartList_Write::~OAIImpactSmartList_Write() {}

void OAIImpactSmartList_Write::initializeModel() {

    m_project_isSet = false;
    m_project_isValid = false;

    m_smart_list_id_isSet = false;
    m_smart_list_id_isValid = false;

    m_smart_list_version_isSet = false;
    m_smart_list_version_isValid = false;
}

void OAIImpactSmartList_Write::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImpactSmartList_Write::fromJsonObject(QJsonObject json) {

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_smart_list_id_isValid = ::OpenAPI::fromJsonValue(m_smart_list_id, json[QString("smartListId")]);
    m_smart_list_id_isSet = !json[QString("smartListId")].isNull() && m_smart_list_id_isValid;

    m_smart_list_version_isValid = ::OpenAPI::fromJsonValue(m_smart_list_version, json[QString("smartListVersion")]);
    m_smart_list_version_isSet = !json[QString("smartListVersion")].isNull() && m_smart_list_version_isValid;
}

QString OAIImpactSmartList_Write::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImpactSmartList_Write::asJsonObject() const {
    QJsonObject obj;
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_smart_list_id_isSet) {
        obj.insert(QString("smartListId"), ::OpenAPI::toJsonValue(m_smart_list_id));
    }
    if (m_smart_list_version_isSet) {
        obj.insert(QString("smartListVersion"), ::OpenAPI::toJsonValue(m_smart_list_version));
    }
    return obj;
}

QString OAIImpactSmartList_Write::getProject() const {
    return m_project;
}
void OAIImpactSmartList_Write::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIImpactSmartList_Write::is_project_Set() const{
    return m_project_isSet;
}

bool OAIImpactSmartList_Write::is_project_Valid() const{
    return m_project_isValid;
}

QString OAIImpactSmartList_Write::getSmartListId() const {
    return m_smart_list_id;
}
void OAIImpactSmartList_Write::setSmartListId(const QString &smart_list_id) {
    m_smart_list_id = smart_list_id;
    m_smart_list_id_isSet = true;
}

bool OAIImpactSmartList_Write::is_smart_list_id_Set() const{
    return m_smart_list_id_isSet;
}

bool OAIImpactSmartList_Write::is_smart_list_id_Valid() const{
    return m_smart_list_id_isValid;
}

QString OAIImpactSmartList_Write::getSmartListVersion() const {
    return m_smart_list_version;
}
void OAIImpactSmartList_Write::setSmartListVersion(const QString &smart_list_version) {
    m_smart_list_version = smart_list_version;
    m_smart_list_version_isSet = true;
}

bool OAIImpactSmartList_Write::is_smart_list_version_Set() const{
    return m_smart_list_version_isSet;
}

bool OAIImpactSmartList_Write::is_smart_list_version_Valid() const{
    return m_smart_list_version_isValid;
}

bool OAIImpactSmartList_Write::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_list_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_smart_list_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImpactSmartList_Write::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_isValid && m_smart_list_id_isValid && true;
}

} // namespace OpenAPI
