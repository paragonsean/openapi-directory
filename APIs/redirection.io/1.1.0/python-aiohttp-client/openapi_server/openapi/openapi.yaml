openapi: 3.0.1
info:
  contact: {}
  description: API documentation for redirection.io
  title: redirection.io
  version: 1.1.0
  x-apisguru-categories:
  - hosting
  x-logo:
    url: https://twitter.com/redirectionio/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://api.redirection.io/docs.json
    version: "2.0"
  x-providerName: redirection.io
servers:
- url: https://api.redirection.io/
security:
- apiKey: []
paths:
  /agent-flush-aggregate-requests:
    post:
      operationId: post_agent_flush_aggregate_request_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AgentFlushAggregateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AgentFlushAggregateRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/AgentFlushAggregateRequest'
          text/csv:
            schema:
              $ref: '#/components/schemas/AgentFlushAggregateRequest'
        description: The new AgentFlushAggregateRequest resource
        required: false
        x-body-name: agentFlushAggregateRequest
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AgentFlushAggregateRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/AgentFlushAggregateRequest'
            text/html:
              schema:
                $ref: '#/components/schemas/AgentFlushAggregateRequest'
            text/csv:
              schema:
                $ref: '#/components/schemas/AgentFlushAggregateRequest'
          description: AgentFlushAggregateRequest resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a AgentFlushAggregateRequest resource.
      tags:
      - AgentFlushAggregateRequest
      x-codegen-request-body-name: agentFlushAggregateRequest
      x-openapi-router-controller: openapi_server.controllers.agent_flush_aggregate_request_controller
  /agent-flush-requests:
    post:
      operationId: agent_flush_requests_post
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AgentFlushRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AgentFlushRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/AgentFlushRequest'
          text/csv:
            schema:
              $ref: '#/components/schemas/AgentFlushRequest'
        description: The new AgentFlushRequest resource
        required: false
        x-body-name: agentFlushRequest
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AgentFlushRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/AgentFlushRequest'
            text/html:
              schema:
                $ref: '#/components/schemas/AgentFlushRequest'
            text/csv:
              schema:
                $ref: '#/components/schemas/AgentFlushRequest'
          description: AgentFlushRequest resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a AgentFlushRequest resource.
      tags:
      - AgentFlushRequest
      x-codegen-request-body-name: agentFlushRequest
      x-openapi-router-controller: openapi_server.controllers.agent_flush_request_controller
  /agent-instance-updates:
    post:
      operationId: post_instance_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Instance-Write'
        description: The new Instance resource
        required: false
        x-body-name: instance
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Instance-Read'
          description: Instance resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Instance resource.
      tags:
      - Instance
      x-codegen-request-body-name: instance
      x-openapi-router-controller: openapi_server.controllers.instance_controller
  /agent-instance-updates/{id}:
    put:
      operationId: put_instance_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Instance-Write'
        description: The updated Instance resource
        required: false
        x-body-name: instance
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Instance-Read'
          description: Instance resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the Instance resource.
      tags:
      - Instance
      x-codegen-request-body-name: instance
      x-openapi-router-controller: openapi_server.controllers.instance_controller
  /agent-rule-complexes:
    get:
      operationId: agent_legacy_complex_rule_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
          description: Rule collection response
      summary: Retrieves the collection of Rule resources.
      tags:
      - Rule
      x-openapi-router-controller: openapi_server.controllers.rule_controller
  /agent-rule-straights:
    get:
      operationId: agent_legacy_straight_rule_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
          description: Rule collection response
      summary: Retrieves the collection of Rule resources.
      tags:
      - Rule
      x-openapi-router-controller: openapi_server.controllers.rule_controller
  /agent-rules:
    get:
      operationId: agent_rule_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
          description: Rule collection response
      summary: Retrieves the collection of Rule resources.
      tags:
      - Rule
      x-openapi-router-controller: openapi_server.controllers.rule_controller
  /aggregate-logs:
    get:
      operationId: get_aggregate_log_collection
      parameters:
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      - in: query
        name: projectId
        schema:
          type: string
      - in: query
        name: createdAt
        schema:
          type: string
      - in: query
        name: source
        schema:
          type: string
      - in: query
        name: target
        schema:
          type: string
      - in: query
        name: statusCode
        schema:
          type: string
      - in: query
        name: referrer
        schema:
          type: string
      - in: query
        name: userAgent
        schema:
          type: string
      - in: query
        name: userAgentType
        schema:
          type: string
      - in: query
        name: simplifiedUserAgent
        schema:
          type: string
      - in: query
        name: ruleId
        schema:
          type: string
      - in: query
        name: instanceName
        schema:
          type: string
      - in: query
        name: excludeUrls
        schema:
          type: string
      - in: query
        name: excludeEmptyReferrer
        schema:
          type: string
      - in: query
        name: createdAt_gt
        schema:
          type: string
      - in: query
        name: createdAt_gte
        schema:
          type: string
      - in: query
        name: createdAt_lt
        schema:
          type: string
      - in: query
        name: createdAt_lte
        schema:
          type: string
      - in: query
        name: statusCode_gt
        schema:
          type: string
      - in: query
        name: statusCode_gte
        schema:
          type: string
      - in: query
        name: statusCode_lt
        schema:
          type: string
      - in: query
        name: statusCode_lte
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/AggregateLog-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AggregateLog-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/AggregateLog-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/AggregateLog-Read'
                type: array
          description: AggregateLog collection response
      summary: Retrieves the collection of AggregateLog resources.
      tags:
      - AggregateLog
      x-openapi-router-controller: openapi_server.controllers.aggregate_log_controller
  /aggregate-logs/{id}:
    get:
      operationId: get_aggregate_log_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AggregateLog-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateLog-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/AggregateLog-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AggregateLog-Read'
          description: AggregateLog resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a AggregateLog resource.
      tags:
      - AggregateLog
      x-openapi-router-controller: openapi_server.controllers.aggregate_log_controller
  /crawl-urls:
    get:
      operationId: get_crawl_url_collection
      parameters:
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/CrawlUrl-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CrawlUrl-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/CrawlUrl-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/CrawlUrl-Read'
                type: array
          description: CrawlUrl collection response
      summary: Retrieves the collection of CrawlUrl resources.
      tags:
      - CrawlUrl
      x-openapi-router-controller: openapi_server.controllers.crawl_url_controller
  /crawl-urls/{id}:
    get:
      operationId: get_crawl_url_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CrawlUrl-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlUrl-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/CrawlUrl-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CrawlUrl-Read'
          description: CrawlUrl resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a CrawlUrl resource.
      tags:
      - CrawlUrl
      x-openapi-router-controller: openapi_server.controllers.crawl_url_controller
  /crawls:
    get:
      operationId: get_crawl_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      - in: query
        name: firstUrl
        schema:
          type: string
      - in: query
        name: "sort[createdAt]"
        schema:
          type: string
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Crawl-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crawl-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Crawl-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Crawl-Read'
                type: array
          description: Crawl collection response
      summary: Retrieves the collection of Crawl resources.
      tags:
      - Crawl
      x-openapi-router-controller: openapi_server.controllers.crawl_controller
    post:
      operationId: post_crawl_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Crawl-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Crawl-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Crawl-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Crawl-Write'
        description: The new Crawl resource
        required: false
        x-body-name: crawl
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Crawl'
            application/json:
              schema:
                $ref: '#/components/schemas/Crawl'
            text/html:
              schema:
                $ref: '#/components/schemas/Crawl'
            text/csv:
              schema:
                $ref: '#/components/schemas/Crawl'
          description: Crawl resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Crawl resource.
      tags:
      - Crawl
      x-codegen-request-body-name: crawl
      x-openapi-router-controller: openapi_server.controllers.crawl_controller
  /crawls/{id}:
    get:
      operationId: get_crawl_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Crawl-ReadDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Crawl-ReadDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/Crawl-ReadDetails'
            text/csv:
              schema:
                $ref: '#/components/schemas/Crawl-ReadDetails'
          description: Crawl resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Crawl resource.
      tags:
      - Crawl
      x-openapi-router-controller: openapi_server.controllers.crawl_controller
  /crawls/{id}/cancel:
    post:
      operationId: cancel_crawl_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Crawl'
          application/json:
            schema:
              $ref: '#/components/schemas/Crawl'
          text/html:
            schema:
              $ref: '#/components/schemas/Crawl'
          text/csv:
            schema:
              $ref: '#/components/schemas/Crawl'
        description: The new Crawl resource
        required: false
        x-body-name: crawl
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Crawl-ReadDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/Crawl-ReadDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/Crawl-ReadDetails'
            text/csv:
              schema:
                $ref: '#/components/schemas/Crawl-ReadDetails'
          description: Crawl resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Crawl resource.
      tags:
      - Crawl
      x-codegen-request-body-name: crawl
      x-openapi-router-controller: openapi_server.controllers.crawl_controller
  /explain-urls:
    post:
      operationId: post_explain_url_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ExplainUrl-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/ExplainUrl-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/ExplainUrl-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ExplainUrl-Write'
        description: The new ExplainUrl resource
        required: false
        x-body-name: explainUrl
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExplainUrl'
            application/json:
              schema:
                $ref: '#/components/schemas/ExplainUrl'
            text/html:
              schema:
                $ref: '#/components/schemas/ExplainUrl'
            text/csv:
              schema:
                $ref: '#/components/schemas/ExplainUrl'
          description: ExplainUrl resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a ExplainUrl resource.
      tags:
      - ExplainUrl
      x-codegen-request-body-name: explainUrl
      x-openapi-router-controller: openapi_server.controllers.explain_url_controller
  /explain-urls/{id}:
    get:
      operationId: get_explain_url_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExplainUrl'
            application/json:
              schema:
                $ref: '#/components/schemas/ExplainUrl'
            text/html:
              schema:
                $ref: '#/components/schemas/ExplainUrl'
            text/csv:
              schema:
                $ref: '#/components/schemas/ExplainUrl'
          description: ExplainUrl resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a ExplainUrl resource.
      tags:
      - ExplainUrl
      x-openapi-router-controller: openapi_server.controllers.explain_url_controller
  /export-rules:
    get:
      operationId: export_rule_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      - in: query
        name: "sort[id]"
        schema:
          type: string
      - in: query
        name: "sort[viewCount]"
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
          description: Rule collection response
      summary: Retrieves the collection of Rule resources.
      tags:
      - Rule
      x-openapi-router-controller: openapi_server.controllers.rule_controller
  /impact-rule-changes:
    post:
      operationId: post_impact_rule_change_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ImpactRuleChange-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/ImpactRuleChange-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/ImpactRuleChange-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ImpactRuleChange-Write'
        description: The new ImpactRuleChange resource
        required: false
        x-body-name: impactRuleChange
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ImpactRuleChange-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/ImpactRuleChange-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/ImpactRuleChange-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ImpactRuleChange-Read'
          description: ImpactRuleChange resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a ImpactRuleChange resource.
      tags:
      - ImpactRuleChange
      x-codegen-request-body-name: impactRuleChange
      x-openapi-router-controller: openapi_server.controllers.impact_rule_change_controller
  /impact-rule-changes/{id}:
    get:
      operationId: get_impact_rule_change_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ImpactRuleChange-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/ImpactRuleChange-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/ImpactRuleChange-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ImpactRuleChange-Read'
          description: ImpactRuleChange resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a ImpactRuleChange resource.
      tags:
      - ImpactRuleChange
      x-openapi-router-controller: openapi_server.controllers.impact_rule_change_controller
  /impact-smart-lists:
    post:
      operationId: post_impact_smart_list_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ImpactSmartList-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/ImpactSmartList-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/ImpactSmartList-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ImpactSmartList-Write'
        description: The new ImpactSmartList resource
        required: false
        x-body-name: impactSmartList
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ImpactSmartList-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/ImpactSmartList-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/ImpactSmartList-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ImpactSmartList-Read'
          description: ImpactSmartList resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a ImpactSmartList resource.
      tags:
      - ImpactSmartList
      x-codegen-request-body-name: impactSmartList
      x-openapi-router-controller: openapi_server.controllers.impact_smart_list_controller
  /impact-smart-lists/{id}:
    get:
      operationId: get_impact_smart_list_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ImpactSmartList-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/ImpactSmartList-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/ImpactSmartList-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ImpactSmartList-Read'
          description: ImpactSmartList resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a ImpactSmartList resource.
      tags:
      - ImpactSmartList
      x-openapi-router-controller: openapi_server.controllers.impact_smart_list_controller
  /imports:
    get:
      operationId: get_import_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Import-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Import-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Import-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Import-Read'
                type: array
          description: Import collection response
      summary: Retrieves the collection of Import resources.
      tags:
      - Import
      x-openapi-router-controller: openapi_server.controllers.import_controller
    post:
      operationId: post_import_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Import-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Import-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Import-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Import-Write'
        description: The new Import resource
        required: false
        x-body-name: import
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Import-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Import-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Import-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Import-Read'
          description: Import resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Import resource.
      tags:
      - Import
      x-codegen-request-body-name: import
      x-openapi-router-controller: openapi_server.controllers.import_controller
  /imports/{id}:
    get:
      operationId: get_import_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Import-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Import-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Import-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Import-Read'
          description: Import resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Import resource.
      tags:
      - Import
      x-openapi-router-controller: openapi_server.controllers.import_controller
  /instances:
    get:
      operationId: get_instance_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Instance-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Instance-Read'
                type: array
          description: Instance collection response
      summary: Retrieves the collection of Instance resources.
      tags:
      - Instance
      x-openapi-router-controller: openapi_server.controllers.instance_controller
  /instances/{id}:
    get:
      operationId: get_instance_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Instance-Read'
          description: Instance resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Instance resource.
      tags:
      - Instance
      x-openapi-router-controller: openapi_server.controllers.instance_controller
    put:
      operationId: logging_instance_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Instance-Write'
        description: The updated Instance resource
        required: false
        x-body-name: instance
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Instance-Read'
          description: Instance resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the Instance resource.
      tags:
      - Instance
      x-codegen-request-body-name: instance
      x-openapi-router-controller: openapi_server.controllers.instance_controller
  /instances/{id}/live:
    put:
      operationId: live_instance_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Instance-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Instance-Write'
        description: The updated Instance resource
        required: false
        x-body-name: instance
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Instance-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Instance-Read'
          description: Instance resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the Instance resource.
      tags:
      - Instance
      x-codegen-request-body-name: instance
      x-openapi-router-controller: openapi_server.controllers.instance_controller
  /invitations:
    get:
      operationId: get_invitation_collection
      parameters:
      - in: query
        name: targetId
        required: true
        schema:
          type: string
      - in: query
        name: targetType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation-Read'
                type: array
          description: Invitation collection response
      summary: Retrieves the collection of Invitation resources.
      tags:
      - Invitation
      x-openapi-router-controller: openapi_server.controllers.invitation_controller
    post:
      operationId: post_invitation_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Invitation-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Invitation-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Invitation-Write'
        description: The new Invitation resource
        required: false
        x-body-name: invitation
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
          description: Invitation resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Invitation resource.
      tags:
      - Invitation
      x-codegen-request-body-name: invitation
      x-openapi-router-controller: openapi_server.controllers.invitation_controller
  /invitations/accept/{token}:
    post:
      operationId: accept_invitation_item
      parameters:
      - description: The invitation acceptation token
        in: path
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          text/html:
            schema:
              $ref: '#/components/schemas/Invitation'
          text/csv:
            schema:
              $ref: '#/components/schemas/Invitation'
        description: The new Invitation resource
        required: true
        x-body-name: invitation
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
          description: Invitation resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Invitation resource.
      tags:
      - Invitation
      x-codegen-request-body-name: invitation
      x-openapi-router-controller: openapi_server.controllers.invitation_controller
  /invitations/{id}:
    delete:
      operationId: delete_invitation_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Invitation resource deleted
        "404":
          content: {}
          description: Resource not found
      summary: Removes the Invitation resource.
      tags:
      - Invitation
      x-openapi-router-controller: openapi_server.controllers.invitation_controller
    get:
      operationId: get_invitation_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Invitation-Read'
          description: Invitation resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Invitation resource.
      tags:
      - Invitation
      x-openapi-router-controller: openapi_server.controllers.invitation_controller
  /logs:
    get:
      operationId: get_log_collection
      parameters:
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      - in: query
        name: projectId
        schema:
          type: string
      - in: query
        name: createdAt
        schema:
          type: string
      - in: query
        name: source
        schema:
          type: string
      - in: query
        name: target
        schema:
          type: string
      - in: query
        name: statusCode
        schema:
          type: string
      - in: query
        name: referrer
        schema:
          type: string
      - in: query
        name: userAgent
        schema:
          type: string
      - in: query
        name: userAgentType
        schema:
          type: string
      - in: query
        name: simplifiedUserAgent
        schema:
          type: string
      - in: query
        name: ruleId
        schema:
          type: string
      - in: query
        name: instanceName
        schema:
          type: string
      - in: query
        name: excludeUrls
        schema:
          type: string
      - in: query
        name: excludeEmptyReferrer
        schema:
          type: string
      - in: query
        name: createdAt_gt
        schema:
          type: string
      - in: query
        name: createdAt_gte
        schema:
          type: string
      - in: query
        name: createdAt_lt
        schema:
          type: string
      - in: query
        name: createdAt_lte
        schema:
          type: string
      - in: query
        name: statusCode_gt
        schema:
          type: string
      - in: query
        name: statusCode_gte
        schema:
          type: string
      - in: query
        name: statusCode_lt
        schema:
          type: string
      - in: query
        name: statusCode_lte
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Log-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Log-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Log-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Log-Read'
                type: array
          description: Log collection response
      summary: Retrieves the collection of Log resources.
      tags:
      - Log
      x-openapi-router-controller: openapi_server.controllers.log_controller
  /logs/{id}:
    get:
      operationId: get_log_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Log-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Log-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Log-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Log-Read'
          description: Log resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Log resource.
      tags:
      - Log
      x-openapi-router-controller: openapi_server.controllers.log_controller
  /markers:
    post:
      operationId: post_marker_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Marker-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Marker-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Marker-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Marker-Write'
        description: The new Marker resource
        required: false
        x-body-name: marker
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Marker'
            application/json:
              schema:
                $ref: '#/components/schemas/Marker'
            text/html:
              schema:
                $ref: '#/components/schemas/Marker'
            text/csv:
              schema:
                $ref: '#/components/schemas/Marker'
          description: Marker resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Marker resource.
      tags:
      - Marker
      x-codegen-request-body-name: marker
      x-openapi-router-controller: openapi_server.controllers.marker_controller
  /markers/{id}:
    delete:
      operationId: delete_marker_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Marker resource deleted
        "404":
          content: {}
          description: Resource not found
      summary: Removes the Marker resource.
      tags:
      - Marker
      x-openapi-router-controller: openapi_server.controllers.marker_controller
    get:
      operationId: get_marker_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Marker'
            application/json:
              schema:
                $ref: '#/components/schemas/Marker'
            text/html:
              schema:
                $ref: '#/components/schemas/Marker'
            text/csv:
              schema:
                $ref: '#/components/schemas/Marker'
          description: Marker resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Marker resource.
      tags:
      - Marker
      x-openapi-router-controller: openapi_server.controllers.marker_controller
    put:
      operationId: put_marker_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Marker'
          application/json:
            schema:
              $ref: '#/components/schemas/Marker'
          text/html:
            schema:
              $ref: '#/components/schemas/Marker'
          text/csv:
            schema:
              $ref: '#/components/schemas/Marker'
        description: The updated Marker resource
        required: false
        x-body-name: marker
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Marker'
            application/json:
              schema:
                $ref: '#/components/schemas/Marker'
            text/html:
              schema:
                $ref: '#/components/schemas/Marker'
            text/csv:
              schema:
                $ref: '#/components/schemas/Marker'
          description: Marker resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the Marker resource.
      tags:
      - Marker
      x-codegen-request-body-name: marker
      x-openapi-router-controller: openapi_server.controllers.marker_controller
  /matching-urls:
    post:
      operationId: post_matching_url_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MatchingUrl-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/MatchingUrl-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/MatchingUrl-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/MatchingUrl-Write'
        description: The new MatchingUrl resource
        required: false
        x-body-name: matchingUrl
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MatchingUrl-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingUrl-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/MatchingUrl-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MatchingUrl-Read'
          description: MatchingUrl resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a MatchingUrl resource.
      tags:
      - MatchingUrl
      x-codegen-request-body-name: matchingUrl
      x-openapi-router-controller: openapi_server.controllers.matching_url_controller
  /matching-urls/{id}:
    get:
      operationId: get_matching_url_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MatchingUrl-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingUrl-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/MatchingUrl-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MatchingUrl-Read'
          description: MatchingUrl resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a MatchingUrl resource.
      tags:
      - MatchingUrl
      x-openapi-router-controller: openapi_server.controllers.matching_url_controller
  /notifications:
    get:
      operationId: get_notification_collection
      parameters:
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Notification-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Notification-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Notification-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Notification-Read'
                type: array
          description: Notification collection response
      summary: Retrieves the collection of Notification resources.
      tags:
      - Notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
  /notifications/{id}:
    get:
      operationId: get_notification_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Notification-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Notification-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Notification-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Notification-Read'
          description: Notification resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Notification resource.
      tags:
      - Notification
      x-openapi-router-controller: openapi_server.controllers.notification_controller
  /organizations:
    post:
      operationId: post_organization_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-Write'
        description: The new Organization resource
        required: false
        x-body-name: organization
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-Read'
          description: Organization resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Organization resource.
      tags:
      - Organization
      x-codegen-request-body-name: organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /organizations/{id}:
    delete:
      operationId: delete_organization_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Organization resource deleted
        "404":
          content: {}
          description: Resource not found
      summary: Removes the Organization resource.
      tags:
      - Organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      operationId: get_organization_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-Read'
          description: Organization resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Organization resource.
      tags:
      - Organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    put:
      operationId: put_organization_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-Write'
        description: The updated Organization resource
        required: false
        x-body-name: organization
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-Read'
          description: Organization resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the Organization resource.
      tags:
      - Organization
      x-codegen-request-body-name: organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /post-logs:
    post:
      operationId: post_logs_post
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AgentFlushRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AgentFlushRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/AgentFlushRequest'
          text/csv:
            schema:
              $ref: '#/components/schemas/AgentFlushRequest'
        description: The new AgentFlushRequest resource
        required: false
        x-body-name: agentFlushRequest
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AgentFlushRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/AgentFlushRequest'
            text/html:
              schema:
                $ref: '#/components/schemas/AgentFlushRequest'
            text/csv:
              schema:
                $ref: '#/components/schemas/AgentFlushRequest'
          description: AgentFlushRequest resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a AgentFlushRequest resource.
      tags:
      - AgentFlushRequest
      x-codegen-request-body-name: agentFlushRequest
      x-openapi-router-controller: openapi_server.controllers.agent_flush_request_controller
  /projects:
    get:
      operationId: get_project_collection
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Project-List'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project-List'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Project-List'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Project-List'
                type: array
          description: Project collection response
      summary: Retrieves the collection of Project resources.
      tags:
      - Project
      x-openapi-router-controller: openapi_server.controllers.project_controller
    post:
      operationId: post_project_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Project-CreationWrite'
          application/json:
            schema:
              $ref: '#/components/schemas/Project-CreationWrite'
          text/html:
            schema:
              $ref: '#/components/schemas/Project-CreationWrite'
          text/csv:
            schema:
              $ref: '#/components/schemas/Project-CreationWrite'
        description: The new Project resource
        required: false
        x-body-name: project
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Project-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Project-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Project-Read'
          description: Project resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a Project resource.
      tags:
      - Project
      x-codegen-request-body-name: project
      x-openapi-router-controller: openapi_server.controllers.project_controller
  /projects/{id}:
    delete:
      operationId: delete_project_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Project resource deleted
        "404":
          content: {}
          description: Resource not found
      summary: Removes the Project resource.
      tags:
      - Project
      x-openapi-router-controller: openapi_server.controllers.project_controller
    get:
      operationId: get_project_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Project-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Project-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Project-Read'
          description: Project resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Project resource.
      tags:
      - Project
      x-openapi-router-controller: openapi_server.controllers.project_controller
    put:
      operationId: put_project_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Project-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/Project-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Project-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Project-Write'
        description: The updated Project resource
        required: false
        x-body-name: project
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Project-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Project-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Project-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Project-Read'
          description: Project resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the Project resource.
      tags:
      - Project
      x-codegen-request-body-name: project
      x-openapi-router-controller: openapi_server.controllers.project_controller
  /publish-histories:
    get:
      operationId: get_publish_history_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      - in: query
        name: "createdAt[before]"
        schema:
          type: string
      - in: query
        name: "createdAt[strictly_before]"
        schema:
          type: string
      - in: query
        name: "createdAt[after]"
        schema:
          type: string
      - in: query
        name: "createdAt[strictly_after]"
        schema:
          type: string
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/PublishHistory-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PublishHistory-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/PublishHistory-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/PublishHistory-Read'
                type: array
          description: PublishHistory collection response
      summary: Retrieves the collection of PublishHistory resources.
      tags:
      - PublishHistory
      x-openapi-router-controller: openapi_server.controllers.publish_history_controller
  /publish-histories/{id}:
    get:
      operationId: get_publish_history_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PublishHistory-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/PublishHistory-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/PublishHistory-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PublishHistory-Read'
          description: PublishHistory resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a PublishHistory resource.
      tags:
      - PublishHistory
      x-openapi-router-controller: openapi_server.controllers.publish_history_controller
  /rule-changes:
    get:
      operationId: get_rule_change_collection
      parameters:
      - in: query
        name: versionId
        required: true
        schema:
          type: string
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleChange-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleChange-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/RuleChange-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/RuleChange-Read'
                type: array
          description: RuleChange collection response
      summary: Retrieves the collection of RuleChange resources.
      tags:
      - RuleChange
      x-openapi-router-controller: openapi_server.controllers.rule_change_controller
    post:
      operationId: post_rule_change_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RuleChange-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/RuleChange-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/RuleChange-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RuleChange-Write'
        description: The new RuleChange resource
        required: false
        x-body-name: ruleChange
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RuleChange-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/RuleChange-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/RuleChange-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RuleChange-Read'
          description: RuleChange resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a RuleChange resource.
      tags:
      - RuleChange
      x-codegen-request-body-name: ruleChange
      x-openapi-router-controller: openapi_server.controllers.rule_change_controller
  /rule-changes/{id}:
    delete:
      operationId: delete_rule_change_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: RuleChange resource deleted
        "404":
          content: {}
          description: Resource not found
      summary: Removes the RuleChange resource.
      tags:
      - RuleChange
      x-openapi-router-controller: openapi_server.controllers.rule_change_controller
    get:
      operationId: get_rule_change_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RuleChange-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/RuleChange-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/RuleChange-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RuleChange-Read'
          description: RuleChange resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a RuleChange resource.
      tags:
      - RuleChange
      x-openapi-router-controller: openapi_server.controllers.rule_change_controller
  /rule-set-versions:
    get:
      operationId: get_rule_set_version_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      - in: query
        name: "sort[createdAt]"
        schema:
          type: string
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleSetVersion-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleSetVersion-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/RuleSetVersion-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/RuleSetVersion-Read'
                type: array
          description: RuleSetVersion collection response
      summary: Retrieves the collection of RuleSetVersion resources.
      tags:
      - RuleSetVersion
      x-openapi-router-controller: openapi_server.controllers.rule_set_version_controller
  /rule-set-versions/{id}:
    get:
      operationId: get_rule_set_version_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
          description: RuleSetVersion resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a RuleSetVersion resource.
      tags:
      - RuleSetVersion
      x-openapi-router-controller: openapi_server.controllers.rule_set_version_controller
  /rule-set-versions/{id}/clear:
    post:
      operationId: clear_rule_set_version_item
      parameters:
      - description: The id of the version
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RuleSetVersion'
          application/json:
            schema:
              $ref: '#/components/schemas/RuleSetVersion'
          text/html:
            schema:
              $ref: '#/components/schemas/RuleSetVersion'
          text/csv:
            schema:
              $ref: '#/components/schemas/RuleSetVersion'
        description: The new RuleSetVersion resource
        required: true
        x-body-name: ruleSetVersion
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
          description: RuleSetVersion resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Clear a version
      tags:
      - RuleSetVersion
      x-codegen-request-body-name: ruleSetVersion
      x-openapi-router-controller: openapi_server.controllers.rule_set_version_controller
  /rule-set-versions/{id}/publish:
    post:
      operationId: publish_rule_set_version_item
      parameters:
      - description: The id of the version
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RuleSetVersion'
          application/json:
            schema:
              $ref: '#/components/schemas/RuleSetVersion'
          text/html:
            schema:
              $ref: '#/components/schemas/RuleSetVersion'
          text/csv:
            schema:
              $ref: '#/components/schemas/RuleSetVersion'
        description: The new RuleSetVersion resource
        required: true
        x-body-name: ruleSetVersion
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RuleSetVersion-Read'
          description: RuleSetVersion resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Publish a version
      tags:
      - RuleSetVersion
      x-codegen-request-body-name: ruleSetVersion
      x-openapi-router-controller: openapi_server.controllers.rule_set_version_controller
  /rule-statistics:
    get:
      operationId: get_rule_statistic_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleStatistic'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleStatistic'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/RuleStatistic'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/RuleStatistic'
                type: array
          description: RuleStatistic collection response
      summary: Retrieves the collection of RuleStatistic resources.
      tags:
      - RuleStatistic
      x-openapi-router-controller: openapi_server.controllers.rule_statistic_controller
  /rule-statistics/{id}:
    get:
      operationId: get_rule_statistic_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RuleStatistic'
            application/json:
              schema:
                $ref: '#/components/schemas/RuleStatistic'
            text/html:
              schema:
                $ref: '#/components/schemas/RuleStatistic'
            text/csv:
              schema:
                $ref: '#/components/schemas/RuleStatistic'
          description: RuleStatistic resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a RuleStatistic resource.
      tags:
      - RuleStatistic
      x-openapi-router-controller: openapi_server.controllers.rule_statistic_controller
  /rules:
    get:
      operationId: get_rule_collection
      parameters:
      - in: query
        name: projectId
        required: true
        schema:
          type: string
      - in: query
        name: "sort[id]"
        schema:
          type: string
      - in: query
        name: "sort[viewCount]"
        schema:
          type: string
      - description: The collection page number
        in: query
        name: page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Rule-Read'
                type: array
          description: Rule collection response
      summary: Retrieves the collection of Rule resources.
      tags:
      - Rule
      x-openapi-router-controller: openapi_server.controllers.rule_controller
  /rules/{id}:
    get:
      operationId: get_rule_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Rule-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/Rule-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Rule-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Rule-Read'
          description: Rule resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a Rule resource.
      tags:
      - Rule
      x-openapi-router-controller: openapi_server.controllers.rule_controller
  /smart-lists:
    get:
      operationId: get_smart_list_collection
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/SmartList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SmartList'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/SmartList'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/SmartList'
                type: array
          description: SmartList collection response
      summary: Retrieves the collection of SmartList resources.
      tags:
      - SmartList
      x-openapi-router-controller: openapi_server.controllers.smart_list_controller
  /smart-lists/{id}:
    get:
      operationId: get_smart_list_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SmartList'
            application/json:
              schema:
                $ref: '#/components/schemas/SmartList'
            text/html:
              schema:
                $ref: '#/components/schemas/SmartList'
            text/csv:
              schema:
                $ref: '#/components/schemas/SmartList'
          description: SmartList resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a SmartList resource.
      tags:
      - SmartList
      x-openapi-router-controller: openapi_server.controllers.smart_list_controller
  /user-organizations:
    post:
      operationId: post_user_organization_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserOrganization-CreationWrite'
          application/json:
            schema:
              $ref: '#/components/schemas/UserOrganization-CreationWrite'
          text/html:
            schema:
              $ref: '#/components/schemas/UserOrganization-CreationWrite'
          text/csv:
            schema:
              $ref: '#/components/schemas/UserOrganization-CreationWrite'
        description: The new UserOrganization resource
        required: false
        x-body-name: userOrganization
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
          description: UserOrganization resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a UserOrganization resource.
      tags:
      - UserOrganization
      x-codegen-request-body-name: userOrganization
      x-openapi-router-controller: openapi_server.controllers.user_organization_controller
  /user-organizations/{id}:
    delete:
      operationId: delete_user_organization_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: UserOrganization resource deleted
        "404":
          content: {}
          description: Resource not found
      summary: Removes the UserOrganization resource.
      tags:
      - UserOrganization
      x-openapi-router-controller: openapi_server.controllers.user_organization_controller
    get:
      operationId: get_user_organization_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
          description: UserOrganization resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a UserOrganization resource.
      tags:
      - UserOrganization
      x-openapi-router-controller: openapi_server.controllers.user_organization_controller
    put:
      operationId: put_user_organization_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserOrganization-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/UserOrganization-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/UserOrganization-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/UserOrganization-Write'
        description: The updated UserOrganization resource
        required: false
        x-body-name: userOrganization
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserOrganization-Read'
          description: UserOrganization resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the UserOrganization resource.
      tags:
      - UserOrganization
      x-codegen-request-body-name: userOrganization
      x-openapi-router-controller: openapi_server.controllers.user_organization_controller
  /user-project-flatteneds/{id}:
    get:
      operationId: get_user_project_flattened_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserProjectFlattened-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProjectFlattened-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserProjectFlattened-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserProjectFlattened-Read'
          description: UserProjectFlattened resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a UserProjectFlattened resource.
      tags:
      - UserProjectFlattened
      x-openapi-router-controller: openapi_server.controllers.user_project_flattened_controller
  /user-projects:
    post:
      operationId: post_user_project_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserProject-CreationWrite'
          application/json:
            schema:
              $ref: '#/components/schemas/UserProject-CreationWrite'
          text/html:
            schema:
              $ref: '#/components/schemas/UserProject-CreationWrite'
          text/csv:
            schema:
              $ref: '#/components/schemas/UserProject-CreationWrite'
        description: The new UserProject resource
        required: false
        x-body-name: userProject
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
          description: UserProject resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a UserProject resource.
      tags:
      - UserProject
      x-codegen-request-body-name: userProject
      x-openapi-router-controller: openapi_server.controllers.user_project_controller
  /user-projects/{id}:
    delete:
      operationId: delete_user_project_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: UserProject resource deleted
        "404":
          content: {}
          description: Resource not found
      summary: Removes the UserProject resource.
      tags:
      - UserProject
      x-openapi-router-controller: openapi_server.controllers.user_project_controller
    get:
      operationId: get_user_project_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
          description: UserProject resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a UserProject resource.
      tags:
      - UserProject
      x-openapi-router-controller: openapi_server.controllers.user_project_controller
    put:
      operationId: put_user_project_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UserProject-Write'
          application/json:
            schema:
              $ref: '#/components/schemas/UserProject-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/UserProject-Write'
          text/csv:
            schema:
              $ref: '#/components/schemas/UserProject-Write'
        description: The updated UserProject resource
        required: false
        x-body-name: userProject
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserProject-Read'
          description: UserProject resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the UserProject resource.
      tags:
      - UserProject
      x-codegen-request-body-name: userProject
      x-openapi-router-controller: openapi_server.controllers.user_project_controller
  /users:
    get:
      operationId: get_user_collection
      parameters:
      - in: query
        name: organizationId
        required: true
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                items:
                  $ref: '#/components/schemas/User-List'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User-List'
                type: array
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/User-List'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/User-List'
                type: array
          description: User collection response
      summary: Retrieves the collection of User resources.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: post_user_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-CreationWrite'
          application/json:
            schema:
              $ref: '#/components/schemas/User-CreationWrite'
          text/html:
            schema:
              $ref: '#/components/schemas/User-CreationWrite'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-CreationWrite'
        description: The new User resource
        required: false
        x-body-name: user
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-Read'
          description: User resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a User resource.
      tags:
      - User
      x-codegen-request-body-name: user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/forgot-password-request:
    post:
      operationId: post_forgot_password_request_collection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
          text/csv:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
        description: The new ForgotPasswordRequest resource
        required: false
        x-body-name: forgotPasswordRequest
      responses:
        "201":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordRequest'
            text/html:
              schema:
                $ref: '#/components/schemas/ForgotPasswordRequest'
            text/csv:
              schema:
                $ref: '#/components/schemas/ForgotPasswordRequest'
          description: ForgotPasswordRequest resource created
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Creates a ForgotPasswordRequest resource.
      tags:
      - ForgotPasswordRequest
      x-codegen-request-body-name: forgotPasswordRequest
      x-openapi-router-controller: openapi_server.controllers.forgot_password_request_controller
  /users/forgot-password/{resetToken}:
    put:
      operationId: forgot_password_user_item
      parameters:
      - in: path
        name: resetToken
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-Password'
          application/json:
            schema:
              $ref: '#/components/schemas/User-Password'
          text/html:
            schema:
              $ref: '#/components/schemas/User-Password'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-Password'
        description: The updated User resource
        required: false
        x-body-name: user
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-Read'
          description: User resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the User resource.
      tags:
      - User
      x-codegen-request-body-name: user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{id}:
    delete:
      operationId: delete_user_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: User resource deleted
        "404":
          content: {}
          description: Resource not found
      summary: Removes the User resource.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      operationId: get_user_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-Read'
          description: User resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a User resource.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{id}/confirm-new-email/{newEmailToken}:
    get:
      operationId: confirm_new_email_user_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: newEmailToken
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-Read'
          description: User resource response
        "404":
          content: {}
          description: Resource not found
      summary: Retrieves a User resource.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{id}/edit-email:
    put:
      operationId: edit_email_user_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          text/html:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
        description: The updated User resource
        required: false
        x-body-name: user
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-Read'
          description: User resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the User resource.
      tags:
      - User
      x-codegen-request-body-name: user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{id}/edit-info:
    put:
      operationId: edit_info_user_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          text/html:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
        description: The updated User resource
        required: false
        x-body-name: user
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-Read'
          description: User resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the User resource.
      tags:
      - User
      x-codegen-request-body-name: user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /users/{id}/edit-password:
    put:
      operationId: edit_password_user_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          text/html:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-EditInfo'
        description: The updated User resource
        required: false
        x-body-name: user
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-Read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-Read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-Read'
          description: User resource updated
        "400":
          content: {}
          description: Invalid input
        "404":
          content: {}
          description: Resource not found
      summary: Replaces the User resource.
      tags:
      - User
      x-codegen-request-body-name: user
      x-openapi-router-controller: openapi_server.controllers.user_controller
components:
  schemas:
    AgentFlushAggregateRequest:
      description: ""
      example:
        instanceName: "{}"
        instanceTime: "{}"
        logs: "{}"
      properties:
        instanceName:
          title: instanceName
          type: object
        instanceTime:
          title: instanceTime
          type: object
        logs:
          title: logs
          type: object
      required:
      - instanceName
      - instanceTime
      - logs
      title: AgentFlushAggregateRequest
      type: object
    AgentFlushRequest:
      description: ""
      example:
        instanceName: "{}"
        instanceTime: 0
        logs:
        - logs
        - logs
      properties:
        instanceName:
          title: instanceName
          type: object
        instanceTime:
          title: instanceTime
          type: integer
        logs:
          items:
            type: string
          title: logs
          type: array
      required:
      - instanceName
      - instanceTime
      - logs
      title: AgentFlushRequest
      type: object
    AggregateLog-Read:
      description: ""
      example:
        fixed: true
        lastOccurrenceAt: 2000-01-23T04:56:07.000+00:00
        id: "{}"
        source: "{}"
        viewCount: 6
        ruleId: ruleId
        statusCode: 0
        target: "{}"
      properties:
        fixed:
          title: fixed
          type: boolean
        id:
          title: id
          type: object
        lastOccurrenceAt:
          format: date-time
          title: lastOccurrenceAt
          type: string
        ruleId:
          title: ruleId
          type: string
        source:
          title: source
          type: object
        statusCode:
          title: statusCode
          type: integer
        target:
          title: target
          type: object
        viewCount:
          title: viewCount
          type: integer
      title: AggregateLog-Read
      type: object
    Crawl:
      description: ""
      example:
        archived: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        currentConcurrency: 5
        marking:
        - marking
        - marking
        stats:
        - stats
        - stats
        author:
          userOrganizations:
          - organization: organization
            id: id
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          - organization: organization
            id: id
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          plainPasswordRepeat: "{}"
          defaultOrganization:
            userOrganizations:
            - organization: organization
              id: id
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            - organization: organization
              id: id
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            createdAt: 2000-01-23T04:56:07.000+00:00
            projects:
            - usersFlattened:
              - project: project
                functionalRoles:
                - functionalRoles
                - functionalRoles
                user: user
              - project: project
                functionalRoles:
                - functionalRoles
                - functionalRoles
                user: user
              isPublishing: true
              configuration:
              - configuration
              - configuration
              straightRulesCount: 5
              onboardingCompletedDemos:
              - onboardingCompletedDemos
              - onboardingCompletedDemos
              straightRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
              currentVersion:
                createdAt: 2000-01-23T04:56:07.000+00:00
                current: true
                mergedRulesCount: 6
                publishedAt: 2000-01-23T04:56:07.000+00:00
                name: name
                working: true
                id: id
                isSnapshot: true
              token: token
              workingVersion:
                createdAt: 2000-01-23T04:56:07.000+00:00
                current: true
                mergedRulesCount: 6
                publishedAt: 2000-01-23T04:56:07.000+00:00
                name: name
                working: true
                id: id
                isSnapshot: true
              complexRulesCount: 0
              createdAt: 2000-01-23T04:56:07.000+00:00
              rulesHash: rulesHash
              ignoreProjectTypes:
              - ignoreProjectTypes
              - ignoreProjectTypes
              userProjects:
              - project: project
                id: id
                functionalRoles:
                - functionalRoles
                - functionalRoles
                user: user
              - project: project
                id: id
                functionalRoles:
                - functionalRoles
                - functionalRoles
                user: user
              organization: null
              name: name
              id: id
              complexRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
              plan: 1
              slug: slug
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - usersFlattened:
              - project: project
                functionalRoles:
                - functionalRoles
                - functionalRoles
                user: user
              - project: project
                functionalRoles:
                - functionalRoles
                - functionalRoles
                user: user
              isPublishing: true
              configuration:
              - configuration
              - configuration
              straightRulesCount: 5
              onboardingCompletedDemos:
              - onboardingCompletedDemos
              - onboardingCompletedDemos
              straightRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
              currentVersion:
                createdAt: 2000-01-23T04:56:07.000+00:00
                current: true
                mergedRulesCount: 6
                publishedAt: 2000-01-23T04:56:07.000+00:00
                name: name
                working: true
                id: id
                isSnapshot: true
              token: token
              workingVersion:
                createdAt: 2000-01-23T04:56:07.000+00:00
                current: true
                mergedRulesCount: 6
                publishedAt: 2000-01-23T04:56:07.000+00:00
                name: name
                working: true
                id: id
                isSnapshot: true
              complexRulesCount: 0
              createdAt: 2000-01-23T04:56:07.000+00:00
              rulesHash: rulesHash
              ignoreProjectTypes:
              - ignoreProjectTypes
              - ignoreProjectTypes
              userProjects:
              - project: project
                id: id
                functionalRoles:
                - functionalRoles
                - functionalRoles
                user: user
              - project: project
                id: id
                functionalRoles:
                - functionalRoles
                - functionalRoles
                user: user
              organization: null
              name: name
              id: id
              complexRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
              plan: 1
              slug: slug
              updatedAt: 2000-01-23T04:56:07.000+00:00
            name: name
            id: id
            slug: slug
            updatedAt: 2000-01-23T04:56:07.000+00:00
          newEmailTokenExpiredAt: 2000-01-23T04:56:07.000+00:00
          currentPassword: "{}"
          password: password
          plainPassword: plainPassword
          userProjects:
          - userProjects
          - userProjects
          name: name
          newEmail: newEmail
          id: id
          newEmailToken: newEmailToken
          superAdmin: true
          email: email
          projectsFlattened:
          - projectsFlattened
          - projectsFlattened
          updatedAt: 2000-01-23T04:56:07.000+00:00
        firstUrl: firstUrl
        id: id
        trigger: trigger
        error: error
        finishedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        archived:
          readOnly: true
          title: archived
          type: boolean
        author:
          $ref: '#/components/schemas/User'
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        currentConcurrency:
          title: currentConcurrency
          type: integer
        error:
          readOnly: true
          title: error
          type: string
        finishedAt:
          format: date-time
          readOnly: true
          title: finishedAt
          type: string
        firstUrl:
          readOnly: true
          title: firstUrl
          type: string
        id:
          readOnly: true
          title: id
          type: string
        marking:
          items:
            type: string
          title: marking
          type: array
        stats:
          items:
            type: string
          title: stats
          type: array
        trigger:
          readOnly: true
          title: trigger
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          title: updatedAt
          type: string
      title: Crawl
      type: object
    Crawl-Read:
      description: ""
      example:
        archived: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        stats:
        - stats
        - stats
        author:
          name: name
        firstUrl: firstUrl
        id: id
        trigger: trigger
        error: error
        finishedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        archived:
          readOnly: true
          title: archived
          type: boolean
        author:
          $ref: '#/components/schemas/User-Read'
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        error:
          readOnly: true
          title: error
          type: string
        finishedAt:
          format: date-time
          readOnly: true
          title: finishedAt
          type: string
        firstUrl:
          readOnly: true
          title: firstUrl
          type: string
        id:
          readOnly: true
          title: id
          type: string
        stats:
          items:
            type: string
          title: stats
          type: array
        trigger:
          readOnly: true
          title: trigger
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          title: updatedAt
          type: string
      title: Crawl-Read
      type: object
    Crawl-ReadDetails:
      description: ""
      example:
        archived: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        stats:
        - stats
        - stats
        author:
          name: name
        firstUrl: firstUrl
        id: id
        trigger: trigger
        error: error
        finishedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        archived:
          readOnly: true
          title: archived
          type: boolean
        author:
          $ref: '#/components/schemas/User-ReadDetails'
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        error:
          readOnly: true
          title: error
          type: string
        finishedAt:
          format: date-time
          readOnly: true
          title: finishedAt
          type: string
        firstUrl:
          readOnly: true
          title: firstUrl
          type: string
        id:
          readOnly: true
          title: id
          type: string
        stats:
          items:
            type: string
          title: stats
          type: array
        trigger:
          readOnly: true
          title: trigger
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          title: updatedAt
          type: string
      title: Crawl-ReadDetails
      type: object
    Crawl-Write:
      description: ""
      properties:
        concurrency:
          title: concurrency
          type: integer
        firstUrl:
          title: firstUrl
          type: object
        headers:
          items:
            type: string
          title: headers
          type: array
        httpBasicPassword:
          title: httpBasicPassword
          type: object
        httpBasicUser:
          title: httpBasicUser
          type: object
        maxDepth:
          title: maxDepth
          type: integer
        maxDuration:
          title: maxDuration
          type: integer
        maxUrls:
          title: maxUrls
          type: integer
        otherDomains:
          items:
            type: string
          title: otherDomains
          type: array
        project:
          title: project
          type: string
        sslCheckingDisabled:
          title: sslCheckingDisabled
          type: boolean
        subdomainIncluded:
          title: subdomainIncluded
          type: boolean
        userAgent:
          title: userAgent
          type: object
      required:
      - concurrency
      - firstUrl
      - maxDepth
      - maxDuration
      - maxUrls
      - project
      - sslCheckingDisabled
      - subdomainIncluded
      title: Crawl-Write
      type: object
    CrawlUrl-Read:
      description: ""
      example:
        curlInfo: "{}"
        depth: "{}"
        redirectUrl: "{}"
        description: "{}"
        id: "{}"
        error: "{}"
        title: "{}"
        url: "{}"
        statusCode: "{}"
        urlsTo: urlsTo
      properties:
        curlInfo:
          title: curlInfo
          type: object
        depth:
          title: depth
          type: object
        description:
          title: description
          type: object
        error:
          title: error
          type: object
        id:
          title: id
          type: object
        redirectUrl:
          title: redirectUrl
          type: object
        statusCode:
          title: statusCode
          type: object
        title:
          title: title
          type: object
        url:
          title: url
          type: object
        urlsTo:
          title: urlsTo
          type: string
      title: CrawlUrl-Read
      type: object
    ExplainUrl:
      description: ""
      example:
        explain: "{}"
        project: project
        id: id
        url: url
      properties:
        explain:
          readOnly: true
          title: explain
          type: object
        id:
          readOnly: true
          title: id
          type: string
        project:
          title: project
          type: string
        url:
          title: url
          type: string
      required:
      - project
      - url
      title: ExplainUrl
      type: object
    ExplainUrl-Write:
      description: ""
      properties:
        project:
          title: project
          type: string
        url:
          title: url
          type: string
      required:
      - project
      - url
      title: ExplainUrl-Write
      type: object
    ForgotPasswordRequest:
      description: ""
      example:
        email: email
      properties:
        email:
          title: email
          type: string
      required:
      - email
      title: ForgotPasswordRequest
      type: object
    ImpactRuleChange-Read:
      description: ""
      example:
        impact: "{}"
      properties:
        impact:
          readOnly: true
          title: impact
          type: object
      title: ImpactRuleChange-Read
      type: object
    ImpactRuleChange-Write:
      description: ""
      properties:
        project:
          title: project
          type: string
        ruleChange:
          title: ruleChange
          type: string
      required:
      - project
      - ruleChange
      title: ImpactRuleChange-Write
      type: object
    ImpactSmartList-Read:
      description: ""
      example:
        impact: "{}"
        smartList: "{}"
      properties:
        impact:
          readOnly: true
          title: impact
          type: object
        smartList:
          readOnly: true
          title: smartList
          type: object
      title: ImpactSmartList-Read
      type: object
    ImpactSmartList-Write:
      description: ""
      properties:
        project:
          title: project
          type: string
        smartListId:
          title: smartListId
          type: string
        smartListVersion:
          title: smartListVersion
          type: string
      required:
      - project
      - smartListId
      title: ImpactSmartList-Write
      type: object
    Import-Read:
      description: ""
      example:
        statusAsText: "{}"
        importDuration: 6
        completedAt: 2000-01-23T04:56:07.000+00:00
        author: author
        project: project
        startedAt: 2000-01-23T04:56:07.000+00:00
        successCount: 1
        id: id
        message: message
        errorCount: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        author:
          readOnly: true
          title: author
          type: string
        completedAt:
          format: date-time
          readOnly: true
          title: completedAt
          type: string
        errorCount:
          readOnly: true
          title: errorCount
          type: integer
        id:
          readOnly: true
          title: id
          type: string
        importDuration:
          readOnly: true
          title: importDuration
          type: integer
        message:
          readOnly: true
          title: message
          type: string
        project:
          title: project
          type: string
        startedAt:
          format: date-time
          readOnly: true
          title: startedAt
          type: string
        statusAsText:
          readOnly: true
          title: statusAsText
          type: object
        successCount:
          readOnly: true
          title: successCount
          type: integer
        updatedAt:
          format: date-time
          readOnly: true
          title: updatedAt
          type: string
      required:
      - project
      title: Import-Read
      type: object
    Import-Write:
      description: ""
      properties:
        csvContent:
          title: csvContent
          type: object
        project:
          title: project
          type: string
      required:
      - csvContent
      - project
      title: Import-Write
      type: object
    Instance-Read:
      description: ""
      example:
        rulesCount: 6
        message: message
        logsLastFlushedAt: 2000-01-23T04:56:07.000+00:00
        gone: true
        agentDuration: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        rulesHash: rulesHash
        agentVersionStatus: agentVersionStatus
        lastCompletedAt: 2000-01-23T04:56:07.000+00:00
        stale: true
        misconfigured: true
        lastStartedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        agentVersion: agentVersion
        logging: true
        id: id
        config: config
        live: true
        status: 1
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        agentDuration:
          title: agentDuration
          type: integer
        agentVersion:
          title: agentVersion
          type: string
        agentVersionStatus:
          readOnly: true
          title: agentVersionStatus
          type: string
        config:
          title: config
          type: string
        createdAt:
          format: date-time
          title: createdAt
          type: string
        gone:
          readOnly: true
          title: gone
          type: boolean
        id:
          readOnly: true
          title: id
          type: string
        lastCompletedAt:
          format: date-time
          title: lastCompletedAt
          type: string
        lastStartedAt:
          format: date-time
          title: lastStartedAt
          type: string
        live:
          title: live
          type: boolean
        logging:
          title: logging
          type: boolean
        logsLastFlushedAt:
          format: date-time
          title: logsLastFlushedAt
          type: string
        message:
          title: message
          type: string
        misconfigured:
          title: misconfigured
          type: boolean
        name:
          title: name
          type: string
        rulesCount:
          title: rulesCount
          type: integer
        rulesHash:
          title: rulesHash
          type: string
        stale:
          readOnly: true
          title: stale
          type: boolean
        status:
          title: status
          type: integer
        updatedAt:
          format: date-time
          title: updatedAt
          type: string
      required:
      - name
      title: Instance-Read
      type: object
    Instance-Write:
      description: ""
      properties:
        agentDuration:
          title: agentDuration
          type: integer
        message:
          title: message
          type: string
        rulesCount:
          title: rulesCount
          type: integer
        rulesHash:
          title: rulesHash
          type: string
      title: Instance-Write
      type: object
    Invitation:
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        email: email
      properties:
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        email:
          title: email
          type: string
        id:
          readOnly: true
          title: id
          type: string
      title: Invitation
      type: object
    Invitation-Read:
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        email: email
      properties:
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        email:
          title: email
          type: string
        id:
          readOnly: true
          title: id
          type: string
      title: Invitation-Read
      type: object
    Invitation-Write:
      description: ""
      properties:
        email:
          title: email
          type: string
        target:
          title: target
          type: string
      required:
      - email
      - target
      title: Invitation-Write
      type: object
    Log-Read:
      description: ""
      example:
        method: "{}"
        instanceName: "{}"
        fromSmartList: true
        simplifiedUserAgent: "{}"
        userAgent: "{}"
        source: "{}"
        fixedByVersions:
        - fixedByVersions
        - fixedByVersions
        smartList: smartList
        target: "{}"
        createdAt: 2000-01-23T04:56:07.000+00:00
        proxy: proxy
        referrer: "{}"
        userAgentType: "{}"
        fixed: true
        id: "{}"
        ruleId: ruleId
        notFixedByVersions:
        - notFixedByVersions
        - notFixedByVersions
        statusCode: "{}"
      properties:
        createdAt:
          format: date-time
          title: createdAt
          type: string
        fixed:
          title: fixed
          type: boolean
        fixedByVersions:
          items:
            type: string
          title: fixedByVersions
          type: array
        fromSmartList:
          readOnly: true
          title: fromSmartList
          type: boolean
        id:
          title: id
          type: object
        instanceName:
          title: instanceName
          type: object
        method:
          title: method
          type: object
        notFixedByVersions:
          items:
            type: string
          title: notFixedByVersions
          type: array
        proxy:
          title: proxy
          type: string
        referrer:
          title: referrer
          type: object
        ruleId:
          title: ruleId
          type: string
        simplifiedUserAgent:
          title: simplifiedUserAgent
          type: object
        smartList:
          readOnly: true
          title: smartList
          type: string
        source:
          title: source
          type: object
        statusCode:
          title: statusCode
          type: object
        target:
          title: target
          type: object
        userAgent:
          title: userAgent
          type: object
        userAgentType:
          title: userAgentType
          type: object
      title: Log-Read
      type: object
    Marker:
      description: ""
      example:
        maximumOccurrence: 0
        minimumOccurrence: 6
        regex: regex
        transformers:
        - transformers
        - transformers
        name: name
        options:
        - options
        - options
        id: id
        type: type
      properties:
        id:
          title: id
          type: string
        maximumOccurrence:
          title: maximumOccurrence
          type: integer
        minimumOccurrence:
          title: minimumOccurrence
          type: integer
        name:
          title: name
          type: string
        options:
          items:
            type: string
          title: options
          type: array
        regex:
          title: regex
          type: string
        transformers:
          items:
            type: string
          title: transformers
          type: array
        type:
          title: type
          type: string
      required:
      - name
      - type
      title: Marker
      type: object
    Marker-Read:
      description: ""
      example:
        maximumOccurrence: 0
        minimumOccurrence: 6
        transformers:
        - transformers
        - transformers
        name: name
        options:
        - options
        - options
        type: type
      properties:
        maximumOccurrence:
          title: maximumOccurrence
          type: integer
        minimumOccurrence:
          title: minimumOccurrence
          type: integer
        name:
          title: name
          type: string
        options:
          items:
            type: string
          title: options
          type: array
        transformers:
          items:
            type: string
          title: transformers
          type: array
        type:
          title: type
          type: string
      required:
      - name
      - type
      title: Marker-Read
      type: object
    Marker-Write:
      description: ""
      properties:
        maximumOccurrence:
          title: maximumOccurrence
          type: integer
        minimumOccurrence:
          title: minimumOccurrence
          type: integer
        name:
          title: name
          type: string
        options:
          items:
            type: string
          title: options
          type: array
        transformers:
          items:
            type: string
          title: transformers
          type: array
        type:
          title: type
          type: string
      required:
      - name
      - type
      title: Marker-Write
      type: object
    MatchingUrl-Read:
      description: ""
      example:
        matching: "{}"
      properties:
        matching:
          readOnly: true
          title: matching
          type: object
      title: MatchingUrl-Read
      type: object
    MatchingUrl-Write:
      description: ""
      properties:
        project:
          title: project
          type: string
        ruleChange:
          title: ruleChange
          type: string
      title: MatchingUrl-Write
      type: object
    Notification-Read:
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        message: message
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        id:
          readOnly: true
          title: id
          type: string
        message:
          title: message
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          title: updatedAt
          type: string
      title: Notification-Read
      type: object
    Organization:
      description: ""
      example:
        userOrganizations:
        - organization: organization
          id: id
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        - organization: organization
          id: id
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        createdAt: 2000-01-23T04:56:07.000+00:00
        projects:
        - usersFlattened:
          - project: project
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          - project: project
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          isPublishing: true
          configuration:
          - configuration
          - configuration
          straightRulesCount: 5
          onboardingCompletedDemos:
          - onboardingCompletedDemos
          - onboardingCompletedDemos
          straightRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
          currentVersion:
            createdAt: 2000-01-23T04:56:07.000+00:00
            current: true
            mergedRulesCount: 6
            publishedAt: 2000-01-23T04:56:07.000+00:00
            name: name
            working: true
            id: id
            isSnapshot: true
          token: token
          workingVersion:
            createdAt: 2000-01-23T04:56:07.000+00:00
            current: true
            mergedRulesCount: 6
            publishedAt: 2000-01-23T04:56:07.000+00:00
            name: name
            working: true
            id: id
            isSnapshot: true
          complexRulesCount: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          rulesHash: rulesHash
          ignoreProjectTypes:
          - ignoreProjectTypes
          - ignoreProjectTypes
          userProjects:
          - project: project
            id: id
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          - project: project
            id: id
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          organization: null
          name: name
          id: id
          complexRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
          plan: 1
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - usersFlattened:
          - project: project
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          - project: project
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          isPublishing: true
          configuration:
          - configuration
          - configuration
          straightRulesCount: 5
          onboardingCompletedDemos:
          - onboardingCompletedDemos
          - onboardingCompletedDemos
          straightRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
          currentVersion:
            createdAt: 2000-01-23T04:56:07.000+00:00
            current: true
            mergedRulesCount: 6
            publishedAt: 2000-01-23T04:56:07.000+00:00
            name: name
            working: true
            id: id
            isSnapshot: true
          token: token
          workingVersion:
            createdAt: 2000-01-23T04:56:07.000+00:00
            current: true
            mergedRulesCount: 6
            publishedAt: 2000-01-23T04:56:07.000+00:00
            name: name
            working: true
            id: id
            isSnapshot: true
          complexRulesCount: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          rulesHash: rulesHash
          ignoreProjectTypes:
          - ignoreProjectTypes
          - ignoreProjectTypes
          userProjects:
          - project: project
            id: id
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          - project: project
            id: id
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          organization: null
          name: name
          id: id
          complexRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
          plan: 1
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        slug: slug
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        id:
          readOnly: true
          title: id
          type: string
        name:
          title: name
          type: string
        projects:
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
          title: projects
          type: array
        slug:
          readOnly: true
          title: slug
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          title: updatedAt
          type: string
        userOrganizations:
          items:
            $ref: '#/components/schemas/UserOrganization'
          readOnly: true
          title: userOrganizations
          type: array
      required:
      - name
      title: Organization
      type: object
    Organization-CreationWrite:
      description: ""
      title: organization
      type: object
    Organization-List:
      description: ""
      example:
        name: name
        slug: slug
      properties:
        name:
          title: name
          type: string
        slug:
          readOnly: true
          title: slug
          type: string
      required:
      - name
      title: Organization-List
      type: object
    Organization-Read:
      description: ""
      example:
        name: name
        id: id
        slug: slug
      properties:
        id:
          readOnly: true
          title: id
          type: string
        name:
          title: name
          type: string
        slug:
          readOnly: true
          title: slug
          type: string
      required:
      - name
      title: Organization-Read
      type: object
    Organization-Write:
      description: ""
      properties:
        name:
          title: name
          type: string
      required:
      - name
      title: Organization-Write
      type: object
    Project:
      description: ""
      example:
        usersFlattened:
        - project: project
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        - project: project
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        isPublishing: true
        configuration:
        - configuration
        - configuration
        straightRulesCount: 5
        onboardingCompletedDemos:
        - onboardingCompletedDemos
        - onboardingCompletedDemos
        straightRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
        currentVersion:
          createdAt: 2000-01-23T04:56:07.000+00:00
          current: true
          mergedRulesCount: 6
          publishedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          working: true
          id: id
          isSnapshot: true
        token: token
        workingVersion:
          createdAt: 2000-01-23T04:56:07.000+00:00
          current: true
          mergedRulesCount: 6
          publishedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          working: true
          id: id
          isSnapshot: true
        complexRulesCount: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        rulesHash: rulesHash
        ignoreProjectTypes:
        - ignoreProjectTypes
        - ignoreProjectTypes
        userProjects:
        - project: project
          id: id
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        - project: project
          id: id
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        organization: null
        name: name
        id: id
        complexRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
        plan: 1
        slug: slug
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        complexRulesCount:
          readOnly: true
          title: complexRulesCount
          type: integer
        complexRulesUpdatedAt:
          format: date-time
          readOnly: true
          title: complexRulesUpdatedAt
          type: string
        configuration:
          items:
            type: string
          readOnly: true
          title: configuration
          type: array
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        currentVersion:
          $ref: '#/components/schemas/RuleSetVersion'
        id:
          readOnly: true
          title: id
          type: string
        ignoreProjectTypes:
          items:
            type: string
          title: ignoreProjectTypes
          type: array
        isPublishing:
          readOnly: true
          title: isPublishing
          type: boolean
        name:
          title: name
          type: string
        onboardingCompletedDemos:
          items:
            type: string
          title: onboardingCompletedDemos
          type: array
        organization:
          $ref: '#/components/schemas/Organization'
        plan:
          readOnly: true
          title: plan
          type: integer
        rulesHash:
          readOnly: true
          title: rulesHash
          type: string
        slug:
          readOnly: true
          title: slug
          type: string
        straightRulesCount:
          readOnly: true
          title: straightRulesCount
          type: integer
        straightRulesUpdatedAt:
          format: date-time
          readOnly: true
          title: straightRulesUpdatedAt
          type: string
        token:
          readOnly: true
          title: token
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          title: updatedAt
          type: string
        userProjects:
          items:
            $ref: '#/components/schemas/UserProject'
          readOnly: true
          title: userProjects
          type: array
        usersFlattened:
          items:
            $ref: '#/components/schemas/UserProjectFlattened'
          readOnly: true
          title: usersFlattened
          type: array
        workingVersion:
          $ref: '#/components/schemas/RuleSetVersion'
      required:
      - name
      title: Project
      type: object
    Project-CreationWrite:
      description: ""
      properties:
        ignoreProjectTypes:
          items:
            type: string
          title: ignoreProjectTypes
          type: array
        name:
          title: name
          type: string
        onboardingCompletedDemos:
          items:
            type: string
          title: onboardingCompletedDemos
          type: array
        organization:
          description: ""
          title: organization
          type: object
      required:
      - name
      title: Project-CreationWrite
      type: object
    Project-List:
      description: ""
      example:
        organization:
          name: name
          slug: slug
        name: name
        id: id
        slug: slug
        token: token
      properties:
        id:
          readOnly: true
          title: id
          type: string
        name:
          title: name
          type: string
        organization:
          $ref: '#/components/schemas/Organization-List'
        slug:
          readOnly: true
          title: slug
          type: string
        token:
          readOnly: true
          title: token
          type: string
      required:
      - name
      title: Project-List
      type: object
    Project-Read:
      description: ""
      example:
        usersFlattened:
        - functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        - functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        isPublishing: true
        configuration:
        - configuration
        - configuration
        straightRulesCount: 5
        onboardingCompletedDemos:
        - onboardingCompletedDemos
        - onboardingCompletedDemos
        straightRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
        currentVersion:
          createdAt: 2000-01-23T04:56:07.000+00:00
          current: true
          mergedRulesCount: 6
          publishedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          working: true
          id: id
          isSnapshot: true
        token: token
        workingVersion:
          createdAt: 2000-01-23T04:56:07.000+00:00
          current: true
          mergedRulesCount: 6
          publishedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          working: true
          id: id
          isSnapshot: true
        complexRulesCount: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        rulesHash: rulesHash
        ignoreProjectTypes:
        - ignoreProjectTypes
        - ignoreProjectTypes
        userProjects:
        - id: id
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        - id: id
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        organization:
          name: name
          id: id
          slug: slug
        name: name
        id: id
        complexRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
        plan: 1
        slug: slug
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        complexRulesCount:
          readOnly: true
          title: complexRulesCount
          type: integer
        complexRulesUpdatedAt:
          format: date-time
          readOnly: true
          title: complexRulesUpdatedAt
          type: string
        configuration:
          items:
            type: string
          readOnly: true
          title: configuration
          type: array
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        currentVersion:
          $ref: '#/components/schemas/RuleSetVersion-Read'
        id:
          readOnly: true
          title: id
          type: string
        ignoreProjectTypes:
          items:
            type: string
          title: ignoreProjectTypes
          type: array
        isPublishing:
          readOnly: true
          title: isPublishing
          type: boolean
        name:
          title: name
          type: string
        onboardingCompletedDemos:
          items:
            type: string
          title: onboardingCompletedDemos
          type: array
        organization:
          $ref: '#/components/schemas/Organization-Read'
        plan:
          readOnly: true
          title: plan
          type: integer
        rulesHash:
          readOnly: true
          title: rulesHash
          type: string
        slug:
          readOnly: true
          title: slug
          type: string
        straightRulesCount:
          readOnly: true
          title: straightRulesCount
          type: integer
        straightRulesUpdatedAt:
          format: date-time
          readOnly: true
          title: straightRulesUpdatedAt
          type: string
        token:
          readOnly: true
          title: token
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          title: updatedAt
          type: string
        userProjects:
          items:
            $ref: '#/components/schemas/UserProject-Read'
          readOnly: true
          title: userProjects
          type: array
        usersFlattened:
          items:
            $ref: '#/components/schemas/UserProjectFlattened-Read'
          readOnly: true
          title: usersFlattened
          type: array
        workingVersion:
          $ref: '#/components/schemas/RuleSetVersion-Read'
      required:
      - name
      title: Project-Read
      type: object
    Project-Write:
      description: ""
      properties:
        ignoreProjectTypes:
          items:
            type: string
          title: ignoreProjectTypes
          type: array
        name:
          title: name
          type: string
        onboardingCompletedDemos:
          items:
            type: string
          title: onboardingCompletedDemos
          type: array
      required:
      - name
      title: Project-Write
      type: object
    PublishHistory-Read:
      description: ""
      example:
        summary: summary
        createdAt: 2000-01-23T04:56:07.000+00:00
        deleted: 6
        added: 0
        author:
          name: name
        id: id
        type: type
        updated: 1
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          current: true
          mergedRulesCount: 6
          publishedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          working: true
          id: id
          isSnapshot: true
      properties:
        added:
          title: added
          type: integer
        author:
          $ref: '#/components/schemas/User-Read'
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        deleted:
          title: deleted
          type: integer
        id:
          readOnly: true
          title: id
          type: string
        summary:
          title: summary
          type: string
        type:
          title: type
          type: string
        updated:
          title: updated
          type: integer
        version:
          $ref: '#/components/schemas/RuleSetVersion-Read'
      title: PublishHistory-Read
      type: object
    Rule-Read:
      description: ""
      example:
        matchOnResponseStatus: 5
        examples:
        - examples
        - examples
        changes:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          matchOnResponseStatus: 1
          examples:
          - examples
          - examples
          author:
            name: name
          formattedSource: formattedSource
          action: action
          rank: 5
          id: id
          source: source
          markers:
          - maximumOccurrence: 0
            minimumOccurrence: 6
            transformers:
            - transformers
            - transformers
            name: name
            options:
            - options
            - options
            type: type
          - maximumOccurrence: 0
            minimumOccurrence: 6
            transformers:
            - transformers
            - transformers
            name: name
            options:
            - options
            - options
            type: type
          ruleId: ruleId
          actions:
          - actions
          - actions
        - createdAt: 2000-01-23T04:56:07.000+00:00
          matchOnResponseStatus: 1
          examples:
          - examples
          - examples
          author:
            name: name
          formattedSource: formattedSource
          action: action
          rank: 5
          id: id
          source: source
          markers:
          - maximumOccurrence: 0
            minimumOccurrence: 6
            transformers:
            - transformers
            - transformers
            name: name
            options:
            - options
            - options
            type: type
          - maximumOccurrence: 0
            minimumOccurrence: 6
            transformers:
            - transformers
            - transformers
            name: name
            options:
            - options
            - options
            type: type
          ruleId: ruleId
          actions:
          - actions
          - actions
        formattedSource: formattedSource
        rank: 2
        id: id
        source: source
        viewCount: 7
        markers:
        - maximumOccurrence: 0
          minimumOccurrence: 6
          transformers:
          - transformers
          - transformers
          name: name
          options:
          - options
          - options
          type: type
        - maximumOccurrence: 0
          minimumOccurrence: 6
          transformers:
          - transformers
          - transformers
          name: name
          options:
          - options
          - options
          type: type
        actions:
        - actions
        - actions
        currentChange:
          createdAt: 2000-01-23T04:56:07.000+00:00
          matchOnResponseStatus: 1
          examples:
          - examples
          - examples
          author:
            name: name
          formattedSource: formattedSource
          action: action
          rank: 5
          id: id
          source: source
          markers:
          - maximumOccurrence: 0
            minimumOccurrence: 6
            transformers:
            - transformers
            - transformers
            name: name
            options:
            - options
            - options
            type: type
          - maximumOccurrence: 0
            minimumOccurrence: 6
            transformers:
            - transformers
            - transformers
            name: name
            options:
            - options
            - options
            type: type
          ruleId: ruleId
          actions:
          - actions
          - actions
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        actions:
          items:
            type: string
          title: actions
          type: array
        changes:
          items:
            $ref: '#/components/schemas/RuleChange-Read'
          title: changes
          type: array
        currentChange:
          $ref: '#/components/schemas/RuleChange-Read'
        examples:
          items:
            type: string
          title: examples
          type: array
        formattedSource:
          title: formattedSource
          type: string
        id:
          title: id
          type: string
        markers:
          items:
            $ref: '#/components/schemas/Marker-Read'
          title: markers
          type: array
        matchOnResponseStatus:
          title: matchOnResponseStatus
          type: integer
        rank:
          title: rank
          type: integer
        source:
          title: source
          type: string
        updatedAt:
          format: date-time
          title: updatedAt
          type: string
        viewCount:
          title: viewCount
          type: integer
      title: Rule-Read
      type: object
    RuleChange-Read:
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        matchOnResponseStatus: 1
        examples:
        - examples
        - examples
        author:
          name: name
        formattedSource: formattedSource
        action: action
        rank: 5
        id: id
        source: source
        markers:
        - maximumOccurrence: 0
          minimumOccurrence: 6
          transformers:
          - transformers
          - transformers
          name: name
          options:
          - options
          - options
          type: type
        - maximumOccurrence: 0
          minimumOccurrence: 6
          transformers:
          - transformers
          - transformers
          name: name
          options:
          - options
          - options
          type: type
        ruleId: ruleId
        actions:
        - actions
        - actions
      properties:
        action:
          title: action
          type: string
        actions:
          items:
            type: string
          title: actions
          type: array
        author:
          $ref: '#/components/schemas/User-Read'
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        examples:
          items:
            type: string
          title: examples
          type: array
        formattedSource:
          title: formattedSource
          type: string
        id:
          readOnly: true
          title: id
          type: string
        markers:
          items:
            $ref: '#/components/schemas/Marker-Read'
          title: markers
          type: array
        matchOnResponseStatus:
          title: matchOnResponseStatus
          type: integer
        rank:
          title: rank
          type: integer
        ruleId:
          title: ruleId
          type: string
        source:
          title: source
          type: string
      required:
      - action
      - rank
      - source
      title: RuleChange-Read
      type: object
    RuleChange-Write:
      description: ""
      properties:
        action:
          title: action
          type: string
        actions:
          items:
            type: string
          title: actions
          type: array
        examples:
          items:
            type: string
          title: examples
          type: array
        formattedSource:
          title: formattedSource
          type: string
        markers:
          items:
            $ref: '#/components/schemas/Marker-Write'
          title: markers
          type: array
        matchOnResponseStatus:
          title: matchOnResponseStatus
          type: integer
        rank:
          title: rank
          type: integer
        ruleId:
          title: ruleId
          type: string
        source:
          title: source
          type: string
      required:
      - action
      - rank
      - source
      title: RuleChange-Write
      type: object
    RuleSetVersion:
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        current: true
        mergedRulesCount: 6
        publishedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        working: true
        id: id
        isSnapshot: true
      properties:
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        current:
          readOnly: true
          title: current
          type: boolean
        id:
          readOnly: true
          title: id
          type: string
        isSnapshot:
          title: isSnapshot
          type: boolean
        mergedRulesCount:
          title: mergedRulesCount
          type: integer
        name:
          title: name
          type: string
        publishedAt:
          format: date-time
          title: publishedAt
          type: string
        working:
          readOnly: true
          title: working
          type: boolean
      title: RuleSetVersion
      type: object
    RuleSetVersion-Read:
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        current: true
        mergedRulesCount: 6
        publishedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        working: true
        id: id
        isSnapshot: true
      properties:
        createdAt:
          format: date-time
          readOnly: true
          title: createdAt
          type: string
        current:
          readOnly: true
          title: current
          type: boolean
        id:
          readOnly: true
          title: id
          type: string
        isSnapshot:
          title: isSnapshot
          type: boolean
        mergedRulesCount:
          title: mergedRulesCount
          type: integer
        name:
          title: name
          type: string
        publishedAt:
          format: date-time
          title: publishedAt
          type: string
        working:
          readOnly: true
          title: working
          type: boolean
      title: RuleSetVersion-Read
      type: object
    RuleStatistic:
      description: ""
      example:
        stats: stats
        id: id
      properties:
        id:
          title: id
          type: string
        stats:
          title: stats
          type: string
      title: RuleStatistic
      type: object
    SmartList:
      description: ""
      example:
        versions:
        - versions
        - versions
        name: name
        description: description
        rules: rules
        id: id
        defaultVersion: defaultVersion
      properties:
        defaultVersion:
          readOnly: true
          title: defaultVersion
          type: string
        description:
          readOnly: true
          title: description
          type: string
        id:
          readOnly: true
          title: id
          type: string
        name:
          readOnly: true
          title: name
          type: string
        rules:
          readOnly: true
          title: rules
          type: string
        versions:
          items:
            type: string
          readOnly: true
          title: versions
          type: array
      title: SmartList
      type: object
    User:
      description: ""
      example:
        userOrganizations:
        - organization: organization
          id: id
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        - organization: organization
          id: id
          functionalRoles:
          - functionalRoles
          - functionalRoles
          user: user
        plainPasswordRepeat: "{}"
        defaultOrganization:
          userOrganizations:
          - organization: organization
            id: id
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          - organization: organization
            id: id
            functionalRoles:
            - functionalRoles
            - functionalRoles
            user: user
          createdAt: 2000-01-23T04:56:07.000+00:00
          projects:
          - usersFlattened:
            - project: project
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            - project: project
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            isPublishing: true
            configuration:
            - configuration
            - configuration
            straightRulesCount: 5
            onboardingCompletedDemos:
            - onboardingCompletedDemos
            - onboardingCompletedDemos
            straightRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
            currentVersion:
              createdAt: 2000-01-23T04:56:07.000+00:00
              current: true
              mergedRulesCount: 6
              publishedAt: 2000-01-23T04:56:07.000+00:00
              name: name
              working: true
              id: id
              isSnapshot: true
            token: token
            workingVersion:
              createdAt: 2000-01-23T04:56:07.000+00:00
              current: true
              mergedRulesCount: 6
              publishedAt: 2000-01-23T04:56:07.000+00:00
              name: name
              working: true
              id: id
              isSnapshot: true
            complexRulesCount: 0
            createdAt: 2000-01-23T04:56:07.000+00:00
            rulesHash: rulesHash
            ignoreProjectTypes:
            - ignoreProjectTypes
            - ignoreProjectTypes
            userProjects:
            - project: project
              id: id
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            - project: project
              id: id
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            organization: null
            name: name
            id: id
            complexRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
            plan: 1
            slug: slug
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - usersFlattened:
            - project: project
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            - project: project
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            isPublishing: true
            configuration:
            - configuration
            - configuration
            straightRulesCount: 5
            onboardingCompletedDemos:
            - onboardingCompletedDemos
            - onboardingCompletedDemos
            straightRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
            currentVersion:
              createdAt: 2000-01-23T04:56:07.000+00:00
              current: true
              mergedRulesCount: 6
              publishedAt: 2000-01-23T04:56:07.000+00:00
              name: name
              working: true
              id: id
              isSnapshot: true
            token: token
            workingVersion:
              createdAt: 2000-01-23T04:56:07.000+00:00
              current: true
              mergedRulesCount: 6
              publishedAt: 2000-01-23T04:56:07.000+00:00
              name: name
              working: true
              id: id
              isSnapshot: true
            complexRulesCount: 0
            createdAt: 2000-01-23T04:56:07.000+00:00
            rulesHash: rulesHash
            ignoreProjectTypes:
            - ignoreProjectTypes
            - ignoreProjectTypes
            userProjects:
            - project: project
              id: id
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            - project: project
              id: id
              functionalRoles:
              - functionalRoles
              - functionalRoles
              user: user
            organization: null
            name: name
            id: id
            complexRulesUpdatedAt: 2000-01-23T04:56:07.000+00:00
            plan: 1
            slug: slug
            updatedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
        newEmailTokenExpiredAt: 2000-01-23T04:56:07.000+00:00
        currentPassword: "{}"
        password: password
        plainPassword: plainPassword
        userProjects:
        - userProjects
        - userProjects
        name: name
        newEmail: newEmail
        id: id
        newEmailToken: newEmailToken
        superAdmin: true
        email: email
        projectsFlattened:
        - projectsFlattened
        - projectsFlattened
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        currentPassword:
          title: currentPassword
          type: object
        defaultOrganization:
          $ref: '#/components/schemas/Organization'
        email:
          title: email
          type: string
        id:
          readOnly: true
          title: id
          type: string
        name:
          title: name
          type: string
        newEmail:
          title: newEmail
          type: string
        newEmailToken:
          title: newEmailToken
          type: string
        newEmailTokenExpiredAt:
          format: date-time
          title: newEmailTokenExpiredAt
          type: string
        password:
          title: password
          type: string
        plainPassword:
          title: plainPassword
          type: string
        plainPasswordRepeat:
          title: plainPasswordRepeat
          type: object
        projectsFlattened:
          items:
            type: string
          title: projectsFlattened
          type: array
        superAdmin:
          title: superAdmin
          type: boolean
        updatedAt:
          format: date-time
          title: updatedAt
          type: string
        userOrganizations:
          items:
            $ref: '#/components/schemas/UserOrganization'
          title: userOrganizations
          type: array
        userProjects:
          items:
            type: string
          title: userProjects
          type: array
      required:
      - email
      - name
      title: User
      type: object
    User-CreationWrite:
      description: ""
      properties:
        email:
          title: email
          type: string
        name:
          title: name
          type: string
      required:
      - email
      - name
      title: User-CreationWrite
      type: object
    User-EditInfo:
      description: ""
      properties:
        name:
          title: name
          type: string
      required:
      - name
      title: User-EditInfo
      type: object
    User-List:
      description: ""
      example:
        name: name
        id: id
        email: email
      properties:
        email:
          title: email
          type: string
        id:
          readOnly: true
          title: id
          type: string
        name:
          title: name
          type: string
      required:
      - email
      - name
      title: User-List
      type: object
    User-Password:
      description: ""
      properties:
        plainPassword:
          title: plainPassword
          type: string
        plainPasswordRepeat:
          title: plainPasswordRepeat
          type: object
      title: User-Password
      type: object
    User-Read:
      description: ""
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      required:
      - name
      title: User-Read
      type: object
    User-ReadDetails:
      description: ""
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      required:
      - name
      title: User-ReadDetails
      type: object
    UserOrganization:
      description: ""
      example:
        organization: organization
        id: id
        functionalRoles:
        - functionalRoles
        - functionalRoles
        user: user
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
        id:
          readOnly: true
          title: id
          type: string
        organization:
          readOnly: true
          title: organization
          type: string
        user:
          readOnly: true
          title: user
          type: string
      required:
      - functionalRoles
      title: UserOrganization
      type: object
    UserOrganization-CreationWrite:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
        organization:
          readOnly: true
          title: organization
          type: string
        user:
          readOnly: true
          title: user
          type: string
      required:
      - functionalRoles
      title: UserOrganization-CreationWrite
      type: object
    UserOrganization-Read:
      description: ""
      example:
        organization: organization
        id: id
        functionalRoles:
        - functionalRoles
        - functionalRoles
        user: user
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
        id:
          readOnly: true
          title: id
          type: string
        organization:
          readOnly: true
          title: organization
          type: string
        user:
          readOnly: true
          title: user
          type: string
      required:
      - functionalRoles
      title: UserOrganization-Read
      type: object
    UserOrganization-Write:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
      required:
      - functionalRoles
      title: UserOrganization-Write
      type: object
    UserProject:
      description: ""
      example:
        project: project
        id: id
        functionalRoles:
        - functionalRoles
        - functionalRoles
        user: user
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
        id:
          readOnly: true
          title: id
          type: string
        project:
          title: project
          type: string
        user:
          title: user
          type: string
      required:
      - functionalRoles
      - project
      - user
      title: UserProject
      type: object
    UserProject-CreationWrite:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
        project:
          title: project
          type: string
        user:
          title: user
          type: string
      required:
      - functionalRoles
      - project
      - user
      title: UserProject-CreationWrite
      type: object
    UserProject-Read:
      description: ""
      example:
        id: id
        functionalRoles:
        - functionalRoles
        - functionalRoles
        user: user
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
        id:
          readOnly: true
          title: id
          type: string
        user:
          title: user
          type: string
      required:
      - functionalRoles
      - user
      title: UserProject-Read
      type: object
    UserProject-Write:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
      required:
      - functionalRoles
      title: UserProject-Write
      type: object
    UserProjectFlattened:
      description: ""
      example:
        project: project
        functionalRoles:
        - functionalRoles
        - functionalRoles
        user: user
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
        project:
          title: project
          type: string
        user:
          title: user
          type: string
      title: UserProjectFlattened
      type: object
    UserProjectFlattened-Read:
      description: ""
      example:
        functionalRoles:
        - functionalRoles
        - functionalRoles
        user: user
      properties:
        functionalRoles:
          items:
            type: string
          title: functionalRoles
          type: array
        user:
          title: user
          type: string
      title: UserProjectFlattened-Read
      type: object
  securitySchemes:
    apiKey:
      description: Value for the Authorization header
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apiKey
x-original-swagger-version: "2.0"
