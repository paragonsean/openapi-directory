# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExplainUrl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explain: object=None, id: str=None, project: str=None, url: str=None):
        """ExplainUrl - a model defined in OpenAPI

        :param explain: The explain of this ExplainUrl.
        :param id: The id of this ExplainUrl.
        :param project: The project of this ExplainUrl.
        :param url: The url of this ExplainUrl.
        """
        self.openapi_types = {
            'explain': object,
            'id': str,
            'project': str,
            'url': str
        }

        self.attribute_map = {
            'explain': 'explain',
            'id': 'id',
            'project': 'project',
            'url': 'url'
        }

        self._explain = explain
        self._id = id
        self._project = project
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExplainUrl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExplainUrl of this ExplainUrl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explain(self):
        """Gets the explain of this ExplainUrl.


        :return: The explain of this ExplainUrl.
        :rtype: object
        """
        return self._explain

    @explain.setter
    def explain(self, explain):
        """Sets the explain of this ExplainUrl.


        :param explain: The explain of this ExplainUrl.
        :type explain: object
        """

        self._explain = explain

    @property
    def id(self):
        """Gets the id of this ExplainUrl.


        :return: The id of this ExplainUrl.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ExplainUrl.


        :param id: The id of this ExplainUrl.
        :type id: str
        """

        self._id = id

    @property
    def project(self):
        """Gets the project of this ExplainUrl.


        :return: The project of this ExplainUrl.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ExplainUrl.


        :param project: The project of this ExplainUrl.
        :type project: str
        """
        if project is None:
            raise ValueError("Invalid value for `project`, must not be `None`")

        self._project = project

    @property
    def url(self):
        """Gets the url of this ExplainUrl.


        :return: The url of this ExplainUrl.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ExplainUrl.


        :param url: The url of this ExplainUrl.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
