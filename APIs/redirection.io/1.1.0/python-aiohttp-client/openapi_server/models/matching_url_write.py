# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatchingUrlWrite(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project: str=None, rule_change: str=None):
        """MatchingUrlWrite - a model defined in OpenAPI

        :param project: The project of this MatchingUrlWrite.
        :param rule_change: The rule_change of this MatchingUrlWrite.
        """
        self.openapi_types = {
            'project': str,
            'rule_change': str
        }

        self.attribute_map = {
            'project': 'project',
            'rule_change': 'ruleChange'
        }

        self._project = project
        self._rule_change = rule_change

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchingUrlWrite':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchingUrl-Write of this MatchingUrlWrite.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project(self):
        """Gets the project of this MatchingUrlWrite.


        :return: The project of this MatchingUrlWrite.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this MatchingUrlWrite.


        :param project: The project of this MatchingUrlWrite.
        :type project: str
        """

        self._project = project

    @property
    def rule_change(self):
        """Gets the rule_change of this MatchingUrlWrite.


        :return: The rule_change of this MatchingUrlWrite.
        :rtype: str
        """
        return self._rule_change

    @rule_change.setter
    def rule_change(self, rule_change):
        """Sets the rule_change of this MatchingUrlWrite.


        :param rule_change: The rule_change of this MatchingUrlWrite.
        :type rule_change: str
        """

        self._rule_change = rule_change
