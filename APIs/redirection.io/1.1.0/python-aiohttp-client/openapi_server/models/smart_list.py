# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SmartList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_version: str=None, description: str=None, id: str=None, name: str=None, rules: str=None, versions: List[str]=None):
        """SmartList - a model defined in OpenAPI

        :param default_version: The default_version of this SmartList.
        :param description: The description of this SmartList.
        :param id: The id of this SmartList.
        :param name: The name of this SmartList.
        :param rules: The rules of this SmartList.
        :param versions: The versions of this SmartList.
        """
        self.openapi_types = {
            'default_version': str,
            'description': str,
            'id': str,
            'name': str,
            'rules': str,
            'versions': List[str]
        }

        self.attribute_map = {
            'default_version': 'defaultVersion',
            'description': 'description',
            'id': 'id',
            'name': 'name',
            'rules': 'rules',
            'versions': 'versions'
        }

        self._default_version = default_version
        self._description = description
        self._id = id
        self._name = name
        self._rules = rules
        self._versions = versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SmartList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SmartList of this SmartList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_version(self):
        """Gets the default_version of this SmartList.


        :return: The default_version of this SmartList.
        :rtype: str
        """
        return self._default_version

    @default_version.setter
    def default_version(self, default_version):
        """Sets the default_version of this SmartList.


        :param default_version: The default_version of this SmartList.
        :type default_version: str
        """

        self._default_version = default_version

    @property
    def description(self):
        """Gets the description of this SmartList.


        :return: The description of this SmartList.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SmartList.


        :param description: The description of this SmartList.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this SmartList.


        :return: The id of this SmartList.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SmartList.


        :param id: The id of this SmartList.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this SmartList.


        :return: The name of this SmartList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SmartList.


        :param name: The name of this SmartList.
        :type name: str
        """

        self._name = name

    @property
    def rules(self):
        """Gets the rules of this SmartList.


        :return: The rules of this SmartList.
        :rtype: str
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this SmartList.


        :param rules: The rules of this SmartList.
        :type rules: str
        """

        self._rules = rules

    @property
    def versions(self):
        """Gets the versions of this SmartList.


        :return: The versions of this SmartList.
        :rtype: List[str]
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this SmartList.


        :param versions: The versions of this SmartList.
        :type versions: List[str]
        """

        self._versions = versions
