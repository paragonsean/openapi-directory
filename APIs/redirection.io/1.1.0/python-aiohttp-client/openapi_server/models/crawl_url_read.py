# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CrawlUrlRead(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, curl_info: object=None, depth: object=None, description: object=None, error: object=None, id: object=None, redirect_url: object=None, status_code: object=None, title: object=None, url: object=None, urls_to: str=None):
        """CrawlUrlRead - a model defined in OpenAPI

        :param curl_info: The curl_info of this CrawlUrlRead.
        :param depth: The depth of this CrawlUrlRead.
        :param description: The description of this CrawlUrlRead.
        :param error: The error of this CrawlUrlRead.
        :param id: The id of this CrawlUrlRead.
        :param redirect_url: The redirect_url of this CrawlUrlRead.
        :param status_code: The status_code of this CrawlUrlRead.
        :param title: The title of this CrawlUrlRead.
        :param url: The url of this CrawlUrlRead.
        :param urls_to: The urls_to of this CrawlUrlRead.
        """
        self.openapi_types = {
            'curl_info': object,
            'depth': object,
            'description': object,
            'error': object,
            'id': object,
            'redirect_url': object,
            'status_code': object,
            'title': object,
            'url': object,
            'urls_to': str
        }

        self.attribute_map = {
            'curl_info': 'curlInfo',
            'depth': 'depth',
            'description': 'description',
            'error': 'error',
            'id': 'id',
            'redirect_url': 'redirectUrl',
            'status_code': 'statusCode',
            'title': 'title',
            'url': 'url',
            'urls_to': 'urlsTo'
        }

        self._curl_info = curl_info
        self._depth = depth
        self._description = description
        self._error = error
        self._id = id
        self._redirect_url = redirect_url
        self._status_code = status_code
        self._title = title
        self._url = url
        self._urls_to = urls_to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrawlUrlRead':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CrawlUrl-Read of this CrawlUrlRead.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def curl_info(self):
        """Gets the curl_info of this CrawlUrlRead.


        :return: The curl_info of this CrawlUrlRead.
        :rtype: object
        """
        return self._curl_info

    @curl_info.setter
    def curl_info(self, curl_info):
        """Sets the curl_info of this CrawlUrlRead.


        :param curl_info: The curl_info of this CrawlUrlRead.
        :type curl_info: object
        """

        self._curl_info = curl_info

    @property
    def depth(self):
        """Gets the depth of this CrawlUrlRead.


        :return: The depth of this CrawlUrlRead.
        :rtype: object
        """
        return self._depth

    @depth.setter
    def depth(self, depth):
        """Sets the depth of this CrawlUrlRead.


        :param depth: The depth of this CrawlUrlRead.
        :type depth: object
        """

        self._depth = depth

    @property
    def description(self):
        """Gets the description of this CrawlUrlRead.


        :return: The description of this CrawlUrlRead.
        :rtype: object
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CrawlUrlRead.


        :param description: The description of this CrawlUrlRead.
        :type description: object
        """

        self._description = description

    @property
    def error(self):
        """Gets the error of this CrawlUrlRead.


        :return: The error of this CrawlUrlRead.
        :rtype: object
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this CrawlUrlRead.


        :param error: The error of this CrawlUrlRead.
        :type error: object
        """

        self._error = error

    @property
    def id(self):
        """Gets the id of this CrawlUrlRead.


        :return: The id of this CrawlUrlRead.
        :rtype: object
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CrawlUrlRead.


        :param id: The id of this CrawlUrlRead.
        :type id: object
        """

        self._id = id

    @property
    def redirect_url(self):
        """Gets the redirect_url of this CrawlUrlRead.


        :return: The redirect_url of this CrawlUrlRead.
        :rtype: object
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this CrawlUrlRead.


        :param redirect_url: The redirect_url of this CrawlUrlRead.
        :type redirect_url: object
        """

        self._redirect_url = redirect_url

    @property
    def status_code(self):
        """Gets the status_code of this CrawlUrlRead.


        :return: The status_code of this CrawlUrlRead.
        :rtype: object
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CrawlUrlRead.


        :param status_code: The status_code of this CrawlUrlRead.
        :type status_code: object
        """

        self._status_code = status_code

    @property
    def title(self):
        """Gets the title of this CrawlUrlRead.


        :return: The title of this CrawlUrlRead.
        :rtype: object
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CrawlUrlRead.


        :param title: The title of this CrawlUrlRead.
        :type title: object
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this CrawlUrlRead.


        :return: The url of this CrawlUrlRead.
        :rtype: object
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CrawlUrlRead.


        :param url: The url of this CrawlUrlRead.
        :type url: object
        """

        self._url = url

    @property
    def urls_to(self):
        """Gets the urls_to of this CrawlUrlRead.


        :return: The urls_to of this CrawlUrlRead.
        :rtype: str
        """
        return self._urls_to

    @urls_to.setter
    def urls_to(self, urls_to):
        """Sets the urls_to of this CrawlUrlRead.


        :param urls_to: The urls_to of this CrawlUrlRead.
        :type urls_to: str
        """

        self._urls_to = urls_to
