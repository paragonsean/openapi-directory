# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvitationRead(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, email: str=None, id: str=None):
        """InvitationRead - a model defined in OpenAPI

        :param created_at: The created_at of this InvitationRead.
        :param email: The email of this InvitationRead.
        :param id: The id of this InvitationRead.
        """
        self.openapi_types = {
            'created_at': datetime,
            'email': str,
            'id': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'email': 'email',
            'id': 'id'
        }

        self._created_at = created_at
        self._email = email
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvitationRead':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Invitation-Read of this InvitationRead.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this InvitationRead.


        :return: The created_at of this InvitationRead.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InvitationRead.


        :param created_at: The created_at of this InvitationRead.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def email(self):
        """Gets the email of this InvitationRead.


        :return: The email of this InvitationRead.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this InvitationRead.


        :param email: The email of this InvitationRead.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this InvitationRead.


        :return: The id of this InvitationRead.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InvitationRead.


        :param id: The id of this InvitationRead.
        :type id: str
        """

        self._id = id
