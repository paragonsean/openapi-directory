# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceWrite(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_duration: int=None, message: str=None, rules_count: int=None, rules_hash: str=None):
        """InstanceWrite - a model defined in OpenAPI

        :param agent_duration: The agent_duration of this InstanceWrite.
        :param message: The message of this InstanceWrite.
        :param rules_count: The rules_count of this InstanceWrite.
        :param rules_hash: The rules_hash of this InstanceWrite.
        """
        self.openapi_types = {
            'agent_duration': int,
            'message': str,
            'rules_count': int,
            'rules_hash': str
        }

        self.attribute_map = {
            'agent_duration': 'agentDuration',
            'message': 'message',
            'rules_count': 'rulesCount',
            'rules_hash': 'rulesHash'
        }

        self._agent_duration = agent_duration
        self._message = message
        self._rules_count = rules_count
        self._rules_hash = rules_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceWrite':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Instance-Write of this InstanceWrite.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_duration(self):
        """Gets the agent_duration of this InstanceWrite.


        :return: The agent_duration of this InstanceWrite.
        :rtype: int
        """
        return self._agent_duration

    @agent_duration.setter
    def agent_duration(self, agent_duration):
        """Sets the agent_duration of this InstanceWrite.


        :param agent_duration: The agent_duration of this InstanceWrite.
        :type agent_duration: int
        """

        self._agent_duration = agent_duration

    @property
    def message(self):
        """Gets the message of this InstanceWrite.


        :return: The message of this InstanceWrite.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InstanceWrite.


        :param message: The message of this InstanceWrite.
        :type message: str
        """

        self._message = message

    @property
    def rules_count(self):
        """Gets the rules_count of this InstanceWrite.


        :return: The rules_count of this InstanceWrite.
        :rtype: int
        """
        return self._rules_count

    @rules_count.setter
    def rules_count(self, rules_count):
        """Sets the rules_count of this InstanceWrite.


        :param rules_count: The rules_count of this InstanceWrite.
        :type rules_count: int
        """

        self._rules_count = rules_count

    @property
    def rules_hash(self):
        """Gets the rules_hash of this InstanceWrite.


        :return: The rules_hash of this InstanceWrite.
        :rtype: str
        """
        return self._rules_hash

    @rules_hash.setter
    def rules_hash(self, rules_hash):
        """Sets the rules_hash of this InstanceWrite.


        :param rules_hash: The rules_hash of this InstanceWrite.
        :type rules_hash: str
        """

        self._rules_hash = rules_hash
