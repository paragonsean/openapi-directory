# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceRead(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_duration: int=None, agent_version: str=None, agent_version_status: str=None, config: str=None, created_at: datetime=None, gone: bool=None, id: str=None, last_completed_at: datetime=None, last_started_at: datetime=None, live: bool=None, logging: bool=None, logs_last_flushed_at: datetime=None, message: str=None, misconfigured: bool=None, name: str=None, rules_count: int=None, rules_hash: str=None, stale: bool=None, status: int=None, updated_at: datetime=None):
        """InstanceRead - a model defined in OpenAPI

        :param agent_duration: The agent_duration of this InstanceRead.
        :param agent_version: The agent_version of this InstanceRead.
        :param agent_version_status: The agent_version_status of this InstanceRead.
        :param config: The config of this InstanceRead.
        :param created_at: The created_at of this InstanceRead.
        :param gone: The gone of this InstanceRead.
        :param id: The id of this InstanceRead.
        :param last_completed_at: The last_completed_at of this InstanceRead.
        :param last_started_at: The last_started_at of this InstanceRead.
        :param live: The live of this InstanceRead.
        :param logging: The logging of this InstanceRead.
        :param logs_last_flushed_at: The logs_last_flushed_at of this InstanceRead.
        :param message: The message of this InstanceRead.
        :param misconfigured: The misconfigured of this InstanceRead.
        :param name: The name of this InstanceRead.
        :param rules_count: The rules_count of this InstanceRead.
        :param rules_hash: The rules_hash of this InstanceRead.
        :param stale: The stale of this InstanceRead.
        :param status: The status of this InstanceRead.
        :param updated_at: The updated_at of this InstanceRead.
        """
        self.openapi_types = {
            'agent_duration': int,
            'agent_version': str,
            'agent_version_status': str,
            'config': str,
            'created_at': datetime,
            'gone': bool,
            'id': str,
            'last_completed_at': datetime,
            'last_started_at': datetime,
            'live': bool,
            'logging': bool,
            'logs_last_flushed_at': datetime,
            'message': str,
            'misconfigured': bool,
            'name': str,
            'rules_count': int,
            'rules_hash': str,
            'stale': bool,
            'status': int,
            'updated_at': datetime
        }

        self.attribute_map = {
            'agent_duration': 'agentDuration',
            'agent_version': 'agentVersion',
            'agent_version_status': 'agentVersionStatus',
            'config': 'config',
            'created_at': 'createdAt',
            'gone': 'gone',
            'id': 'id',
            'last_completed_at': 'lastCompletedAt',
            'last_started_at': 'lastStartedAt',
            'live': 'live',
            'logging': 'logging',
            'logs_last_flushed_at': 'logsLastFlushedAt',
            'message': 'message',
            'misconfigured': 'misconfigured',
            'name': 'name',
            'rules_count': 'rulesCount',
            'rules_hash': 'rulesHash',
            'stale': 'stale',
            'status': 'status',
            'updated_at': 'updatedAt'
        }

        self._agent_duration = agent_duration
        self._agent_version = agent_version
        self._agent_version_status = agent_version_status
        self._config = config
        self._created_at = created_at
        self._gone = gone
        self._id = id
        self._last_completed_at = last_completed_at
        self._last_started_at = last_started_at
        self._live = live
        self._logging = logging
        self._logs_last_flushed_at = logs_last_flushed_at
        self._message = message
        self._misconfigured = misconfigured
        self._name = name
        self._rules_count = rules_count
        self._rules_hash = rules_hash
        self._stale = stale
        self._status = status
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceRead':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Instance-Read of this InstanceRead.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_duration(self):
        """Gets the agent_duration of this InstanceRead.


        :return: The agent_duration of this InstanceRead.
        :rtype: int
        """
        return self._agent_duration

    @agent_duration.setter
    def agent_duration(self, agent_duration):
        """Sets the agent_duration of this InstanceRead.


        :param agent_duration: The agent_duration of this InstanceRead.
        :type agent_duration: int
        """

        self._agent_duration = agent_duration

    @property
    def agent_version(self):
        """Gets the agent_version of this InstanceRead.


        :return: The agent_version of this InstanceRead.
        :rtype: str
        """
        return self._agent_version

    @agent_version.setter
    def agent_version(self, agent_version):
        """Sets the agent_version of this InstanceRead.


        :param agent_version: The agent_version of this InstanceRead.
        :type agent_version: str
        """

        self._agent_version = agent_version

    @property
    def agent_version_status(self):
        """Gets the agent_version_status of this InstanceRead.


        :return: The agent_version_status of this InstanceRead.
        :rtype: str
        """
        return self._agent_version_status

    @agent_version_status.setter
    def agent_version_status(self, agent_version_status):
        """Sets the agent_version_status of this InstanceRead.


        :param agent_version_status: The agent_version_status of this InstanceRead.
        :type agent_version_status: str
        """

        self._agent_version_status = agent_version_status

    @property
    def config(self):
        """Gets the config of this InstanceRead.


        :return: The config of this InstanceRead.
        :rtype: str
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this InstanceRead.


        :param config: The config of this InstanceRead.
        :type config: str
        """

        self._config = config

    @property
    def created_at(self):
        """Gets the created_at of this InstanceRead.


        :return: The created_at of this InstanceRead.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InstanceRead.


        :param created_at: The created_at of this InstanceRead.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def gone(self):
        """Gets the gone of this InstanceRead.


        :return: The gone of this InstanceRead.
        :rtype: bool
        """
        return self._gone

    @gone.setter
    def gone(self, gone):
        """Sets the gone of this InstanceRead.


        :param gone: The gone of this InstanceRead.
        :type gone: bool
        """

        self._gone = gone

    @property
    def id(self):
        """Gets the id of this InstanceRead.


        :return: The id of this InstanceRead.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InstanceRead.


        :param id: The id of this InstanceRead.
        :type id: str
        """

        self._id = id

    @property
    def last_completed_at(self):
        """Gets the last_completed_at of this InstanceRead.


        :return: The last_completed_at of this InstanceRead.
        :rtype: datetime
        """
        return self._last_completed_at

    @last_completed_at.setter
    def last_completed_at(self, last_completed_at):
        """Sets the last_completed_at of this InstanceRead.


        :param last_completed_at: The last_completed_at of this InstanceRead.
        :type last_completed_at: datetime
        """

        self._last_completed_at = last_completed_at

    @property
    def last_started_at(self):
        """Gets the last_started_at of this InstanceRead.


        :return: The last_started_at of this InstanceRead.
        :rtype: datetime
        """
        return self._last_started_at

    @last_started_at.setter
    def last_started_at(self, last_started_at):
        """Sets the last_started_at of this InstanceRead.


        :param last_started_at: The last_started_at of this InstanceRead.
        :type last_started_at: datetime
        """

        self._last_started_at = last_started_at

    @property
    def live(self):
        """Gets the live of this InstanceRead.


        :return: The live of this InstanceRead.
        :rtype: bool
        """
        return self._live

    @live.setter
    def live(self, live):
        """Sets the live of this InstanceRead.


        :param live: The live of this InstanceRead.
        :type live: bool
        """

        self._live = live

    @property
    def logging(self):
        """Gets the logging of this InstanceRead.


        :return: The logging of this InstanceRead.
        :rtype: bool
        """
        return self._logging

    @logging.setter
    def logging(self, logging):
        """Sets the logging of this InstanceRead.


        :param logging: The logging of this InstanceRead.
        :type logging: bool
        """

        self._logging = logging

    @property
    def logs_last_flushed_at(self):
        """Gets the logs_last_flushed_at of this InstanceRead.


        :return: The logs_last_flushed_at of this InstanceRead.
        :rtype: datetime
        """
        return self._logs_last_flushed_at

    @logs_last_flushed_at.setter
    def logs_last_flushed_at(self, logs_last_flushed_at):
        """Sets the logs_last_flushed_at of this InstanceRead.


        :param logs_last_flushed_at: The logs_last_flushed_at of this InstanceRead.
        :type logs_last_flushed_at: datetime
        """

        self._logs_last_flushed_at = logs_last_flushed_at

    @property
    def message(self):
        """Gets the message of this InstanceRead.


        :return: The message of this InstanceRead.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InstanceRead.


        :param message: The message of this InstanceRead.
        :type message: str
        """

        self._message = message

    @property
    def misconfigured(self):
        """Gets the misconfigured of this InstanceRead.


        :return: The misconfigured of this InstanceRead.
        :rtype: bool
        """
        return self._misconfigured

    @misconfigured.setter
    def misconfigured(self, misconfigured):
        """Sets the misconfigured of this InstanceRead.


        :param misconfigured: The misconfigured of this InstanceRead.
        :type misconfigured: bool
        """

        self._misconfigured = misconfigured

    @property
    def name(self):
        """Gets the name of this InstanceRead.


        :return: The name of this InstanceRead.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InstanceRead.


        :param name: The name of this InstanceRead.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def rules_count(self):
        """Gets the rules_count of this InstanceRead.


        :return: The rules_count of this InstanceRead.
        :rtype: int
        """
        return self._rules_count

    @rules_count.setter
    def rules_count(self, rules_count):
        """Sets the rules_count of this InstanceRead.


        :param rules_count: The rules_count of this InstanceRead.
        :type rules_count: int
        """

        self._rules_count = rules_count

    @property
    def rules_hash(self):
        """Gets the rules_hash of this InstanceRead.


        :return: The rules_hash of this InstanceRead.
        :rtype: str
        """
        return self._rules_hash

    @rules_hash.setter
    def rules_hash(self, rules_hash):
        """Sets the rules_hash of this InstanceRead.


        :param rules_hash: The rules_hash of this InstanceRead.
        :type rules_hash: str
        """

        self._rules_hash = rules_hash

    @property
    def stale(self):
        """Gets the stale of this InstanceRead.


        :return: The stale of this InstanceRead.
        :rtype: bool
        """
        return self._stale

    @stale.setter
    def stale(self, stale):
        """Sets the stale of this InstanceRead.


        :param stale: The stale of this InstanceRead.
        :type stale: bool
        """

        self._stale = stale

    @property
    def status(self):
        """Gets the status of this InstanceRead.


        :return: The status of this InstanceRead.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InstanceRead.


        :param status: The status of this InstanceRead.
        :type status: int
        """

        self._status = status

    @property
    def updated_at(self):
        """Gets the updated_at of this InstanceRead.


        :return: The updated_at of this InstanceRead.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InstanceRead.


        :param updated_at: The updated_at of this InstanceRead.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
