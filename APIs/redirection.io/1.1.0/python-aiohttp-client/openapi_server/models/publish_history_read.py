# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_set_version_read import RuleSetVersionRead
from openapi_server.models.user_read import UserRead
from openapi_server import util


class PublishHistoryRead(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added: int=None, author: UserRead=None, created_at: datetime=None, deleted: int=None, id: str=None, summary: str=None, type: str=None, updated: int=None, version: RuleSetVersionRead=None):
        """PublishHistoryRead - a model defined in OpenAPI

        :param added: The added of this PublishHistoryRead.
        :param author: The author of this PublishHistoryRead.
        :param created_at: The created_at of this PublishHistoryRead.
        :param deleted: The deleted of this PublishHistoryRead.
        :param id: The id of this PublishHistoryRead.
        :param summary: The summary of this PublishHistoryRead.
        :param type: The type of this PublishHistoryRead.
        :param updated: The updated of this PublishHistoryRead.
        :param version: The version of this PublishHistoryRead.
        """
        self.openapi_types = {
            'added': int,
            'author': UserRead,
            'created_at': datetime,
            'deleted': int,
            'id': str,
            'summary': str,
            'type': str,
            'updated': int,
            'version': RuleSetVersionRead
        }

        self.attribute_map = {
            'added': 'added',
            'author': 'author',
            'created_at': 'createdAt',
            'deleted': 'deleted',
            'id': 'id',
            'summary': 'summary',
            'type': 'type',
            'updated': 'updated',
            'version': 'version'
        }

        self._added = added
        self._author = author
        self._created_at = created_at
        self._deleted = deleted
        self._id = id
        self._summary = summary
        self._type = type
        self._updated = updated
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishHistoryRead':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishHistory-Read of this PublishHistoryRead.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added(self):
        """Gets the added of this PublishHistoryRead.


        :return: The added of this PublishHistoryRead.
        :rtype: int
        """
        return self._added

    @added.setter
    def added(self, added):
        """Sets the added of this PublishHistoryRead.


        :param added: The added of this PublishHistoryRead.
        :type added: int
        """

        self._added = added

    @property
    def author(self):
        """Gets the author of this PublishHistoryRead.


        :return: The author of this PublishHistoryRead.
        :rtype: UserRead
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this PublishHistoryRead.


        :param author: The author of this PublishHistoryRead.
        :type author: UserRead
        """

        self._author = author

    @property
    def created_at(self):
        """Gets the created_at of this PublishHistoryRead.


        :return: The created_at of this PublishHistoryRead.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PublishHistoryRead.


        :param created_at: The created_at of this PublishHistoryRead.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def deleted(self):
        """Gets the deleted of this PublishHistoryRead.


        :return: The deleted of this PublishHistoryRead.
        :rtype: int
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this PublishHistoryRead.


        :param deleted: The deleted of this PublishHistoryRead.
        :type deleted: int
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this PublishHistoryRead.


        :return: The id of this PublishHistoryRead.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PublishHistoryRead.


        :param id: The id of this PublishHistoryRead.
        :type id: str
        """

        self._id = id

    @property
    def summary(self):
        """Gets the summary of this PublishHistoryRead.


        :return: The summary of this PublishHistoryRead.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this PublishHistoryRead.


        :param summary: The summary of this PublishHistoryRead.
        :type summary: str
        """

        self._summary = summary

    @property
    def type(self):
        """Gets the type of this PublishHistoryRead.


        :return: The type of this PublishHistoryRead.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PublishHistoryRead.


        :param type: The type of this PublishHistoryRead.
        :type type: str
        """

        self._type = type

    @property
    def updated(self):
        """Gets the updated of this PublishHistoryRead.


        :return: The updated of this PublishHistoryRead.
        :rtype: int
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this PublishHistoryRead.


        :param updated: The updated of this PublishHistoryRead.
        :type updated: int
        """

        self._updated = updated

    @property
    def version(self):
        """Gets the version of this PublishHistoryRead.


        :return: The version of this PublishHistoryRead.
        :rtype: RuleSetVersionRead
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PublishHistoryRead.


        :param version: The version of this PublishHistoryRead.
        :type version: RuleSetVersionRead
        """

        self._version = version
