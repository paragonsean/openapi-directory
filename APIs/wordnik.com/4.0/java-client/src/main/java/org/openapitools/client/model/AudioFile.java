/*
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AudioFile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:56.537092-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AudioFile {
  public static final String SERIALIZED_NAME_ATTRIBUTION_TEXT = "attributionText";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_TEXT)
  private String attributionText;

  public static final String SERIALIZED_NAME_ATTRIBUTION_URL = "attributionUrl";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_URL)
  private String attributionUrl;

  public static final String SERIALIZED_NAME_AUDIO_TYPE = "audioType";
  @SerializedName(SERIALIZED_NAME_AUDIO_TYPE)
  private String audioType;

  public static final String SERIALIZED_NAME_COMMENT_COUNT = "commentCount";
  @SerializedName(SERIALIZED_NAME_COMMENT_COUNT)
  private Integer commentCount;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private LocalDate createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Double duration;

  public static final String SERIALIZED_NAME_FILE_URL = "fileUrl";
  @SerializedName(SERIALIZED_NAME_FILE_URL)
  private String fileUrl;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_VOTE_AVERAGE = "voteAverage";
  @SerializedName(SERIALIZED_NAME_VOTE_AVERAGE)
  private Float voteAverage;

  public static final String SERIALIZED_NAME_VOTE_COUNT = "voteCount";
  @SerializedName(SERIALIZED_NAME_VOTE_COUNT)
  private Integer voteCount;

  public static final String SERIALIZED_NAME_VOTE_WEIGHTED_AVERAGE = "voteWeightedAverage";
  @SerializedName(SERIALIZED_NAME_VOTE_WEIGHTED_AVERAGE)
  private Float voteWeightedAverage;

  public static final String SERIALIZED_NAME_WORD = "word";
  @SerializedName(SERIALIZED_NAME_WORD)
  private String word;

  public AudioFile() {
  }

  public AudioFile attributionText(String attributionText) {
    this.attributionText = attributionText;
    return this;
  }

  /**
   * Get attributionText
   * @return attributionText
   */
  @javax.annotation.Nullable
  public String getAttributionText() {
    return attributionText;
  }

  public void setAttributionText(String attributionText) {
    this.attributionText = attributionText;
  }


  public AudioFile attributionUrl(String attributionUrl) {
    this.attributionUrl = attributionUrl;
    return this;
  }

  /**
   * Get attributionUrl
   * @return attributionUrl
   */
  @javax.annotation.Nullable
  public String getAttributionUrl() {
    return attributionUrl;
  }

  public void setAttributionUrl(String attributionUrl) {
    this.attributionUrl = attributionUrl;
  }


  public AudioFile audioType(String audioType) {
    this.audioType = audioType;
    return this;
  }

  /**
   * Get audioType
   * @return audioType
   */
  @javax.annotation.Nullable
  public String getAudioType() {
    return audioType;
  }

  public void setAudioType(String audioType) {
    this.audioType = audioType;
  }


  public AudioFile commentCount(Integer commentCount) {
    this.commentCount = commentCount;
    return this;
  }

  /**
   * Get commentCount
   * @return commentCount
   */
  @javax.annotation.Nullable
  public Integer getCommentCount() {
    return commentCount;
  }

  public void setCommentCount(Integer commentCount) {
    this.commentCount = commentCount;
  }


  public AudioFile createdAt(LocalDate createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public LocalDate getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(LocalDate createdAt) {
    this.createdAt = createdAt;
  }


  public AudioFile createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public AudioFile description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AudioFile duration(Double duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public Double getDuration() {
    return duration;
  }

  public void setDuration(Double duration) {
    this.duration = duration;
  }


  public AudioFile fileUrl(String fileUrl) {
    this.fileUrl = fileUrl;
    return this;
  }

  /**
   * Get fileUrl
   * @return fileUrl
   */
  @javax.annotation.Nullable
  public String getFileUrl() {
    return fileUrl;
  }

  public void setFileUrl(String fileUrl) {
    this.fileUrl = fileUrl;
  }


  public AudioFile id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public AudioFile voteAverage(Float voteAverage) {
    this.voteAverage = voteAverage;
    return this;
  }

  /**
   * Get voteAverage
   * @return voteAverage
   */
  @javax.annotation.Nullable
  public Float getVoteAverage() {
    return voteAverage;
  }

  public void setVoteAverage(Float voteAverage) {
    this.voteAverage = voteAverage;
  }


  public AudioFile voteCount(Integer voteCount) {
    this.voteCount = voteCount;
    return this;
  }

  /**
   * Get voteCount
   * @return voteCount
   */
  @javax.annotation.Nullable
  public Integer getVoteCount() {
    return voteCount;
  }

  public void setVoteCount(Integer voteCount) {
    this.voteCount = voteCount;
  }


  public AudioFile voteWeightedAverage(Float voteWeightedAverage) {
    this.voteWeightedAverage = voteWeightedAverage;
    return this;
  }

  /**
   * Get voteWeightedAverage
   * @return voteWeightedAverage
   */
  @javax.annotation.Nullable
  public Float getVoteWeightedAverage() {
    return voteWeightedAverage;
  }

  public void setVoteWeightedAverage(Float voteWeightedAverage) {
    this.voteWeightedAverage = voteWeightedAverage;
  }


  public AudioFile word(String word) {
    this.word = word;
    return this;
  }

  /**
   * Get word
   * @return word
   */
  @javax.annotation.Nullable
  public String getWord() {
    return word;
  }

  public void setWord(String word) {
    this.word = word;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AudioFile audioFile = (AudioFile) o;
    return Objects.equals(this.attributionText, audioFile.attributionText) &&
        Objects.equals(this.attributionUrl, audioFile.attributionUrl) &&
        Objects.equals(this.audioType, audioFile.audioType) &&
        Objects.equals(this.commentCount, audioFile.commentCount) &&
        Objects.equals(this.createdAt, audioFile.createdAt) &&
        Objects.equals(this.createdBy, audioFile.createdBy) &&
        Objects.equals(this.description, audioFile.description) &&
        Objects.equals(this.duration, audioFile.duration) &&
        Objects.equals(this.fileUrl, audioFile.fileUrl) &&
        Objects.equals(this.id, audioFile.id) &&
        Objects.equals(this.voteAverage, audioFile.voteAverage) &&
        Objects.equals(this.voteCount, audioFile.voteCount) &&
        Objects.equals(this.voteWeightedAverage, audioFile.voteWeightedAverage) &&
        Objects.equals(this.word, audioFile.word);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributionText, attributionUrl, audioType, commentCount, createdAt, createdBy, description, duration, fileUrl, id, voteAverage, voteCount, voteWeightedAverage, word);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AudioFile {\n");
    sb.append("    attributionText: ").append(toIndentedString(attributionText)).append("\n");
    sb.append("    attributionUrl: ").append(toIndentedString(attributionUrl)).append("\n");
    sb.append("    audioType: ").append(toIndentedString(audioType)).append("\n");
    sb.append("    commentCount: ").append(toIndentedString(commentCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    fileUrl: ").append(toIndentedString(fileUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    voteAverage: ").append(toIndentedString(voteAverage)).append("\n");
    sb.append("    voteCount: ").append(toIndentedString(voteCount)).append("\n");
    sb.append("    voteWeightedAverage: ").append(toIndentedString(voteWeightedAverage)).append("\n");
    sb.append("    word: ").append(toIndentedString(word)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributionText");
    openapiFields.add("attributionUrl");
    openapiFields.add("audioType");
    openapiFields.add("commentCount");
    openapiFields.add("createdAt");
    openapiFields.add("createdBy");
    openapiFields.add("description");
    openapiFields.add("duration");
    openapiFields.add("fileUrl");
    openapiFields.add("id");
    openapiFields.add("voteAverage");
    openapiFields.add("voteCount");
    openapiFields.add("voteWeightedAverage");
    openapiFields.add("word");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AudioFile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AudioFile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AudioFile is not found in the empty JSON string", AudioFile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AudioFile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AudioFile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AudioFile.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attributionText") != null && !jsonObj.get("attributionText").isJsonNull()) && !jsonObj.get("attributionText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributionText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributionText").toString()));
      }
      if ((jsonObj.get("attributionUrl") != null && !jsonObj.get("attributionUrl").isJsonNull()) && !jsonObj.get("attributionUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributionUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributionUrl").toString()));
      }
      if ((jsonObj.get("audioType") != null && !jsonObj.get("audioType").isJsonNull()) && !jsonObj.get("audioType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audioType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audioType").toString()));
      }
      if ((jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) && !jsonObj.get("createdBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdBy").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("fileUrl") != null && !jsonObj.get("fileUrl").isJsonNull()) && !jsonObj.get("fileUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fileUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fileUrl").toString()));
      }
      if ((jsonObj.get("word") != null && !jsonObj.get("word").isJsonNull()) && !jsonObj.get("word").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `word` to be a primitive type in the JSON string but got `%s`", jsonObj.get("word").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AudioFile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AudioFile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AudioFile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AudioFile.class));

       return (TypeAdapter<T>) new TypeAdapter<AudioFile>() {
           @Override
           public void write(JsonWriter out, AudioFile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AudioFile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AudioFile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AudioFile
   * @throws IOException if the JSON string is invalid with respect to AudioFile
   */
  public static AudioFile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AudioFile.class);
  }

  /**
   * Convert an instance of AudioFile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

