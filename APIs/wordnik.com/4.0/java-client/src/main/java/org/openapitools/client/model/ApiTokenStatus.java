/*
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiTokenStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:56.537092-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiTokenStatus {
  public static final String SERIALIZED_NAME_EXPIRES_IN_MILLIS = "expiresInMillis";
  @SerializedName(SERIALIZED_NAME_EXPIRES_IN_MILLIS)
  private Long expiresInMillis;

  public static final String SERIALIZED_NAME_REMAINING_CALLS = "remainingCalls";
  @SerializedName(SERIALIZED_NAME_REMAINING_CALLS)
  private Long remainingCalls;

  public static final String SERIALIZED_NAME_RESETS_IN_MILLIS = "resetsInMillis";
  @SerializedName(SERIALIZED_NAME_RESETS_IN_MILLIS)
  private Long resetsInMillis;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_TOTAL_REQUESTS = "totalRequests";
  @SerializedName(SERIALIZED_NAME_TOTAL_REQUESTS)
  private Long totalRequests;

  public static final String SERIALIZED_NAME_VALID = "valid";
  @SerializedName(SERIALIZED_NAME_VALID)
  private Boolean valid;

  public ApiTokenStatus() {
  }

  public ApiTokenStatus expiresInMillis(Long expiresInMillis) {
    this.expiresInMillis = expiresInMillis;
    return this;
  }

  /**
   * Get expiresInMillis
   * @return expiresInMillis
   */
  @javax.annotation.Nullable
  public Long getExpiresInMillis() {
    return expiresInMillis;
  }

  public void setExpiresInMillis(Long expiresInMillis) {
    this.expiresInMillis = expiresInMillis;
  }


  public ApiTokenStatus remainingCalls(Long remainingCalls) {
    this.remainingCalls = remainingCalls;
    return this;
  }

  /**
   * Get remainingCalls
   * @return remainingCalls
   */
  @javax.annotation.Nullable
  public Long getRemainingCalls() {
    return remainingCalls;
  }

  public void setRemainingCalls(Long remainingCalls) {
    this.remainingCalls = remainingCalls;
  }


  public ApiTokenStatus resetsInMillis(Long resetsInMillis) {
    this.resetsInMillis = resetsInMillis;
    return this;
  }

  /**
   * Get resetsInMillis
   * @return resetsInMillis
   */
  @javax.annotation.Nullable
  public Long getResetsInMillis() {
    return resetsInMillis;
  }

  public void setResetsInMillis(Long resetsInMillis) {
    this.resetsInMillis = resetsInMillis;
  }


  public ApiTokenStatus token(String token) {
    this.token = token;
    return this;
  }

  /**
   * Get token
   * @return token
   */
  @javax.annotation.Nullable
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }


  public ApiTokenStatus totalRequests(Long totalRequests) {
    this.totalRequests = totalRequests;
    return this;
  }

  /**
   * Get totalRequests
   * @return totalRequests
   */
  @javax.annotation.Nullable
  public Long getTotalRequests() {
    return totalRequests;
  }

  public void setTotalRequests(Long totalRequests) {
    this.totalRequests = totalRequests;
  }


  public ApiTokenStatus valid(Boolean valid) {
    this.valid = valid;
    return this;
  }

  /**
   * Get valid
   * @return valid
   */
  @javax.annotation.Nullable
  public Boolean getValid() {
    return valid;
  }

  public void setValid(Boolean valid) {
    this.valid = valid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiTokenStatus apiTokenStatus = (ApiTokenStatus) o;
    return Objects.equals(this.expiresInMillis, apiTokenStatus.expiresInMillis) &&
        Objects.equals(this.remainingCalls, apiTokenStatus.remainingCalls) &&
        Objects.equals(this.resetsInMillis, apiTokenStatus.resetsInMillis) &&
        Objects.equals(this.token, apiTokenStatus.token) &&
        Objects.equals(this.totalRequests, apiTokenStatus.totalRequests) &&
        Objects.equals(this.valid, apiTokenStatus.valid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiresInMillis, remainingCalls, resetsInMillis, token, totalRequests, valid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiTokenStatus {\n");
    sb.append("    expiresInMillis: ").append(toIndentedString(expiresInMillis)).append("\n");
    sb.append("    remainingCalls: ").append(toIndentedString(remainingCalls)).append("\n");
    sb.append("    resetsInMillis: ").append(toIndentedString(resetsInMillis)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    totalRequests: ").append(toIndentedString(totalRequests)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("expiresInMillis");
    openapiFields.add("remainingCalls");
    openapiFields.add("resetsInMillis");
    openapiFields.add("token");
    openapiFields.add("totalRequests");
    openapiFields.add("valid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiTokenStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiTokenStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiTokenStatus is not found in the empty JSON string", ApiTokenStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiTokenStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiTokenStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("token") != null && !jsonObj.get("token").isJsonNull()) && !jsonObj.get("token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiTokenStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiTokenStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiTokenStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiTokenStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiTokenStatus>() {
           @Override
           public void write(JsonWriter out, ApiTokenStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiTokenStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiTokenStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiTokenStatus
   * @throws IOException if the JSON string is invalid with respect to ApiTokenStatus
   */
  public static ApiTokenStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiTokenStatus.class);
  }

  /**
   * Convert an instance of ApiTokenStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

