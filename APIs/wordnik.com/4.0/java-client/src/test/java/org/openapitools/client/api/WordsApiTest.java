/*
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefinitionSearchResults;
import org.openapitools.client.model.WordObject;
import org.openapitools.client.model.WordOfTheDay;
import org.openapitools.client.model.WordSearchResults;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WordsApi
 */
@Disabled
public class WordsApiTest {

    private final WordsApi api = new WordsApi();

    /**
     * Returns a single random WordObject
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRandomWordTest() throws ApiException {
        String hasDictionaryDef = null;
        String includePartOfSpeech = null;
        String excludePartOfSpeech = null;
        Integer minCorpusCount = null;
        Integer maxCorpusCount = null;
        Integer minDictionaryCount = null;
        Integer maxDictionaryCount = null;
        Integer minLength = null;
        Integer maxLength = null;
        WordObject response = api.getRandomWord(hasDictionaryDef, includePartOfSpeech, excludePartOfSpeech, minCorpusCount, maxCorpusCount, minDictionaryCount, maxDictionaryCount, minLength, maxLength);
        // TODO: test validations
    }

    /**
     * Returns an array of random WordObjects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRandomWordsTest() throws ApiException {
        String hasDictionaryDef = null;
        String includePartOfSpeech = null;
        String excludePartOfSpeech = null;
        Integer minCorpusCount = null;
        Integer maxCorpusCount = null;
        Integer minDictionaryCount = null;
        Integer maxDictionaryCount = null;
        Integer minLength = null;
        Integer maxLength = null;
        String sortBy = null;
        String sortOrder = null;
        Integer limit = null;
        List<WordObject> response = api.getRandomWords(hasDictionaryDef, includePartOfSpeech, excludePartOfSpeech, minCorpusCount, maxCorpusCount, minDictionaryCount, maxDictionaryCount, minLength, maxLength, sortBy, sortOrder, limit);
        // TODO: test validations
    }

    /**
     * Returns a specific WordOfTheDay
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWordOfTheDayTest() throws ApiException {
        String date = null;
        WordOfTheDay response = api.getWordOfTheDay(date);
        // TODO: test validations
    }

    /**
     * Reverse dictionary search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reverseDictionaryTest() throws ApiException {
        String query = null;
        String findSenseForWord = null;
        String includeSourceDictionaries = null;
        String excludeSourceDictionaries = null;
        String includePartOfSpeech = null;
        String excludePartOfSpeech = null;
        Integer minCorpusCount = null;
        Integer maxCorpusCount = null;
        Integer minLength = null;
        Integer maxLength = null;
        String expandTerms = null;
        String includeTags = null;
        String sortBy = null;
        String sortOrder = null;
        String skip = null;
        Integer limit = null;
        DefinitionSearchResults response = api.reverseDictionary(query, findSenseForWord, includeSourceDictionaries, excludeSourceDictionaries, includePartOfSpeech, excludePartOfSpeech, minCorpusCount, maxCorpusCount, minLength, maxLength, expandTerms, includeTags, sortBy, sortOrder, skip, limit);
        // TODO: test validations
    }

    /**
     * Searches words
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchWordsTest() throws ApiException {
        String query = null;
        String allowRegex = null;
        String caseSensitive = null;
        String includePartOfSpeech = null;
        String excludePartOfSpeech = null;
        Integer minCorpusCount = null;
        Integer maxCorpusCount = null;
        Integer minDictionaryCount = null;
        Integer maxDictionaryCount = null;
        Integer minLength = null;
        Integer maxLength = null;
        Integer skip = null;
        Integer limit = null;
        WordSearchResults response = api.searchWords(query, allowRegex, caseSensitive, includePartOfSpeech, excludePartOfSpeech, minCorpusCount, maxCorpusCount, minDictionaryCount, maxDictionaryCount, minLength, maxLength, skip, limit);
        // TODO: test validations
    }

}
