openapi: 3.0.0
info:
  description: "Wordnik is the worlds biggest online English dictionary, by number\
    \ of words"
  title: Wordnik
  version: "4.0"
  x-apisguru-categories:
  - text
  x-logo:
    url: https://wordnik.com/img/logo-wordnik-home.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 2.6.2
    format: openapi
    url: https://developer.wordnik.com/api-docs/swagger.json
    version: "3.0"
  x-providerName: wordnik.com
externalDocs:
  url: http://developer.wordnik.com/
servers:
- url: https://api.wordnik.com/v4
security:
- {}
tags:
- name: word
- name: words
paths:
  /word.json/{word}/audio:
    get:
      description: The metadata includes a time-expiring fileUrl which allows reading
        the audio file directly from the API.  Currently only audio pronunciations
        from the American Heritage Dictionary in mp3 format are supported.
      operationId: getAudio
      parameters:
      - description: Word to get audio for.
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: If true will try to return the correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AudioFile'
                type: array
          description: No response was specified
      summary: Fetches audio metadata for a word.
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/definitions:
    get:
      operationId: getDefinitions
      parameters:
      - description: Word to return definitions for
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          format: int32
          type: integer
        style: form
      - description: CSV list of part-of-speech types
        explode: true
        in: query
        name: partOfSpeech
        required: false
        schema:
          enum:
          - noun
          - adjective
          - verb
          - adverb
          - interjection
          - pronoun
          - preposition
          - abbreviation
          - affix
          - article
          - auxiliary-verb
          - conjunction
          - definite-article
          - family-name
          - given-name
          - idiom
          - imperative
          - noun-plural
          - noun-posessive
          - past-participle
          - phrasal-prefix
          - proper-noun
          - proper-noun-plural
          - proper-noun-posessive
          - suffix
          - verb-intransitive
          - verb-transitive
          type: string
        style: form
      - description: Return related words with definitions
        explode: true
        in: query
        name: includeRelated
        required: false
        schema:
          default: "false"
          type: string
        style: form
      - description: "Source dictionary to return definitions from.  If 'all' is received,\
          \ results are returned from all sources. If multiple values are received\
          \ (e.g. 'century,wiktionary'), results are returned from the first specified\
          \ dictionary that has definitions. If left blank, results are returned from\
          \ the first dictionary that has definitions. By default, dictionaries are\
          \ searched in this order: ahd-5, wiktionary, webster, century, wordnet"
        explode: false
        in: query
        name: sourceDictionaries
        required: false
        schema:
          enum:
          - all
          - ahd-5
          - century
          - wiktionary
          - webster
          - wordnet
          items:
            type: string
          type: array
        style: form
      - description: If true will try to return the correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: Return a closed set of XML tags in response
        explode: true
        in: query
        name: includeTags
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Definition'
                type: array
          description: No response was specified
      summary: Return definitions for a word
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/etymologies:
    get:
      operationId: getEtymologies
      parameters:
      - description: Word to return
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: If true will try to return the correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: No response was specified
      summary: Fetches etymology data
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/examples:
    get:
      operationId: getExamples
      parameters:
      - description: Word to return examples for
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: Show duplicate examples from different sources
        explode: true
        in: query
        name: includeDuplicates
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: If true will try to return the correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: Results to skip
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExampleSearchResults'
          description: No response was specified
      summary: Returns examples for a word
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/frequency:
    get:
      operationId: getWordFrequency
      parameters:
      - description: Word to return
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: If true will try to return the correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: Starting Year
        explode: true
        in: query
        name: startYear
        required: false
        schema:
          default: 1800
          format: int32
          type: integer
        style: form
      - description: Ending Year
        explode: true
        in: query
        name: endYear
        required: false
        schema:
          default: 2012
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FrequencySummary'
          description: No response was specified
      summary: Returns word usage over time
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/hyphenation:
    get:
      operationId: getHyphenation
      parameters:
      - description: Word to get syllables for
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: If true will try to return a correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: "Get from a single dictionary. Valid options: ahd-5, century,\
          \ wiktionary, webster, and wordnet."
        explode: true
        in: query
        name: sourceDictionary
        required: false
        schema:
          enum:
          - ahd-5
          - century
          - wiktionary
          - webster
          - wordnet
          type: string
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Syllable'
                type: array
          description: No response was specified
      summary: Returns syllable information for a word
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/phrases:
    get:
      operationId: getPhrases
      parameters:
      - description: Word to fetch phrases for
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      - description: Minimum WLMI for the phrase
        explode: true
        in: query
        name: wlmi
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: If true will try to return the correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Bigram'
                type: array
          description: No response was specified
      summary: Fetches bi-gram phrases for a word
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/pronunciations:
    get:
      operationId: getTextPronunciations
      parameters:
      - description: Word to get pronunciations for
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: If true will try to return a correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: Get from a single dictionary
        explode: true
        in: query
        name: sourceDictionary
        required: false
        schema:
          enum:
          - ahd-5
          - century
          - cmu
          - macmillan
          - wiktionary
          - webster
          - wordnet
          type: string
        style: form
      - description: Text pronunciation type
        explode: true
        in: query
        name: typeFormat
        required: false
        schema:
          enum:
          - ahd-5
          - arpabet
          - gcide-diacritical
          - IPA
          type: string
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/TextPron'
                type: array
          description: No response was specified
      summary: Returns text pronunciations for a given word
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/relatedWords:
    get:
      operationId: getRelatedWords
      parameters:
      - description: Word to fetch relationships for
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: If true will try to return the correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: Limits the total results per type of relationship type
        explode: true
        in: query
        name: relationshipTypes
        required: false
        schema:
          enum:
          - synonym
          - antonym
          - variant
          - equivalent
          - cross-reference
          - related-word
          - rhyme
          - form
          - etymologically-related-term
          - hypernym
          - hyponym
          - inflected-form
          - primary
          - same-context
          - verb-form
          - verb-stem
          - has_topic
          type: string
        style: form
      - description: Restrict to the supplied relationship types
        explode: true
        in: query
        name: limitPerRelationshipType
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Related'
                type: array
          description: No response was specified
      summary: "Given a word as a string, returns relationships from the Word Graph"
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/scrabbleScore:
    get:
      operationId: getScrabbleScore
      parameters:
      - description: Word to get scrabble score for.
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: int64
                type: integer
          description: No response was specified
      summary: Returns the Scrabble score for a word
      tags:
      - word
      x-accepts:
      - '*/*'
  /word.json/{word}/topExample:
    get:
      operationId: getTopExample
      parameters:
      - description: Word to fetch examples for
        explode: false
        in: path
        name: word
        required: true
        schema:
          type: string
        style: simple
      - description: If true will try to return the correct word root ('cats' -> 'cat').
          If false returns exactly what was requested.
        explode: true
        in: query
        name: useCanonical
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Example'
          description: No response was specified
      summary: Returns a top example for a word
      tags:
      - word
      x-accepts:
      - '*/*'
  /words.json/randomWord:
    get:
      operationId: getRandomWord
      parameters:
      - description: Only return words with dictionary definitions
        explode: true
        in: query
        name: hasDictionaryDef
        required: false
        schema:
          default: "true"
          type: string
        style: form
      - description: "CSV part-of-speech values to include (allowable values are noun,\
          \ adjective, verb, adverb, interjection, pronoun, preposition, abbreviation,\
          \ affix, article, auxiliary-verb, conjunction, definite-article, family-name,\
          \ given-name, idiom, imperative, noun-plural, noun-posessive, past-participle,\
          \ phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive,\
          \ suffix, verb-intransitive, verb-transitive)"
        explode: true
        in: query
        name: includePartOfSpeech
        required: false
        schema:
          type: string
        style: form
      - description: "CSV part-of-speech values to exclude (allowable values are noun,\
          \ adjective, verb, adverb, interjection, pronoun, preposition, abbreviation,\
          \ affix, article, auxiliary-verb, conjunction, definite-article, family-name,\
          \ given-name, idiom, imperative, noun-plural, noun-posessive, past-participle,\
          \ phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive,\
          \ suffix, verb-intransitive, verb-transitive)"
        explode: true
        in: query
        name: excludePartOfSpeech
        required: false
        schema:
          type: string
        style: form
      - description: Minimum corpus frequency for terms
        explode: true
        in: query
        name: minCorpusCount
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Maximum corpus frequency for terms
        explode: true
        in: query
        name: maxCorpusCount
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Minimum dictionary count
        explode: true
        in: query
        name: minDictionaryCount
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Maximum dictionary count
        explode: true
        in: query
        name: maxDictionaryCount
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Minimum word length
        explode: true
        in: query
        name: minLength
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      - description: Maximum word length
        explode: true
        in: query
        name: maxLength
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WordObject'
          description: No response was specified
      summary: Returns a single random WordObject
      tags:
      - words
      x-accepts:
      - '*/*'
  /words.json/randomWords:
    get:
      operationId: getRandomWords
      parameters:
      - description: Only return words with dictionary definitions
        explode: true
        in: query
        name: hasDictionaryDef
        required: false
        schema:
          default: "true"
          type: string
        style: form
      - description: "CSV part-of-speech values to include (allowable values are noun,\
          \ adjective, verb, adverb, interjection, pronoun, preposition, abbreviation,\
          \ affix, article, auxiliary-verb, conjunction, definite-article, family-name,\
          \ given-name, idiom, imperative, noun-plural, noun-posessive, past-participle,\
          \ phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive,\
          \ suffix, verb-intransitive, verb-transitive)"
        explode: true
        in: query
        name: includePartOfSpeech
        required: false
        schema:
          type: string
        style: form
      - description: "CSV part-of-speech values to exclude (allowable values are noun,\
          \ adjective, verb, adverb, interjection, pronoun, preposition, abbreviation,\
          \ affix, article, auxiliary-verb, conjunction, definite-article, family-name,\
          \ given-name, idiom, imperative, noun-plural, noun-posessive, past-participle,\
          \ phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive,\
          \ suffix, verb-intransitive, verb-transitive)"
        explode: true
        in: query
        name: excludePartOfSpeech
        required: false
        schema:
          type: string
        style: form
      - description: Minimum corpus frequency for terms
        explode: true
        in: query
        name: minCorpusCount
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Maximum corpus frequency for terms
        explode: true
        in: query
        name: maxCorpusCount
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Minimum dictionary count
        explode: true
        in: query
        name: minDictionaryCount
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Maximum dictionary count
        explode: true
        in: query
        name: maxDictionaryCount
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Minimum word length
        explode: true
        in: query
        name: minLength
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      - description: Maximum word length
        explode: true
        in: query
        name: maxLength
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Attribute to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - alpha
          - count
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/WordObject'
                type: array
          description: No response was specified
      summary: Returns an array of random WordObjects
      tags:
      - words
      x-accepts:
      - '*/*'
  /words.json/reverseDictionary:
    get:
      operationId: reverseDictionary
      parameters:
      - description: Search term
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: Restricts words and finds closest sense
        explode: true
        in: query
        name: findSenseForWord
        required: false
        schema:
          type: string
        style: form
      - description: Only include these comma-delimited source dictionaries
        explode: true
        in: query
        name: includeSourceDictionaries
        required: false
        schema:
          enum:
          - ahd-5
          - century
          - cmu
          - macmillan
          - wiktionary
          - webster
          - wordnet
          type: string
        style: form
      - description: Exclude these comma-delimited source dictionaries
        explode: true
        in: query
        name: excludeSourceDictionaries
        required: false
        schema:
          enum:
          - ahd-5
          - century
          - cmu
          - macmillan
          - wiktionary
          - webster
          - wordnet
          type: string
        style: form
      - description: "Only include these comma-delimited parts of speech (allowable\
          \ values are noun, adjective, verb, adverb, interjection, pronoun, preposition,\
          \ abbreviation, affix, article, auxiliary-verb, conjunction, definite-article,\
          \ family-name, given-name, idiom, imperative, noun-plural, noun-posessive,\
          \ past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive,\
          \ suffix, verb-intransitive, verb-transitive)"
        explode: true
        in: query
        name: includePartOfSpeech
        required: false
        schema:
          type: string
        style: form
      - description: "Exclude these comma-delimited parts of speech (allowable values\
          \ are noun, adjective, verb, adverb, interjection, pronoun, preposition,\
          \ abbreviation, affix, article, auxiliary-verb, conjunction, definite-article,\
          \ family-name, given-name, idiom, imperative, noun-plural, noun-posessive,\
          \ past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive,\
          \ suffix, verb-intransitive, verb-transitive)"
        explode: true
        in: query
        name: excludePartOfSpeech
        required: false
        schema:
          type: string
        style: form
      - description: Minimum corpus frequency for terms
        explode: true
        in: query
        name: minCorpusCount
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      - description: Maximum corpus frequency for terms
        explode: true
        in: query
        name: maxCorpusCount
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Minimum word length
        explode: true
        in: query
        name: minLength
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Maximum word length
        explode: true
        in: query
        name: maxLength
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Expand terms
        explode: true
        in: query
        name: expandTerms
        required: false
        schema:
          type: string
        style: form
      - description: Return a closed set of XML tags in response
        explode: true
        in: query
        name: includeTags
        required: false
        schema:
          default: "false"
          enum:
          - "false"
          - "true"
          type: string
        style: form
      - description: Attribute to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - alpha
          - count
          type: string
        style: form
      - description: Sort direction
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Results to skip
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: "0"
          type: string
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DefinitionSearchResults'
          description: No response was specified
      summary: Reverse dictionary search
      tags:
      - words
      x-accepts:
      - '*/*'
  /words.json/search/{query}:
    get:
      operationId: searchWords
      parameters:
      - description: Search term is a Regular Expression
        explode: true
        in: query
        name: allowRegex
        required: false
        schema:
          default: "false"
          type: string
        style: form
      - description: Search query
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Search case sensitive
        explode: true
        in: query
        name: caseSensitive
        required: false
        schema:
          default: "true"
          type: string
        style: form
      - description: "Only include these comma-delimited parts of speech (allowable\
          \ values are noun, adjective, verb, adverb, interjection, pronoun, preposition,\
          \ abbreviation, affix, article, auxiliary-verb, conjunction, definite-article,\
          \ family-name, given-name, idiom, imperative, noun-plural, noun-posessive,\
          \ past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive,\
          \ suffix, verb-intransitive, verb-transitive)"
        explode: true
        in: query
        name: includePartOfSpeech
        required: false
        schema:
          type: string
        style: form
      - description: "Exclude these comma-delimited parts of speech (allowable values\
          \ are noun, adjective, verb, adverb, interjection, pronoun, preposition,\
          \ abbreviation, affix, article, auxiliary-verb, conjunction, definite-article,\
          \ family-name, given-name, idiom, imperative, noun-plural, noun-posessive,\
          \ past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive,\
          \ suffix, verb-intransitive, verb-transitive)"
        explode: true
        in: query
        name: excludePartOfSpeech
        required: false
        schema:
          type: string
        style: form
      - description: Minimum corpus frequency for terms
        explode: true
        in: query
        name: minCorpusCount
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      - description: Maximum corpus frequency for terms
        explode: true
        in: query
        name: maxCorpusCount
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Minimum number of dictionary entries for words returned
        explode: true
        in: query
        name: minDictionaryCount
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Maximum dictionary definition count
        explode: true
        in: query
        name: maxDictionaryCount
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Minimum word length
        explode: true
        in: query
        name: minLength
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Maximum word length
        explode: true
        in: query
        name: maxLength
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Results to skip
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WordSearchResults'
          description: No response was specified
      summary: Searches words
      tags:
      - words
      x-accepts:
      - '*/*'
  /words.json/wordOfTheDay:
    get:
      operationId: getWordOfTheDay
      parameters:
      - description: Fetches by date in yyyy-MM-dd
        explode: true
        in: query
        name: date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WordOfTheDay'
          description: No response was specified
      summary: Returns a specific WordOfTheDay
      tags:
      - words
      x-accepts:
      - '*/*'
components:
  schemas:
    ApiTokenStatus:
      properties:
        expiresInMillis:
          format: int64
          type: integer
          uniqueItems: false
        remainingCalls:
          format: int64
          type: integer
          uniqueItems: false
        resetsInMillis:
          format: int64
          type: integer
          uniqueItems: false
        token:
          type: string
          uniqueItems: false
        totalRequests:
          format: int64
          type: integer
          uniqueItems: false
        valid:
          type: boolean
          uniqueItems: false
      uniqueItems: false
    AudioFile:
      example:
        voteAverage: 5.962134
        audioType: audioType
        attributionText: attributionText
        description: description
        voteWeightedAverage: 2.302136
        commentCount: 0
        duration: 6.027456183070403
        createdAt: 2000-01-23
        createdBy: createdBy
        attributionUrl: attributionUrl
        fileUrl: fileUrl
        id: 1
        voteCount: 5
        word: word
      properties:
        attributionText:
          type: string
          uniqueItems: false
        attributionUrl:
          type: string
          uniqueItems: false
        audioType:
          type: string
          uniqueItems: false
        commentCount:
          format: int32
          type: integer
          uniqueItems: false
        createdAt:
          format: date
          type: string
          uniqueItems: false
        createdBy:
          type: string
          uniqueItems: false
        description:
          type: string
          uniqueItems: false
        duration:
          format: double
          type: number
          uniqueItems: false
        fileUrl:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        voteAverage:
          format: float
          type: number
          uniqueItems: false
        voteCount:
          type: integer
          uniqueItems: false
        voteWeightedAverage:
          format: float
          type: number
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      required:
      - id
      uniqueItems: false
    AudioType:
      properties:
        id:
          format: int32
          type: integer
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      uniqueItems: false
    AuthenticationToken:
      properties:
        token:
          type: string
          uniqueItems: false
        userId:
          format: int64
          type: integer
          uniqueItems: false
        userSignature:
          type: string
          uniqueItems: false
      uniqueItems: false
    Bigram:
      example:
        wlmi: 1.4658129805029452
        count: 0
        gram1: gram1
        gram2: gram2
        mi: 6.027456183070403
      properties:
        count:
          format: int64
          type: integer
          uniqueItems: false
        gram1:
          type: string
          uniqueItems: false
        gram2:
          type: string
          uniqueItems: false
        mi:
          format: double
          type: number
          uniqueItems: false
        wlmi:
          format: double
          type: number
          uniqueItems: false
      uniqueItems: false
    Category:
      properties:
        id:
          format: int64
          type: integer
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      required:
      - id
      uniqueItems: false
    Citation:
      properties:
        cite:
          type: string
          uniqueItems: false
        source:
          type: string
          uniqueItems: false
      uniqueItems: false
    ContentProvider:
      example:
        name: name
        id: 5
      properties:
        id:
          format: int32
          type: integer
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      uniqueItems: false
    Definition:
      example:
        notes:
        - ""
        - ""
        exampleUses:
        - ""
        - ""
        extendedText: extendedText
        partOfSpeech: partOfSpeech
        attributionText: attributionText
        labels:
        - ""
        - ""
        score: 0.8008282
        sequence: sequence
        citations:
        - ""
        - ""
        sourceDictionary: sourceDictionary
        textProns:
        - ""
        - ""
        attributionUrl: attributionUrl
        text: text
        word: word
        relatedWords:
        - ""
        - ""
        seqString: seqString
      properties:
        attributionText:
          type: string
          uniqueItems: false
        attributionUrl:
          type: string
          uniqueItems: false
        citations:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        exampleUses:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        extendedText:
          type: string
          uniqueItems: false
        labels:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        notes:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        partOfSpeech:
          type: string
          uniqueItems: false
        relatedWords:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        score:
          format: float
          type: number
          uniqueItems: false
        seqString:
          type: string
          uniqueItems: false
        sequence:
          type: string
          uniqueItems: false
        sourceDictionary:
          type: string
          uniqueItems: false
        text:
          type: string
          uniqueItems: false
        textProns:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      uniqueItems: false
    DefinitionSearchResults:
      example:
        totalResults: 0
        results:
        - ""
        - ""
      properties:
        results:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        totalResults:
          format: int32
          type: integer
          uniqueItems: false
      uniqueItems: false
    Example:
      example:
        sentence:
          documentMetadataId: 7
          display: display
          rating: 1
          scoredWords:
          - ""
          - ""
          id: 1
          hasScoredWords: true
        score:
          docTermCount: 7
          score: 2.027123
          wordType: wordType
          partOfSpeech: partOfSpeech
          lemma: lemma
          sentenceId: 4
          stopword: true
          baseWordScore: 2.3021358869347655
          id: 9
          position: 3
          word: word
        exampleId: 6
        provider:
          name: name
          id: 5
        year: 1
        rating: 5.637377
        documentId: 0
        id: 1
        text: text
        title: title
        word: word
        url: url
      properties:
        documentId:
          format: int64
          type: integer
          uniqueItems: false
        exampleId:
          format: int64
          type: integer
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        provider:
          $ref: '#/components/schemas/ContentProvider'
        rating:
          format: float
          type: number
          uniqueItems: false
        score:
          $ref: '#/components/schemas/ScoredWord'
        sentence:
          $ref: '#/components/schemas/Sentence'
        text:
          type: string
          uniqueItems: false
        title:
          type: string
          uniqueItems: false
        url:
          type: string
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
        year:
          type: integer
          uniqueItems: false
      uniqueItems: false
    ExampleSearchResults:
      example:
        examples:
        - ""
        - ""
        facets:
        - ""
        - ""
      properties:
        examples:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        facets:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
      uniqueItems: false
    ExampleUsage:
      properties:
        text:
          type: string
          uniqueItems: false
      uniqueItems: false
    Facet:
      properties:
        facetValues:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      uniqueItems: false
    FacetValue:
      properties:
        count:
          format: int64
          type: integer
          uniqueItems: false
        value:
          type: string
          uniqueItems: false
      uniqueItems: false
    Frequency:
      properties:
        count:
          format: int64
          type: integer
          uniqueItems: false
        year:
          format: int32
          type: integer
          uniqueItems: false
      uniqueItems: false
    FrequencySummary:
      example:
        unknownYearCount: 6
        totalCount: 0
        word: word
        frequencyString: frequencyString
        frequency:
        - ""
        - ""
      properties:
        frequency:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        frequencyString:
          type: string
          uniqueItems: false
        totalCount:
          format: int64
          type: integer
          uniqueItems: false
        unknownYearCount:
          format: int32
          type: integer
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      uniqueItems: false
    Label:
      properties:
        text:
          type: string
          uniqueItems: false
        type:
          type: string
          uniqueItems: false
      uniqueItems: false
    Long:
      properties:
        value:
          format: int64
          type: integer
          uniqueItems: false
      uniqueItems: false
    Note:
      properties:
        appliesTo:
          items:
            type: string
            uniqueItems: false
          type: array
          uniqueItems: false
        noteType:
          type: string
          uniqueItems: false
        pos:
          format: int32
          type: integer
          uniqueItems: false
        value:
          type: string
          uniqueItems: false
      uniqueItems: false
    PartOfSpeech:
      properties:
        allCategories:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        roots:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        storageAbbr:
          items:
            type: string
            uniqueItems: false
          type: array
          uniqueItems: false
      uniqueItems: false
    Related:
      example:
        label4: label4
        relationshipType: relationshipType
        gram: gram
        words:
        - words
        - words
        label1: label1
        label2: label2
        label3: label3
      properties:
        gram:
          type: string
          uniqueItems: false
        label1:
          type: string
          uniqueItems: false
        label2:
          type: string
          uniqueItems: false
        label3:
          type: string
          uniqueItems: false
        label4:
          type: string
          uniqueItems: false
        relationshipType:
          type: string
          uniqueItems: false
        words:
          items:
            type: string
            uniqueItems: false
          type: array
          uniqueItems: false
      uniqueItems: false
    Root:
      properties:
        categories:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
      required:
      - id
      uniqueItems: false
    ScoredWord:
      example:
        docTermCount: 7
        score: 2.027123
        wordType: wordType
        partOfSpeech: partOfSpeech
        lemma: lemma
        sentenceId: 4
        stopword: true
        baseWordScore: 2.3021358869347655
        id: 9
        position: 3
        word: word
      properties:
        baseWordScore:
          format: double
          type: number
          uniqueItems: false
        docTermCount:
          format: int32
          type: integer
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        lemma:
          type: string
          uniqueItems: false
        partOfSpeech:
          type: string
          uniqueItems: false
        position:
          format: int32
          type: integer
          uniqueItems: false
        score:
          format: float
          type: number
          uniqueItems: false
        sentenceId:
          format: int64
          type: integer
          uniqueItems: false
        stopword:
          type: boolean
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
        wordType:
          type: string
          uniqueItems: false
      uniqueItems: false
    Sentence:
      example:
        documentMetadataId: 7
        display: display
        rating: 1
        scoredWords:
        - ""
        - ""
        id: 1
        hasScoredWords: true
      properties:
        display:
          type: string
          uniqueItems: false
        documentMetadataId:
          format: int64
          type: integer
          uniqueItems: false
        hasScoredWords:
          type: boolean
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        rating:
          format: int32
          type: integer
          uniqueItems: false
        scoredWords:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
      uniqueItems: false
    SimpleDefinition:
      properties:
        note:
          type: string
          uniqueItems: false
        partOfSpeech:
          type: string
          uniqueItems: false
        source:
          type: string
          uniqueItems: false
        text:
          type: string
          uniqueItems: false
      uniqueItems: false
    SimpleExample:
      properties:
        id:
          format: int64
          type: integer
          uniqueItems: false
        text:
          type: string
          uniqueItems: false
        title:
          type: string
          uniqueItems: false
        url:
          type: string
          uniqueItems: false
      uniqueItems: false
    StringValue:
      properties:
        word:
          type: string
          uniqueItems: false
      uniqueItems: false
    Syllable:
      example:
        text: text
        type: type
        seq: 0
      properties:
        seq:
          format: int32
          type: integer
          uniqueItems: false
        text:
          type: string
          uniqueItems: false
        type:
          type: string
          uniqueItems: false
      uniqueItems: false
    TextPron:
      example:
        rawType: rawType
        raw: raw
        seq: 0
      properties:
        raw:
          type: string
          uniqueItems: false
        rawType:
          type: string
          uniqueItems: false
        seq:
          format: int32
          type: integer
          uniqueItems: false
      uniqueItems: false
    User:
      properties:
        displayName:
          type: string
          uniqueItems: false
        email:
          type: string
          uniqueItems: false
        faceBookId:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        password:
          type: string
          uniqueItems: false
        status:
          format: int32
          type: integer
          uniqueItems: false
        userName:
          type: string
          uniqueItems: false
        username:
          type: string
          uniqueItems: false
      uniqueItems: false
    WordList:
      properties:
        createdAt:
          format: date
          type: string
          uniqueItems: false
        description:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        lastActivityAt:
          format: date
          type: string
          uniqueItems: false
        name:
          type: string
          uniqueItems: false
        numberWordsInList:
          format: int64
          type: integer
          uniqueItems: false
        permalink:
          type: string
          uniqueItems: false
        type:
          type: string
          uniqueItems: false
        updatedAt:
          format: date
          type: string
          uniqueItems: false
        userId:
          format: int64
          type: integer
          uniqueItems: false
        username:
          type: string
          uniqueItems: false
      required:
      - id
      uniqueItems: false
    WordListWord:
      properties:
        createdAt:
          format: date
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        numberCommentsOnWord:
          format: int64
          type: integer
          uniqueItems: false
        numberLists:
          format: int64
          type: integer
          uniqueItems: false
        userId:
          format: int64
          type: integer
          uniqueItems: false
        username:
          type: string
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      required:
      - id
      uniqueItems: false
    WordObject:
      example:
        vulgar: vulgar
        canonicalForm: canonicalForm
        suggestions:
        - suggestions
        - suggestions
        id: 0
        originalWord: originalWord
        word: word
      properties:
        canonicalForm:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        originalWord:
          type: string
          uniqueItems: false
        suggestions:
          items:
            type: string
            uniqueItems: false
          type: array
          uniqueItems: false
        vulgar:
          type: string
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      required:
      - id
      uniqueItems: false
    WordOfTheDay:
      example:
        contentProvider:
          name: name
          id: 5
        createdAt: 2000-01-23
        note: note
        examples:
        - ""
        - ""
        createdBy: createdBy
        publishDate: 2000-01-23
        htmlExtra: htmlExtra
        id: 0
        category: category
        definitions:
        - ""
        - ""
        word: word
        parentId: parentId
      properties:
        category:
          type: string
          uniqueItems: false
        contentProvider:
          $ref: '#/components/schemas/ContentProvider'
        createdAt:
          format: date
          type: string
          uniqueItems: false
        createdBy:
          type: string
          uniqueItems: false
        definitions:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        examples:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        htmlExtra:
          type: string
          uniqueItems: false
        id:
          format: int64
          type: integer
          uniqueItems: false
        note:
          type: string
          uniqueItems: false
        parentId:
          type: string
          uniqueItems: false
        publishDate:
          format: date
          type: string
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      required:
      - id
      uniqueItems: false
    WordSearchResult:
      properties:
        count:
          format: int64
          type: integer
          uniqueItems: false
        lexicality:
          format: double
          type: number
          uniqueItems: false
        word:
          type: string
          uniqueItems: false
      uniqueItems: false
    WordSearchResults:
      example:
        totalResults: 0
        searchResults:
        - ""
        - ""
      properties:
        searchResults:
          items:
            uniqueItems: false
          type: array
          uniqueItems: false
        totalResults:
          format: int32
          type: integer
          uniqueItems: false
      uniqueItems: false
  securitySchemes:
    api_key:
      in: query
      name: api_key
      type: apiKey

