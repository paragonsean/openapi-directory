# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WordListWord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: date=None, id: int=None, number_comments_on_word: int=None, number_lists: int=None, user_id: int=None, username: str=None, word: str=None):
        """WordListWord - a model defined in OpenAPI

        :param created_at: The created_at of this WordListWord.
        :param id: The id of this WordListWord.
        :param number_comments_on_word: The number_comments_on_word of this WordListWord.
        :param number_lists: The number_lists of this WordListWord.
        :param user_id: The user_id of this WordListWord.
        :param username: The username of this WordListWord.
        :param word: The word of this WordListWord.
        """
        self.openapi_types = {
            'created_at': date,
            'id': int,
            'number_comments_on_word': int,
            'number_lists': int,
            'user_id': int,
            'username': str,
            'word': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'id': 'id',
            'number_comments_on_word': 'numberCommentsOnWord',
            'number_lists': 'numberLists',
            'user_id': 'userId',
            'username': 'username',
            'word': 'word'
        }

        self._created_at = created_at
        self._id = id
        self._number_comments_on_word = number_comments_on_word
        self._number_lists = number_lists
        self._user_id = user_id
        self._username = username
        self._word = word

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WordListWord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WordListWord of this WordListWord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this WordListWord.


        :return: The created_at of this WordListWord.
        :rtype: date
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this WordListWord.


        :param created_at: The created_at of this WordListWord.
        :type created_at: date
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this WordListWord.


        :return: The id of this WordListWord.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WordListWord.


        :param id: The id of this WordListWord.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def number_comments_on_word(self):
        """Gets the number_comments_on_word of this WordListWord.


        :return: The number_comments_on_word of this WordListWord.
        :rtype: int
        """
        return self._number_comments_on_word

    @number_comments_on_word.setter
    def number_comments_on_word(self, number_comments_on_word):
        """Sets the number_comments_on_word of this WordListWord.


        :param number_comments_on_word: The number_comments_on_word of this WordListWord.
        :type number_comments_on_word: int
        """

        self._number_comments_on_word = number_comments_on_word

    @property
    def number_lists(self):
        """Gets the number_lists of this WordListWord.


        :return: The number_lists of this WordListWord.
        :rtype: int
        """
        return self._number_lists

    @number_lists.setter
    def number_lists(self, number_lists):
        """Sets the number_lists of this WordListWord.


        :param number_lists: The number_lists of this WordListWord.
        :type number_lists: int
        """

        self._number_lists = number_lists

    @property
    def user_id(self):
        """Gets the user_id of this WordListWord.


        :return: The user_id of this WordListWord.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this WordListWord.


        :param user_id: The user_id of this WordListWord.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def username(self):
        """Gets the username of this WordListWord.


        :return: The username of this WordListWord.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this WordListWord.


        :param username: The username of this WordListWord.
        :type username: str
        """

        self._username = username

    @property
    def word(self):
        """Gets the word of this WordListWord.


        :return: The word of this WordListWord.
        :rtype: str
        """
        return self._word

    @word.setter
    def word(self, word):
        """Sets the word of this WordListWord.


        :param word: The word of this WordListWord.
        :type word: str
        """

        self._word = word
