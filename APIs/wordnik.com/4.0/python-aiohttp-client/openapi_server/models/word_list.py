# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WordList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: date=None, description: str=None, id: int=None, last_activity_at: date=None, name: str=None, number_words_in_list: int=None, permalink: str=None, type: str=None, updated_at: date=None, user_id: int=None, username: str=None):
        """WordList - a model defined in OpenAPI

        :param created_at: The created_at of this WordList.
        :param description: The description of this WordList.
        :param id: The id of this WordList.
        :param last_activity_at: The last_activity_at of this WordList.
        :param name: The name of this WordList.
        :param number_words_in_list: The number_words_in_list of this WordList.
        :param permalink: The permalink of this WordList.
        :param type: The type of this WordList.
        :param updated_at: The updated_at of this WordList.
        :param user_id: The user_id of this WordList.
        :param username: The username of this WordList.
        """
        self.openapi_types = {
            'created_at': date,
            'description': str,
            'id': int,
            'last_activity_at': date,
            'name': str,
            'number_words_in_list': int,
            'permalink': str,
            'type': str,
            'updated_at': date,
            'user_id': int,
            'username': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'description': 'description',
            'id': 'id',
            'last_activity_at': 'lastActivityAt',
            'name': 'name',
            'number_words_in_list': 'numberWordsInList',
            'permalink': 'permalink',
            'type': 'type',
            'updated_at': 'updatedAt',
            'user_id': 'userId',
            'username': 'username'
        }

        self._created_at = created_at
        self._description = description
        self._id = id
        self._last_activity_at = last_activity_at
        self._name = name
        self._number_words_in_list = number_words_in_list
        self._permalink = permalink
        self._type = type
        self._updated_at = updated_at
        self._user_id = user_id
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WordList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WordList of this WordList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this WordList.


        :return: The created_at of this WordList.
        :rtype: date
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this WordList.


        :param created_at: The created_at of this WordList.
        :type created_at: date
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this WordList.


        :return: The description of this WordList.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this WordList.


        :param description: The description of this WordList.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this WordList.


        :return: The id of this WordList.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WordList.


        :param id: The id of this WordList.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def last_activity_at(self):
        """Gets the last_activity_at of this WordList.


        :return: The last_activity_at of this WordList.
        :rtype: date
        """
        return self._last_activity_at

    @last_activity_at.setter
    def last_activity_at(self, last_activity_at):
        """Sets the last_activity_at of this WordList.


        :param last_activity_at: The last_activity_at of this WordList.
        :type last_activity_at: date
        """

        self._last_activity_at = last_activity_at

    @property
    def name(self):
        """Gets the name of this WordList.


        :return: The name of this WordList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WordList.


        :param name: The name of this WordList.
        :type name: str
        """

        self._name = name

    @property
    def number_words_in_list(self):
        """Gets the number_words_in_list of this WordList.


        :return: The number_words_in_list of this WordList.
        :rtype: int
        """
        return self._number_words_in_list

    @number_words_in_list.setter
    def number_words_in_list(self, number_words_in_list):
        """Sets the number_words_in_list of this WordList.


        :param number_words_in_list: The number_words_in_list of this WordList.
        :type number_words_in_list: int
        """

        self._number_words_in_list = number_words_in_list

    @property
    def permalink(self):
        """Gets the permalink of this WordList.


        :return: The permalink of this WordList.
        :rtype: str
        """
        return self._permalink

    @permalink.setter
    def permalink(self, permalink):
        """Sets the permalink of this WordList.


        :param permalink: The permalink of this WordList.
        :type permalink: str
        """

        self._permalink = permalink

    @property
    def type(self):
        """Gets the type of this WordList.


        :return: The type of this WordList.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this WordList.


        :param type: The type of this WordList.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this WordList.


        :return: The updated_at of this WordList.
        :rtype: date
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this WordList.


        :param updated_at: The updated_at of this WordList.
        :type updated_at: date
        """

        self._updated_at = updated_at

    @property
    def user_id(self):
        """Gets the user_id of this WordList.


        :return: The user_id of this WordList.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this WordList.


        :param user_id: The user_id of this WordList.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def username(self):
        """Gets the username of this WordList.


        :return: The username of this WordList.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this WordList.


        :param username: The username of this WordList.
        :type username: str
        """

        self._username = username
