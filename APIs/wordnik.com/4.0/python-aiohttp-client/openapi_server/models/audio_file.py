# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudioFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribution_text: str=None, attribution_url: str=None, audio_type: str=None, comment_count: int=None, created_at: date=None, created_by: str=None, description: str=None, duration: float=None, file_url: str=None, id: int=None, vote_average: float=None, vote_count: int=None, vote_weighted_average: float=None, word: str=None):
        """AudioFile - a model defined in OpenAPI

        :param attribution_text: The attribution_text of this AudioFile.
        :param attribution_url: The attribution_url of this AudioFile.
        :param audio_type: The audio_type of this AudioFile.
        :param comment_count: The comment_count of this AudioFile.
        :param created_at: The created_at of this AudioFile.
        :param created_by: The created_by of this AudioFile.
        :param description: The description of this AudioFile.
        :param duration: The duration of this AudioFile.
        :param file_url: The file_url of this AudioFile.
        :param id: The id of this AudioFile.
        :param vote_average: The vote_average of this AudioFile.
        :param vote_count: The vote_count of this AudioFile.
        :param vote_weighted_average: The vote_weighted_average of this AudioFile.
        :param word: The word of this AudioFile.
        """
        self.openapi_types = {
            'attribution_text': str,
            'attribution_url': str,
            'audio_type': str,
            'comment_count': int,
            'created_at': date,
            'created_by': str,
            'description': str,
            'duration': float,
            'file_url': str,
            'id': int,
            'vote_average': float,
            'vote_count': int,
            'vote_weighted_average': float,
            'word': str
        }

        self.attribute_map = {
            'attribution_text': 'attributionText',
            'attribution_url': 'attributionUrl',
            'audio_type': 'audioType',
            'comment_count': 'commentCount',
            'created_at': 'createdAt',
            'created_by': 'createdBy',
            'description': 'description',
            'duration': 'duration',
            'file_url': 'fileUrl',
            'id': 'id',
            'vote_average': 'voteAverage',
            'vote_count': 'voteCount',
            'vote_weighted_average': 'voteWeightedAverage',
            'word': 'word'
        }

        self._attribution_text = attribution_text
        self._attribution_url = attribution_url
        self._audio_type = audio_type
        self._comment_count = comment_count
        self._created_at = created_at
        self._created_by = created_by
        self._description = description
        self._duration = duration
        self._file_url = file_url
        self._id = id
        self._vote_average = vote_average
        self._vote_count = vote_count
        self._vote_weighted_average = vote_weighted_average
        self._word = word

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioFile of this AudioFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribution_text(self):
        """Gets the attribution_text of this AudioFile.


        :return: The attribution_text of this AudioFile.
        :rtype: str
        """
        return self._attribution_text

    @attribution_text.setter
    def attribution_text(self, attribution_text):
        """Sets the attribution_text of this AudioFile.


        :param attribution_text: The attribution_text of this AudioFile.
        :type attribution_text: str
        """

        self._attribution_text = attribution_text

    @property
    def attribution_url(self):
        """Gets the attribution_url of this AudioFile.


        :return: The attribution_url of this AudioFile.
        :rtype: str
        """
        return self._attribution_url

    @attribution_url.setter
    def attribution_url(self, attribution_url):
        """Sets the attribution_url of this AudioFile.


        :param attribution_url: The attribution_url of this AudioFile.
        :type attribution_url: str
        """

        self._attribution_url = attribution_url

    @property
    def audio_type(self):
        """Gets the audio_type of this AudioFile.


        :return: The audio_type of this AudioFile.
        :rtype: str
        """
        return self._audio_type

    @audio_type.setter
    def audio_type(self, audio_type):
        """Sets the audio_type of this AudioFile.


        :param audio_type: The audio_type of this AudioFile.
        :type audio_type: str
        """

        self._audio_type = audio_type

    @property
    def comment_count(self):
        """Gets the comment_count of this AudioFile.


        :return: The comment_count of this AudioFile.
        :rtype: int
        """
        return self._comment_count

    @comment_count.setter
    def comment_count(self, comment_count):
        """Sets the comment_count of this AudioFile.


        :param comment_count: The comment_count of this AudioFile.
        :type comment_count: int
        """

        self._comment_count = comment_count

    @property
    def created_at(self):
        """Gets the created_at of this AudioFile.


        :return: The created_at of this AudioFile.
        :rtype: date
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this AudioFile.


        :param created_at: The created_at of this AudioFile.
        :type created_at: date
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this AudioFile.


        :return: The created_by of this AudioFile.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this AudioFile.


        :param created_by: The created_by of this AudioFile.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def description(self):
        """Gets the description of this AudioFile.


        :return: The description of this AudioFile.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AudioFile.


        :param description: The description of this AudioFile.
        :type description: str
        """

        self._description = description

    @property
    def duration(self):
        """Gets the duration of this AudioFile.


        :return: The duration of this AudioFile.
        :rtype: float
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this AudioFile.


        :param duration: The duration of this AudioFile.
        :type duration: float
        """

        self._duration = duration

    @property
    def file_url(self):
        """Gets the file_url of this AudioFile.


        :return: The file_url of this AudioFile.
        :rtype: str
        """
        return self._file_url

    @file_url.setter
    def file_url(self, file_url):
        """Sets the file_url of this AudioFile.


        :param file_url: The file_url of this AudioFile.
        :type file_url: str
        """

        self._file_url = file_url

    @property
    def id(self):
        """Gets the id of this AudioFile.


        :return: The id of this AudioFile.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AudioFile.


        :param id: The id of this AudioFile.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def vote_average(self):
        """Gets the vote_average of this AudioFile.


        :return: The vote_average of this AudioFile.
        :rtype: float
        """
        return self._vote_average

    @vote_average.setter
    def vote_average(self, vote_average):
        """Sets the vote_average of this AudioFile.


        :param vote_average: The vote_average of this AudioFile.
        :type vote_average: float
        """

        self._vote_average = vote_average

    @property
    def vote_count(self):
        """Gets the vote_count of this AudioFile.


        :return: The vote_count of this AudioFile.
        :rtype: int
        """
        return self._vote_count

    @vote_count.setter
    def vote_count(self, vote_count):
        """Sets the vote_count of this AudioFile.


        :param vote_count: The vote_count of this AudioFile.
        :type vote_count: int
        """

        self._vote_count = vote_count

    @property
    def vote_weighted_average(self):
        """Gets the vote_weighted_average of this AudioFile.


        :return: The vote_weighted_average of this AudioFile.
        :rtype: float
        """
        return self._vote_weighted_average

    @vote_weighted_average.setter
    def vote_weighted_average(self, vote_weighted_average):
        """Sets the vote_weighted_average of this AudioFile.


        :param vote_weighted_average: The vote_weighted_average of this AudioFile.
        :type vote_weighted_average: float
        """

        self._vote_weighted_average = vote_weighted_average

    @property
    def word(self):
        """Gets the word of this AudioFile.


        :return: The word of this AudioFile.
        :rtype: str
        """
        return self._word

    @word.setter
    def word(self, word):
        """Sets the word of this AudioFile.


        :param word: The word of this AudioFile.
        :type word: str
        """

        self._word = word
