# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, email: str=None, face_book_id: str=None, id: int=None, password: str=None, status: int=None, user_name: str=None, username: str=None):
        """User - a model defined in OpenAPI

        :param display_name: The display_name of this User.
        :param email: The email of this User.
        :param face_book_id: The face_book_id of this User.
        :param id: The id of this User.
        :param password: The password of this User.
        :param status: The status of this User.
        :param user_name: The user_name of this User.
        :param username: The username of this User.
        """
        self.openapi_types = {
            'display_name': str,
            'email': str,
            'face_book_id': str,
            'id': int,
            'password': str,
            'status': int,
            'user_name': str,
            'username': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'email': 'email',
            'face_book_id': 'faceBookId',
            'id': 'id',
            'password': 'password',
            'status': 'status',
            'user_name': 'userName',
            'username': 'username'
        }

        self._display_name = display_name
        self._email = email
        self._face_book_id = face_book_id
        self._id = id
        self._password = password
        self._status = status
        self._user_name = user_name
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this User.


        :return: The display_name of this User.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this User.


        :param display_name: The display_name of this User.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def email(self):
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def face_book_id(self):
        """Gets the face_book_id of this User.


        :return: The face_book_id of this User.
        :rtype: str
        """
        return self._face_book_id

    @face_book_id.setter
    def face_book_id(self, face_book_id):
        """Sets the face_book_id of this User.


        :param face_book_id: The face_book_id of this User.
        :type face_book_id: str
        """

        self._face_book_id = face_book_id

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: int
        """

        self._id = id

    @property
    def password(self):
        """Gets the password of this User.


        :return: The password of this User.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this User.


        :param password: The password of this User.
        :type password: str
        """

        self._password = password

    @property
    def status(self):
        """Gets the status of this User.


        :return: The status of this User.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this User.


        :param status: The status of this User.
        :type status: int
        """

        self._status = status

    @property
    def user_name(self):
        """Gets the user_name of this User.


        :return: The user_name of this User.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this User.


        :param user_name: The user_name of this User.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def username(self):
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username
