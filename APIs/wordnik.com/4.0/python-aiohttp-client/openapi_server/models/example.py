# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_provider import ContentProvider
from openapi_server.models.scored_word import ScoredWord
from openapi_server.models.sentence import Sentence
from openapi_server import util


class Example(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_id: int=None, example_id: int=None, id: int=None, provider: ContentProvider=None, rating: float=None, score: ScoredWord=None, sentence: Sentence=None, text: str=None, title: str=None, url: str=None, word: str=None, year: int=None):
        """Example - a model defined in OpenAPI

        :param document_id: The document_id of this Example.
        :param example_id: The example_id of this Example.
        :param id: The id of this Example.
        :param provider: The provider of this Example.
        :param rating: The rating of this Example.
        :param score: The score of this Example.
        :param sentence: The sentence of this Example.
        :param text: The text of this Example.
        :param title: The title of this Example.
        :param url: The url of this Example.
        :param word: The word of this Example.
        :param year: The year of this Example.
        """
        self.openapi_types = {
            'document_id': int,
            'example_id': int,
            'id': int,
            'provider': ContentProvider,
            'rating': float,
            'score': ScoredWord,
            'sentence': Sentence,
            'text': str,
            'title': str,
            'url': str,
            'word': str,
            'year': int
        }

        self.attribute_map = {
            'document_id': 'documentId',
            'example_id': 'exampleId',
            'id': 'id',
            'provider': 'provider',
            'rating': 'rating',
            'score': 'score',
            'sentence': 'sentence',
            'text': 'text',
            'title': 'title',
            'url': 'url',
            'word': 'word',
            'year': 'year'
        }

        self._document_id = document_id
        self._example_id = example_id
        self._id = id
        self._provider = provider
        self._rating = rating
        self._score = score
        self._sentence = sentence
        self._text = text
        self._title = title
        self._url = url
        self._word = word
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Example':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Example of this Example.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_id(self):
        """Gets the document_id of this Example.


        :return: The document_id of this Example.
        :rtype: int
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this Example.


        :param document_id: The document_id of this Example.
        :type document_id: int
        """

        self._document_id = document_id

    @property
    def example_id(self):
        """Gets the example_id of this Example.


        :return: The example_id of this Example.
        :rtype: int
        """
        return self._example_id

    @example_id.setter
    def example_id(self, example_id):
        """Sets the example_id of this Example.


        :param example_id: The example_id of this Example.
        :type example_id: int
        """

        self._example_id = example_id

    @property
    def id(self):
        """Gets the id of this Example.


        :return: The id of this Example.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Example.


        :param id: The id of this Example.
        :type id: int
        """

        self._id = id

    @property
    def provider(self):
        """Gets the provider of this Example.


        :return: The provider of this Example.
        :rtype: ContentProvider
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this Example.


        :param provider: The provider of this Example.
        :type provider: ContentProvider
        """

        self._provider = provider

    @property
    def rating(self):
        """Gets the rating of this Example.


        :return: The rating of this Example.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this Example.


        :param rating: The rating of this Example.
        :type rating: float
        """

        self._rating = rating

    @property
    def score(self):
        """Gets the score of this Example.


        :return: The score of this Example.
        :rtype: ScoredWord
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this Example.


        :param score: The score of this Example.
        :type score: ScoredWord
        """

        self._score = score

    @property
    def sentence(self):
        """Gets the sentence of this Example.


        :return: The sentence of this Example.
        :rtype: Sentence
        """
        return self._sentence

    @sentence.setter
    def sentence(self, sentence):
        """Sets the sentence of this Example.


        :param sentence: The sentence of this Example.
        :type sentence: Sentence
        """

        self._sentence = sentence

    @property
    def text(self):
        """Gets the text of this Example.


        :return: The text of this Example.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Example.


        :param text: The text of this Example.
        :type text: str
        """

        self._text = text

    @property
    def title(self):
        """Gets the title of this Example.


        :return: The title of this Example.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Example.


        :param title: The title of this Example.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this Example.


        :return: The url of this Example.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Example.


        :param url: The url of this Example.
        :type url: str
        """

        self._url = url

    @property
    def word(self):
        """Gets the word of this Example.


        :return: The word of this Example.
        :rtype: str
        """
        return self._word

    @word.setter
    def word(self, word):
        """Sets the word of this Example.


        :param word: The word of this Example.
        :type word: str
        """

        self._word = word

    @property
    def year(self):
        """Gets the year of this Example.


        :return: The year of this Example.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this Example.


        :param year: The year of this Example.
        :type year: int
        """

        self._year = year
