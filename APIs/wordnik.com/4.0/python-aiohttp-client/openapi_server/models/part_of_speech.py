# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PartOfSpeech(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_categories: List[object]=None, roots: List[object]=None, storage_abbr: List[str]=None):
        """PartOfSpeech - a model defined in OpenAPI

        :param all_categories: The all_categories of this PartOfSpeech.
        :param roots: The roots of this PartOfSpeech.
        :param storage_abbr: The storage_abbr of this PartOfSpeech.
        """
        self.openapi_types = {
            'all_categories': List[object],
            'roots': List[object],
            'storage_abbr': List[str]
        }

        self.attribute_map = {
            'all_categories': 'allCategories',
            'roots': 'roots',
            'storage_abbr': 'storageAbbr'
        }

        self._all_categories = all_categories
        self._roots = roots
        self._storage_abbr = storage_abbr

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PartOfSpeech':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PartOfSpeech of this PartOfSpeech.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_categories(self):
        """Gets the all_categories of this PartOfSpeech.


        :return: The all_categories of this PartOfSpeech.
        :rtype: List[object]
        """
        return self._all_categories

    @all_categories.setter
    def all_categories(self, all_categories):
        """Sets the all_categories of this PartOfSpeech.


        :param all_categories: The all_categories of this PartOfSpeech.
        :type all_categories: List[object]
        """

        self._all_categories = all_categories

    @property
    def roots(self):
        """Gets the roots of this PartOfSpeech.


        :return: The roots of this PartOfSpeech.
        :rtype: List[object]
        """
        return self._roots

    @roots.setter
    def roots(self, roots):
        """Sets the roots of this PartOfSpeech.


        :param roots: The roots of this PartOfSpeech.
        :type roots: List[object]
        """

        self._roots = roots

    @property
    def storage_abbr(self):
        """Gets the storage_abbr of this PartOfSpeech.


        :return: The storage_abbr of this PartOfSpeech.
        :rtype: List[str]
        """
        return self._storage_abbr

    @storage_abbr.setter
    def storage_abbr(self, storage_abbr):
        """Sets the storage_abbr of this PartOfSpeech.


        :param storage_abbr: The storage_abbr of this PartOfSpeech.
        :type storage_abbr: List[str]
        """

        self._storage_abbr = storage_abbr
