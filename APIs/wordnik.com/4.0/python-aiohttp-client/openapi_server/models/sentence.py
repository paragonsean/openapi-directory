# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Sentence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display: str=None, document_metadata_id: int=None, has_scored_words: bool=None, id: int=None, rating: int=None, scored_words: List[object]=None):
        """Sentence - a model defined in OpenAPI

        :param display: The display of this Sentence.
        :param document_metadata_id: The document_metadata_id of this Sentence.
        :param has_scored_words: The has_scored_words of this Sentence.
        :param id: The id of this Sentence.
        :param rating: The rating of this Sentence.
        :param scored_words: The scored_words of this Sentence.
        """
        self.openapi_types = {
            'display': str,
            'document_metadata_id': int,
            'has_scored_words': bool,
            'id': int,
            'rating': int,
            'scored_words': List[object]
        }

        self.attribute_map = {
            'display': 'display',
            'document_metadata_id': 'documentMetadataId',
            'has_scored_words': 'hasScoredWords',
            'id': 'id',
            'rating': 'rating',
            'scored_words': 'scoredWords'
        }

        self._display = display
        self._document_metadata_id = document_metadata_id
        self._has_scored_words = has_scored_words
        self._id = id
        self._rating = rating
        self._scored_words = scored_words

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sentence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sentence of this Sentence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display(self):
        """Gets the display of this Sentence.


        :return: The display of this Sentence.
        :rtype: str
        """
        return self._display

    @display.setter
    def display(self, display):
        """Sets the display of this Sentence.


        :param display: The display of this Sentence.
        :type display: str
        """

        self._display = display

    @property
    def document_metadata_id(self):
        """Gets the document_metadata_id of this Sentence.


        :return: The document_metadata_id of this Sentence.
        :rtype: int
        """
        return self._document_metadata_id

    @document_metadata_id.setter
    def document_metadata_id(self, document_metadata_id):
        """Sets the document_metadata_id of this Sentence.


        :param document_metadata_id: The document_metadata_id of this Sentence.
        :type document_metadata_id: int
        """

        self._document_metadata_id = document_metadata_id

    @property
    def has_scored_words(self):
        """Gets the has_scored_words of this Sentence.


        :return: The has_scored_words of this Sentence.
        :rtype: bool
        """
        return self._has_scored_words

    @has_scored_words.setter
    def has_scored_words(self, has_scored_words):
        """Sets the has_scored_words of this Sentence.


        :param has_scored_words: The has_scored_words of this Sentence.
        :type has_scored_words: bool
        """

        self._has_scored_words = has_scored_words

    @property
    def id(self):
        """Gets the id of this Sentence.


        :return: The id of this Sentence.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Sentence.


        :param id: The id of this Sentence.
        :type id: int
        """

        self._id = id

    @property
    def rating(self):
        """Gets the rating of this Sentence.


        :return: The rating of this Sentence.
        :rtype: int
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this Sentence.


        :param rating: The rating of this Sentence.
        :type rating: int
        """

        self._rating = rating

    @property
    def scored_words(self):
        """Gets the scored_words of this Sentence.


        :return: The scored_words of this Sentence.
        :rtype: List[object]
        """
        return self._scored_words

    @scored_words.setter
    def scored_words(self, scored_words):
        """Sets the scored_words of this Sentence.


        :param scored_words: The scored_words of this Sentence.
        :type scored_words: List[object]
        """

        self._scored_words = scored_words
