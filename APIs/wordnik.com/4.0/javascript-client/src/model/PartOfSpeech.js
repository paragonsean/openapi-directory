/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PartOfSpeech model module.
 * @module model/PartOfSpeech
 * @version 4.0
 */
class PartOfSpeech {
    /**
     * Constructs a new <code>PartOfSpeech</code>.
     * @alias module:model/PartOfSpeech
     */
    constructor() { 
        
        PartOfSpeech.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PartOfSpeech</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartOfSpeech} obj Optional instance to populate.
     * @return {module:model/PartOfSpeech} The populated <code>PartOfSpeech</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartOfSpeech();

            if (data.hasOwnProperty('allCategories')) {
                obj['allCategories'] = ApiClient.convertToType(data['allCategories'], [Object]);
            }
            if (data.hasOwnProperty('roots')) {
                obj['roots'] = ApiClient.convertToType(data['roots'], [Object]);
            }
            if (data.hasOwnProperty('storageAbbr')) {
                obj['storageAbbr'] = ApiClient.convertToType(data['storageAbbr'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartOfSpeech</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartOfSpeech</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allCategories'])) {
            throw new Error("Expected the field `allCategories` to be an array in the JSON data but got " + data['allCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['roots'])) {
            throw new Error("Expected the field `roots` to be an array in the JSON data but got " + data['roots']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['storageAbbr'])) {
            throw new Error("Expected the field `storageAbbr` to be an array in the JSON data but got " + data['storageAbbr']);
        }

        return true;
    }


}



/**
 * @member {Array.<Object>} allCategories
 */
PartOfSpeech.prototype['allCategories'] = undefined;

/**
 * @member {Array.<Object>} roots
 */
PartOfSpeech.prototype['roots'] = undefined;

/**
 * @member {Array.<String>} storageAbbr
 */
PartOfSpeech.prototype['storageAbbr'] = undefined;






export default PartOfSpeech;

