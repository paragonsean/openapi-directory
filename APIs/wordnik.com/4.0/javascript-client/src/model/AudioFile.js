/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AudioFile model module.
 * @module model/AudioFile
 * @version 4.0
 */
class AudioFile {
    /**
     * Constructs a new <code>AudioFile</code>.
     * @alias module:model/AudioFile
     * @param id {Number} 
     */
    constructor(id) { 
        
        AudioFile.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>AudioFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioFile} obj Optional instance to populate.
     * @return {module:model/AudioFile} The populated <code>AudioFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioFile();

            if (data.hasOwnProperty('attributionText')) {
                obj['attributionText'] = ApiClient.convertToType(data['attributionText'], 'String');
            }
            if (data.hasOwnProperty('attributionUrl')) {
                obj['attributionUrl'] = ApiClient.convertToType(data['attributionUrl'], 'String');
            }
            if (data.hasOwnProperty('audioType')) {
                obj['audioType'] = ApiClient.convertToType(data['audioType'], 'String');
            }
            if (data.hasOwnProperty('commentCount')) {
                obj['commentCount'] = ApiClient.convertToType(data['commentCount'], 'Number');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('fileUrl')) {
                obj['fileUrl'] = ApiClient.convertToType(data['fileUrl'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('voteAverage')) {
                obj['voteAverage'] = ApiClient.convertToType(data['voteAverage'], 'Number');
            }
            if (data.hasOwnProperty('voteCount')) {
                obj['voteCount'] = ApiClient.convertToType(data['voteCount'], 'Number');
            }
            if (data.hasOwnProperty('voteWeightedAverage')) {
                obj['voteWeightedAverage'] = ApiClient.convertToType(data['voteWeightedAverage'], 'Number');
            }
            if (data.hasOwnProperty('word')) {
                obj['word'] = ApiClient.convertToType(data['word'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioFile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AudioFile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['attributionText'] && !(typeof data['attributionText'] === 'string' || data['attributionText'] instanceof String)) {
            throw new Error("Expected the field `attributionText` to be a primitive type in the JSON string but got " + data['attributionText']);
        }
        // ensure the json data is a string
        if (data['attributionUrl'] && !(typeof data['attributionUrl'] === 'string' || data['attributionUrl'] instanceof String)) {
            throw new Error("Expected the field `attributionUrl` to be a primitive type in the JSON string but got " + data['attributionUrl']);
        }
        // ensure the json data is a string
        if (data['audioType'] && !(typeof data['audioType'] === 'string' || data['audioType'] instanceof String)) {
            throw new Error("Expected the field `audioType` to be a primitive type in the JSON string but got " + data['audioType']);
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['fileUrl'] && !(typeof data['fileUrl'] === 'string' || data['fileUrl'] instanceof String)) {
            throw new Error("Expected the field `fileUrl` to be a primitive type in the JSON string but got " + data['fileUrl']);
        }
        // ensure the json data is a string
        if (data['word'] && !(typeof data['word'] === 'string' || data['word'] instanceof String)) {
            throw new Error("Expected the field `word` to be a primitive type in the JSON string but got " + data['word']);
        }

        return true;
    }


}

AudioFile.RequiredProperties = ["id"];

/**
 * @member {String} attributionText
 */
AudioFile.prototype['attributionText'] = undefined;

/**
 * @member {String} attributionUrl
 */
AudioFile.prototype['attributionUrl'] = undefined;

/**
 * @member {String} audioType
 */
AudioFile.prototype['audioType'] = undefined;

/**
 * @member {Number} commentCount
 */
AudioFile.prototype['commentCount'] = undefined;

/**
 * @member {Date} createdAt
 */
AudioFile.prototype['createdAt'] = undefined;

/**
 * @member {String} createdBy
 */
AudioFile.prototype['createdBy'] = undefined;

/**
 * @member {String} description
 */
AudioFile.prototype['description'] = undefined;

/**
 * @member {Number} duration
 */
AudioFile.prototype['duration'] = undefined;

/**
 * @member {String} fileUrl
 */
AudioFile.prototype['fileUrl'] = undefined;

/**
 * @member {Number} id
 */
AudioFile.prototype['id'] = undefined;

/**
 * @member {Number} voteAverage
 */
AudioFile.prototype['voteAverage'] = undefined;

/**
 * @member {Number} voteCount
 */
AudioFile.prototype['voteCount'] = undefined;

/**
 * @member {Number} voteWeightedAverage
 */
AudioFile.prototype['voteWeightedAverage'] = undefined;

/**
 * @member {String} word
 */
AudioFile.prototype['word'] = undefined;






export default AudioFile;

