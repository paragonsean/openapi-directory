/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiTokenStatus from './model/ApiTokenStatus';
import AudioFile from './model/AudioFile';
import AudioType from './model/AudioType';
import AuthenticationToken from './model/AuthenticationToken';
import Bigram from './model/Bigram';
import Category from './model/Category';
import Citation from './model/Citation';
import ContentProvider from './model/ContentProvider';
import Definition from './model/Definition';
import DefinitionSearchResults from './model/DefinitionSearchResults';
import Example from './model/Example';
import ExampleSearchResults from './model/ExampleSearchResults';
import ExampleUsage from './model/ExampleUsage';
import Facet from './model/Facet';
import FacetValue from './model/FacetValue';
import Frequency from './model/Frequency';
import FrequencySummary from './model/FrequencySummary';
import Label from './model/Label';
import Long from './model/Long';
import Note from './model/Note';
import PartOfSpeech from './model/PartOfSpeech';
import Related from './model/Related';
import Root from './model/Root';
import ScoredWord from './model/ScoredWord';
import Sentence from './model/Sentence';
import SimpleDefinition from './model/SimpleDefinition';
import SimpleExample from './model/SimpleExample';
import StringValue from './model/StringValue';
import Syllable from './model/Syllable';
import TextPron from './model/TextPron';
import User from './model/User';
import WordList from './model/WordList';
import WordListWord from './model/WordListWord';
import WordObject from './model/WordObject';
import WordOfTheDay from './model/WordOfTheDay';
import WordSearchResult from './model/WordSearchResult';
import WordSearchResults from './model/WordSearchResults';
import WordApi from './api/WordApi';
import WordsApi from './api/WordsApi';


/**
* Wordnik is the worlds biggest online English dictionary, by number of words.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Wordnik = require('index'); // See note below*.
* var xxxSvc = new Wordnik.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Wordnik.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Wordnik.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Wordnik.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 4.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiTokenStatus model constructor.
     * @property {module:model/ApiTokenStatus}
     */
    ApiTokenStatus,

    /**
     * The AudioFile model constructor.
     * @property {module:model/AudioFile}
     */
    AudioFile,

    /**
     * The AudioType model constructor.
     * @property {module:model/AudioType}
     */
    AudioType,

    /**
     * The AuthenticationToken model constructor.
     * @property {module:model/AuthenticationToken}
     */
    AuthenticationToken,

    /**
     * The Bigram model constructor.
     * @property {module:model/Bigram}
     */
    Bigram,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The Citation model constructor.
     * @property {module:model/Citation}
     */
    Citation,

    /**
     * The ContentProvider model constructor.
     * @property {module:model/ContentProvider}
     */
    ContentProvider,

    /**
     * The Definition model constructor.
     * @property {module:model/Definition}
     */
    Definition,

    /**
     * The DefinitionSearchResults model constructor.
     * @property {module:model/DefinitionSearchResults}
     */
    DefinitionSearchResults,

    /**
     * The Example model constructor.
     * @property {module:model/Example}
     */
    Example,

    /**
     * The ExampleSearchResults model constructor.
     * @property {module:model/ExampleSearchResults}
     */
    ExampleSearchResults,

    /**
     * The ExampleUsage model constructor.
     * @property {module:model/ExampleUsage}
     */
    ExampleUsage,

    /**
     * The Facet model constructor.
     * @property {module:model/Facet}
     */
    Facet,

    /**
     * The FacetValue model constructor.
     * @property {module:model/FacetValue}
     */
    FacetValue,

    /**
     * The Frequency model constructor.
     * @property {module:model/Frequency}
     */
    Frequency,

    /**
     * The FrequencySummary model constructor.
     * @property {module:model/FrequencySummary}
     */
    FrequencySummary,

    /**
     * The Label model constructor.
     * @property {module:model/Label}
     */
    Label,

    /**
     * The Long model constructor.
     * @property {module:model/Long}
     */
    Long,

    /**
     * The Note model constructor.
     * @property {module:model/Note}
     */
    Note,

    /**
     * The PartOfSpeech model constructor.
     * @property {module:model/PartOfSpeech}
     */
    PartOfSpeech,

    /**
     * The Related model constructor.
     * @property {module:model/Related}
     */
    Related,

    /**
     * The Root model constructor.
     * @property {module:model/Root}
     */
    Root,

    /**
     * The ScoredWord model constructor.
     * @property {module:model/ScoredWord}
     */
    ScoredWord,

    /**
     * The Sentence model constructor.
     * @property {module:model/Sentence}
     */
    Sentence,

    /**
     * The SimpleDefinition model constructor.
     * @property {module:model/SimpleDefinition}
     */
    SimpleDefinition,

    /**
     * The SimpleExample model constructor.
     * @property {module:model/SimpleExample}
     */
    SimpleExample,

    /**
     * The StringValue model constructor.
     * @property {module:model/StringValue}
     */
    StringValue,

    /**
     * The Syllable model constructor.
     * @property {module:model/Syllable}
     */
    Syllable,

    /**
     * The TextPron model constructor.
     * @property {module:model/TextPron}
     */
    TextPron,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The WordList model constructor.
     * @property {module:model/WordList}
     */
    WordList,

    /**
     * The WordListWord model constructor.
     * @property {module:model/WordListWord}
     */
    WordListWord,

    /**
     * The WordObject model constructor.
     * @property {module:model/WordObject}
     */
    WordObject,

    /**
     * The WordOfTheDay model constructor.
     * @property {module:model/WordOfTheDay}
     */
    WordOfTheDay,

    /**
     * The WordSearchResult model constructor.
     * @property {module:model/WordSearchResult}
     */
    WordSearchResult,

    /**
     * The WordSearchResults model constructor.
     * @property {module:model/WordSearchResults}
     */
    WordSearchResults,

    /**
    * The WordApi service constructor.
    * @property {module:api/WordApi}
    */
    WordApi,

    /**
    * The WordsApi service constructor.
    * @property {module:api/WordsApi}
    */
    WordsApi
};
