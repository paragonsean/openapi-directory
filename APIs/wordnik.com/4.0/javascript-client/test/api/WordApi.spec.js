/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Wordnik);
  }
}(this, function(expect, Wordnik) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Wordnik.WordApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WordApi', function() {
    describe('getAudio', function() {
      it('should call getAudio successfully', function(done) {
        //uncomment below and update the code to test getAudio
        //instance.getAudio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDefinitions', function() {
      it('should call getDefinitions successfully', function(done) {
        //uncomment below and update the code to test getDefinitions
        //instance.getDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEtymologies', function() {
      it('should call getEtymologies successfully', function(done) {
        //uncomment below and update the code to test getEtymologies
        //instance.getEtymologies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExamples', function() {
      it('should call getExamples successfully', function(done) {
        //uncomment below and update the code to test getExamples
        //instance.getExamples(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHyphenation', function() {
      it('should call getHyphenation successfully', function(done) {
        //uncomment below and update the code to test getHyphenation
        //instance.getHyphenation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPhrases', function() {
      it('should call getPhrases successfully', function(done) {
        //uncomment below and update the code to test getPhrases
        //instance.getPhrases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRelatedWords', function() {
      it('should call getRelatedWords successfully', function(done) {
        //uncomment below and update the code to test getRelatedWords
        //instance.getRelatedWords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScrabbleScore', function() {
      it('should call getScrabbleScore successfully', function(done) {
        //uncomment below and update the code to test getScrabbleScore
        //instance.getScrabbleScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTextPronunciations', function() {
      it('should call getTextPronunciations successfully', function(done) {
        //uncomment below and update the code to test getTextPronunciations
        //instance.getTextPronunciations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopExample', function() {
      it('should call getTopExample successfully', function(done) {
        //uncomment below and update the code to test getTopExample
        //instance.getTopExample(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWordFrequency', function() {
      it('should call getWordFrequency successfully', function(done) {
        //uncomment below and update the code to test getWordFrequency
        //instance.getWordFrequency(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
