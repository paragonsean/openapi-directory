/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Wordnik);
  }
}(this, function(expect, Wordnik) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Wordnik.AudioFile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AudioFile', function() {
    it('should create an instance of AudioFile', function() {
      // uncomment below and update the code to test AudioFile
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be.a(Wordnik.AudioFile);
    });

    it('should have the property attributionText (base name: "attributionText")', function() {
      // uncomment below and update the code to test the property attributionText
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property attributionUrl (base name: "attributionUrl")', function() {
      // uncomment below and update the code to test the property attributionUrl
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property audioType (base name: "audioType")', function() {
      // uncomment below and update the code to test the property audioType
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property commentCount (base name: "commentCount")', function() {
      // uncomment below and update the code to test the property commentCount
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property createdBy (base name: "createdBy")', function() {
      // uncomment below and update the code to test the property createdBy
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property fileUrl (base name: "fileUrl")', function() {
      // uncomment below and update the code to test the property fileUrl
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property voteAverage (base name: "voteAverage")', function() {
      // uncomment below and update the code to test the property voteAverage
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property voteCount (base name: "voteCount")', function() {
      // uncomment below and update the code to test the property voteCount
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property voteWeightedAverage (base name: "voteWeightedAverage")', function() {
      // uncomment below and update the code to test the property voteWeightedAverage
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

    it('should have the property word (base name: "word")', function() {
      // uncomment below and update the code to test the property word
      //var instance = new Wordnik.AudioFile();
      //expect(instance).to.be();
    });

  });

}));
