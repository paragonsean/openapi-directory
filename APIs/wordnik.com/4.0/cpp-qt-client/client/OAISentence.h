/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISentence.h
 *
 * 
 */

#ifndef OAISentence_H
#define OAISentence_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISentence : public OAIObject {
public:
    OAISentence();
    OAISentence(QString json);
    ~OAISentence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    qint64 getDocumentMetadataId() const;
    void setDocumentMetadataId(const qint64 &document_metadata_id);
    bool is_document_metadata_id_Set() const;
    bool is_document_metadata_id_Valid() const;

    bool isHasScoredWords() const;
    void setHasScoredWords(const bool &has_scored_words);
    bool is_has_scored_words_Set() const;
    bool is_has_scored_words_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getRating() const;
    void setRating(const qint32 &rating);
    bool is_rating_Set() const;
    bool is_rating_Valid() const;

    QList<QJsonValue> getScoredWords() const;
    void setScoredWords(const QList<QJsonValue> &scored_words);
    bool is_scored_words_Set() const;
    bool is_scored_words_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    qint64 m_document_metadata_id;
    bool m_document_metadata_id_isSet;
    bool m_document_metadata_id_isValid;

    bool m_has_scored_words;
    bool m_has_scored_words_isSet;
    bool m_has_scored_words_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_rating;
    bool m_rating_isSet;
    bool m_rating_isValid;

    QList<QJsonValue> m_scored_words;
    bool m_scored_words_isSet;
    bool m_scored_words_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISentence)

#endif // OAISentence_H
