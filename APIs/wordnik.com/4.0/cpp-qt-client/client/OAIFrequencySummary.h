/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFrequencySummary.h
 *
 * 
 */

#ifndef OAIFrequencySummary_H
#define OAIFrequencySummary_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFrequencySummary : public OAIObject {
public:
    OAIFrequencySummary();
    OAIFrequencySummary(QString json);
    ~OAIFrequencySummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QJsonValue> getFrequency() const;
    void setFrequency(const QList<QJsonValue> &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    QString getFrequencyString() const;
    void setFrequencyString(const QString &frequency_string);
    bool is_frequency_string_Set() const;
    bool is_frequency_string_Valid() const;

    qint64 getTotalCount() const;
    void setTotalCount(const qint64 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    qint32 getUnknownYearCount() const;
    void setUnknownYearCount(const qint32 &unknown_year_count);
    bool is_unknown_year_count_Set() const;
    bool is_unknown_year_count_Valid() const;

    QString getWord() const;
    void setWord(const QString &word);
    bool is_word_Set() const;
    bool is_word_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QJsonValue> m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    QString m_frequency_string;
    bool m_frequency_string_isSet;
    bool m_frequency_string_isValid;

    qint64 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;

    qint32 m_unknown_year_count;
    bool m_unknown_year_count_isSet;
    bool m_unknown_year_count_isValid;

    QString m_word;
    bool m_word_isSet;
    bool m_word_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFrequencySummary)

#endif // OAIFrequencySummary_H
