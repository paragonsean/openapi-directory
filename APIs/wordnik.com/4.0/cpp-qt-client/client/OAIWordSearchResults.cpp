/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWordSearchResults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWordSearchResults::OAIWordSearchResults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWordSearchResults::OAIWordSearchResults() {
    this->initializeModel();
}

OAIWordSearchResults::~OAIWordSearchResults() {}

void OAIWordSearchResults::initializeModel() {

    m_search_results_isSet = false;
    m_search_results_isValid = false;

    m_total_results_isSet = false;
    m_total_results_isValid = false;
}

void OAIWordSearchResults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWordSearchResults::fromJsonObject(QJsonObject json) {

    m_search_results_isValid = ::OpenAPI::fromJsonValue(m_search_results, json[QString("searchResults")]);
    m_search_results_isSet = !json[QString("searchResults")].isNull() && m_search_results_isValid;

    m_total_results_isValid = ::OpenAPI::fromJsonValue(m_total_results, json[QString("totalResults")]);
    m_total_results_isSet = !json[QString("totalResults")].isNull() && m_total_results_isValid;
}

QString OAIWordSearchResults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWordSearchResults::asJsonObject() const {
    QJsonObject obj;
    if (m_search_results.size() > 0) {
        obj.insert(QString("searchResults"), ::OpenAPI::toJsonValue(m_search_results));
    }
    if (m_total_results_isSet) {
        obj.insert(QString("totalResults"), ::OpenAPI::toJsonValue(m_total_results));
    }
    return obj;
}

QList<QJsonValue> OAIWordSearchResults::getSearchResults() const {
    return m_search_results;
}
void OAIWordSearchResults::setSearchResults(const QList<QJsonValue> &search_results) {
    m_search_results = search_results;
    m_search_results_isSet = true;
}

bool OAIWordSearchResults::is_search_results_Set() const{
    return m_search_results_isSet;
}

bool OAIWordSearchResults::is_search_results_Valid() const{
    return m_search_results_isValid;
}

qint32 OAIWordSearchResults::getTotalResults() const {
    return m_total_results;
}
void OAIWordSearchResults::setTotalResults(const qint32 &total_results) {
    m_total_results = total_results;
    m_total_results_isSet = true;
}

bool OAIWordSearchResults::is_total_results_Set() const{
    return m_total_results_isSet;
}

bool OAIWordSearchResults::is_total_results_Valid() const{
    return m_total_results_isValid;
}

bool OAIWordSearchResults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_search_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_results_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWordSearchResults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
