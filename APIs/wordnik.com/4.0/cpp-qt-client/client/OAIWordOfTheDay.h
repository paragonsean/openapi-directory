/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWordOfTheDay.h
 *
 * 
 */

#ifndef OAIWordOfTheDay_H
#define OAIWordOfTheDay_H

#include <QJsonObject>

#include "OAIContentProvider.h"
#include <QDate>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContentProvider;

class OAIWordOfTheDay : public OAIObject {
public:
    OAIWordOfTheDay();
    OAIWordOfTheDay(QString json);
    ~OAIWordOfTheDay() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAIContentProvider getContentProvider() const;
    void setContentProvider(const OAIContentProvider &content_provider);
    bool is_content_provider_Set() const;
    bool is_content_provider_Valid() const;

    QDate getCreatedAt() const;
    void setCreatedAt(const QDate &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QList<QJsonValue> getDefinitions() const;
    void setDefinitions(const QList<QJsonValue> &definitions);
    bool is_definitions_Set() const;
    bool is_definitions_Valid() const;

    QList<QJsonValue> getExamples() const;
    void setExamples(const QList<QJsonValue> &examples);
    bool is_examples_Set() const;
    bool is_examples_Valid() const;

    QString getHtmlExtra() const;
    void setHtmlExtra(const QString &html_extra);
    bool is_html_extra_Set() const;
    bool is_html_extra_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getParentId() const;
    void setParentId(const QString &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    QDate getPublishDate() const;
    void setPublishDate(const QDate &publish_date);
    bool is_publish_date_Set() const;
    bool is_publish_date_Valid() const;

    QString getWord() const;
    void setWord(const QString &word);
    bool is_word_Set() const;
    bool is_word_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAIContentProvider m_content_provider;
    bool m_content_provider_isSet;
    bool m_content_provider_isValid;

    QDate m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QList<QJsonValue> m_definitions;
    bool m_definitions_isSet;
    bool m_definitions_isValid;

    QList<QJsonValue> m_examples;
    bool m_examples_isSet;
    bool m_examples_isValid;

    QString m_html_extra;
    bool m_html_extra_isSet;
    bool m_html_extra_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    QDate m_publish_date;
    bool m_publish_date_isSet;
    bool m_publish_date_isValid;

    QString m_word;
    bool m_word_isSet;
    bool m_word_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWordOfTheDay)

#endif // OAIWordOfTheDay_H
