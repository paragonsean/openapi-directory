/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStringValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStringValue::OAIStringValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStringValue::OAIStringValue() {
    this->initializeModel();
}

OAIStringValue::~OAIStringValue() {}

void OAIStringValue::initializeModel() {

    m_word_isSet = false;
    m_word_isValid = false;
}

void OAIStringValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStringValue::fromJsonObject(QJsonObject json) {

    m_word_isValid = ::OpenAPI::fromJsonValue(m_word, json[QString("word")]);
    m_word_isSet = !json[QString("word")].isNull() && m_word_isValid;
}

QString OAIStringValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStringValue::asJsonObject() const {
    QJsonObject obj;
    if (m_word_isSet) {
        obj.insert(QString("word"), ::OpenAPI::toJsonValue(m_word));
    }
    return obj;
}

QString OAIStringValue::getWord() const {
    return m_word;
}
void OAIStringValue::setWord(const QString &word) {
    m_word = word;
    m_word_isSet = true;
}

bool OAIStringValue::is_word_Set() const{
    return m_word_isSet;
}

bool OAIStringValue::is_word_Valid() const{
    return m_word_isValid;
}

bool OAIStringValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_word_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStringValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
