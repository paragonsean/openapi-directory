/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWordListWord.h
 *
 * 
 */

#ifndef OAIWordListWord_H
#define OAIWordListWord_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWordListWord : public OAIObject {
public:
    OAIWordListWord();
    OAIWordListWord(QString json);
    ~OAIWordListWord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getCreatedAt() const;
    void setCreatedAt(const QDate &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint64 getNumberCommentsOnWord() const;
    void setNumberCommentsOnWord(const qint64 &number_comments_on_word);
    bool is_number_comments_on_word_Set() const;
    bool is_number_comments_on_word_Valid() const;

    qint64 getNumberLists() const;
    void setNumberLists(const qint64 &number_lists);
    bool is_number_lists_Set() const;
    bool is_number_lists_Valid() const;

    qint64 getUserId() const;
    void setUserId(const qint64 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getWord() const;
    void setWord(const QString &word);
    bool is_word_Set() const;
    bool is_word_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint64 m_number_comments_on_word;
    bool m_number_comments_on_word_isSet;
    bool m_number_comments_on_word_isValid;

    qint64 m_number_lists;
    bool m_number_lists_isSet;
    bool m_number_lists_isValid;

    qint64 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_word;
    bool m_word_isSet;
    bool m_word_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWordListWord)

#endif // OAIWordListWord_H
