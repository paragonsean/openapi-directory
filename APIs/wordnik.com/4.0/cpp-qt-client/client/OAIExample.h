/**
 * Wordnik
 * Wordnik is the worlds biggest online English dictionary, by number of words
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExample.h
 *
 * 
 */

#ifndef OAIExample_H
#define OAIExample_H

#include <QJsonObject>

#include "OAIContentProvider.h"
#include "OAIScoredWord.h"
#include "OAISentence.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContentProvider;
class OAIScoredWord;
class OAISentence;

class OAIExample : public OAIObject {
public:
    OAIExample();
    OAIExample(QString json);
    ~OAIExample() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getDocumentId() const;
    void setDocumentId(const qint64 &document_id);
    bool is_document_id_Set() const;
    bool is_document_id_Valid() const;

    qint64 getExampleId() const;
    void setExampleId(const qint64 &example_id);
    bool is_example_id_Set() const;
    bool is_example_id_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIContentProvider getProvider() const;
    void setProvider(const OAIContentProvider &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    float getRating() const;
    void setRating(const float &rating);
    bool is_rating_Set() const;
    bool is_rating_Valid() const;

    OAIScoredWord getScore() const;
    void setScore(const OAIScoredWord &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    OAISentence getSentence() const;
    void setSentence(const OAISentence &sentence);
    bool is_sentence_Set() const;
    bool is_sentence_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getWord() const;
    void setWord(const QString &word);
    bool is_word_Set() const;
    bool is_word_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_document_id;
    bool m_document_id_isSet;
    bool m_document_id_isValid;

    qint64 m_example_id;
    bool m_example_id_isSet;
    bool m_example_id_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIContentProvider m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    float m_rating;
    bool m_rating_isSet;
    bool m_rating_isValid;

    OAIScoredWord m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    OAISentence m_sentence;
    bool m_sentence_isSet;
    bool m_sentence_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_word;
    bool m_word_isSet;
    bool m_word_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExample)

#endif // OAIExample_H
