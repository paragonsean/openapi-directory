/**
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustom_or_post_activity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustom_or_post_activity::OAICustom_or_post_activity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustom_or_post_activity::OAICustom_or_post_activity() {
    this->initializeModel();
}

OAICustom_or_post_activity::~OAICustom_or_post_activity() {}

void OAICustom_or_post_activity::initializeModel() {

    m_activity_type_isSet = false;
    m_activity_type_isValid = false;

    m_activity_type_key_isSet = false;
    m_activity_type_key_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_link_text_isSet = false;
    m_link_text_isValid = false;

    m_occurred_at_isSet = false;
    m_occurred_at_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAICustom_or_post_activity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustom_or_post_activity::fromJsonObject(QJsonObject json) {

    m_activity_type_isValid = ::OpenAPI::fromJsonValue(m_activity_type, json[QString("activity_type")]);
    m_activity_type_isSet = !json[QString("activity_type")].isNull() && m_activity_type_isValid;

    m_activity_type_key_isValid = ::OpenAPI::fromJsonValue(m_activity_type_key, json[QString("activity_type_key")]);
    m_activity_type_key_isSet = !json[QString("activity_type_key")].isNull() && m_activity_type_key_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_link_text_isValid = ::OpenAPI::fromJsonValue(m_link_text, json[QString("link_text")]);
    m_link_text_isSet = !json[QString("link_text")].isNull() && m_link_text_isValid;

    m_occurred_at_isValid = ::OpenAPI::fromJsonValue(m_occurred_at, json[QString("occurred_at")]);
    m_occurred_at_isSet = !json[QString("occurred_at")].isNull() && m_occurred_at_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAICustom_or_post_activity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustom_or_post_activity::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_type_isSet) {
        obj.insert(QString("activity_type"), ::OpenAPI::toJsonValue(m_activity_type));
    }
    if (m_activity_type_key_isSet) {
        obj.insert(QString("activity_type_key"), ::OpenAPI::toJsonValue(m_activity_type_key));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_link_text_isSet) {
        obj.insert(QString("link_text"), ::OpenAPI::toJsonValue(m_link_text));
    }
    if (m_occurred_at_isSet) {
        obj.insert(QString("occurred_at"), ::OpenAPI::toJsonValue(m_occurred_at));
    }
    if (m_properties_isSet) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAICustom_or_post_activity::getActivityType() const {
    return m_activity_type;
}
void OAICustom_or_post_activity::setActivityType(const QString &activity_type) {
    m_activity_type = activity_type;
    m_activity_type_isSet = true;
}

bool OAICustom_or_post_activity::is_activity_type_Set() const{
    return m_activity_type_isSet;
}

bool OAICustom_or_post_activity::is_activity_type_Valid() const{
    return m_activity_type_isValid;
}

QString OAICustom_or_post_activity::getActivityTypeKey() const {
    return m_activity_type_key;
}
void OAICustom_or_post_activity::setActivityTypeKey(const QString &activity_type_key) {
    m_activity_type_key = activity_type_key;
    m_activity_type_key_isSet = true;
}

bool OAICustom_or_post_activity::is_activity_type_key_Set() const{
    return m_activity_type_key_isSet;
}

bool OAICustom_or_post_activity::is_activity_type_key_Valid() const{
    return m_activity_type_key_isValid;
}

QString OAICustom_or_post_activity::getDescription() const {
    return m_description;
}
void OAICustom_or_post_activity::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICustom_or_post_activity::is_description_Set() const{
    return m_description_isSet;
}

bool OAICustom_or_post_activity::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICustom_or_post_activity::getKey() const {
    return m_key;
}
void OAICustom_or_post_activity::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAICustom_or_post_activity::is_key_Set() const{
    return m_key_isSet;
}

bool OAICustom_or_post_activity::is_key_Valid() const{
    return m_key_isValid;
}

QString OAICustom_or_post_activity::getLink() const {
    return m_link;
}
void OAICustom_or_post_activity::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAICustom_or_post_activity::is_link_Set() const{
    return m_link_isSet;
}

bool OAICustom_or_post_activity::is_link_Valid() const{
    return m_link_isValid;
}

QString OAICustom_or_post_activity::getLinkText() const {
    return m_link_text;
}
void OAICustom_or_post_activity::setLinkText(const QString &link_text) {
    m_link_text = link_text;
    m_link_text_isSet = true;
}

bool OAICustom_or_post_activity::is_link_text_Set() const{
    return m_link_text_isSet;
}

bool OAICustom_or_post_activity::is_link_text_Valid() const{
    return m_link_text_isValid;
}

QString OAICustom_or_post_activity::getOccurredAt() const {
    return m_occurred_at;
}
void OAICustom_or_post_activity::setOccurredAt(const QString &occurred_at) {
    m_occurred_at = occurred_at;
    m_occurred_at_isSet = true;
}

bool OAICustom_or_post_activity::is_occurred_at_Set() const{
    return m_occurred_at_isSet;
}

bool OAICustom_or_post_activity::is_occurred_at_Valid() const{
    return m_occurred_at_isValid;
}

OAIObject OAICustom_or_post_activity::getProperties() const {
    return m_properties;
}
void OAICustom_or_post_activity::setProperties(const OAIObject &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAICustom_or_post_activity::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAICustom_or_post_activity::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAICustom_or_post_activity::getTitle() const {
    return m_title;
}
void OAICustom_or_post_activity::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICustom_or_post_activity::is_title_Set() const{
    return m_title_isSet;
}

bool OAICustom_or_post_activity::is_title_Valid() const{
    return m_title_isValid;
}

QString OAICustom_or_post_activity::getWeight() const {
    return m_weight;
}
void OAICustom_or_post_activity::setWeight(const QString &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAICustom_or_post_activity::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAICustom_or_post_activity::is_weight_Valid() const{
    return m_weight_isValid;
}

QString OAICustom_or_post_activity::getUrl() const {
    return m_url;
}
void OAICustom_or_post_activity::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAICustom_or_post_activity::is_url_Set() const{
    return m_url_isSet;
}

bool OAICustom_or_post_activity::is_url_Valid() const{
    return m_url_isValid;
}

bool OAICustom_or_post_activity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_activity_type_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_occurred_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustom_or_post_activity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_activity_type_isValid && m_title_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
