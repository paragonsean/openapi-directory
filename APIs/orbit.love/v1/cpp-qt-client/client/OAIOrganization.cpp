/**
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrganization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrganization::OAIOrganization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrganization::OAIOrganization() {
    this->initializeModel();
}

OAIOrganization::~OAIOrganization() {}

void OAIOrganization::initializeModel() {

    m_crm_uid_isSet = false;
    m_crm_uid_isValid = false;

    m_crm_url_isSet = false;
    m_crm_url_isValid = false;

    m_deal_closed_date_isSet = false;
    m_deal_closed_date_isValid = false;

    m_lifecycle_stage_isSet = false;
    m_lifecycle_stage_isValid = false;

    m_owner_email_isSet = false;
    m_owner_email_isValid = false;

    m_owner_name_isSet = false;
    m_owner_name_isValid = false;

    m_price_plan_isSet = false;
    m_price_plan_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;
}

void OAIOrganization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrganization::fromJsonObject(QJsonObject json) {

    m_crm_uid_isValid = ::OpenAPI::fromJsonValue(m_crm_uid, json[QString("crm_uid")]);
    m_crm_uid_isSet = !json[QString("crm_uid")].isNull() && m_crm_uid_isValid;

    m_crm_url_isValid = ::OpenAPI::fromJsonValue(m_crm_url, json[QString("crm_url")]);
    m_crm_url_isSet = !json[QString("crm_url")].isNull() && m_crm_url_isValid;

    m_deal_closed_date_isValid = ::OpenAPI::fromJsonValue(m_deal_closed_date, json[QString("deal_closed_date")]);
    m_deal_closed_date_isSet = !json[QString("deal_closed_date")].isNull() && m_deal_closed_date_isValid;

    m_lifecycle_stage_isValid = ::OpenAPI::fromJsonValue(m_lifecycle_stage, json[QString("lifecycle_stage")]);
    m_lifecycle_stage_isSet = !json[QString("lifecycle_stage")].isNull() && m_lifecycle_stage_isValid;

    m_owner_email_isValid = ::OpenAPI::fromJsonValue(m_owner_email, json[QString("owner_email")]);
    m_owner_email_isSet = !json[QString("owner_email")].isNull() && m_owner_email_isValid;

    m_owner_name_isValid = ::OpenAPI::fromJsonValue(m_owner_name, json[QString("owner_name")]);
    m_owner_name_isSet = !json[QString("owner_name")].isNull() && m_owner_name_isValid;

    m_price_plan_isValid = ::OpenAPI::fromJsonValue(m_price_plan, json[QString("price_plan")]);
    m_price_plan_isSet = !json[QString("price_plan")].isNull() && m_price_plan_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;
}

QString OAIOrganization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrganization::asJsonObject() const {
    QJsonObject obj;
    if (m_crm_uid_isSet) {
        obj.insert(QString("crm_uid"), ::OpenAPI::toJsonValue(m_crm_uid));
    }
    if (m_crm_url_isSet) {
        obj.insert(QString("crm_url"), ::OpenAPI::toJsonValue(m_crm_url));
    }
    if (m_deal_closed_date_isSet) {
        obj.insert(QString("deal_closed_date"), ::OpenAPI::toJsonValue(m_deal_closed_date));
    }
    if (m_lifecycle_stage_isSet) {
        obj.insert(QString("lifecycle_stage"), ::OpenAPI::toJsonValue(m_lifecycle_stage));
    }
    if (m_owner_email_isSet) {
        obj.insert(QString("owner_email"), ::OpenAPI::toJsonValue(m_owner_email));
    }
    if (m_owner_name_isSet) {
        obj.insert(QString("owner_name"), ::OpenAPI::toJsonValue(m_owner_name));
    }
    if (m_price_plan_isSet) {
        obj.insert(QString("price_plan"), ::OpenAPI::toJsonValue(m_price_plan));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    return obj;
}

QString OAIOrganization::getCrmUid() const {
    return m_crm_uid;
}
void OAIOrganization::setCrmUid(const QString &crm_uid) {
    m_crm_uid = crm_uid;
    m_crm_uid_isSet = true;
}

bool OAIOrganization::is_crm_uid_Set() const{
    return m_crm_uid_isSet;
}

bool OAIOrganization::is_crm_uid_Valid() const{
    return m_crm_uid_isValid;
}

QString OAIOrganization::getCrmUrl() const {
    return m_crm_url;
}
void OAIOrganization::setCrmUrl(const QString &crm_url) {
    m_crm_url = crm_url;
    m_crm_url_isSet = true;
}

bool OAIOrganization::is_crm_url_Set() const{
    return m_crm_url_isSet;
}

bool OAIOrganization::is_crm_url_Valid() const{
    return m_crm_url_isValid;
}

QString OAIOrganization::getDealClosedDate() const {
    return m_deal_closed_date;
}
void OAIOrganization::setDealClosedDate(const QString &deal_closed_date) {
    m_deal_closed_date = deal_closed_date;
    m_deal_closed_date_isSet = true;
}

bool OAIOrganization::is_deal_closed_date_Set() const{
    return m_deal_closed_date_isSet;
}

bool OAIOrganization::is_deal_closed_date_Valid() const{
    return m_deal_closed_date_isValid;
}

QString OAIOrganization::getLifecycleStage() const {
    return m_lifecycle_stage;
}
void OAIOrganization::setLifecycleStage(const QString &lifecycle_stage) {
    m_lifecycle_stage = lifecycle_stage;
    m_lifecycle_stage_isSet = true;
}

bool OAIOrganization::is_lifecycle_stage_Set() const{
    return m_lifecycle_stage_isSet;
}

bool OAIOrganization::is_lifecycle_stage_Valid() const{
    return m_lifecycle_stage_isValid;
}

QString OAIOrganization::getOwnerEmail() const {
    return m_owner_email;
}
void OAIOrganization::setOwnerEmail(const QString &owner_email) {
    m_owner_email = owner_email;
    m_owner_email_isSet = true;
}

bool OAIOrganization::is_owner_email_Set() const{
    return m_owner_email_isSet;
}

bool OAIOrganization::is_owner_email_Valid() const{
    return m_owner_email_isValid;
}

QString OAIOrganization::getOwnerName() const {
    return m_owner_name;
}
void OAIOrganization::setOwnerName(const QString &owner_name) {
    m_owner_name = owner_name;
    m_owner_name_isSet = true;
}

bool OAIOrganization::is_owner_name_Set() const{
    return m_owner_name_isSet;
}

bool OAIOrganization::is_owner_name_Valid() const{
    return m_owner_name_isValid;
}

QString OAIOrganization::getPricePlan() const {
    return m_price_plan;
}
void OAIOrganization::setPricePlan(const QString &price_plan) {
    m_price_plan = price_plan;
    m_price_plan_isSet = true;
}

bool OAIOrganization::is_price_plan_Set() const{
    return m_price_plan_isSet;
}

bool OAIOrganization::is_price_plan_Valid() const{
    return m_price_plan_isValid;
}

QString OAIOrganization::getSource() const {
    return m_source;
}
void OAIOrganization::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIOrganization::is_source_Set() const{
    return m_source_isSet;
}

bool OAIOrganization::is_source_Valid() const{
    return m_source_isValid;
}

bool OAIOrganization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_crm_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crm_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deal_closed_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lifecycle_stage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_plan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrganization::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_crm_url_isValid && m_lifecycle_stage_isValid && m_source_isValid && true;
}

} // namespace OpenAPI
