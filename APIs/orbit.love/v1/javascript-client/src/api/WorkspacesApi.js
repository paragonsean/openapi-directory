/**
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Workspaces service.
* @module api/WorkspacesApi
* @version v1
*/
export default class WorkspacesApi {

    /**
    * Constructs a new WorkspacesApi. 
    * @alias module:api/WorkspacesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the workspacesGet operation.
     * @callback module:api/WorkspacesApi~workspacesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all workspaces for the current user
     * @param {module:api/WorkspacesApi~workspacesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    workspacesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/workspaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspacesWorkspaceSlugGet operation.
     * @callback module:api/WorkspacesApi~workspacesWorkspaceSlugGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a workspace
     * @param {String} workspaceSlug 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [includeOrbitLevelCounts] Include the number of members by Orbit Level in the attributes
     * @param {module:api/WorkspacesApi~workspacesWorkspaceSlugGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    workspacesWorkspaceSlugGet(workspaceSlug, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'workspaceSlug' is set
      if (workspaceSlug === undefined || workspaceSlug === null) {
        throw new Error("Missing the required parameter 'workspaceSlug' when calling workspacesWorkspaceSlugGet");
      }

      let pathParams = {
        'workspace_slug': workspaceSlug
      };
      let queryParams = {
        'include_orbit_level_counts': opts['includeOrbitLevelCounts']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/workspaces/{workspace_slug}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
