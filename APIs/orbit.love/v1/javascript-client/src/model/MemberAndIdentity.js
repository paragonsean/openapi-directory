/**
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Identity from './Identity';
import Member from './Member';

/**
 * The MemberAndIdentity model module.
 * @module model/MemberAndIdentity
 * @version v1
 */
class MemberAndIdentity {
    /**
     * Constructs a new <code>MemberAndIdentity</code>.
     * @alias module:model/MemberAndIdentity
     */
    constructor() { 
        
        MemberAndIdentity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberAndIdentity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberAndIdentity} obj Optional instance to populate.
     * @return {module:model/MemberAndIdentity} The populated <code>MemberAndIdentity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberAndIdentity();

            if (data.hasOwnProperty('identity')) {
                obj['identity'] = Identity.constructFromObject(data['identity']);
            }
            if (data.hasOwnProperty('member')) {
                obj['member'] = Member.constructFromObject(data['member']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberAndIdentity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberAndIdentity</code>.
     */
    static validateJSON(data) {
        // validate the optional field `identity`
        if (data['identity']) { // data not null
          Identity.validateJSON(data['identity']);
        }
        // validate the optional field `member`
        if (data['member']) { // data not null
          Member.validateJSON(data['member']);
        }

        return true;
    }


}



/**
 * @member {module:model/Identity} identity
 */
MemberAndIdentity.prototype['identity'] = undefined;

/**
 * @member {module:model/Member} member
 */
MemberAndIdentity.prototype['member'] = undefined;






export default MemberAndIdentity;

