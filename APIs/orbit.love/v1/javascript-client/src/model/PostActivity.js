/**
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostActivity model module.
 * @module model/PostActivity
 * @version v1
 */
class PostActivity {
    /**
     * Constructs a new <code>PostActivity</code>.
     * @alias module:model/PostActivity
     * @param activityType {module:model/PostActivity.ActivityTypeEnum} 
     * @param url {String} The url representing the post
     */
    constructor(activityType, url) { 
        
        PostActivity.initialize(this, activityType, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, activityType, url) { 
        obj['activity_type'] = activityType;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>PostActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostActivity} obj Optional instance to populate.
     * @return {module:model/PostActivity} The populated <code>PostActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostActivity();

            if (data.hasOwnProperty('activity_type')) {
                obj['activity_type'] = ApiClient.convertToType(data['activity_type'], 'String');
            }
            if (data.hasOwnProperty('occurred_at')) {
                obj['occurred_at'] = ApiClient.convertToType(data['occurred_at'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostActivity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostActivity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['activity_type'] && !(typeof data['activity_type'] === 'string' || data['activity_type'] instanceof String)) {
            throw new Error("Expected the field `activity_type` to be a primitive type in the JSON string but got " + data['activity_type']);
        }
        // ensure the json data is a string
        if (data['occurred_at'] && !(typeof data['occurred_at'] === 'string' || data['occurred_at'] instanceof String)) {
            throw new Error("Expected the field `occurred_at` to be a primitive type in the JSON string but got " + data['occurred_at']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

PostActivity.RequiredProperties = ["activity_type", "url"];

/**
 * @member {module:model/PostActivity.ActivityTypeEnum} activity_type
 */
PostActivity.prototype['activity_type'] = undefined;

/**
 * The date and time at which the content was published; defaults to now
 * @member {String} occurred_at
 */
PostActivity.prototype['occurred_at'] = undefined;

/**
 * The url representing the post
 * @member {String} url
 */
PostActivity.prototype['url'] = undefined;





/**
 * Allowed values for the <code>activity_type</code> property.
 * @enum {String}
 * @readonly
 */
PostActivity['ActivityTypeEnum'] = {

    /**
     * value: "content"
     * @const
     */
    "content": "content"
};



export default PostActivity;

