/**
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookSubscription model module.
 * @module model/WebhookSubscription
 * @version v1
 */
class WebhookSubscription {
    /**
     * Constructs a new <code>WebhookSubscription</code>.
     * @alias module:model/WebhookSubscription
     * @param eventType {String} 
     * @param name {String} 
     * @param url {String} 
     */
    constructor(eventType, name, url) { 
        
        WebhookSubscription.initialize(this, eventType, name, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventType, name, url) { 
        obj['event_type'] = eventType;
        obj['name'] = name;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>WebhookSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookSubscription} obj Optional instance to populate.
     * @return {module:model/WebhookSubscription} The populated <code>WebhookSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookSubscription();

            if (data.hasOwnProperty('activity_tags')) {
                obj['activity_tags'] = ApiClient.convertToType(data['activity_tags'], ['String']);
            }
            if (data.hasOwnProperty('activity_types')) {
                obj['activity_types'] = ApiClient.convertToType(data['activity_types'], ['String']);
            }
            if (data.hasOwnProperty('event_type')) {
                obj['event_type'] = ApiClient.convertToType(data['event_type'], 'String');
            }
            if (data.hasOwnProperty('member_tags')) {
                obj['member_tags'] = ApiClient.convertToType(data['member_tags'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookSubscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookSubscription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookSubscription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['activity_tags'])) {
            throw new Error("Expected the field `activity_tags` to be an array in the JSON data but got " + data['activity_tags']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['activity_types'])) {
            throw new Error("Expected the field `activity_types` to be an array in the JSON data but got " + data['activity_types']);
        }
        // ensure the json data is a string
        if (data['event_type'] && !(typeof data['event_type'] === 'string' || data['event_type'] instanceof String)) {
            throw new Error("Expected the field `event_type` to be a primitive type in the JSON string but got " + data['event_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['member_tags'])) {
            throw new Error("Expected the field `member_tags` to be an array in the JSON data but got " + data['member_tags']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

WebhookSubscription.RequiredProperties = ["event_type", "name", "url"];

/**
 * @member {Array.<String>} activity_tags
 */
WebhookSubscription.prototype['activity_tags'] = undefined;

/**
 * @member {Array.<String>} activity_types
 */
WebhookSubscription.prototype['activity_types'] = undefined;

/**
 * @member {String} event_type
 */
WebhookSubscription.prototype['event_type'] = undefined;

/**
 * @member {Array.<String>} member_tags
 */
WebhookSubscription.prototype['member_tags'] = undefined;

/**
 * @member {String} name
 */
WebhookSubscription.prototype['name'] = undefined;

/**
 * @member {String} secret
 */
WebhookSubscription.prototype['secret'] = undefined;

/**
 * @member {String} url
 */
WebhookSubscription.prototype['url'] = undefined;






export default WebhookSubscription;

