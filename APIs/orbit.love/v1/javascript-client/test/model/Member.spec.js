/**
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrbitApi);
  }
}(this, function(expect, OrbitApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrbitApi.Member();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Member', function() {
    it('should create an instance of Member', function() {
      // uncomment below and update the code to test Member
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be.a(OrbitApi.Member);
    });

    it('should have the property bio (base name: "bio")', function() {
      // uncomment below and update the code to test the property bio
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property birthday (base name: "birthday")', function() {
      // uncomment below and update the code to test the property birthday
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property devto (base name: "devto")', function() {
      // uncomment below and update the code to test the property devto
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property github (base name: "github")', function() {
      // uncomment below and update the code to test the property github
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property linkedin (base name: "linkedin")', function() {
      // uncomment below and update the code to test the property linkedin
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property pronouns (base name: "pronouns")', function() {
      // uncomment below and update the code to test the property pronouns
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddress (base name: "shipping_address")', function() {
      // uncomment below and update the code to test the property shippingAddress
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property slug (base name: "slug")', function() {
      // uncomment below and update the code to test the property slug
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property tagList (base name: "tag_list")', function() {
      // uncomment below and update the code to test the property tagList
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property tagsToAdd (base name: "tags_to_add")', function() {
      // uncomment below and update the code to test the property tagsToAdd
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property teammate (base name: "teammate")', function() {
      // uncomment below and update the code to test the property teammate
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property tshirt (base name: "tshirt")', function() {
      // uncomment below and update the code to test the property tshirt
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property twitter (base name: "twitter")', function() {
      // uncomment below and update the code to test the property twitter
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new OrbitApi.Member();
      //expect(instance).to.be();
    });

  });

}));
