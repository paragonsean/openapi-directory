/*
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Activity;
import org.openapitools.client.model.ActivityAndIdentity;
import org.openapitools.client.model.CustomOrPostActivity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ActivitiesApi
 */
@Disabled
public class ActivitiesApiTest {

    private final ActivitiesApi api = new ActivitiesApi();

    /**
     * List activities for a workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugActivitiesGetTest() throws ApiException {
        String workspaceSlug = null;
        String affiliation = null;
        String memberTags = null;
        String orbit = null;
        String activityType = null;
        String identity = null;
        String company = null;
        String title = null;
        String regions = null;
        String countries = null;
        String cities = null;
        String startDate = null;
        String endDate = null;
        String relative = null;
        String page = null;
        String direction = null;
        String items = null;
        String sort = null;
        String type = null;
        api.workspaceSlugActivitiesGet(workspaceSlug, affiliation, memberTags, orbit, activityType, identity, company, title, regions, countries, cities, startDate, endDate, relative, page, direction, items, sort, type);
        // TODO: test validations
    }

    /**
     * Get an activity in the workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugActivitiesIdGetTest() throws ApiException {
        String workspaceSlug = null;
        String id = null;
        api.workspaceSlugActivitiesIdGet(workspaceSlug, id);
        // TODO: test validations
    }

    /**
     * Create a Custom or a Content activity for a new or existing member
     *
     * Use this method when you know an identity of the member (github, email, twitter, etc.) but not their Orbit ID. Pass fields in the member object to update the member in addition to creating the activity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugActivitiesPostTest() throws ApiException {
        String workspaceSlug = null;
        ActivityAndIdentity activityAndIdentity = null;
        api.workspaceSlugActivitiesPost(workspaceSlug, activityAndIdentity);
        // TODO: test validations
    }

    /**
     * List activities for a member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugActivitiesGetTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        String page = null;
        String direction = null;
        String items = null;
        String sort = null;
        String activityType = null;
        String type = null;
        api.workspaceSlugMembersMemberSlugActivitiesGet(workspaceSlug, memberSlug, page, direction, items, sort, activityType, type);
        // TODO: test validations
    }

    /**
     * Delete a post activity
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugActivitiesIdDeleteTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        String id = null;
        api.workspaceSlugMembersMemberSlugActivitiesIdDelete(workspaceSlug, memberSlug, id);
        // TODO: test validations
    }

    /**
     * Update a custom activity for a member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugActivitiesIdPutTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        String id = null;
        Activity activity = null;
        api.workspaceSlugMembersMemberSlugActivitiesIdPut(workspaceSlug, memberSlug, id, activity);
        // TODO: test validations
    }

    /**
     * Create a Custom or a Content activity for a member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugActivitiesPostTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        CustomOrPostActivity customOrPostActivity = null;
        api.workspaceSlugMembersMemberSlugActivitiesPost(workspaceSlug, memberSlug, customOrPostActivity);
        // TODO: test validations
    }

    /**
     * List member activities in an organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugOrganizationsOrganizationIdActivitiesGetTest() throws ApiException {
        String workspaceSlug = null;
        String organizationId = null;
        String page = null;
        String direction = null;
        String items = null;
        String sort = null;
        String activityType = null;
        api.workspaceSlugOrganizationsOrganizationIdActivitiesGet(workspaceSlug, organizationId, page, direction, items, sort, activityType);
        // TODO: test validations
    }

}
