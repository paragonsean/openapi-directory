/*
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Identity;
import org.openapitools.client.model.Member;
import org.openapitools.client.model.MemberAndIdentity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MembersApi
 */
@Disabled
public class MembersApiTest {

    private final MembersApi api = new MembersApi();

    /**
     * Find a member by an identity
     *
     * Provide a source and one of username/uid/email params to return a member with that identity, if one exists. Common values for source include github, twitter, and email.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersFindGetTest() throws ApiException {
        String workspaceSlug = null;
        String source = null;
        String sourceHost = null;
        String uid = null;
        String username = null;
        String email = null;
        String github = null;
        api.workspaceSlugMembersFindGet(workspaceSlug, source, sourceHost, uid, username, email, github);
        // TODO: test validations
    }

    /**
     * List members in a workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersGetTest() throws ApiException {
        String workspaceSlug = null;
        String affiliation = null;
        String memberTags = null;
        String orbit = null;
        String activityType = null;
        String identity = null;
        String company = null;
        String title = null;
        String regions = null;
        String countries = null;
        String cities = null;
        String startDate = null;
        String endDate = null;
        String relative = null;
        String query = null;
        String page = null;
        String direction = null;
        String items = null;
        String activitiesCountMin = null;
        String activitiesCountMax = null;
        String sort = null;
        String type = null;
        api.workspaceSlugMembersGet(workspaceSlug, affiliation, memberTags, orbit, activityType, identity, company, title, regions, countries, cities, startDate, endDate, relative, query, page, direction, items, activitiesCountMin, activitiesCountMax, sort, type);
        // TODO: test validations
    }

    /**
     * Delete a member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugDeleteTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        api.workspaceSlugMembersMemberSlugDelete(workspaceSlug, memberSlug);
        // TODO: test validations
    }

    /**
     * Get a member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugGetTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        api.workspaceSlugMembersMemberSlugGet(workspaceSlug, memberSlug);
        // TODO: test validations
    }

    /**
     * Remove identity from a member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugIdentitiesDeleteTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        Identity identity = null;
        api.workspaceSlugMembersMemberSlugIdentitiesDelete(workspaceSlug, memberSlug, identity);
        // TODO: test validations
    }

    /**
     * Add identity to a member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugIdentitiesPostTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        Identity identity = null;
        api.workspaceSlugMembersMemberSlugIdentitiesPost(workspaceSlug, memberSlug, identity);
        // TODO: test validations
    }

    /**
     * Update a member
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersMemberSlugPutTest() throws ApiException {
        String workspaceSlug = null;
        String memberSlug = null;
        Member member = null;
        api.workspaceSlugMembersMemberSlugPut(workspaceSlug, memberSlug, member);
        // TODO: test validations
    }

    /**
     * Create or update a member
     *
     * This method is useful when you know a member&#39;s identity in another system and want to create or update the corresponding Orbit member. Identities can be specified in the identity object or member attributes like member.github. If no member exists, a new member will be created and linked to any provided identities.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugMembersPostTest() throws ApiException {
        String workspaceSlug = null;
        MemberAndIdentity memberAndIdentity = null;
        api.workspaceSlugMembersPost(workspaceSlug, memberAndIdentity);
        // TODO: test validations
    }

    /**
     * List members in an organization
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workspaceSlugOrganizationsOrganizationIdMembersGetTest() throws ApiException {
        String workspaceSlug = null;
        String organizationId = null;
        String page = null;
        String items = null;
        api.workspaceSlugOrganizationsOrganizationIdMembersGet(workspaceSlug, organizationId, page, items);
        // TODO: test validations
    }

}
