/*
 * Orbit API
 * Please see the complete Orbit API documentation at [https://api.orbit.love/](https://api.orbit.love/).
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Organization
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:44.660005-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Organization {
  public static final String SERIALIZED_NAME_CRM_UID = "crm_uid";
  @SerializedName(SERIALIZED_NAME_CRM_UID)
  private String crmUid;

  public static final String SERIALIZED_NAME_CRM_URL = "crm_url";
  @SerializedName(SERIALIZED_NAME_CRM_URL)
  private String crmUrl;

  public static final String SERIALIZED_NAME_DEAL_CLOSED_DATE = "deal_closed_date";
  @SerializedName(SERIALIZED_NAME_DEAL_CLOSED_DATE)
  private String dealClosedDate;

  public static final String SERIALIZED_NAME_LIFECYCLE_STAGE = "lifecycle_stage";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE_STAGE)
  private String lifecycleStage;

  public static final String SERIALIZED_NAME_OWNER_EMAIL = "owner_email";
  @SerializedName(SERIALIZED_NAME_OWNER_EMAIL)
  private String ownerEmail;

  public static final String SERIALIZED_NAME_OWNER_NAME = "owner_name";
  @SerializedName(SERIALIZED_NAME_OWNER_NAME)
  private String ownerName;

  public static final String SERIALIZED_NAME_PRICE_PLAN = "price_plan";
  @SerializedName(SERIALIZED_NAME_PRICE_PLAN)
  private String pricePlan;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public Organization() {
  }

  public Organization crmUid(String crmUid) {
    this.crmUid = crmUid;
    return this;
  }

  /**
   * The unique identifier of the organization in your CRM.
   * @return crmUid
   */
  @javax.annotation.Nullable
  public String getCrmUid() {
    return crmUid;
  }

  public void setCrmUid(String crmUid) {
    this.crmUid = crmUid;
  }


  public Organization crmUrl(String crmUrl) {
    this.crmUrl = crmUrl;
    return this;
  }

  /**
   * A link to the organization profile in your CRM.
   * @return crmUrl
   */
  @javax.annotation.Nonnull
  public String getCrmUrl() {
    return crmUrl;
  }

  public void setCrmUrl(String crmUrl) {
    this.crmUrl = crmUrl;
  }


  public Organization dealClosedDate(String dealClosedDate) {
    this.dealClosedDate = dealClosedDate;
    return this;
  }

  /**
   * The date the organization became a customer.
   * @return dealClosedDate
   */
  @javax.annotation.Nullable
  public String getDealClosedDate() {
    return dealClosedDate;
  }

  public void setDealClosedDate(String dealClosedDate) {
    this.dealClosedDate = dealClosedDate;
  }


  public Organization lifecycleStage(String lifecycleStage) {
    this.lifecycleStage = lifecycleStage;
    return this;
  }

  /**
   * The current stage of the organization in the marketing or sales process.
   * @return lifecycleStage
   */
  @javax.annotation.Nonnull
  public String getLifecycleStage() {
    return lifecycleStage;
  }

  public void setLifecycleStage(String lifecycleStage) {
    this.lifecycleStage = lifecycleStage;
  }


  public Organization ownerEmail(String ownerEmail) {
    this.ownerEmail = ownerEmail;
    return this;
  }

  /**
   * The email of the team member who is in charge of the organization.
   * @return ownerEmail
   */
  @javax.annotation.Nullable
  public String getOwnerEmail() {
    return ownerEmail;
  }

  public void setOwnerEmail(String ownerEmail) {
    this.ownerEmail = ownerEmail;
  }


  public Organization ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

  /**
   * The name of the team member who is in charge of the organization.
   * @return ownerName
   */
  @javax.annotation.Nullable
  public String getOwnerName() {
    return ownerName;
  }

  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public Organization pricePlan(String pricePlan) {
    this.pricePlan = pricePlan;
    return this;
  }

  /**
   * The pricing plan the organization is on.
   * @return pricePlan
   */
  @javax.annotation.Nullable
  public String getPricePlan() {
    return pricePlan;
  }

  public void setPricePlan(String pricePlan) {
    this.pricePlan = pricePlan;
  }


  public Organization source(String source) {
    this.source = source;
    return this;
  }

  /**
   * The name of the CRM you use for tracking the organization.
   * @return source
   */
  @javax.annotation.Nonnull
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return Objects.equals(this.crmUid, organization.crmUid) &&
        Objects.equals(this.crmUrl, organization.crmUrl) &&
        Objects.equals(this.dealClosedDate, organization.dealClosedDate) &&
        Objects.equals(this.lifecycleStage, organization.lifecycleStage) &&
        Objects.equals(this.ownerEmail, organization.ownerEmail) &&
        Objects.equals(this.ownerName, organization.ownerName) &&
        Objects.equals(this.pricePlan, organization.pricePlan) &&
        Objects.equals(this.source, organization.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crmUid, crmUrl, dealClosedDate, lifecycleStage, ownerEmail, ownerName, pricePlan, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    sb.append("    crmUid: ").append(toIndentedString(crmUid)).append("\n");
    sb.append("    crmUrl: ").append(toIndentedString(crmUrl)).append("\n");
    sb.append("    dealClosedDate: ").append(toIndentedString(dealClosedDate)).append("\n");
    sb.append("    lifecycleStage: ").append(toIndentedString(lifecycleStage)).append("\n");
    sb.append("    ownerEmail: ").append(toIndentedString(ownerEmail)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    pricePlan: ").append(toIndentedString(pricePlan)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("crm_uid");
    openapiFields.add("crm_url");
    openapiFields.add("deal_closed_date");
    openapiFields.add("lifecycle_stage");
    openapiFields.add("owner_email");
    openapiFields.add("owner_name");
    openapiFields.add("price_plan");
    openapiFields.add("source");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("crm_url");
    openapiRequiredFields.add("lifecycle_stage");
    openapiRequiredFields.add("source");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Organization
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Organization.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Organization is not found in the empty JSON string", Organization.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Organization.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Organization` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Organization.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("crm_uid") != null && !jsonObj.get("crm_uid").isJsonNull()) && !jsonObj.get("crm_uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crm_uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crm_uid").toString()));
      }
      if (!jsonObj.get("crm_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crm_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crm_url").toString()));
      }
      if ((jsonObj.get("deal_closed_date") != null && !jsonObj.get("deal_closed_date").isJsonNull()) && !jsonObj.get("deal_closed_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deal_closed_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deal_closed_date").toString()));
      }
      if (!jsonObj.get("lifecycle_stage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lifecycle_stage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lifecycle_stage").toString()));
      }
      if ((jsonObj.get("owner_email") != null && !jsonObj.get("owner_email").isJsonNull()) && !jsonObj.get("owner_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_email").toString()));
      }
      if ((jsonObj.get("owner_name") != null && !jsonObj.get("owner_name").isJsonNull()) && !jsonObj.get("owner_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_name").toString()));
      }
      if ((jsonObj.get("price_plan") != null && !jsonObj.get("price_plan").isJsonNull()) && !jsonObj.get("price_plan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `price_plan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("price_plan").toString()));
      }
      if (!jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Organization.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Organization' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Organization> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Organization.class));

       return (TypeAdapter<T>) new TypeAdapter<Organization>() {
           @Override
           public void write(JsonWriter out, Organization value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Organization read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Organization given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Organization
   * @throws IOException if the JSON string is invalid with respect to Organization
   */
  public static Organization fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Organization.class);
  }

  /**
   * Convert an instance of Organization to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

