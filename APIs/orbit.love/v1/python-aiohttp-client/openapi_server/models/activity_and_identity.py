# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_and_identity_activity import ActivityAndIdentityActivity
from openapi_server.models.identity import Identity
from openapi_server import util


class ActivityAndIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity: ActivityAndIdentityActivity=None, identity: Identity=None):
        """ActivityAndIdentity - a model defined in OpenAPI

        :param activity: The activity of this ActivityAndIdentity.
        :param identity: The identity of this ActivityAndIdentity.
        """
        self.openapi_types = {
            'activity': ActivityAndIdentityActivity,
            'identity': Identity
        }

        self.attribute_map = {
            'activity': 'activity',
            'identity': 'identity'
        }

        self._activity = activity
        self._identity = identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityAndIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The activity_and_identity of this ActivityAndIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity(self):
        """Gets the activity of this ActivityAndIdentity.


        :return: The activity of this ActivityAndIdentity.
        :rtype: ActivityAndIdentityActivity
        """
        return self._activity

    @activity.setter
    def activity(self, activity):
        """Sets the activity of this ActivityAndIdentity.


        :param activity: The activity of this ActivityAndIdentity.
        :type activity: ActivityAndIdentityActivity
        """

        self._activity = activity

    @property
    def identity(self):
        """Gets the identity of this ActivityAndIdentity.


        :return: The identity of this ActivityAndIdentity.
        :rtype: Identity
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this ActivityAndIdentity.


        :param identity: The identity of this ActivityAndIdentity.
        :type identity: Identity
        """

        self._identity = identity
