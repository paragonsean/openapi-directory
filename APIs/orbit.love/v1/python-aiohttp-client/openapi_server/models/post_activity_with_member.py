# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.member import Member
from openapi_server import util


class PostActivityWithMember(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_type: str=None, occurred_at: str=None, url: str=None, member: Member=None):
        """PostActivityWithMember - a model defined in OpenAPI

        :param activity_type: The activity_type of this PostActivityWithMember.
        :param occurred_at: The occurred_at of this PostActivityWithMember.
        :param url: The url of this PostActivityWithMember.
        :param member: The member of this PostActivityWithMember.
        """
        self.openapi_types = {
            'activity_type': str,
            'occurred_at': str,
            'url': str,
            'member': Member
        }

        self.attribute_map = {
            'activity_type': 'activity_type',
            'occurred_at': 'occurred_at',
            'url': 'url',
            'member': 'member'
        }

        self._activity_type = activity_type
        self._occurred_at = occurred_at
        self._url = url
        self._member = member

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostActivityWithMember':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The post_activity_with_member of this PostActivityWithMember.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_type(self):
        """Gets the activity_type of this PostActivityWithMember.


        :return: The activity_type of this PostActivityWithMember.
        :rtype: str
        """
        return self._activity_type

    @activity_type.setter
    def activity_type(self, activity_type):
        """Sets the activity_type of this PostActivityWithMember.


        :param activity_type: The activity_type of this PostActivityWithMember.
        :type activity_type: str
        """
        allowed_values = ["content"]  # noqa: E501
        if activity_type not in allowed_values:
            raise ValueError(
                "Invalid value for `activity_type` ({0}), must be one of {1}"
                .format(activity_type, allowed_values)
            )

        self._activity_type = activity_type

    @property
    def occurred_at(self):
        """Gets the occurred_at of this PostActivityWithMember.

        The date and time at which the content was published; defaults to now

        :return: The occurred_at of this PostActivityWithMember.
        :rtype: str
        """
        return self._occurred_at

    @occurred_at.setter
    def occurred_at(self, occurred_at):
        """Sets the occurred_at of this PostActivityWithMember.

        The date and time at which the content was published; defaults to now

        :param occurred_at: The occurred_at of this PostActivityWithMember.
        :type occurred_at: str
        """

        self._occurred_at = occurred_at

    @property
    def url(self):
        """Gets the url of this PostActivityWithMember.

        The url representing the post

        :return: The url of this PostActivityWithMember.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PostActivityWithMember.

        The url representing the post

        :param url: The url of this PostActivityWithMember.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url

    @property
    def member(self):
        """Gets the member of this PostActivityWithMember.


        :return: The member of this PostActivityWithMember.
        :rtype: Member
        """
        return self._member

    @member.setter
    def member(self, member):
        """Sets the member of this PostActivityWithMember.


        :param member: The member of this PostActivityWithMember.
        :type member: Member
        """

        self._member = member
