/**
 * Routing
 * Routing consists of the following service: <b>Calculate Route</b> Calculates a route between an origin and a destination, passing through waypoints (if specified). Additional routing parameters like traffic, avoidance conditions, departure/arrival time etc. can be taken into account. <b>Calculate Reachable Range</b> Calculates a set of locations that can be reached from the origin point, subject to the available fuel or energy budget that is specified in the request.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CalculateRoutePostDataParametersSupportingPointsInner model module.
 * @module model/CalculateRoutePostDataParametersSupportingPointsInner
 * @version 1.0.0
 */
class CalculateRoutePostDataParametersSupportingPointsInner {
    /**
     * Constructs a new <code>CalculateRoutePostDataParametersSupportingPointsInner</code>.
     * @alias module:model/CalculateRoutePostDataParametersSupportingPointsInner
     */
    constructor() { 
        
        CalculateRoutePostDataParametersSupportingPointsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CalculateRoutePostDataParametersSupportingPointsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CalculateRoutePostDataParametersSupportingPointsInner} obj Optional instance to populate.
     * @return {module:model/CalculateRoutePostDataParametersSupportingPointsInner} The populated <code>CalculateRoutePostDataParametersSupportingPointsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CalculateRoutePostDataParametersSupportingPointsInner();

            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'String');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CalculateRoutePostDataParametersSupportingPointsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CalculateRoutePostDataParametersSupportingPointsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['latitude'] && !(typeof data['latitude'] === 'string' || data['latitude'] instanceof String)) {
            throw new Error("Expected the field `latitude` to be a primitive type in the JSON string but got " + data['latitude']);
        }
        // ensure the json data is a string
        if (data['longitude'] && !(typeof data['longitude'] === 'string' || data['longitude'] instanceof String)) {
            throw new Error("Expected the field `longitude` to be a primitive type in the JSON string but got " + data['longitude']);
        }

        return true;
    }


}



/**
 * @member {String} latitude
 */
CalculateRoutePostDataParametersSupportingPointsInner.prototype['latitude'] = undefined;

/**
 * @member {String} longitude
 */
CalculateRoutePostDataParametersSupportingPointsInner.prototype['longitude'] = undefined;






export default CalculateRoutePostDataParametersSupportingPointsInner;

