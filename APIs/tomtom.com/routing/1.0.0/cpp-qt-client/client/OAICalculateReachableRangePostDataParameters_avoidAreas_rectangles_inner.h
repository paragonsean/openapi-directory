/**
 * Routing
 * Routing consists of the following service: <b>Calculate Route</b> Calculates a route between an origin and a destination, passing through waypoints (if specified). Additional routing parameters like traffic, avoidance conditions, departure/arrival time etc. can be taken into account. <b>Calculate Reachable Range</b> Calculates a set of locations that can be reached from the origin point, subject to the available fuel or energy budget that is specified in the request.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner.h
 *
 * 
 */

#ifndef OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_H
#define OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_H

#include <QJsonObject>

#include "OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_northEastCorner.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_northEastCorner;

class OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner : public OAIObject {
public:
    OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner();
    OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner(QString json);
    ~OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_northEastCorner getNorthEastCorner() const;
    void setNorthEastCorner(const OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_northEastCorner &north_east_corner);
    bool is_north_east_corner_Set() const;
    bool is_north_east_corner_Valid() const;

    OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_northEastCorner getSouthWestCorner() const;
    void setSouthWestCorner(const OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_northEastCorner &south_west_corner);
    bool is_south_west_corner_Set() const;
    bool is_south_west_corner_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_northEastCorner m_north_east_corner;
    bool m_north_east_corner_isSet;
    bool m_north_east_corner_isValid;

    OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_northEastCorner m_south_west_corner;
    bool m_south_west_corner_isSet;
    bool m_south_west_corner_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner)

#endif // OAICalculateReachableRangePostDataParameters_avoidAreas_rectangles_inner_H
