/*
 * Maps
 * The Maps API web services suite offers the following APIs:   - Raster   The Maps Raster API renders map data that is divided into gridded sections called tiles. Tiles are square images (png or jpg format) in various sizes which are available at 19 different zoom levels, ranging from 0 to 20. For zoom level 0, the entire earth is displayed on one single tile, while at zoom level 20, the world is divided into 2<sup>40</sup> tiles.   - Vector   Similar to Maps Raster API, the Maps Vector API serves data on different zoom level ranging from 0 to 22. For zoom level 0, the entire earth is displayed on one single tile, while at zoom level 22, the world is divided into 2<sup>44</sup> tiles.   The Maps Vector Service delivers geographic map data packaged in a vector representation of squared sections called vector tiles. Each tile includes pre-defined collections of map features (points, lines, road shapes, water polygons, building footprints, ect.) delivered in one of the specified vector formats. Format of the tile is formally described using protobuf schema.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WmsWmtsApi
 */
@Disabled
public class WmsWmtsApiTest {

    private final WmsWmtsApi api = new WmsWmtsApi();

    /**
     * GetCapabilities
     *
     * The GetCapabilities call is part of TomTom&#39;s implementation of version 1.1.1 the Web Map Service (WMS). It provides descriptions of the other calls that are available in the implementation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCapabilitiesTest() throws ApiException {
        Integer versionNumber = null;
        String service = null;
        String request = null;
        String version = null;
        api.getCapabilities(versionNumber, service, request, version);
        // TODO: test validations
    }

    /**
     * GetMap
     *
     * The GetMap call implements the Web Map Service 1.1.1 standard to access TomTom raster map tiles. This service is described in the response to the GetCapabilities API call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMapTest() throws ApiException {
        Integer versionNumber = null;
        String request = null;
        String srs = null;
        String bbox = null;
        Integer width = null;
        Integer height = null;
        String format = null;
        String layers = null;
        String version = null;
        String styles = null;
        String service = null;
        api.getMap(versionNumber, request, srs, bbox, width, height, format, layers, version, styles, service);
        // TODO: test validations
    }

    /**
     * WMTS
     *
     * The WMTS GetCapabilities call implements version 1.0.0 of the &lt;a href&#x3D;\&quot;http://www.opengeospatial.org/standards/wmts\&quot;&gt;Web Map Tile Service&lt;/a&gt; (WMTS) standard. It returns metadata that allows compatible calling systems to construct calls to TomTom&#39;s raster map tile service. See the &lt;a href&#x3D;\&quot;/maps-api/maps-api-documentation-raster/wmts\&quot;&gt;documentation&lt;/a&gt; for more information on WMTS.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mapVersionNumberWmtsKeyWmtsVersionWMTSCapabilitiesXmlGetTest() throws ApiException {
        Integer versionNumber = null;
        String key = null;
        String wmtsVersion = null;
        api.mapVersionNumberWmtsKeyWmtsVersionWMTSCapabilitiesXmlGet(versionNumber, key, wmtsVersion);
        // TODO: test validations
    }

}
