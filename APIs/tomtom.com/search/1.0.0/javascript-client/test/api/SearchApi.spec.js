/**
 * Search
 * Search API is a RESTful API that allows developers to run a single line fuzzy search for addresses and POIs. Search API returns the latitude/longitude of a specific address, cross street, geographic feature, or point of interest (POI).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Search);
  }
}(this, function(expect, Search) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Search.SearchApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SearchApi', function() {
    describe('searchVersionNumberCSCategoryExtGet', function() {
      it('should call searchVersionNumberCSCategoryExtGet successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberCSCategoryExtGet
        //instance.searchVersionNumberCSCategoryExtGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberCategorySearchQueryExtGet', function() {
      it('should call searchVersionNumberCategorySearchQueryExtGet successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberCategorySearchQueryExtGet
        //instance.searchVersionNumberCategorySearchQueryExtGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberGeometrySearchQueryExtGet', function() {
      it('should call searchVersionNumberGeometrySearchQueryExtGet successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberGeometrySearchQueryExtGet
        //instance.searchVersionNumberGeometrySearchQueryExtGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberGeometrySearchQueryExtPost', function() {
      it('should call searchVersionNumberGeometrySearchQueryExtPost successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberGeometrySearchQueryExtPost
        //instance.searchVersionNumberGeometrySearchQueryExtPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberNearbySearchExtGet', function() {
      it('should call searchVersionNumberNearbySearchExtGet successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberNearbySearchExtGet
        //instance.searchVersionNumberNearbySearchExtGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberPoiSearchQueryExtGet', function() {
      it('should call searchVersionNumberPoiSearchQueryExtGet successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberPoiSearchQueryExtGet
        //instance.searchVersionNumberPoiSearchQueryExtGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberRoutedSearchQueryPositionHeadingExtGet', function() {
      it('should call searchVersionNumberRoutedSearchQueryPositionHeadingExtGet successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberRoutedSearchQueryPositionHeadingExtGet
        //instance.searchVersionNumberRoutedSearchQueryPositionHeadingExtGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberSQueryExtGet', function() {
      it('should call searchVersionNumberSQueryExtGet successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberSQueryExtGet
        //instance.searchVersionNumberSQueryExtGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberSearchAlongRouteQueryExtPost', function() {
      it('should call searchVersionNumberSearchAlongRouteQueryExtPost successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberSearchAlongRouteQueryExtPost
        //instance.searchVersionNumberSearchAlongRouteQueryExtPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchVersionNumberSearchQueryExtGet', function() {
      it('should call searchVersionNumberSearchQueryExtGet successfully', function(done) {
        //uncomment below and update the code to test searchVersionNumberSearchQueryExtGet
        //instance.searchVersionNumberSearchQueryExtGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
