/*
 * Search
 * Search API is a RESTful API that allows developers to run a single line fuzzy search for addresses and POIs. Search API returns the latitude/longitude of a specific address, cross street, geographic feature, or point of interest (POI).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SearchVersionNumberGeometryFilterExtPostRequestGeometryListInner
 */
public class SearchVersionNumberGeometryFilterExtPostRequestGeometryListInnerTest {
    private final SearchVersionNumberGeometryFilterExtPostRequestGeometryListInner model = new SearchVersionNumberGeometryFilterExtPostRequestGeometryListInner();

    /**
     * Model tests for SearchVersionNumberGeometryFilterExtPostRequestGeometryListInner
     */
    @Test
    public void testSearchVersionNumberGeometryFilterExtPostRequestGeometryListInner() {
        // TODO: test SearchVersionNumberGeometryFilterExtPostRequestGeometryListInner
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'radius'
     */
    @Test
    public void radiusTest() {
        // TODO: test radius
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'vertices'
     */
    @Test
    public void verticesTest() {
        // TODO: test vertices
    }

}
