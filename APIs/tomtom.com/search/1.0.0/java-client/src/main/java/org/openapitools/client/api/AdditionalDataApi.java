/*
 * Search
 * Search API is a RESTful API that allows developers to run a single line fuzzy search for addresses and POIs. Search API returns the latitude/longitude of a specific address, cross street, geographic feature, or point of interest (POI).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AdditionalDataApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AdditionalDataApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AdditionalDataApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for searchVersionNumberAdditionalDataExtGet
     * @param versionNumber Service version number. The current value is 2. (required)
     * @param ext Expected response format. (required)
     * @param geometries Comma separated list of geometry UUIDs, previously retrieved from an Search API request. (required)
     * @param geometriesZoom Defines the precision of the geometries. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK: additional data were retrieved and the body of the response contains requested data. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request: one or more parameters(i.e. geometries, ext) were incorrectly specified. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Permission, capacity, or authentication issues:   - Forbidden   - Not authorized   - Account inactive   - Account over queries per second limit   - Account over rate limit   - Rate limit exceeded </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: the requested resource could not be found, but it may be available again in the future. </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed: the client used a HTTP method other than GET. </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Request timeout. </td><td>  -  </td></tr>
        <tr><td> 414 </td><td> Requested uri is too long. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An error occurred while processing the request. Please try again later. </td><td>  -  </td></tr>
        <tr><td> 502 </td><td> Internal network connectivity issue. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service currently unavailable. </td><td>  -  </td></tr>
        <tr><td> 504 </td><td> Internal network connectivity issue or a request that has taken too long to complete. </td><td>  -  </td></tr>
        <tr><td> 596 </td><td> Service not found. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchVersionNumberAdditionalDataExtGetCall(Integer versionNumber, String ext, String geometries, Integer geometriesZoom, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/search/{versionNumber}/additionalData.{ext}"
            .replace("{" + "versionNumber" + "}", localVarApiClient.escapeString(versionNumber.toString()))
            .replace("{" + "ext" + "}", localVarApiClient.escapeString(ext.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (geometries != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("geometries", geometries));
        }

        if (geometriesZoom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("geometriesZoom", geometriesZoom));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchVersionNumberAdditionalDataExtGetValidateBeforeCall(Integer versionNumber, String ext, String geometries, Integer geometriesZoom, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'versionNumber' is set
        if (versionNumber == null) {
            throw new ApiException("Missing the required parameter 'versionNumber' when calling searchVersionNumberAdditionalDataExtGet(Async)");
        }

        // verify the required parameter 'ext' is set
        if (ext == null) {
            throw new ApiException("Missing the required parameter 'ext' when calling searchVersionNumberAdditionalDataExtGet(Async)");
        }

        // verify the required parameter 'geometries' is set
        if (geometries == null) {
            throw new ApiException("Missing the required parameter 'geometries' when calling searchVersionNumberAdditionalDataExtGet(Async)");
        }

        return searchVersionNumberAdditionalDataExtGetCall(versionNumber, ext, geometries, geometriesZoom, _callback);

    }

    /**
     * Additional Data
     * 
     * @param versionNumber Service version number. The current value is 2. (required)
     * @param ext Expected response format. (required)
     * @param geometries Comma separated list of geometry UUIDs, previously retrieved from an Search API request. (required)
     * @param geometriesZoom Defines the precision of the geometries. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK: additional data were retrieved and the body of the response contains requested data. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request: one or more parameters(i.e. geometries, ext) were incorrectly specified. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Permission, capacity, or authentication issues:   - Forbidden   - Not authorized   - Account inactive   - Account over queries per second limit   - Account over rate limit   - Rate limit exceeded </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: the requested resource could not be found, but it may be available again in the future. </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed: the client used a HTTP method other than GET. </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Request timeout. </td><td>  -  </td></tr>
        <tr><td> 414 </td><td> Requested uri is too long. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An error occurred while processing the request. Please try again later. </td><td>  -  </td></tr>
        <tr><td> 502 </td><td> Internal network connectivity issue. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service currently unavailable. </td><td>  -  </td></tr>
        <tr><td> 504 </td><td> Internal network connectivity issue or a request that has taken too long to complete. </td><td>  -  </td></tr>
        <tr><td> 596 </td><td> Service not found. </td><td>  -  </td></tr>
     </table>
     */
    public void searchVersionNumberAdditionalDataExtGet(Integer versionNumber, String ext, String geometries, Integer geometriesZoom) throws ApiException {
        searchVersionNumberAdditionalDataExtGetWithHttpInfo(versionNumber, ext, geometries, geometriesZoom);
    }

    /**
     * Additional Data
     * 
     * @param versionNumber Service version number. The current value is 2. (required)
     * @param ext Expected response format. (required)
     * @param geometries Comma separated list of geometry UUIDs, previously retrieved from an Search API request. (required)
     * @param geometriesZoom Defines the precision of the geometries. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK: additional data were retrieved and the body of the response contains requested data. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request: one or more parameters(i.e. geometries, ext) were incorrectly specified. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Permission, capacity, or authentication issues:   - Forbidden   - Not authorized   - Account inactive   - Account over queries per second limit   - Account over rate limit   - Rate limit exceeded </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: the requested resource could not be found, but it may be available again in the future. </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed: the client used a HTTP method other than GET. </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Request timeout. </td><td>  -  </td></tr>
        <tr><td> 414 </td><td> Requested uri is too long. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An error occurred while processing the request. Please try again later. </td><td>  -  </td></tr>
        <tr><td> 502 </td><td> Internal network connectivity issue. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service currently unavailable. </td><td>  -  </td></tr>
        <tr><td> 504 </td><td> Internal network connectivity issue or a request that has taken too long to complete. </td><td>  -  </td></tr>
        <tr><td> 596 </td><td> Service not found. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> searchVersionNumberAdditionalDataExtGetWithHttpInfo(Integer versionNumber, String ext, String geometries, Integer geometriesZoom) throws ApiException {
        okhttp3.Call localVarCall = searchVersionNumberAdditionalDataExtGetValidateBeforeCall(versionNumber, ext, geometries, geometriesZoom, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Additional Data (asynchronously)
     * 
     * @param versionNumber Service version number. The current value is 2. (required)
     * @param ext Expected response format. (required)
     * @param geometries Comma separated list of geometry UUIDs, previously retrieved from an Search API request. (required)
     * @param geometriesZoom Defines the precision of the geometries. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK: additional data were retrieved and the body of the response contains requested data. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request: one or more parameters(i.e. geometries, ext) were incorrectly specified. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Permission, capacity, or authentication issues:   - Forbidden   - Not authorized   - Account inactive   - Account over queries per second limit   - Account over rate limit   - Rate limit exceeded </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: the requested resource could not be found, but it may be available again in the future. </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed: the client used a HTTP method other than GET. </td><td>  -  </td></tr>
        <tr><td> 408 </td><td> Request timeout. </td><td>  -  </td></tr>
        <tr><td> 414 </td><td> Requested uri is too long. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> An error occurred while processing the request. Please try again later. </td><td>  -  </td></tr>
        <tr><td> 502 </td><td> Internal network connectivity issue. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> Service currently unavailable. </td><td>  -  </td></tr>
        <tr><td> 504 </td><td> Internal network connectivity issue or a request that has taken too long to complete. </td><td>  -  </td></tr>
        <tr><td> 596 </td><td> Service not found. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchVersionNumberAdditionalDataExtGetAsync(Integer versionNumber, String ext, String geometries, Integer geometriesZoom, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchVersionNumberAdditionalDataExtGetValidateBeforeCall(versionNumber, ext, geometries, geometriesZoom, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
