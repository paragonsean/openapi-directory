openapi: 3.0.0
info:
  contact:
    name: Contact Us
    url: https://developer.tomtom.com/contact-us
    x-twitter: TomTom
  description: "Search API is a RESTful API that allows developers to run a single\
    \ line fuzzy search for addresses and POIs. Search API returns the latitude/longitude\
    \ of a specific address, cross street, geographic feature, or point of interest\
    \ (POI)."
  title: Search
  version: 1.0.0
  x-apisguru-categories:
  - location
  x-logo:
    url: https://twitter.com/TomTom/profile_image?size=original
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.31
    format: openapi
    url: https://developer.tomtom.com/system/files/swagger_models/search_api.yaml
    version: "3.0"
  x-providerName: tomtom.com
  x-serviceName: search
servers:
- url: https://api.tomtom.com
security:
- api_key: []
paths:
  /search/{versionNumber}/additionalData.{ext}:
    get:
      operationId: search_version_number_additional_data_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Expected response format.
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          type: string
        style: simple
      - description: "Comma separated list of geometry UUIDs, previously retrieved\
          \ from an Search API request."
        example: "00004631-3400-3c00-0000-0000673c4d2e,00004631-3400-3c00-0000-0000673c42fe"
        explode: true
        in: query
        name: geometries
        required: true
        schema:
          type: string
        style: form
      - description: Defines the precision of the geometries.
        explode: true
        in: query
        name: geometriesZoom
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          type: integer
        style: form
      responses:
        "200":
          description: "OK: additional data were retrieved and the body of the response\
            \ contains requested data."
        "400":
          description: "Bad request: one or more parameters(i.e. geometries, ext)\
            \ were incorrectly specified."
        "403":
          description: |-
            Permission, capacity, or authentication issues:
              - Forbidden
              - Not authorized
              - Account inactive
              - Account over queries per second limit
              - Account over rate limit
              - Rate limit exceeded
        "404":
          description: "Not Found: the requested resource could not be found, but\
            \ it may be available again in the future."
        "405":
          description: "Method Not Allowed: the client used a HTTP method other than\
            \ GET."
        "408":
          description: Request timeout.
        "414":
          description: Requested uri is too long.
        "500":
          description: An error occurred while processing the request. Please try
            again later.
        "502":
          description: Internal network connectivity issue.
        "503":
          description: Service currently unavailable.
        "504":
          description: Internal network connectivity issue or a request that has taken
            too long to complete.
        "596":
          description: Service not found.
      summary: Additional Data
      tags:
      - Additional Data
      x-openapi-router-controller: openapi_server.controllers.additional_data_controller
  /search/{versionNumber}/cS/{category}.{ext}:
    get:
      deprecated: true
      operationId: search_version_number_cs_category_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: pizza
        explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: "If the \"typeahead\" flag is set, the query will be interpreted\
          \ as a partial input and the search will enter <b>predictive</b> mode."
        explode: true
        in: query
        name: typeahead
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: Starting offset of the returned results within the full result
          set.
        explode: true
        in: query
        name: ofs
        required: false
        schema:
          default: 0
          maximum: 1900
          type: integer
        style: form
      - description: Comma separated string of country codes. This will limit the
          search to the specified countries.
        example: FR
        explode: true
        in: query
        name: countrySet
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Latitude where results should be biased.
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: 37.337
        explode: true
        in: query
        name: lat
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: |-
          Longitude where results should be biased
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: -121.89
        explode: true
        in: query
        name: lon
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "If radius <b>and</b> position are set, the results will be constrained\
          \ to the defined area. The radius parameter is specified in meters."
        explode: true
        in: query
        name: radius
        required: false
        schema:
          type: integer
        style: form
      - description: "Top left position of the bounding box. This is specified as\
          \ a comma separated string composed of lat., lon."
        example: "37.553,-122.453"
        explode: true
        in: query
        name: topLeft
        required: false
        schema:
          type: string
        style: form
      - description: "Bottom right position of the bounding box. This is specified\
          \ as a comma separated string composed of lat., lon."
        example: "37.4,-122.55"
        explode: true
        in: query
        name: btmRight
        required: false
        schema:
          type: string
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
            - <b>Addr</b> = Address range interpolation (when there is no PAD)
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of interest
            - <b>Str</b> = Streets
            - <b>Xstr</b> = Cross Streets (intersections)
        example: POI
        explode: true
        in: query
        name: idxSet
        required: false
        schema:
          type: string
        style: form
      - description: Geopolitical View.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: Unified
          enum:
          - Unified
          - IN
          - PK
          - IL
          - MA
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Low Bandwith Category Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /search/{versionNumber}/categorySearch/{query}.{ext}:
    get:
      operationId: search_version_number_category_search_query_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: pizza
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: "If the \"typeahead\" flag is set, the query will be interpreted\
          \ as a partial input and the search will enter <b>predictive</b> mode."
        explode: true
        in: query
        name: typeahead
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: Starting offset of the returned results within the full result
          set.
        explode: true
        in: query
        name: ofs
        required: false
        schema:
          default: 0
          maximum: 1900
          type: integer
        style: form
      - description: Comma separated string of country codes. This will limit the
          search to the specified countries.
        example: FR
        explode: true
        in: query
        name: countrySet
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Latitude where results should be biased.
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: 37.337
        explode: true
        in: query
        name: lat
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: |-
          Longitude where results should be biased
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: -121.89
        explode: true
        in: query
        name: lon
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "If radius <b>and</b> position are set, the results will be constrained\
          \ to the defined area. The radius parameter is specified in meters."
        explode: true
        in: query
        name: radius
        required: false
        schema:
          type: integer
        style: form
      - description: "Top left position of the bounding box. This is specified as\
          \ a comma separated string composed of lat., lon."
        example: "37.553,-122.453"
        explode: true
        in: query
        name: topLeft
        required: false
        schema:
          type: string
        style: form
      - description: "Bottom right position of the bounding box. This is specified\
          \ as a comma separated string composed of lat., lon."
        example: "37.4,-122.55"
        explode: true
        in: query
        name: btmRight
        required: false
        schema:
          type: string
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      - description: Geopolitical View.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: Unified
          enum:
          - Unified
          - IN
          - PK
          - IL
          - MA
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Category Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /search/{versionNumber}/geocode/{query}.{ext}:
    get:
      operationId: search_version_number_geocode_query_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: 4 north 2nd street san jose
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - deprecated: true
        description: "If the \"storeResult\" flag is set, the query will be interpreted\
          \ as a stored geocode and will be billed according to the terms of use."
        explode: true
        in: query
        name: storeResult
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "If the \"typeahead\" flag is set, the query will be interpreted\
          \ as a partial input and the search will enter <b>predictive</b> mode."
        explode: true
        in: query
        name: typeahead
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: Starting offset of the returned results within the full result
          set.
        explode: true
        in: query
        name: ofs
        required: false
        schema:
          default: 0
          maximum: 1900
          type: integer
        style: form
      - description: Comma separated string of country codes. This will limit the
          search to the specified countries.
        example: FR
        explode: true
        in: query
        name: countrySet
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Latitude where results should be biased.
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: 37.337
        explode: true
        in: query
        name: lat
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: |-
          Longitude where results should be biased
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: -121.89
        explode: true
        in: query
        name: lon
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "If radius <b>and</b> position are set, the results will be constrained\
          \ to the defined area. The radius parameter is specified in meters."
        explode: true
        in: query
        name: radius
        required: false
        schema:
          type: integer
        style: form
      - description: "Top left position of the bounding box. This is specified as\
          \ a comma separated string composed of lat., lon."
        example: "37.553,-122.453"
        explode: true
        in: query
        name: topLeft
        required: false
        schema:
          type: string
        style: form
      - description: "Bottom right position of the bounding box. This is specified\
          \ as a comma separated string composed of lat., lon."
        example: "37.4,-122.55"
        explode: true
        in: query
        name: btmRight
        required: false
        schema:
          type: string
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      - description: Geopolitical View.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: Unified
          enum:
          - Unified
          - IN
          - PK
          - IL
          - MA
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Geocode
      tags:
      - Geocoding
      x-openapi-router-controller: openapi_server.controllers.geocoding_controller
  /search/{versionNumber}/geometryFilter.{ext}:
    get:
      operationId: search_version_number_geometry_filter_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: List of geometries to filter by. Available types are CIRCLE (with
          the radius expressed in meters) and POLYGON.
        example: "[{\"type\":\"CIRCLE\", \"position\":\"40.80558, -73.96548\", \"\
          radius\":100}, {\"type\":\"POLYGON\", \"vertices\":[\"37.7524152343544,\
          \ -122.43576049804686\", \"37.70660472542312, -122.43301391601562\", \"\
          37.712059855877314, -122.36434936523438\", \"37.75350561243041, -122.37396240234374\"\
          ]}]"
        explode: true
        in: query
        name: geometryList
        required: true
        schema:
          type: string
        style: form
      - description: "List of POIs to filter. The only required attribute of a POI\
          \ is position, everything else is optional and will be echoed back when\
          \ passed in."
        example: "[{\"poi\":{\"name\":\"S Restaurant Toms\"},\"address\":{\"freeformAddress\"\
          :\"2880 Broadway, New York, NY 10025\"},\"position\":{\"lat\":40.80558,\"\
          lon\":-73.96548}},{\"poi\":{\"name\":\"Yasha Raman Corporation\"},\"address\"\
          :{\"freeformAddress\":\"940 Amsterdam Ave, New York, NY 10025\"},\"position\"\
          :{\"lat\":40.80076,\"lon\":-73.96556}}]"
        explode: true
        in: query
        name: poiList
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Geometry Filter
      tags:
      - Filters
      x-openapi-router-controller: openapi_server.controllers.filters_controller
    post:
      operationId: search_version_number_geometry_filter_ext_post
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request'
        x-body-name: body
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Geometry Filter
      tags:
      - Filters
      x-openapi-router-controller: openapi_server.controllers.filters_controller
      x-codegen-request-body-name: body
  /search/{versionNumber}/geometrySearch/{query}.{ext}:
    get:
      operationId: search_version_number_geometry_search_query_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: pizza
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: List of geometries to filter by. Available types are CIRCLE (with
          the radius expressed in meters) and POLYGON.
        example: "[{\"type\":\"POLYGON\", \"vertices\":[\"37.7524152343544, -122.43576049804686\"\
          , \"37.70660472542312, -122.43301391601562\", \"37.712059855877314, -122.36434936523438\"\
          , \"37.75350561243041, -122.37396240234374\"]}, {\"type\":\"CIRCLE\", \"\
          position\":\"37.71205, -121.36434\", \"radius\":6000}, {\"type\":\"CIRCLE\"\
          , \"position\":\"37.31205, -121.36434\", \"radius\":1000}]"
        explode: true
        in: query
        name: geometryList
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      - description: |-
          A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
            - <b>Addr</b> = Address range interpolation (when there is no PAD)
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of interest
            - <b>Str</b> = Streets
            - <b>Xstr</b> = Cross Streets (intersections)
        example: POI
        explode: true
        in: query
        name: idxSet
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Geometry Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
    post:
      operationId: search_version_number_geometry_search_query_ext_post
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: pizza
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      - description: |-
          A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
            - <b>Addr</b> = Address range interpolation (when there is no PAD)
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of interest
            - <b>Str</b> = Streets
            - <b>Xstr</b> = Cross Streets (intersections)
        example: POI
        explode: true
        in: query
        name: idxSet
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_search__versionNumber__geometrySearch__query___ext__post_request'
        x-body-name: body
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Geometry Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
      x-codegen-request-body-name: body
  /search/{versionNumber}/nearbySearch/.{ext}:
    get:
      operationId: search_version_number_nearby_search_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: |-
          Latitude where results should be biased.
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: 37.337
        explode: true
        in: query
        name: lat
        required: true
        schema:
          format: float
          type: number
        style: form
      - description: |-
          Longitude where results should be biased
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: -121.89
        explode: true
        in: query
        name: lon
        required: true
        schema:
          format: float
          type: number
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: Starting offset of the returned results within the full result
          set.
        explode: true
        in: query
        name: ofs
        required: false
        schema:
          default: 0
          maximum: 1900
          type: integer
        style: form
      - description: Comma separated string of country codes. This will limit the
          search to the specified countries.
        example: FR
        explode: true
        in: query
        name: countrySet
        required: false
        schema:
          type: string
        style: form
      - description: "If radius and position are set, the results will be constrained\
          \ to the defined area. The radius parameter is specified in meters."
        explode: true
        in: query
        name: radius
        required: false
        schema:
          default: 10000
          maximum: 50000
          type: integer
        style: form
      - deprecated: true
        description: "Top left position of the bounding box. This is specified as\
          \ a comma separated string composed of lat., lon."
        example: "37.553,-122.453"
        explode: true
        in: query
        name: topLeft
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Bottom right position of the bounding box. This is specified\
          \ as a comma separated string composed of lat., lon."
        example: "37.4,-122.55"
        explode: true
        in: query
        name: btmRight
        required: false
        schema:
          type: string
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      - description: Minimum fuzziness level to be used.
        explode: true
        in: query
        name: minFuzzyLevel
        required: false
        schema:
          default: 1
          maximum: 4
          minimum: 1
          type: integer
        style: form
      - description: Maximum fuzziness level to be used.
        explode: true
        in: query
        name: maxFuzzyLevel
        required: false
        schema:
          default: 2
          maximum: 4
          minimum: 1
          type: integer
        style: form
      - description: |-
          A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
            - <b>Addr</b> = Address range interpolation (when there is no PAD)
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of interest
            - <b>Str</b> = Streets
            - <b>Xstr</b> = Cross Streets (intersections)
        example: POI
        explode: true
        in: query
        name: idxSet
        required: false
        schema:
          type: string
        style: form
      - description: Geopolitical View.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: Unified
          enum:
          - Unified
          - IN
          - PK
          - IL
          - MA
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Nearby Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /search/{versionNumber}/poiSearch/{query}.{ext}:
    get:
      operationId: search_version_number_poi_search_query_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: pizza
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: "If the \"typeahead\" flag is set, the query will be interpreted\
          \ as a partial input and the search will enter <b>predictive</b> mode."
        explode: true
        in: query
        name: typeahead
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: Starting offset of the returned results within the full result
          set.
        explode: true
        in: query
        name: ofs
        required: false
        schema:
          default: 0
          maximum: 1900
          type: integer
        style: form
      - description: Comma separated string of country codes. This will limit the
          search to the specified countries.
        example: FR
        explode: true
        in: query
        name: countrySet
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Latitude where results should be biased.
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: 37.337
        explode: true
        in: query
        name: lat
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: |-
          Longitude where results should be biased
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: -121.89
        explode: true
        in: query
        name: lon
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "If radius <b>and</b> position are set, the results will be constrained\
          \ to the defined area. The radius parameter is specified in meters."
        explode: true
        in: query
        name: radius
        required: false
        schema:
          type: integer
        style: form
      - description: "Top left position of the bounding box. This is specified as\
          \ a comma separated string composed of lat., lon."
        example: "37.553,-122.453"
        explode: true
        in: query
        name: topLeft
        required: false
        schema:
          type: string
        style: form
      - description: "Bottom right position of the bounding box. This is specified\
          \ as a comma separated string composed of lat., lon."
        example: "37.4,-122.55"
        explode: true
        in: query
        name: btmRight
        required: false
        schema:
          type: string
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      - description: Geopolitical View.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: Unified
          enum:
          - Unified
          - IN
          - PK
          - IL
          - MA
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Points of Interest Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /search/{versionNumber}/reverseGeocode/crossStreet/{position}.{ext}:
    get:
      operationId: search_version_number_reverse_geocode_cross_street_position_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: "This is specified as a comma separated string composed of lat.,\
          \ lon."
        example: "37.8328,-122.27669"
        explode: false
        in: path
        name: position
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: Maximum number of cross-streets to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - deprecated: true
        description: "If the \"spatialKeys\" flag is set, the response will also contain\
          \ a proprietary geospatial keys for a specified location."
        explode: true
        in: query
        name: spatialKeys
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The directional heading in degrees, usually similar to the course\
          \ along a road segment. Entered in degrees, measured clockwise from north\
          \ (so north is 0, east is 90, etc.)"
        explode: true
        in: query
        name: heading
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: The maximum distance in meters from the specified position for
          the reverse geocoder to consider.
        explode: true
        in: query
        name: radius
        required: false
        schema:
          default: 10000
          type: integer
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Cross Street lookup
      tags:
      - Reverse Geocoding
      x-openapi-router-controller: openapi_server.controllers.reverse_geocoding_controller
  /search/{versionNumber}/reverseGeocode/{position}.{ext}:
    get:
      operationId: search_version_number_reverse_geocode_position_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: "This is specified as a comma separated string composed of lat.,\
          \ lon."
        example: "37.8328,-122.27669"
        explode: false
        in: path
        name: position
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - deprecated: true
        description: "If the \"spatialKeys\" flag is set, the response will also contain\
          \ a proprietary geospatial keys for a specified location."
        explode: true
        in: query
        name: spatialKeys
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: To enable return of the posted speed limit (where available).
        explode: true
        in: query
        name: returnSpeedLimit
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The directional heading in degrees, usually similar to the course\
          \ along a road segment. Entered in degrees, measured clockwise from north\
          \ (so north is 0, east is 90, etc.)"
        explode: true
        in: query
        name: heading
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: The maximum distance in meters from the specified position for
          the reverse geocoder to consider.
        explode: true
        in: query
        name: radius
        required: false
        schema:
          default: 10000
          type: integer
        style: form
      - description: "If a number is sent in along with the request, the response\
          \ may include the side of the street (Left/Right) and an offset position\
          \ for that number."
        explode: true
        in: query
        name: number
        required: false
        schema:
          type: string
        style: form
      - description: Enables return of the road use array for reverse geocodes at
          street level.
        explode: true
        in: query
        name: returnRoadUse
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Restricts reverse geocodes to a certain type of road use. The\
          \ road use array for reverse geocodes can be one or more of: [\"LimitedAccess\"\
          , \"Arterial\", \"Terminal\", \"Ramp\", \"Rotary\", \"LocalStreet\"]."
        explode: true
        in: query
        name: roadUse
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the jsonp callback method.
        explode: true
        in: query
        name: callback
        required: false
        schema:
          default: cb
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Reverse Geocode
      tags:
      - Reverse Geocoding
      x-openapi-router-controller: openapi_server.controllers.reverse_geocoding_controller
  /search/{versionNumber}/routedFilter/{position}/{heading}.{ext}:
    get:
      deprecated: true
      operationId: search_version_number_routed_filter_position_heading_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: "This is specified as a comma separated string composed of lat.,\
          \ lon."
        example: "37.8328,-122.27669"
        explode: false
        in: path
        name: position
        required: true
        schema:
          type: string
        style: simple
      - description: "The directional heading in degrees, usually similar to the course\
          \ along a road segment. Entered in degrees, measured clockwise from north\
          \ (so north is 0, east is 90, etc.)"
        example: -15.6
        explode: false
        in: path
        name: heading
        required: true
        schema:
          format: float
          type: number
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: "List of POIs to filter. The only required attribute of a POI\
          \ is position, everything else is optional and will be echoed back when\
          \ passed in."
        example: "[{\"poi\":{\"name\":\"Cleaire Advanced Emission Controls\"},\"address\"\
          :{\"freeformAddress\":\"7220 Trade St, San Diego, CA 92121\"},\"position\"\
          :{\"lat\":\"37.83274\",\"lon\":\"-122.27631\"}}]"
        explode: true
        in: query
        name: poiList
        required: true
        schema:
          type: string
        style: form
      - description: Only return results that arrive from routing engine within this
          time limit.
        explode: true
        in: query
        name: routingTimeout
        required: false
        schema:
          default: 4000
          type: integer
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Routed Filter
      tags:
      - Filters
      x-openapi-router-controller: openapi_server.controllers.filters_controller
    post:
      deprecated: true
      operationId: search_version_number_routed_filter_position_heading_ext_post
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: "This is specified as a comma separated string composed of lat.,\
          \ lon."
        example: "37.8328,-122.27669"
        explode: false
        in: path
        name: position
        required: true
        schema:
          type: string
        style: simple
      - description: "The directional heading in degrees, usually similar to the course\
          \ along a road segment. Entered in degrees, measured clockwise from north\
          \ (so north is 0, east is 90, etc.)"
        example: 90
        explode: false
        in: path
        name: heading
        required: true
        schema:
          format: float
          type: number
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: Only return results that arrive from routing engine within this
          time limit.
        explode: true
        in: query
        name: routingTimeout
        required: false
        schema:
          default: 4000
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_search__versionNumber__routedFilter__position___heading___ext__post_request'
        x-body-name: body
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Routed Filter
      tags:
      - Filters
      x-openapi-router-controller: openapi_server.controllers.filters_controller
      x-codegen-request-body-name: body
  /search/{versionNumber}/routedSearch/{query}/{position}/{heading}.{ext}:
    get:
      deprecated: true
      operationId: search_version_number_routed_search_query_position_heading_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: gas
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: "This is specified as a comma separated string composed of lat.,\
          \ lon."
        example: "37.8328,-122.27669"
        explode: false
        in: path
        name: position
        required: true
        schema:
          type: string
        style: simple
      - description: "The directional heading in degrees, usually similar to the course\
          \ along a road segment. Entered in degrees, measured clockwise from north\
          \ (so north is 0, east is 90, etc.)"
        example: 90
        explode: false
        in: path
        name: heading
        required: true
        schema:
          format: float
          type: number
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: "If the \"typeahead\" flag is set, the query will be interpreted\
          \ as a partial input and the search will enter <b>predictive</b> mode."
        explode: true
        in: query
        name: typeahead
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: "Multiplies the limit by N to gather more candidate POIs, which\
          \ will then be sorted by drive distance, returning only the top candidates\
          \ according to the limit."
        explode: true
        in: query
        name: multiplier
        required: false
        schema:
          default: 2
          type: integer
        style: form
      - description: Only return results that arrive from routing engine within this
          time limit.
        explode: true
        in: query
        name: routingTimeout
        required: false
        schema:
          default: 4000
          type: integer
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      - description: |-
          A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
            - <b>Addr</b> = Address range interpolation (when there is no PAD)
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of interest
            - <b>Str</b> = Streets
            - <b>Xstr</b> = Cross Streets (intersections)
        example: POI
        explode: true
        in: query
        name: idxSet
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Routed Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /search/{versionNumber}/s/{query}.{ext}:
    get:
      deprecated: true
      operationId: search_version_number_s_query_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: pizza
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: "If the \"typeahead\" flag is set, the query will be interpreted\
          \ as a partial input and the search will enter <b>predictive</b> mode."
        explode: true
        in: query
        name: typeahead
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: Starting offset of the returned results within the full result
          set.
        explode: true
        in: query
        name: ofs
        required: false
        schema:
          default: 0
          maximum: 1900
          type: integer
        style: form
      - description: Comma separated string of country codes. This will limit the
          search to the specified countries.
        example: FR
        explode: true
        in: query
        name: countrySet
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Latitude where results should be biased.
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: 37.337
        explode: true
        in: query
        name: lat
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: |-
          Longitude where results should be biased
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: -121.89
        explode: true
        in: query
        name: lon
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "If radius <b>and</b> position are set, the results will be constrained\
          \ to the defined area. The radius parameter is specified in meters."
        explode: true
        in: query
        name: radius
        required: false
        schema:
          type: integer
        style: form
      - description: "Top left position of the bounding box. This is specified as\
          \ a comma separated string composed of lat., lon."
        example: "37.553,-122.453"
        explode: true
        in: query
        name: topLeft
        required: false
        schema:
          type: string
        style: form
      - description: "Bottom right position of the bounding box. This is specified\
          \ as a comma separated string composed of lat., lon."
        example: "37.4,-122.55"
        explode: true
        in: query
        name: btmRight
        required: false
        schema:
          type: string
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
            - <b>Addr</b> = Address range interpolation (when there is no PAD)
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of interest
            - <b>Str</b> = Streets
            - <b>Xstr</b> = Cross Streets (intersections)
        example: POI
        explode: true
        in: query
        name: idxSet
        required: false
        schema:
          type: string
        style: form
      - description: Geopolitical View.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: Unified
          enum:
          - Unified
          - IN
          - PK
          - IL
          - MA
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Low bandwith Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /search/{versionNumber}/search/{query}.{ext}:
    get:
      operationId: search_version_number_search_query_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: |-
          Query string. Must be properly URL encoded.

          To perform a reverse geocode, the user can provide latitude and longitude coordinates directly in the query. More information can be found <a href="/search-api/search-api-documentation-search/fuzzy-search#AdditionalInfo">here</a>.
        example: pizza
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: "If the \"typeahead\" flag is set, the query will be interpreted\
          \ as a partial input and the search will enter <b>predictive</b> mode."
        explode: true
        in: query
        name: typeahead
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: Starting offset of the returned results within the full result
          set.
        explode: true
        in: query
        name: ofs
        required: false
        schema:
          default: 0
          maximum: 1900
          type: integer
        style: form
      - description: Comma separated string of country codes. This will limit the
          search to the specified countries.
        example: FR
        explode: true
        in: query
        name: countrySet
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Latitude where results should be biased.
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: 37.337
        explode: true
        in: query
        name: lat
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: |-
          Longitude where results should be biased
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.
        example: -121.89
        explode: true
        in: query
        name: lon
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "If radius <b>and</b> position are set, the results will be constrained\
          \ to the defined area. The radius parameter is specified in meters."
        explode: true
        in: query
        name: radius
        required: false
        schema:
          type: integer
        style: form
      - description: "Top left position of the bounding box. This is specified as\
          \ a comma separated string composed of lat., lon."
        example: "37.553,-122.453"
        explode: true
        in: query
        name: topLeft
        required: false
        schema:
          type: string
        style: form
      - description: "Bottom right position of the bounding box. This is specified\
          \ as a comma separated string composed of lat., lon."
        example: "37.4,-122.55"
        explode: true
        in: query
        name: btmRight
        required: false
        schema:
          type: string
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      - description: Minimum fuzziness level to be used.
        explode: true
        in: query
        name: minFuzzyLevel
        required: false
        schema:
          default: 1
          maximum: 4
          minimum: 1
          type: integer
        style: form
      - description: Maximum fuzziness level to be used.
        explode: true
        in: query
        name: maxFuzzyLevel
        required: false
        schema:
          default: 2
          maximum: 4
          minimum: 1
          type: integer
        style: form
      - description: |-
          A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
            - <b>Addr</b> = Address range interpolation (when there is no PAD)
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of interest
            - <b>Str</b> = Streets
            - <b>Xstr</b> = Cross Streets (intersections)
        example: POI
        explode: true
        in: query
        name: idxSet
        required: false
        schema:
          type: string
        style: form
      - description: Geopolitical View.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: Unified
          enum:
          - Unified
          - IN
          - PK
          - IL
          - MA
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Fuzzy Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
  /search/{versionNumber}/searchAlongRoute/{query}.{ext}:
    post:
      operationId: search_version_number_search_along_route_query_ext_post
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Query string. Must be properly URL encoded.
        example: pizza
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: Maximum detour time
        example: 1200
        explode: true
        in: query
        name: maxDetourTime
        required: true
        schema:
          maximum: 3600
          type: integer
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_search__versionNumber__searchAlongRoute__query___ext__post_request'
        x-body-name: body
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Along Route Search
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
      x-codegen-request-body-name: body
  /search/{versionNumber}/structuredGeocode.{ext}:
    get:
      operationId: search_version_number_structured_geocode_ext_get
      parameters:
      - description: Service version number. The current value is 2.
        explode: false
        in: path
        name: versionNumber
        required: true
        schema:
          enum:
          - 2
          type: integer
        style: simple
      - description: Expected response format.
        example: xml
        explode: false
        in: path
        name: ext
        required: true
        schema:
          enum:
          - json
          - jsonp
          - js
          - xml
          type: string
        style: simple
      - description: "2 or 3 letter country code (e.g.: FR, ES)."
        example: NL
        explode: true
        in: query
        name: countryCode
        required: true
        schema:
          type: string
        style: form
      - description: Maximum number of search results that will be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          type: integer
        style: form
      - description: Starting offset of the returned results within the full result
          set.
        explode: true
        in: query
        name: ofs
        required: false
        schema:
          default: 0
          maximum: 1900
          type: integer
        style: form
      - description: The street number for the structured address.
        explode: true
        in: query
        name: streetNumber
        required: false
        schema:
          type: string
        style: form
      - description: The street name for the structured address.
        explode: true
        in: query
        name: streetName
        required: false
        schema:
          type: string
        style: form
      - description: The cross street name for the structured address.
        explode: true
        in: query
        name: crossStreet
        required: false
        schema:
          type: string
        style: form
      - description: The municipality (city/town) for the structured address.
        example: Amsterdam
        explode: true
        in: query
        name: municipality
        required: false
        schema:
          type: string
        style: form
      - description: The municipality subdivision (sub/super city) for the structured
          address.
        explode: true
        in: query
        name: municipalitySubdivision
        required: false
        schema:
          type: string
        style: form
      - description: The named area for the structured address.
        explode: true
        in: query
        name: countryTertiarySubdivision
        required: false
        schema:
          type: string
        style: form
      - description: The county for the structured address.
        explode: true
        in: query
        name: countrySecondarySubdivision
        required: false
        schema:
          type: string
        style: form
      - description: The state or province for the structured address.
        explode: true
        in: query
        name: countrySubdivision
        required: false
        schema:
          type: string
        style: form
      - description: The zip code or postal code for the structured address.
        explode: true
        in: query
        name: postalCode
        required: false
        schema:
          type: string
        style: form
      - description: "Language in which search results should be returned. Should\
          \ be one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
          >supported IETF language tags</a>, case insensitive."
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
        explode: true
        in: query
        name: extendedPostalCodesFor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: "OK: the search successfully returned zero or more results."
        "400":
          description: "Bad Request: one or more parameters were incorrectly specified."
        "403":
          description: |-
            Forbidden: possible causes include:
              - Service requires SSL
              - Not authorized
              - Rate or volume limit exceeded
              - Unknown referer
        "405":
          description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not\
            \ supported for this request."
        "596":
          description: "Not Found: the HTTP request method (GET, POST, etc) or path\
            \ is incorrect."
        "5XX":
          description: An error occurred while processing the request. Please try
            again later.
      summary: Structured Geocode
      tags:
      - Geocoding
      x-openapi-router-controller: openapi_server.controllers.geocoding_controller
components:
  parameters:
    btmRight:
      description: "Bottom right position of the bounding box. This is specified as\
        \ a comma separated string composed of lat., lon."
      example: "37.4,-122.55"
      explode: true
      in: query
      name: btmRight
      required: false
      schema:
        type: string
      style: form
    countryCode:
      description: "2 or 3 letter country code (e.g.: FR, ES)."
      example: NL
      explode: true
      in: query
      name: countryCode
      required: true
      schema:
        type: string
      style: form
    countrySecondarySubdivision:
      description: The county for the structured address.
      explode: true
      in: query
      name: countrySecondarySubdivision
      required: false
      schema:
        type: string
      style: form
    countrySet:
      description: Comma separated string of country codes. This will limit the search
        to the specified countries.
      example: FR
      explode: true
      in: query
      name: countrySet
      required: false
      schema:
        type: string
      style: form
    countrySubdivision:
      description: The state or province for the structured address.
      explode: true
      in: query
      name: countrySubdivision
      required: false
      schema:
        type: string
      style: form
    countryTertiarySubdivision:
      description: The named area for the structured address.
      explode: true
      in: query
      name: countryTertiarySubdivision
      required: false
      schema:
        type: string
      style: form
    crossStreet:
      description: The cross street name for the structured address.
      explode: true
      in: query
      name: crossStreet
      required: false
      schema:
        type: string
      style: form
    ext:
      description: Expected response format.
      example: xml
      explode: false
      in: path
      name: ext
      required: true
      schema:
        enum:
        - json
        - jsonp
        - js
        - xml
        type: string
      style: simple
    extendedPostalCodesFor:
      description: |-
        Indexes for which extended postal codes should be included in the results. Available indexes are:
          - <b>Addr</b> = Address ranges
          - <b>Geo</b> = Geographies
          - <b>PAD</b> = Point Addresses
          - <b>POI</b> = Points of Interest
          - <b>Str</b> = Streets
          - <b>XStr</b> = Cross Streets (intersections)
      explode: true
      in: query
      name: extendedPostalCodesFor
      required: false
      schema:
        type: string
      style: form
    idxSet:
      description: |-
        A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
          - <b>Addr</b> = Address range interpolation (when there is no PAD)
          - <b>Geo</b> = Geographies
          - <b>PAD</b> = Point Addresses
          - <b>POI</b> = Points of interest
          - <b>Str</b> = Streets
          - <b>Xstr</b> = Cross Streets (intersections)
      example: POI
      explode: true
      in: query
      name: idxSet
      required: false
      schema:
        type: string
      style: form
    language:
      description: "Language in which search results should be returned. Should be\
        \ one of <a href=\"/search-api/search-api-documentation/supported-languages\"\
        >supported IETF language tags</a>, case insensitive."
      explode: true
      in: query
      name: language
      required: false
      schema:
        type: string
      style: form
    lat:
      description: |-
        Latitude where results should be biased.
        NOTE: supplying a lat/lon without a radius will return search results biased to that point.
      example: 37.337
      explode: true
      in: query
      name: lat
      required: false
      schema:
        format: float
        type: number
      style: form
    limit:
      description: Maximum number of search results that will be returned.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 10
        maximum: 100
        type: integer
      style: form
    lon:
      description: |-
        Longitude where results should be biased
        NOTE: supplying a lat/lon without a radius will return search results biased to that point.
      example: -121.89
      explode: true
      in: query
      name: lon
      required: false
      schema:
        format: float
        type: number
      style: form
    maxFuzzyLevel:
      description: Maximum fuzziness level to be used.
      explode: true
      in: query
      name: maxFuzzyLevel
      required: false
      schema:
        default: 2
        maximum: 4
        minimum: 1
        type: integer
      style: form
    minFuzzyLevel:
      description: Minimum fuzziness level to be used.
      explode: true
      in: query
      name: minFuzzyLevel
      required: false
      schema:
        default: 1
        maximum: 4
        minimum: 1
        type: integer
      style: form
    municipality:
      description: The municipality (city/town) for the structured address.
      example: Amsterdam
      explode: true
      in: query
      name: municipality
      required: false
      schema:
        type: string
      style: form
    municipalitySubdivision:
      description: The municipality subdivision (sub/super city) for the structured
        address.
      explode: true
      in: query
      name: municipalitySubdivision
      required: false
      schema:
        type: string
      style: form
    ofs:
      description: Starting offset of the returned results within the full result
        set.
      explode: true
      in: query
      name: ofs
      required: false
      schema:
        default: 0
        maximum: 1900
        type: integer
      style: form
    position:
      description: "This is specified as a comma separated string composed of lat.,\
        \ lon."
      example: "37.8328,-122.27669"
      explode: false
      in: path
      name: position
      required: true
      schema:
        type: string
      style: simple
    postalCode:
      description: The zip code or postal code for the structured address.
      explode: true
      in: query
      name: postalCode
      required: false
      schema:
        type: string
      style: form
    radius:
      description: "If radius <b>and</b> position are set, the results will be constrained\
        \ to the defined area. The radius parameter is specified in meters."
      explode: true
      in: query
      name: radius
      required: false
      schema:
        type: integer
      style: form
    routingTimeout:
      description: Only return results that arrive from routing engine within this
        time limit.
      explode: true
      in: query
      name: routingTimeout
      required: false
      schema:
        default: 4000
        type: integer
      style: form
    storeResult:
      deprecated: true
      description: "If the \"storeResult\" flag is set, the query will be interpreted\
        \ as a stored geocode and will be billed according to the terms of use."
      explode: true
      in: query
      name: storeResult
      required: false
      schema:
        default: false
        type: boolean
      style: form
    streetName:
      description: The street name for the structured address.
      explode: true
      in: query
      name: streetName
      required: false
      schema:
        type: string
      style: form
    streetNumber:
      description: The street number for the structured address.
      explode: true
      in: query
      name: streetNumber
      required: false
      schema:
        type: string
      style: form
    topLeft:
      description: "Top left position of the bounding box. This is specified as a\
        \ comma separated string composed of lat., lon."
      example: "37.553,-122.453"
      explode: true
      in: query
      name: topLeft
      required: false
      schema:
        type: string
      style: form
    typeahead:
      description: "If the \"typeahead\" flag is set, the query will be interpreted\
        \ as a partial input and the search will enter <b>predictive</b> mode."
      explode: true
      in: query
      name: typeahead
      required: false
      schema:
        default: false
        type: boolean
      style: form
    versionNumber:
      description: Service version number. The current value is 2.
      explode: false
      in: path
      name: versionNumber
      required: true
      schema:
        enum:
        - 2
        type: integer
      style: simple
    view:
      description: Geopolitical View.
      explode: true
      in: query
      name: view
      required: false
      schema:
        default: Unified
        enum:
        - Unified
        - IN
        - PK
        - IL
        - MA
        type: string
      style: form
  responses:
    "200":
      description: "OK: the search successfully returned zero or more results."
    "400":
      description: "Bad Request: one or more parameters were incorrectly specified."
    "403":
      description: |-
        Forbidden: possible causes include:
          - Service requires SSL
          - Not authorized
          - Rate or volume limit exceeded
          - Unknown referer
    "405":
      description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not supported\
        \ for this request."
    "404596":
      description: "Not Found: the HTTP request method (GET, POST, etc) or path is\
        \ incorrect."
    "5xx":
      description: An error occurred while processing the request. Please try again
        later.
  schemas:
    _search__versionNumber__geometryFilter__ext__post_request_poiList_inner_address:
      properties:
        freeformAddress:
          title: freeformAddress
          type: string
      title: _search__versionNumber__geometryFilter__ext__post_request_poiList_inner_address
      type: object
    _search__versionNumber__geometryFilter__ext__post_request_poiList_inner_poi:
      properties:
        name:
          title: name
          type: string
      title: _search__versionNumber__geometryFilter__ext__post_request_poiList_inner_poi
      type: object
    _search__versionNumber__geometryFilter__ext__post_request:
      example:
        geometryList:
        - position: "40.80558,-73.96548"
          radius: 100
          type: CIRCLE
        - type: POLYGON
          vertices:
          - "37.7524152343544,-122.43576049804686"
          - "37.70660472542312,-122.43301391601562"
          - "37.712059855877314,-122.36434936523438"
          - "37.75350561243041,-122.37396240234374"
        poiList:
        - address:
            freeformAddress: "2880 Broadway, New York, NY 10025"
          poi:
            name: S Restaurant Tom's
          position:
            lat: 40.80558
            lon: -73.96548
      properties:
        geometryList:
          items:
            $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner'
          type: array
        poiList:
          items:
            $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request_poiList_inner'
          type: array
      title: _search__versionNumber__geometryFilter__ext__post_request
      type: object
    _search__versionNumber__geometryFilter__ext__post_request_geometryList_inner:
      properties:
        position:
          title: position
          type: string
        radius:
          title: radius
          type: integer
        type:
          title: type
          type: string
        vertices:
          items:
            type: string
          title: vertices
          type: array
      title: _search__versionNumber__geometryFilter__ext__post_request_geometryList_inner
      type: object
    _search__versionNumber__geometrySearch__query___ext__post_request:
      example:
        geometryList:
        - type: POLYGON
          vertices:
          - "37.7524152343544,-122.43576049804686"
          - "37.70660472542312,-122.43301391601562"
          - "37.712059855877314,-122.36434936523438"
          - "37.75350561243041,-122.37396240234374"
        - position: "37.71205,-121.36434"
          radius: 6000
          type: CIRCLE
        - position: "37.31205,-121.36434"
          radius: 1000
          type: CIRCLE
      properties:
        geometryList:
          items:
            $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner'
          type: array
      title: _search__versionNumber__geometrySearch__query___ext__post_request
      type: object
    _search__versionNumber__searchAlongRoute__query___ext__post_request:
      example:
        route:
          points:
          - lat: 37.7524152343544
            lon: -122.43576049804686
          - lat: 37.70660472542312
            lon: -122.43301391601562
          - lat: 37.712059855877314
            lon: -122.36434936523438
          - lat: 37.75350561243041
            lon: -122.37396240234374
      properties:
        route:
          $ref: '#/components/schemas/_search__versionNumber__searchAlongRoute__query___ext__post_request_route'
      title: _search__versionNumber__searchAlongRoute__query___ext__post_request
      type: object
    _search__versionNumber__geometryFilter__ext__post_request_poiList_inner_position:
      properties:
        lat:
          format: float
          title: lat
          type: number
        lon:
          format: float
          title: lon
          type: number
      title: _search__versionNumber__geometryFilter__ext__post_request_poiList_inner_position
      type: object
    _search__versionNumber__geometryFilter__ext__post_request_poiList_inner:
      properties:
        address:
          $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_address'
        poi:
          $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_poi'
        position:
          $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_position'
      title: _search__versionNumber__geometryFilter__ext__post_request_poiList_inner
      type: object
    _search__versionNumber__routedFilter__position___heading___ext__post_request:
      example:
        poiList:
        - address:
            freeformAddress: "9500 Gilman Dr, San Diego, CA 92037"
          poi:
            name: University of California San Diego
          position:
            lat: 32.87349
            lon: -117.2378
        - address:
            freeformAddress: "7220 Trade St, San Diego, CA 92121"
          poi:
            name: Cleaire Advanced Emission Controls
          position:
            lat: 37.83274
            lon: -122.27631
      properties:
        poiList:
          items:
            $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request_poiList_inner'
          type: array
      title: _search__versionNumber__routedFilter__position___heading___ext__post_request
      type: object
    _search__versionNumber__searchAlongRoute__query___ext__post_request_route:
      properties:
        points:
          items:
            $ref: '#/components/schemas/_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_position'
          title: points
          type: array
      title: _search__versionNumber__searchAlongRoute__query___ext__post_request_route
      type: object
  securitySchemes:
    api_key:
      in: query
      name: key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_api_key
