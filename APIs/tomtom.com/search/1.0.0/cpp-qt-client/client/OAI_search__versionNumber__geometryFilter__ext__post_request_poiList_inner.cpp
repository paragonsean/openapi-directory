/**
 * Search
 * Search API is a RESTful API that allows developers to run a single line fuzzy search for addresses and POIs. Search API returns the latitude/longitude of a specific address, cross street, geographic feature, or point of interest (POI).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner() {
    this->initializeModel();
}

OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::~OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner() {}

void OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_poi_isSet = false;
    m_poi_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;
}

void OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_poi_isValid = ::OpenAPI::fromJsonValue(m_poi, json[QString("poi")]);
    m_poi_isSet = !json[QString("poi")].isNull() && m_poi_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;
}

QString OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_poi.isSet()) {
        obj.insert(QString("poi"), ::OpenAPI::toJsonValue(m_poi));
    }
    if (m_position.isSet()) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    return obj;
}

OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_address OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::getAddress() const {
    return m_address;
}
void OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::setAddress(const OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::is_address_Set() const{
    return m_address_isSet;
}

bool OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::is_address_Valid() const{
    return m_address_isValid;
}

OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_poi OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::getPoi() const {
    return m_poi;
}
void OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::setPoi(const OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_poi &poi) {
    m_poi = poi;
    m_poi_isSet = true;
}

bool OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::is_poi_Set() const{
    return m_poi_isSet;
}

bool OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::is_poi_Valid() const{
    return m_poi_isValid;
}

OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_position OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::getPosition() const {
    return m_position;
}
void OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::setPosition(const OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner_position &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::is_position_Set() const{
    return m_position_isSet;
}

bool OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::is_position_Valid() const{
    return m_position_isValid;
}

bool OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_poi.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_position.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_search__versionNumber__geometryFilter__ext__post_request_poiList_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
