/**
 * Search
 * Search API is a RESTful API that allows developers to run a single line fuzzy search for addresses and POIs. Search API returns the latitude/longitude of a specific address, cross street, geographic feature, or point of interest (POI).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner.h
 *
 * 
 */

#ifndef OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner_H
#define OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner : public OAIObject {
public:
    OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner();
    OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner(QString json);
    ~OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    qint32 getRadius() const;
    void setRadius(const qint32 &radius);
    bool is_radius_Set() const;
    bool is_radius_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<QString> getVertices() const;
    void setVertices(const QList<QString> &vertices);
    bool is_vertices_Set() const;
    bool is_vertices_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    qint32 m_radius;
    bool m_radius_isSet;
    bool m_radius_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<QString> m_vertices;
    bool m_vertices_isSet;
    bool m_vertices_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner)

#endif // OAI_search__versionNumber__geometryFilter__ext__post_request_geometryList_inner_H
