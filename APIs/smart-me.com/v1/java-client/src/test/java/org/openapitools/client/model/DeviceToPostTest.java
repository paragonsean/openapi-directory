/*
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DeviceToPost
 */
public class DeviceToPostTest {
    private final DeviceToPost model = new DeviceToPost();

    /**
     * Model tests for DeviceToPost
     */
    @Test
    public void testDeviceToPost() {
        // TODO: test DeviceToPost
    }

    /**
     * Test the property 'activePower'
     */
    @Test
    public void activePowerTest() {
        // TODO: test activePower
    }

    /**
     * Test the property 'counterReading'
     */
    @Test
    public void counterReadingTest() {
        // TODO: test counterReading
    }

    /**
     * Test the property 'counterReadingExport'
     */
    @Test
    public void counterReadingExportTest() {
        // TODO: test counterReadingExport
    }

    /**
     * Test the property 'counterReadingExportT1'
     */
    @Test
    public void counterReadingExportT1Test() {
        // TODO: test counterReadingExportT1
    }

    /**
     * Test the property 'counterReadingExportT2'
     */
    @Test
    public void counterReadingExportT2Test() {
        // TODO: test counterReadingExportT2
    }

    /**
     * Test the property 'counterReadingT1'
     */
    @Test
    public void counterReadingT1Test() {
        // TODO: test counterReadingT1
    }

    /**
     * Test the property 'counterReadingT2'
     */
    @Test
    public void counterReadingT2Test() {
        // TODO: test counterReadingT2
    }

    /**
     * Test the property 'current'
     */
    @Test
    public void currentTest() {
        // TODO: test current
    }

    /**
     * Test the property 'currentL1'
     */
    @Test
    public void currentL1Test() {
        // TODO: test currentL1
    }

    /**
     * Test the property 'currentL2'
     */
    @Test
    public void currentL2Test() {
        // TODO: test currentL2
    }

    /**
     * Test the property 'currentL3'
     */
    @Test
    public void currentL3Test() {
        // TODO: test currentL3
    }

    /**
     * Test the property 'deviceEnergyType'
     */
    @Test
    public void deviceEnergyTypeTest() {
        // TODO: test deviceEnergyType
    }

    /**
     * Test the property 'digitalInput1'
     */
    @Test
    public void digitalInput1Test() {
        // TODO: test digitalInput1
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'meterSubType'
     */
    @Test
    public void meterSubTypeTest() {
        // TODO: test meterSubType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'powerFactor'
     */
    @Test
    public void powerFactorTest() {
        // TODO: test powerFactor
    }

    /**
     * Test the property 'powerFactorL1'
     */
    @Test
    public void powerFactorL1Test() {
        // TODO: test powerFactorL1
    }

    /**
     * Test the property 'powerFactorL2'
     */
    @Test
    public void powerFactorL2Test() {
        // TODO: test powerFactorL2
    }

    /**
     * Test the property 'powerFactorL3'
     */
    @Test
    public void powerFactorL3Test() {
        // TODO: test powerFactorL3
    }

    /**
     * Test the property 'serial'
     */
    @Test
    public void serialTest() {
        // TODO: test serial
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    public void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'valueDate'
     */
    @Test
    public void valueDateTest() {
        // TODO: test valueDate
    }

    /**
     * Test the property 'voltage'
     */
    @Test
    public void voltageTest() {
        // TODO: test voltage
    }

    /**
     * Test the property 'voltageL1'
     */
    @Test
    public void voltageL1Test() {
        // TODO: test voltageL1
    }

    /**
     * Test the property 'voltageL2'
     */
    @Test
    public void voltageL2Test() {
        // TODO: test voltageL2
    }

    /**
     * Test the property 'voltageL3'
     */
    @Test
    public void voltageL3Test() {
        // TODO: test voltageL3
    }

}
