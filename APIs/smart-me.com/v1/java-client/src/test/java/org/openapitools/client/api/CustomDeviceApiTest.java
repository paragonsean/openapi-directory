/*
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CustomDeviceToPost;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomDeviceApi
 */
@Disabled
public class CustomDeviceApiTest {

    private final CustomDeviceApi api = new CustomDeviceApi();

    /**
     * Gets a Custom Device by it&#39;s ID
     *
     * Gets a Device by it&#39;s ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiCustomDeviceIdGetTest() throws ApiException {
        String id = null;
        CustomDeviceToPost response = api.apiCustomDeviceIdGet(id);
        // TODO: test validations
    }

    /**
     * Gets all Custom Devices
     *
     * Gets all Devices
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customDeviceGetTest() throws ApiException {
        List<CustomDeviceToPost> response = api.customDeviceGet();
        // TODO: test validations
    }

    /**
     * Creates or updates a Custom Device or updates it&#39;s values.
     *
     * Creates or updates a Custom Device or updates it&#39;s values.              A Custom Device can be any device that like to add some measurement values to the smart-me Cloud.              Only use a custom device for all non meters.              For a new device leave the ID empty. To create a device you have to set the DeviceEnergyType.              To update values, add the ID of the device and the values you like to set.  (See the Data Type Model for more Information)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customDevicePostTest() throws ApiException {
        CustomDeviceToPost customDeviceToPost = null;
        CustomDeviceToPost response = api.customDevicePost(customDeviceToPost);
        // TODO: test validations
    }

}
