openapi: 3.0.0
info:
  description: With the smart-me REST API you get Access to all your devices in the
    smart-me Cloud and you can add your own devices. So its an easy way to add the
    smart-me Cloud support to your Hardware or Software Product.
  title: smart-me
  version: v1
  x-apisguru-categories:
  - iot
  x-logo:
    url: http://smart-me.com/Images/bootstrap/logo.png
  x-origin:
  - format: openapi
    url: https://smart-me.com/swagger/docs/v1
    version: "3.0"
  x-providerName: smart-me.com
servers:
- url: https://smart-me.com:443
paths:
  /api/AccessToken:
    put:
      deprecated: false
      description: Creates a Access Token to write on a Card (e.g. NFC)
      operationId: access_token_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
          text/json:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Creates a Access Token to write on a Card (e.g. NFC)
      tags:
      - AccessToken
      x-openapi-router-controller: openapi_server.controllers.access_token_controller
      x-codegen-request-body-name: body
  /api/Account/login:
    get:
      deprecated: false
      operationId: account_login
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      tags:
      - Account
      x-openapi-router-controller: openapi_server.controllers.account_controller
    post:
      deprecated: false
      operationId: api_account_login_post
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      tags:
      - Account
      x-openapi-router-controller: openapi_server.controllers.account_controller
  /api/Actions:
    post:
      deprecated: false
      description: Set an action for the specified device.
      operationId: actions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionToPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionToPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ActionToPost'
          text/json:
            schema:
              $ref: '#/components/schemas/ActionToPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/ActionToPost'
        description: The Action Data
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
      summary: Set an action for the specified device.
      tags:
      - Actions
      x-openapi-router-controller: openapi_server.controllers.actions_controller
      x-codegen-request-body-name: body
  /api/Actions/{id}:
    get:
      deprecated: false
      description: Gets all available Actions of a Device
      operationId: actions_get
      parameters:
      - description: The ID of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionInformation'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ActionInformation'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionInformation'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ActionInformation'
                type: array
          description: OK
      summary: Gets all available Actions of a Device
      tags:
      - Actions
      x-openapi-router-controller: openapi_server.controllers.actions_controller
  /api/AdditionalDeviceInformation/{id}:
    get:
      deprecated: false
      description: Gets the additional information (e.g. Firmware Version) about a
        device.
      operationId: additional_device_information_get
      parameters:
      - description: The ID of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalDeviceInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/AdditionalDeviceInformation'
          description: OK
      summary: Gets the additional information (e.g. Firmware Version) about a device.
      tags:
      - AdditionalDeviceInformation
      x-openapi-router-controller: openapi_server.controllers.additional_device_information_controller
  /api/CustomDevice:
    get:
      deprecated: false
      description: Gets all Devices
      operationId: custom_device_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDeviceToPost'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDeviceToPost'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDeviceToPost'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDeviceToPost'
                type: array
          description: OK
      summary: Gets all Custom Devices
      tags:
      - CustomDevice
      x-openapi-router-controller: openapi_server.controllers.custom_device_controller
    post:
      deprecated: false
      description: "Creates or updates a Custom Device or updates it's values.\r\n\
        \            A Custom Device can be any device that like to add some measurement\
        \ values to the smart-me Cloud.\r\n            Only use a custom device for\
        \ all non meters.\r\n            For a new device leave the ID empty. To create\
        \ a device you have to set the DeviceEnergyType.\r\n            To update\
        \ values, add the ID of the device and the values you like to set.  (See the\
        \ Data Type Model for more Information)"
      operationId: custom_device_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
        description: Device object with all the data
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
          description: OK
        "401":
          description: Unauthorized
      summary: Creates or updates a Custom Device or updates it's values.
      tags:
      - CustomDevice
      x-openapi-router-controller: openapi_server.controllers.custom_device_controller
      x-codegen-request-body-name: body
  /api/CustomDevice/{id}:
    get:
      deprecated: false
      description: Gets a Device by it's ID
      operationId: api_custom_device_id_get
      parameters:
      - description: The ID of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
          description: OK
      summary: Gets a Custom Device by it's ID
      tags:
      - CustomDevice
      x-openapi-router-controller: openapi_server.controllers.custom_device_controller
  /api/DeviceBySerial:
    get:
      deprecated: false
      description: Gets a Device by it's Serial Number. The Serial is the part before
        the "-".
      operationId: device_by_serial_get
      parameters:
      - description: The Serial Number of the device
        explode: true
        in: query
        name: serial
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/xml:
              schema:
                $ref: '#/components/schemas/Device'
          description: OK
      summary: Gets a Device by it's Serial Number. The Serial is the part before
        the "-".
      tags:
      - DeviceBySerial
      x-openapi-router-controller: openapi_server.controllers.device_by_serial_controller
  /api/Devices:
    get:
      deprecated: false
      description: Gets all Devices
      operationId: devices_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: OK
      summary: Gets all Devices
      tags:
      - Devices
      x-openapi-router-controller: openapi_server.controllers.devices_controller
    post:
      deprecated: false
      description: "Creates or updates a Device or updates it's values. \r\n     \
        \       For a new device leave the ID empty. To create a device you have to\
        \ set the DeviceEnergyType.\r\n            To update values, add the ID of\
        \ the device and the values you like to set.  (See the Data Type Model for\
        \ more Information)"
      operationId: devices_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
          text/json:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
        description: Device object with all the data
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceToPost'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeviceToPost'
            text/json:
              schema:
                $ref: '#/components/schemas/DeviceToPost'
            text/xml:
              schema:
                $ref: '#/components/schemas/DeviceToPost'
          description: OK
        "401":
          description: Unauthorized
      summary: Creates or updates a Device or updates it's values.
      tags:
      - Devices
      x-openapi-router-controller: openapi_server.controllers.devices_controller
      x-codegen-request-body-name: body
  /api/Devices/{id}:
    get:
      deprecated: false
      description: Gets a Device by it's ID
      operationId: api_devices_id_get
      parameters:
      - description: The ID of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/xml:
              schema:
                $ref: '#/components/schemas/Device'
          description: OK
      summary: Gets a Device by it's ID
      tags:
      - Devices
      x-openapi-router-controller: openapi_server.controllers.devices_controller
    put:
      deprecated: false
      description: "Updates the On/Off Switch on a device\r\n            For new implementations\
        \ please use the \"actions\" command"
      operationId: devices_put
      parameters:
      - description: The ID of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The new state of the switch
        explode: true
        in: query
        name: switchState
        required: true
        schema:
          type: boolean
        style: form
      - description: "The number of the switch if there are multiple (1 for L1, 3\
          \ for L3)"
        explode: true
        in: query
        name: switchNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "401":
          description: Unauthorized
        "405":
          description: MethodNotAllowed
      summary: "Updates the On/Off Switch on a device. \r\n            For new implementations\
        \ please use the \"actions\" command"
      tags:
      - Devices
      x-openapi-router-controller: openapi_server.controllers.devices_controller
  /api/DevicesByEnergy:
    get:
      deprecated: false
      description: Gets all Devices for an Energy Type
      operationId: devices_by_energy_get
      parameters:
      - explode: true
        in: query
        name: meterEnergyType
        required: true
        schema:
          enum:
          - MeterTypeUnknown
          - MeterTypeElectricity
          - MeterTypeWater
          - MeterTypeGas
          - MeterTypeHeat
          - MeterTypeHCA
          - MeterTypeAllMeters
          - MeterTypeTemperature
          - MeterTypeMBusGateway
          - MeterTypeRS485Gateway
          - MeterTypeCustomDevice
          - MeterTypeCompressedAir
          - MeterTypeSolarLog
          - MeterTypeVirtualMeter
          - MeterTypeWMBusGateway
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: OK
      summary: Gets all Devices for an Energy Type
      tags:
      - DevicesByEnergy
      x-openapi-router-controller: openapi_server.controllers.devices_by_energy_controller
  /api/DevicesBySubType:
    get:
      deprecated: false
      description: Gets all Devices by it's Sub Type (e.g. E-Charging Station)
      operationId: devices_by_sub_type_get
      parameters:
      - explode: true
        in: query
        name: meterSubType
        required: true
        schema:
          enum:
          - MeterSubTypeUnknown
          - MeterSubTypeCold
          - MeterSubTypeHeat
          - MeterSubTypeChargingStation
          - MeterSubTypeElectricity
          - MeterSubTypeWater
          - MeterSubTypeGas
          - MeterSubTypeElectricityHeat
          - MeterSubTypeTemperature
          - MeterSubTypeVirtualBattery
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: OK
      summary: Gets all Devices by it's Sub Type (e.g. E-Charging Station)
      tags:
      - DevicesBySubType
      x-openapi-router-controller: openapi_server.controllers.devices_by_sub_type_controller
  /api/FastSendDeviceValues/{id}:
    get:
      deprecated: false
      operationId: fast_send_device_values_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: "Force a device to send the data every second (if supported). This\
        \ for about 30s.\r\n            Don't use this call to force a device to send\
        \ the data every second for a longer time."
      tags:
      - FastSendDeviceValues
      x-openapi-router-controller: openapi_server.controllers.fast_send_device_values_controller
  /api/Folder/{id}:
    get:
      deprecated: false
      description: Gets the Values for a folder or a meter
      operationId: folder_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderData'
            text/json:
              schema:
                $ref: '#/components/schemas/FolderData'
          description: OK
      summary: Gets the Values for a folder or a meter
      tags:
      - Folder
      x-openapi-router-controller: openapi_server.controllers.folder_controller
  /api/FolderMenu:
    get:
      deprecated: false
      operationId: folder_menu_get
      parameters:
      - description: "(optional) Filter for the folders and meters: \r\n         \
          \   all: load everything\r\n            assigned: load only folders and\
          \ meters that are assigend to a folder\r\n            unassigend: load only\
          \ meters that are not assigend to a folder\r\n            user: load only\
          \ folder and all users assigned to this folders\r\n            subuserlist:\
          \ load all subusers as a list"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderMenuConfiguration'
            application/xml:
              schema:
                $ref: '#/components/schemas/FolderMenuConfiguration'
            text/json:
              schema:
                $ref: '#/components/schemas/FolderMenuConfiguration'
            text/xml:
              schema:
                $ref: '#/components/schemas/FolderMenuConfiguration'
          description: OK
      summary: Gets the folder menu items (each item might contain child items)
      tags:
      - FolderMenu
      x-openapi-router-controller: openapi_server.controllers.folder_menu_controller
    post:
      deprecated: false
      operationId: folder_menu_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderMenuConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FolderMenuConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/FolderMenuConfiguration'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderMenuConfiguration'
          text/xml:
            schema:
              $ref: '#/components/schemas/FolderMenuConfiguration'
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
      summary: Creates and updates the folder menu items
      tags:
      - FolderMenu
      x-openapi-router-controller: openapi_server.controllers.folder_menu_controller
      x-codegen-request-body-name: body
  /api/Health:
    get:
      deprecated: false
      operationId: health_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: "A method returning HTTP 200 OK when queried.\r\n            It is\
        \ used by Kubernetes probes to determine whether the app is healthy."
      tags:
      - Health
      x-openapi-router-controller: openapi_server.controllers.health_controller
  /api/MBus:
    post:
      deprecated: false
      description: "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\
        \n            Just send us the M-BUS Telegram (RSP_UD) and we will do the\
        \ Rest."
      operationId: m_bus_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MBusData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MBusData'
          application/xml:
            schema:
              $ref: '#/components/schemas/MBusData'
          text/json:
            schema:
              $ref: '#/components/schemas/MBusData'
          text/xml:
            schema:
              $ref: '#/components/schemas/MBusData'
        description: The M-BUS Telegram
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "400":
          description: BadRequest
        "401":
          description: Unauthorized
      summary: "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\n \
        \           Just send us the M-BUS Telegram (RSP_UD) and we will do the Rest."
      tags:
      - MBus
      x-openapi-router-controller: openapi_server.controllers.m_bus_controller
      x-codegen-request-body-name: body
  /api/MeterFolderInformation:
    post:
      deprecated: false
      description: Sets the Name of a Meter or a Folder
      operationId: meter_folder_information_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
          text/json:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
      summary: Sets the Name of a Meter or a Folder
      tags:
      - MeterFolderInformation
      x-openapi-router-controller: openapi_server.controllers.meter_folder_information_controller
      x-codegen-request-body-name: body
  /api/MeterFolderInformation/{id}:
    get:
      deprecated: false
      description: "Beta: Gets the General Information for a Meter or a Folder"
      operationId: meter_folder_information_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterFolderInformation'
            application/xml:
              schema:
                $ref: '#/components/schemas/MeterFolderInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/MeterFolderInformation'
            text/xml:
              schema:
                $ref: '#/components/schemas/MeterFolderInformation'
          description: OK
      summary: "Beta: Gets the General Information for a Meter or a Folder"
      tags:
      - MeterFolderInformation
      x-openapi-router-controller: openapi_server.controllers.meter_folder_information_controller
  /api/MeterValues/{id}:
    get:
      deprecated: false
      description: Gets the Values for a Meter at a given Date. The first Value found
        before the given Date is returned.
      operationId: meter_values_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: date
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceInPast'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeviceInPast'
            text/json:
              schema:
                $ref: '#/components/schemas/DeviceInPast'
            text/xml:
              schema:
                $ref: '#/components/schemas/DeviceInPast'
          description: OK
      summary: "Gets the Values for a Meter at a given Date. \r\n            The first\
        \ Value found before the given Date is returned."
      tags:
      - MeterValues
      x-openapi-router-controller: openapi_server.controllers.meter_values_controller
  /api/RegisterForRealtimeApi:
    get:
      deprecated: false
      description: Gets all registrations for the Realtime API.
      operationId: register_for_realtime_api_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RegisterRealtimeApiData'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/RegisterRealtimeApiData'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/RegisterRealtimeApiData'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/RegisterRealtimeApiData'
                type: array
          description: OK
      summary: Gets all registrations for the Realtime API.
      tags:
      - RegisterForRealtimeApi
      x-openapi-router-controller: openapi_server.controllers.register_for_realtime_api_controller
    post:
      deprecated: false
      description: "Creates a new registration for the realtime API. The Realtime\
        \ API sends you the data of the registred devices as soon as we have them\
        \ on the cloud. More Information about the realtime API: https://www.smart-me.com/Description/api/realtimeapi.aspx"
      operationId: register_for_realtime_api_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRealtimeApiData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRealtimeApiData'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegisterRealtimeApiData'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterRealtimeApiData'
          text/xml:
            schema:
              $ref: '#/components/schemas/RegisterRealtimeApiData'
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
      summary: "Creates a new registration for the realtime API. The Realtime API\
        \ sends you the data of the registred devices as soon as we have them on the\
        \ cloud.\r\n             More Information about the realtime API: https://www.smart-me.com/Description/api/realtimeapi.aspx"
      tags:
      - RegisterForRealtimeApi
      x-openapi-router-controller: openapi_server.controllers.register_for_realtime_api_controller
      x-codegen-request-body-name: body
  /api/RegisterForRealtimeApi/{id}:
    delete:
      deprecated: false
      description: Deletes a realtime API registration.
      operationId: register_for_realtime_api_delete
      parameters:
      - description: The ID of the realtime API registration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Deletes a realtime API registration.
      tags:
      - RegisterForRealtimeApi
      x-openapi-router-controller: openapi_server.controllers.register_for_realtime_api_controller
  /api/SmartMeDeviceConfiguration:
    post:
      deprecated: false
      operationId: smart_me_device_configuration_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
          application/xml:
            schema:
              $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
          text/json:
            schema:
              $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
          text/xml:
            schema:
              $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
      summary: Sets the configuration of a smart-me device. The device needs to be
        online.
      tags:
      - SmartMeDeviceConfiguration
      x-openapi-router-controller: openapi_server.controllers.smart_me_device_configuration_controller
      x-codegen-request-body-name: body
  /api/SmartMeDeviceConfiguration/{id}:
    get:
      deprecated: false
      operationId: smart_me_device_configuration_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
            application/xml:
              schema:
                $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
            text/json:
              schema:
                $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
            text/xml:
              schema:
                $ref: '#/components/schemas/SmartMeDeviceConfigurationContainer'
          description: OK
      summary: Gets the configuration of a smart-me device.
      tags:
      - SmartMeDeviceConfiguration
      x-openapi-router-controller: openapi_server.controllers.smart_me_device_configuration_controller
  /api/SubUser:
    post:
      deprecated: false
      operationId: sub_user_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubUserData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubUserData'
          application/xml:
            schema:
              $ref: '#/components/schemas/SubUserData'
          text/json:
            schema:
              $ref: '#/components/schemas/SubUserData'
          text/xml:
            schema:
              $ref: '#/components/schemas/SubUserData'
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
      summary: "Creates or updates a subuser.\r\n            To create a new user\
        \ set no ID (empty)"
      tags:
      - SubUser
      x-openapi-router-controller: openapi_server.controllers.sub_user_controller
      x-codegen-request-body-name: body
  /api/SubUser/{id}:
    delete:
      deprecated: false
      operationId: sub_user_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete a subuser
      tags:
      - SubUser
      x-openapi-router-controller: openapi_server.controllers.sub_user_controller
    get:
      deprecated: false
      operationId: sub_user_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubUserData'
            application/xml:
              schema:
                $ref: '#/components/schemas/SubUserData'
            text/json:
              schema:
                $ref: '#/components/schemas/SubUserData'
            text/xml:
              schema:
                $ref: '#/components/schemas/SubUserData'
          description: OK
      summary: Get a sub user. The user must be assigend to the user that makes this
        call.
      tags:
      - SubUser
      x-openapi-router-controller: openapi_server.controllers.sub_user_controller
  /api/User:
    delete:
      deprecated: false
      operationId: user_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Triggers user account deletion.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      deprecated: false
      description: Gets the informations for the user.
      operationId: user_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Gets the informations for the user.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /api/Values/{id}:
    get:
      deprecated: false
      operationId: values_get
      parameters:
      - description: The ID of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValuesData'
            text/json:
              schema:
                $ref: '#/components/schemas/ValuesData'
          description: OK
      summary: Gets all (last) values of a device
      tags:
      - Values
      x-openapi-router-controller: openapi_server.controllers.values_controller
  /api/ValuesInPast/{id}:
    get:
      deprecated: false
      description: Gets the Values for a device at a given Date. The first Value found
        before the given Date is returned.
      operationId: values_in_past_get
      parameters:
      - description: The ID of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: the date of the value
        explode: true
        in: query
        name: date
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValuesData'
            text/json:
              schema:
                $ref: '#/components/schemas/ValuesData'
          description: OK
      summary: "Gets all (last) values of a device\r\n            The first Value\
        \ found before the given Date is returned."
      tags:
      - ValuesInPast
      x-openapi-router-controller: openapi_server.controllers.values_in_past_controller
  /api/ValuesInPastMultiple/{id}:
    get:
      deprecated: false
      operationId: values_in_past_multiple_get
      parameters:
      - description: The ID of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The date when the first value should start
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The date when the last value should start
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The interval in minutes betwenn the values. 0 means as fast as
          possible. Only 1000 values can be get in one call.
        explode: true
        in: query
        name: interval
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValuesData'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ValuesData'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValuesData'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ValuesData'
                type: array
          description: OK
      summary: Gets multiple values of a device. This call needs a smart-me professional
        licence.
      tags:
      - ValuesInPastMultiple
      x-openapi-router-controller: openapi_server.controllers.values_in_past_multiple_controller
  /api/VirtualBillingMeterActive:
    get:
      deprecated: false
      description: "Beta: Gets all active virtual meters."
      operationId: virtual_billing_meter_active_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: OK
      summary: "Beta: Gets all active virtual meters"
      tags:
      - VirtualBillingMeterActive
      x-openapi-router-controller: openapi_server.controllers.virtual_billing_meter_active_controller
    post:
      deprecated: false
      description: "Beta: Virtual Meter API: Activates a Meter and add the Consumption\
        \ to a Virtual Meter assosiated with the User."
      operationId: virtual_billing_meter_active_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
          application/xml:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
          text/json:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
          text/xml:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
        description: The Meter to activate
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/xml:
              schema:
                $ref: '#/components/schemas/Device'
          description: OK
        "400":
          description: BadRequest
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: "Beta: Virtual Meter API: Activates a Meter and add the Consumption\
        \ to a Virtual Meter assosiated with the User."
      tags:
      - VirtualBillingMeterActive
      x-openapi-router-controller: openapi_server.controllers.virtual_billing_meter_active_controller
      x-codegen-request-body-name: body
  /api/VirtualBillingMeterDeactivate:
    post:
      deprecated: false
      description: "Beta: Virtual Meter API: Deactivates a Virtual Meter."
      operationId: virtual_billing_meter_deactivate_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
          application/xml:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
          text/json:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
          text/xml:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
        description: The Meter to activate
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
        "400":
          description: BadRequest
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: "Beta: Virtual Meter API: Deactivates a Virtual Meter."
      tags:
      - VirtualBillingMeterDeactivate
      x-openapi-router-controller: openapi_server.controllers.virtual_billing_meter_deactivate_controller
      x-codegen-request-body-name: body
  /api/VirtualBillingMeters:
    get:
      deprecated: false
      description: "Beta: Gets all Meters available to activate as a Virtual Meter."
      operationId: virtual_billing_meters_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: OK
      summary: "Beta: Gets all Meters available to activate as a Virtual Meter."
      tags:
      - VirtualBillingMeters
      x-openapi-router-controller: openapi_server.controllers.virtual_billing_meters_controller
  /api/VirtualMeterCalculateFormula:
    get:
      deprecated: false
      description: "Calculates a virtual meter from a formula.\r\n            \r\n\
        \            A meter is coded as ID(\"METERID\")\r\n            Ariphmetical\
        \ operators:\r\n             ()  parentheses;  \r\n             +   plus (a\
        \ + b); \r\n             -  minus (a - b); \r\n             *  multiplycation\
        \ symbol (a * b); \r\n             /  divide symbol (a / b); \r\n        \
        \    Example: (ID(\"63ac09cb-4e5f-4f3e-bd27-ad8c30bdfc0c\") + ID(\"0209555e-9dc4-4e84-a166-a864488b4b12\"\
        )) * 2"
      operationId: virtual_meter_calculate_formula_get
      parameters:
      - explode: true
        in: query
        name: formula
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/xml:
              schema:
                $ref: '#/components/schemas/Device'
          description: OK
      summary: "Calculates a virtual meter from a formula. \r\n            A meter\
        \ is coded as ID(\"METERID\")"
      tags:
      - VirtualMeterCalculateFormula
      x-openapi-router-controller: openapi_server.controllers.virtual_meter_calculate_formula_controller
  /api/VirtualTariff:
    get:
      deprecated: false
      description: Gets all Virtual Tariffs of a user
      operationId: virtual_tariff_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffsOfFolder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffsOfFolder'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffsOfFolder'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffsOfFolder'
                type: array
          description: OK
      summary: Gets all Virtual Tariffs of a user
      tags:
      - VirtualTariff
      x-openapi-router-controller: openapi_server.controllers.virtual_tariff_controller
  /api/VirtualTariff/{id}:
    get:
      deprecated: false
      description: Gets all virtual tariffs of a folder
      operationId: api_virtual_tariff_id_get
      parameters:
      - description: The ID of the Folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualTariffsOfFolder'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualTariffsOfFolder'
          description: OK
      summary: Gets all virtual tariffs of a folder
      tags:
      - VirtualTariff
      x-openapi-router-controller: openapi_server.controllers.virtual_tariff_controller
  /api/VirtualTariffConsumption:
    get:
      deprecated: false
      description: Gets the consumption of a folder with a virtuall tariffs.
      operationId: virtual_tariff_consumption_get
      parameters:
      - description: The ID of the Folder
        explode: true
        in: query
        name: folderId
        required: true
        schema:
          type: string
        style: form
      - description: The start date (UTC)
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The end date (UTC)
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffConsumptionData'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffConsumptionData'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffConsumptionData'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffConsumptionData'
                type: array
          description: OK
      summary: Gets the consumption of a folder with a virtuall tariffs.
      tags:
      - VirtualTariffConsumption
      x-openapi-router-controller: openapi_server.controllers.virtual_tariff_consumption_controller
  /api/VirtualTariffsForProperty/{id}:
    get:
      deprecated: false
      description: Gets all Virtual Tariffs for a property (folder)
      operationId: virtual_tariffs_for_property_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffsOfFolder'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffsOfFolder'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffsOfFolder'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualTariffsOfFolder'
                type: array
          description: OK
      summary: Gets all Virtual Tariffs for a property (folder)
      tags:
      - VirtualTariffsForProperty
      x-openapi-router-controller: openapi_server.controllers.virtual_tariffs_for_property_controller
  /api/VirtualTariffsStatusForProperty/{id}:
    get:
      deprecated: false
      operationId: virtual_tariffs_status_for_property_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Gets the calculation status for a virtual tariff property
      tags:
      - VirtualTariffsStatusForProperty
      x-openapi-router-controller: openapi_server.controllers.virtual_tariffs_status_for_property_controller
  /api/folder/assign:
    post:
      deprecated: false
      operationId: folder_assign_post
      parameters:
      - description: The ID of the meter or folder that should be assign
        explode: true
        in: query
        name: source
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the meter or folder that should be the parent
        explode: true
        in: query
        name: target
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content
      summary: Assign a folder (source) or meter to another folder (target). Can be
        used to create a folder structure.
      tags:
      - FolderAssign
      x-openapi-router-controller: openapi_server.controllers.folder_assign_controller
  /api/folder/settings/{id}:
    delete:
      deprecated: false
      operationId: folder_settings_delete
      parameters:
      - description: The ID of the folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Deletes a folder
      tags:
      - FolderSettings
      x-openapi-router-controller: openapi_server.controllers.folder_settings_controller
    get:
      deprecated: false
      operationId: folder_settings_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/FolderSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/FolderSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/FolderSettings'
          description: OK
      summary: Gets the settings of a folder or meter
      tags:
      - FolderSettings
      x-openapi-router-controller: openapi_server.controllers.folder_settings_controller
    post:
      deprecated: false
      operationId: folder_settings_post
      parameters:
      - description: The ID of the folder or meter to edit. Use and empty ID to add
          a new folder
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FolderSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/FolderSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/FolderSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/FolderSettings'
        description: The folder or meter data
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderMenuItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/FolderMenuItem'
            text/json:
              schema:
                $ref: '#/components/schemas/FolderMenuItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/FolderMenuItem'
          description: OK
      summary: Add or edit a folder or a meter. To add a new folder use and empty
        ID
      tags:
      - FolderSettings
      x-openapi-router-controller: openapi_server.controllers.folder_settings_controller
      x-codegen-request-body-name: body
  /api/folder/user/assign:
    delete:
      deprecated: false
      operationId: user_to_folder_assign_delete
      parameters:
      - description: The ID of the user that should be de-assign
        explode: true
        in: query
        name: source
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the folder
        explode: true
        in: query
        name: target
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content
      summary: Deletes a user to folder assignement
      tags:
      - UserToFolderAssign
      x-openapi-router-controller: openapi_server.controllers.user_to_folder_assign_controller
    post:
      deprecated: false
      operationId: user_to_folder_assign_post
      parameters:
      - description: The ID of the user that should be assign
        explode: true
        in: query
        name: source
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the folder that should be the parent
        explode: true
        in: query
        name: target
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the old folder (in case of a drag and drop to a new
          folder)
        explode: true
        in: query
        name: oldFolder
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: No Content
      summary: Assign a user to a folder
      tags:
      - UserToFolderAssign
      x-openapi-router-controller: openapi_server.controllers.user_to_folder_assign_controller
  /api/oauth/authorize:
    get:
      deprecated: false
      operationId: o_auth_authorize
      parameters:
      - explode: true
        in: query
        name: client_id
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: redirect_uri
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_secret
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      tags:
      - OAuth
      x-openapi-router-controller: openapi_server.controllers.o_auth_controller
    post:
      deprecated: false
      operationId: api_oauth_authorize_post
      parameters:
      - explode: true
        in: query
        name: client_id
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: redirect_uri
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: client_secret
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      tags:
      - OAuth
      x-openapi-router-controller: openapi_server.controllers.o_auth_controller
  /api/pico:
    get:
      deprecated: false
      operationId: pico_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: OK
      summary: Gets all pico charging stations for this user
      tags:
      - Pico
      x-openapi-router-controller: openapi_server.controllers.pico_controller
  /api/pico/charging/{id}:
    get:
      deprecated: false
      operationId: pico_charging_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PicoChargingData'
            text/json:
              schema:
                $ref: '#/components/schemas/PicoChargingData'
          description: OK
      summary: Gets the active charging data of a pico station
      tags:
      - PicoCharging
      x-openapi-router-controller: openapi_server.controllers.pico_charging_controller
  /api/pico/history/{id}:
    get:
      deprecated: false
      operationId: pico_charging_history_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PicoChargingHistoryData'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PicoChargingHistoryData'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PicoChargingHistoryData'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PicoChargingHistoryData'
                type: array
          description: OK
      summary: Gets the last charging history for a pico station
      tags:
      - PicoChargingHistory
      x-openapi-router-controller: openapi_server.controllers.pico_charging_history_controller
  /api/pico/loadmanagementgroup:
    get:
      deprecated: false
      operationId: api_pico_loadmanagementgroup_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PicoLoadmanagementGroupDto'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PicoLoadmanagementGroupDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PicoLoadmanagementGroupDto'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PicoLoadmanagementGroupDto'
                type: array
          description: OK
      summary: "GET: api/pico/loadmanagementgroup\r\n            \r\n            Returns\
        \ all available load management groups"
      tags:
      - PicoLoadmanagementGroup
      x-openapi-router-controller: openapi_server.controllers.pico_loadmanagement_group_controller
  /api/pico/loadmanagementgroup/current/{serial}:
    post:
      deprecated: false
      operationId: pico_loadmanagement_set_dynamic_current_post
      parameters:
      - description: The serial number can be any pico serial in the group (e.g. 700001)
        explode: false
        in: path
        name: serial
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The dynamic current of the group (in mA)
        explode: true
        in: query
        name: current
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Sets the dynamic current of a load management group or a single station.
      tags:
      - PicoLoadmanagementSetDynamicCurrent
      x-openapi-router-controller: openapi_server.controllers.pico_loadmanagement_set_dynamic_current_controller
  /api/pico/loadmanagementgroup/{id}:
    get:
      deprecated: false
      operationId: pico_loadmanagement_group_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PicoLoadmanagementGroupDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/PicoLoadmanagementGroupDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PicoLoadmanagementGroupDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/PicoLoadmanagementGroupDto'
          description: OK
      summary: "GET: api/pico/loadmanagementgroup\r\n            \r\n            Returns\
        \ a pico load management group by it's id"
      tags:
      - PicoLoadmanagementGroup
      x-openapi-router-controller: openapi_server.controllers.pico_loadmanagement_group_controller
  /api/pico/settings/{id}:
    get:
      deprecated: false
      operationId: pico_settings_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PicoSettingsDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/PicoSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PicoSettingsDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/PicoSettingsDto'
          description: OK
      summary: "GET: api/pico/settings\r\n            \r\n            Returns the\
        \ settings of a pico charging station."
      tags:
      - PicoSettings
      x-openapi-router-controller: openapi_server.controllers.pico_settings_controller
  /api/pico/tryenablecablelock/{id}:
    post:
      deprecated: false
      operationId: pico_enable_fix_cable_lock_post
      parameters:
      - description: The ID of the pico
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK
      summary: Try to fix lock the cable of a pico. The pico must be online and a
        cable (without car) needs to be connected. Otherwise this will fail.
      tags:
      - PicoEnableFixCableLock
      x-openapi-router-controller: openapi_server.controllers.pico_enable_fix_cable_lock_controller
components:
  schemas:
    AccessTokenToPut:
      description: Container Class for the Put action of an Access Token
      example:
        UserId: 6
        CardId: 0
      properties:
        CardId:
          description: The ID of the Card
          format: int64
          title: CardId
          type: integer
        UserId:
          description: "The ID of the User. The credentials provided must have permission\
            \ to edit the user.\r\n            If no ID is provided, the user in the\
            \ credentials is taken."
          format: int64
          title: UserId
          type: integer
      title: AccessTokenToPut
      type: object
    ActionInformation:
      description: The Information about an Action of a device
      example:
        ActionType: OnOffAction
        MinValue: 6.027456183070403
        MaxValue: 0.8008281904610115
        ObisCode: ObisCode
        Name: Name
      properties:
        ActionType:
          description: The Type of this action.
          enum:
          - OnOffAction
          - AnalogAction
          title: ActionType
          type: string
        MaxValue:
          description: The maximum value of this action (e.g. for an AnalogAction)
          format: double
          title: MaxValue
          type: number
        MinValue:
          description: The minimum value of this action (e.g. for an AnalogAction)
          format: double
          title: MinValue
          type: number
        Name:
          description: The Name of this action
          title: Name
          type: string
        ObisCode:
          description: The Obis Code of this action. This is used as ID.
          title: ObisCode
          type: string
      title: ActionInformation
      type: object
    ActionToPost:
      description: Container Class for an action to post
      example:
        Actions:
        - Value: 0.8008281904610115
          ObisCode: ObisCode
        - Value: 0.8008281904610115
          ObisCode: ObisCode
        DeviceID: DeviceID
      properties:
        Actions:
          description: List with all Actions for this device
          items:
            $ref: '#/components/schemas/ActionToPostItem'
          title: Actions
          type: array
        DeviceID:
          description: The ID of the Device
          title: DeviceID
          type: string
      title: ActionToPost
      type: object
    ActionToPostItem:
      description: Container class for an action item
      example:
        Value: 0.8008281904610115
        ObisCode: ObisCode
      properties:
        ObisCode:
          description: The ObisCode (ID) of the Action
          title: ObisCode
          type: string
        Value:
          description: The Value to Post
          format: double
          title: Value
          type: number
      title: ActionToPostItem
      type: object
    AdditionalDeviceInformation:
      description: Additional Information For a device
      example:
        AdditionalMeterSerialNumber: AdditionalMeterSerialNumber
        NetworkConnectionRSSI: 1
        NetworkConnection: NetworkConnection
        ID: ID
        HardwareVersion: 6
        FirmwareVersion: 0
      properties:
        AdditionalMeterSerialNumber:
          description: An additional Meter serial number. e.g. the number of a meter
            a smart-me device is connected to.
          title: AdditionalMeterSerialNumber
          type: string
        FirmwareVersion:
          description: The Firmware Version of a Meter
          format: int32
          title: FirmwareVersion
          type: integer
        HardwareVersion:
          description: The Hardware Version of a Meter.
          format: int32
          title: HardwareVersion
          type: integer
        ID:
          description: The ID of the device
          title: ID
          type: string
        NetworkConnection:
          description: "The mode how the device is connected to the network. Valid\
            \ values are:\r\n            wifi, gprs, ltecatm1, ltenbiot, meshmobile,\
            \ meshwifi"
          title: NetworkConnection
          type: string
        NetworkConnectionRSSI:
          description: "The connection RSSI value (0 is bad, 100 is best)"
          format: int32
          title: NetworkConnectionRSSI
          type: integer
      title: AdditionalDeviceInformation
      type: object
    AutoExportSettings:
      description: Settings for the auto export functionality of a meter
      example:
        ExportFormat: ExportFormat
        ExportInterval: NoExport
        MeterPointId: MeterPointId
        UploadType: UploadType
      properties:
        ExportFormat:
          description: The export format
          title: ExportFormat
          type: string
        ExportInterval:
          description: The export interval of the auto export
          enum:
          - NoExport
          - Hourly
          - Daily
          - Weekly
          - Monthly
          - QuaterYearly
          - HalfYearly
          - Yearly
          title: ExportInterval
          type: string
        MeterPointId:
          description: The meter point id set by the user
          title: MeterPointId
          type: string
        UploadType:
          description: The upload type
          title: UploadType
          type: string
      title: AutoExportSettings
      type: object
    CustomDeviceToPost:
      description: Container Class for the Web API
      example:
        Serial: 0
        Values:
        - Value: 6.027456183070403
          Name: Name
        - Value: 6.027456183070403
          Name: Name
        ValueDate: 2000-01-23T04:56:07.000+00:00
        Id: Id
        Name: Name
      properties:
        Id:
          description: The ID of the device
          title: Id
          type: string
        Name:
          description: The Name of the Device
          title: Name
          type: string
        Serial:
          description: The Serial number
          format: int64
          title: Serial
          type: integer
        ValueDate:
          description: The Date of the Value (in UTC). If this is null the Server
            Time is used.
          format: date-time
          title: ValueDate
          type: string
        Values:
          description: The Values of the custom Device
          items:
            $ref: '#/components/schemas/CustomDeviceValues'
          title: Values
          type: array
      title: CustomDeviceToPost
      type: object
    CustomDeviceValues:
      description: Container Class for the Custom Device Values
      example:
        Value: 6.027456183070403
        Name: Name
      properties:
        Name:
          description: The Name of the Value.
          title: Name
          type: string
        Value:
          description: The Value
          format: double
          title: Value
          type: number
      title: CustomDeviceValues
      type: object
    Device:
      description: Container Class for the Web API
      example:
        ActiveTariff: 5
        Temperature: 9.018348186070783
        ChargingStationState: Booting
        AdditionalMeterSerialNumber: AdditionalMeterSerialNumber
        ActivePowerUnit: ActivePowerUnit
        Name: Name
        ActivePowerL3: 5.962133916683182
        DigitalOutput1: true
        ActivePower: 0.8008281904610115
        DigitalOutput2: true
        ActivePowerL1: 6.027456183070403
        SwitchOn: true
        ActivePowerL2: 1.4658129805029452
        DigitalInput2: true
        Voltage: 6.438423552598547
        ValueDate: 2000-01-23T04:56:07.000+00:00
        VoltageL1: 3.5571952270680973
        CurrentL1: 6.84685269835264
        CurrentL2: 7.457744773683766
        CounterReadingUnit: CounterReadingUnit
        FlowRate: 4.965218492984954
        VoltageL2: 6.965117697638846
        CounterReadingExport: 3.616076749251911
        VoltageL3: 1.284659006116532
        PowerFactor: 5.025004791520295
        DeviceEnergyType: MeterTypeUnknown
        SwitchPhaseL1On: true
        CurrentL3: 1.1730742509559433
        SwitchPhaseL3On: true
        SwitchPhaseL2On: true
        CounterReadingImport: 2.027123023002322
        CounterReadingT2: 7.386281948385884
        DigitalInput1: true
        CounterReadingT3: 1.2315135367772556
        PowerFactorL1: 9.965781217890562
        PowerFactorL2: 9.369310271410669
        CounterReadingT1: 4.145608029883936
        PowerFactorL3: 6.683562403749608
        AnalogOutput1: 2
        CounterReading: 9.301444243932576
        AnalogOutput2: 7
        Serial: 8
        FamilyType: MeterFamilyTypeUnknown
        CounterReadingT4: 1.0246457001441578
        Id: Id
        Current: 1.4894159098541704
        MeterSubType: MeterSubTypeUnknown
      properties:
        ActivePower:
          description: The Actvie Power or current flow rate
          format: double
          title: ActivePower
          type: number
        ActivePowerL1:
          description: The Actvie Power Phase L1
          format: double
          title: ActivePowerL1
          type: number
        ActivePowerL2:
          description: The Actvie Power Phase L2
          format: double
          title: ActivePowerL2
          type: number
        ActivePowerL3:
          description: The Actvie Power Phase L3
          format: double
          title: ActivePowerL3
          type: number
        ActivePowerUnit:
          description: The Unit of the Active Power Value
          title: ActivePowerUnit
          type: string
        ActiveTariff:
          description: The Number of the Active Tariff
          format: int32
          title: ActiveTariff
          type: integer
        AdditionalMeterSerialNumber:
          description: An additional Meter serial number. e.g. the number of a meter
            a smart-me device is connected to.
          title: AdditionalMeterSerialNumber
          type: string
        AnalogOutput1:
          description: The analog output number 1 (PWM signal) (0 - 32183)
          format: int32
          title: AnalogOutput1
          type: integer
        AnalogOutput2:
          description: The analog output number 2 (PWM signal) (0 - 32183)
          format: int32
          title: AnalogOutput2
          type: integer
        ChargingStationState:
          description: The state of a pico charging station. (Only available for pico
            charging stations)
          enum:
          - Booting
          - ReadyNoCarConnected
          - ReadyCarConnected
          - StartedWaitForCar
          - Charging
          - Installation
          - Authorize
          - Offline
          title: ChargingStationState
          type: string
        CounterReading:
          description: The Meter Counter Reading (Total Energy used)
          format: double
          title: CounterReading
          type: number
        CounterReadingExport:
          description: The Meter Counter Reading only export
          format: double
          title: CounterReadingExport
          type: number
        CounterReadingImport:
          description: The Meter Counter Reading only import
          format: double
          title: CounterReadingImport
          type: number
        CounterReadingT1:
          description: The Meter Counter Reading Tariff 1
          format: double
          title: CounterReadingT1
          type: number
        CounterReadingT2:
          description: The Meter Counter Reading Tariff 2
          format: double
          title: CounterReadingT2
          type: number
        CounterReadingT3:
          description: The Meter Counter Reading Tariff 3
          format: double
          title: CounterReadingT3
          type: number
        CounterReadingT4:
          description: The Meter Counter Reading Tariff 4
          format: double
          title: CounterReadingT4
          type: number
        CounterReadingUnit:
          description: The Unit of the Counter Reading
          title: CounterReadingUnit
          type: string
        Current:
          description: The Current (in A)
          format: double
          title: Current
          type: number
        CurrentL1:
          description: The Current Phase L1 (in A)
          format: double
          title: CurrentL1
          type: number
        CurrentL2:
          description: The Current Phase L2 (in A)
          format: double
          title: CurrentL2
          type: number
        CurrentL3:
          description: The Current Phase L3 (in A)
          format: double
          title: CurrentL3
          type: number
        DeviceEnergyType:
          description: The Energy Type of this device
          enum:
          - MeterTypeUnknown
          - MeterTypeElectricity
          - MeterTypeWater
          - MeterTypeGas
          - MeterTypeHeat
          - MeterTypeHCA
          - MeterTypeAllMeters
          - MeterTypeTemperature
          - MeterTypeMBusGateway
          - MeterTypeRS485Gateway
          - MeterTypeCustomDevice
          - MeterTypeCompressedAir
          - MeterTypeSolarLog
          - MeterTypeVirtualMeter
          - MeterTypeWMBusGateway
          title: DeviceEnergyType
          type: string
        DigitalInput1:
          description: The digital input number 1
          title: DigitalInput1
          type: boolean
        DigitalInput2:
          description: The digital input number 2
          title: DigitalInput2
          type: boolean
        DigitalOutput1:
          description: The digital output number 1
          title: DigitalOutput1
          type: boolean
        DigitalOutput2:
          description: The digital output number 2
          title: DigitalOutput2
          type: boolean
        FamilyType:
          description: The Family Type of the device.
          enum:
          - MeterFamilyTypeUnknown
          - MeterFamilyTypeSmartMeConnectV1
          - MeterFamiliyTypeSmartMeMeter
          - MeterFamiliyTypeSmartMeMeterWithSwitch
          - MeterFamilyTypeMBusGatewayV1
          - MeterFamilyTypeRS485GatewayV1
          - MeterFamilyTypeKamstrupModule
          - MeterFamilyTypeSmartMe3PhaseMeter80A
          - MeterFamilyTypeSmartMe3PhaseMeter32A
          - MeterFamilyTypeSmartMe3PhaseTelstarTransformer
          - MeterFamilyTypeLandisGyrModule
          - MeterFamilyTypeFnnOpticalModule
          - MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi
          - MeterFamilyTypeSmartMe3PhaseTelstar80AMobile
          - MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi
          - MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi
          - MeterFamilyTypeSmartMe1PhaseMeter80AGprs
          - MeterFamilyTypeSmartMe1PhaseMeter32AGprs
          - MeterFamilyTypeWMBusGatewayV1
          - MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile
          - MeterFamilyTypeMithralHallV1
          - MeterFamilyTypeRestApiMeter
          - MeterFamilyTypeVirtualBillingMeter
          title: FamilyType
          type: string
        FlowRate:
          description: The current flow rate (e.g. m3/h)
          format: double
          title: FlowRate
          type: number
        Id:
          description: The ID of the device
          title: Id
          type: string
        MeterSubType:
          description: The sub meter type (e.g. warmwater or coldwater)
          enum:
          - MeterSubTypeUnknown
          - MeterSubTypeCold
          - MeterSubTypeHeat
          - MeterSubTypeChargingStation
          - MeterSubTypeElectricity
          - MeterSubTypeWater
          - MeterSubTypeGas
          - MeterSubTypeElectricityHeat
          - MeterSubTypeTemperature
          - MeterSubTypeVirtualBattery
          title: MeterSubType
          type: string
        Name:
          description: The Name of the Device
          title: Name
          type: string
        PowerFactor:
          description: "The Power Factor (cos phi). Range: 0 - 1"
          format: double
          title: PowerFactor
          type: number
        PowerFactorL1:
          description: "The Power Factor (cos phi) Phase L1. Range: 0 - 1"
          format: double
          title: PowerFactorL1
          type: number
        PowerFactorL2:
          description: "The Power Factor (cos phi) Phase L2. Range: 0 - 1"
          format: double
          title: PowerFactorL2
          type: number
        PowerFactorL3:
          description: "The Power Factor (cos phi) Phase L3. Range: 0 - 1"
          format: double
          title: PowerFactorL3
          type: number
        Serial:
          description: The Serial number
          format: int64
          title: Serial
          type: integer
        SwitchOn:
          description: Flag if the Switch is on on this device.
          title: SwitchOn
          type: boolean
        SwitchPhaseL1On:
          description: Flag if the Phase L1 is on on this device.
          title: SwitchPhaseL1On
          type: boolean
        SwitchPhaseL2On:
          description: Flag if the Phase L2 is on on this device.
          title: SwitchPhaseL2On
          type: boolean
        SwitchPhaseL3On:
          description: Flag if the Phase L3 is on on this device.
          title: SwitchPhaseL3On
          type: boolean
        Temperature:
          description: The Temperature (in degree celsius)
          format: double
          title: Temperature
          type: number
        ValueDate:
          description: Time of last successful connection the the smart-me Cloud.
          format: date-time
          title: ValueDate
          type: string
        Voltage:
          description: The Voltage (in V)
          format: double
          title: Voltage
          type: number
        VoltageL1:
          description: The Voltage Phase L1 (in V)
          format: double
          title: VoltageL1
          type: number
        VoltageL2:
          description: The Voltage Phase L2 (in V)
          format: double
          title: VoltageL2
          type: number
        VoltageL3:
          description: The Voltage Phase L3 (in V)
          format: double
          title: VoltageL3
          type: number
      title: Device
      type: object
    DeviceInPast:
      description: Container Class for the Web API. Conatinas the MeterValues in the
        Past
      example:
        CounterReadingImportT4: 4.145608029883936
        CounterReadingImportT3: 2.027123023002322
        CounterReadingImportT2: 3.616076749251911
        CounterReadingImportT1: 9.301444243932576
        CounterReadingImport: 7.061401241503109
        CounterReadingT2: 1.2315135367772556
        CounterReadingT3: 1.0246457001441578
        CounterReadingT1: 7.386281948385884
        CounterReading: 0.8008281904610115
        Date: 2000-01-23T04:56:07.000+00:00
        Serial: 6
        CounterReadingExportT4: 2.3021358869347655
        CounterReadingExportT3: 5.637376656633329
        CounterReadingExportT2: 5.962133916683182
        CounterReadingExportT1: 1.4658129805029452
        CounterReadingT4: 1.4894159098541704
        Id: Id
        CounterReadingUnit: CounterReadingUnit
        CounterReadingExport: 6.027456183070403
      properties:
        CounterReading:
          description: The Meter Counter Reading (Total Energy used)
          format: double
          title: CounterReading
          type: number
        CounterReadingExport:
          description: The Meter Counter Reading Export
          format: double
          title: CounterReadingExport
          type: number
        CounterReadingExportT1:
          description: The Meter Counter Reading Export Tariff 1
          format: double
          title: CounterReadingExportT1
          type: number
        CounterReadingExportT2:
          description: The Meter Counter Reading Export Tariff 2
          format: double
          title: CounterReadingExportT2
          type: number
        CounterReadingExportT3:
          description: The Meter Counter Reading Export Tariff 3
          format: double
          title: CounterReadingExportT3
          type: number
        CounterReadingExportT4:
          description: The Meter Counter Reading Export Tariff 4
          format: double
          title: CounterReadingExportT4
          type: number
        CounterReadingImport:
          description: The Meter Counter Reading Import
          format: double
          title: CounterReadingImport
          type: number
        CounterReadingImportT1:
          description: The Meter Counter Reading Import Tariff 1
          format: double
          title: CounterReadingImportT1
          type: number
        CounterReadingImportT2:
          description: The Meter Counter Reading Import Tariff 2
          format: double
          title: CounterReadingImportT2
          type: number
        CounterReadingImportT3:
          description: The Meter Counter Reading Import Tariff 3
          format: double
          title: CounterReadingImportT3
          type: number
        CounterReadingImportT4:
          description: The Meter Counter Reading Import Tariff 4
          format: double
          title: CounterReadingImportT4
          type: number
        CounterReadingT1:
          description: The Meter Counter Reading Tariff 1
          format: double
          title: CounterReadingT1
          type: number
        CounterReadingT2:
          description: The Meter Counter Reading Tariff 2
          format: double
          title: CounterReadingT2
          type: number
        CounterReadingT3:
          description: The Meter Counter Reading Tariff 3
          format: double
          title: CounterReadingT3
          type: number
        CounterReadingT4:
          description: The Meter Counter Reading Tariff 4
          format: double
          title: CounterReadingT4
          type: number
        CounterReadingUnit:
          description: The Unit of the Counter Reading
          title: CounterReadingUnit
          type: string
        Date:
          description: The Date of the Values
          format: date-time
          title: Date
          type: string
        Id:
          description: The ID of the device
          title: Id
          type: string
        Serial:
          description: The Serial number
          format: int64
          title: Serial
          type: integer
      title: DeviceInPast
      type: object
    DeviceToPost:
      description: Container Class for the Web API
      example:
        Temperature: 7.457744773683766
        Name: Name
        ActivePower: 0.8008281904610115
        CounterReadingExportT2: 5.637376656633329
        CounterReadingExportT1: 5.962133916683182
        Voltage: 1.1730742509559433
        ValueDate: 2000-01-23T04:56:07.000+00:00
        VoltageL1: 4.965218492984954
        CurrentL1: 3.616076749251911
        CurrentL2: 2.027123023002322
        VoltageL2: 5.025004791520295
        CounterReadingExport: 1.4658129805029452
        VoltageL3: 9.965781217890562
        PowerFactor: 7.386281948385884
        DeviceEnergyType: MeterTypeUnknown
        CurrentL3: 4.145608029883936
        CounterReadingT2: 7.061401241503109
        DigitalInput1: true
        PowerFactorL1: 1.2315135367772556
        PowerFactorL2: 1.0246457001441578
        CounterReadingT1: 2.3021358869347655
        PowerFactorL3: 1.4894159098541704
        CounterReading: 6.027456183070403
        Serial: 6
        Id: Id
        Current: 9.301444243932576
        MeterSubType: MeterSubTypeUnknown
      properties:
        ActivePower:
          description: The Active Power or current flow rate. In kW or m3/h
          format: double
          title: ActivePower
          type: number
        CounterReading:
          description: The Meter Counter Reading (Total Energy used) in kWh or m3.
          format: double
          title: CounterReading
          type: number
        CounterReadingExport:
          description: The Meter Counter Reading only export
          format: double
          title: CounterReadingExport
          type: number
        CounterReadingExportT1:
          description: The Meter Counter Reading only export (Tariff 1)
          format: double
          title: CounterReadingExportT1
          type: number
        CounterReadingExportT2:
          description: The Meter Counter Reading only export (Tariff 2)
          format: double
          title: CounterReadingExportT2
          type: number
        CounterReadingT1:
          description: The Meter Counter Reading Tariff 1 in kWh or m3.
          format: double
          title: CounterReadingT1
          type: number
        CounterReadingT2:
          description: The Meter Counter Reading Tariff 2 in kWh or m3.
          format: double
          title: CounterReadingT2
          type: number
        Current:
          description: The Current (in A)
          format: double
          title: Current
          type: number
        CurrentL1:
          description: The Current Phase L1 (in A)
          format: double
          title: CurrentL1
          type: number
        CurrentL2:
          description: The Current Phase L2 (in A)
          format: double
          title: CurrentL2
          type: number
        CurrentL3:
          description: The Current Phase L3 (in A)
          format: double
          title: CurrentL3
          type: number
        DeviceEnergyType:
          description: The Energy Type of this device
          enum:
          - MeterTypeUnknown
          - MeterTypeElectricity
          - MeterTypeWater
          - MeterTypeGas
          - MeterTypeHeat
          - MeterTypeHCA
          - MeterTypeAllMeters
          - MeterTypeTemperature
          - MeterTypeMBusGateway
          - MeterTypeRS485Gateway
          - MeterTypeCustomDevice
          - MeterTypeCompressedAir
          - MeterTypeSolarLog
          - MeterTypeVirtualMeter
          - MeterTypeWMBusGateway
          title: DeviceEnergyType
          type: string
        DigitalInput1:
          description: The digital input number 1
          title: DigitalInput1
          type: boolean
        Id:
          description: The ID of the device
          title: Id
          type: string
        MeterSubType:
          description: The Sub Type of this Meter.
          enum:
          - MeterSubTypeUnknown
          - MeterSubTypeCold
          - MeterSubTypeHeat
          - MeterSubTypeChargingStation
          - MeterSubTypeElectricity
          - MeterSubTypeWater
          - MeterSubTypeGas
          - MeterSubTypeElectricityHeat
          - MeterSubTypeTemperature
          - MeterSubTypeVirtualBattery
          title: MeterSubType
          type: string
        Name:
          description: The Name of the Device
          title: Name
          type: string
        PowerFactor:
          description: "The Power Factor (cos phi). Range: 0 - 1"
          format: double
          title: PowerFactor
          type: number
        PowerFactorL1:
          description: "The Power Factor (cos phi) Phase L1. Range: 0 - 1"
          format: double
          title: PowerFactorL1
          type: number
        PowerFactorL2:
          description: "The Power Factor (cos phi) Phase L2. Range: 0 - 1"
          format: double
          title: PowerFactorL2
          type: number
        PowerFactorL3:
          description: "The Power Factor (cos phi) Phase L3. Range: 0 - 1"
          format: double
          title: PowerFactorL3
          type: number
        Serial:
          description: The Serial number
          format: int64
          title: Serial
          type: integer
        Temperature:
          description: The Temperature (in degree celsius)
          format: double
          title: Temperature
          type: number
        ValueDate:
          description: The Date of the Value (in UTC). If this is null the Server
            Time is used.
          format: date-time
          title: ValueDate
          type: string
        Voltage:
          description: The Voltage (in V)
          format: double
          title: Voltage
          type: number
        VoltageL1:
          description: The Voltage Phase L1 (in V)
          format: double
          title: VoltageL1
          type: number
        VoltageL2:
          description: The Voltage Phase L2 (in V)
          format: double
          title: VoltageL2
          type: number
        VoltageL3:
          description: The Voltage Phase L3 (in V)
          format: double
          title: VoltageL3
          type: number
      title: DeviceToPost
      type: object
    FolderData:
      description: Container class for the folder API
      example:
        GasCounterValue: 1.4658129805029452
        ElectricityCounterValue: 0.8008281904610115
        HeatPower: 2.3021358869347655
        GasFlowRate: 5.962133916683182
        WaterCounterValue: 7.061401241503109
        ElectricityPower: 6.027456183070403
        HeatCounterValue: 5.637376656633329
        WaterFlowRate: 9.301444243932576
      properties:
        ElectricityCounterValue:
          description: The Counter values for electricity (kWh)
          format: double
          title: ElectricityCounterValue
          type: number
        ElectricityPower:
          description: The Power for electricity (kW)
          format: double
          title: ElectricityPower
          type: number
        GasCounterValue:
          description: The Counter values for Gas (m3)
          format: double
          title: GasCounterValue
          type: number
        GasFlowRate:
          description: The Flow Rate for Gas (m3/h)
          format: double
          title: GasFlowRate
          type: number
        HeatCounterValue:
          description: The Counter values for Heat (kWh)
          format: double
          title: HeatCounterValue
          type: number
        HeatPower:
          description: The Power for Heat (kW)
          format: double
          title: HeatPower
          type: number
        WaterCounterValue:
          description: The Counter values for Water (m3)
          format: double
          title: WaterCounterValue
          type: number
        WaterFlowRate:
          description: The Flow Rate for Water (m3/h)
          format: double
          title: WaterFlowRate
          type: number
      title: FolderData
      type: object
    FolderMenuConfiguration:
      description: Container Class for the Web API representing a folder menu and
        it's items
      example:
        BrowserUtcTime: BrowserUtcTime
        BrowserTimeZoneName: BrowserTimeZoneName
        Items:
        - Description: Description
          MeterSerialNumber: MeterSerialNumber
          AutoExportSettings:
            ExportFormat: ExportFormat
            ExportInterval: NoExport
            MeterPointId: MeterPointId
            UploadType: UploadType
          UserId: UserId
          Children:
          - null
          - null
          Icon: Icon
          Id: Id
          FolderType: Folder
          Name: Name
        - Description: Description
          MeterSerialNumber: MeterSerialNumber
          AutoExportSettings:
            ExportFormat: ExportFormat
            ExportInterval: NoExport
            MeterPointId: MeterPointId
            UploadType: UploadType
          UserId: UserId
          Children:
          - null
          - null
          Icon: Icon
          Id: Id
          FolderType: Folder
          Name: Name
      properties:
        BrowserTimeZoneName:
          description: The time zone name taken from the browser
          title: BrowserTimeZoneName
          type: string
        BrowserUtcTime:
          description: The UTC time taken from the browser
          title: BrowserUtcTime
          type: string
        Items:
          items:
            $ref: '#/components/schemas/FolderMenuItem'
          title: Items
          type: array
      title: FolderMenuConfiguration
      type: object
    FolderMenuItem:
      description: A folder menu item
      example:
        Description: Description
        MeterSerialNumber: MeterSerialNumber
        AutoExportSettings:
          ExportFormat: ExportFormat
          ExportInterval: NoExport
          MeterPointId: MeterPointId
          UploadType: UploadType
        UserId: UserId
        Children:
        - null
        - null
        Icon: Icon
        Id: Id
        FolderType: Folder
        Name: Name
      properties:
        AutoExportSettings:
          $ref: '#/components/schemas/AutoExportSettings'
        Children:
          description: Children folder menu items (sub folder menu items)
          items:
            $ref: '#/components/schemas/FolderMenuItem'
          title: Children
          type: array
        Description:
          description: The Description of the folder
          title: Description
          type: string
        FolderType:
          description: The folder type of the item
          enum:
          - Folder
          - Location
          - Factory
          - House
          - Office
          - Machine
          - VirtualMeter
          - ElecticityFolder
          - WaterFolder
          - HeatFolder
          - GasFolder
          - TemperatureFolder
          - Sun
          - Light
          - Ice
          - Sofa
          - Food
          - Coffee
          - Car
          - ChargingStation
          - Meter
          - User
          - Trash
          - GridPhotovoltaicPowerSystem
          title: FolderType
          type: string
        Icon:
          description: The path to the Icon of this folder
          title: Icon
          type: string
        Id:
          description: The id of the folder menu item
          title: Id
          type: string
        MeterSerialNumber:
          description: "The serial number if the folder menu item is a meter. \r\n\
            \            Serial number is handled as a string, as javascript on client\
            \ side cannot handle long integers properly."
          title: MeterSerialNumber
          type: string
        Name:
          description: The Name of the item
          title: Name
          type: string
        UserId:
          description: The ID of the user of this folder (only for foldertype user)
          title: UserId
          type: string
      title: FolderMenuItem
      type: object
    FolderSettings:
      description: Container for the folder settings
      example:
        Description: Description
        SerialNumber: 0
        ValueCorrectionParentFolder: 1.4658129805029452
        VisualizationName: VisualizationName
        Enable: true
        UseableForVirtualBillingMeters: true
        ValueCorrection: 6.027456183070403
        ParentFolderId: ParentFolderId
        FolderType: Folder
        Name: Name
      properties:
        Description:
          description: The Description of the folder or meter
          title: Description
          type: string
        Enable:
          description: Flag if the meter is enabled (folder not supported yet)
          title: Enable
          type: boolean
        FolderType:
          description: The Type of the folder
          enum:
          - Folder
          - Location
          - Factory
          - House
          - Office
          - Machine
          - VirtualMeter
          - ElecticityFolder
          - WaterFolder
          - HeatFolder
          - GasFolder
          - TemperatureFolder
          - Sun
          - Light
          - Ice
          - Sofa
          - Food
          - Coffee
          - Car
          - ChargingStation
          - Meter
          - User
          - Trash
          - GridPhotovoltaicPowerSystem
          title: FolderType
          type: string
        Name:
          description: The Name of the folder or meter
          title: Name
          type: string
        ParentFolderId:
          description: The parent folder ID of this item
          title: ParentFolderId
          type: string
        SerialNumber:
          description: The serial number (meter only)
          format: int64
          title: SerialNumber
          type: integer
        UseableForVirtualBillingMeters:
          description: Flag if the meter is usable for virtual billing meters (e.g.
            washroom)
          title: UseableForVirtualBillingMeters
          type: boolean
        ValueCorrection:
          description: The value correction on this meter
          format: double
          title: ValueCorrection
          type: number
        ValueCorrectionParentFolder:
          description: The value correction on all parent folders. but not on the
            meter itself
          format: double
          title: ValueCorrectionParentFolder
          type: number
        VisualizationName:
          description: The name of the visualization of the folder
          title: VisualizationName
          type: string
      title: FolderSettings
      type: object
    InputConfigurationContainer:
      description: Configuration for the input of a meter (digital inputs)
      example:
        Type: TariffInput
        OffText: OffText
        Number: 0
        OnText: OnText
        Name: Name
      properties:
        Name:
          description: The Name of the Input
          title: Name
          type: string
        Number:
          description: The number of the Input. (1 for Input 1)
          format: int32
          title: Number
          type: integer
        OffText:
          description: The visualization text for an OFF action
          title: OffText
          type: string
        OnText:
          description: The visualization text for an ON action
          title: OnText
          type: string
        Type:
          description: The Type of the output
          enum:
          - TariffInput
          - DigitalInput
          title: Type
          type: string
      title: InputConfigurationContainer
      type: object
    InputInformation:
      description: Informations about the Inputs of a Meter or Folder
      example:
        Number: 5
        Name: Name
      properties:
        Name:
          description: The Name of the Input
          title: Name
          type: string
        Number:
          description: The Number of this Input. Use this as ID to switch it on or
            off.
          format: int32
          title: Number
          type: integer
      title: InputInformation
      type: object
    MBusData:
      example:
        Telegram: Telegram
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Date:
          description: The Date of the M-BUS Telegram Readout (in UTC). If this is
            null the Server Time is used.
          format: date-time
          title: Date
          type: string
        Telegram:
          description: "The M-BUS Telegram as Hex string. \r\n            Example:\
            \ 68 1F 1F 68 08 02 72 78 56 34 12 24 40 01 07 55 00 00 00 03 13 15 31\
            \ 00 DA 02 3B 13 01 8B 60 04 37 18 02 18 16"
          title: Telegram
          type: string
      title: MBusData
      type: object
    MeterFolderInformation:
      description: Container Class for the Web API
      example:
        CommunicationModuleHardwareVersion: 6
        OutputInformations:
        - ActionType: OnOffAction
          Number: 2
          ObisCode: ObisCode
          Name: Name
        - ActionType: OnOffAction
          Number: 2
          ObisCode: ObisCode
          Name: Name
        InputInformations:
        - Number: 5
          Name: Name
        - Number: 5
          Name: Name
        CommunicationModuleFirmwareVersion: 0
        IsFolder: true
        HardwareVersion: 5
        FirmwareVersion: 1
        Name: Name
      properties:
        CommunicationModuleFirmwareVersion:
          description: The Version of the Communication Module (if exists)
          format: int32
          title: CommunicationModuleFirmwareVersion
          type: integer
        CommunicationModuleHardwareVersion:
          description: The Version of the Communication Module (if exists)
          format: int32
          title: CommunicationModuleHardwareVersion
          type: integer
        FirmwareVersion:
          description: The Firmware Version of a Meter
          format: int32
          title: FirmwareVersion
          type: integer
        HardwareVersion:
          description: The Hardware Version of a Meter.
          format: int32
          title: HardwareVersion
          type: integer
        InputInformations:
          description: Informations about the available Inputs
          items:
            $ref: '#/components/schemas/InputInformation'
          title: InputInformations
          type: array
        IsFolder:
          description: Flag if it's a Folder or a Meter
          title: IsFolder
          type: boolean
        Name:
          description: Name of the Meter or Folder
          title: Name
          type: string
        OutputInformations:
          description: Informations about the available Outputs
          items:
            $ref: '#/components/schemas/OutputInformation'
          title: OutputInformations
          type: array
      title: MeterFolderInformation
      type: object
    MeterFolderInformationToPost:
      description: Container for a Meter or Folder Information to Post
      example:
        Id: Id
        Name: Name
      properties:
        Id:
          description: The ID of the device or folder
          title: Id
          type: string
        Name:
          description: Name of the Meter or Folder
          title: Name
          type: string
      title: MeterFolderInformationToPost
      type: object
    Object:
      properties: {}
      type: object
    OutputConfigurationContainer:
      description: Configuration for the outputs of a meter (analog/digital outputs)
      example:
        Type: ImpulseOutputActiveEnergy
        DigitalOutputNoConnectionAction: Nothing
        Number: 6
        S0PulseValue: PulseValue1000Kwh
        Name: Name
      properties:
        DigitalOutputNoConnectionAction:
          description: The Action when the device has lost the connection
          enum:
          - Nothing
          - TurnOff
          - TurnOn
          - SetPwmValue
          title: DigitalOutputNoConnectionAction
          type: string
        Name:
          description: The Name of the Output
          title: Name
          type: string
        Number:
          description: "The number of the Output. (1 for Output 1, 2 for Output 2)"
          format: int32
          title: Number
          type: integer
        S0PulseValue:
          description: The S0 Pulse Value
          enum:
          - PulseValue1000Kwh
          - PulseValue10000Kwh
          title: S0PulseValue
          type: string
        Type:
          description: The Type of the output
          enum:
          - ImpulseOutputActiveEnergy
          - ImpulseOutputActiveEnergyImport
          - ImpulseOutputActiveEnergyExport
          - ImpulseOutputReactiveEnergy
          - DigitalOutput
          - AnalogPwmSignalOutput
          - Disabled
          title: Type
          type: string
      title: OutputConfigurationContainer
      type: object
    OutputInformation:
      description: Informations about the Outputs of a Meter or Folder
      example:
        ActionType: OnOffAction
        Number: 2
        ObisCode: ObisCode
        Name: Name
      properties:
        ActionType:
          description: The type of the Output
          enum:
          - OnOffAction
          - AnalogAction
          title: ActionType
          type: string
        Name:
          description: The Name of the Output
          title: Name
          type: string
        Number:
          description: The Number of this Output. Use this as ID to switch it on or
            off.
          format: int32
          title: Number
          type: integer
        ObisCode:
          description: The Obis Code for this Output
          title: ObisCode
          type: string
      title: OutputInformation
      type: object
    PicoChargingData:
      description: Container class for the pico charging station API
      example:
        LastWarningOrError: MeterDataloggerEvent
        MaxAllowedChargingCurrent: 5
        MaxDynamicCurrent: 5
        ActiveChargingEnergy: 0.8008281904610115
        Duration: 1
        LoadSheddingState: MaxCurrent
        MinStationCurrent: 9
        ActiveChargingPower: 6.027456183070403
        LastWarningOrErrorMessage: LastWarningOrErrorMessage
        RSSI: 3
        LoadmanagementGroupName: LoadmanagementGroupName
        LastWarningOrErrorTime: 2000-01-23T04:56:07.000+00:00
        MaxStationCurrent: 7
        State: Booting
        ConnectionMode: NetworkToCloudConnectionMode_NoConnection
        ValueDate: 2000-01-23T04:56:07.000+00:00
        MaxLoadmanagementGroupCurrent: 2
      properties:
        ActiveChargingEnergy:
          description: The energy used by this active charging (in kWh)
          format: double
          title: ActiveChargingEnergy
          type: number
        ActiveChargingPower:
          description: The power of the active charging (in kW)
          format: double
          title: ActiveChargingPower
          type: number
        ConnectionMode:
          description: The mode how this station is connected to the cloud
          enum:
          - NetworkToCloudConnectionMode_NoConnection
          - NetworkToCloudConnectionMode_DirectWiFiConnection
          - NetworkToCloudConnectionMode_GPRSConnection
          - NetworkToCloudConnectionMode_NBIotConnection
          - NetworkToCloudConnectionMode_LteCatM1Connection
          - NetworkToCloudConnectionMode_MeshWiFiConnection
          - NetworkToCloudConnectionMode_MeshMobileConnection
          title: ConnectionMode
          type: string
        Duration:
          description: The duration of this charging in seconds
          format: int32
          title: Duration
          type: integer
        LastWarningOrError:
          description: The last warning or error of the station. This message is only
            shown if the warning or error happend in the last 5 minutes.
          enum:
          - MeterDataloggerEvent
          - MeterRestart
          - PowerDown
          - MissingPhaseL1
          - MissingPhaseL2
          - MissingPhaseL3
          - TamperDetectionCover
          - MagneticFieldDetection
          - ClockAdjusted
          - Overvoltage
          - Undervoltage
          - OvervoltageL1
          - OvervoltageL2
          - OvervoltageL3
          - ChargingTransaction
          - PicoErrorControllerPanic
          - PicoErrorMidServicePanic
          - PicoWarningRcdTriggered
          - PicoWarningCableLockError
          - PicoWarningDiodeFailure
          - PicoWarningOverload
          - PicoWarningHighTemperature
          title: LastWarningOrError
          type: string
        LastWarningOrErrorMessage:
          description: The message of the last warning or error of the station.
          title: LastWarningOrErrorMessage
          type: string
        LastWarningOrErrorTime:
          description: The time when the LastWarningOrError happend
          format: date-time
          title: LastWarningOrErrorTime
          type: string
        LoadSheddingState:
          description: Max. dynamic current (e.g. set over API or Modbus TCP) of this
            station or the loadmanagement group of the station if the station is in
            a group. in A
          enum:
          - MaxCurrent
          - HalfCurrent
          - MinCurrent
          - NoCurrent
          title: LoadSheddingState
          type: string
        LoadmanagementGroupName:
          description: The name of the loadmanagement group. Or string.empty if the
            station is not in a group
          title: LoadmanagementGroupName
          type: string
        MaxAllowedChargingCurrent:
          description: Max allowed charging current in A
          format: int32
          title: MaxAllowedChargingCurrent
          type: integer
        MaxDynamicCurrent:
          description: Max. dynamic current (e.g. set over API or Modbus TCP) of this
            station or the loadmanagement group of the station if the station is in
            a group. in A
          format: int32
          title: MaxDynamicCurrent
          type: integer
        MaxLoadmanagementGroupCurrent:
          description: Max. current of the loadmanagement group of this station (if
            there is any) in A
          format: int32
          title: MaxLoadmanagementGroupCurrent
          type: integer
        MaxStationCurrent:
          description: Max. current of the station in A
          format: int32
          title: MaxStationCurrent
          type: integer
        MinStationCurrent:
          description: Min. current of the station in A
          format: int32
          title: MinStationCurrent
          type: integer
        RSSI:
          description: "Received Signal Strength Indicator for the connection mode\
            \ (wifi or mobile). \r\n            -127 (min) to 0 (Max)"
          format: int32
          title: RSSI
          type: integer
        State:
          description: The state of the charging station
          enum:
          - Booting
          - ReadyNoCarConnected
          - ReadyCarConnected
          - StartedWaitForCar
          - Charging
          - Installation
          - Authorize
          - Offline
          readOnly: true
          title: State
          type: string
        ValueDate:
          description: The date of this values
          format: date-time
          title: ValueDate
          type: string
      title: PicoChargingData
      type: object
    PicoChargingHistoryData:
      description: Api container for the charging station history
      example:
        EnergyUsed: 6.027456183070403
        StartTime: 2000-01-23T04:56:07.000+00:00
        Duration: 0
        TransactionStopReason: Unknown
      properties:
        Duration:
          description: The duration in seconds
          format: int32
          readOnly: true
          title: Duration
          type: integer
        EnergyUsed:
          description: The energy used (in kWh)
          format: double
          readOnly: true
          title: EnergyUsed
          type: number
        StartTime:
          description: The starttime of the charging (in UTC)
          format: date-time
          readOnly: true
          title: StartTime
          type: string
        TransactionStopReason:
          enum:
          - Unknown
          - CarDisconnected
          - RemoteStop
          - ErrorStop
          - InstallationMode
          - CableError
          - DiodeError
          - RcdError
          - OverloadError
          readOnly: true
          title: TransactionStopReason
          type: string
      title: PicoChargingHistoryData
      type: object
    PicoLoadmanagementGroupDto:
      description: DTO for the pico loadmanagement group
      example:
        MaxCurrent: 0.8008281904610115
        NumberOfStations: 6
        Id: Id
        Name: Name
      properties:
        Id:
          description: The ID of the loadmanagement group
          title: Id
          type: string
        MaxCurrent:
          description: The max current of this loadmanagement group
          format: double
          title: MaxCurrent
          type: number
        Name:
          description: The name of the station
          title: Name
          type: string
        NumberOfStations:
          description: The number of assigned stations
          format: int32
          title: NumberOfStations
          type: integer
      title: PicoLoadmanagementGroupDto
      type: object
    PicoSettingsDto:
      description: DTO for the pico charging station settings
      example:
        DnsName: DnsName
        MaxCurrent: 0
        LoadmanagementGroupId: LoadmanagementGroupId
        MinCurrent: 6
        FixCableLockEnable: true
        ModbusTcp: true
        Name: Name
        SerialNumber: SerialNumber
        CarIdDetection: true
        DisplayBrightness: DisplayBrightness
        InternalIp: InternalIp
        AuthenticationType: None
        IdleImageUrl: IdleImageUrl
      properties:
        AuthenticationType:
          description: The authentication type
          enum:
          - None
          - Backend
          title: AuthenticationType
          type: string
        CarIdDetection:
          description: Flag if the car id detection is enabled
          title: CarIdDetection
          type: boolean
        DisplayBrightness:
          description: "The Brightness of the LCD Matrix display. 0 = minimum, 255\
            \ = maximum"
          format: byte
          title: DisplayBrightness
          type: string
        DnsName:
          description: The DNS name of the pico's internal ip
          title: DnsName
          type: string
        FixCableLockEnable:
          description: Enable the fix lock of the charging cable
          title: FixCableLockEnable
          type: boolean
        IdleImageUrl:
          description: The url of the idle image
          title: IdleImageUrl
          type: string
        InternalIp:
          description: The internal IP address
          title: InternalIp
          type: string
        LoadmanagementGroupId:
          description: The ID of the loadmanagement group
          title: LoadmanagementGroupId
          type: string
        MaxCurrent:
          description: The max current of this station (in A)
          format: int32
          title: MaxCurrent
          type: integer
        MinCurrent:
          description: The max current of this station (in A)
          format: int32
          title: MinCurrent
          type: integer
        ModbusTcp:
          description: Flag if ModbusTcp is enabled
          title: ModbusTcp
          type: boolean
        Name:
          description: The name of the station
          title: Name
          type: string
        SerialNumber:
          description: The Serial number of the station
          title: SerialNumber
          type: string
      title: PicoSettingsDto
      type: object
    RegisterRealtimeApiData:
      description: Container class for the register realtime API API
      example:
        BasicAuthUsername: BasicAuthUsername
        ApiUrl: ApiUrl
        SerialNumber: SerialNumber
        RegistrationType: Disabled
        Id: Id
        BasicAuthPassword: BasicAuthPassword
        MeterId: MeterId
      properties:
        ApiUrl:
          description: The URL of your endpoint. To this endpoint all the values are
            send to.
          title: ApiUrl
          type: string
        BasicAuthPassword:
          description: The Password (basic auth) of your endpoint. Leave empty of
            none.
          title: BasicAuthPassword
          type: string
        BasicAuthUsername:
          description: The Username (basic auth) of your endpoint. Leave empty of
            none.
          title: BasicAuthUsername
          type: string
        Id:
          description: The ID of the registration
          title: Id
          type: string
        MeterId:
          description: The ID of the Meter. Just used if the RegistrationType is "SingleMeterRegistration".
          title: MeterId
          type: string
        RegistrationType:
          description: "The Type of this registration (per meter, per user, ...)"
          enum:
          - Disabled
          - SingleMeterRegistration
          - UserRegistration
          title: RegistrationType
          type: string
        SerialNumber:
          description: "The serial number of the Meter. Just used if the RegistrationType\
            \ is \"SingleMeterRegistration\" and the MeterId is null. \r\n       \
            \     Example: 1 SME 01 63000000 or 6300000"
          title: SerialNumber
          type: string
      title: RegisterRealtimeApiData
      type: object
    SmartMeDeviceConfigurationContainer:
      description: API Container class for the meter configuration
      example:
        ShowReactiveEnergy: true
        DevicePinCode: DevicePinCode
        EnableModbusTcp: true
        OutputConfiguration:
        - Type: ImpulseOutputActiveEnergy
          DigitalOutputNoConnectionAction: Nothing
          Number: 6
          S0PulseValue: PulseValue1000Kwh
          Name: Name
        - Type: ImpulseOutputActiveEnergy
          DigitalOutputNoConnectionAction: Nothing
          Number: 6
          S0PulseValue: PulseValue1000Kwh
          Name: Name
        DeviceEncryptionKey: DeviceEncryptionKey
        DnsUpdateState: NoUpdate
        Id: Id
        SwitchConfiguration:
        - Number: 1
          CanSwitchOff: true
        - Number: 1
          CanSwitchOff: true
        InputConfiguration:
        - Type: TariffInput
          OffText: OffText
          Number: 0
          OnText: OnText
          Name: Name
        - Type: TariffInput
          OffText: OffText
          Number: 0
          OnText: OnText
          Name: Name
        UploadInterval: UploadInterval_1s
      properties:
        DeviceEncryptionKey:
          description: The encryption key used to decrypt messages received from an
            external meter (used only for the smart-me modules)
          title: DeviceEncryptionKey
          type: string
        DevicePinCode:
          description: PIN code to enter on a external meter (e.g. for the FNN meters)
          title: DevicePinCode
          type: string
        DnsUpdateState:
          description: "Configuration of the dynamic DNS service. More information:\
            \ http://wiki.smart-me.com/index.php/Dynamisches_DNS"
          enum:
          - NoUpdate
          - DnsUpdatePublicIp
          - DnsUpdateInternalIp
          title: DnsUpdateState
          type: string
        EnableModbusTcp:
          description: Enables or disables Modbus TCP (if the meter supports it).
          title: EnableModbusTcp
          type: boolean
        Id:
          description: The ID of the device
          title: Id
          type: string
        InputConfiguration:
          description: The configuration for the intput outputs
          items:
            $ref: '#/components/schemas/InputConfigurationContainer'
          title: InputConfiguration
          type: array
        OutputConfiguration:
          description: The configuration for the external outputs
          items:
            $ref: '#/components/schemas/OutputConfigurationContainer'
          title: OutputConfiguration
          type: array
        ShowReactiveEnergy:
          description: Shows the reactive energy values (if the meter supports it).
          title: ShowReactiveEnergy
          type: boolean
        SwitchConfiguration:
          description: The configuration for the phase switches
          items:
            $ref: '#/components/schemas/SwitchConfigurationContainer'
          title: SwitchConfiguration
          type: array
        UploadInterval:
          description: Number of seconds the device will upload the data. For smaller
            values maybe a professional license is needed.
          enum:
          - UploadInterval_1s
          - UploadInterval_5s
          - UploadInterval_10s
          - UploadInterval_30s
          - UploadInterval_60s
          - UploadInterval_5min
          - UploadInterval_15min
          - UploadInterval_30min
          - UploadInterval_60min
          - UploadInterval_6h
          - UploadInterval_12h
          - UploadInterval_24h
          title: UploadInterval
          type: string
      title: SmartMeDeviceConfigurationContainer
      type: object
    SubUserData:
      description: Container data for the sub user
      example:
        NewPassword: NewPassword
        Email: Email
        Username: Username
        AccessEndDate: 2000-01-23T04:56:07.000+00:00
        Id: Id
        PermissionLevel: SelectedFolderAndSubfoldersMeters
        AccessTimeStartDate: 2000-01-23T04:56:07.000+00:00
      properties:
        AccessEndDate:
          description: The end date. until this date the user has access
          format: date-time
          title: AccessEndDate
          type: string
        AccessTimeStartDate:
          description: The start date. From this date the user has access
          format: date-time
          title: AccessTimeStartDate
          type: string
        Email:
          description: The Email adress
          title: Email
          type: string
        Id:
          description: The ID of the user
          title: Id
          type: string
        NewPassword:
          description: If set this is used a new password
          title: NewPassword
          type: string
        PermissionLevel:
          description: The permission level of the user
          enum:
          - SelectedFolderAndSubfoldersMeters
          - SelectedFolderOnly
          title: PermissionLevel
          type: string
        Username:
          description: The username
          title: Username
          type: string
      title: SubUserData
      type: object
    SwitchConfigurationContainer:
      description: The configuration for a phase switch
      example:
        Number: 1
        CanSwitchOff: true
      properties:
        CanSwitchOff:
          description: Flag if the switch can be turned off or is always on.
          title: CanSwitchOff
          type: boolean
        Number:
          description: The number of the phase. (e.g. 1 for Phase L1)
          format: int32
          title: Number
          type: integer
      title: SwitchConfigurationContainer
      type: object
    User:
      description: Container Class for the Web API
      example:
        IdAsString: IdAsString
        IsAdmin: true
        Email: Email
        Username: Username
        ChildUsers:
        - null
        - null
        Permissions:
        - Permissions
        - Permissions
        Id: 0
      properties:
        ChildUsers:
          description: The Users created by this users.
          items:
            $ref: '#/components/schemas/User'
          title: ChildUsers
          type: array
        Email:
          description: The EMail Address of the User
          title: Email
          type: string
        Id:
          description: The ID of the User
          format: int64
          title: Id
          type: integer
        IdAsString:
          description: The ID of the user as string
          title: IdAsString
          type: string
        IsAdmin:
          description: Flag if this User is an Admin User
          title: IsAdmin
          type: boolean
        Permissions:
          description: Additional Permissions
          items:
            type: string
          title: Permissions
          type: array
        Username:
          description: The Username of the User
          title: Username
          type: string
      title: User
      type: object
    VMeterToActivate:
      description: Actives a virtual Meter
      example:
        SerialNumber: SerialNumber
      properties:
        SerialNumber:
          description: The Serialnumber of the Meter to activate.
          title: SerialNumber
          type: string
      title: VMeterToActivate
      type: object
    VMeterToDeactivate:
      description: Deactivates a virtual Meter
      example:
        ID: ID
      properties:
        ID:
          description: The ID of the Virtual meter to deactivate
          title: ID
          type: string
      title: VMeterToDeactivate
      type: object
    ValueData:
      description: API Container for a (Device) Value
      example:
        Obis: Obis
        Value: 0.8008281904610115
      properties:
        Obis:
          description: "The Obis code of this value. \r\n            A description\
            \ you can find here:\r\n            http://wiki.smart-me.com/index.php/Obis_codes"
          title: Obis
          type: string
        Value:
          description: The Value
          format: double
          title: Value
          type: number
      title: ValueData
      type: object
    ValuesData:
      description: API Container for a Meter Value
      example:
        DeviceId: DeviceId
        Values:
        - Obis: Obis
          Value: 0.8008281904610115
        - Obis: Obis
          Value: 0.8008281904610115
        Date: 2000-01-23T04:56:07.000+00:00
      properties:
        Date:
          description: The Date of the Value
          format: date-time
          title: Date
          type: string
        DeviceId:
          description: The ID of the device
          title: DeviceId
          type: string
        Values:
          description: All values
          items:
            $ref: '#/components/schemas/ValueData'
          title: Values
          type: array
      title: ValuesData
      type: object
    VirtualTariff:
      example:
        Type: Battery
        Factor: 0.8008281904610115
        Value: 6.027456183070403
        Id: Id
        Unit: Unit
        Name: Name
      properties:
        Factor:
          description: Says how many of the active power is used in this tariff. This
            is calculated from the last meter values.
          format: double
          title: Factor
          type: number
        Id:
          title: Id
          type: string
        Name:
          title: Name
          type: string
        Type:
          enum:
          - Battery
          - Solar
          - Normal
          title: Type
          type: string
        Unit:
          title: Unit
          type: string
        Value:
          description: The Counter Value of this tariff
          format: double
          title: Value
          type: number
      title: VirtualTariff
      type: object
    VirtualTariffConsumptionData:
      description: Container class for the virtual tariff consumption
      example:
        Consumption: 0.8008281904610115
        TariffType: Battery
        Price: 6.027456183070403
        Currency: Currency
        Name: Name
      properties:
        Consumption:
          description: The consumption (e.g. kWh) of this tariff
          format: double
          title: Consumption
          type: number
        Currency:
          description: The currency of the price
          title: Currency
          type: string
        Name:
          description: The Name of this virtual tariff
          title: Name
          type: string
        Price:
          description: The price of the energy in this timerange
          format: double
          title: Price
          type: number
        TariffType:
          description: The type of the virtual tariff (e.g. solar)
          enum:
          - Battery
          - Solar
          - Normal
          title: TariffType
          type: string
      title: VirtualTariffConsumptionData
      type: object
    VirtualTariffsOfFolder:
      example:
        VirtualTariffs:
        - Type: Battery
          Factor: 0.8008281904610115
          Value: 6.027456183070403
          Id: Id
          Unit: Unit
          Name: Name
        - Type: Battery
          Factor: 0.8008281904610115
          Value: 6.027456183070403
          Id: Id
          Unit: Unit
          Name: Name
        FolderId: FolderId
        Date: 2000-01-23T04:56:07.000+00:00
        Name: Name
      properties:
        Date:
          description: The DateTime (UTC) of this virtual tarfifs
          format: date-time
          readOnly: true
          title: Date
          type: string
        FolderId:
          readOnly: true
          title: FolderId
          type: string
        Name:
          description: The name of this folder
          readOnly: true
          title: Name
          type: string
        VirtualTariffs:
          items:
            $ref: '#/components/schemas/VirtualTariff'
          readOnly: true
          title: VirtualTariffs
          type: array
      title: VirtualTariffsOfFolder
      type: object
  securitySchemes:
    basic:
      description: Basic HTTP Authentication
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_basic
