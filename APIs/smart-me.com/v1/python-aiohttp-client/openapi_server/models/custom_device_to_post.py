# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_device_values import CustomDeviceValues
from openapi_server import util


class CustomDeviceToPost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, serial: int=None, value_date: datetime=None, values: List[CustomDeviceValues]=None):
        """CustomDeviceToPost - a model defined in OpenAPI

        :param id: The id of this CustomDeviceToPost.
        :param name: The name of this CustomDeviceToPost.
        :param serial: The serial of this CustomDeviceToPost.
        :param value_date: The value_date of this CustomDeviceToPost.
        :param values: The values of this CustomDeviceToPost.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'serial': int,
            'value_date': datetime,
            'values': List[CustomDeviceValues]
        }

        self.attribute_map = {
            'id': 'Id',
            'name': 'Name',
            'serial': 'Serial',
            'value_date': 'ValueDate',
            'values': 'Values'
        }

        self._id = id
        self._name = name
        self._serial = serial
        self._value_date = value_date
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomDeviceToPost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomDeviceToPost of this CustomDeviceToPost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CustomDeviceToPost.

        The ID of the device

        :return: The id of this CustomDeviceToPost.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomDeviceToPost.

        The ID of the device

        :param id: The id of this CustomDeviceToPost.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CustomDeviceToPost.

        The Name of the Device

        :return: The name of this CustomDeviceToPost.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomDeviceToPost.

        The Name of the Device

        :param name: The name of this CustomDeviceToPost.
        :type name: str
        """

        self._name = name

    @property
    def serial(self):
        """Gets the serial of this CustomDeviceToPost.

        The Serial number

        :return: The serial of this CustomDeviceToPost.
        :rtype: int
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this CustomDeviceToPost.

        The Serial number

        :param serial: The serial of this CustomDeviceToPost.
        :type serial: int
        """

        self._serial = serial

    @property
    def value_date(self):
        """Gets the value_date of this CustomDeviceToPost.

        The Date of the Value (in UTC). If this is null the Server Time is used.

        :return: The value_date of this CustomDeviceToPost.
        :rtype: datetime
        """
        return self._value_date

    @value_date.setter
    def value_date(self, value_date):
        """Sets the value_date of this CustomDeviceToPost.

        The Date of the Value (in UTC). If this is null the Server Time is used.

        :param value_date: The value_date of this CustomDeviceToPost.
        :type value_date: datetime
        """

        self._value_date = value_date

    @property
    def values(self):
        """Gets the values of this CustomDeviceToPost.

        The Values of the custom Device

        :return: The values of this CustomDeviceToPost.
        :rtype: List[CustomDeviceValues]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this CustomDeviceToPost.

        The Values of the custom Device

        :param values: The values of this CustomDeviceToPost.
        :type values: List[CustomDeviceValues]
        """

        self._values = values
