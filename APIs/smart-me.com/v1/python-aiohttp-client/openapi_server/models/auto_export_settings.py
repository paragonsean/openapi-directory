# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutoExportSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_format: str=None, export_interval: str=None, meter_point_id: str=None, upload_type: str=None):
        """AutoExportSettings - a model defined in OpenAPI

        :param export_format: The export_format of this AutoExportSettings.
        :param export_interval: The export_interval of this AutoExportSettings.
        :param meter_point_id: The meter_point_id of this AutoExportSettings.
        :param upload_type: The upload_type of this AutoExportSettings.
        """
        self.openapi_types = {
            'export_format': str,
            'export_interval': str,
            'meter_point_id': str,
            'upload_type': str
        }

        self.attribute_map = {
            'export_format': 'ExportFormat',
            'export_interval': 'ExportInterval',
            'meter_point_id': 'MeterPointId',
            'upload_type': 'UploadType'
        }

        self._export_format = export_format
        self._export_interval = export_interval
        self._meter_point_id = meter_point_id
        self._upload_type = upload_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoExportSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoExportSettings of this AutoExportSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_format(self):
        """Gets the export_format of this AutoExportSettings.

        The export format

        :return: The export_format of this AutoExportSettings.
        :rtype: str
        """
        return self._export_format

    @export_format.setter
    def export_format(self, export_format):
        """Sets the export_format of this AutoExportSettings.

        The export format

        :param export_format: The export_format of this AutoExportSettings.
        :type export_format: str
        """

        self._export_format = export_format

    @property
    def export_interval(self):
        """Gets the export_interval of this AutoExportSettings.

        The export interval of the auto export

        :return: The export_interval of this AutoExportSettings.
        :rtype: str
        """
        return self._export_interval

    @export_interval.setter
    def export_interval(self, export_interval):
        """Sets the export_interval of this AutoExportSettings.

        The export interval of the auto export

        :param export_interval: The export_interval of this AutoExportSettings.
        :type export_interval: str
        """
        allowed_values = ["NoExport", "Hourly", "Daily", "Weekly", "Monthly", "QuaterYearly", "HalfYearly", "Yearly"]  # noqa: E501
        if export_interval not in allowed_values:
            raise ValueError(
                "Invalid value for `export_interval` ({0}), must be one of {1}"
                .format(export_interval, allowed_values)
            )

        self._export_interval = export_interval

    @property
    def meter_point_id(self):
        """Gets the meter_point_id of this AutoExportSettings.

        The meter point id set by the user

        :return: The meter_point_id of this AutoExportSettings.
        :rtype: str
        """
        return self._meter_point_id

    @meter_point_id.setter
    def meter_point_id(self, meter_point_id):
        """Sets the meter_point_id of this AutoExportSettings.

        The meter point id set by the user

        :param meter_point_id: The meter_point_id of this AutoExportSettings.
        :type meter_point_id: str
        """

        self._meter_point_id = meter_point_id

    @property
    def upload_type(self):
        """Gets the upload_type of this AutoExportSettings.

        The upload type

        :return: The upload_type of this AutoExportSettings.
        :rtype: str
        """
        return self._upload_type

    @upload_type.setter
    def upload_type(self, upload_type):
        """Sets the upload_type of this AutoExportSettings.

        The upload type

        :param upload_type: The upload_type of this AutoExportSettings.
        :type upload_type: str
        """

        self._upload_type = upload_type
