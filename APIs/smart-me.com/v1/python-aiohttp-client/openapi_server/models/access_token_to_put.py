# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccessTokenToPut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_id: int=None, user_id: int=None):
        """AccessTokenToPut - a model defined in OpenAPI

        :param card_id: The card_id of this AccessTokenToPut.
        :param user_id: The user_id of this AccessTokenToPut.
        """
        self.openapi_types = {
            'card_id': int,
            'user_id': int
        }

        self.attribute_map = {
            'card_id': 'CardId',
            'user_id': 'UserId'
        }

        self._card_id = card_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessTokenToPut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessTokenToPut of this AccessTokenToPut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_id(self):
        """Gets the card_id of this AccessTokenToPut.

        The ID of the Card

        :return: The card_id of this AccessTokenToPut.
        :rtype: int
        """
        return self._card_id

    @card_id.setter
    def card_id(self, card_id):
        """Sets the card_id of this AccessTokenToPut.

        The ID of the Card

        :param card_id: The card_id of this AccessTokenToPut.
        :type card_id: int
        """

        self._card_id = card_id

    @property
    def user_id(self):
        """Gets the user_id of this AccessTokenToPut.

        The ID of the User. The credentials provided must have permission to edit the user.              If no ID is provided, the user in the credentials is taken.

        :return: The user_id of this AccessTokenToPut.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this AccessTokenToPut.

        The ID of the User. The credentials provided must have permission to edit the user.              If no ID is provided, the user in the credentials is taken.

        :param user_id: The user_id of this AccessTokenToPut.
        :type user_id: int
        """

        self._user_id = user_id
