/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFolderMenuConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFolderMenuConfiguration::OAIFolderMenuConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFolderMenuConfiguration::OAIFolderMenuConfiguration() {
    this->initializeModel();
}

OAIFolderMenuConfiguration::~OAIFolderMenuConfiguration() {}

void OAIFolderMenuConfiguration::initializeModel() {

    m_browser_time_zone_name_isSet = false;
    m_browser_time_zone_name_isValid = false;

    m_browser_utc_time_isSet = false;
    m_browser_utc_time_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;
}

void OAIFolderMenuConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFolderMenuConfiguration::fromJsonObject(QJsonObject json) {

    m_browser_time_zone_name_isValid = ::OpenAPI::fromJsonValue(m_browser_time_zone_name, json[QString("BrowserTimeZoneName")]);
    m_browser_time_zone_name_isSet = !json[QString("BrowserTimeZoneName")].isNull() && m_browser_time_zone_name_isValid;

    m_browser_utc_time_isValid = ::OpenAPI::fromJsonValue(m_browser_utc_time, json[QString("BrowserUtcTime")]);
    m_browser_utc_time_isSet = !json[QString("BrowserUtcTime")].isNull() && m_browser_utc_time_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;
}

QString OAIFolderMenuConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFolderMenuConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_browser_time_zone_name_isSet) {
        obj.insert(QString("BrowserTimeZoneName"), ::OpenAPI::toJsonValue(m_browser_time_zone_name));
    }
    if (m_browser_utc_time_isSet) {
        obj.insert(QString("BrowserUtcTime"), ::OpenAPI::toJsonValue(m_browser_utc_time));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    return obj;
}

QString OAIFolderMenuConfiguration::getBrowserTimeZoneName() const {
    return m_browser_time_zone_name;
}
void OAIFolderMenuConfiguration::setBrowserTimeZoneName(const QString &browser_time_zone_name) {
    m_browser_time_zone_name = browser_time_zone_name;
    m_browser_time_zone_name_isSet = true;
}

bool OAIFolderMenuConfiguration::is_browser_time_zone_name_Set() const{
    return m_browser_time_zone_name_isSet;
}

bool OAIFolderMenuConfiguration::is_browser_time_zone_name_Valid() const{
    return m_browser_time_zone_name_isValid;
}

QString OAIFolderMenuConfiguration::getBrowserUtcTime() const {
    return m_browser_utc_time;
}
void OAIFolderMenuConfiguration::setBrowserUtcTime(const QString &browser_utc_time) {
    m_browser_utc_time = browser_utc_time;
    m_browser_utc_time_isSet = true;
}

bool OAIFolderMenuConfiguration::is_browser_utc_time_Set() const{
    return m_browser_utc_time_isSet;
}

bool OAIFolderMenuConfiguration::is_browser_utc_time_Valid() const{
    return m_browser_utc_time_isValid;
}

QList<OAIFolderMenuItem> OAIFolderMenuConfiguration::getItems() const {
    return m_items;
}
void OAIFolderMenuConfiguration::setItems(const QList<OAIFolderMenuItem> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIFolderMenuConfiguration::is_items_Set() const{
    return m_items_isSet;
}

bool OAIFolderMenuConfiguration::is_items_Valid() const{
    return m_items_isValid;
}

bool OAIFolderMenuConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_browser_time_zone_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_browser_utc_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFolderMenuConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
