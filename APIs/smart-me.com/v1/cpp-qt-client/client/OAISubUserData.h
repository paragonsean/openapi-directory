/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubUserData.h
 *
 * Container data for the sub user
 */

#ifndef OAISubUserData_H
#define OAISubUserData_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISubUserData : public OAIObject {
public:
    OAISubUserData();
    OAISubUserData(QString json);
    ~OAISubUserData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAccessEndDate() const;
    void setAccessEndDate(const QDateTime &access_end_date);
    bool is_access_end_date_Set() const;
    bool is_access_end_date_Valid() const;

    QDateTime getAccessTimeStartDate() const;
    void setAccessTimeStartDate(const QDateTime &access_time_start_date);
    bool is_access_time_start_date_Set() const;
    bool is_access_time_start_date_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getNewPassword() const;
    void setNewPassword(const QString &new_password);
    bool is_new_password_Set() const;
    bool is_new_password_Valid() const;

    QString getPermissionLevel() const;
    void setPermissionLevel(const QString &permission_level);
    bool is_permission_level_Set() const;
    bool is_permission_level_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_access_end_date;
    bool m_access_end_date_isSet;
    bool m_access_end_date_isValid;

    QDateTime m_access_time_start_date;
    bool m_access_time_start_date_isSet;
    bool m_access_time_start_date_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_new_password;
    bool m_new_password_isSet;
    bool m_new_password_isValid;

    QString m_permission_level;
    bool m_permission_level_isSet;
    bool m_permission_level_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubUserData)

#endif // OAISubUserData_H
