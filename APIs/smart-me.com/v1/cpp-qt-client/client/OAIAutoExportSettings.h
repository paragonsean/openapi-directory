/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutoExportSettings.h
 *
 * Settings for the auto export functionality of a meter
 */

#ifndef OAIAutoExportSettings_H
#define OAIAutoExportSettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutoExportSettings : public OAIObject {
public:
    OAIAutoExportSettings();
    OAIAutoExportSettings(QString json);
    ~OAIAutoExportSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExportFormat() const;
    void setExportFormat(const QString &export_format);
    bool is_export_format_Set() const;
    bool is_export_format_Valid() const;

    QString getExportInterval() const;
    void setExportInterval(const QString &export_interval);
    bool is_export_interval_Set() const;
    bool is_export_interval_Valid() const;

    QString getMeterPointId() const;
    void setMeterPointId(const QString &meter_point_id);
    bool is_meter_point_id_Set() const;
    bool is_meter_point_id_Valid() const;

    QString getUploadType() const;
    void setUploadType(const QString &upload_type);
    bool is_upload_type_Set() const;
    bool is_upload_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_export_format;
    bool m_export_format_isSet;
    bool m_export_format_isValid;

    QString m_export_interval;
    bool m_export_interval_isSet;
    bool m_export_interval_isValid;

    QString m_meter_point_id;
    bool m_meter_point_id_isSet;
    bool m_meter_point_id_isValid;

    QString m_upload_type;
    bool m_upload_type_isSet;
    bool m_upload_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutoExportSettings)

#endif // OAIAutoExportSettings_H
