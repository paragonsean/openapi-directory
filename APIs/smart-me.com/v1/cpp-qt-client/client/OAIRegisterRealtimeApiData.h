/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegisterRealtimeApiData.h
 *
 * Container class for the register realtime API API
 */

#ifndef OAIRegisterRealtimeApiData_H
#define OAIRegisterRealtimeApiData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegisterRealtimeApiData : public OAIObject {
public:
    OAIRegisterRealtimeApiData();
    OAIRegisterRealtimeApiData(QString json);
    ~OAIRegisterRealtimeApiData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiUrl() const;
    void setApiUrl(const QString &api_url);
    bool is_api_url_Set() const;
    bool is_api_url_Valid() const;

    QString getBasicAuthPassword() const;
    void setBasicAuthPassword(const QString &basic_auth_password);
    bool is_basic_auth_password_Set() const;
    bool is_basic_auth_password_Valid() const;

    QString getBasicAuthUsername() const;
    void setBasicAuthUsername(const QString &basic_auth_username);
    bool is_basic_auth_username_Set() const;
    bool is_basic_auth_username_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMeterId() const;
    void setMeterId(const QString &meter_id);
    bool is_meter_id_Set() const;
    bool is_meter_id_Valid() const;

    QString getRegistrationType() const;
    void setRegistrationType(const QString &registration_type);
    bool is_registration_type_Set() const;
    bool is_registration_type_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_url;
    bool m_api_url_isSet;
    bool m_api_url_isValid;

    QString m_basic_auth_password;
    bool m_basic_auth_password_isSet;
    bool m_basic_auth_password_isValid;

    QString m_basic_auth_username;
    bool m_basic_auth_username_isSet;
    bool m_basic_auth_username_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_meter_id;
    bool m_meter_id_isSet;
    bool m_meter_id_isValid;

    QString m_registration_type;
    bool m_registration_type_isSet;
    bool m_registration_type_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegisterRealtimeApiData)

#endif // OAIRegisterRealtimeApiData_H
