/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessTokenToPut.h
 *
 * Container Class for the Put action of an Access Token
 */

#ifndef OAIAccessTokenToPut_H
#define OAIAccessTokenToPut_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccessTokenToPut : public OAIObject {
public:
    OAIAccessTokenToPut();
    OAIAccessTokenToPut(QString json);
    ~OAIAccessTokenToPut() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCardId() const;
    void setCardId(const qint64 &card_id);
    bool is_card_id_Set() const;
    bool is_card_id_Valid() const;

    qint64 getUserId() const;
    void setUserId(const qint64 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_card_id;
    bool m_card_id_isSet;
    bool m_card_id_isValid;

    qint64 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessTokenToPut)

#endif // OAIAccessTokenToPut_H
