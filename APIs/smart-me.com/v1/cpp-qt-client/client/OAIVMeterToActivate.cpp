/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVMeterToActivate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVMeterToActivate::OAIVMeterToActivate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVMeterToActivate::OAIVMeterToActivate() {
    this->initializeModel();
}

OAIVMeterToActivate::~OAIVMeterToActivate() {}

void OAIVMeterToActivate::initializeModel() {

    m_serial_number_isSet = false;
    m_serial_number_isValid = false;
}

void OAIVMeterToActivate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVMeterToActivate::fromJsonObject(QJsonObject json) {

    m_serial_number_isValid = ::OpenAPI::fromJsonValue(m_serial_number, json[QString("SerialNumber")]);
    m_serial_number_isSet = !json[QString("SerialNumber")].isNull() && m_serial_number_isValid;
}

QString OAIVMeterToActivate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVMeterToActivate::asJsonObject() const {
    QJsonObject obj;
    if (m_serial_number_isSet) {
        obj.insert(QString("SerialNumber"), ::OpenAPI::toJsonValue(m_serial_number));
    }
    return obj;
}

QString OAIVMeterToActivate::getSerialNumber() const {
    return m_serial_number;
}
void OAIVMeterToActivate::setSerialNumber(const QString &serial_number) {
    m_serial_number = serial_number;
    m_serial_number_isSet = true;
}

bool OAIVMeterToActivate::is_serial_number_Set() const{
    return m_serial_number_isSet;
}

bool OAIVMeterToActivate::is_serial_number_Valid() const{
    return m_serial_number_isValid;
}

bool OAIVMeterToActivate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_serial_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVMeterToActivate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
