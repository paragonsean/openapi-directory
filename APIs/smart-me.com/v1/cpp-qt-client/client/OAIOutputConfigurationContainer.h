/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutputConfigurationContainer.h
 *
 * Configuration for the outputs of a meter (analog/digital outputs)
 */

#ifndef OAIOutputConfigurationContainer_H
#define OAIOutputConfigurationContainer_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOutputConfigurationContainer : public OAIObject {
public:
    OAIOutputConfigurationContainer();
    OAIOutputConfigurationContainer(QString json);
    ~OAIOutputConfigurationContainer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDigitalOutputNoConnectionAction() const;
    void setDigitalOutputNoConnectionAction(const QString &digital_output_no_connection_action);
    bool is_digital_output_no_connection_action_Set() const;
    bool is_digital_output_no_connection_action_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getS0PulseValue() const;
    void setS0PulseValue(const QString &s0_pulse_value);
    bool is_s0_pulse_value_Set() const;
    bool is_s0_pulse_value_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_digital_output_no_connection_action;
    bool m_digital_output_no_connection_action_isSet;
    bool m_digital_output_no_connection_action_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_s0_pulse_value;
    bool m_s0_pulse_value_isSet;
    bool m_s0_pulse_value_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutputConfigurationContainer)

#endif // OAIOutputConfigurationContainer_H
