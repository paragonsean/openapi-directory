/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionToPost.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionToPost::OAIActionToPost(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionToPost::OAIActionToPost() {
    this->initializeModel();
}

OAIActionToPost::~OAIActionToPost() {}

void OAIActionToPost::initializeModel() {

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_device_id_isSet = false;
    m_device_id_isValid = false;
}

void OAIActionToPost::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionToPost::fromJsonObject(QJsonObject json) {

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("Actions")]);
    m_actions_isSet = !json[QString("Actions")].isNull() && m_actions_isValid;

    m_device_id_isValid = ::OpenAPI::fromJsonValue(m_device_id, json[QString("DeviceID")]);
    m_device_id_isSet = !json[QString("DeviceID")].isNull() && m_device_id_isValid;
}

QString OAIActionToPost::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionToPost::asJsonObject() const {
    QJsonObject obj;
    if (m_actions.size() > 0) {
        obj.insert(QString("Actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_device_id_isSet) {
        obj.insert(QString("DeviceID"), ::OpenAPI::toJsonValue(m_device_id));
    }
    return obj;
}

QList<OAIActionToPostItem> OAIActionToPost::getActions() const {
    return m_actions;
}
void OAIActionToPost::setActions(const QList<OAIActionToPostItem> &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAIActionToPost::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIActionToPost::is_actions_Valid() const{
    return m_actions_isValid;
}

QString OAIActionToPost::getDeviceId() const {
    return m_device_id;
}
void OAIActionToPost::setDeviceId(const QString &device_id) {
    m_device_id = device_id;
    m_device_id_isSet = true;
}

bool OAIActionToPost::is_device_id_Set() const{
    return m_device_id_isSet;
}

bool OAIActionToPost::is_device_id_Valid() const{
    return m_device_id_isValid;
}

bool OAIActionToPost::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionToPost::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
