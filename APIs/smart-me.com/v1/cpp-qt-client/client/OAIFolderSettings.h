/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFolderSettings.h
 *
 * Container for the folder settings
 */

#ifndef OAIFolderSettings_H
#define OAIFolderSettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFolderSettings : public OAIObject {
public:
    OAIFolderSettings();
    OAIFolderSettings(QString json);
    ~OAIFolderSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isEnable() const;
    void setEnable(const bool &enable);
    bool is_enable_Set() const;
    bool is_enable_Valid() const;

    QString getFolderType() const;
    void setFolderType(const QString &folder_type);
    bool is_folder_type_Set() const;
    bool is_folder_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParentFolderId() const;
    void setParentFolderId(const QString &parent_folder_id);
    bool is_parent_folder_id_Set() const;
    bool is_parent_folder_id_Valid() const;

    qint64 getSerialNumber() const;
    void setSerialNumber(const qint64 &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    bool isUseableForVirtualBillingMeters() const;
    void setUseableForVirtualBillingMeters(const bool &useable_for_virtual_billing_meters);
    bool is_useable_for_virtual_billing_meters_Set() const;
    bool is_useable_for_virtual_billing_meters_Valid() const;

    double getValueCorrection() const;
    void setValueCorrection(const double &value_correction);
    bool is_value_correction_Set() const;
    bool is_value_correction_Valid() const;

    double getValueCorrectionParentFolder() const;
    void setValueCorrectionParentFolder(const double &value_correction_parent_folder);
    bool is_value_correction_parent_folder_Set() const;
    bool is_value_correction_parent_folder_Valid() const;

    QString getVisualizationName() const;
    void setVisualizationName(const QString &visualization_name);
    bool is_visualization_name_Set() const;
    bool is_visualization_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_enable;
    bool m_enable_isSet;
    bool m_enable_isValid;

    QString m_folder_type;
    bool m_folder_type_isSet;
    bool m_folder_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_parent_folder_id;
    bool m_parent_folder_id_isSet;
    bool m_parent_folder_id_isValid;

    qint64 m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    bool m_useable_for_virtual_billing_meters;
    bool m_useable_for_virtual_billing_meters_isSet;
    bool m_useable_for_virtual_billing_meters_isValid;

    double m_value_correction;
    bool m_value_correction_isSet;
    bool m_value_correction_isValid;

    double m_value_correction_parent_folder;
    bool m_value_correction_parent_folder_isSet;
    bool m_value_correction_parent_folder_isValid;

    QString m_visualization_name;
    bool m_visualization_name_isSet;
    bool m_visualization_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFolderSettings)

#endif // OAIFolderSettings_H
