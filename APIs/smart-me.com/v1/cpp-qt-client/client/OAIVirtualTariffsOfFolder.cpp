/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVirtualTariffsOfFolder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVirtualTariffsOfFolder::OAIVirtualTariffsOfFolder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVirtualTariffsOfFolder::OAIVirtualTariffsOfFolder() {
    this->initializeModel();
}

OAIVirtualTariffsOfFolder::~OAIVirtualTariffsOfFolder() {}

void OAIVirtualTariffsOfFolder::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_folder_id_isSet = false;
    m_folder_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_virtual_tariffs_isSet = false;
    m_virtual_tariffs_isValid = false;
}

void OAIVirtualTariffsOfFolder::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVirtualTariffsOfFolder::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("Date")]);
    m_date_isSet = !json[QString("Date")].isNull() && m_date_isValid;

    m_folder_id_isValid = ::OpenAPI::fromJsonValue(m_folder_id, json[QString("FolderId")]);
    m_folder_id_isSet = !json[QString("FolderId")].isNull() && m_folder_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_virtual_tariffs_isValid = ::OpenAPI::fromJsonValue(m_virtual_tariffs, json[QString("VirtualTariffs")]);
    m_virtual_tariffs_isSet = !json[QString("VirtualTariffs")].isNull() && m_virtual_tariffs_isValid;
}

QString OAIVirtualTariffsOfFolder::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVirtualTariffsOfFolder::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("Date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_folder_id_isSet) {
        obj.insert(QString("FolderId"), ::OpenAPI::toJsonValue(m_folder_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_virtual_tariffs.size() > 0) {
        obj.insert(QString("VirtualTariffs"), ::OpenAPI::toJsonValue(m_virtual_tariffs));
    }
    return obj;
}

QDateTime OAIVirtualTariffsOfFolder::getDate() const {
    return m_date;
}
void OAIVirtualTariffsOfFolder::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIVirtualTariffsOfFolder::is_date_Set() const{
    return m_date_isSet;
}

bool OAIVirtualTariffsOfFolder::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIVirtualTariffsOfFolder::getFolderId() const {
    return m_folder_id;
}
void OAIVirtualTariffsOfFolder::setFolderId(const QString &folder_id) {
    m_folder_id = folder_id;
    m_folder_id_isSet = true;
}

bool OAIVirtualTariffsOfFolder::is_folder_id_Set() const{
    return m_folder_id_isSet;
}

bool OAIVirtualTariffsOfFolder::is_folder_id_Valid() const{
    return m_folder_id_isValid;
}

QString OAIVirtualTariffsOfFolder::getName() const {
    return m_name;
}
void OAIVirtualTariffsOfFolder::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIVirtualTariffsOfFolder::is_name_Set() const{
    return m_name_isSet;
}

bool OAIVirtualTariffsOfFolder::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIVirtualTariff> OAIVirtualTariffsOfFolder::getVirtualTariffs() const {
    return m_virtual_tariffs;
}
void OAIVirtualTariffsOfFolder::setVirtualTariffs(const QList<OAIVirtualTariff> &virtual_tariffs) {
    m_virtual_tariffs = virtual_tariffs;
    m_virtual_tariffs_isSet = true;
}

bool OAIVirtualTariffsOfFolder::is_virtual_tariffs_Set() const{
    return m_virtual_tariffs_isSet;
}

bool OAIVirtualTariffsOfFolder::is_virtual_tariffs_Valid() const{
    return m_virtual_tariffs_isValid;
}

bool OAIVirtualTariffsOfFolder::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_folder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_tariffs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVirtualTariffsOfFolder::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
