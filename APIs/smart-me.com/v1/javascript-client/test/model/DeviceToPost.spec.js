/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SmartMe);
  }
}(this, function(expect, SmartMe) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SmartMe.DeviceToPost();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeviceToPost', function() {
    it('should create an instance of DeviceToPost', function() {
      // uncomment below and update the code to test DeviceToPost
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be.a(SmartMe.DeviceToPost);
    });

    it('should have the property activePower (base name: "ActivePower")', function() {
      // uncomment below and update the code to test the property activePower
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property counterReading (base name: "CounterReading")', function() {
      // uncomment below and update the code to test the property counterReading
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property counterReadingExport (base name: "CounterReadingExport")', function() {
      // uncomment below and update the code to test the property counterReadingExport
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property counterReadingExportT1 (base name: "CounterReadingExportT1")', function() {
      // uncomment below and update the code to test the property counterReadingExportT1
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property counterReadingExportT2 (base name: "CounterReadingExportT2")', function() {
      // uncomment below and update the code to test the property counterReadingExportT2
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property counterReadingT1 (base name: "CounterReadingT1")', function() {
      // uncomment below and update the code to test the property counterReadingT1
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property counterReadingT2 (base name: "CounterReadingT2")', function() {
      // uncomment below and update the code to test the property counterReadingT2
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property current (base name: "Current")', function() {
      // uncomment below and update the code to test the property current
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property currentL1 (base name: "CurrentL1")', function() {
      // uncomment below and update the code to test the property currentL1
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property currentL2 (base name: "CurrentL2")', function() {
      // uncomment below and update the code to test the property currentL2
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property currentL3 (base name: "CurrentL3")', function() {
      // uncomment below and update the code to test the property currentL3
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property deviceEnergyType (base name: "DeviceEnergyType")', function() {
      // uncomment below and update the code to test the property deviceEnergyType
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property digitalInput1 (base name: "DigitalInput1")', function() {
      // uncomment below and update the code to test the property digitalInput1
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property meterSubType (base name: "MeterSubType")', function() {
      // uncomment below and update the code to test the property meterSubType
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property powerFactor (base name: "PowerFactor")', function() {
      // uncomment below and update the code to test the property powerFactor
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property powerFactorL1 (base name: "PowerFactorL1")', function() {
      // uncomment below and update the code to test the property powerFactorL1
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property powerFactorL2 (base name: "PowerFactorL2")', function() {
      // uncomment below and update the code to test the property powerFactorL2
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property powerFactorL3 (base name: "PowerFactorL3")', function() {
      // uncomment below and update the code to test the property powerFactorL3
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property serial (base name: "Serial")', function() {
      // uncomment below and update the code to test the property serial
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property temperature (base name: "Temperature")', function() {
      // uncomment below and update the code to test the property temperature
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property valueDate (base name: "ValueDate")', function() {
      // uncomment below and update the code to test the property valueDate
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property voltage (base name: "Voltage")', function() {
      // uncomment below and update the code to test the property voltage
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property voltageL1 (base name: "VoltageL1")', function() {
      // uncomment below and update the code to test the property voltageL1
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property voltageL2 (base name: "VoltageL2")', function() {
      // uncomment below and update the code to test the property voltageL2
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

    it('should have the property voltageL3 (base name: "VoltageL3")', function() {
      // uncomment below and update the code to test the property voltageL3
      //var instance = new SmartMe.DeviceToPost();
      //expect(instance).to.be();
    });

  });

}));
