/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FolderMenuItem from './FolderMenuItem';

/**
 * The FolderMenuConfiguration model module.
 * @module model/FolderMenuConfiguration
 * @version v1
 */
class FolderMenuConfiguration {
    /**
     * Constructs a new <code>FolderMenuConfiguration</code>.
     * Container Class for the Web API representing a folder menu and it&#39;s items
     * @alias module:model/FolderMenuConfiguration
     */
    constructor() { 
        
        FolderMenuConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FolderMenuConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FolderMenuConfiguration} obj Optional instance to populate.
     * @return {module:model/FolderMenuConfiguration} The populated <code>FolderMenuConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FolderMenuConfiguration();

            if (data.hasOwnProperty('BrowserTimeZoneName')) {
                obj['BrowserTimeZoneName'] = ApiClient.convertToType(data['BrowserTimeZoneName'], 'String');
            }
            if (data.hasOwnProperty('BrowserUtcTime')) {
                obj['BrowserUtcTime'] = ApiClient.convertToType(data['BrowserUtcTime'], 'String');
            }
            if (data.hasOwnProperty('Items')) {
                obj['Items'] = ApiClient.convertToType(data['Items'], [FolderMenuItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FolderMenuConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FolderMenuConfiguration</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['BrowserTimeZoneName'] && !(typeof data['BrowserTimeZoneName'] === 'string' || data['BrowserTimeZoneName'] instanceof String)) {
            throw new Error("Expected the field `BrowserTimeZoneName` to be a primitive type in the JSON string but got " + data['BrowserTimeZoneName']);
        }
        // ensure the json data is a string
        if (data['BrowserUtcTime'] && !(typeof data['BrowserUtcTime'] === 'string' || data['BrowserUtcTime'] instanceof String)) {
            throw new Error("Expected the field `BrowserUtcTime` to be a primitive type in the JSON string but got " + data['BrowserUtcTime']);
        }
        if (data['Items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Items'])) {
                throw new Error("Expected the field `Items` to be an array in the JSON data but got " + data['Items']);
            }
            // validate the optional field `Items` (array)
            for (const item of data['Items']) {
                FolderMenuItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The time zone name taken from the browser
 * @member {String} BrowserTimeZoneName
 */
FolderMenuConfiguration.prototype['BrowserTimeZoneName'] = undefined;

/**
 * The UTC time taken from the browser
 * @member {String} BrowserUtcTime
 */
FolderMenuConfiguration.prototype['BrowserUtcTime'] = undefined;

/**
 * @member {Array.<module:model/FolderMenuItem>} Items
 */
FolderMenuConfiguration.prototype['Items'] = undefined;






export default FolderMenuConfiguration;

