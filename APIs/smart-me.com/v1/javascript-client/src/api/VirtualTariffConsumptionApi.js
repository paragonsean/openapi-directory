/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualTariffConsumptionData from '../model/VirtualTariffConsumptionData';

/**
* VirtualTariffConsumption service.
* @module api/VirtualTariffConsumptionApi
* @version v1
*/
export default class VirtualTariffConsumptionApi {

    /**
    * Constructs a new VirtualTariffConsumptionApi. 
    * @alias module:api/VirtualTariffConsumptionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualTariffConsumptionGet operation.
     * @callback module:api/VirtualTariffConsumptionApi~virtualTariffConsumptionGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VirtualTariffConsumptionData>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the consumption of a folder with a virtuall tariffs.
     * Gets the consumption of a folder with a virtuall tariffs.
     * @param {String} folderId The ID of the Folder
     * @param {Date} startDate The start date (UTC)
     * @param {Date} endDate The end date (UTC)
     * @param {module:api/VirtualTariffConsumptionApi~virtualTariffConsumptionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VirtualTariffConsumptionData>}
     */
    virtualTariffConsumptionGet(folderId, startDate, endDate, callback) {
      let postBody = null;
      // verify the required parameter 'folderId' is set
      if (folderId === undefined || folderId === null) {
        throw new Error("Missing the required parameter 'folderId' when calling virtualTariffConsumptionGet");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling virtualTariffConsumptionGet");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling virtualTariffConsumptionGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'folderId': folderId,
        'startDate': startDate,
        'endDate': endDate
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = [VirtualTariffConsumptionData];
      return this.apiClient.callApi(
        '/api/VirtualTariffConsumption', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
