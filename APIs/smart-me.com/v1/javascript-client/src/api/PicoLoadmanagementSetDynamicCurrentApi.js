/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* PicoLoadmanagementSetDynamicCurrent service.
* @module api/PicoLoadmanagementSetDynamicCurrentApi
* @version v1
*/
export default class PicoLoadmanagementSetDynamicCurrentApi {

    /**
    * Constructs a new PicoLoadmanagementSetDynamicCurrentApi. 
    * @alias module:api/PicoLoadmanagementSetDynamicCurrentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the picoLoadmanagementSetDynamicCurrentPost operation.
     * @callback module:api/PicoLoadmanagementSetDynamicCurrentApi~picoLoadmanagementSetDynamicCurrentPostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the dynamic current of a load management group or a single station.
     * @param {Number} serial The serial number can be any pico serial in the group (e.g. 700001)
     * @param {Number} current The dynamic current of the group (in mA)
     * @param {module:api/PicoLoadmanagementSetDynamicCurrentApi~picoLoadmanagementSetDynamicCurrentPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    picoLoadmanagementSetDynamicCurrentPost(serial, current, callback) {
      let postBody = null;
      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling picoLoadmanagementSetDynamicCurrentPost");
      }
      // verify the required parameter 'current' is set
      if (current === undefined || current === null) {
        throw new Error("Missing the required parameter 'current' when calling picoLoadmanagementSetDynamicCurrentPost");
      }

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
        'current': current
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/pico/loadmanagementgroup/current/{serial}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
