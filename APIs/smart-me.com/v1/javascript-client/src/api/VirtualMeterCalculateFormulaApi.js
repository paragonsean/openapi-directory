/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Device from '../model/Device';

/**
* VirtualMeterCalculateFormula service.
* @module api/VirtualMeterCalculateFormulaApi
* @version v1
*/
export default class VirtualMeterCalculateFormulaApi {

    /**
    * Constructs a new VirtualMeterCalculateFormulaApi. 
    * @alias module:api/VirtualMeterCalculateFormulaApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualMeterCalculateFormulaGet operation.
     * @callback module:api/VirtualMeterCalculateFormulaApi~virtualMeterCalculateFormulaGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Device} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Calculates a virtual meter from a formula.               A meter is coded as ID(\"METERID\")
     * Calculates a virtual meter from a formula.                            A meter is coded as ID(\"METERID\")              Ariphmetical operators:               ()  parentheses;                 +   plus (a + b);                -  minus (a - b);                *  multiplycation symbol (a * b);                /  divide symbol (a / b);               Example: (ID(\"63ac09cb-4e5f-4f3e-bd27-ad8c30bdfc0c\") + ID(\"0209555e-9dc4-4e84-a166-a864488b4b12\")) * 2
     * @param {String} formula 
     * @param {module:api/VirtualMeterCalculateFormulaApi~virtualMeterCalculateFormulaGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Device}
     */
    virtualMeterCalculateFormulaGet(formula, callback) {
      let postBody = null;
      // verify the required parameter 'formula' is set
      if (formula === undefined || formula === null) {
        throw new Error("Missing the required parameter 'formula' when calling virtualMeterCalculateFormulaGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'formula': formula
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = Device;
      return this.apiClient.callApi(
        '/api/VirtualMeterCalculateFormula', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
