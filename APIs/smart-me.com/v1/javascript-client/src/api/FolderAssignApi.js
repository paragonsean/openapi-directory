/**
 * smart-me
 * With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* FolderAssign service.
* @module api/FolderAssignApi
* @version v1
*/
export default class FolderAssignApi {

    /**
    * Constructs a new FolderAssignApi. 
    * @alias module:api/FolderAssignApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the folderAssignPost operation.
     * @callback module:api/FolderAssignApi~folderAssignPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assign a folder (source) or meter to another folder (target). Can be used to create a folder structure.
     * @param {String} source The ID of the meter or folder that should be assign
     * @param {String} target The ID of the meter or folder that should be the parent
     * @param {module:api/FolderAssignApi~folderAssignPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    folderAssignPost(source, target, callback) {
      let postBody = null;
      // verify the required parameter 'source' is set
      if (source === undefined || source === null) {
        throw new Error("Missing the required parameter 'source' when calling folderAssignPost");
      }
      // verify the required parameter 'target' is set
      if (target === undefined || target === null) {
        throw new Error("Missing the required parameter 'target' when calling folderAssignPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'source': source,
        'target': target
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/folder/assign', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
