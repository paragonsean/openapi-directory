# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForecastOptimalParametersResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alpha: float=None, beta: float=None, gamma: float=None):
        """ForecastOptimalParametersResponse - a model defined in OpenAPI

        :param alpha: The alpha of this ForecastOptimalParametersResponse.
        :param beta: The beta of this ForecastOptimalParametersResponse.
        :param gamma: The gamma of this ForecastOptimalParametersResponse.
        """
        self.openapi_types = {
            'alpha': float,
            'beta': float,
            'gamma': float
        }

        self.attribute_map = {
            'alpha': 'alpha',
            'beta': 'beta',
            'gamma': 'gamma'
        }

        self._alpha = alpha
        self._beta = beta
        self._gamma = gamma

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForecastOptimalParametersResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForecastOptimalParametersResponse of this ForecastOptimalParametersResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alpha(self):
        """Gets the alpha of this ForecastOptimalParametersResponse.


        :return: The alpha of this ForecastOptimalParametersResponse.
        :rtype: float
        """
        return self._alpha

    @alpha.setter
    def alpha(self, alpha):
        """Sets the alpha of this ForecastOptimalParametersResponse.


        :param alpha: The alpha of this ForecastOptimalParametersResponse.
        :type alpha: float
        """

        self._alpha = alpha

    @property
    def beta(self):
        """Gets the beta of this ForecastOptimalParametersResponse.


        :return: The beta of this ForecastOptimalParametersResponse.
        :rtype: float
        """
        return self._beta

    @beta.setter
    def beta(self, beta):
        """Sets the beta of this ForecastOptimalParametersResponse.


        :param beta: The beta of this ForecastOptimalParametersResponse.
        :type beta: float
        """

        self._beta = beta

    @property
    def gamma(self):
        """Gets the gamma of this ForecastOptimalParametersResponse.


        :return: The gamma of this ForecastOptimalParametersResponse.
        :rtype: float
        """
        return self._gamma

    @gamma.setter
    def gamma(self, gamma):
        """Sets the gamma of this ForecastOptimalParametersResponse.


        :param gamma: The gamma of this ForecastOptimalParametersResponse.
        :type gamma: float
        """

        self._gamma = gamma
