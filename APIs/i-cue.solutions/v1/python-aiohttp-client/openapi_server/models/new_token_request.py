# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NewTokenRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_token: str=None, expiration_date: datetime=None, user_token: str=None):
        """NewTokenRequest - a model defined in OpenAPI

        :param entity_token: The entity_token of this NewTokenRequest.
        :param expiration_date: The expiration_date of this NewTokenRequest.
        :param user_token: The user_token of this NewTokenRequest.
        """
        self.openapi_types = {
            'entity_token': str,
            'expiration_date': datetime,
            'user_token': str
        }

        self.attribute_map = {
            'entity_token': 'entityToken',
            'expiration_date': 'expirationDate',
            'user_token': 'userToken'
        }

        self._entity_token = entity_token
        self._expiration_date = expiration_date
        self._user_token = user_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewTokenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewTokenRequest of this NewTokenRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_token(self):
        """Gets the entity_token of this NewTokenRequest.


        :return: The entity_token of this NewTokenRequest.
        :rtype: str
        """
        return self._entity_token

    @entity_token.setter
    def entity_token(self, entity_token):
        """Sets the entity_token of this NewTokenRequest.


        :param entity_token: The entity_token of this NewTokenRequest.
        :type entity_token: str
        """

        self._entity_token = entity_token

    @property
    def expiration_date(self):
        """Gets the expiration_date of this NewTokenRequest.


        :return: The expiration_date of this NewTokenRequest.
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this NewTokenRequest.


        :param expiration_date: The expiration_date of this NewTokenRequest.
        :type expiration_date: datetime
        """

        self._expiration_date = expiration_date

    @property
    def user_token(self):
        """Gets the user_token of this NewTokenRequest.


        :return: The user_token of this NewTokenRequest.
        :rtype: str
        """
        return self._user_token

    @user_token.setter
    def user_token(self, user_token):
        """Sets the user_token of this NewTokenRequest.


        :param user_token: The user_token of this NewTokenRequest.
        :type user_token: str
        """

        self._user_token = user_token
