# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.forecast_hyperparameter_response import ForecastHyperparameterResponse
from openapi_server.models.time_series_forecast_response import TimeSeriesForecastResponse
from openapi_server import util


class ForecastResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hyperparameters: ForecastHyperparameterResponse=None, time_series: List[TimeSeriesForecastResponse]=None):
        """ForecastResponse - a model defined in OpenAPI

        :param hyperparameters: The hyperparameters of this ForecastResponse.
        :param time_series: The time_series of this ForecastResponse.
        """
        self.openapi_types = {
            'hyperparameters': ForecastHyperparameterResponse,
            'time_series': List[TimeSeriesForecastResponse]
        }

        self.attribute_map = {
            'hyperparameters': 'hyperparameters',
            'time_series': 'timeSeries'
        }

        self._hyperparameters = hyperparameters
        self._time_series = time_series

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForecastResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForecastResponse of this ForecastResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hyperparameters(self):
        """Gets the hyperparameters of this ForecastResponse.


        :return: The hyperparameters of this ForecastResponse.
        :rtype: ForecastHyperparameterResponse
        """
        return self._hyperparameters

    @hyperparameters.setter
    def hyperparameters(self, hyperparameters):
        """Sets the hyperparameters of this ForecastResponse.


        :param hyperparameters: The hyperparameters of this ForecastResponse.
        :type hyperparameters: ForecastHyperparameterResponse
        """

        self._hyperparameters = hyperparameters

    @property
    def time_series(self):
        """Gets the time_series of this ForecastResponse.


        :return: The time_series of this ForecastResponse.
        :rtype: List[TimeSeriesForecastResponse]
        """
        return self._time_series

    @time_series.setter
    def time_series(self, time_series):
        """Sets the time_series of this ForecastResponse.


        :param time_series: The time_series of this ForecastResponse.
        :type time_series: List[TimeSeriesForecastResponse]
        """

        self._time_series = time_series
