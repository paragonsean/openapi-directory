# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForecastPerformanceDataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forecast_values: List[float]=None, history_values: List[float]=None, time_series_id: str=None):
        """ForecastPerformanceDataRequest - a model defined in OpenAPI

        :param forecast_values: The forecast_values of this ForecastPerformanceDataRequest.
        :param history_values: The history_values of this ForecastPerformanceDataRequest.
        :param time_series_id: The time_series_id of this ForecastPerformanceDataRequest.
        """
        self.openapi_types = {
            'forecast_values': List[float],
            'history_values': List[float],
            'time_series_id': str
        }

        self.attribute_map = {
            'forecast_values': 'forecastValues',
            'history_values': 'historyValues',
            'time_series_id': 'timeSeriesId'
        }

        self._forecast_values = forecast_values
        self._history_values = history_values
        self._time_series_id = time_series_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForecastPerformanceDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForecastPerformanceDataRequest of this ForecastPerformanceDataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forecast_values(self):
        """Gets the forecast_values of this ForecastPerformanceDataRequest.


        :return: The forecast_values of this ForecastPerformanceDataRequest.
        :rtype: List[float]
        """
        return self._forecast_values

    @forecast_values.setter
    def forecast_values(self, forecast_values):
        """Sets the forecast_values of this ForecastPerformanceDataRequest.


        :param forecast_values: The forecast_values of this ForecastPerformanceDataRequest.
        :type forecast_values: List[float]
        """

        self._forecast_values = forecast_values

    @property
    def history_values(self):
        """Gets the history_values of this ForecastPerformanceDataRequest.


        :return: The history_values of this ForecastPerformanceDataRequest.
        :rtype: List[float]
        """
        return self._history_values

    @history_values.setter
    def history_values(self, history_values):
        """Sets the history_values of this ForecastPerformanceDataRequest.


        :param history_values: The history_values of this ForecastPerformanceDataRequest.
        :type history_values: List[float]
        """

        self._history_values = history_values

    @property
    def time_series_id(self):
        """Gets the time_series_id of this ForecastPerformanceDataRequest.


        :return: The time_series_id of this ForecastPerformanceDataRequest.
        :rtype: str
        """
        return self._time_series_id

    @time_series_id.setter
    def time_series_id(self, time_series_id):
        """Sets the time_series_id of this ForecastPerformanceDataRequest.


        :param time_series_id: The time_series_id of this ForecastPerformanceDataRequest.
        :type time_series_id: str
        """

        self._time_series_id = time_series_id
