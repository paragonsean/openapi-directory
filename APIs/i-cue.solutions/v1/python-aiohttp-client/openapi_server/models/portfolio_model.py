# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PortfolioModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abc12: str=None, abc12_value: float=None, abc6: str=None, abc6_value: float=None, abc9: str=None, abc9_value: float=None, id: str=None, threshold_a: float=None, threshold_b: float=None, threshold_c: float=None, threshold_x: float=None, threshold_y: float=None, threshold_z: float=None, xyz12: str=None, xyz12_value: float=None, xyz6: str=None, xyz6_value: float=None, xyz9: str=None, xyz9_value: float=None):
        """PortfolioModel - a model defined in OpenAPI

        :param abc12: The abc12 of this PortfolioModel.
        :param abc12_value: The abc12_value of this PortfolioModel.
        :param abc6: The abc6 of this PortfolioModel.
        :param abc6_value: The abc6_value of this PortfolioModel.
        :param abc9: The abc9 of this PortfolioModel.
        :param abc9_value: The abc9_value of this PortfolioModel.
        :param id: The id of this PortfolioModel.
        :param threshold_a: The threshold_a of this PortfolioModel.
        :param threshold_b: The threshold_b of this PortfolioModel.
        :param threshold_c: The threshold_c of this PortfolioModel.
        :param threshold_x: The threshold_x of this PortfolioModel.
        :param threshold_y: The threshold_y of this PortfolioModel.
        :param threshold_z: The threshold_z of this PortfolioModel.
        :param xyz12: The xyz12 of this PortfolioModel.
        :param xyz12_value: The xyz12_value of this PortfolioModel.
        :param xyz6: The xyz6 of this PortfolioModel.
        :param xyz6_value: The xyz6_value of this PortfolioModel.
        :param xyz9: The xyz9 of this PortfolioModel.
        :param xyz9_value: The xyz9_value of this PortfolioModel.
        """
        self.openapi_types = {
            'abc12': str,
            'abc12_value': float,
            'abc6': str,
            'abc6_value': float,
            'abc9': str,
            'abc9_value': float,
            'id': str,
            'threshold_a': float,
            'threshold_b': float,
            'threshold_c': float,
            'threshold_x': float,
            'threshold_y': float,
            'threshold_z': float,
            'xyz12': str,
            'xyz12_value': float,
            'xyz6': str,
            'xyz6_value': float,
            'xyz9': str,
            'xyz9_value': float
        }

        self.attribute_map = {
            'abc12': 'abc12',
            'abc12_value': 'abc12Value',
            'abc6': 'abc6',
            'abc6_value': 'abc6Value',
            'abc9': 'abc9',
            'abc9_value': 'abc9Value',
            'id': 'id',
            'threshold_a': 'thresholdA',
            'threshold_b': 'thresholdB',
            'threshold_c': 'thresholdC',
            'threshold_x': 'thresholdX',
            'threshold_y': 'thresholdY',
            'threshold_z': 'thresholdZ',
            'xyz12': 'xyz12',
            'xyz12_value': 'xyz12Value',
            'xyz6': 'xyz6',
            'xyz6_value': 'xyz6Value',
            'xyz9': 'xyz9',
            'xyz9_value': 'xyz9Value'
        }

        self._abc12 = abc12
        self._abc12_value = abc12_value
        self._abc6 = abc6
        self._abc6_value = abc6_value
        self._abc9 = abc9
        self._abc9_value = abc9_value
        self._id = id
        self._threshold_a = threshold_a
        self._threshold_b = threshold_b
        self._threshold_c = threshold_c
        self._threshold_x = threshold_x
        self._threshold_y = threshold_y
        self._threshold_z = threshold_z
        self._xyz12 = xyz12
        self._xyz12_value = xyz12_value
        self._xyz6 = xyz6
        self._xyz6_value = xyz6_value
        self._xyz9 = xyz9
        self._xyz9_value = xyz9_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortfolioModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PortfolioModel of this PortfolioModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abc12(self):
        """Gets the abc12 of this PortfolioModel.


        :return: The abc12 of this PortfolioModel.
        :rtype: str
        """
        return self._abc12

    @abc12.setter
    def abc12(self, abc12):
        """Sets the abc12 of this PortfolioModel.


        :param abc12: The abc12 of this PortfolioModel.
        :type abc12: str
        """

        self._abc12 = abc12

    @property
    def abc12_value(self):
        """Gets the abc12_value of this PortfolioModel.


        :return: The abc12_value of this PortfolioModel.
        :rtype: float
        """
        return self._abc12_value

    @abc12_value.setter
    def abc12_value(self, abc12_value):
        """Sets the abc12_value of this PortfolioModel.


        :param abc12_value: The abc12_value of this PortfolioModel.
        :type abc12_value: float
        """

        self._abc12_value = abc12_value

    @property
    def abc6(self):
        """Gets the abc6 of this PortfolioModel.


        :return: The abc6 of this PortfolioModel.
        :rtype: str
        """
        return self._abc6

    @abc6.setter
    def abc6(self, abc6):
        """Sets the abc6 of this PortfolioModel.


        :param abc6: The abc6 of this PortfolioModel.
        :type abc6: str
        """

        self._abc6 = abc6

    @property
    def abc6_value(self):
        """Gets the abc6_value of this PortfolioModel.


        :return: The abc6_value of this PortfolioModel.
        :rtype: float
        """
        return self._abc6_value

    @abc6_value.setter
    def abc6_value(self, abc6_value):
        """Sets the abc6_value of this PortfolioModel.


        :param abc6_value: The abc6_value of this PortfolioModel.
        :type abc6_value: float
        """

        self._abc6_value = abc6_value

    @property
    def abc9(self):
        """Gets the abc9 of this PortfolioModel.


        :return: The abc9 of this PortfolioModel.
        :rtype: str
        """
        return self._abc9

    @abc9.setter
    def abc9(self, abc9):
        """Sets the abc9 of this PortfolioModel.


        :param abc9: The abc9 of this PortfolioModel.
        :type abc9: str
        """

        self._abc9 = abc9

    @property
    def abc9_value(self):
        """Gets the abc9_value of this PortfolioModel.


        :return: The abc9_value of this PortfolioModel.
        :rtype: float
        """
        return self._abc9_value

    @abc9_value.setter
    def abc9_value(self, abc9_value):
        """Sets the abc9_value of this PortfolioModel.


        :param abc9_value: The abc9_value of this PortfolioModel.
        :type abc9_value: float
        """

        self._abc9_value = abc9_value

    @property
    def id(self):
        """Gets the id of this PortfolioModel.


        :return: The id of this PortfolioModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PortfolioModel.


        :param id: The id of this PortfolioModel.
        :type id: str
        """

        self._id = id

    @property
    def threshold_a(self):
        """Gets the threshold_a of this PortfolioModel.


        :return: The threshold_a of this PortfolioModel.
        :rtype: float
        """
        return self._threshold_a

    @threshold_a.setter
    def threshold_a(self, threshold_a):
        """Sets the threshold_a of this PortfolioModel.


        :param threshold_a: The threshold_a of this PortfolioModel.
        :type threshold_a: float
        """

        self._threshold_a = threshold_a

    @property
    def threshold_b(self):
        """Gets the threshold_b of this PortfolioModel.


        :return: The threshold_b of this PortfolioModel.
        :rtype: float
        """
        return self._threshold_b

    @threshold_b.setter
    def threshold_b(self, threshold_b):
        """Sets the threshold_b of this PortfolioModel.


        :param threshold_b: The threshold_b of this PortfolioModel.
        :type threshold_b: float
        """

        self._threshold_b = threshold_b

    @property
    def threshold_c(self):
        """Gets the threshold_c of this PortfolioModel.


        :return: The threshold_c of this PortfolioModel.
        :rtype: float
        """
        return self._threshold_c

    @threshold_c.setter
    def threshold_c(self, threshold_c):
        """Sets the threshold_c of this PortfolioModel.


        :param threshold_c: The threshold_c of this PortfolioModel.
        :type threshold_c: float
        """

        self._threshold_c = threshold_c

    @property
    def threshold_x(self):
        """Gets the threshold_x of this PortfolioModel.


        :return: The threshold_x of this PortfolioModel.
        :rtype: float
        """
        return self._threshold_x

    @threshold_x.setter
    def threshold_x(self, threshold_x):
        """Sets the threshold_x of this PortfolioModel.


        :param threshold_x: The threshold_x of this PortfolioModel.
        :type threshold_x: float
        """

        self._threshold_x = threshold_x

    @property
    def threshold_y(self):
        """Gets the threshold_y of this PortfolioModel.


        :return: The threshold_y of this PortfolioModel.
        :rtype: float
        """
        return self._threshold_y

    @threshold_y.setter
    def threshold_y(self, threshold_y):
        """Sets the threshold_y of this PortfolioModel.


        :param threshold_y: The threshold_y of this PortfolioModel.
        :type threshold_y: float
        """

        self._threshold_y = threshold_y

    @property
    def threshold_z(self):
        """Gets the threshold_z of this PortfolioModel.


        :return: The threshold_z of this PortfolioModel.
        :rtype: float
        """
        return self._threshold_z

    @threshold_z.setter
    def threshold_z(self, threshold_z):
        """Sets the threshold_z of this PortfolioModel.


        :param threshold_z: The threshold_z of this PortfolioModel.
        :type threshold_z: float
        """

        self._threshold_z = threshold_z

    @property
    def xyz12(self):
        """Gets the xyz12 of this PortfolioModel.


        :return: The xyz12 of this PortfolioModel.
        :rtype: str
        """
        return self._xyz12

    @xyz12.setter
    def xyz12(self, xyz12):
        """Sets the xyz12 of this PortfolioModel.


        :param xyz12: The xyz12 of this PortfolioModel.
        :type xyz12: str
        """

        self._xyz12 = xyz12

    @property
    def xyz12_value(self):
        """Gets the xyz12_value of this PortfolioModel.


        :return: The xyz12_value of this PortfolioModel.
        :rtype: float
        """
        return self._xyz12_value

    @xyz12_value.setter
    def xyz12_value(self, xyz12_value):
        """Sets the xyz12_value of this PortfolioModel.


        :param xyz12_value: The xyz12_value of this PortfolioModel.
        :type xyz12_value: float
        """

        self._xyz12_value = xyz12_value

    @property
    def xyz6(self):
        """Gets the xyz6 of this PortfolioModel.


        :return: The xyz6 of this PortfolioModel.
        :rtype: str
        """
        return self._xyz6

    @xyz6.setter
    def xyz6(self, xyz6):
        """Sets the xyz6 of this PortfolioModel.


        :param xyz6: The xyz6 of this PortfolioModel.
        :type xyz6: str
        """

        self._xyz6 = xyz6

    @property
    def xyz6_value(self):
        """Gets the xyz6_value of this PortfolioModel.


        :return: The xyz6_value of this PortfolioModel.
        :rtype: float
        """
        return self._xyz6_value

    @xyz6_value.setter
    def xyz6_value(self, xyz6_value):
        """Sets the xyz6_value of this PortfolioModel.


        :param xyz6_value: The xyz6_value of this PortfolioModel.
        :type xyz6_value: float
        """

        self._xyz6_value = xyz6_value

    @property
    def xyz9(self):
        """Gets the xyz9 of this PortfolioModel.


        :return: The xyz9 of this PortfolioModel.
        :rtype: str
        """
        return self._xyz9

    @xyz9.setter
    def xyz9(self, xyz9):
        """Sets the xyz9 of this PortfolioModel.


        :param xyz9: The xyz9 of this PortfolioModel.
        :type xyz9: str
        """

        self._xyz9 = xyz9

    @property
    def xyz9_value(self):
        """Gets the xyz9_value of this PortfolioModel.


        :return: The xyz9_value of this PortfolioModel.
        :rtype: float
        """
        return self._xyz9_value

    @xyz9_value.setter
    def xyz9_value(self, xyz9_value):
        """Sets the xyz9_value of this PortfolioModel.


        :param xyz9_value: The xyz9_value of this PortfolioModel.
        :type xyz9_value: float
        """

        self._xyz9_value = xyz9_value
