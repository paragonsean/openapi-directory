# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.forecast_hyperparameter_response import ForecastHyperparameterResponse
from openapi_server.models.planning_level_forecast_result_data import PlanningLevelForecastResultData
from openapi_server import util


class ForecastBottomUpResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forecast_data: List[PlanningLevelForecastResultData]=None, hyperparameters: ForecastHyperparameterResponse=None):
        """ForecastBottomUpResponse - a model defined in OpenAPI

        :param forecast_data: The forecast_data of this ForecastBottomUpResponse.
        :param hyperparameters: The hyperparameters of this ForecastBottomUpResponse.
        """
        self.openapi_types = {
            'forecast_data': List[PlanningLevelForecastResultData],
            'hyperparameters': ForecastHyperparameterResponse
        }

        self.attribute_map = {
            'forecast_data': 'forecastData',
            'hyperparameters': 'hyperparameters'
        }

        self._forecast_data = forecast_data
        self._hyperparameters = hyperparameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForecastBottomUpResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForecastBottomUpResponse of this ForecastBottomUpResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forecast_data(self):
        """Gets the forecast_data of this ForecastBottomUpResponse.


        :return: The forecast_data of this ForecastBottomUpResponse.
        :rtype: List[PlanningLevelForecastResultData]
        """
        return self._forecast_data

    @forecast_data.setter
    def forecast_data(self, forecast_data):
        """Sets the forecast_data of this ForecastBottomUpResponse.


        :param forecast_data: The forecast_data of this ForecastBottomUpResponse.
        :type forecast_data: List[PlanningLevelForecastResultData]
        """

        self._forecast_data = forecast_data

    @property
    def hyperparameters(self):
        """Gets the hyperparameters of this ForecastBottomUpResponse.


        :return: The hyperparameters of this ForecastBottomUpResponse.
        :rtype: ForecastHyperparameterResponse
        """
        return self._hyperparameters

    @hyperparameters.setter
    def hyperparameters(self, hyperparameters):
        """Sets the hyperparameters of this ForecastBottomUpResponse.


        :param hyperparameters: The hyperparameters of this ForecastBottomUpResponse.
        :type hyperparameters: ForecastHyperparameterResponse
        """

        self._hyperparameters = hyperparameters
