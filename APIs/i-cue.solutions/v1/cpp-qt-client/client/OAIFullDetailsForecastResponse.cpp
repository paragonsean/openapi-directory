/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFullDetailsForecastResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFullDetailsForecastResponse::OAIFullDetailsForecastResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFullDetailsForecastResponse::OAIFullDetailsForecastResponse() {
    this->initializeModel();
}

OAIFullDetailsForecastResponse::~OAIFullDetailsForecastResponse() {}

void OAIFullDetailsForecastResponse::initializeModel() {

    m_hyperparameters_isSet = false;
    m_hyperparameters_isValid = false;

    m_time_series_isSet = false;
    m_time_series_isValid = false;
}

void OAIFullDetailsForecastResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFullDetailsForecastResponse::fromJsonObject(QJsonObject json) {

    m_hyperparameters_isValid = ::OpenAPI::fromJsonValue(m_hyperparameters, json[QString("hyperparameters")]);
    m_hyperparameters_isSet = !json[QString("hyperparameters")].isNull() && m_hyperparameters_isValid;

    m_time_series_isValid = ::OpenAPI::fromJsonValue(m_time_series, json[QString("timeSeries")]);
    m_time_series_isSet = !json[QString("timeSeries")].isNull() && m_time_series_isValid;
}

QString OAIFullDetailsForecastResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFullDetailsForecastResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_hyperparameters.isSet()) {
        obj.insert(QString("hyperparameters"), ::OpenAPI::toJsonValue(m_hyperparameters));
    }
    if (m_time_series.size() > 0) {
        obj.insert(QString("timeSeries"), ::OpenAPI::toJsonValue(m_time_series));
    }
    return obj;
}

OAIForecastHyperparameterResponse OAIFullDetailsForecastResponse::getHyperparameters() const {
    return m_hyperparameters;
}
void OAIFullDetailsForecastResponse::setHyperparameters(const OAIForecastHyperparameterResponse &hyperparameters) {
    m_hyperparameters = hyperparameters;
    m_hyperparameters_isSet = true;
}

bool OAIFullDetailsForecastResponse::is_hyperparameters_Set() const{
    return m_hyperparameters_isSet;
}

bool OAIFullDetailsForecastResponse::is_hyperparameters_Valid() const{
    return m_hyperparameters_isValid;
}

QList<OAITimeSeriesFullDetailsResponse> OAIFullDetailsForecastResponse::getTimeSeries() const {
    return m_time_series;
}
void OAIFullDetailsForecastResponse::setTimeSeries(const QList<OAITimeSeriesFullDetailsResponse> &time_series) {
    m_time_series = time_series;
    m_time_series_isSet = true;
}

bool OAIFullDetailsForecastResponse::is_time_series_Set() const{
    return m_time_series_isSet;
}

bool OAIFullDetailsForecastResponse::is_time_series_Valid() const{
    return m_time_series_isValid;
}

bool OAIFullDetailsForecastResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hyperparameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFullDetailsForecastResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
