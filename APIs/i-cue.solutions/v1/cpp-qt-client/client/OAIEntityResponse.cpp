/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntityResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntityResponse::OAIEntityResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntityResponse::OAIEntityResponse() {
    this->initializeModel();
}

OAIEntityResponse::~OAIEntityResponse() {}

void OAIEntityResponse::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_db_connection_isSet = false;
    m_db_connection_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;
}

void OAIEntityResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntityResponse::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_db_connection_isValid = ::OpenAPI::fromJsonValue(m_db_connection, json[QString("dbConnection")]);
    m_db_connection_isSet = !json[QString("dbConnection")].isNull() && m_db_connection_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("isActive")]);
    m_is_active_isSet = !json[QString("isActive")].isNull() && m_is_active_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;
}

QString OAIEntityResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntityResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_db_connection_isSet) {
        obj.insert(QString("dbConnection"), ::OpenAPI::toJsonValue(m_db_connection));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("isActive"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    return obj;
}

QString OAIEntityResponse::getAddress() const {
    return m_address;
}
void OAIEntityResponse::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIEntityResponse::is_address_Set() const{
    return m_address_isSet;
}

bool OAIEntityResponse::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIEntityResponse::getDbConnection() const {
    return m_db_connection;
}
void OAIEntityResponse::setDbConnection(const QString &db_connection) {
    m_db_connection = db_connection;
    m_db_connection_isSet = true;
}

bool OAIEntityResponse::is_db_connection_Set() const{
    return m_db_connection_isSet;
}

bool OAIEntityResponse::is_db_connection_Valid() const{
    return m_db_connection_isValid;
}

QString OAIEntityResponse::getEmail() const {
    return m_email;
}
void OAIEntityResponse::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIEntityResponse::is_email_Set() const{
    return m_email_isSet;
}

bool OAIEntityResponse::is_email_Valid() const{
    return m_email_isValid;
}

qint32 OAIEntityResponse::getId() const {
    return m_id;
}
void OAIEntityResponse::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIEntityResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIEntityResponse::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIEntityResponse::isIsActive() const {
    return m_is_active;
}
void OAIEntityResponse::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIEntityResponse::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIEntityResponse::is_is_active_Valid() const{
    return m_is_active_isValid;
}

QString OAIEntityResponse::getName() const {
    return m_name;
}
void OAIEntityResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEntityResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEntityResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIEntityResponse::getToken() const {
    return m_token;
}
void OAIEntityResponse::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIEntityResponse::is_token_Set() const{
    return m_token_isSet;
}

bool OAIEntityResponse::is_token_Valid() const{
    return m_token_isValid;
}

bool OAIEntityResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_db_connection_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntityResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
