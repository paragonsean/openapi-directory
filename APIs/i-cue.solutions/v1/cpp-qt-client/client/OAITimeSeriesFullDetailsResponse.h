/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeSeriesFullDetailsResponse.h
 *
 * 
 */

#ifndef OAITimeSeriesFullDetailsResponse_H
#define OAITimeSeriesFullDetailsResponse_H

#include <QJsonObject>

#include "OAIForecastOptimalParametersResponse.h"
#include "OAIOutlierResponse.h"
#include "OAIPlanningLevelForecastResultData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlanningLevelForecastResultData;
class OAIForecastOptimalParametersResponse;
class OAIOutlierResponse;

class OAITimeSeriesFullDetailsResponse : public OAIObject {
public:
    OAITimeSeriesFullDetailsResponse();
    OAITimeSeriesFullDetailsResponse(QString json);
    ~OAITimeSeriesFullDetailsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getError() const;
    void setError(const double &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QList<OAIPlanningLevelForecastResultData> getForecastData() const;
    void setForecastData(const QList<OAIPlanningLevelForecastResultData> &forecast_data);
    bool is_forecast_data_Set() const;
    bool is_forecast_data_Valid() const;

    QList<OAIPlanningLevelForecastResultData> getHistoryData() const;
    void setHistoryData(const QList<OAIPlanningLevelForecastResultData> &history_data);
    bool is_history_data_Set() const;
    bool is_history_data_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    OAIForecastOptimalParametersResponse getOptimalParameters() const;
    void setOptimalParameters(const OAIForecastOptimalParametersResponse &optimal_parameters);
    bool is_optimal_parameters_Set() const;
    bool is_optimal_parameters_Valid() const;

    QList<OAIOutlierResponse> getOutliers() const;
    void setOutliers(const QList<OAIOutlierResponse> &outliers);
    bool is_outliers_Set() const;
    bool is_outliers_Valid() const;

    QString getTimeSeriesId() const;
    void setTimeSeriesId(const QString &time_series_id);
    bool is_time_series_id_Set() const;
    bool is_time_series_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QList<OAIPlanningLevelForecastResultData> m_forecast_data;
    bool m_forecast_data_isSet;
    bool m_forecast_data_isValid;

    QList<OAIPlanningLevelForecastResultData> m_history_data;
    bool m_history_data_isSet;
    bool m_history_data_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    OAIForecastOptimalParametersResponse m_optimal_parameters;
    bool m_optimal_parameters_isSet;
    bool m_optimal_parameters_isValid;

    QList<OAIOutlierResponse> m_outliers;
    bool m_outliers_isSet;
    bool m_outliers_isValid;

    QString m_time_series_id;
    bool m_time_series_id_isSet;
    bool m_time_series_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeSeriesFullDetailsResponse)

#endif // OAITimeSeriesFullDetailsResponse_H
