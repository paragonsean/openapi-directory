/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeSeriesOptimalParametersResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeSeriesOptimalParametersResponse::OAITimeSeriesOptimalParametersResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeSeriesOptimalParametersResponse::OAITimeSeriesOptimalParametersResponse() {
    this->initializeModel();
}

OAITimeSeriesOptimalParametersResponse::~OAITimeSeriesOptimalParametersResponse() {}

void OAITimeSeriesOptimalParametersResponse::initializeModel() {

    m_method_isSet = false;
    m_method_isValid = false;

    m_optimal_parameters_isSet = false;
    m_optimal_parameters_isValid = false;

    m_time_series_id_isSet = false;
    m_time_series_id_isValid = false;
}

void OAITimeSeriesOptimalParametersResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeSeriesOptimalParametersResponse::fromJsonObject(QJsonObject json) {

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_optimal_parameters_isValid = ::OpenAPI::fromJsonValue(m_optimal_parameters, json[QString("optimalParameters")]);
    m_optimal_parameters_isSet = !json[QString("optimalParameters")].isNull() && m_optimal_parameters_isValid;

    m_time_series_id_isValid = ::OpenAPI::fromJsonValue(m_time_series_id, json[QString("timeSeriesId")]);
    m_time_series_id_isSet = !json[QString("timeSeriesId")].isNull() && m_time_series_id_isValid;
}

QString OAITimeSeriesOptimalParametersResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeSeriesOptimalParametersResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_optimal_parameters.isSet()) {
        obj.insert(QString("optimalParameters"), ::OpenAPI::toJsonValue(m_optimal_parameters));
    }
    if (m_time_series_id_isSet) {
        obj.insert(QString("timeSeriesId"), ::OpenAPI::toJsonValue(m_time_series_id));
    }
    return obj;
}

QString OAITimeSeriesOptimalParametersResponse::getMethod() const {
    return m_method;
}
void OAITimeSeriesOptimalParametersResponse::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAITimeSeriesOptimalParametersResponse::is_method_Set() const{
    return m_method_isSet;
}

bool OAITimeSeriesOptimalParametersResponse::is_method_Valid() const{
    return m_method_isValid;
}

OAIForecastOptimalParametersResponse OAITimeSeriesOptimalParametersResponse::getOptimalParameters() const {
    return m_optimal_parameters;
}
void OAITimeSeriesOptimalParametersResponse::setOptimalParameters(const OAIForecastOptimalParametersResponse &optimal_parameters) {
    m_optimal_parameters = optimal_parameters;
    m_optimal_parameters_isSet = true;
}

bool OAITimeSeriesOptimalParametersResponse::is_optimal_parameters_Set() const{
    return m_optimal_parameters_isSet;
}

bool OAITimeSeriesOptimalParametersResponse::is_optimal_parameters_Valid() const{
    return m_optimal_parameters_isValid;
}

QString OAITimeSeriesOptimalParametersResponse::getTimeSeriesId() const {
    return m_time_series_id;
}
void OAITimeSeriesOptimalParametersResponse::setTimeSeriesId(const QString &time_series_id) {
    m_time_series_id = time_series_id;
    m_time_series_id_isSet = true;
}

bool OAITimeSeriesOptimalParametersResponse::is_time_series_id_Set() const{
    return m_time_series_id_isSet;
}

bool OAITimeSeriesOptimalParametersResponse::is_time_series_id_Valid() const{
    return m_time_series_id_isValid;
}

bool OAITimeSeriesOptimalParametersResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_optimal_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeSeriesOptimalParametersResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
