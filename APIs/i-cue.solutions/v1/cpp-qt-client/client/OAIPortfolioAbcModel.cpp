/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPortfolioAbcModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPortfolioAbcModel::OAIPortfolioAbcModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPortfolioAbcModel::OAIPortfolioAbcModel() {
    this->initializeModel();
}

OAIPortfolioAbcModel::~OAIPortfolioAbcModel() {}

void OAIPortfolioAbcModel::initializeModel() {

    m_abc12_isSet = false;
    m_abc12_isValid = false;

    m_abc12_value_isSet = false;
    m_abc12_value_isValid = false;

    m_abc6_isSet = false;
    m_abc6_isValid = false;

    m_abc6_value_isSet = false;
    m_abc6_value_isValid = false;

    m_abc9_isSet = false;
    m_abc9_isValid = false;

    m_abc9_value_isSet = false;
    m_abc9_value_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_threshold_a_isSet = false;
    m_threshold_a_isValid = false;

    m_threshold_b_isSet = false;
    m_threshold_b_isValid = false;

    m_threshold_c_isSet = false;
    m_threshold_c_isValid = false;
}

void OAIPortfolioAbcModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPortfolioAbcModel::fromJsonObject(QJsonObject json) {

    m_abc12_isValid = ::OpenAPI::fromJsonValue(m_abc12, json[QString("abc12")]);
    m_abc12_isSet = !json[QString("abc12")].isNull() && m_abc12_isValid;

    m_abc12_value_isValid = ::OpenAPI::fromJsonValue(m_abc12_value, json[QString("abc12Value")]);
    m_abc12_value_isSet = !json[QString("abc12Value")].isNull() && m_abc12_value_isValid;

    m_abc6_isValid = ::OpenAPI::fromJsonValue(m_abc6, json[QString("abc6")]);
    m_abc6_isSet = !json[QString("abc6")].isNull() && m_abc6_isValid;

    m_abc6_value_isValid = ::OpenAPI::fromJsonValue(m_abc6_value, json[QString("abc6Value")]);
    m_abc6_value_isSet = !json[QString("abc6Value")].isNull() && m_abc6_value_isValid;

    m_abc9_isValid = ::OpenAPI::fromJsonValue(m_abc9, json[QString("abc9")]);
    m_abc9_isSet = !json[QString("abc9")].isNull() && m_abc9_isValid;

    m_abc9_value_isValid = ::OpenAPI::fromJsonValue(m_abc9_value, json[QString("abc9Value")]);
    m_abc9_value_isSet = !json[QString("abc9Value")].isNull() && m_abc9_value_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_threshold_a_isValid = ::OpenAPI::fromJsonValue(m_threshold_a, json[QString("thresholdA")]);
    m_threshold_a_isSet = !json[QString("thresholdA")].isNull() && m_threshold_a_isValid;

    m_threshold_b_isValid = ::OpenAPI::fromJsonValue(m_threshold_b, json[QString("thresholdB")]);
    m_threshold_b_isSet = !json[QString("thresholdB")].isNull() && m_threshold_b_isValid;

    m_threshold_c_isValid = ::OpenAPI::fromJsonValue(m_threshold_c, json[QString("thresholdC")]);
    m_threshold_c_isSet = !json[QString("thresholdC")].isNull() && m_threshold_c_isValid;
}

QString OAIPortfolioAbcModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPortfolioAbcModel::asJsonObject() const {
    QJsonObject obj;
    if (m_abc12_isSet) {
        obj.insert(QString("abc12"), ::OpenAPI::toJsonValue(m_abc12));
    }
    if (m_abc12_value_isSet) {
        obj.insert(QString("abc12Value"), ::OpenAPI::toJsonValue(m_abc12_value));
    }
    if (m_abc6_isSet) {
        obj.insert(QString("abc6"), ::OpenAPI::toJsonValue(m_abc6));
    }
    if (m_abc6_value_isSet) {
        obj.insert(QString("abc6Value"), ::OpenAPI::toJsonValue(m_abc6_value));
    }
    if (m_abc9_isSet) {
        obj.insert(QString("abc9"), ::OpenAPI::toJsonValue(m_abc9));
    }
    if (m_abc9_value_isSet) {
        obj.insert(QString("abc9Value"), ::OpenAPI::toJsonValue(m_abc9_value));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_threshold_a_isSet) {
        obj.insert(QString("thresholdA"), ::OpenAPI::toJsonValue(m_threshold_a));
    }
    if (m_threshold_b_isSet) {
        obj.insert(QString("thresholdB"), ::OpenAPI::toJsonValue(m_threshold_b));
    }
    if (m_threshold_c_isSet) {
        obj.insert(QString("thresholdC"), ::OpenAPI::toJsonValue(m_threshold_c));
    }
    return obj;
}

QString OAIPortfolioAbcModel::getAbc12() const {
    return m_abc12;
}
void OAIPortfolioAbcModel::setAbc12(const QString &abc12) {
    m_abc12 = abc12;
    m_abc12_isSet = true;
}

bool OAIPortfolioAbcModel::is_abc12_Set() const{
    return m_abc12_isSet;
}

bool OAIPortfolioAbcModel::is_abc12_Valid() const{
    return m_abc12_isValid;
}

double OAIPortfolioAbcModel::getAbc12Value() const {
    return m_abc12_value;
}
void OAIPortfolioAbcModel::setAbc12Value(const double &abc12_value) {
    m_abc12_value = abc12_value;
    m_abc12_value_isSet = true;
}

bool OAIPortfolioAbcModel::is_abc12_value_Set() const{
    return m_abc12_value_isSet;
}

bool OAIPortfolioAbcModel::is_abc12_value_Valid() const{
    return m_abc12_value_isValid;
}

QString OAIPortfolioAbcModel::getAbc6() const {
    return m_abc6;
}
void OAIPortfolioAbcModel::setAbc6(const QString &abc6) {
    m_abc6 = abc6;
    m_abc6_isSet = true;
}

bool OAIPortfolioAbcModel::is_abc6_Set() const{
    return m_abc6_isSet;
}

bool OAIPortfolioAbcModel::is_abc6_Valid() const{
    return m_abc6_isValid;
}

double OAIPortfolioAbcModel::getAbc6Value() const {
    return m_abc6_value;
}
void OAIPortfolioAbcModel::setAbc6Value(const double &abc6_value) {
    m_abc6_value = abc6_value;
    m_abc6_value_isSet = true;
}

bool OAIPortfolioAbcModel::is_abc6_value_Set() const{
    return m_abc6_value_isSet;
}

bool OAIPortfolioAbcModel::is_abc6_value_Valid() const{
    return m_abc6_value_isValid;
}

QString OAIPortfolioAbcModel::getAbc9() const {
    return m_abc9;
}
void OAIPortfolioAbcModel::setAbc9(const QString &abc9) {
    m_abc9 = abc9;
    m_abc9_isSet = true;
}

bool OAIPortfolioAbcModel::is_abc9_Set() const{
    return m_abc9_isSet;
}

bool OAIPortfolioAbcModel::is_abc9_Valid() const{
    return m_abc9_isValid;
}

double OAIPortfolioAbcModel::getAbc9Value() const {
    return m_abc9_value;
}
void OAIPortfolioAbcModel::setAbc9Value(const double &abc9_value) {
    m_abc9_value = abc9_value;
    m_abc9_value_isSet = true;
}

bool OAIPortfolioAbcModel::is_abc9_value_Set() const{
    return m_abc9_value_isSet;
}

bool OAIPortfolioAbcModel::is_abc9_value_Valid() const{
    return m_abc9_value_isValid;
}

QString OAIPortfolioAbcModel::getId() const {
    return m_id;
}
void OAIPortfolioAbcModel::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPortfolioAbcModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPortfolioAbcModel::is_id_Valid() const{
    return m_id_isValid;
}

double OAIPortfolioAbcModel::getThresholdA() const {
    return m_threshold_a;
}
void OAIPortfolioAbcModel::setThresholdA(const double &threshold_a) {
    m_threshold_a = threshold_a;
    m_threshold_a_isSet = true;
}

bool OAIPortfolioAbcModel::is_threshold_a_Set() const{
    return m_threshold_a_isSet;
}

bool OAIPortfolioAbcModel::is_threshold_a_Valid() const{
    return m_threshold_a_isValid;
}

double OAIPortfolioAbcModel::getThresholdB() const {
    return m_threshold_b;
}
void OAIPortfolioAbcModel::setThresholdB(const double &threshold_b) {
    m_threshold_b = threshold_b;
    m_threshold_b_isSet = true;
}

bool OAIPortfolioAbcModel::is_threshold_b_Set() const{
    return m_threshold_b_isSet;
}

bool OAIPortfolioAbcModel::is_threshold_b_Valid() const{
    return m_threshold_b_isValid;
}

double OAIPortfolioAbcModel::getThresholdC() const {
    return m_threshold_c;
}
void OAIPortfolioAbcModel::setThresholdC(const double &threshold_c) {
    m_threshold_c = threshold_c;
    m_threshold_c_isSet = true;
}

bool OAIPortfolioAbcModel::is_threshold_c_Set() const{
    return m_threshold_c_isSet;
}

bool OAIPortfolioAbcModel::is_threshold_c_Valid() const{
    return m_threshold_c_isValid;
}

bool OAIPortfolioAbcModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_abc12_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_abc12_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_abc6_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_abc6_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_abc9_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_abc9_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_threshold_a_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_threshold_b_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_threshold_c_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPortfolioAbcModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
