/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForecastBottomUpResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForecastBottomUpResponse::OAIForecastBottomUpResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForecastBottomUpResponse::OAIForecastBottomUpResponse() {
    this->initializeModel();
}

OAIForecastBottomUpResponse::~OAIForecastBottomUpResponse() {}

void OAIForecastBottomUpResponse::initializeModel() {

    m_forecast_data_isSet = false;
    m_forecast_data_isValid = false;

    m_hyperparameters_isSet = false;
    m_hyperparameters_isValid = false;
}

void OAIForecastBottomUpResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForecastBottomUpResponse::fromJsonObject(QJsonObject json) {

    m_forecast_data_isValid = ::OpenAPI::fromJsonValue(m_forecast_data, json[QString("forecastData")]);
    m_forecast_data_isSet = !json[QString("forecastData")].isNull() && m_forecast_data_isValid;

    m_hyperparameters_isValid = ::OpenAPI::fromJsonValue(m_hyperparameters, json[QString("hyperparameters")]);
    m_hyperparameters_isSet = !json[QString("hyperparameters")].isNull() && m_hyperparameters_isValid;
}

QString OAIForecastBottomUpResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForecastBottomUpResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_forecast_data.size() > 0) {
        obj.insert(QString("forecastData"), ::OpenAPI::toJsonValue(m_forecast_data));
    }
    if (m_hyperparameters.isSet()) {
        obj.insert(QString("hyperparameters"), ::OpenAPI::toJsonValue(m_hyperparameters));
    }
    return obj;
}

QList<OAIPlanningLevelForecastResultData> OAIForecastBottomUpResponse::getForecastData() const {
    return m_forecast_data;
}
void OAIForecastBottomUpResponse::setForecastData(const QList<OAIPlanningLevelForecastResultData> &forecast_data) {
    m_forecast_data = forecast_data;
    m_forecast_data_isSet = true;
}

bool OAIForecastBottomUpResponse::is_forecast_data_Set() const{
    return m_forecast_data_isSet;
}

bool OAIForecastBottomUpResponse::is_forecast_data_Valid() const{
    return m_forecast_data_isValid;
}

OAIForecastHyperparameterResponse OAIForecastBottomUpResponse::getHyperparameters() const {
    return m_hyperparameters;
}
void OAIForecastBottomUpResponse::setHyperparameters(const OAIForecastHyperparameterResponse &hyperparameters) {
    m_hyperparameters = hyperparameters;
    m_hyperparameters_isSet = true;
}

bool OAIForecastBottomUpResponse::is_hyperparameters_Set() const{
    return m_hyperparameters_isSet;
}

bool OAIForecastBottomUpResponse::is_hyperparameters_Valid() const{
    return m_hyperparameters_isValid;
}

bool OAIForecastBottomUpResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_forecast_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_hyperparameters.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForecastBottomUpResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
