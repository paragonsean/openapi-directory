/*
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PortfolioXyzModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:29:22.874424-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PortfolioXyzModel {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_THRESHOLD_X = "thresholdX";
  @SerializedName(SERIALIZED_NAME_THRESHOLD_X)
  private Double thresholdX;

  public static final String SERIALIZED_NAME_THRESHOLD_Y = "thresholdY";
  @SerializedName(SERIALIZED_NAME_THRESHOLD_Y)
  private Double thresholdY;

  public static final String SERIALIZED_NAME_THRESHOLD_Z = "thresholdZ";
  @SerializedName(SERIALIZED_NAME_THRESHOLD_Z)
  private Double thresholdZ;

  public static final String SERIALIZED_NAME_XYZ12 = "xyz12";
  @SerializedName(SERIALIZED_NAME_XYZ12)
  private String xyz12;

  public static final String SERIALIZED_NAME_XYZ12_VALUE = "xyz12Value";
  @SerializedName(SERIALIZED_NAME_XYZ12_VALUE)
  private Double xyz12Value;

  public static final String SERIALIZED_NAME_XYZ6 = "xyz6";
  @SerializedName(SERIALIZED_NAME_XYZ6)
  private String xyz6;

  public static final String SERIALIZED_NAME_XYZ6_VALUE = "xyz6Value";
  @SerializedName(SERIALIZED_NAME_XYZ6_VALUE)
  private Double xyz6Value;

  public static final String SERIALIZED_NAME_XYZ9 = "xyz9";
  @SerializedName(SERIALIZED_NAME_XYZ9)
  private String xyz9;

  public static final String SERIALIZED_NAME_XYZ9_VALUE = "xyz9Value";
  @SerializedName(SERIALIZED_NAME_XYZ9_VALUE)
  private Double xyz9Value;

  public PortfolioXyzModel() {
  }

  public PortfolioXyzModel id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public PortfolioXyzModel thresholdX(Double thresholdX) {
    this.thresholdX = thresholdX;
    return this;
  }

  /**
   * Get thresholdX
   * @return thresholdX
   */
  @javax.annotation.Nullable
  public Double getThresholdX() {
    return thresholdX;
  }

  public void setThresholdX(Double thresholdX) {
    this.thresholdX = thresholdX;
  }


  public PortfolioXyzModel thresholdY(Double thresholdY) {
    this.thresholdY = thresholdY;
    return this;
  }

  /**
   * Get thresholdY
   * @return thresholdY
   */
  @javax.annotation.Nullable
  public Double getThresholdY() {
    return thresholdY;
  }

  public void setThresholdY(Double thresholdY) {
    this.thresholdY = thresholdY;
  }


  public PortfolioXyzModel thresholdZ(Double thresholdZ) {
    this.thresholdZ = thresholdZ;
    return this;
  }

  /**
   * Get thresholdZ
   * @return thresholdZ
   */
  @javax.annotation.Nullable
  public Double getThresholdZ() {
    return thresholdZ;
  }

  public void setThresholdZ(Double thresholdZ) {
    this.thresholdZ = thresholdZ;
  }


  public PortfolioXyzModel xyz12(String xyz12) {
    this.xyz12 = xyz12;
    return this;
  }

  /**
   * Get xyz12
   * @return xyz12
   */
  @javax.annotation.Nullable
  public String getXyz12() {
    return xyz12;
  }

  public void setXyz12(String xyz12) {
    this.xyz12 = xyz12;
  }


  public PortfolioXyzModel xyz12Value(Double xyz12Value) {
    this.xyz12Value = xyz12Value;
    return this;
  }

  /**
   * Get xyz12Value
   * @return xyz12Value
   */
  @javax.annotation.Nullable
  public Double getXyz12Value() {
    return xyz12Value;
  }

  public void setXyz12Value(Double xyz12Value) {
    this.xyz12Value = xyz12Value;
  }


  public PortfolioXyzModel xyz6(String xyz6) {
    this.xyz6 = xyz6;
    return this;
  }

  /**
   * Get xyz6
   * @return xyz6
   */
  @javax.annotation.Nullable
  public String getXyz6() {
    return xyz6;
  }

  public void setXyz6(String xyz6) {
    this.xyz6 = xyz6;
  }


  public PortfolioXyzModel xyz6Value(Double xyz6Value) {
    this.xyz6Value = xyz6Value;
    return this;
  }

  /**
   * Get xyz6Value
   * @return xyz6Value
   */
  @javax.annotation.Nullable
  public Double getXyz6Value() {
    return xyz6Value;
  }

  public void setXyz6Value(Double xyz6Value) {
    this.xyz6Value = xyz6Value;
  }


  public PortfolioXyzModel xyz9(String xyz9) {
    this.xyz9 = xyz9;
    return this;
  }

  /**
   * Get xyz9
   * @return xyz9
   */
  @javax.annotation.Nullable
  public String getXyz9() {
    return xyz9;
  }

  public void setXyz9(String xyz9) {
    this.xyz9 = xyz9;
  }


  public PortfolioXyzModel xyz9Value(Double xyz9Value) {
    this.xyz9Value = xyz9Value;
    return this;
  }

  /**
   * Get xyz9Value
   * @return xyz9Value
   */
  @javax.annotation.Nullable
  public Double getXyz9Value() {
    return xyz9Value;
  }

  public void setXyz9Value(Double xyz9Value) {
    this.xyz9Value = xyz9Value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortfolioXyzModel portfolioXyzModel = (PortfolioXyzModel) o;
    return Objects.equals(this.id, portfolioXyzModel.id) &&
        Objects.equals(this.thresholdX, portfolioXyzModel.thresholdX) &&
        Objects.equals(this.thresholdY, portfolioXyzModel.thresholdY) &&
        Objects.equals(this.thresholdZ, portfolioXyzModel.thresholdZ) &&
        Objects.equals(this.xyz12, portfolioXyzModel.xyz12) &&
        Objects.equals(this.xyz12Value, portfolioXyzModel.xyz12Value) &&
        Objects.equals(this.xyz6, portfolioXyzModel.xyz6) &&
        Objects.equals(this.xyz6Value, portfolioXyzModel.xyz6Value) &&
        Objects.equals(this.xyz9, portfolioXyzModel.xyz9) &&
        Objects.equals(this.xyz9Value, portfolioXyzModel.xyz9Value);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, thresholdX, thresholdY, thresholdZ, xyz12, xyz12Value, xyz6, xyz6Value, xyz9, xyz9Value);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortfolioXyzModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    thresholdX: ").append(toIndentedString(thresholdX)).append("\n");
    sb.append("    thresholdY: ").append(toIndentedString(thresholdY)).append("\n");
    sb.append("    thresholdZ: ").append(toIndentedString(thresholdZ)).append("\n");
    sb.append("    xyz12: ").append(toIndentedString(xyz12)).append("\n");
    sb.append("    xyz12Value: ").append(toIndentedString(xyz12Value)).append("\n");
    sb.append("    xyz6: ").append(toIndentedString(xyz6)).append("\n");
    sb.append("    xyz6Value: ").append(toIndentedString(xyz6Value)).append("\n");
    sb.append("    xyz9: ").append(toIndentedString(xyz9)).append("\n");
    sb.append("    xyz9Value: ").append(toIndentedString(xyz9Value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("thresholdX");
    openapiFields.add("thresholdY");
    openapiFields.add("thresholdZ");
    openapiFields.add("xyz12");
    openapiFields.add("xyz12Value");
    openapiFields.add("xyz6");
    openapiFields.add("xyz6Value");
    openapiFields.add("xyz9");
    openapiFields.add("xyz9Value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PortfolioXyzModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PortfolioXyzModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PortfolioXyzModel is not found in the empty JSON string", PortfolioXyzModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PortfolioXyzModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PortfolioXyzModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("xyz12") != null && !jsonObj.get("xyz12").isJsonNull()) && !jsonObj.get("xyz12").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xyz12` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xyz12").toString()));
      }
      if ((jsonObj.get("xyz6") != null && !jsonObj.get("xyz6").isJsonNull()) && !jsonObj.get("xyz6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xyz6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xyz6").toString()));
      }
      if ((jsonObj.get("xyz9") != null && !jsonObj.get("xyz9").isJsonNull()) && !jsonObj.get("xyz9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xyz9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xyz9").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PortfolioXyzModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PortfolioXyzModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PortfolioXyzModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PortfolioXyzModel.class));

       return (TypeAdapter<T>) new TypeAdapter<PortfolioXyzModel>() {
           @Override
           public void write(JsonWriter out, PortfolioXyzModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PortfolioXyzModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PortfolioXyzModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PortfolioXyzModel
   * @throws IOException if the JSON string is invalid with respect to PortfolioXyzModel
   */
  public static PortfolioXyzModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PortfolioXyzModel.class);
  }

  /**
   * Convert an instance of PortfolioXyzModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

