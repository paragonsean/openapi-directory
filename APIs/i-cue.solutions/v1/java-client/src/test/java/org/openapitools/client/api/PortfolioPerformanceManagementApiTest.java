/*
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.ForecastPerformanceRequest;
import org.openapitools.client.model.PortfolioAbcModel;
import org.openapitools.client.model.PortfolioModel;
import org.openapitools.client.model.PortfolioRequest;
import org.openapitools.client.model.PortfolioXyzModel;
import org.openapitools.client.model.RewindResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PortfolioPerformanceManagementApi
 */
@Disabled
public class PortfolioPerformanceManagementApiTest {

    private final PortfolioPerformanceManagementApi api = new PortfolioPerformanceManagementApi();

    /**
     * ABC Analysis
     *
     * Calculate and retrieve results of ABC (pareto analysis) per timeseries and planning level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void portfolioAbcPostTest() throws ApiException {
        String token = null;
        PortfolioRequest portfolioRequest = null;
        List<PortfolioAbcModel> response = api.portfolioAbcPost(token, portfolioRequest);
        // TODO: test validations
    }

    /**
     * ABCxyz Analysis
     *
     * Calculate and retrieve results of ABC (pareto analysis) and xyz (Coefficient of variation) per timeseries and planning level. This analysis is a powerful means to estbalish a proper planning cadence, best accuracy messures and optimal hyperparameters for the organization. It provides a balanced and actionable overview of the entire product portfolio.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void portfolioFileToPortfolioPostTest() throws ApiException {
        File _file = null;
        String token = null;
        api.portfolioFileToPortfolioPost(_file, token);
        // TODO: test validations
    }

    /**
     * Planning level rewind to calculate and measure performance potential (internal versus iCUE).
     *
     * Planning level rewind to calculate and measure performance potential (internal versus iCUE).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void portfolioForecastPerformanceRewindPostTest() throws ApiException {
        String token = null;
        ForecastPerformanceRequest forecastPerformanceRequest = null;
        RewindResponse response = api.portfolioForecastPerformanceRewindPost(token, forecastPerformanceRequest);
        // TODO: test validations
    }

    /**
     * ABCxyz Analysis
     *
     * Calculate and retrieve results of ABC (pareto analysis) and xyz (Coefficient of variation) per timeseries and planning level. This analysis is a powerful means to estbalish a proper planning cadence, best accuracy messures and optimal hyperparameters for the organization. It provides a balanced and actionable overview of the entire product portfolio.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void portfolioPostTest() throws ApiException {
        String token = null;
        PortfolioRequest portfolioRequest = null;
        List<PortfolioModel> response = api.portfolioPost(token, portfolioRequest);
        // TODO: test validations
    }

    /**
     * xyz Analysis
     *
     * Calculate and retrieve results of xyz (Coefficient of variation) per timeseries and planning level.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void portfolioXyzPostTest() throws ApiException {
        String token = null;
        PortfolioRequest portfolioRequest = null;
        List<PortfolioXyzModel> response = api.portfolioXyzPost(token, portfolioRequest);
        // TODO: test validations
    }

}
