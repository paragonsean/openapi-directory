/*
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LifecycleManyToOneRequest;
import org.openapitools.client.model.LifecycleOneToOneRequest;
import org.openapitools.client.model.PlanningLevelDataDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductLifecycleManagementApi
 */
@Disabled
public class ProductLifecycleManagementApiTest {

    private final ProductLifecycleManagementApi api = new ProductLifecycleManagementApi();

    /**
     * Map from old product to new product to create artifical history
     *
     * Supports the creation of artificial startup history for new products, based on a flexible mapping of old to new. This is an Enterprise feature.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lifecycleManyToOnePostTest() throws ApiException {
        String token = null;
        LifecycleManyToOneRequest lifecycleManyToOneRequest = null;
        PlanningLevelDataDto response = api.lifecycleManyToOnePost(token, lifecycleManyToOneRequest);
        // TODO: test validations
    }

    /**
     * Map from old product to new product to create artifical history
     *
     * Supports the creation of artificial startup history for new products, based on a flexible mapping of old to new. This is an Enterprise feature.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void lifecycleOneToOnePostTest() throws ApiException {
        String token = null;
        LifecycleOneToOneRequest lifecycleOneToOneRequest = null;
        PlanningLevelDataDto response = api.lifecycleOneToOnePost(token, lifecycleOneToOneRequest);
        // TODO: test validations
    }

}
