/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GrowthServices);
  }
}(this, function(expect, GrowthServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GrowthServices.PortfolioModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PortfolioModel', function() {
    it('should create an instance of PortfolioModel', function() {
      // uncomment below and update the code to test PortfolioModel
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be.a(GrowthServices.PortfolioModel);
    });

    it('should have the property abc12 (base name: "abc12")', function() {
      // uncomment below and update the code to test the property abc12
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property abc12Value (base name: "abc12Value")', function() {
      // uncomment below and update the code to test the property abc12Value
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property abc6 (base name: "abc6")', function() {
      // uncomment below and update the code to test the property abc6
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property abc6Value (base name: "abc6Value")', function() {
      // uncomment below and update the code to test the property abc6Value
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property abc9 (base name: "abc9")', function() {
      // uncomment below and update the code to test the property abc9
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property abc9Value (base name: "abc9Value")', function() {
      // uncomment below and update the code to test the property abc9Value
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property thresholdA (base name: "thresholdA")', function() {
      // uncomment below and update the code to test the property thresholdA
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property thresholdB (base name: "thresholdB")', function() {
      // uncomment below and update the code to test the property thresholdB
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property thresholdC (base name: "thresholdC")', function() {
      // uncomment below and update the code to test the property thresholdC
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property thresholdX (base name: "thresholdX")', function() {
      // uncomment below and update the code to test the property thresholdX
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property thresholdY (base name: "thresholdY")', function() {
      // uncomment below and update the code to test the property thresholdY
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property thresholdZ (base name: "thresholdZ")', function() {
      // uncomment below and update the code to test the property thresholdZ
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property xyz12 (base name: "xyz12")', function() {
      // uncomment below and update the code to test the property xyz12
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property xyz12Value (base name: "xyz12Value")', function() {
      // uncomment below and update the code to test the property xyz12Value
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property xyz6 (base name: "xyz6")', function() {
      // uncomment below and update the code to test the property xyz6
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property xyz6Value (base name: "xyz6Value")', function() {
      // uncomment below and update the code to test the property xyz6Value
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property xyz9 (base name: "xyz9")', function() {
      // uncomment below and update the code to test the property xyz9
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

    it('should have the property xyz9Value (base name: "xyz9Value")', function() {
      // uncomment below and update the code to test the property xyz9Value
      //var instance = new GrowthServices.PortfolioModel();
      //expect(instance).to.be();
    });

  });

}));
