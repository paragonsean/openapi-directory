/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Pricing service.
* @module api/PricingApi
* @version v1
*/
export default class PricingApi {

    /**
    * Constructs a new PricingApi. 
    * @alias module:api/PricingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the pricingBundlePricingPost operation.
     * @callback module:api/PricingApi~pricingBundlePricingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bundle pricing
     * Bundle pricing
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/PricingApi~pricingBundlePricingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pricingBundlePricingPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pricing/bundle-pricing', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingCompetitivePricingPost operation.
     * @callback module:api/PricingApi~pricingCompetitivePricingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/PricingApi~pricingCompetitivePricingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pricingCompetitivePricingPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pricing/competitive-pricing', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingCostPlusPricingPost operation.
     * @callback module:api/PricingApi~pricingCostPlusPricingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/PricingApi~pricingCostPlusPricingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pricingCostPlusPricingPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pricing/cost-plus-pricing', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingDecoyPricingPost operation.
     * @callback module:api/PricingApi~pricingDecoyPricingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/PricingApi~pricingDecoyPricingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pricingDecoyPricingPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pricing/decoy-pricing', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingOddPricingPost operation.
     * @callback module:api/PricingApi~pricingOddPricingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/PricingApi~pricingOddPricingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pricingOddPricingPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pricing/odd-pricing', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingPenetrationPricingPost operation.
     * @callback module:api/PricingApi~pricingPenetrationPricingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/PricingApi~pricingPenetrationPricingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pricingPenetrationPricingPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pricing/penetration-pricing', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pricingPriceElasticityOfDemandPost operation.
     * @callback module:api/PricingApi~pricingPriceElasticityOfDemandPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/PricingApi~pricingPriceElasticityOfDemandPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pricingPriceElasticityOfDemandPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pricing/price-elasticity-of-demand', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
