/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HyperparameterModel from '../model/HyperparameterModel';

/**
* HyperparameterManagement service.
* @module api/HyperparameterManagementApi
* @version v1
*/
export default class HyperparameterManagementApi {

    /**
    * Constructs a new HyperparameterManagementApi. 
    * @alias module:api/HyperparameterManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the hyperparameterGet operation.
     * @callback module:api/HyperparameterManagementApi~hyperparameterGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HyperparameterModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get hyperparameters
     * Get entity global hyperparameters.
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/HyperparameterManagementApi~hyperparameterGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HyperparameterModel}
     */
    hyperparameterGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = HyperparameterModel;
      return this.apiClient.callApi(
        '/hyperparameter', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the hyperparameterPost operation.
     * @callback module:api/HyperparameterManagementApi~hyperparameterPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set hyperparameters
     * Set entity global hyperparameters. Hyperparameters can be overwritten by user and planning level (add to JSON body).
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:model/HyperparameterModel} [hyperparameterModel] 
     * @param {module:api/HyperparameterManagementApi~hyperparameterPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    hyperparameterPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['hyperparameterModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/*+json', 'application/json', 'text/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/hyperparameter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
