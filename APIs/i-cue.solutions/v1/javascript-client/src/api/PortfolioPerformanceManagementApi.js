/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ForecastPerformanceRequest from '../model/ForecastPerformanceRequest';
import PortfolioAbcModel from '../model/PortfolioAbcModel';
import PortfolioModel from '../model/PortfolioModel';
import PortfolioRequest from '../model/PortfolioRequest';
import PortfolioXyzModel from '../model/PortfolioXyzModel';
import RewindResponse from '../model/RewindResponse';

/**
* PortfolioPerformanceManagement service.
* @module api/PortfolioPerformanceManagementApi
* @version v1
*/
export default class PortfolioPerformanceManagementApi {

    /**
    * Constructs a new PortfolioPerformanceManagementApi. 
    * @alias module:api/PortfolioPerformanceManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the portfolioAbcPost operation.
     * @callback module:api/PortfolioPerformanceManagementApi~portfolioAbcPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PortfolioAbcModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ABC Analysis
     * Calculate and retrieve results of ABC (pareto analysis) per timeseries and planning level.
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:model/PortfolioRequest} [portfolioRequest] 
     * @param {module:api/PortfolioPerformanceManagementApi~portfolioAbcPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PortfolioAbcModel>}
     */
    portfolioAbcPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['portfolioRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/*+json', 'application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [PortfolioAbcModel];
      return this.apiClient.callApi(
        '/portfolio/abc', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the portfolioFileToPortfolioPost operation.
     * @callback module:api/PortfolioPerformanceManagementApi~portfolioFileToPortfolioPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ABCxyz Analysis
     * Calculate and retrieve results of ABC (pareto analysis) and xyz (Coefficient of variation) per timeseries and planning level. This analysis is a powerful means to estbalish a proper planning cadence, best accuracy messures and optimal hyperparameters for the organization. It provides a balanced and actionable overview of the entire product portfolio.
     * @param {File} file 
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:api/PortfolioPerformanceManagementApi~portfolioFileToPortfolioPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    portfolioFileToPortfolioPost(file, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling portfolioFileToPortfolioPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
        'File': file
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/portfolio/file-to-portfolio', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the portfolioForecastPerformanceRewindPost operation.
     * @callback module:api/PortfolioPerformanceManagementApi~portfolioForecastPerformanceRewindPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RewindResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Planning level rewind to calculate and measure performance potential (internal versus iCUE).
     * Planning level rewind to calculate and measure performance potential (internal versus iCUE).
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:model/ForecastPerformanceRequest} [forecastPerformanceRequest] 
     * @param {module:api/PortfolioPerformanceManagementApi~portfolioForecastPerformanceRewindPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RewindResponse}
     */
    portfolioForecastPerformanceRewindPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['forecastPerformanceRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/*+json', 'application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = RewindResponse;
      return this.apiClient.callApi(
        '/portfolio/forecast-performance-rewind', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the portfolioPost operation.
     * @callback module:api/PortfolioPerformanceManagementApi~portfolioPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PortfolioModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ABCxyz Analysis
     * Calculate and retrieve results of ABC (pareto analysis) and xyz (Coefficient of variation) per timeseries and planning level. This analysis is a powerful means to estbalish a proper planning cadence, best accuracy messures and optimal hyperparameters for the organization. It provides a balanced and actionable overview of the entire product portfolio.
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:model/PortfolioRequest} [portfolioRequest] 
     * @param {module:api/PortfolioPerformanceManagementApi~portfolioPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PortfolioModel>}
     */
    portfolioPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['portfolioRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/*+json', 'application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [PortfolioModel];
      return this.apiClient.callApi(
        '/portfolio', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the portfolioXyzPost operation.
     * @callback module:api/PortfolioPerformanceManagementApi~portfolioXyzPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PortfolioXyzModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * xyz Analysis
     * Calculate and retrieve results of xyz (Coefficient of variation) per timeseries and planning level.
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:model/PortfolioRequest} [portfolioRequest] 
     * @param {module:api/PortfolioPerformanceManagementApi~portfolioXyzPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PortfolioXyzModel>}
     */
    portfolioXyzPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['portfolioRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/*+json', 'application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [PortfolioXyzModel];
      return this.apiClient.callApi(
        '/portfolio/xyz', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
