/**
 * Growth Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LifecycleManyToOneRequest from '../model/LifecycleManyToOneRequest';
import LifecycleOneToOneRequest from '../model/LifecycleOneToOneRequest';
import PlanningLevelDataDto from '../model/PlanningLevelDataDto';

/**
* ProductLifecycleManagement service.
* @module api/ProductLifecycleManagementApi
* @version v1
*/
export default class ProductLifecycleManagementApi {

    /**
    * Constructs a new ProductLifecycleManagementApi. 
    * @alias module:api/ProductLifecycleManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the lifecycleManyToOnePost operation.
     * @callback module:api/ProductLifecycleManagementApi~lifecycleManyToOnePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlanningLevelDataDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Map from old product to new product to create artifical history
     * Supports the creation of artificial startup history for new products, based on a flexible mapping of old to new. This is an Enterprise feature.
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:model/LifecycleManyToOneRequest} [lifecycleManyToOneRequest] 
     * @param {module:api/ProductLifecycleManagementApi~lifecycleManyToOnePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlanningLevelDataDto}
     */
    lifecycleManyToOnePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['lifecycleManyToOneRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/*+json', 'application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = PlanningLevelDataDto;
      return this.apiClient.callApi(
        '/lifecycle/many-to-one', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the lifecycleOneToOnePost operation.
     * @callback module:api/ProductLifecycleManagementApi~lifecycleOneToOnePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlanningLevelDataDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Map from old product to new product to create artifical history
     * Supports the creation of artificial startup history for new products, based on a flexible mapping of old to new. This is an Enterprise feature.
     * @param {Object} opts Optional parameters
     * @param {String} [token] User Authentication Token
     * @param {module:model/LifecycleOneToOneRequest} [lifecycleOneToOneRequest] 
     * @param {module:api/ProductLifecycleManagementApi~lifecycleOneToOnePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlanningLevelDataDto}
     */
    lifecycleOneToOnePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['lifecycleOneToOneRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Token': opts['token']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/*+json', 'application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = PlanningLevelDataDto;
      return this.apiClient.callApi(
        '/lifecycle/one-to-one', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
