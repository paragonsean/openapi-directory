/**
 * Learnifier
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateOrganizationUnit model module.
 * @module model/UpdateOrganizationUnit
 * @version 1.1.0
 */
class UpdateOrganizationUnit {
    /**
     * Constructs a new <code>UpdateOrganizationUnit</code>.
     * @alias module:model/UpdateOrganizationUnit
     */
    constructor() { 
        
        UpdateOrganizationUnit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateOrganizationUnit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateOrganizationUnit} obj Optional instance to populate.
     * @return {module:model/UpdateOrganizationUnit} The populated <code>UpdateOrganizationUnit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateOrganizationUnit();

            if (data.hasOwnProperty('caller')) {
                obj['caller'] = ApiClient.convertToType(data['caller'], 'String');
            }
            if (data.hasOwnProperty('clientNumber')) {
                obj['clientNumber'] = ApiClient.convertToType(data['clientNumber'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateOrganizationUnit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateOrganizationUnit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['caller'] && !(typeof data['caller'] === 'string' || data['caller'] instanceof String)) {
            throw new Error("Expected the field `caller` to be a primitive type in the JSON string but got " + data['caller']);
        }
        // ensure the json data is a string
        if (data['clientNumber'] && !(typeof data['clientNumber'] === 'string' || data['clientNumber'] instanceof String)) {
            throw new Error("Expected the field `clientNumber` to be a primitive type in the JSON string but got " + data['clientNumber']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['externalId'] && !(typeof data['externalId'] === 'string' || data['externalId'] instanceof String)) {
            throw new Error("Expected the field `externalId` to be a primitive type in the JSON string but got " + data['externalId']);
        }

        return true;
    }


}



/**
 * The id of the user that initiated this operation
 * @member {String} caller
 */
UpdateOrganizationUnit.prototype['caller'] = undefined;

/**
 * A client number. Sometimes used when communicating with external system. Must be unique if specified.
 * @member {String} clientNumber
 */
UpdateOrganizationUnit.prototype['clientNumber'] = undefined;

/**
 * The country code that best matches the organization unit. If unspecified the platform default will be set.
 * @member {String} country
 */
UpdateOrganizationUnit.prototype['country'] = undefined;

/**
 * The name shown for the organization unit
 * @member {String} displayName
 */
UpdateOrganizationUnit.prototype['displayName'] = undefined;

/**
 * The external id (foreign key). Must not exceed 255 characters.
 * @member {String} externalId
 */
UpdateOrganizationUnit.prototype['externalId'] = undefined;

/**
 * A Organization Unit id of the parent Organization Unit (optional).
 * @member {Number} parent
 */
UpdateOrganizationUnit.prototype['parent'] = undefined;






export default UpdateOrganizationUnit;

