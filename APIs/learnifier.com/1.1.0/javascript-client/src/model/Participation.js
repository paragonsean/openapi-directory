/**
 * Learnifier
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Participation model module.
 * @module model/Participation
 * @version 1.1.0
 */
class Participation {
    /**
     * Constructs a new <code>Participation</code>.
     * @alias module:model/Participation
     */
    constructor() { 
        
        Participation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Participation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Participation} obj Optional instance to populate.
     * @return {module:model/Participation} The populated <code>Participation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Participation();

            if (data.hasOwnProperty('accessLink')) {
                obj['accessLink'] = ApiClient.convertToType(data['accessLink'], 'String');
            }
            if (data.hasOwnProperty('activated')) {
                obj['activated'] = ApiClient.convertToType(data['activated'], 'Boolean');
            }
            if (data.hasOwnProperty('activitiesCompleted')) {
                obj['activitiesCompleted'] = ApiClient.convertToType(data['activitiesCompleted'], 'Number');
            }
            if (data.hasOwnProperty('activitiesTotal')) {
                obj['activitiesTotal'] = ApiClient.convertToType(data['activitiesTotal'], 'Number');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ApiClient.convertToType(data['expiration'], 'Date');
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('firstAccess')) {
                obj['firstAccess'] = ApiClient.convertToType(data['firstAccess'], 'Date');
            }
            if (data.hasOwnProperty('firstActivation')) {
                obj['firstActivation'] = ApiClient.convertToType(data['firstActivation'], 'Date');
            }
            if (data.hasOwnProperty('firstMail')) {
                obj['firstMail'] = ApiClient.convertToType(data['firstMail'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('inError')) {
                obj['inError'] = ApiClient.convertToType(data['inError'], 'Boolean');
            }
            if (data.hasOwnProperty('lastAccess')) {
                obj['lastAccess'] = ApiClient.convertToType(data['lastAccess'], 'Date');
            }
            if (data.hasOwnProperty('lastActivation')) {
                obj['lastActivation'] = ApiClient.convertToType(data['lastActivation'], 'Date');
            }
            if (data.hasOwnProperty('lastMail')) {
                obj['lastMail'] = ApiClient.convertToType(data['lastMail'], 'Date');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'Number');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Participation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Participation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessLink'] && !(typeof data['accessLink'] === 'string' || data['accessLink'] instanceof String)) {
            throw new Error("Expected the field `accessLink` to be a primitive type in the JSON string but got " + data['accessLink']);
        }
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }
        // ensure the json data is a string
        if (data['externalId'] && !(typeof data['externalId'] === 'string' || data['externalId'] instanceof String)) {
            throw new Error("Expected the field `externalId` to be a primitive type in the JSON string but got " + data['externalId']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * A link to access this particular participation. The link requires the user to login. Users that access the platform the first time must set a password. This value is null if this participation is not activated. 
 * @member {String} accessLink
 */
Participation.prototype['accessLink'] = undefined;

/**
 * True if this participation has been activated and can be used
 * @member {Boolean} activated
 */
Participation.prototype['activated'] = undefined;

/**
 * The number of activities completed
 * @member {Number} activitiesCompleted
 */
Participation.prototype['activitiesCompleted'] = undefined;

/**
 * The total number of activities
 * @member {Number} activitiesTotal
 */
Participation.prototype['activitiesTotal'] = undefined;

/**
 * An optional error message that may describe why the participation is in error state.
 * @member {String} errorMessage
 */
Participation.prototype['errorMessage'] = undefined;

/**
 * The timestamp when this participation will expire. Expiration never happens if this value is *null*.
 * @member {Date} expiration
 */
Participation.prototype['expiration'] = undefined;

/**
 * The external id (foreign key). Must not exceed 255 characters.
 * @member {String} externalId
 */
Participation.prototype['externalId'] = undefined;

/**
 * The timestamp when the participant accessed the project for the first time. This value can be null
 * @member {Date} firstAccess
 */
Participation.prototype['firstAccess'] = undefined;

/**
 * The timestamp when this participation was first activated. This value can be null
 * @member {Date} firstActivation
 */
Participation.prototype['firstActivation'] = undefined;

/**
 * The timestamp when the first mail was sent to this participant. This value can be null
 * @member {Date} firstMail
 */
Participation.prototype['firstMail'] = undefined;

/**
 * Unique identifier representing this participation. Id numbers are never reused
 * @member {Number} id
 */
Participation.prototype['id'] = undefined;

/**
 * True if this participation is in an error state. The user is not able to access participations that are in error state.
 * @member {Boolean} inError
 */
Participation.prototype['inError'] = undefined;

/**
 * The timestamp when the participant accessed the project the last time. This value can be null
 * @member {Date} lastAccess
 */
Participation.prototype['lastAccess'] = undefined;

/**
 * The timestamp when this participation was last activated. This value can be null
 * @member {Date} lastActivation
 */
Participation.prototype['lastActivation'] = undefined;

/**
 * The timestamp when the last mail was sent to this participant. This value can be null
 * @member {Date} lastMail
 */
Participation.prototype['lastMail'] = undefined;

/**
 * The id of the project this participation belongs to
 * @member {Number} projectId
 */
Participation.prototype['projectId'] = undefined;

/**
 * The id of the user this participation belongs to
 * @member {String} userId
 */
Participation.prototype['userId'] = undefined;






export default Participation;

