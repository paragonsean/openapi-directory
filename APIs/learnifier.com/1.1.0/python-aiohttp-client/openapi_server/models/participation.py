# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Participation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_link: str=None, activated: bool=None, activities_completed: float=None, activities_total: float=None, error_message: str=None, expiration: datetime=None, external_id: str=None, first_access: datetime=None, first_activation: datetime=None, first_mail: datetime=None, id: int=None, in_error: bool=None, last_access: datetime=None, last_activation: datetime=None, last_mail: datetime=None, project_id: int=None, user_id: str=None):
        """Participation - a model defined in OpenAPI

        :param access_link: The access_link of this Participation.
        :param activated: The activated of this Participation.
        :param activities_completed: The activities_completed of this Participation.
        :param activities_total: The activities_total of this Participation.
        :param error_message: The error_message of this Participation.
        :param expiration: The expiration of this Participation.
        :param external_id: The external_id of this Participation.
        :param first_access: The first_access of this Participation.
        :param first_activation: The first_activation of this Participation.
        :param first_mail: The first_mail of this Participation.
        :param id: The id of this Participation.
        :param in_error: The in_error of this Participation.
        :param last_access: The last_access of this Participation.
        :param last_activation: The last_activation of this Participation.
        :param last_mail: The last_mail of this Participation.
        :param project_id: The project_id of this Participation.
        :param user_id: The user_id of this Participation.
        """
        self.openapi_types = {
            'access_link': str,
            'activated': bool,
            'activities_completed': float,
            'activities_total': float,
            'error_message': str,
            'expiration': datetime,
            'external_id': str,
            'first_access': datetime,
            'first_activation': datetime,
            'first_mail': datetime,
            'id': int,
            'in_error': bool,
            'last_access': datetime,
            'last_activation': datetime,
            'last_mail': datetime,
            'project_id': int,
            'user_id': str
        }

        self.attribute_map = {
            'access_link': 'accessLink',
            'activated': 'activated',
            'activities_completed': 'activitiesCompleted',
            'activities_total': 'activitiesTotal',
            'error_message': 'errorMessage',
            'expiration': 'expiration',
            'external_id': 'externalId',
            'first_access': 'firstAccess',
            'first_activation': 'firstActivation',
            'first_mail': 'firstMail',
            'id': 'id',
            'in_error': 'inError',
            'last_access': 'lastAccess',
            'last_activation': 'lastActivation',
            'last_mail': 'lastMail',
            'project_id': 'projectId',
            'user_id': 'userId'
        }

        self._access_link = access_link
        self._activated = activated
        self._activities_completed = activities_completed
        self._activities_total = activities_total
        self._error_message = error_message
        self._expiration = expiration
        self._external_id = external_id
        self._first_access = first_access
        self._first_activation = first_activation
        self._first_mail = first_mail
        self._id = id
        self._in_error = in_error
        self._last_access = last_access
        self._last_activation = last_activation
        self._last_mail = last_mail
        self._project_id = project_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Participation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Participation of this Participation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_link(self):
        """Gets the access_link of this Participation.

        A link to access this particular participation. The link requires the user to login. Users that access the platform the first time must set a password. This value is null if this participation is not activated. 

        :return: The access_link of this Participation.
        :rtype: str
        """
        return self._access_link

    @access_link.setter
    def access_link(self, access_link):
        """Sets the access_link of this Participation.

        A link to access this particular participation. The link requires the user to login. Users that access the platform the first time must set a password. This value is null if this participation is not activated. 

        :param access_link: The access_link of this Participation.
        :type access_link: str
        """

        self._access_link = access_link

    @property
    def activated(self):
        """Gets the activated of this Participation.

        True if this participation has been activated and can be used

        :return: The activated of this Participation.
        :rtype: bool
        """
        return self._activated

    @activated.setter
    def activated(self, activated):
        """Sets the activated of this Participation.

        True if this participation has been activated and can be used

        :param activated: The activated of this Participation.
        :type activated: bool
        """

        self._activated = activated

    @property
    def activities_completed(self):
        """Gets the activities_completed of this Participation.

        The number of activities completed

        :return: The activities_completed of this Participation.
        :rtype: float
        """
        return self._activities_completed

    @activities_completed.setter
    def activities_completed(self, activities_completed):
        """Sets the activities_completed of this Participation.

        The number of activities completed

        :param activities_completed: The activities_completed of this Participation.
        :type activities_completed: float
        """

        self._activities_completed = activities_completed

    @property
    def activities_total(self):
        """Gets the activities_total of this Participation.

        The total number of activities

        :return: The activities_total of this Participation.
        :rtype: float
        """
        return self._activities_total

    @activities_total.setter
    def activities_total(self, activities_total):
        """Sets the activities_total of this Participation.

        The total number of activities

        :param activities_total: The activities_total of this Participation.
        :type activities_total: float
        """

        self._activities_total = activities_total

    @property
    def error_message(self):
        """Gets the error_message of this Participation.

        An optional error message that may describe why the participation is in error state.

        :return: The error_message of this Participation.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this Participation.

        An optional error message that may describe why the participation is in error state.

        :param error_message: The error_message of this Participation.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def expiration(self):
        """Gets the expiration of this Participation.

        The timestamp when this participation will expire. Expiration never happens if this value is *null*.

        :return: The expiration of this Participation.
        :rtype: datetime
        """
        return self._expiration

    @expiration.setter
    def expiration(self, expiration):
        """Sets the expiration of this Participation.

        The timestamp when this participation will expire. Expiration never happens if this value is *null*.

        :param expiration: The expiration of this Participation.
        :type expiration: datetime
        """

        self._expiration = expiration

    @property
    def external_id(self):
        """Gets the external_id of this Participation.

        The external id (foreign key). Must not exceed 255 characters.

        :return: The external_id of this Participation.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this Participation.

        The external id (foreign key). Must not exceed 255 characters.

        :param external_id: The external_id of this Participation.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def first_access(self):
        """Gets the first_access of this Participation.

        The timestamp when the participant accessed the project for the first time. This value can be null

        :return: The first_access of this Participation.
        :rtype: datetime
        """
        return self._first_access

    @first_access.setter
    def first_access(self, first_access):
        """Sets the first_access of this Participation.

        The timestamp when the participant accessed the project for the first time. This value can be null

        :param first_access: The first_access of this Participation.
        :type first_access: datetime
        """

        self._first_access = first_access

    @property
    def first_activation(self):
        """Gets the first_activation of this Participation.

        The timestamp when this participation was first activated. This value can be null

        :return: The first_activation of this Participation.
        :rtype: datetime
        """
        return self._first_activation

    @first_activation.setter
    def first_activation(self, first_activation):
        """Sets the first_activation of this Participation.

        The timestamp when this participation was first activated. This value can be null

        :param first_activation: The first_activation of this Participation.
        :type first_activation: datetime
        """

        self._first_activation = first_activation

    @property
    def first_mail(self):
        """Gets the first_mail of this Participation.

        The timestamp when the first mail was sent to this participant. This value can be null

        :return: The first_mail of this Participation.
        :rtype: datetime
        """
        return self._first_mail

    @first_mail.setter
    def first_mail(self, first_mail):
        """Sets the first_mail of this Participation.

        The timestamp when the first mail was sent to this participant. This value can be null

        :param first_mail: The first_mail of this Participation.
        :type first_mail: datetime
        """

        self._first_mail = first_mail

    @property
    def id(self):
        """Gets the id of this Participation.

        Unique identifier representing this participation. Id numbers are never reused

        :return: The id of this Participation.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Participation.

        Unique identifier representing this participation. Id numbers are never reused

        :param id: The id of this Participation.
        :type id: int
        """

        self._id = id

    @property
    def in_error(self):
        """Gets the in_error of this Participation.

        True if this participation is in an error state. The user is not able to access participations that are in error state.

        :return: The in_error of this Participation.
        :rtype: bool
        """
        return self._in_error

    @in_error.setter
    def in_error(self, in_error):
        """Sets the in_error of this Participation.

        True if this participation is in an error state. The user is not able to access participations that are in error state.

        :param in_error: The in_error of this Participation.
        :type in_error: bool
        """

        self._in_error = in_error

    @property
    def last_access(self):
        """Gets the last_access of this Participation.

        The timestamp when the participant accessed the project the last time. This value can be null

        :return: The last_access of this Participation.
        :rtype: datetime
        """
        return self._last_access

    @last_access.setter
    def last_access(self, last_access):
        """Sets the last_access of this Participation.

        The timestamp when the participant accessed the project the last time. This value can be null

        :param last_access: The last_access of this Participation.
        :type last_access: datetime
        """

        self._last_access = last_access

    @property
    def last_activation(self):
        """Gets the last_activation of this Participation.

        The timestamp when this participation was last activated. This value can be null

        :return: The last_activation of this Participation.
        :rtype: datetime
        """
        return self._last_activation

    @last_activation.setter
    def last_activation(self, last_activation):
        """Sets the last_activation of this Participation.

        The timestamp when this participation was last activated. This value can be null

        :param last_activation: The last_activation of this Participation.
        :type last_activation: datetime
        """

        self._last_activation = last_activation

    @property
    def last_mail(self):
        """Gets the last_mail of this Participation.

        The timestamp when the last mail was sent to this participant. This value can be null

        :return: The last_mail of this Participation.
        :rtype: datetime
        """
        return self._last_mail

    @last_mail.setter
    def last_mail(self, last_mail):
        """Sets the last_mail of this Participation.

        The timestamp when the last mail was sent to this participant. This value can be null

        :param last_mail: The last_mail of this Participation.
        :type last_mail: datetime
        """

        self._last_mail = last_mail

    @property
    def project_id(self):
        """Gets the project_id of this Participation.

        The id of the project this participation belongs to

        :return: The project_id of this Participation.
        :rtype: int
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this Participation.

        The id of the project this participation belongs to

        :param project_id: The project_id of this Participation.
        :type project_id: int
        """

        self._project_id = project_id

    @property
    def user_id(self):
        """Gets the user_id of this Participation.

        The id of the user this participation belongs to

        :return: The user_id of this Participation.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Participation.

        The id of the user this participation belongs to

        :param user_id: The user_id of this Participation.
        :type user_id: str
        """

        self._user_id = user_id
