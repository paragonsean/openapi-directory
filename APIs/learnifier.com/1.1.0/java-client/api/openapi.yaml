openapi: 3.0.1
info:
  title: Learnifier
  version: 1.1.0
  x-apisguru-categories:
  - education
  x-logo:
    backgroundColor: '#000000'
    url: https://twitter.com/learnifier/profile_image?size=original
  x-origin:
  - format: swagger
    url: http://learnifier.com/apidocs/learnifier.json
    version: "2.0"
  x-providerName: learnifier.com
externalDocs:
  url: http://learnifier.com/api/
servers:
- url: http://learnifier.com/
paths:
  /coursedesigns:
    get:
      description: Lists all global course design templates. Only api callers that
        have full access can call this method.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CourseDesign'
                type: array
          description: List with course design templates
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Lists all global course design templates
      tags:
      - Course Designs
      x-accepts:
      - application/json
  /extorgunit:
    get:
      description: |
        Returns information about the organization unit with the specified external id.
      parameters:
      - description: The external id of the organization unit
        in: query
        name: extid
        required: true
        schema:
          format: extid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUnit'
          description: A response with an organization unit
        "404":
          content: {}
          description: Organization Unit not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get Organization Unit with External Id
      tags:
      - Organization Units
      x-accepts:
      - application/json
  /extparticipation:
    get:
      description: Gets a participation by external id.
      parameters:
      - description: The external id of the participation
        in: query
        name: extid
        required: true
        schema:
          format: extid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
          description: The matching participation
        "404":
          content: {}
          description: User not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Gets a participation by external id
      tags:
      - Users
      x-accepts:
      - application/json
  /extproject:
    get:
      description: Gets an Organization Unit by external id
      parameters:
      - description: The external id of the organization unit
        in: query
        name: extid
        required: true
        schema:
          format: extid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The matching project
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Gets Organization Unit by external id
      tags:
      - Projects
      x-accepts:
      - application/json
  /extuser:
    get:
      description: Gets a user by external id.
      parameters:
      - description: The external id of the user
        in: query
        name: extid
        required: true
        schema:
          format: extid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User was successfully added
        "404":
          content: {}
          description: User not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Gets a user by external id
      tags:
      - Users
      x-accepts:
      - application/json
  /globalusergroups:
    get:
      description: |
        Returns a list of Global User Groups. Global User Groups are set up for the realm, and will generate groups that can be used on the client level.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GlobalUserGroup'
                type: array
          description: List of Global User Groups.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List Global User Groups.
      tags:
      - Global User Groups
      x-accepts:
      - application/json
  /globalusergroups/{groupid}/members:
    get:
      description: |
        Returns a list of all members in User Groups that are based on the Global Group with this groupid.
      parameters:
      - description: ID of group
        in: path
        name: groupid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: List of users
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List of all users in group.
      tags:
      - Global User Groups
      x-accepts:
      - application/json
  /orgunits:
    get:
      description: |
        The orgunits endpoint returns information about the available organization units (orgunits).
        The response includes the display name, internal and external id and client number.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUnits'
          description: A response with organization units
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Organization Units
      tags:
      - Organization Units
      x-accepts:
      - application/json
    post:
      description: Adds an Organization Unit
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddOrganizationUnit'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrganizationUnitResponse'
          description: Organization Unit was successfully added
        "409":
          content: {}
          description: An organization with the same clientNumber or external id already
            existed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Adds an Organization Unit
      tags:
      - Organization Units
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /orgunits/{orgid}:
    get:
      description: |
        Returns information about the specified organization unit.
        The response includes the display name, internal and external id and client number.
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUnit'
          description: A response with an organization unit
        "404":
          content: {}
          description: Organization Unit not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get Organization Unit
      tags:
      - Organization Units
      x-accepts:
      - application/json
    patch:
      description: Adds an Organization Unit
      parameters:
      - in: path
        name: orgid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUnit'
        required: true
      responses:
        "201":
          content: {}
          description: Organization Unit was successfully updated
        "409":
          content: {}
          description: An organization with the same clientNumber or external id already
            existed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Updates an Organization Unit
      tags:
      - Organization Units
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /orgunits/{orgid}/projects:
    get:
      description: |
        Returns the available projects for the organization unit
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: A list with projects
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Organization Unit Projects
      tags:
      - Projects
      x-accepts:
      - application/json
    post:
      description: |
        Creates a new project
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddProject'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The project was succesfully created created.
          headers:
            location:
              description: Location to the added project
              schema:
                format: uri
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create project
      tags:
      - Projects
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /orgunits/{orgid}/projects/{projectid}:
    delete:
      description: |
        Deletes the project. The project can only be deleted if the project do not contain any participants.
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: The project was deleted
        "404":
          content: {}
          description: The project could not be found
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The project could not be delted due to constraints
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Deletes the project
      tags:
      - Projects
      x-accepts:
      - application/json
    get:
      description: |
        Returns project information
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Project information
      tags:
      - Projects
      x-accepts:
      - application/json
    patch:
      description: |
        Updates information about a project. Values are only updated if the fields are specified in the input
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateProject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The project was succesfully updated
          headers:
            location:
              description: Location to the added project
              schema:
                format: uri
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update project information
      tags:
      - Projects
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /orgunits/{orgid}/projects/{projectid}/participants:
    get:
      description: |
        Returns project participants
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Participation'
                type: array
          description: Project information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Project participants
      tags:
      - Projects
      x-accepts:
      - application/json
    post:
      description: |
        Add a user to the project. Participant information is created for the user. In the body object, only one of either email or userid must be specified. The participant needs to be activated before it the user can access it.
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddParticipant'
        required: true
      responses:
        "201":
          content: {}
          description: Participant was created
          headers:
            location:
              description: Location to the added participant
              schema:
                format: uri
                type: string
        "409":
          content: {}
          description: Participant with the same email already existed. Location header
            contains the url to the already existing participant.
          headers:
            location:
              description: Location to the participant
              schema:
                format: uri
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Add participant
      tags:
      - Projects
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /orgunits/{orgid}/projects/{projectid}/participants/${participantId}:
    delete:
      description: |
        Deletes a participant. The user itself will still remain but any state related to the project will be deleted.
        It might not be possible due to constraints from the products in the project to delete the participant. However
        this can only be determined at the time of the delete. If a delete fails the participant will have their inError
        flag set.
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      - description: Participant id
        in: path
        name: participantId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Participant is deleted
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The delete failed due to internal constraints
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Deletes a participant
      tags:
      - Projects
      x-accepts:
      - application/json
  /orgunits/{orgid}/projects/{projectid}/participants/${participantId}/activate:
    post:
      description: |
        Activates a participant so that it can be used
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      - description: Id of the participant
        in: path
        name: participantId
        required: true
        schema:
          type: integer
      responses:
        "201":
          content: {}
          description: Participant is activated
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationError'
          description: The participant could not be activated
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The participant could not be activated due to invalid project
            state
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Activate participant
      tags:
      - Projects
      x-accepts:
      - application/json
  /orgunits/{orgid}/projects/{projectid}/participants/${participantId}/loginlink:
    post:
      description: |
        Returns a single sign on link for the participant. The link is only usable once and should be used directly. The link expires after a few minutes.

        This operation requires the *login link* permission.
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      - description: Id of the participant
        in: path
        name: participantId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLink'
          description: A generated one time use login link
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The participant is not in a state where a loginlink is possible
            to get
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Participant login link
      tags:
      - Projects
      x-accepts:
      - application/json
  /orgunits/{orgid}/projects/{projectid}/teammembers:
    get:
      description: |
        Returns the project team members. A team member is a ....
      parameters:
      - description: Id of the organization unit
        in: path
        name: orgid
        required: true
        schema:
          type: integer
      - description: Id of the project
        in: path
        name: projectid
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTeamMember'
                type: array
          description: Project information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Project team members
      tags:
      - Projects
      x-accepts:
      - application/json
  /orgunits/{orgid}/usergroups:
    get:
      description: |
        Returns a list of User Groups for the org unit.
      parameters:
      - description: ID of organization
        in: path
        name: orgid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroup'
                type: array
          description: List of User Groups.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List User Groups.
      tags:
      - User Groups
      x-accepts:
      - application/json
    post:
      description: |
        Create a User Group.
      parameters:
      - description: ID of organization
        in: path
        name: orgid
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddUserGroup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupId'
                type: array
          description: List of User Groups.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a User Group.
      tags:
      - User Groups
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /orgunits/{orgid}/usergroups/{groupid}:
    get:
      description: |
        Returns single User Group.
      parameters:
      - description: ID of organization
        in: path
        name: orgid
        required: true
        schema:
          format: int64
          type: integer
      - description: ID of group
        in: path
        name: groupid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: User Group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get user group
      tags:
      - User Groups
      x-accepts:
      - application/json
  /orgunits/{orgid}/usergroups/{groupid}/members:
    get:
      description: |
        Returns a list of all members in User Groups that are based on the Global Group with this groupid.
      parameters:
      - description: ID of organization
        in: path
        name: orgid
        required: true
        schema:
          format: int64
          type: integer
      - description: ID of group
        in: path
        name: groupid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: List of users
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List of all users in group.
      tags:
      - User Groups
      x-accepts:
      - application/json
    post:
      description: |
        Adds a user to user group.
      parameters:
      - description: ID of organization
        in: path
        name: orgid
        required: true
        schema:
          format: int64
          type: integer
      - description: ID of group
        in: path
        name: groupid
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddUserGroupMember'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserId'
          description: User ID of added user
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Add user group member.
      tags:
      - User Groups
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /orgunits/{orgid}/usergroups/{groupid}/members/{uuid}:
    delete:
      description: |
        Removes a user from a user group.
      parameters:
      - description: ID of organization
        in: path
        name: orgid
        required: true
        schema:
          format: int64
          type: integer
      - description: ID of group
        in: path
        name: groupid
        required: true
        schema:
          format: int64
          type: integer
      - description: UUID of user to remove from group.
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Remove user group member.
      tags:
      - User Groups
      x-accepts:
      - application/json
  /users:
    get:
      description: Lists all users. Only api callers that have full access can call
        this method.
      parameters:
      - description: The maximum number of users to return
        in: query
        name: limit
        schema:
          default: 5000
          format: integer
          type: integer
      - description: The offset to start listing users from
        in: query
        name: offset
        schema:
          default: 0
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserWithPermissions'
                type: array
          description: List with users
          headers:
            X-More:
              description: Indicates if there are more users available
              schema:
                type: boolean
            X-Offset:
              description: The offset that was used
              schema:
                type: integer
            X-Limit:
              description: The limit that was used
              schema:
                type: integer
            X-Size:
              description: The number of users returned
              schema:
                type: integer
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Lists all users
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      description: Adds a user. No two users can have the same email address. Email
        is saved WITH case but compared regardless of case. Email can be changed for
        a user assuming it doesn't cause a conflict.
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
          description: User was successfully added
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
          description: A user with the same primary email already existed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Adds a user
      tags:
      - Users
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /users/{userid}:
    get:
      description: |
        Returns information about a user
      parameters:
      - description: A user id
        in: path
        name: userid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: User information
      tags:
      - Users
      x-accepts:
      - application/json
    patch:
      description: "Updates a user. All values that have a key defined in the input\
        \ will be set. So if a value should not be updated omit it totally from the\
        \ input, otherwise it will be unset."
      parameters:
      - description: The user id
        in: path
        name: userid
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddUser'
        required: true
      responses:
        "201":
          content: {}
          description: User was successfully updated
        "409":
          content: {}
          description: A user with the same primary email already existed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Updates user information
      tags:
      - Users
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /users/{userid}/pic?key={APIKEY}:
    get:
      description: |
        Returns a thumbnail picture of the user. This can either be a selected picture or an auto generated image. This method doesn't require a full sign in. The api key is sufficient.
        The image is square and is likely, but not necessary, to be in 128x128 PNG format. However the format will always be either PNG, JPEG or GIF.
      parameters:
      - description: The user id
        in: path
        name: userid
        required: true
        schema:
          type: string
      - in: path
        name: APIKEY
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: An image. Check the Content-Type header to determine which
            type the returned image have
        "302":
          content: {}
          description: A redirect to the profile
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: User profile picture
      tags:
      - Users
      x-accepts:
      - application/json
  /users/{userid}/projectParticipations:
    get:
      description: |
        Returns information about the projects the user is a participant in. Only the projects that the current token have access to will be listed.
      parameters:
      - description: A user id
        in: path
        name: userid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserParticipationInfo'
          description: Project participation info
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Returns information about the projects the user is a participant in.
      tags:
      - Users
      x-accepts:
      - application/json
components:
  schemas:
    ActivationError:
      example:
        code: 0
        failures:
        - productId: productId
          message: message
          type: type
        - productId: productId
          message: message
          type: type
        field: field
        message: message
      properties:
        code:
          description: Optional error code
          format: int32
          type: integer
        failures:
          items:
            $ref: '#/components/schemas/ProductFailure'
          type: array
        field:
          description: The input field that the error was related to
          type: string
        message:
          description: Optional error message
          type: string
      type: object
    AddOrganizationUnit:
      example:
        country: se
        parent: 1234.0
        caller: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
        displayName: Sample Corp
        externalId: externalId
        clientNumber: X-1234
      properties:
        caller:
          description: The id of the user that initiated this operation
          example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
          format: uuid
          type: string
        clientNumber:
          description: A client number. Sometimes used when communicating with external
            system. Must be unique if specified.
          example: X-1234
          type: string
        country:
          description: The country code that best matches the organization unit. If
            unspecified the platform default will be set.
          example: se
          format: locale
          type: string
        displayName:
          description: The name shown for the organization unit
          example: Sample Corp
          type: string
        externalId:
          description: The external id (foreign key). Must not exceed 255 characters.
          type: string
        parent:
          description: A Organization Unit id of the parent Organization Unit (optional).
          example: 1234.0
          format: id64
          type: number
      required:
      - displayName
      type: object
    AddOrganizationUnitResponse:
      example:
        ouId: 12.0
      properties:
        ouId:
          description: The Organization Unit id
          example: 12.0
          format: int64
          type: number
      type: object
    AddParticipant:
      example:
        extid: extid
        userid: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
        email: user@example.com
      properties:
        email:
          description: The email of the user. If no user exists with the specified
            email a user will be created with default values and the specified email.
          example: user@example.com
          format: email
          type: string
        extid:
          description: An optional external id for the participation
          type: string
        userid:
          example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
          format: uuid
          type: string
      type: object
    AddProject:
      example:
        country: SE
        note: note
        userTitle: userTitle
        userDescription: userDescription
        createdBy: 8c102c8e-fabd-4c8a-b245-4d2d2f77fc4b
        timezone: Europe/Stockholm
        name: name
        designId: 0
        locale: en-US
      properties:
        country:
          description: The country code. Default value will be used if not specified
          example: SE
          format: countrycode
          type: string
        createdBy:
          description: The id of the user that created the project. If the creator
            is not known this value can be *null* or not specified
          example: 8c102c8e-fabd-4c8a-b245-4d2d2f77fc4b
          format: uuid
          type: string
        designId:
          description: The id of the design this project should be based on
          format: int64
          type: integer
        locale:
          description: The primary locale for this project. Default value will be
            used if not specified
          example: en-US
          format: locale
          type: string
        name:
          description: The internal name of the project
          type: string
        note:
          description: The internal note field
          type: string
        timezone:
          description: The main timezone for the project. Do not specify for default
            timezone
          example: Europe/Stockholm
          format: timezone
          type: string
        userDescription:
          description: The description presented to participants. Do not specify for
            default value from design
          type: string
        userTitle:
          description: The title presented to participants. Do not specify for default
            value from design
          type: string
      required:
      - designId
      - name
      type: object
    AddUser:
      example:
        firstName: Jane
        lastName: Doe
        hardLock: true
        homeOrg: 1234
        displayName: Jane Doe
        externalId: externalId
        locale: en-US
        primaryEmail: jane.doe@example.com
      properties:
        displayName:
          description: The name shown when the user is listed
          example: Jane Doe
          type: string
        externalId:
          description: The external id (foreign key). Must not exceed 255 characters.
          type: string
        firstName:
          description: The first (given) name of the user
          example: Jane
          type: string
        hardLock:
          description: True if the user should be locked from the system
          type: boolean
        homeOrg:
          description: The primary organization for the user. Must match the id of
            an Organization Unit.
          example: 1234
          format: int64
          type: integer
        lastName:
          description: The last name (surname) of the user
          example: Doe
          format: string
          type: object
        locale:
          description: The user's preferred language/locale setting. Affects date
            and number formatting.
          example: en-US
          format: locale
          type: string
        primaryEmail:
          description: The primary email for the user. Used for communication from
            the platform.
          example: jane.doe@example.com
          type: string
      type: object
    AddUserGroup:
      example:
        parent: 1010
        name: Foo
      properties:
        name:
          description: Name of group.
          example: Foo
          type: string
        parent:
          description: Optional ID of parent group.
          example: 1010
          format: int64
          type: integer
      required:
      - name
      type: object
    AddUserGroupMember:
      example:
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          description: UUID of user to add to this group.
          format: uuid
          type: string
      required:
      - uuid
      type: object
    AddUserResponse:
      example:
        userId: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
      properties:
        userId:
          description: The user id
          example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
          format: uuid
          type: string
      type: object
    BackOfficeRole:
      example:
        name: name
        id: id
      properties:
        id:
          description: The id of the role
          type: string
        name:
          description: The name of the role
          type: string
      required:
      - id
      - name
      type: object
    ClientRole:
      example:
        name: name
        id: id
      properties:
        id:
          description: The id of the role
          type: string
        name:
          description: The name of the role
          type: string
      type: object
    ClientRoles:
      example:
        roles:
        - name: name
          id: id
        - name: name
          id: id
        id: id
      properties:
        id:
          description: An organization unit id
          type: string
        roles:
          description: A list with client roles
          items:
            $ref: '#/components/schemas/ClientRole'
          type: array
      type: object
    CourseDesign:
      example:
        lockedBy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdBy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created: 2000-01-23T04:56:07.000+00:00
        lockedDesign: true
        name: name
        sticky: true
        description: description
        locale: locale
        locked: 2000-01-23T04:56:07.000+00:00
        softid: softid
        enabled: true
        tags:
        - tags
        - tags
      properties:
        created:
          description: The time this entry was created
          format: date-time
          type: string
        createdBy:
          description: UUID of the user that created this entry.
          format: uuid
          type: string
        description:
          description: Course description
          type: string
        enabled:
          description: True if this design is enabled for use
          type: boolean
        locale:
          description: BCP-47 locale
          format: locale
          type: string
        locked:
          description: The time when this entry was locked or null
          format: date-time
          type: string
        lockedBy:
          description: UUID of the user that has locked this design
          format: uuid
          type: string
        lockedDesign:
          description: True if this design is locked for editing
          type: boolean
        name:
          description: The name
          type: string
        softid:
          description: The soft identifier
          type: string
        sticky:
          description: True if this design is sticky
          type: boolean
        tags:
          description: Course tags
          items:
            type: string
          type: array
      required:
      - enabled
      - locale
      - lockedDesign
      - name
      - sticky
      type: object
    Error:
      example:
        code: 0
        field: field
        message: message
      properties:
        code:
          description: Optional error code
          format: int32
          type: integer
        field:
          description: The input field that the error was related to
          type: string
        message:
          description: Optional error message
          type: string
      type: object
    GlobalUserGroup:
      example:
        softiId: softiId
        parent: 6
        updatedBy: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
        createdBy: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          description: Timestamp when group was created.
          format: date-time
          type: string
        createdBy:
          description: UUID of the user that created this group.
          example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
          format: uuid
          type: string
        id:
          description: The id of the group.
          format: int64
          type: integer
        name:
          description: The name of the group.
          type: string
        parent:
          description: "Id of parent group, null if group has no parent."
          format: int64
          type: integer
        softiId:
          description: Alternative unique ID for the group.
          type: string
        updated:
          description: Timestamp when group was last modified.
          format: date-time
          type: string
        updatedBy:
          description: UUID of the user that last updated this group.
          example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
          format: uuid
          type: string
      required:
      - created
      - id
      type: object
    GroupId:
      example:
        groupId: 1010
      properties:
        groupId:
          description: ID of group.
          example: 1010
          format: int64
          type: integer
      required:
      - groupId
      type: object
    LoginLink:
      example:
        link: http://www.example.com/login/1234567890
      properties:
        link:
          description: An full http url
          example: http://www.example.com/login/1234567890
          format: url
          type: string
      type: object
    OrgUnit:
      example:
        name: name
        externalId: externalId
        id: 0
        type: type
        parentId: 6
      properties:
        externalId:
          description: The external id (foreign key). Must not exceed 255 characters.
          type: string
        id:
          description: Unique identifier representing a specific organization unit.
            Id numbers are never reused.
          format: int64
          type: integer
        name:
          description: The name of the client.
          type: string
        parentId:
          description: Unique identifier of the parent or *null* if there is no parent.
          format: int64
          type: integer
        type:
          description: The organization unit type. The only type is *client* at the
            moment.
          type: string
      required:
      - id
      - type
      type: object
    OrgUnits:
      example:
        orgUnits:
        - name: name
          externalId: externalId
          id: 0
          type: type
          parentId: 6
        - name: name
          externalId: externalId
          id: 0
          type: type
          parentId: 6
      properties:
        orgUnits:
          items:
            $ref: '#/components/schemas/OrgUnit'
          type: array
      type: object
    Participation:
      example:
        firstActivation: 2000-01-23T04:56:07.000+00:00
        activitiesTotal: 5.0
        inError: true
        errorMessage: errorMessage
        externalId: externalId
        firstAccess: 2000-01-23T04:56:07.000+00:00
        lastAccess: 2000-01-23T04:56:07.000+00:00
        firstMail: 2000-01-23T04:56:07.000+00:00
        lastActivation: 2000-01-23T04:56:07.000+00:00
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastMail: 2000-01-23T04:56:07.000+00:00
        accessLink: http://www.example.com/accesslink/123451
        activitiesCompleted: 3.0
        expiration: 2000-01-23T04:56:07.000+00:00
        id: 0
        projectId: 6
        activated: true
      properties:
        accessLink:
          description: 'A link to access this particular participation. The link requires
            the user to login. Users that access the platform the first time must
            set a password. This value is null if this participation is not activated. '
          example: http://www.example.com/accesslink/123451
          format: url
          type: string
        activated:
          description: True if this participation has been activated and can be used
          type: boolean
        activitiesCompleted:
          description: The number of activities completed
          example: 3.0
          format: int64
          type: number
        activitiesTotal:
          description: The total number of activities
          example: 5.0
          format: int64
          type: number
        errorMessage:
          description: An optional error message that may describe why the participation
            is in error state.
          type: string
        expiration:
          description: The timestamp when this participation will expire. Expiration
            never happens if this value is *null*.
          format: date-time
          type: string
        externalId:
          description: The external id (foreign key). Must not exceed 255 characters.
          type: string
        firstAccess:
          description: The timestamp when the participant accessed the project for
            the first time. This value can be null
          format: date-time
          type: string
        firstActivation:
          description: The timestamp when this participation was first activated.
            This value can be null
          format: date-time
          type: string
        firstMail:
          description: The timestamp when the first mail was sent to this participant.
            This value can be null
          format: date-time
          type: string
        id:
          description: Unique identifier representing this participation. Id numbers
            are never reused
          format: int64
          type: integer
        inError:
          description: True if this participation is in an error state. The user is
            not able to access participations that are in error state.
          type: boolean
        lastAccess:
          description: The timestamp when the participant accessed the project the
            last time. This value can be null
          format: date-time
          type: string
        lastActivation:
          description: The timestamp when this participation was last activated. This
            value can be null
          format: date-time
          type: string
        lastMail:
          description: The timestamp when the last mail was sent to this participant.
            This value can be null
          format: date-time
          type: string
        projectId:
          description: The id of the project this participation belongs to
          format: int64
          type: integer
        userId:
          description: The id of the user this participation belongs to
          format: uuid
          type: string
      type: object
    ProductFailure:
      example:
        productId: productId
        message: message
        type: type
      properties:
        message:
          description: The error message
          type: string
        productId:
          description: A product id
          type: string
        type:
          description: The technical error type
          type: string
      type: object
    Project:
      example:
        country: SE
        note: note
        userDescription: userDescription
        created: 2000-01-23T04:56:07.000+00:00
        timezone: Europe/Stockholm
        externalId: externalId
        locale: en-US
        orgId: 1
        userTitle: userTitle
        createdBy: 8c102c8e-fabd-4c8a-b245-4d2d2f77fc4b
        name: name
        designId: 0
        id: 6
        adminUrl: http://www.example.com/adminUrl/1234
        status: ACTIVATED
      properties:
        adminUrl:
          description: URL to the page where project administration can be done. Administrative
            access is still required when accessing the url.
          example: http://www.example.com/adminUrl/1234
          format: url
          type: string
        country:
          description: The country code
          example: SE
          format: countrycode
          type: string
        created:
          description: The timestamp when this project was created.
          format: date-time
          type: string
        createdBy:
          description: The id of the user that created the project. If the creator
            is not known this value is *null*
          example: 8c102c8e-fabd-4c8a-b245-4d2d2f77fc4b
          format: uuid
          type: string
        designId:
          description: The id of the design this project are using or null if no design
            is used
          format: int64
          type: integer
        externalId:
          description: The external id (foreign key). Must not exceed 255 characters.
          type: string
        id:
          description: Unique identifier representing a specific project. Id numbers
            are never reused.
          format: int64
          type: integer
        locale:
          description: The primary locale for this project
          example: en-US
          format: locale
          type: string
        name:
          description: The internal name of the project
          type: string
        note:
          description: The internal note field
          type: string
        orgId:
          description: The id of the organization unit this project belongs to
          format: int64
          type: integer
        status:
          description: "Project status. Can be either ACTIVATED, NEW or DISABLED"
          enum:
          - ACTIVATED
          - NEW
          - DISABLED
          example: ACTIVATED
          type: string
        timezone:
          description: The main timezone for the project
          example: Europe/Stockholm
          format: timezone
          type: string
        userDescription:
          description: The description presented to participants. This value can be
            *null*.
          type: string
        userTitle:
          description: The title presented to participants
          type: string
      type: object
    ProjectTeamMember:
      example:
        roles:
          roleid: 2afae00f-8357-4b56-94bb-44a3cf0b8ffa
          name: name
        userid: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
      properties:
        roles:
          $ref: '#/components/schemas/TeamRole'
        userid:
          description: The id of the user that created the project. If the creator
            is not known this value is *null*
          example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
          format: uuid
          type: string
      type: object
    TeamRole:
      example:
        roleid: 2afae00f-8357-4b56-94bb-44a3cf0b8ffa
        name: name
      properties:
        name:
          type: string
        roleid:
          example: 2afae00f-8357-4b56-94bb-44a3cf0b8ffa
          format: uuid
          type: string
      type: object
    UpdateOrganizationUnit:
      example:
        country: se
        parent: 1234.0
        caller: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
        displayName: Sample Corp
        externalId: externalId
        clientNumber: X-1234
      properties:
        caller:
          description: The id of the user that initiated this operation
          example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
          format: uuid
          type: string
        clientNumber:
          description: A client number. Sometimes used when communicating with external
            system. Must be unique if specified.
          example: X-1234
          type: string
        country:
          description: The country code that best matches the organization unit. If
            unspecified the platform default will be set.
          example: se
          format: locale
          type: string
        displayName:
          description: The name shown for the organization unit
          example: Sample Corp
          type: string
        externalId:
          description: The external id (foreign key). Must not exceed 255 characters.
          type: string
        parent:
          description: A Organization Unit id of the parent Organization Unit (optional).
          example: 1234.0
          format: id64
          type: number
      type: object
    UpdateProject:
      example:
        country: SE
        note: note
        userTitle: userTitle
        userDescription: userDescription
        timezone: Europe/Stockholm
        name: name
        locale: en-US
        status: ACTIVATED
      properties:
        country:
          description: The country code
          example: SE
          format: countrycode
          type: string
        locale:
          description: The primary locale for this project
          example: en-US
          format: locale
          type: string
        name:
          description: The internal name of the project
          type: string
        note:
          description: The internal note field
          type: string
        status:
          description: "Project status. Can be either ACTIVATED, NEW or DISABLED"
          enum:
          - ACTIVATED
          - NEW
          - DISABLED
          example: ACTIVATED
          type: string
        timezone:
          description: The main timezone for the project
          example: Europe/Stockholm
          format: timezone
          type: string
        userDescription:
          description: The description presented to participants. This value can be
            *null*.
          type: string
        userTitle:
          description: The title presented to participants
          type: string
      type: object
    User:
      example:
        lastLogin: 2000-01-23T04:56:07.000+00:00
        lastName: Doe
        homeOrg: 1234
        firstLogin: 2000-01-23T04:56:07.000+00:00
        displayName: Jane Doe
        externalId: externalId
        prefs:
          locale: sv-SE
        firstName: Jane
        hardLock: true
        id: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
        locked: true
        authorizationPossible: true
        primaryEmail: primaryEmail
      properties:
        authorizationPossible:
          description: True if the user can authorize herself/himself
          type: boolean
        displayName:
          description: Full name of the user
          example: Jane Doe
          type: string
        externalId:
          description: The external id (foreign key). Must not exceed 255 characters.
          type: string
        firstLogin:
          description: The timestamp when the first login was made. This value can
            be *null*.
          format: date-time
          type: string
        firstName:
          description: The first name of the user (or given name)
          example: Jane
          type: string
        hardLock:
          description: True if the user is locked and the lock has been set by an
            administrator
          type: boolean
        homeOrg:
          description: The primary organization for the user. Must match the id of
            an Organization Unit.
          example: 1234
          format: int64
          type: integer
        id:
          description: The id of the user this participation belongs to
          example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
          format: uuid
          type: string
        lastLogin:
          description: The timestamp when the last login was made. This value can
            be *null*.
          format: date-time
          type: string
        lastName:
          description: The last name of the user (or surname)
          example: Doe
          type: string
        locked:
          description: Lock status. A locked user will not be able to access the platform.
          type: boolean
        prefs:
          $ref: '#/components/schemas/UserPreferences'
        primaryEmail:
          description: The primary email for this user. If the user has no email this
            value is *null*.
          format: email
          type: string
      type: object
    UserGroup:
      example:
        parent: 1
        children:
        - null
        - null
        groupId: 6
        globalId: 0
        name: name
        userGroup: 5
      properties:
        children:
          description: Children User Groups.
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
        globalId:
          description: "Global group ID if this group is based on a global group,\
            \ otherwise null."
          format: int64
          type: integer
        groupId:
          description: Unique identifier representing a User Group. Id numbers are
            never reused.
          format: int64
          type: integer
        name:
          description: The name of the User Group.
          type: string
        parent:
          description: Unique identifier of the parent or *null* if there is no parent.
          format: int64
          type: integer
        userGroup:
          description: If of internal user group object that holds the members of
            this group.
          format: int64
          type: integer
      required:
      - name
      type: object
    UserId:
      example:
        uuid: aa7685cb-d47e-419e-8541-0d13cdcfe779
      properties:
        uuid:
          description: UUID of user to add to this group.
          example: aa7685cb-d47e-419e-8541-0d13cdcfe779
          format: uuid
          type: string
      required:
      - uuid
      type: object
    UserParticipationInfo:
      example:
        firstActivation: 2000-01-23T04:56:07.000+00:00
        activitiesTotal: 5.0
        inError: true
        errorMessage: errorMessage
        externalId: externalId
        firstAccess: 2000-01-23T04:56:07.000+00:00
        lastAccess: 2000-01-23T04:56:07.000+00:00
        firstMail: 2000-01-23T04:56:07.000+00:00
        lastActivation: 2000-01-23T04:56:07.000+00:00
        projectStatus: ACTIVATED
        lastMail: 2000-01-23T04:56:07.000+00:00
        projectThumbnail: http://www.example.com/thumbnail.png
        accessLink: http://www.example.com/accesslink/123451
        projectOrgId: 1
        activitiesCompleted: 3.0
        expiration: 2000-01-23T04:56:07.000+00:00
        id: 0
        projectUserTitle: projectUserTitle
        projectName: projectName
        projectId: 6
        activated: true
      properties:
        accessLink:
          description: 'A link to access this particular participation. The link requires
            the user to login. Users that access the platform the first time must
            set a password. This value is null if this participation is not activated. '
          example: http://www.example.com/accesslink/123451
          format: url
          type: string
        activated:
          description: True if this participation has been activated and can be used
          type: boolean
        activitiesCompleted:
          description: The number of activities completed
          example: 3.0
          format: int64
          type: number
        activitiesTotal:
          description: The total number of activities
          example: 5.0
          format: int64
          type: number
        errorMessage:
          description: An optional error message that may describe why the participation
            is in error state.
          type: string
        expiration:
          description: The timestamp when this participation will expire. Expiration
            never happens if this value is *null*.
          format: date-time
          type: string
        externalId:
          description: The external id (foreign key). Must not exceed 255 characters.
          type: string
        firstAccess:
          description: The timestamp when the participant accessed the project for
            the first time. This value can be null
          format: date-time
          type: string
        firstActivation:
          description: The timestamp when this participation was first activated.
            This value can be null
          format: date-time
          type: string
        firstMail:
          description: The timestamp when the first mail was sent to this participant.
            This value can be null
          format: date-time
          type: string
        id:
          description: Participation id
          format: int64
          type: integer
        inError:
          description: True if this participation is in an error state. The user is
            not able to access participations that are in error state.
          type: boolean
        lastAccess:
          description: The timestamp when the participant accessed the project the
            last time. This value can be null
          format: date-time
          type: string
        lastActivation:
          description: The timestamp when this participation was last activated. This
            value can be null
          format: date-time
          type: string
        lastMail:
          description: The timestamp when the last mail was sent to this participant.
            This value can be null
          format: date-time
          type: string
        projectId:
          description: Project id
          format: int64
          type: integer
        projectName:
          description: The internal name of the project
          type: string
        projectOrgId:
          description: The organization id
          format: int64
          type: integer
        projectStatus:
          description: "Project status. Can be either ACTIVATED, NEW or DISABLED"
          enum:
          - ACTIVATED
          - NEW
          - DISABLED
          example: ACTIVATED
          type: string
        projectThumbnail:
          description: An url to the project thumbnail. This url can be accessed by
            anyone.
          example: http://www.example.com/thumbnail.png
          format: url
          type: string
        projectUserTitle:
          description: The title presented to participants
          type: string
      type: object
    UserPreferences:
      example:
        locale: sv-SE
      properties:
        locale:
          description: The preferred locale. This value can be *null* if no specific
            preference has been selected.
          example: sv-SE
          format: locale
          type: string
      type: object
    UserWithPermissions:
      allOf:
      - $ref: '#/components/schemas/User'
      - properties:
          backOfficeRoles:
            items:
              $ref: '#/components/schemas/BackOfficeRole'
            type: array
          clientRoles:
            description: A list with client roles
            items:
              $ref: '#/components/schemas/ClientRoles'
            type: array
        type: object
      example:
        lastLogin: 2000-01-23T04:56:07.000+00:00
        lastName: Doe
        homeOrg: 1234
        firstLogin: 2000-01-23T04:56:07.000+00:00
        displayName: Jane Doe
        externalId: externalId
        prefs:
          locale: sv-SE
        firstName: Jane
        hardLock: true
        backOfficeRoles:
        - name: name
          id: id
        - name: name
          id: id
        id: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
        locked: true
        authorizationPossible: true
        primaryEmail: primaryEmail
        clientRoles:
        - roles:
          - name: name
            id: id
          - name: name
            id: id
          id: id
        - roles:
          - name: name
            id: id
          - name: name
            id: id
          id: id
x-original-swagger-version: "2.0"

