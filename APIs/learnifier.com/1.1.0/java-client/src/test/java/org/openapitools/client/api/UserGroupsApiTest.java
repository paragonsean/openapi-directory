/*
 * Learnifier
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddUserGroup;
import org.openapitools.client.model.AddUserGroupMember;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.GroupId;
import java.util.UUID;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserGroup;
import org.openapitools.client.model.UserId;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserGroupsApi
 */
@Disabled
public class UserGroupsApiTest {

    private final UserGroupsApi api = new UserGroupsApi();

    /**
     * List User Groups.
     *
     * Returns a list of User Groups for the org unit. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orgunitsOrgidUsergroupsGetTest() throws ApiException {
        Long orgid = null;
        List<UserGroup> response = api.orgunitsOrgidUsergroupsGet(orgid);
        // TODO: test validations
    }

    /**
     * Get user group
     *
     * Returns single User Group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orgunitsOrgidUsergroupsGroupidGetTest() throws ApiException {
        Long orgid = null;
        Long groupid = null;
        UserGroup response = api.orgunitsOrgidUsergroupsGroupidGet(orgid, groupid);
        // TODO: test validations
    }

    /**
     * List of all users in group.
     *
     * Returns a list of all members in User Groups that are based on the Global Group with this groupid. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orgunitsOrgidUsergroupsGroupidMembersGetTest() throws ApiException {
        Long orgid = null;
        Long groupid = null;
        List<User> response = api.orgunitsOrgidUsergroupsGroupidMembersGet(orgid, groupid);
        // TODO: test validations
    }

    /**
     * Add user group member.
     *
     * Adds a user to user group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orgunitsOrgidUsergroupsGroupidMembersPostTest() throws ApiException {
        Long orgid = null;
        Long groupid = null;
        AddUserGroupMember body = null;
        UserId response = api.orgunitsOrgidUsergroupsGroupidMembersPost(orgid, groupid, body);
        // TODO: test validations
    }

    /**
     * Remove user group member.
     *
     * Removes a user from a user group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orgunitsOrgidUsergroupsGroupidMembersUuidDeleteTest() throws ApiException {
        Long orgid = null;
        Long groupid = null;
        UUID uuid = null;
        api.orgunitsOrgidUsergroupsGroupidMembersUuidDelete(orgid, groupid, uuid);
        // TODO: test validations
    }

    /**
     * Create a User Group.
     *
     * Create a User Group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orgunitsOrgidUsergroupsPostTest() throws ApiException {
        Long orgid = null;
        AddUserGroup body = null;
        List<GroupId> response = api.orgunitsOrgidUsergroupsPost(orgid, body);
        // TODO: test validations
    }

}
