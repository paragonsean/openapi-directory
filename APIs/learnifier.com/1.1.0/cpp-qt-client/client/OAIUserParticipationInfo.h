/**
 * Learnifier
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserParticipationInfo.h
 *
 * 
 */

#ifndef OAIUserParticipationInfo_H
#define OAIUserParticipationInfo_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserParticipationInfo : public OAIObject {
public:
    OAIUserParticipationInfo();
    OAIUserParticipationInfo(QString json);
    ~OAIUserParticipationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessLink() const;
    void setAccessLink(const QString &access_link);
    bool is_access_link_Set() const;
    bool is_access_link_Valid() const;

    bool isActivated() const;
    void setActivated(const bool &activated);
    bool is_activated_Set() const;
    bool is_activated_Valid() const;

    double getActivitiesCompleted() const;
    void setActivitiesCompleted(const double &activities_completed);
    bool is_activities_completed_Set() const;
    bool is_activities_completed_Valid() const;

    double getActivitiesTotal() const;
    void setActivitiesTotal(const double &activities_total);
    bool is_activities_total_Set() const;
    bool is_activities_total_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QDateTime getExpiration() const;
    void setExpiration(const QDateTime &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    QString getExternalId() const;
    void setExternalId(const QString &external_id);
    bool is_external_id_Set() const;
    bool is_external_id_Valid() const;

    QDateTime getFirstAccess() const;
    void setFirstAccess(const QDateTime &first_access);
    bool is_first_access_Set() const;
    bool is_first_access_Valid() const;

    QDateTime getFirstActivation() const;
    void setFirstActivation(const QDateTime &first_activation);
    bool is_first_activation_Set() const;
    bool is_first_activation_Valid() const;

    QDateTime getFirstMail() const;
    void setFirstMail(const QDateTime &first_mail);
    bool is_first_mail_Set() const;
    bool is_first_mail_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isInError() const;
    void setInError(const bool &in_error);
    bool is_in_error_Set() const;
    bool is_in_error_Valid() const;

    QDateTime getLastAccess() const;
    void setLastAccess(const QDateTime &last_access);
    bool is_last_access_Set() const;
    bool is_last_access_Valid() const;

    QDateTime getLastActivation() const;
    void setLastActivation(const QDateTime &last_activation);
    bool is_last_activation_Set() const;
    bool is_last_activation_Valid() const;

    QDateTime getLastMail() const;
    void setLastMail(const QDateTime &last_mail);
    bool is_last_mail_Set() const;
    bool is_last_mail_Valid() const;

    qint64 getProjectId() const;
    void setProjectId(const qint64 &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getProjectName() const;
    void setProjectName(const QString &project_name);
    bool is_project_name_Set() const;
    bool is_project_name_Valid() const;

    qint64 getProjectOrgId() const;
    void setProjectOrgId(const qint64 &project_org_id);
    bool is_project_org_id_Set() const;
    bool is_project_org_id_Valid() const;

    QString getProjectStatus() const;
    void setProjectStatus(const QString &project_status);
    bool is_project_status_Set() const;
    bool is_project_status_Valid() const;

    QString getProjectThumbnail() const;
    void setProjectThumbnail(const QString &project_thumbnail);
    bool is_project_thumbnail_Set() const;
    bool is_project_thumbnail_Valid() const;

    QString getProjectUserTitle() const;
    void setProjectUserTitle(const QString &project_user_title);
    bool is_project_user_title_Set() const;
    bool is_project_user_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_link;
    bool m_access_link_isSet;
    bool m_access_link_isValid;

    bool m_activated;
    bool m_activated_isSet;
    bool m_activated_isValid;

    double m_activities_completed;
    bool m_activities_completed_isSet;
    bool m_activities_completed_isValid;

    double m_activities_total;
    bool m_activities_total_isSet;
    bool m_activities_total_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QDateTime m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    QString m_external_id;
    bool m_external_id_isSet;
    bool m_external_id_isValid;

    QDateTime m_first_access;
    bool m_first_access_isSet;
    bool m_first_access_isValid;

    QDateTime m_first_activation;
    bool m_first_activation_isSet;
    bool m_first_activation_isValid;

    QDateTime m_first_mail;
    bool m_first_mail_isSet;
    bool m_first_mail_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_in_error;
    bool m_in_error_isSet;
    bool m_in_error_isValid;

    QDateTime m_last_access;
    bool m_last_access_isSet;
    bool m_last_access_isValid;

    QDateTime m_last_activation;
    bool m_last_activation_isSet;
    bool m_last_activation_isValid;

    QDateTime m_last_mail;
    bool m_last_mail_isSet;
    bool m_last_mail_isValid;

    qint64 m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_project_name;
    bool m_project_name_isSet;
    bool m_project_name_isValid;

    qint64 m_project_org_id;
    bool m_project_org_id_isSet;
    bool m_project_org_id_isValid;

    QString m_project_status;
    bool m_project_status_isSet;
    bool m_project_status_isValid;

    QString m_project_thumbnail;
    bool m_project_thumbnail_isSet;
    bool m_project_thumbnail_isValid;

    QString m_project_user_title;
    bool m_project_user_title_isSet;
    bool m_project_user_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserParticipationInfo)

#endif // OAIUserParticipationInfo_H
