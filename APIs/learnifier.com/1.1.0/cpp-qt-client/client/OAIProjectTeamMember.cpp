/**
 * Learnifier
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectTeamMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectTeamMember::OAIProjectTeamMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectTeamMember::OAIProjectTeamMember() {
    this->initializeModel();
}

OAIProjectTeamMember::~OAIProjectTeamMember() {}

void OAIProjectTeamMember::initializeModel() {

    m_roles_isSet = false;
    m_roles_isValid = false;

    m_userid_isSet = false;
    m_userid_isValid = false;
}

void OAIProjectTeamMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectTeamMember::fromJsonObject(QJsonObject json) {

    m_roles_isValid = ::OpenAPI::fromJsonValue(m_roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;

    m_userid_isValid = ::OpenAPI::fromJsonValue(m_userid, json[QString("userid")]);
    m_userid_isSet = !json[QString("userid")].isNull() && m_userid_isValid;
}

QString OAIProjectTeamMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectTeamMember::asJsonObject() const {
    QJsonObject obj;
    if (m_roles.isSet()) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(m_roles));
    }
    if (m_userid_isSet) {
        obj.insert(QString("userid"), ::OpenAPI::toJsonValue(m_userid));
    }
    return obj;
}

OAITeamRole OAIProjectTeamMember::getRoles() const {
    return m_roles;
}
void OAIProjectTeamMember::setRoles(const OAITeamRole &roles) {
    m_roles = roles;
    m_roles_isSet = true;
}

bool OAIProjectTeamMember::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIProjectTeamMember::is_roles_Valid() const{
    return m_roles_isValid;
}

QString OAIProjectTeamMember::getUserid() const {
    return m_userid;
}
void OAIProjectTeamMember::setUserid(const QString &userid) {
    m_userid = userid;
    m_userid_isSet = true;
}

bool OAIProjectTeamMember::is_userid_Set() const{
    return m_userid_isSet;
}

bool OAIProjectTeamMember::is_userid_Valid() const{
    return m_userid_isValid;
}

bool OAIProjectTeamMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_roles.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_userid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectTeamMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
