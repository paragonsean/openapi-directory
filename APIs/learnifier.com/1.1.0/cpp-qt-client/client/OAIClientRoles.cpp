/**
 * Learnifier
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientRoles.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientRoles::OAIClientRoles(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientRoles::OAIClientRoles() {
    this->initializeModel();
}

OAIClientRoles::~OAIClientRoles() {}

void OAIClientRoles::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_roles_isSet = false;
    m_roles_isValid = false;
}

void OAIClientRoles::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientRoles::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_roles_isValid = ::OpenAPI::fromJsonValue(m_roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;
}

QString OAIClientRoles::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientRoles::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_roles.size() > 0) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(m_roles));
    }
    return obj;
}

QString OAIClientRoles::getId() const {
    return m_id;
}
void OAIClientRoles::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIClientRoles::is_id_Set() const{
    return m_id_isSet;
}

bool OAIClientRoles::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIClientRole> OAIClientRoles::getRoles() const {
    return m_roles;
}
void OAIClientRoles::setRoles(const QList<OAIClientRole> &roles) {
    m_roles = roles;
    m_roles_isSet = true;
}

bool OAIClientRoles::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIClientRoles::is_roles_Valid() const{
    return m_roles_isValid;
}

bool OAIClientRoles::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientRoles::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
