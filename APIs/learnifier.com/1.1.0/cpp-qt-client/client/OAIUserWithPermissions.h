/**
 * Learnifier
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserWithPermissions.h
 *
 * 
 */

#ifndef OAIUserWithPermissions_H
#define OAIUserWithPermissions_H

#include <QJsonObject>

#include "OAIBackOfficeRole.h"
#include "OAIClientRoles.h"
#include "OAIUserPreferences.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserPreferences;
class OAIBackOfficeRole;
class OAIClientRoles;

class OAIUserWithPermissions : public OAIObject {
public:
    OAIUserWithPermissions();
    OAIUserWithPermissions(QString json);
    ~OAIUserWithPermissions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAuthorizationPossible() const;
    void setAuthorizationPossible(const bool &authorization_possible);
    bool is_authorization_possible_Set() const;
    bool is_authorization_possible_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getExternalId() const;
    void setExternalId(const QString &external_id);
    bool is_external_id_Set() const;
    bool is_external_id_Valid() const;

    QDateTime getFirstLogin() const;
    void setFirstLogin(const QDateTime &first_login);
    bool is_first_login_Set() const;
    bool is_first_login_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    bool isHardLock() const;
    void setHardLock(const bool &hard_lock);
    bool is_hard_lock_Set() const;
    bool is_hard_lock_Valid() const;

    qint64 getHomeOrg() const;
    void setHomeOrg(const qint64 &home_org);
    bool is_home_org_Set() const;
    bool is_home_org_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastLogin() const;
    void setLastLogin(const QDateTime &last_login);
    bool is_last_login_Set() const;
    bool is_last_login_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    OAIUserPreferences getPrefs() const;
    void setPrefs(const OAIUserPreferences &prefs);
    bool is_prefs_Set() const;
    bool is_prefs_Valid() const;

    QString getPrimaryEmail() const;
    void setPrimaryEmail(const QString &primary_email);
    bool is_primary_email_Set() const;
    bool is_primary_email_Valid() const;

    QList<OAIBackOfficeRole> getBackOfficeRoles() const;
    void setBackOfficeRoles(const QList<OAIBackOfficeRole> &back_office_roles);
    bool is_back_office_roles_Set() const;
    bool is_back_office_roles_Valid() const;

    QList<OAIClientRoles> getClientRoles() const;
    void setClientRoles(const QList<OAIClientRoles> &client_roles);
    bool is_client_roles_Set() const;
    bool is_client_roles_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_authorization_possible;
    bool m_authorization_possible_isSet;
    bool m_authorization_possible_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_external_id;
    bool m_external_id_isSet;
    bool m_external_id_isValid;

    QDateTime m_first_login;
    bool m_first_login_isSet;
    bool m_first_login_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    bool m_hard_lock;
    bool m_hard_lock_isSet;
    bool m_hard_lock_isValid;

    qint64 m_home_org;
    bool m_home_org_isSet;
    bool m_home_org_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_login;
    bool m_last_login_isSet;
    bool m_last_login_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    OAIUserPreferences m_prefs;
    bool m_prefs_isSet;
    bool m_prefs_isValid;

    QString m_primary_email;
    bool m_primary_email_isSet;
    bool m_primary_email_isValid;

    QList<OAIBackOfficeRole> m_back_office_roles;
    bool m_back_office_roles_isSet;
    bool m_back_office_roles_isValid;

    QList<OAIClientRoles> m_client_roles;
    bool m_client_roles_isSet;
    bool m_client_roles_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserWithPermissions)

#endif // OAIUserWithPermissions_H
