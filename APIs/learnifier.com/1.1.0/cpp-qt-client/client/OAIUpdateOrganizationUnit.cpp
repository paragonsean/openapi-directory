/**
 * Learnifier
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateOrganizationUnit.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateOrganizationUnit::OAIUpdateOrganizationUnit(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateOrganizationUnit::OAIUpdateOrganizationUnit() {
    this->initializeModel();
}

OAIUpdateOrganizationUnit::~OAIUpdateOrganizationUnit() {}

void OAIUpdateOrganizationUnit::initializeModel() {

    m_caller_isSet = false;
    m_caller_isValid = false;

    m_client_number_isSet = false;
    m_client_number_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;
}

void OAIUpdateOrganizationUnit::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateOrganizationUnit::fromJsonObject(QJsonObject json) {

    m_caller_isValid = ::OpenAPI::fromJsonValue(m_caller, json[QString("caller")]);
    m_caller_isSet = !json[QString("caller")].isNull() && m_caller_isValid;

    m_client_number_isValid = ::OpenAPI::fromJsonValue(m_client_number, json[QString("clientNumber")]);
    m_client_number_isSet = !json[QString("clientNumber")].isNull() && m_client_number_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("externalId")]);
    m_external_id_isSet = !json[QString("externalId")].isNull() && m_external_id_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;
}

QString OAIUpdateOrganizationUnit::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateOrganizationUnit::asJsonObject() const {
    QJsonObject obj;
    if (m_caller_isSet) {
        obj.insert(QString("caller"), ::OpenAPI::toJsonValue(m_caller));
    }
    if (m_client_number_isSet) {
        obj.insert(QString("clientNumber"), ::OpenAPI::toJsonValue(m_client_number));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("externalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    return obj;
}

QString OAIUpdateOrganizationUnit::getCaller() const {
    return m_caller;
}
void OAIUpdateOrganizationUnit::setCaller(const QString &caller) {
    m_caller = caller;
    m_caller_isSet = true;
}

bool OAIUpdateOrganizationUnit::is_caller_Set() const{
    return m_caller_isSet;
}

bool OAIUpdateOrganizationUnit::is_caller_Valid() const{
    return m_caller_isValid;
}

QString OAIUpdateOrganizationUnit::getClientNumber() const {
    return m_client_number;
}
void OAIUpdateOrganizationUnit::setClientNumber(const QString &client_number) {
    m_client_number = client_number;
    m_client_number_isSet = true;
}

bool OAIUpdateOrganizationUnit::is_client_number_Set() const{
    return m_client_number_isSet;
}

bool OAIUpdateOrganizationUnit::is_client_number_Valid() const{
    return m_client_number_isValid;
}

QString OAIUpdateOrganizationUnit::getCountry() const {
    return m_country;
}
void OAIUpdateOrganizationUnit::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIUpdateOrganizationUnit::is_country_Set() const{
    return m_country_isSet;
}

bool OAIUpdateOrganizationUnit::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIUpdateOrganizationUnit::getDisplayName() const {
    return m_display_name;
}
void OAIUpdateOrganizationUnit::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIUpdateOrganizationUnit::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIUpdateOrganizationUnit::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIUpdateOrganizationUnit::getExternalId() const {
    return m_external_id;
}
void OAIUpdateOrganizationUnit::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIUpdateOrganizationUnit::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIUpdateOrganizationUnit::is_external_id_Valid() const{
    return m_external_id_isValid;
}

double OAIUpdateOrganizationUnit::getParent() const {
    return m_parent;
}
void OAIUpdateOrganizationUnit::setParent(const double &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIUpdateOrganizationUnit::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIUpdateOrganizationUnit::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAIUpdateOrganizationUnit::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_caller_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateOrganizationUnit::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
