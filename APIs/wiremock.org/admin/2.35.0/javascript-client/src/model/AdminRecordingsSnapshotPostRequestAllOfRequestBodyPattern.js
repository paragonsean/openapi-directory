/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf from './AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf';
import AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1 from './AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1';
import AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2 from './AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2';
import AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3 from './AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3';

/**
 * The AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern model module.
 * @module model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern
 * @version 2.35.0
 */
class AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern {
    /**
     * Constructs a new <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern</code>.
     * Control the request body matcher used in generated stub mappings
     * @alias module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern
     * @param {(module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3)} instance The actual instance to initialize AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf.validateJSON(instance); // throw an exception if no match
                // create AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf from JS object
                this.actualInstance = AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf
            errorMessages.push("Failed to construct AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf: " + err)
        }

        try {
            if (typeof instance === "AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1.validateJSON(instance); // throw an exception if no match
                // create AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1 from JS object
                this.actualInstance = AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1
            errorMessages.push("Failed to construct AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1: " + err)
        }

        try {
            if (typeof instance === "AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2.validateJSON(instance); // throw an exception if no match
                // create AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2 from JS object
                this.actualInstance = AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2
            errorMessages.push("Failed to construct AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2: " + err)
        }

        try {
            if (typeof instance === "AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3.validateJSON(instance); // throw an exception if no match
                // create AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3 from JS object
                this.actualInstance = AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3
            errorMessages.push("Failed to construct AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern` with oneOf schemas AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf, AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1, AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2, AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern` with oneOf schemas AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf, AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1, AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2, AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern} obj Optional instance to populate.
     * @return {module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern} The populated <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern</code> instance.
     */
    static constructFromObject(data, obj) {
        return new AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern(data);
    }

    /**
     * Gets the actual instance, which can be <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf</code>, <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1</code>, <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2</code>, <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3</code>.
     * @return {(module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf</code>, <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1</code>, <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2</code>, <code>AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3</code>.
     * @param {(module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2|module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern} An instance of AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.
     */
    static fromJSON = function(json_string){
        return AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Match body using case-insensitive string comparison
 * @member {Boolean} caseInsensitive
 * @default false
 */
AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.prototype['caseInsensitive'] = false;

/**
 * Ignore order of array elements
 * @member {Boolean} ignoreArrayOrder
 * @default true
 */
AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.prototype['ignoreArrayOrder'] = true;

/**
 * Ignore extra elements in objects
 * @member {Boolean} ignoreExtraElements
 * @default true
 */
AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.prototype['ignoreExtraElements'] = true;

/**
 * @member {module:model/AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.MatcherEnum} matcher
 */
AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.prototype['matcher'] = undefined;


AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern.OneOf = ["AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf", "AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf1", "AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf2", "AdminRecordingsSnapshotPostRequestAllOfRequestBodyPatternOneOf3"];

export default AdminRecordingsSnapshotPostRequestAllOfRequestBodyPattern;

