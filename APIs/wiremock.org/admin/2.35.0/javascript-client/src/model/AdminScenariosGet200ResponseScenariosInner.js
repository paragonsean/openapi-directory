/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdminScenariosGet200ResponseScenariosInner model module.
 * @module model/AdminScenariosGet200ResponseScenariosInner
 * @version 2.35.0
 */
class AdminScenariosGet200ResponseScenariosInner {
    /**
     * Constructs a new <code>AdminScenariosGet200ResponseScenariosInner</code>.
     * @alias module:model/AdminScenariosGet200ResponseScenariosInner
     */
    constructor() { 
        
        AdminScenariosGet200ResponseScenariosInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['state'] = 'Started';
    }

    /**
     * Constructs a <code>AdminScenariosGet200ResponseScenariosInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminScenariosGet200ResponseScenariosInner} obj Optional instance to populate.
     * @return {module:model/AdminScenariosGet200ResponseScenariosInner} The populated <code>AdminScenariosGet200ResponseScenariosInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminScenariosGet200ResponseScenariosInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('possibleStates')) {
                obj['possibleStates'] = ApiClient.convertToType(data['possibleStates'], ['String']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminScenariosGet200ResponseScenariosInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminScenariosGet200ResponseScenariosInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['possibleStates'])) {
            throw new Error("Expected the field `possibleStates` to be an array in the JSON data but got " + data['possibleStates']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The scenario ID
 * @member {String} id
 */
AdminScenariosGet200ResponseScenariosInner.prototype['id'] = undefined;

/**
 * The scenario name
 * @member {String} name
 */
AdminScenariosGet200ResponseScenariosInner.prototype['name'] = undefined;

/**
 * @member {Array.<String>} possibleStates
 */
AdminScenariosGet200ResponseScenariosInner.prototype['possibleStates'] = undefined;

/**
 * The current state of this scenario
 * @member {String} state
 * @default 'Started'
 */
AdminScenariosGet200ResponseScenariosInner.prototype['state'] = 'Started';






export default AdminScenariosGet200ResponseScenariosInner;

