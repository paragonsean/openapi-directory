/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdminNearMissesRequestPostRequest model module.
 * @module model/AdminNearMissesRequestPostRequest
 * @version 2.35.0
 */
class AdminNearMissesRequestPostRequest {
    /**
     * Constructs a new <code>AdminNearMissesRequestPostRequest</code>.
     * @alias module:model/AdminNearMissesRequestPostRequest
     */
    constructor() { 
        
        AdminNearMissesRequestPostRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdminNearMissesRequestPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminNearMissesRequestPostRequest} obj Optional instance to populate.
     * @return {module:model/AdminNearMissesRequestPostRequest} The populated <code>AdminNearMissesRequestPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminNearMissesRequestPostRequest();

            if (data.hasOwnProperty('absoluteUrl')) {
                obj['absoluteUrl'] = ApiClient.convertToType(data['absoluteUrl'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('cookies')) {
                obj['cookies'] = ApiClient.convertToType(data['cookies'], Object);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], Object);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminNearMissesRequestPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminNearMissesRequestPostRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['absoluteUrl'] && !(typeof data['absoluteUrl'] === 'string' || data['absoluteUrl'] instanceof String)) {
            throw new Error("Expected the field `absoluteUrl` to be a primitive type in the JSON string but got " + data['absoluteUrl']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The full URL to match against
 * @member {String} absoluteUrl
 */
AdminNearMissesRequestPostRequest.prototype['absoluteUrl'] = undefined;

/**
 * Body string to match against
 * @member {String} body
 */
AdminNearMissesRequestPostRequest.prototype['body'] = undefined;

/**
 * Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form
 * @member {Object} cookies
 */
AdminNearMissesRequestPostRequest.prototype['cookies'] = undefined;

/**
 * Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form
 * @member {Object} headers
 */
AdminNearMissesRequestPostRequest.prototype['headers'] = undefined;

/**
 * The HTTP request method
 * @member {String} method
 */
AdminNearMissesRequestPostRequest.prototype['method'] = undefined;

/**
 * The path and query to match exactly against
 * @member {String} url
 */
AdminNearMissesRequestPostRequest.prototype['url'] = undefined;






export default AdminNearMissesRequestPostRequest;

