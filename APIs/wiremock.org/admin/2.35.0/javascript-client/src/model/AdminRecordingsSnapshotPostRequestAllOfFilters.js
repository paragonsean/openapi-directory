/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdminMappingsGet200ResponseMappingsInnerRequestBasicAuthCredentials from './AdminMappingsGet200ResponseMappingsInnerRequestBasicAuthCredentials';

/**
 * The AdminRecordingsSnapshotPostRequestAllOfFilters model module.
 * @module model/AdminRecordingsSnapshotPostRequestAllOfFilters
 * @version 2.35.0
 */
class AdminRecordingsSnapshotPostRequestAllOfFilters {
    /**
     * Constructs a new <code>AdminRecordingsSnapshotPostRequestAllOfFilters</code>.
     * @alias module:model/AdminRecordingsSnapshotPostRequestAllOfFilters
     */
    constructor() { 
        
        AdminRecordingsSnapshotPostRequestAllOfFilters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdminRecordingsSnapshotPostRequestAllOfFilters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminRecordingsSnapshotPostRequestAllOfFilters} obj Optional instance to populate.
     * @return {module:model/AdminRecordingsSnapshotPostRequestAllOfFilters} The populated <code>AdminRecordingsSnapshotPostRequestAllOfFilters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminRecordingsSnapshotPostRequestAllOfFilters();

            if (data.hasOwnProperty('ids')) {
                obj['ids'] = ApiClient.convertToType(data['ids'], ['String']);
            }
            if (data.hasOwnProperty('basicAuthCredentials')) {
                obj['basicAuthCredentials'] = AdminMappingsGet200ResponseMappingsInnerRequestBasicAuthCredentials.constructFromObject(data['basicAuthCredentials']);
            }
            if (data.hasOwnProperty('bodyPatterns')) {
                obj['bodyPatterns'] = ApiClient.convertToType(data['bodyPatterns'], [Object]);
            }
            if (data.hasOwnProperty('cookies')) {
                obj['cookies'] = ApiClient.convertToType(data['cookies'], Object);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], Object);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('queryParameters')) {
                obj['queryParameters'] = ApiClient.convertToType(data['queryParameters'], Object);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('urlPath')) {
                obj['urlPath'] = ApiClient.convertToType(data['urlPath'], 'String');
            }
            if (data.hasOwnProperty('urlPathPattern')) {
                obj['urlPathPattern'] = ApiClient.convertToType(data['urlPathPattern'], 'String');
            }
            if (data.hasOwnProperty('urlPattern')) {
                obj['urlPattern'] = ApiClient.convertToType(data['urlPattern'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminRecordingsSnapshotPostRequestAllOfFilters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminRecordingsSnapshotPostRequestAllOfFilters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['ids'])) {
            throw new Error("Expected the field `ids` to be an array in the JSON data but got " + data['ids']);
        }
        // validate the optional field `basicAuthCredentials`
        if (data['basicAuthCredentials']) { // data not null
          AdminMappingsGet200ResponseMappingsInnerRequestBasicAuthCredentials.validateJSON(data['basicAuthCredentials']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bodyPatterns'])) {
            throw new Error("Expected the field `bodyPatterns` to be an array in the JSON data but got " + data['bodyPatterns']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['urlPath'] && !(typeof data['urlPath'] === 'string' || data['urlPath'] instanceof String)) {
            throw new Error("Expected the field `urlPath` to be a primitive type in the JSON string but got " + data['urlPath']);
        }
        // ensure the json data is a string
        if (data['urlPathPattern'] && !(typeof data['urlPathPattern'] === 'string' || data['urlPathPattern'] instanceof String)) {
            throw new Error("Expected the field `urlPathPattern` to be a primitive type in the JSON string but got " + data['urlPathPattern']);
        }
        // ensure the json data is a string
        if (data['urlPattern'] && !(typeof data['urlPattern'] === 'string' || data['urlPattern'] instanceof String)) {
            throw new Error("Expected the field `urlPattern` to be a primitive type in the JSON string but got " + data['urlPattern']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} ids
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['ids'] = undefined;

/**
 * @member {module:model/AdminMappingsGet200ResponseMappingsInnerRequestBasicAuthCredentials} basicAuthCredentials
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['basicAuthCredentials'] = undefined;

/**
 * Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form
 * @member {Array.<Object>} bodyPatterns
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['bodyPatterns'] = undefined;

/**
 * Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form
 * @member {Object} cookies
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['cookies'] = undefined;

/**
 * Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form
 * @member {Object} headers
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['headers'] = undefined;

/**
 * The HTTP request method e.g. GET
 * @member {String} method
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['method'] = undefined;

/**
 * Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form
 * @member {Object} queryParameters
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['queryParameters'] = undefined;

/**
 * The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
 * @member {String} url
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['url'] = undefined;

/**
 * The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
 * @member {String} urlPath
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['urlPath'] = undefined;

/**
 * The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
 * @member {String} urlPathPattern
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['urlPathPattern'] = undefined;

/**
 * The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
 * @member {String} urlPattern
 */
AdminRecordingsSnapshotPostRequestAllOfFilters.prototype['urlPattern'] = undefined;






export default AdminRecordingsSnapshotPostRequestAllOfFilters;

