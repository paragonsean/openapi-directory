/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WireMock);
  }
}(this, function(expect, WireMock) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WireMock.StubMappingsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StubMappingsApi', function() {
    describe('adminMappingsDelete', function() {
      it('should call adminMappingsDelete successfully', function(done) {
        //uncomment below and update the code to test adminMappingsDelete
        //instance.adminMappingsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsFindByMetadataPost', function() {
      it('should call adminMappingsFindByMetadataPost successfully', function(done) {
        //uncomment below and update the code to test adminMappingsFindByMetadataPost
        //instance.adminMappingsFindByMetadataPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsGet', function() {
      it('should call adminMappingsGet successfully', function(done) {
        //uncomment below and update the code to test adminMappingsGet
        //instance.adminMappingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsImportPost', function() {
      it('should call adminMappingsImportPost successfully', function(done) {
        //uncomment below and update the code to test adminMappingsImportPost
        //instance.adminMappingsImportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsPost', function() {
      it('should call adminMappingsPost successfully', function(done) {
        //uncomment below and update the code to test adminMappingsPost
        //instance.adminMappingsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsRemoveByMetadataPost', function() {
      it('should call adminMappingsRemoveByMetadataPost successfully', function(done) {
        //uncomment below and update the code to test adminMappingsRemoveByMetadataPost
        //instance.adminMappingsRemoveByMetadataPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsResetPost', function() {
      it('should call adminMappingsResetPost successfully', function(done) {
        //uncomment below and update the code to test adminMappingsResetPost
        //instance.adminMappingsResetPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsSavePost', function() {
      it('should call adminMappingsSavePost successfully', function(done) {
        //uncomment below and update the code to test adminMappingsSavePost
        //instance.adminMappingsSavePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsStubMappingIdDelete', function() {
      it('should call adminMappingsStubMappingIdDelete successfully', function(done) {
        //uncomment below and update the code to test adminMappingsStubMappingIdDelete
        //instance.adminMappingsStubMappingIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsStubMappingIdGet', function() {
      it('should call adminMappingsStubMappingIdGet successfully', function(done) {
        //uncomment below and update the code to test adminMappingsStubMappingIdGet
        //instance.adminMappingsStubMappingIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminMappingsStubMappingIdPut', function() {
      it('should call adminMappingsStubMappingIdPut successfully', function(done) {
        //uncomment below and update the code to test adminMappingsStubMappingIdPut
        //instance.adminMappingsStubMappingIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
