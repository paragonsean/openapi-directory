/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WireMock);
  }
}(this, function(expect, WireMock) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AdminMappingsGet200ResponseMappingsInnerResponse', function() {
    it('should create an instance of AdminMappingsGet200ResponseMappingsInnerResponse', function() {
      // uncomment below and update the code to test AdminMappingsGet200ResponseMappingsInnerResponse
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be.a(WireMock.AdminMappingsGet200ResponseMappingsInnerResponse);
    });

    it('should have the property additionalProxyRequestHeaders (base name: "additionalProxyRequestHeaders")', function() {
      // uncomment below and update the code to test the property additionalProxyRequestHeaders
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property base64Body (base name: "base64Body")', function() {
      // uncomment below and update the code to test the property base64Body
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property bodyFileName (base name: "bodyFileName")', function() {
      // uncomment below and update the code to test the property bodyFileName
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property delayDistribution (base name: "delayDistribution")', function() {
      // uncomment below and update the code to test the property delayDistribution
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property fault (base name: "fault")', function() {
      // uncomment below and update the code to test the property fault
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property fixedDelayMilliseconds (base name: "fixedDelayMilliseconds")', function() {
      // uncomment below and update the code to test the property fixedDelayMilliseconds
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property fromConfiguredStub (base name: "fromConfiguredStub")', function() {
      // uncomment below and update the code to test the property fromConfiguredStub
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property headers (base name: "headers")', function() {
      // uncomment below and update the code to test the property headers
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property jsonBody (base name: "jsonBody")', function() {
      // uncomment below and update the code to test the property jsonBody
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property proxyBaseUrl (base name: "proxyBaseUrl")', function() {
      // uncomment below and update the code to test the property proxyBaseUrl
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property statusMessage (base name: "statusMessage")', function() {
      // uncomment below and update the code to test the property statusMessage
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property transformerParameters (base name: "transformerParameters")', function() {
      // uncomment below and update the code to test the property transformerParameters
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

    it('should have the property transformers (base name: "transformers")', function() {
      // uncomment below and update the code to test the property transformers
      //var instance = new WireMock.AdminMappingsGet200ResponseMappingsInnerResponse();
      //expect(instance).to.be();
    });

  });

}));
