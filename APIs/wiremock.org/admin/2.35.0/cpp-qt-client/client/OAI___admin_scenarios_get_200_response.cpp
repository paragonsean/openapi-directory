/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI___admin_scenarios_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI___admin_scenarios_get_200_response::OAI___admin_scenarios_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI___admin_scenarios_get_200_response::OAI___admin_scenarios_get_200_response() {
    this->initializeModel();
}

OAI___admin_scenarios_get_200_response::~OAI___admin_scenarios_get_200_response() {}

void OAI___admin_scenarios_get_200_response::initializeModel() {

    m_scenarios_isSet = false;
    m_scenarios_isValid = false;
}

void OAI___admin_scenarios_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI___admin_scenarios_get_200_response::fromJsonObject(QJsonObject json) {

    m_scenarios_isValid = ::OpenAPI::fromJsonValue(m_scenarios, json[QString("scenarios")]);
    m_scenarios_isSet = !json[QString("scenarios")].isNull() && m_scenarios_isValid;
}

QString OAI___admin_scenarios_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI___admin_scenarios_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_scenarios.size() > 0) {
        obj.insert(QString("scenarios"), ::OpenAPI::toJsonValue(m_scenarios));
    }
    return obj;
}

QList<OAI___admin_scenarios_get_200_response_scenarios_inner> OAI___admin_scenarios_get_200_response::getScenarios() const {
    return m_scenarios;
}
void OAI___admin_scenarios_get_200_response::setScenarios(const QList<OAI___admin_scenarios_get_200_response_scenarios_inner> &scenarios) {
    m_scenarios = scenarios;
    m_scenarios_isSet = true;
}

bool OAI___admin_scenarios_get_200_response::is_scenarios_Set() const{
    return m_scenarios_isSet;
}

bool OAI___admin_scenarios_get_200_response::is_scenarios_Valid() const{
    return m_scenarios_isValid;
}

bool OAI___admin_scenarios_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scenarios.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI___admin_scenarios_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
