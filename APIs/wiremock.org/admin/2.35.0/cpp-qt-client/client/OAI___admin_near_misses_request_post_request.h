/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI___admin_near_misses_request_post_request.h
 *
 * 
 */

#ifndef OAI___admin_near_misses_request_post_request_H
#define OAI___admin_near_misses_request_post_request_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI___admin_near_misses_request_post_request : public OAIObject {
public:
    OAI___admin_near_misses_request_post_request();
    OAI___admin_near_misses_request_post_request(QString json);
    ~OAI___admin_near_misses_request_post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbsoluteUrl() const;
    void setAbsoluteUrl(const QString &absolute_url);
    bool is_absolute_url_Set() const;
    bool is_absolute_url_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    OAIObject getCookies() const;
    void setCookies(const OAIObject &cookies);
    bool is_cookies_Set() const;
    bool is_cookies_Valid() const;

    OAIObject getHeaders() const;
    void setHeaders(const OAIObject &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_absolute_url;
    bool m_absolute_url_isSet;
    bool m_absolute_url_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    OAIObject m_cookies;
    bool m_cookies_isSet;
    bool m_cookies_isValid;

    OAIObject m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI___admin_near_misses_request_post_request)

#endif // OAI___admin_near_misses_request_post_request_H
