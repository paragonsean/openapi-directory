/**
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegular_expression_match.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegular_expression_match::OAIRegular_expression_match(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegular_expression_match::OAIRegular_expression_match() {
    this->initializeModel();
}

OAIRegular_expression_match::~OAIRegular_expression_match() {}

void OAIRegular_expression_match::initializeModel() {

    m_matches_isSet = false;
    m_matches_isValid = false;
}

void OAIRegular_expression_match::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegular_expression_match::fromJsonObject(QJsonObject json) {

    m_matches_isValid = ::OpenAPI::fromJsonValue(m_matches, json[QString("matches")]);
    m_matches_isSet = !json[QString("matches")].isNull() && m_matches_isValid;
}

QString OAIRegular_expression_match::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegular_expression_match::asJsonObject() const {
    QJsonObject obj;
    if (m_matches_isSet) {
        obj.insert(QString("matches"), ::OpenAPI::toJsonValue(m_matches));
    }
    return obj;
}

QString OAIRegular_expression_match::getMatches() const {
    return m_matches;
}
void OAIRegular_expression_match::setMatches(const QString &matches) {
    m_matches = matches;
    m_matches_isSet = true;
}

bool OAIRegular_expression_match::is_matches_Set() const{
    return m_matches_isSet;
}

bool OAIRegular_expression_match::is_matches_Valid() const{
    return m_matches_isValid;
}

bool OAIRegular_expression_match::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_matches_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegular_expression_match::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_matches_isValid && true;
}

} // namespace OpenAPI
