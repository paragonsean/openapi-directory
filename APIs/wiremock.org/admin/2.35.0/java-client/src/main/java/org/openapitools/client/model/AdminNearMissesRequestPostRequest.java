/*
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdminNearMissesRequestPostRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:37.160900-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdminNearMissesRequestPostRequest {
  public static final String SERIALIZED_NAME_ABSOLUTE_URL = "absoluteUrl";
  @SerializedName(SERIALIZED_NAME_ABSOLUTE_URL)
  private String absoluteUrl;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_COOKIES = "cookies";
  @SerializedName(SERIALIZED_NAME_COOKIES)
  private Object cookies;

  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private Object headers;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public AdminNearMissesRequestPostRequest() {
  }

  public AdminNearMissesRequestPostRequest absoluteUrl(String absoluteUrl) {
    this.absoluteUrl = absoluteUrl;
    return this;
  }

  /**
   * The full URL to match against
   * @return absoluteUrl
   */
  @javax.annotation.Nullable
  public String getAbsoluteUrl() {
    return absoluteUrl;
  }

  public void setAbsoluteUrl(String absoluteUrl) {
    this.absoluteUrl = absoluteUrl;
  }


  public AdminNearMissesRequestPostRequest body(String body) {
    this.body = body;
    return this;
  }

  /**
   * Body string to match against
   * @return body
   */
  @javax.annotation.Nullable
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  public AdminNearMissesRequestPostRequest cookies(Object cookies) {
    this.cookies = cookies;
    return this;
  }

  /**
   * Cookie patterns to match against in the &lt;key&gt;: { \&quot;&lt;predicate&gt;\&quot;: \&quot;&lt;value&gt;\&quot; } form
   * @return cookies
   */
  @javax.annotation.Nullable
  public Object getCookies() {
    return cookies;
  }

  public void setCookies(Object cookies) {
    this.cookies = cookies;
  }


  public AdminNearMissesRequestPostRequest headers(Object headers) {
    this.headers = headers;
    return this;
  }

  /**
   * Header patterns to match against in the &lt;key&gt;: { \&quot;&lt;predicate&gt;\&quot;: \&quot;&lt;value&gt;\&quot; } form
   * @return headers
   */
  @javax.annotation.Nullable
  public Object getHeaders() {
    return headers;
  }

  public void setHeaders(Object headers) {
    this.headers = headers;
  }


  public AdminNearMissesRequestPostRequest method(String method) {
    this.method = method;
    return this;
  }

  /**
   * The HTTP request method
   * @return method
   */
  @javax.annotation.Nullable
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }


  public AdminNearMissesRequestPostRequest url(String url) {
    this.url = url;
    return this;
  }

  /**
   * The path and query to match exactly against
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminNearMissesRequestPostRequest adminNearMissesRequestPostRequest = (AdminNearMissesRequestPostRequest) o;
    return Objects.equals(this.absoluteUrl, adminNearMissesRequestPostRequest.absoluteUrl) &&
        Objects.equals(this.body, adminNearMissesRequestPostRequest.body) &&
        Objects.equals(this.cookies, adminNearMissesRequestPostRequest.cookies) &&
        Objects.equals(this.headers, adminNearMissesRequestPostRequest.headers) &&
        Objects.equals(this.method, adminNearMissesRequestPostRequest.method) &&
        Objects.equals(this.url, adminNearMissesRequestPostRequest.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(absoluteUrl, body, cookies, headers, method, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminNearMissesRequestPostRequest {\n");
    sb.append("    absoluteUrl: ").append(toIndentedString(absoluteUrl)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    cookies: ").append(toIndentedString(cookies)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("absoluteUrl");
    openapiFields.add("body");
    openapiFields.add("cookies");
    openapiFields.add("headers");
    openapiFields.add("method");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdminNearMissesRequestPostRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdminNearMissesRequestPostRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdminNearMissesRequestPostRequest is not found in the empty JSON string", AdminNearMissesRequestPostRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdminNearMissesRequestPostRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdminNearMissesRequestPostRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("absoluteUrl") != null && !jsonObj.get("absoluteUrl").isJsonNull()) && !jsonObj.get("absoluteUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `absoluteUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("absoluteUrl").toString()));
      }
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if ((jsonObj.get("method") != null && !jsonObj.get("method").isJsonNull()) && !jsonObj.get("method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdminNearMissesRequestPostRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdminNearMissesRequestPostRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdminNearMissesRequestPostRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdminNearMissesRequestPostRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AdminNearMissesRequestPostRequest>() {
           @Override
           public void write(JsonWriter out, AdminNearMissesRequestPostRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdminNearMissesRequestPostRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdminNearMissesRequestPostRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdminNearMissesRequestPostRequest
   * @throws IOException if the JSON string is invalid with respect to AdminNearMissesRequestPostRequest
   */
  public static AdminNearMissesRequestPostRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdminNearMissesRequestPostRequest.class);
  }

  /**
   * Convert an instance of AdminNearMissesRequestPostRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

