/*
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AdminMappingsFindByMetadataPostRequest;
import org.openapitools.client.model.AdminMappingsGet200Response;
import org.openapitools.client.model.AdminMappingsGet200ResponseMappingsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StubMappingsApi
 */
@Disabled
public class StubMappingsApiTest {

    private final StubMappingsApi api = new StubMappingsApi();

    /**
     * Delete all stub mappings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsDeleteTest() throws ApiException {
        api.adminMappingsDelete();
        // TODO: test validations
    }

    /**
     * Find stubs by matching on their metadata
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsFindByMetadataPostTest() throws ApiException {
        AdminMappingsFindByMetadataPostRequest adminMappingsFindByMetadataPostRequest = null;
        AdminMappingsGet200Response response = api.adminMappingsFindByMetadataPost(adminMappingsFindByMetadataPostRequest);
        // TODO: test validations
    }

    /**
     * Get all stub mappings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsGetTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        AdminMappingsGet200Response response = api.adminMappingsGet(limit, offset);
        // TODO: test validations
    }

    /**
     * Import stub mappings
     *
     * Import given stub mappings to the backing store
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsImportPostTest() throws ApiException {
        api.adminMappingsImportPost();
        // TODO: test validations
    }

    /**
     * Create a new stub mapping
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsPostTest() throws ApiException {
        AdminMappingsGet200ResponseMappingsInner adminMappingsGet200ResponseMappingsInner = null;
        AdminMappingsGet200ResponseMappingsInner response = api.adminMappingsPost(adminMappingsGet200ResponseMappingsInner);
        // TODO: test validations
    }

    /**
     * Delete stub mappings matching metadata
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsRemoveByMetadataPostTest() throws ApiException {
        AdminMappingsFindByMetadataPostRequest adminMappingsFindByMetadataPostRequest = null;
        api.adminMappingsRemoveByMetadataPost(adminMappingsFindByMetadataPostRequest);
        // TODO: test validations
    }

    /**
     * Reset stub mappings
     *
     * Restores stub mappings to the defaults defined back in the backing store
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsResetPostTest() throws ApiException {
        api.adminMappingsResetPost();
        // TODO: test validations
    }

    /**
     * Persist stub mappings
     *
     * Save all persistent stub mappings to the backing store
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsSavePostTest() throws ApiException {
        api.adminMappingsSavePost();
        // TODO: test validations
    }

    /**
     * Delete a stub mapping
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsStubMappingIdDeleteTest() throws ApiException {
        String stubMappingId = null;
        api.adminMappingsStubMappingIdDelete(stubMappingId);
        // TODO: test validations
    }

    /**
     * Get stub mapping by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsStubMappingIdGetTest() throws ApiException {
        String stubMappingId = null;
        AdminMappingsGet200ResponseMappingsInner response = api.adminMappingsStubMappingIdGet(stubMappingId);
        // TODO: test validations
    }

    /**
     * Update a stub mapping
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminMappingsStubMappingIdPutTest() throws ApiException {
        String stubMappingId = null;
        AdminMappingsGet200ResponseMappingsInner adminMappingsGet200ResponseMappingsInner = null;
        AdminMappingsGet200ResponseMappingsInner response = api.adminMappingsStubMappingIdPut(stubMappingId, adminMappingsGet200ResponseMappingsInner);
        // TODO: test validations
    }

}
