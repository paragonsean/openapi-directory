/*
 * WireMock
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AdminMappingsFindByMetadataPostRequest;
import org.openapitools.client.model.AdminMappingsGet200ResponseMappingsInnerRequest;
import org.openapitools.client.model.AdminRequestsCountPost200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RequestsApi
 */
@Disabled
public class RequestsApiTest {

    private final RequestsApi api = new RequestsApi();

    /**
     * Count requests by criteria
     *
     * Count requests logged in the journal matching the specified criteria
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsCountPostTest() throws ApiException {
        AdminMappingsGet200ResponseMappingsInnerRequest adminMappingsGet200ResponseMappingsInnerRequest = null;
        AdminRequestsCountPost200Response response = api.adminRequestsCountPost(adminMappingsGet200ResponseMappingsInnerRequest);
        // TODO: test validations
    }

    /**
     * Delete all requests in journal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsDeleteTest() throws ApiException {
        api.adminRequestsDelete();
        // TODO: test validations
    }

    /**
     * Find requests by criteria
     *
     * Retrieve details of requests logged in the journal matching the specified criteria
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsFindPostTest() throws ApiException {
        AdminMappingsGet200ResponseMappingsInnerRequest adminMappingsGet200ResponseMappingsInnerRequest = null;
        api.adminRequestsFindPost(adminMappingsGet200ResponseMappingsInnerRequest);
        // TODO: test validations
    }

    /**
     * Get all requests in journal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsGetTest() throws ApiException {
        String limit = null;
        String since = null;
        api.adminRequestsGet(limit, since);
        // TODO: test validations
    }

    /**
     * Delete requests mappings matching metadata
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsRemoveByMetadataPostTest() throws ApiException {
        AdminMappingsFindByMetadataPostRequest adminMappingsFindByMetadataPostRequest = null;
        api.adminRequestsRemoveByMetadataPost(adminMappingsFindByMetadataPostRequest);
        // TODO: test validations
    }

    /**
     * Remove requests by criteria
     *
     * Removed requests logged in the journal matching the specified criteria
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsRemovePostTest() throws ApiException {
        AdminMappingsGet200ResponseMappingsInnerRequest adminMappingsGet200ResponseMappingsInnerRequest = null;
        api.adminRequestsRemovePost(adminMappingsGet200ResponseMappingsInnerRequest);
        // TODO: test validations
    }

    /**
     * Delete request by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsRequestIdDeleteTest() throws ApiException {
        String requestId = null;
        api.adminRequestsRequestIdDelete(requestId);
        // TODO: test validations
    }

    /**
     * Get request by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsRequestIdGetTest() throws ApiException {
        String requestId = null;
        api.adminRequestsRequestIdGet(requestId);
        // TODO: test validations
    }

    /**
     * Empty the request journal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsResetPostTest() throws ApiException {
        api.adminRequestsResetPost();
        // TODO: test validations
    }

    /**
     * Find unmatched requests
     *
     * Get details of logged requests that weren&#39;t matched by any stub mapping
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminRequestsUnmatchedGetTest() throws ApiException {
        api.adminRequestsUnmatchedGet();
        // TODO: test validations
    }

}
