# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdminNearMissesRequestPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, absolute_url: str=None, body: str=None, cookies: object=None, headers: object=None, method: str=None, url: str=None):
        """AdminNearMissesRequestPostRequest - a model defined in OpenAPI

        :param absolute_url: The absolute_url of this AdminNearMissesRequestPostRequest.
        :param body: The body of this AdminNearMissesRequestPostRequest.
        :param cookies: The cookies of this AdminNearMissesRequestPostRequest.
        :param headers: The headers of this AdminNearMissesRequestPostRequest.
        :param method: The method of this AdminNearMissesRequestPostRequest.
        :param url: The url of this AdminNearMissesRequestPostRequest.
        """
        self.openapi_types = {
            'absolute_url': str,
            'body': str,
            'cookies': object,
            'headers': object,
            'method': str,
            'url': str
        }

        self.attribute_map = {
            'absolute_url': 'absoluteUrl',
            'body': 'body',
            'cookies': 'cookies',
            'headers': 'headers',
            'method': 'method',
            'url': 'url'
        }

        self._absolute_url = absolute_url
        self._body = body
        self._cookies = cookies
        self._headers = headers
        self._method = method
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminNearMissesRequestPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ___admin_near_misses_request_post_request of this AdminNearMissesRequestPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def absolute_url(self):
        """Gets the absolute_url of this AdminNearMissesRequestPostRequest.

        The full URL to match against

        :return: The absolute_url of this AdminNearMissesRequestPostRequest.
        :rtype: str
        """
        return self._absolute_url

    @absolute_url.setter
    def absolute_url(self, absolute_url):
        """Sets the absolute_url of this AdminNearMissesRequestPostRequest.

        The full URL to match against

        :param absolute_url: The absolute_url of this AdminNearMissesRequestPostRequest.
        :type absolute_url: str
        """

        self._absolute_url = absolute_url

    @property
    def body(self):
        """Gets the body of this AdminNearMissesRequestPostRequest.

        Body string to match against

        :return: The body of this AdminNearMissesRequestPostRequest.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this AdminNearMissesRequestPostRequest.

        Body string to match against

        :param body: The body of this AdminNearMissesRequestPostRequest.
        :type body: str
        """

        self._body = body

    @property
    def cookies(self):
        """Gets the cookies of this AdminNearMissesRequestPostRequest.

        Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form

        :return: The cookies of this AdminNearMissesRequestPostRequest.
        :rtype: object
        """
        return self._cookies

    @cookies.setter
    def cookies(self, cookies):
        """Sets the cookies of this AdminNearMissesRequestPostRequest.

        Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form

        :param cookies: The cookies of this AdminNearMissesRequestPostRequest.
        :type cookies: object
        """

        self._cookies = cookies

    @property
    def headers(self):
        """Gets the headers of this AdminNearMissesRequestPostRequest.

        Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form

        :return: The headers of this AdminNearMissesRequestPostRequest.
        :rtype: object
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this AdminNearMissesRequestPostRequest.

        Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form

        :param headers: The headers of this AdminNearMissesRequestPostRequest.
        :type headers: object
        """

        self._headers = headers

    @property
    def method(self):
        """Gets the method of this AdminNearMissesRequestPostRequest.

        The HTTP request method

        :return: The method of this AdminNearMissesRequestPostRequest.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this AdminNearMissesRequestPostRequest.

        The HTTP request method

        :param method: The method of this AdminNearMissesRequestPostRequest.
        :type method: str
        """

        self._method = method

    @property
    def url(self):
        """Gets the url of this AdminNearMissesRequestPostRequest.

        The path and query to match exactly against

        :return: The url of this AdminNearMissesRequestPostRequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AdminNearMissesRequestPostRequest.

        The path and query to match exactly against

        :param url: The url of this AdminNearMissesRequestPostRequest.
        :type url: str
        """

        self._url = url
