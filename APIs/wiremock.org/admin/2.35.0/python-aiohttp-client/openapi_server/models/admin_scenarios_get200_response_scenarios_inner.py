# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdminScenariosGet200ResponseScenariosInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, possible_states: List[str]=None, state: str='Started'):
        """AdminScenariosGet200ResponseScenariosInner - a model defined in OpenAPI

        :param id: The id of this AdminScenariosGet200ResponseScenariosInner.
        :param name: The name of this AdminScenariosGet200ResponseScenariosInner.
        :param possible_states: The possible_states of this AdminScenariosGet200ResponseScenariosInner.
        :param state: The state of this AdminScenariosGet200ResponseScenariosInner.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'possible_states': List[str],
            'state': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'possible_states': 'possibleStates',
            'state': 'state'
        }

        self._id = id
        self._name = name
        self._possible_states = possible_states
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminScenariosGet200ResponseScenariosInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ___admin_scenarios_get_200_response_scenarios_inner of this AdminScenariosGet200ResponseScenariosInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this AdminScenariosGet200ResponseScenariosInner.

        The scenario ID

        :return: The id of this AdminScenariosGet200ResponseScenariosInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AdminScenariosGet200ResponseScenariosInner.

        The scenario ID

        :param id: The id of this AdminScenariosGet200ResponseScenariosInner.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AdminScenariosGet200ResponseScenariosInner.

        The scenario name

        :return: The name of this AdminScenariosGet200ResponseScenariosInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AdminScenariosGet200ResponseScenariosInner.

        The scenario name

        :param name: The name of this AdminScenariosGet200ResponseScenariosInner.
        :type name: str
        """

        self._name = name

    @property
    def possible_states(self):
        """Gets the possible_states of this AdminScenariosGet200ResponseScenariosInner.


        :return: The possible_states of this AdminScenariosGet200ResponseScenariosInner.
        :rtype: List[str]
        """
        return self._possible_states

    @possible_states.setter
    def possible_states(self, possible_states):
        """Sets the possible_states of this AdminScenariosGet200ResponseScenariosInner.


        :param possible_states: The possible_states of this AdminScenariosGet200ResponseScenariosInner.
        :type possible_states: List[str]
        """

        self._possible_states = possible_states

    @property
    def state(self):
        """Gets the state of this AdminScenariosGet200ResponseScenariosInner.

        The current state of this scenario

        :return: The state of this AdminScenariosGet200ResponseScenariosInner.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AdminScenariosGet200ResponseScenariosInner.

        The current state of this scenario

        :param state: The state of this AdminScenariosGet200ResponseScenariosInner.
        :type state: str
        """

        self._state = state
