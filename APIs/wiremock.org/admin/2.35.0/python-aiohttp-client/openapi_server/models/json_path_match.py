# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JSONPathMatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ignore_array_order: bool=None, ignore_extra_elements: bool=None, matches_json_path: str=None):
        """JSONPathMatch - a model defined in OpenAPI

        :param ignore_array_order: The ignore_array_order of this JSONPathMatch.
        :param ignore_extra_elements: The ignore_extra_elements of this JSONPathMatch.
        :param matches_json_path: The matches_json_path of this JSONPathMatch.
        """
        self.openapi_types = {
            'ignore_array_order': bool,
            'ignore_extra_elements': bool,
            'matches_json_path': str
        }

        self.attribute_map = {
            'ignore_array_order': 'ignoreArrayOrder',
            'ignore_extra_elements': 'ignoreExtraElements',
            'matches_json_path': 'matchesJsonPath'
        }

        self._ignore_array_order = ignore_array_order
        self._ignore_extra_elements = ignore_extra_elements
        self._matches_json_path = matches_json_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JSONPathMatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JSONPath_match of this JSONPathMatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ignore_array_order(self):
        """Gets the ignore_array_order of this JSONPathMatch.


        :return: The ignore_array_order of this JSONPathMatch.
        :rtype: bool
        """
        return self._ignore_array_order

    @ignore_array_order.setter
    def ignore_array_order(self, ignore_array_order):
        """Sets the ignore_array_order of this JSONPathMatch.


        :param ignore_array_order: The ignore_array_order of this JSONPathMatch.
        :type ignore_array_order: bool
        """

        self._ignore_array_order = ignore_array_order

    @property
    def ignore_extra_elements(self):
        """Gets the ignore_extra_elements of this JSONPathMatch.


        :return: The ignore_extra_elements of this JSONPathMatch.
        :rtype: bool
        """
        return self._ignore_extra_elements

    @ignore_extra_elements.setter
    def ignore_extra_elements(self, ignore_extra_elements):
        """Sets the ignore_extra_elements of this JSONPathMatch.


        :param ignore_extra_elements: The ignore_extra_elements of this JSONPathMatch.
        :type ignore_extra_elements: bool
        """

        self._ignore_extra_elements = ignore_extra_elements

    @property
    def matches_json_path(self):
        """Gets the matches_json_path of this JSONPathMatch.


        :return: The matches_json_path of this JSONPathMatch.
        :rtype: str
        """
        return self._matches_json_path

    @matches_json_path.setter
    def matches_json_path(self, matches_json_path):
        """Sets the matches_json_path of this JSONPathMatch.


        :param matches_json_path: The matches_json_path of this JSONPathMatch.
        :type matches_json_path: str
        """
        if matches_json_path is None:
            raise ValueError("Invalid value for `matches_json_path`, must not be `None`")

        self._matches_json_path = matches_json_path
