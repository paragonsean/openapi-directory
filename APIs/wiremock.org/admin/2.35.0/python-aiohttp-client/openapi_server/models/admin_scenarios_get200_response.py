# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_scenarios_get200_response_scenarios_inner import AdminScenariosGet200ResponseScenariosInner
from openapi_server import util


class AdminScenariosGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scenarios: List[AdminScenariosGet200ResponseScenariosInner]=None):
        """AdminScenariosGet200Response - a model defined in OpenAPI

        :param scenarios: The scenarios of this AdminScenariosGet200Response.
        """
        self.openapi_types = {
            'scenarios': List[AdminScenariosGet200ResponseScenariosInner]
        }

        self.attribute_map = {
            'scenarios': 'scenarios'
        }

        self._scenarios = scenarios

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminScenariosGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ___admin_scenarios_get_200_response of this AdminScenariosGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scenarios(self):
        """Gets the scenarios of this AdminScenariosGet200Response.


        :return: The scenarios of this AdminScenariosGet200Response.
        :rtype: List[AdminScenariosGet200ResponseScenariosInner]
        """
        return self._scenarios

    @scenarios.setter
    def scenarios(self, scenarios):
        """Sets the scenarios of this AdminScenariosGet200Response.


        :param scenarios: The scenarios of this AdminScenariosGet200Response.
        :type scenarios: List[AdminScenariosGet200ResponseScenariosInner]
        """

        self._scenarios = scenarios
