# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, binary_size_threshold: str='0', text_size_threshold: str='0'):
        """AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria - a model defined in OpenAPI

        :param binary_size_threshold: The binary_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.
        :param text_size_threshold: The text_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.
        """
        self.openapi_types = {
            'binary_size_threshold': str,
            'text_size_threshold': str
        }

        self.attribute_map = {
            'binary_size_threshold': 'binarySizeThreshold',
            'text_size_threshold': 'textSizeThreshold'
        }

        self._binary_size_threshold = binary_size_threshold
        self._text_size_threshold = text_size_threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ___admin_recordings_snapshot_post_request_allOf_extractBodyCriteria of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def binary_size_threshold(self):
        """Gets the binary_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.

        Size threshold for extracting binary response bodies. Supports humanized size strings, e.g. \"56 Mb\". Default unit is bytes.

        :return: The binary_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.
        :rtype: str
        """
        return self._binary_size_threshold

    @binary_size_threshold.setter
    def binary_size_threshold(self, binary_size_threshold):
        """Sets the binary_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.

        Size threshold for extracting binary response bodies. Supports humanized size strings, e.g. \"56 Mb\". Default unit is bytes.

        :param binary_size_threshold: The binary_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.
        :type binary_size_threshold: str
        """

        self._binary_size_threshold = binary_size_threshold

    @property
    def text_size_threshold(self):
        """Gets the text_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.

        Size threshold for extracting binary response bodies. Supports humanized size strings, e.g. \"56 Mb\". Default unit is bytes.

        :return: The text_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.
        :rtype: str
        """
        return self._text_size_threshold

    @text_size_threshold.setter
    def text_size_threshold(self, text_size_threshold):
        """Sets the text_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.

        Size threshold for extracting binary response bodies. Supports humanized size strings, e.g. \"56 Mb\". Default unit is bytes.

        :param text_size_threshold: The text_size_threshold of this AdminRecordingsSnapshotPostRequestAllOfExtractBodyCriteria.
        :type text_size_threshold: str
        """

        self._text_size_threshold = text_size_threshold
