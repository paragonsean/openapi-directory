# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_mappings_get200_response_mappings_inner_request import AdminMappingsGet200ResponseMappingsInnerRequest
from openapi_server.models.admin_mappings_get200_response_mappings_inner_response import AdminMappingsGet200ResponseMappingsInnerResponse
from openapi_server import util


class AdminMappingsGet200ResponseMappingsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, metadata: object=None, name: str=None, new_scenario_state: str=None, persistent: bool=None, post_serve_actions: object=None, priority: int=None, request: AdminMappingsGet200ResponseMappingsInnerRequest=None, required_scenario_state: str=None, response: AdminMappingsGet200ResponseMappingsInnerResponse=None, scenario_name: str=None, uuid: str=None):
        """AdminMappingsGet200ResponseMappingsInner - a model defined in OpenAPI

        :param id: The id of this AdminMappingsGet200ResponseMappingsInner.
        :param metadata: The metadata of this AdminMappingsGet200ResponseMappingsInner.
        :param name: The name of this AdminMappingsGet200ResponseMappingsInner.
        :param new_scenario_state: The new_scenario_state of this AdminMappingsGet200ResponseMappingsInner.
        :param persistent: The persistent of this AdminMappingsGet200ResponseMappingsInner.
        :param post_serve_actions: The post_serve_actions of this AdminMappingsGet200ResponseMappingsInner.
        :param priority: The priority of this AdminMappingsGet200ResponseMappingsInner.
        :param request: The request of this AdminMappingsGet200ResponseMappingsInner.
        :param required_scenario_state: The required_scenario_state of this AdminMappingsGet200ResponseMappingsInner.
        :param response: The response of this AdminMappingsGet200ResponseMappingsInner.
        :param scenario_name: The scenario_name of this AdminMappingsGet200ResponseMappingsInner.
        :param uuid: The uuid of this AdminMappingsGet200ResponseMappingsInner.
        """
        self.openapi_types = {
            'id': str,
            'metadata': object,
            'name': str,
            'new_scenario_state': str,
            'persistent': bool,
            'post_serve_actions': object,
            'priority': int,
            'request': AdminMappingsGet200ResponseMappingsInnerRequest,
            'required_scenario_state': str,
            'response': AdminMappingsGet200ResponseMappingsInnerResponse,
            'scenario_name': str,
            'uuid': str
        }

        self.attribute_map = {
            'id': 'id',
            'metadata': 'metadata',
            'name': 'name',
            'new_scenario_state': 'newScenarioState',
            'persistent': 'persistent',
            'post_serve_actions': 'postServeActions',
            'priority': 'priority',
            'request': 'request',
            'required_scenario_state': 'requiredScenarioState',
            'response': 'response',
            'scenario_name': 'scenarioName',
            'uuid': 'uuid'
        }

        self._id = id
        self._metadata = metadata
        self._name = name
        self._new_scenario_state = new_scenario_state
        self._persistent = persistent
        self._post_serve_actions = post_serve_actions
        self._priority = priority
        self._request = request
        self._required_scenario_state = required_scenario_state
        self._response = response
        self._scenario_name = scenario_name
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminMappingsGet200ResponseMappingsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ___admin_mappings_get_200_response_mappings_inner of this AdminMappingsGet200ResponseMappingsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this AdminMappingsGet200ResponseMappingsInner.

        This stub mapping's unique identifier

        :return: The id of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AdminMappingsGet200ResponseMappingsInner.

        This stub mapping's unique identifier

        :param id: The id of this AdminMappingsGet200ResponseMappingsInner.
        :type id: str
        """

        self._id = id

    @property
    def metadata(self):
        """Gets the metadata of this AdminMappingsGet200ResponseMappingsInner.

        Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.

        :return: The metadata of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this AdminMappingsGet200ResponseMappingsInner.

        Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.

        :param metadata: The metadata of this AdminMappingsGet200ResponseMappingsInner.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this AdminMappingsGet200ResponseMappingsInner.

        The stub mapping's name

        :return: The name of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AdminMappingsGet200ResponseMappingsInner.

        The stub mapping's name

        :param name: The name of this AdminMappingsGet200ResponseMappingsInner.
        :type name: str
        """

        self._name = name

    @property
    def new_scenario_state(self):
        """Gets the new_scenario_state of this AdminMappingsGet200ResponseMappingsInner.

        The new state for the scenario to be updated to after this stub is served.

        :return: The new_scenario_state of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: str
        """
        return self._new_scenario_state

    @new_scenario_state.setter
    def new_scenario_state(self, new_scenario_state):
        """Sets the new_scenario_state of this AdminMappingsGet200ResponseMappingsInner.

        The new state for the scenario to be updated to after this stub is served.

        :param new_scenario_state: The new_scenario_state of this AdminMappingsGet200ResponseMappingsInner.
        :type new_scenario_state: str
        """

        self._new_scenario_state = new_scenario_state

    @property
    def persistent(self):
        """Gets the persistent of this AdminMappingsGet200ResponseMappingsInner.

        Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.

        :return: The persistent of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: bool
        """
        return self._persistent

    @persistent.setter
    def persistent(self, persistent):
        """Sets the persistent of this AdminMappingsGet200ResponseMappingsInner.

        Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.

        :param persistent: The persistent of this AdminMappingsGet200ResponseMappingsInner.
        :type persistent: bool
        """

        self._persistent = persistent

    @property
    def post_serve_actions(self):
        """Gets the post_serve_actions of this AdminMappingsGet200ResponseMappingsInner.

        A map of the names of post serve action extensions to trigger and their parameters.

        :return: The post_serve_actions of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: object
        """
        return self._post_serve_actions

    @post_serve_actions.setter
    def post_serve_actions(self, post_serve_actions):
        """Sets the post_serve_actions of this AdminMappingsGet200ResponseMappingsInner.

        A map of the names of post serve action extensions to trigger and their parameters.

        :param post_serve_actions: The post_serve_actions of this AdminMappingsGet200ResponseMappingsInner.
        :type post_serve_actions: object
        """

        self._post_serve_actions = post_serve_actions

    @property
    def priority(self):
        """Gets the priority of this AdminMappingsGet200ResponseMappingsInner.

        This stub mapping's priority relative to others. 1 is highest.

        :return: The priority of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this AdminMappingsGet200ResponseMappingsInner.

        This stub mapping's priority relative to others. 1 is highest.

        :param priority: The priority of this AdminMappingsGet200ResponseMappingsInner.
        :type priority: int
        """
        if priority is not None and priority < 1:
            raise ValueError("Invalid value for `priority`, must be a value greater than or equal to `1`")

        self._priority = priority

    @property
    def request(self):
        """Gets the request of this AdminMappingsGet200ResponseMappingsInner.


        :return: The request of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: AdminMappingsGet200ResponseMappingsInnerRequest
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this AdminMappingsGet200ResponseMappingsInner.


        :param request: The request of this AdminMappingsGet200ResponseMappingsInner.
        :type request: AdminMappingsGet200ResponseMappingsInnerRequest
        """

        self._request = request

    @property
    def required_scenario_state(self):
        """Gets the required_scenario_state of this AdminMappingsGet200ResponseMappingsInner.

        The required state of the scenario in order for this stub to be matched.

        :return: The required_scenario_state of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: str
        """
        return self._required_scenario_state

    @required_scenario_state.setter
    def required_scenario_state(self, required_scenario_state):
        """Sets the required_scenario_state of this AdminMappingsGet200ResponseMappingsInner.

        The required state of the scenario in order for this stub to be matched.

        :param required_scenario_state: The required_scenario_state of this AdminMappingsGet200ResponseMappingsInner.
        :type required_scenario_state: str
        """

        self._required_scenario_state = required_scenario_state

    @property
    def response(self):
        """Gets the response of this AdminMappingsGet200ResponseMappingsInner.


        :return: The response of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: AdminMappingsGet200ResponseMappingsInnerResponse
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this AdminMappingsGet200ResponseMappingsInner.


        :param response: The response of this AdminMappingsGet200ResponseMappingsInner.
        :type response: AdminMappingsGet200ResponseMappingsInnerResponse
        """

        self._response = response

    @property
    def scenario_name(self):
        """Gets the scenario_name of this AdminMappingsGet200ResponseMappingsInner.

        The name of the scenario that this stub mapping is part of

        :return: The scenario_name of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: str
        """
        return self._scenario_name

    @scenario_name.setter
    def scenario_name(self, scenario_name):
        """Sets the scenario_name of this AdminMappingsGet200ResponseMappingsInner.

        The name of the scenario that this stub mapping is part of

        :param scenario_name: The scenario_name of this AdminMappingsGet200ResponseMappingsInner.
        :type scenario_name: str
        """

        self._scenario_name = scenario_name

    @property
    def uuid(self):
        """Gets the uuid of this AdminMappingsGet200ResponseMappingsInner.

        Alias for the id

        :return: The uuid of this AdminMappingsGet200ResponseMappingsInner.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this AdminMappingsGet200ResponseMappingsInner.

        Alias for the id

        :param uuid: The uuid of this AdminMappingsGet200ResponseMappingsInner.
        :type uuid: str
        """

        self._uuid = uuid
