# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_mappings_get200_response_mappings_inner_response_all_of_delay_distribution import AdminMappingsGet200ResponseMappingsInnerResponseAllOfDelayDistribution
from openapi_server import util


class AdminMappingsGet200ResponseMappingsInnerResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_proxy_request_headers: object=None, base64_body: str=None, body: str=None, body_file_name: str=None, delay_distribution: AdminMappingsGet200ResponseMappingsInnerResponseAllOfDelayDistribution=None, fault: str=None, fixed_delay_milliseconds: int=None, from_configured_stub: bool=None, headers: object=None, json_body: object=None, proxy_base_url: str=None, status: int=None, status_message: str=None, transformer_parameters: object=None, transformers: List[str]=None):
        """AdminMappingsGet200ResponseMappingsInnerResponse - a model defined in OpenAPI

        :param additional_proxy_request_headers: The additional_proxy_request_headers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param base64_body: The base64_body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param body: The body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param body_file_name: The body_file_name of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param delay_distribution: The delay_distribution of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param fault: The fault of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param fixed_delay_milliseconds: The fixed_delay_milliseconds of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param from_configured_stub: The from_configured_stub of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param headers: The headers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param json_body: The json_body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param proxy_base_url: The proxy_base_url of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param status: The status of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param status_message: The status_message of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param transformer_parameters: The transformer_parameters of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :param transformers: The transformers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        """
        self.openapi_types = {
            'additional_proxy_request_headers': object,
            'base64_body': str,
            'body': str,
            'body_file_name': str,
            'delay_distribution': AdminMappingsGet200ResponseMappingsInnerResponseAllOfDelayDistribution,
            'fault': str,
            'fixed_delay_milliseconds': int,
            'from_configured_stub': bool,
            'headers': object,
            'json_body': object,
            'proxy_base_url': str,
            'status': int,
            'status_message': str,
            'transformer_parameters': object,
            'transformers': List[str]
        }

        self.attribute_map = {
            'additional_proxy_request_headers': 'additionalProxyRequestHeaders',
            'base64_body': 'base64Body',
            'body': 'body',
            'body_file_name': 'bodyFileName',
            'delay_distribution': 'delayDistribution',
            'fault': 'fault',
            'fixed_delay_milliseconds': 'fixedDelayMilliseconds',
            'from_configured_stub': 'fromConfiguredStub',
            'headers': 'headers',
            'json_body': 'jsonBody',
            'proxy_base_url': 'proxyBaseUrl',
            'status': 'status',
            'status_message': 'statusMessage',
            'transformer_parameters': 'transformerParameters',
            'transformers': 'transformers'
        }

        self._additional_proxy_request_headers = additional_proxy_request_headers
        self._base64_body = base64_body
        self._body = body
        self._body_file_name = body_file_name
        self._delay_distribution = delay_distribution
        self._fault = fault
        self._fixed_delay_milliseconds = fixed_delay_milliseconds
        self._from_configured_stub = from_configured_stub
        self._headers = headers
        self._json_body = json_body
        self._proxy_base_url = proxy_base_url
        self._status = status
        self._status_message = status_message
        self._transformer_parameters = transformer_parameters
        self._transformers = transformers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminMappingsGet200ResponseMappingsInnerResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ___admin_mappings_get_200_response_mappings_inner_response of this AdminMappingsGet200ResponseMappingsInnerResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_proxy_request_headers(self):
        """Gets the additional_proxy_request_headers of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Extra request headers to send when proxying to another host.

        :return: The additional_proxy_request_headers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: object
        """
        return self._additional_proxy_request_headers

    @additional_proxy_request_headers.setter
    def additional_proxy_request_headers(self, additional_proxy_request_headers):
        """Sets the additional_proxy_request_headers of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Extra request headers to send when proxying to another host.

        :param additional_proxy_request_headers: The additional_proxy_request_headers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type additional_proxy_request_headers: object
        """

        self._additional_proxy_request_headers = additional_proxy_request_headers

    @property
    def base64_body(self):
        """Gets the base64_body of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.

        :return: The base64_body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: str
        """
        return self._base64_body

    @base64_body.setter
    def base64_body(self, base64_body):
        """Sets the base64_body of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.

        :param base64_body: The base64_body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type base64_body: str
        """

        self._base64_body = base64_body

    @property
    def body(self):
        """Gets the body of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.

        :return: The body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.

        :param body: The body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type body: str
        """

        self._body = body

    @property
    def body_file_name(self):
        """Gets the body_file_name of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.

        :return: The body_file_name of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: str
        """
        return self._body_file_name

    @body_file_name.setter
    def body_file_name(self, body_file_name):
        """Sets the body_file_name of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.

        :param body_file_name: The body_file_name of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type body_file_name: str
        """

        self._body_file_name = body_file_name

    @property
    def delay_distribution(self):
        """Gets the delay_distribution of this AdminMappingsGet200ResponseMappingsInnerResponse.


        :return: The delay_distribution of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: AdminMappingsGet200ResponseMappingsInnerResponseAllOfDelayDistribution
        """
        return self._delay_distribution

    @delay_distribution.setter
    def delay_distribution(self, delay_distribution):
        """Sets the delay_distribution of this AdminMappingsGet200ResponseMappingsInnerResponse.


        :param delay_distribution: The delay_distribution of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type delay_distribution: AdminMappingsGet200ResponseMappingsInnerResponseAllOfDelayDistribution
        """

        self._delay_distribution = delay_distribution

    @property
    def fault(self):
        """Gets the fault of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The fault to apply (instead of a full, valid response).

        :return: The fault of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: str
        """
        return self._fault

    @fault.setter
    def fault(self, fault):
        """Sets the fault of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The fault to apply (instead of a full, valid response).

        :param fault: The fault of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type fault: str
        """
        allowed_values = ["CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE"]  # noqa: E501
        if fault not in allowed_values:
            raise ValueError(
                "Invalid value for `fault` ({0}), must be one of {1}"
                .format(fault, allowed_values)
            )

        self._fault = fault

    @property
    def fixed_delay_milliseconds(self):
        """Gets the fixed_delay_milliseconds of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Number of milliseconds to delay be before sending the response.

        :return: The fixed_delay_milliseconds of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: int
        """
        return self._fixed_delay_milliseconds

    @fixed_delay_milliseconds.setter
    def fixed_delay_milliseconds(self, fixed_delay_milliseconds):
        """Sets the fixed_delay_milliseconds of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Number of milliseconds to delay be before sending the response.

        :param fixed_delay_milliseconds: The fixed_delay_milliseconds of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type fixed_delay_milliseconds: int
        """

        self._fixed_delay_milliseconds = fixed_delay_milliseconds

    @property
    def from_configured_stub(self):
        """Gets the from_configured_stub of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.

        :return: The from_configured_stub of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: bool
        """
        return self._from_configured_stub

    @from_configured_stub.setter
    def from_configured_stub(self, from_configured_stub):
        """Sets the from_configured_stub of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.

        :param from_configured_stub: The from_configured_stub of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type from_configured_stub: bool
        """

        self._from_configured_stub = from_configured_stub

    @property
    def headers(self):
        """Gets the headers of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Map of response headers to send

        :return: The headers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: object
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Map of response headers to send

        :param headers: The headers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type headers: object
        """

        self._headers = headers

    @property
    def json_body(self):
        """Gets the json_body of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.

        :return: The json_body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: object
        """
        return self._json_body

    @json_body.setter
    def json_body(self, json_body):
        """Sets the json_body of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.

        :param json_body: The json_body of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type json_body: object
        """

        self._json_body = json_body

    @property
    def proxy_base_url(self):
        """Gets the proxy_base_url of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The base URL of the target to proxy matching requests to.

        :return: The proxy_base_url of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: str
        """
        return self._proxy_base_url

    @proxy_base_url.setter
    def proxy_base_url(self, proxy_base_url):
        """Sets the proxy_base_url of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The base URL of the target to proxy matching requests to.

        :param proxy_base_url: The proxy_base_url of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type proxy_base_url: str
        """

        self._proxy_base_url = proxy_base_url

    @property
    def status(self):
        """Gets the status of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The HTTP status code to be returned

        :return: The status of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The HTTP status code to be returned

        :param status: The status of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type status: int
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The HTTP status message to be returned

        :return: The status_message of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this AdminMappingsGet200ResponseMappingsInnerResponse.

        The HTTP status message to be returned

        :param status_message: The status_message of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def transformer_parameters(self):
        """Gets the transformer_parameters of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Parameters to apply to response transformers.

        :return: The transformer_parameters of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: object
        """
        return self._transformer_parameters

    @transformer_parameters.setter
    def transformer_parameters(self, transformer_parameters):
        """Sets the transformer_parameters of this AdminMappingsGet200ResponseMappingsInnerResponse.

        Parameters to apply to response transformers.

        :param transformer_parameters: The transformer_parameters of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type transformer_parameters: object
        """

        self._transformer_parameters = transformer_parameters

    @property
    def transformers(self):
        """Gets the transformers of this AdminMappingsGet200ResponseMappingsInnerResponse.

        List of names of transformers to apply to this response.

        :return: The transformers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :rtype: List[str]
        """
        return self._transformers

    @transformers.setter
    def transformers(self, transformers):
        """Sets the transformers of this AdminMappingsGet200ResponseMappingsInnerResponse.

        List of names of transformers to apply to this response.

        :param transformers: The transformers of this AdminMappingsGet200ResponseMappingsInnerResponse.
        :type transformers: List[str]
        """

        self._transformers = transformers
