/**
 * SimpliVPNAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegister.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegister::OAIRegister(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegister::OAIRegister() {
    this->initializeModel();
}

OAIRegister::~OAIRegister() {}

void OAIRegister::initializeModel() {

    m_await_isSet = false;
    m_await_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIRegister::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegister::fromJsonObject(QJsonObject json) {

    m_await_isValid = ::OpenAPI::fromJsonValue(m_await, json[QString("await")]);
    m_await_isSet = !json[QString("await")].isNull() && m_await_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIRegister::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegister::asJsonObject() const {
    QJsonObject obj;
    if (m_await_isSet) {
        obj.insert(QString("await"), ::OpenAPI::toJsonValue(m_await));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

bool OAIRegister::isAwait() const {
    return m_await;
}
void OAIRegister::setAwait(const bool &await) {
    m_await = await;
    m_await_isSet = true;
}

bool OAIRegister::is_await_Set() const{
    return m_await_isSet;
}

bool OAIRegister::is_await_Valid() const{
    return m_await_isValid;
}

QString OAIRegister::getPassword() const {
    return m_password;
}
void OAIRegister::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIRegister::is_password_Set() const{
    return m_password_isSet;
}

bool OAIRegister::is_password_Valid() const{
    return m_password_isValid;
}

QString OAIRegister::getUsername() const {
    return m_username;
}
void OAIRegister::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIRegister::is_username_Set() const{
    return m_username_isSet;
}

bool OAIRegister::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIRegister::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_await_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegister::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_password_isValid && m_username_isValid && true;
}

} // namespace OpenAPI
