openapi: 3.0.1
info:
  title: SimpliVPNAPI
  version: "1.0"
  x-logo:
    url: https://simplivpn.net/wp-content/uploads/2022/12/favi.png
  x-origin:
  - format: openapi
    url: https://api.simplivpn.net/swagger/v1/swagger.json
    version: "3.0"
  x-providerName: simplivpn.net
servers:
- url: /
security:
- Bearer: []
paths:
  /disable-user:
    post:
      description: This route allows you to disable a user's vpn access.
      operationId: disable_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableUser'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
      summary: DisableUser
      tags:
      - SimpliVPNAPI
      x-openapi-router-controller: openapi_server.controllers.simpli_vpnapi_controller
      x-codegen-request-body-name: body
  /enable-user:
    post:
      description: This route allows you to enable a user's vpn access. This route
        can only be called using your user's Bearer Auth token.
      operationId: enable_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableUser'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
      summary: EnableUser
      tags:
      - SimpliVPNAPI
      x-openapi-router-controller: openapi_server.controllers.simpli_vpnapi_controller
      x-codegen-request-body-name: body
  /login:
    post:
      description: "This route allows you to login a user. The response will give\
        \ you a Bearer auth token to use with all rquests pertaining to the user.\
        \ This token expires in 7 days, so for every request you should check if you\
        \ get an unauthorized responsve and re-validate the login if needed."
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
      summary: Login
      tags:
      - SimpliVPNAPI
      x-openapi-router-controller: openapi_server.controllers.simpli_vpnapi_controller
      x-codegen-request-body-name: body
  /register:
    post:
      description: "This route allows VPN Admin user's with an api key to register\
        \ a vpn user account. This route can only be called using your api key supplied\
        \ to you from SimpliVPN. Before calling this you should use your api key to\
        \ call the /UsernameAvailable route to make sure the username you want is\
        \ available first. All subsequent user requests following can be done using\
        \ the user's api token, their token's expire every 7 days, so you should occasionally\
        \ check them and if you get unauthorized, refresh their token by calling /login\
        \ route. This route will also auto-enable a new user."
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
      summary: Register
      tags:
      - SimpliVPNAPI
      x-openapi-router-controller: openapi_server.controllers.simpli_vpnapi_controller
      x-codegen-request-body-name: body
  /server-summaries:
    get:
      operationId: get_server_summaries
      responses:
        "200":
          description: Success
      tags:
      - SimpliVPNAPI
      x-openapi-router-controller: openapi_server.controllers.simpli_vpnapi_controller
  /servers:
    get:
      operationId: get_servers
      responses:
        "200":
          description: Success
      tags:
      - SimpliVPNAPI
      x-openapi-router-controller: openapi_server.controllers.simpli_vpnapi_controller
  /username-available:
    post:
      description: This route allows VPN Admin user's to check if a specific username
        is available before registering an account username. This route can only be
        called using your api key supplied to you from SimpliVPN.
      operationId: username_available
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableUser'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
      summary: UsernameAvailable
      tags:
      - SimpliVPNAPI
      x-openapi-router-controller: openapi_server.controllers.simpli_vpnapi_controller
      x-codegen-request-body-name: body
components:
  schemas:
    DisableUser:
      additionalProperties: false
      example:
        username: username
      properties:
        username:
          minLength: 1
          title: username
          type: string
      required:
      - username
      title: DisableUser
      type: object
    EnableUser:
      additionalProperties: false
      example:
        username: username
      properties:
        username:
          minLength: 1
          title: username
          type: string
      required:
      - username
      title: EnableUser
      type: object
    Register:
      additionalProperties: false
      example:
        password: password
        await: true
        username: username
      properties:
        await:
          title: await
          type: boolean
        password:
          minLength: 1
          title: password
          type: string
        username:
          minLength: 1
          title: username
          type: string
      required:
      - password
      - username
      title: Register
      type: object
    UserLogin:
      additionalProperties: false
      example:
        password: password
        username: username
      properties:
        password:
          minLength: 1
          title: password
          type: string
        username:
          minLength: 1
          title: username
          type: string
      required:
      - password
      - username
      title: UserLogin
      type: object
  securitySchemes:
    Bearer:
      description: JWT Authorization header using the bearer scheme
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_Bearer
