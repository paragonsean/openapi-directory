# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bill_abstract import BillAbstract
from openapi_server.models.bill_action import BillAction
from openapi_server.models.bill_document_or_version import BillDocumentOrVersion
from openapi_server.models.bill_identifier import BillIdentifier
from openapi_server.models.bill_sponsorship import BillSponsorship
from openapi_server.models.bill_title import BillTitle
from openapi_server.models.compact_jurisdiction import CompactJurisdiction
from openapi_server.models.link import Link
from openapi_server.models.organization import Organization
from openapi_server.models.related_bill import RelatedBill
from openapi_server.models.vote_event import VoteEvent
from openapi_server import util


class Bill(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abstracts: List[BillAbstract]=None, actions: List[BillAction]=None, classification: List[str]=[], created_at: datetime=None, documents: List[BillDocumentOrVersion]=None, extras: object=None, first_action_date: str='', from_organization: Organization=None, id: str=None, identifier: str=None, jurisdiction: CompactJurisdiction=None, latest_action_date: str='', latest_action_description: str='', latest_passage_date: str='', openstates_url: str=None, other_identifiers: List[BillIdentifier]=None, other_titles: List[BillTitle]=None, related_bills: List[RelatedBill]=None, session: str=None, sources: List[Link]=None, sponsorships: List[BillSponsorship]=None, subject: List[str]=[], title: str=None, updated_at: datetime=None, versions: List[BillDocumentOrVersion]=None, votes: List[VoteEvent]=None):
        """Bill - a model defined in OpenAPI

        :param abstracts: The abstracts of this Bill.
        :param actions: The actions of this Bill.
        :param classification: The classification of this Bill.
        :param created_at: The created_at of this Bill.
        :param documents: The documents of this Bill.
        :param extras: The extras of this Bill.
        :param first_action_date: The first_action_date of this Bill.
        :param from_organization: The from_organization of this Bill.
        :param id: The id of this Bill.
        :param identifier: The identifier of this Bill.
        :param jurisdiction: The jurisdiction of this Bill.
        :param latest_action_date: The latest_action_date of this Bill.
        :param latest_action_description: The latest_action_description of this Bill.
        :param latest_passage_date: The latest_passage_date of this Bill.
        :param openstates_url: The openstates_url of this Bill.
        :param other_identifiers: The other_identifiers of this Bill.
        :param other_titles: The other_titles of this Bill.
        :param related_bills: The related_bills of this Bill.
        :param session: The session of this Bill.
        :param sources: The sources of this Bill.
        :param sponsorships: The sponsorships of this Bill.
        :param subject: The subject of this Bill.
        :param title: The title of this Bill.
        :param updated_at: The updated_at of this Bill.
        :param versions: The versions of this Bill.
        :param votes: The votes of this Bill.
        """
        self.openapi_types = {
            'abstracts': List[BillAbstract],
            'actions': List[BillAction],
            'classification': List[str],
            'created_at': datetime,
            'documents': List[BillDocumentOrVersion],
            'extras': object,
            'first_action_date': str,
            'from_organization': Organization,
            'id': str,
            'identifier': str,
            'jurisdiction': CompactJurisdiction,
            'latest_action_date': str,
            'latest_action_description': str,
            'latest_passage_date': str,
            'openstates_url': str,
            'other_identifiers': List[BillIdentifier],
            'other_titles': List[BillTitle],
            'related_bills': List[RelatedBill],
            'session': str,
            'sources': List[Link],
            'sponsorships': List[BillSponsorship],
            'subject': List[str],
            'title': str,
            'updated_at': datetime,
            'versions': List[BillDocumentOrVersion],
            'votes': List[VoteEvent]
        }

        self.attribute_map = {
            'abstracts': 'abstracts',
            'actions': 'actions',
            'classification': 'classification',
            'created_at': 'created_at',
            'documents': 'documents',
            'extras': 'extras',
            'first_action_date': 'first_action_date',
            'from_organization': 'from_organization',
            'id': 'id',
            'identifier': 'identifier',
            'jurisdiction': 'jurisdiction',
            'latest_action_date': 'latest_action_date',
            'latest_action_description': 'latest_action_description',
            'latest_passage_date': 'latest_passage_date',
            'openstates_url': 'openstates_url',
            'other_identifiers': 'other_identifiers',
            'other_titles': 'other_titles',
            'related_bills': 'related_bills',
            'session': 'session',
            'sources': 'sources',
            'sponsorships': 'sponsorships',
            'subject': 'subject',
            'title': 'title',
            'updated_at': 'updated_at',
            'versions': 'versions',
            'votes': 'votes'
        }

        self._abstracts = abstracts
        self._actions = actions
        self._classification = classification
        self._created_at = created_at
        self._documents = documents
        self._extras = extras
        self._first_action_date = first_action_date
        self._from_organization = from_organization
        self._id = id
        self._identifier = identifier
        self._jurisdiction = jurisdiction
        self._latest_action_date = latest_action_date
        self._latest_action_description = latest_action_description
        self._latest_passage_date = latest_passage_date
        self._openstates_url = openstates_url
        self._other_identifiers = other_identifiers
        self._other_titles = other_titles
        self._related_bills = related_bills
        self._session = session
        self._sources = sources
        self._sponsorships = sponsorships
        self._subject = subject
        self._title = title
        self._updated_at = updated_at
        self._versions = versions
        self._votes = votes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Bill':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bill of this Bill.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abstracts(self):
        """Gets the abstracts of this Bill.


        :return: The abstracts of this Bill.
        :rtype: List[BillAbstract]
        """
        return self._abstracts

    @abstracts.setter
    def abstracts(self, abstracts):
        """Sets the abstracts of this Bill.


        :param abstracts: The abstracts of this Bill.
        :type abstracts: List[BillAbstract]
        """

        self._abstracts = abstracts

    @property
    def actions(self):
        """Gets the actions of this Bill.


        :return: The actions of this Bill.
        :rtype: List[BillAction]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this Bill.


        :param actions: The actions of this Bill.
        :type actions: List[BillAction]
        """

        self._actions = actions

    @property
    def classification(self):
        """Gets the classification of this Bill.


        :return: The classification of this Bill.
        :rtype: List[str]
        """
        return self._classification

    @classification.setter
    def classification(self, classification):
        """Sets the classification of this Bill.


        :param classification: The classification of this Bill.
        :type classification: List[str]
        """

        self._classification = classification

    @property
    def created_at(self):
        """Gets the created_at of this Bill.


        :return: The created_at of this Bill.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Bill.


        :param created_at: The created_at of this Bill.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def documents(self):
        """Gets the documents of this Bill.


        :return: The documents of this Bill.
        :rtype: List[BillDocumentOrVersion]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this Bill.


        :param documents: The documents of this Bill.
        :type documents: List[BillDocumentOrVersion]
        """

        self._documents = documents

    @property
    def extras(self):
        """Gets the extras of this Bill.


        :return: The extras of this Bill.
        :rtype: object
        """
        return self._extras

    @extras.setter
    def extras(self, extras):
        """Sets the extras of this Bill.


        :param extras: The extras of this Bill.
        :type extras: object
        """

        self._extras = extras

    @property
    def first_action_date(self):
        """Gets the first_action_date of this Bill.


        :return: The first_action_date of this Bill.
        :rtype: str
        """
        return self._first_action_date

    @first_action_date.setter
    def first_action_date(self, first_action_date):
        """Sets the first_action_date of this Bill.


        :param first_action_date: The first_action_date of this Bill.
        :type first_action_date: str
        """

        self._first_action_date = first_action_date

    @property
    def from_organization(self):
        """Gets the from_organization of this Bill.


        :return: The from_organization of this Bill.
        :rtype: Organization
        """
        return self._from_organization

    @from_organization.setter
    def from_organization(self, from_organization):
        """Sets the from_organization of this Bill.


        :param from_organization: The from_organization of this Bill.
        :type from_organization: Organization
        """
        if from_organization is None:
            raise ValueError("Invalid value for `from_organization`, must not be `None`")

        self._from_organization = from_organization

    @property
    def id(self):
        """Gets the id of this Bill.


        :return: The id of this Bill.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Bill.


        :param id: The id of this Bill.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def identifier(self):
        """Gets the identifier of this Bill.


        :return: The identifier of this Bill.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this Bill.


        :param identifier: The identifier of this Bill.
        :type identifier: str
        """
        if identifier is None:
            raise ValueError("Invalid value for `identifier`, must not be `None`")

        self._identifier = identifier

    @property
    def jurisdiction(self):
        """Gets the jurisdiction of this Bill.


        :return: The jurisdiction of this Bill.
        :rtype: CompactJurisdiction
        """
        return self._jurisdiction

    @jurisdiction.setter
    def jurisdiction(self, jurisdiction):
        """Sets the jurisdiction of this Bill.


        :param jurisdiction: The jurisdiction of this Bill.
        :type jurisdiction: CompactJurisdiction
        """
        if jurisdiction is None:
            raise ValueError("Invalid value for `jurisdiction`, must not be `None`")

        self._jurisdiction = jurisdiction

    @property
    def latest_action_date(self):
        """Gets the latest_action_date of this Bill.


        :return: The latest_action_date of this Bill.
        :rtype: str
        """
        return self._latest_action_date

    @latest_action_date.setter
    def latest_action_date(self, latest_action_date):
        """Sets the latest_action_date of this Bill.


        :param latest_action_date: The latest_action_date of this Bill.
        :type latest_action_date: str
        """

        self._latest_action_date = latest_action_date

    @property
    def latest_action_description(self):
        """Gets the latest_action_description of this Bill.


        :return: The latest_action_description of this Bill.
        :rtype: str
        """
        return self._latest_action_description

    @latest_action_description.setter
    def latest_action_description(self, latest_action_description):
        """Sets the latest_action_description of this Bill.


        :param latest_action_description: The latest_action_description of this Bill.
        :type latest_action_description: str
        """

        self._latest_action_description = latest_action_description

    @property
    def latest_passage_date(self):
        """Gets the latest_passage_date of this Bill.


        :return: The latest_passage_date of this Bill.
        :rtype: str
        """
        return self._latest_passage_date

    @latest_passage_date.setter
    def latest_passage_date(self, latest_passage_date):
        """Sets the latest_passage_date of this Bill.


        :param latest_passage_date: The latest_passage_date of this Bill.
        :type latest_passage_date: str
        """

        self._latest_passage_date = latest_passage_date

    @property
    def openstates_url(self):
        """Gets the openstates_url of this Bill.


        :return: The openstates_url of this Bill.
        :rtype: str
        """
        return self._openstates_url

    @openstates_url.setter
    def openstates_url(self, openstates_url):
        """Sets the openstates_url of this Bill.


        :param openstates_url: The openstates_url of this Bill.
        :type openstates_url: str
        """
        if openstates_url is None:
            raise ValueError("Invalid value for `openstates_url`, must not be `None`")

        self._openstates_url = openstates_url

    @property
    def other_identifiers(self):
        """Gets the other_identifiers of this Bill.


        :return: The other_identifiers of this Bill.
        :rtype: List[BillIdentifier]
        """
        return self._other_identifiers

    @other_identifiers.setter
    def other_identifiers(self, other_identifiers):
        """Sets the other_identifiers of this Bill.


        :param other_identifiers: The other_identifiers of this Bill.
        :type other_identifiers: List[BillIdentifier]
        """

        self._other_identifiers = other_identifiers

    @property
    def other_titles(self):
        """Gets the other_titles of this Bill.


        :return: The other_titles of this Bill.
        :rtype: List[BillTitle]
        """
        return self._other_titles

    @other_titles.setter
    def other_titles(self, other_titles):
        """Sets the other_titles of this Bill.


        :param other_titles: The other_titles of this Bill.
        :type other_titles: List[BillTitle]
        """

        self._other_titles = other_titles

    @property
    def related_bills(self):
        """Gets the related_bills of this Bill.


        :return: The related_bills of this Bill.
        :rtype: List[RelatedBill]
        """
        return self._related_bills

    @related_bills.setter
    def related_bills(self, related_bills):
        """Sets the related_bills of this Bill.


        :param related_bills: The related_bills of this Bill.
        :type related_bills: List[RelatedBill]
        """

        self._related_bills = related_bills

    @property
    def session(self):
        """Gets the session of this Bill.


        :return: The session of this Bill.
        :rtype: str
        """
        return self._session

    @session.setter
    def session(self, session):
        """Sets the session of this Bill.


        :param session: The session of this Bill.
        :type session: str
        """
        if session is None:
            raise ValueError("Invalid value for `session`, must not be `None`")

        self._session = session

    @property
    def sources(self):
        """Gets the sources of this Bill.


        :return: The sources of this Bill.
        :rtype: List[Link]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this Bill.


        :param sources: The sources of this Bill.
        :type sources: List[Link]
        """

        self._sources = sources

    @property
    def sponsorships(self):
        """Gets the sponsorships of this Bill.


        :return: The sponsorships of this Bill.
        :rtype: List[BillSponsorship]
        """
        return self._sponsorships

    @sponsorships.setter
    def sponsorships(self, sponsorships):
        """Sets the sponsorships of this Bill.


        :param sponsorships: The sponsorships of this Bill.
        :type sponsorships: List[BillSponsorship]
        """

        self._sponsorships = sponsorships

    @property
    def subject(self):
        """Gets the subject of this Bill.


        :return: The subject of this Bill.
        :rtype: List[str]
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this Bill.


        :param subject: The subject of this Bill.
        :type subject: List[str]
        """

        self._subject = subject

    @property
    def title(self):
        """Gets the title of this Bill.


        :return: The title of this Bill.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Bill.


        :param title: The title of this Bill.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title

    @property
    def updated_at(self):
        """Gets the updated_at of this Bill.


        :return: The updated_at of this Bill.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Bill.


        :param updated_at: The updated_at of this Bill.
        :type updated_at: datetime
        """
        if updated_at is None:
            raise ValueError("Invalid value for `updated_at`, must not be `None`")

        self._updated_at = updated_at

    @property
    def versions(self):
        """Gets the versions of this Bill.


        :return: The versions of this Bill.
        :rtype: List[BillDocumentOrVersion]
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this Bill.


        :param versions: The versions of this Bill.
        :type versions: List[BillDocumentOrVersion]
        """

        self._versions = versions

    @property
    def votes(self):
        """Gets the votes of this Bill.


        :return: The votes of this Bill.
        :rtype: List[VoteEvent]
        """
        return self._votes

    @votes.setter
    def votes(self, votes):
        """Sets the votes of this Bill.


        :param votes: The votes of this Bill.
        :type votes: List[VoteEvent]
        """

        self._votes = votes
