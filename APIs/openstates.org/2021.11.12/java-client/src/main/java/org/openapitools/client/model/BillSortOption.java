/*
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * An enumeration.
 */
@JsonAdapter(BillSortOption.Adapter.class)
public enum BillSortOption {
  
  UPDATED_ASC("updated_asc"),
  
  UPDATED_DESC("updated_desc"),
  
  FIRST_ACTION_ASC("first_action_asc"),
  
  FIRST_ACTION_DESC("first_action_desc"),
  
  LATEST_ACTION_ASC("latest_action_asc"),
  
  LATEST_ACTION_DESC("latest_action_desc");

  private String value;

  BillSortOption(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BillSortOption fromValue(String value) {
    for (BillSortOption b : BillSortOption.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<BillSortOption> {
    @Override
    public void write(final JsonWriter jsonWriter, final BillSortOption enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BillSortOption read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BillSortOption.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    BillSortOption.fromValue(value);
  }
}

