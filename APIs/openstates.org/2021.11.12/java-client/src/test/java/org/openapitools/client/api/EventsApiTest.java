/*
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Event;
import org.openapitools.client.model.EventInclude;
import org.openapitools.client.model.EventList;
import org.openapitools.client.model.HTTPValidationError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
@Disabled
public class EventsApiTest {

    private final EventsApi api = new EventsApi();

    /**
     * Event Detail
     *
     * Get details on a single event by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventDetailEventsEventIdGetTest() throws ApiException {
        String eventId = null;
        List<EventInclude> include = null;
        String apikey = null;
        String xApiKey = null;
        Event response = api.eventDetailEventsEventIdGet(eventId, include, apikey, xApiKey);
        // TODO: test validations
    }

    /**
     * Event List
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventListEventsGetTest() throws ApiException {
        String jurisdiction = null;
        Boolean deleted = null;
        String before = null;
        String after = null;
        Boolean requireBills = null;
        List<EventInclude> include = null;
        String apikey = null;
        Integer page = null;
        Integer perPage = null;
        String xApiKey = null;
        EventList response = api.eventListEventsGet(jurisdiction, deleted, before, after, requireBills, include, apikey, page, perPage, xApiKey);
        // TODO: test validations
    }

}
