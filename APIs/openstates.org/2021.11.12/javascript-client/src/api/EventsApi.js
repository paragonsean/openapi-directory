/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Event from '../model/Event';
import EventInclude from '../model/EventInclude';
import EventList from '../model/EventList';
import HTTPValidationError from '../model/HTTPValidationError';

/**
* Events service.
* @module api/EventsApi
* @version 2021.11.12
*/
export default class EventsApi {

    /**
    * Constructs a new EventsApi. 
    * @alias module:api/EventsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the eventDetailEventsEventIdGet operation.
     * @callback module:api/EventsApi~eventDetailEventsEventIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Event} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Event Detail
     * Get details on a single event by ID.
     * @param {String} eventId 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/EventInclude>} [include] Additional includes for the Event response.
     * @param {String} [apikey] 
     * @param {String} [xApiKey] 
     * @param {module:api/EventsApi~eventDetailEventsEventIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Event}
     */
    eventDetailEventsEventIdGet(eventId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'eventId' is set
      if (eventId === undefined || eventId === null) {
        throw new Error("Missing the required parameter 'eventId' when calling eventDetailEventsEventIdGet");
      }

      let pathParams = {
        'event_id': eventId
      };
      let queryParams = {
        'include': this.apiClient.buildCollectionParam(opts['include'], 'multi'),
        'apikey': opts['apikey']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Event;
      return this.apiClient.callApi(
        '/events/{event_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the eventListEventsGet operation.
     * @callback module:api/EventsApi~eventListEventsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EventList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Event List
     * @param {Object} opts Optional parameters
     * @param {String} [jurisdiction] Filter by jurisdiction name or ID.
     * @param {Boolean} [deleted = false)] Return events marked as deleted?
     * @param {String} [before] Limit results to those starting before a given datetime.
     * @param {String} [after] Limit results to those starting before a given datetime.
     * @param {Boolean} [requireBills = false)] Limit results to events with associated bills.
     * @param {Array.<module:model/EventInclude>} [include] Additional includes for the Event response.
     * @param {String} [apikey] 
     * @param {Number} [page = 1)] 
     * @param {Number} [perPage = 20)] 
     * @param {String} [xApiKey] 
     * @param {module:api/EventsApi~eventListEventsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EventList}
     */
    eventListEventsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'jurisdiction': opts['jurisdiction'],
        'deleted': opts['deleted'],
        'before': opts['before'],
        'after': opts['after'],
        'require_bills': opts['requireBills'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'multi'),
        'apikey': opts['apikey'],
        'page': opts['page'],
        'per_page': opts['perPage']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EventList;
      return this.apiClient.callApi(
        '/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
