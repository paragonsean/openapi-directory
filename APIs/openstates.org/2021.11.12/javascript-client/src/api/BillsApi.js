/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Bill from '../model/Bill';
import BillInclude from '../model/BillInclude';
import BillList from '../model/BillList';
import BillSortOption from '../model/BillSortOption';
import HTTPValidationError from '../model/HTTPValidationError';

/**
* Bills service.
* @module api/BillsApi
* @version 2021.11.12
*/
export default class BillsApi {

    /**
    * Constructs a new BillsApi. 
    * @alias module:api/BillsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the billDetailBillsJurisdictionSessionBillIdGet operation.
     * @callback module:api/BillsApi~billDetailBillsJurisdictionSessionBillIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bill} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bill Detail
     * Obtain bill information based on (state, session, bill_id).
     * @param {String} jurisdiction 
     * @param {String} session 
     * @param {String} billId 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/BillInclude>} [include] 
     * @param {String} [apikey] 
     * @param {String} [xApiKey] 
     * @param {module:api/BillsApi~billDetailBillsJurisdictionSessionBillIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bill}
     */
    billDetailBillsJurisdictionSessionBillIdGet(jurisdiction, session, billId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jurisdiction' is set
      if (jurisdiction === undefined || jurisdiction === null) {
        throw new Error("Missing the required parameter 'jurisdiction' when calling billDetailBillsJurisdictionSessionBillIdGet");
      }
      // verify the required parameter 'session' is set
      if (session === undefined || session === null) {
        throw new Error("Missing the required parameter 'session' when calling billDetailBillsJurisdictionSessionBillIdGet");
      }
      // verify the required parameter 'billId' is set
      if (billId === undefined || billId === null) {
        throw new Error("Missing the required parameter 'billId' when calling billDetailBillsJurisdictionSessionBillIdGet");
      }

      let pathParams = {
        'jurisdiction': jurisdiction,
        'session': session,
        'bill_id': billId
      };
      let queryParams = {
        'include': this.apiClient.buildCollectionParam(opts['include'], 'multi'),
        'apikey': opts['apikey']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Bill;
      return this.apiClient.callApi(
        '/bills/{jurisdiction}/{session}/{bill_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the billDetailByIdBillsOcdBillOpenstatesBillIdGet operation.
     * @callback module:api/BillsApi~billDetailByIdBillsOcdBillOpenstatesBillIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bill} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bill Detail By Id
     * Obtain bill information by internal ID in the format ocd-bill/_*uuid*.
     * @param {String} openstatesBillId 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/BillInclude>} [include] 
     * @param {String} [apikey] 
     * @param {String} [xApiKey] 
     * @param {module:api/BillsApi~billDetailByIdBillsOcdBillOpenstatesBillIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bill}
     */
    billDetailByIdBillsOcdBillOpenstatesBillIdGet(openstatesBillId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'openstatesBillId' is set
      if (openstatesBillId === undefined || openstatesBillId === null) {
        throw new Error("Missing the required parameter 'openstatesBillId' when calling billDetailByIdBillsOcdBillOpenstatesBillIdGet");
      }

      let pathParams = {
        'openstates_bill_id': openstatesBillId
      };
      let queryParams = {
        'include': this.apiClient.buildCollectionParam(opts['include'], 'multi'),
        'apikey': opts['apikey']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Bill;
      return this.apiClient.callApi(
        '/bills/ocd-bill/{openstates_bill_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the billsSearchBillsGet operation.
     * @callback module:api/BillsApi~billsSearchBillsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bills Search
     * Search for bills matching given criteria.  Must either specify a jurisdiction or a full text query (q).  Additional parameters will futher restrict bills returned.
     * @param {Object} opts Optional parameters
     * @param {String} [jurisdiction] Filter by jurisdiction name or ID.
     * @param {String} [session] Filter by session identifier.
     * @param {String} [chamber] Filter by chamber of origination.
     * @param {Array.<String>} [identifier] Filter to only include bills with this identifier.
     * @param {String} [classification] Filter by classification, e.g. bill or resolution
     * @param {Array.<String>} [subject] Filter by one or more subjects.
     * @param {String} [updatedSince] Filter to only include bills with updates since a given date.
     * @param {String} [createdSince] Filter to only include bills created since a given date.
     * @param {String} [actionSince] Filter to only include bills with an action since a given date.
     * @param {module:model/BillSortOption} [sort] Desired sort order for bill results.
     * @param {String} [sponsor] Filter to only include bills sponsored by a given name or person ID.
     * @param {String} [sponsorClassification] Filter matched sponsors to only include particular types of sponsorships.
     * @param {String} [q] Filter by full text search term.
     * @param {Array.<module:model/BillInclude>} [include] Additional information to include in response.
     * @param {Number} [page = 1)] 
     * @param {Number} [perPage = 10)] 
     * @param {String} [apikey] 
     * @param {String} [xApiKey] 
     * @param {module:api/BillsApi~billsSearchBillsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillList}
     */
    billsSearchBillsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'jurisdiction': opts['jurisdiction'],
        'session': opts['session'],
        'chamber': opts['chamber'],
        'identifier': this.apiClient.buildCollectionParam(opts['identifier'], 'multi'),
        'classification': opts['classification'],
        'subject': this.apiClient.buildCollectionParam(opts['subject'], 'multi'),
        'updated_since': opts['updatedSince'],
        'created_since': opts['createdSince'],
        'action_since': opts['actionSince'],
        'sort': opts['sort'],
        'sponsor': opts['sponsor'],
        'sponsor_classification': opts['sponsorClassification'],
        'q': opts['q'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'multi'),
        'page': opts['page'],
        'per_page': opts['perPage'],
        'apikey': opts['apikey']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BillList;
      return this.apiClient.callApi(
        '/bills', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
