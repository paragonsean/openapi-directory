/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';
import Jurisdiction from '../model/Jurisdiction';
import JurisdictionClassification from '../model/JurisdictionClassification';
import JurisdictionInclude from '../model/JurisdictionInclude';
import JurisdictionList from '../model/JurisdictionList';

/**
* Jurisdictions service.
* @module api/JurisdictionsApi
* @version 2021.11.12
*/
export default class JurisdictionsApi {

    /**
    * Constructs a new JurisdictionsApi. 
    * @alias module:api/JurisdictionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the jurisdictionDetailJurisdictionsJurisdictionIdGet operation.
     * @callback module:api/JurisdictionsApi~jurisdictionDetailJurisdictionsJurisdictionIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Jurisdiction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Jurisdiction Detail
     * Get details on a single Jurisdiction (e.g. state or municipality).
     * @param {String} jurisdictionId 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/JurisdictionInclude>} [include] Additional includes for the Jurisdiction response.
     * @param {String} [apikey] 
     * @param {String} [xApiKey] 
     * @param {module:api/JurisdictionsApi~jurisdictionDetailJurisdictionsJurisdictionIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Jurisdiction}
     */
    jurisdictionDetailJurisdictionsJurisdictionIdGet(jurisdictionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jurisdictionId' is set
      if (jurisdictionId === undefined || jurisdictionId === null) {
        throw new Error("Missing the required parameter 'jurisdictionId' when calling jurisdictionDetailJurisdictionsJurisdictionIdGet");
      }

      let pathParams = {
        'jurisdiction_id': jurisdictionId
      };
      let queryParams = {
        'include': this.apiClient.buildCollectionParam(opts['include'], 'multi'),
        'apikey': opts['apikey']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Jurisdiction;
      return this.apiClient.callApi(
        '/jurisdictions/{jurisdiction_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jurisdictionListJurisdictionsGet operation.
     * @callback module:api/JurisdictionsApi~jurisdictionListJurisdictionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JurisdictionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Jurisdiction List
     * Get list of supported Jurisdictions, a Jurisdiction is a state or municipality.
     * @param {Object} opts Optional parameters
     * @param {module:model/JurisdictionClassification} [classification] Filter returned jurisdictions by type.
     * @param {Array.<module:model/JurisdictionInclude>} [include] Additional information to include in response.
     * @param {Number} [page = 1)] 
     * @param {Number} [perPage = 52)] 
     * @param {String} [apikey] 
     * @param {String} [xApiKey] 
     * @param {module:api/JurisdictionsApi~jurisdictionListJurisdictionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JurisdictionList}
     */
    jurisdictionListJurisdictionsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'classification': opts['classification'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'multi'),
        'page': opts['page'],
        'per_page': opts['perPage'],
        'apikey': opts['apikey']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JurisdictionList;
      return this.apiClient.callApi(
        '/jurisdictions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
