/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenStatesApiV3);
  }
}(this, function(expect, OpenStatesApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenStatesApiV3.Bill();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Bill', function() {
    it('should create an instance of Bill', function() {
      // uncomment below and update the code to test Bill
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be.a(OpenStatesApiV3.Bill);
    });

    it('should have the property abstracts (base name: "abstracts")', function() {
      // uncomment below and update the code to test the property abstracts
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property actions (base name: "actions")', function() {
      // uncomment below and update the code to test the property actions
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property classification (base name: "classification")', function() {
      // uncomment below and update the code to test the property classification
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property documents (base name: "documents")', function() {
      // uncomment below and update the code to test the property documents
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property extras (base name: "extras")', function() {
      // uncomment below and update the code to test the property extras
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property firstActionDate (base name: "first_action_date")', function() {
      // uncomment below and update the code to test the property firstActionDate
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property fromOrganization (base name: "from_organization")', function() {
      // uncomment below and update the code to test the property fromOrganization
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property jurisdiction (base name: "jurisdiction")', function() {
      // uncomment below and update the code to test the property jurisdiction
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property latestActionDate (base name: "latest_action_date")', function() {
      // uncomment below and update the code to test the property latestActionDate
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property latestActionDescription (base name: "latest_action_description")', function() {
      // uncomment below and update the code to test the property latestActionDescription
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property latestPassageDate (base name: "latest_passage_date")', function() {
      // uncomment below and update the code to test the property latestPassageDate
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property openstatesUrl (base name: "openstates_url")', function() {
      // uncomment below and update the code to test the property openstatesUrl
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property otherIdentifiers (base name: "other_identifiers")', function() {
      // uncomment below and update the code to test the property otherIdentifiers
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property otherTitles (base name: "other_titles")', function() {
      // uncomment below and update the code to test the property otherTitles
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property relatedBills (base name: "related_bills")', function() {
      // uncomment below and update the code to test the property relatedBills
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property session (base name: "session")', function() {
      // uncomment below and update the code to test the property session
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property sources (base name: "sources")', function() {
      // uncomment below and update the code to test the property sources
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property sponsorships (base name: "sponsorships")', function() {
      // uncomment below and update the code to test the property sponsorships
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property subject (base name: "subject")', function() {
      // uncomment below and update the code to test the property subject
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property versions (base name: "versions")', function() {
      // uncomment below and update the code to test the property versions
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

    it('should have the property votes (base name: "votes")', function() {
      // uncomment below and update the code to test the property votes
      //var instance = new OpenStatesApiV3.Bill();
      //expect(instance).to.be();
    });

  });

}));
