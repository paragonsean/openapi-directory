/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillIdentifier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillIdentifier::OAIBillIdentifier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillIdentifier::OAIBillIdentifier() {
    this->initializeModel();
}

OAIBillIdentifier::~OAIBillIdentifier() {}

void OAIBillIdentifier::initializeModel() {

    m_identifier_isSet = false;
    m_identifier_isValid = false;
}

void OAIBillIdentifier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillIdentifier::fromJsonObject(QJsonObject json) {

    m_identifier_isValid = ::OpenAPI::fromJsonValue(m_identifier, json[QString("identifier")]);
    m_identifier_isSet = !json[QString("identifier")].isNull() && m_identifier_isValid;
}

QString OAIBillIdentifier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillIdentifier::asJsonObject() const {
    QJsonObject obj;
    if (m_identifier_isSet) {
        obj.insert(QString("identifier"), ::OpenAPI::toJsonValue(m_identifier));
    }
    return obj;
}

QString OAIBillIdentifier::getIdentifier() const {
    return m_identifier;
}
void OAIBillIdentifier::setIdentifier(const QString &identifier) {
    m_identifier = identifier;
    m_identifier_isSet = true;
}

bool OAIBillIdentifier::is_identifier_Set() const{
    return m_identifier_isSet;
}

bool OAIBillIdentifier::is_identifier_Valid() const{
    return m_identifier_isValid;
}

bool OAIBillIdentifier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillIdentifier::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_identifier_isValid && true;
}

} // namespace OpenAPI
