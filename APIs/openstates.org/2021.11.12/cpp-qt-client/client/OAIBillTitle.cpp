/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillTitle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillTitle::OAIBillTitle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillTitle::OAIBillTitle() {
    this->initializeModel();
}

OAIBillTitle::~OAIBillTitle() {}

void OAIBillTitle::initializeModel() {

    m_note_isSet = false;
    m_note_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIBillTitle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillTitle::fromJsonObject(QJsonObject json) {

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIBillTitle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillTitle::asJsonObject() const {
    QJsonObject obj;
    if (m_note_isSet) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIBillTitle::getNote() const {
    return m_note;
}
void OAIBillTitle::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAIBillTitle::is_note_Set() const{
    return m_note_isSet;
}

bool OAIBillTitle::is_note_Valid() const{
    return m_note_isValid;
}

QString OAIBillTitle::getTitle() const {
    return m_title;
}
void OAIBillTitle::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIBillTitle::is_title_Set() const{
    return m_title_isSet;
}

bool OAIBillTitle::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIBillTitle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillTitle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_note_isValid && m_title_isValid && true;
}

} // namespace OpenAPI
