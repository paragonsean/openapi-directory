/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventRelatedEntity.h
 *
 * 
 */

#ifndef OAIEventRelatedEntity_H
#define OAIEventRelatedEntity_H

#include <QJsonObject>

#include "OAICompactBill.h"
#include "OAICompactPerson.h"
#include "OAICompactVoteEvent.h"
#include "OAIOrganization.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICompactBill;
class OAIOrganization;
class OAICompactPerson;
class OAICompactVoteEvent;

class OAIEventRelatedEntity : public OAIObject {
public:
    OAIEventRelatedEntity();
    OAIEventRelatedEntity(QString json);
    ~OAIEventRelatedEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICompactBill getBill() const;
    void setBill(const OAICompactBill &bill);
    bool is_bill_Set() const;
    bool is_bill_Valid() const;

    QString getEntityType() const;
    void setEntityType(const QString &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    OAIOrganization getOrganization() const;
    void setOrganization(const OAIOrganization &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    OAICompactPerson getPerson() const;
    void setPerson(const OAICompactPerson &person);
    bool is_person_Set() const;
    bool is_person_Valid() const;

    OAICompactVoteEvent getVote() const;
    void setVote(const OAICompactVoteEvent &vote);
    bool is_vote_Set() const;
    bool is_vote_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICompactBill m_bill;
    bool m_bill_isSet;
    bool m_bill_isValid;

    QString m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    OAIOrganization m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    OAICompactPerson m_person;
    bool m_person_isSet;
    bool m_person_isValid;

    OAICompactVoteEvent m_vote;
    bool m_vote_isSet;
    bool m_vote_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventRelatedEntity)

#endif // OAIEventRelatedEntity_H
