/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILegislativeSession.h
 *
 * 
 */

#ifndef OAILegislativeSession_H
#define OAILegislativeSession_H

#include <QJsonObject>

#include "OAIDataExport.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataExport;

class OAILegislativeSession : public OAIObject {
public:
    OAILegislativeSession();
    OAILegislativeSession(QString json);
    ~OAILegislativeSession() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClassification() const;
    void setClassification(const QString &classification);
    bool is_classification_Set() const;
    bool is_classification_Valid() const;

    QList<OAIDataExport> getDownloads() const;
    void setDownloads(const QList<OAIDataExport> &downloads);
    bool is_downloads_Set() const;
    bool is_downloads_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_classification;
    bool m_classification_isSet;
    bool m_classification_isValid;

    QList<OAIDataExport> m_downloads;
    bool m_downloads_isSet;
    bool m_downloads_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILegislativeSession)

#endif // OAILegislativeSession_H
