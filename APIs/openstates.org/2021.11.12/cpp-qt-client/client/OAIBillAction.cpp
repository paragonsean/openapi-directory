/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillAction::OAIBillAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillAction::OAIBillAction() {
    this->initializeModel();
}

OAIBillAction::~OAIBillAction() {}

void OAIBillAction::initializeModel() {

    m_classification_isSet = false;
    m_classification_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;

    m_organization_isSet = false;
    m_organization_isValid = false;
}

void OAIBillAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillAction::fromJsonObject(QJsonObject json) {

    m_classification_isValid = ::OpenAPI::fromJsonValue(m_classification, json[QString("classification")]);
    m_classification_isSet = !json[QString("classification")].isNull() && m_classification_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;

    m_organization_isValid = ::OpenAPI::fromJsonValue(m_organization, json[QString("organization")]);
    m_organization_isSet = !json[QString("organization")].isNull() && m_organization_isValid;
}

QString OAIBillAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillAction::asJsonObject() const {
    QJsonObject obj;
    if (m_classification.size() > 0) {
        obj.insert(QString("classification"), ::OpenAPI::toJsonValue(m_classification));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    if (m_organization.isSet()) {
        obj.insert(QString("organization"), ::OpenAPI::toJsonValue(m_organization));
    }
    return obj;
}

QList<QString> OAIBillAction::getClassification() const {
    return m_classification;
}
void OAIBillAction::setClassification(const QList<QString> &classification) {
    m_classification = classification;
    m_classification_isSet = true;
}

bool OAIBillAction::is_classification_Set() const{
    return m_classification_isSet;
}

bool OAIBillAction::is_classification_Valid() const{
    return m_classification_isValid;
}

QString OAIBillAction::getDate() const {
    return m_date;
}
void OAIBillAction::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIBillAction::is_date_Set() const{
    return m_date_isSet;
}

bool OAIBillAction::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIBillAction::getDescription() const {
    return m_description;
}
void OAIBillAction::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIBillAction::is_description_Set() const{
    return m_description_isSet;
}

bool OAIBillAction::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAIBillAction::getOrder() const {
    return m_order;
}
void OAIBillAction::setOrder(const qint32 &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAIBillAction::is_order_Set() const{
    return m_order_isSet;
}

bool OAIBillAction::is_order_Valid() const{
    return m_order_isValid;
}

OAIOrganization OAIBillAction::getOrganization() const {
    return m_organization;
}
void OAIBillAction::setOrganization(const OAIOrganization &organization) {
    m_organization = organization;
    m_organization_isSet = true;
}

bool OAIBillAction::is_organization_Set() const{
    return m_organization_isSet;
}

bool OAIBillAction::is_organization_Valid() const{
    return m_organization_isValid;
}

bool OAIBillAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_classification.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_classification_isValid && m_date_isValid && m_description_isValid && m_order_isValid && m_organization_isValid && true;
}

} // namespace OpenAPI
