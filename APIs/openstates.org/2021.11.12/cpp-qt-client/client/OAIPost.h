/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPost.h
 *
 * 
 */

#ifndef OAIPost_H
#define OAIPost_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPost : public OAIObject {
public:
    OAIPost();
    OAIPost(QString json);
    ~OAIPost() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDivisionId() const;
    void setDivisionId(const QString &division_id);
    bool is_division_id_Set() const;
    bool is_division_id_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    qint32 getMaximumMemberships() const;
    void setMaximumMemberships(const qint32 &maximum_memberships);
    bool is_maximum_memberships_Set() const;
    bool is_maximum_memberships_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_division_id;
    bool m_division_id_isSet;
    bool m_division_id_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    qint32 m_maximum_memberships;
    bool m_maximum_memberships_isSet;
    bool m_maximum_memberships_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPost)

#endif // OAIPost_H
