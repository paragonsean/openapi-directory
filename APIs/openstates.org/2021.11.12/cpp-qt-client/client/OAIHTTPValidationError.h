/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHTTPValidationError.h
 *
 * 
 */

#ifndef OAIHTTPValidationError_H
#define OAIHTTPValidationError_H

#include <QJsonObject>

#include "OAIValidationError.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIValidationError;

class OAIHTTPValidationError : public OAIObject {
public:
    OAIHTTPValidationError();
    OAIHTTPValidationError(QString json);
    ~OAIHTTPValidationError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIValidationError> getDetail() const;
    void setDetail(const QList<OAIValidationError> &detail);
    bool is_detail_Set() const;
    bool is_detail_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIValidationError> m_detail;
    bool m_detail_isSet;
    bool m_detail_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHTTPValidationError)

#endif // OAIHTTPValidationError_H
