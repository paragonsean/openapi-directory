/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * 
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "OAICompactJurisdiction.h"
#include "OAIEventAgendaItem.h"
#include "OAIEventDocument.h"
#include "OAIEventLocation.h"
#include "OAIEventMedia.h"
#include "OAIEventParticipant.h"
#include "OAILink.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventAgendaItem;
class OAIEventDocument;
class OAICompactJurisdiction;
class OAILink;
class OAIEventLocation;
class OAIEventMedia;
class OAIEventParticipant;

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEventAgendaItem> getAgenda() const;
    void setAgenda(const QList<OAIEventAgendaItem> &agenda);
    bool is_agenda_Set() const;
    bool is_agenda_Valid() const;

    bool isAllDay() const;
    void setAllDay(const bool &all_day);
    bool is_all_day_Set() const;
    bool is_all_day_Valid() const;

    QString getClassification() const;
    void setClassification(const QString &classification);
    bool is_classification_Set() const;
    bool is_classification_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIEventDocument> getDocuments() const;
    void setDocuments(const QList<OAIEventDocument> &documents);
    bool is_documents_Set() const;
    bool is_documents_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAICompactJurisdiction getJurisdiction() const;
    void setJurisdiction(const OAICompactJurisdiction &jurisdiction);
    bool is_jurisdiction_Set() const;
    bool is_jurisdiction_Valid() const;

    QList<OAILink> getLinks() const;
    void setLinks(const QList<OAILink> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIEventLocation getLocation() const;
    void setLocation(const OAIEventLocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QList<OAIEventMedia> getMedia() const;
    void setMedia(const QList<OAIEventMedia> &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIEventParticipant> getParticipants() const;
    void setParticipants(const QList<OAIEventParticipant> &participants);
    bool is_participants_Set() const;
    bool is_participants_Valid() const;

    QList<OAILink> getSources() const;
    void setSources(const QList<OAILink> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUpstreamId() const;
    void setUpstreamId(const QString &upstream_id);
    bool is_upstream_id_Set() const;
    bool is_upstream_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEventAgendaItem> m_agenda;
    bool m_agenda_isSet;
    bool m_agenda_isValid;

    bool m_all_day;
    bool m_all_day_isSet;
    bool m_all_day_isValid;

    QString m_classification;
    bool m_classification_isSet;
    bool m_classification_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIEventDocument> m_documents;
    bool m_documents_isSet;
    bool m_documents_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAICompactJurisdiction m_jurisdiction;
    bool m_jurisdiction_isSet;
    bool m_jurisdiction_isValid;

    QList<OAILink> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIEventLocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QList<OAIEventMedia> m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIEventParticipant> m_participants;
    bool m_participants_isSet;
    bool m_participants_isValid;

    QList<OAILink> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_upstream_id;
    bool m_upstream_id_isSet;
    bool m_upstream_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
