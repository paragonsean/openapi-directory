/**
 * Open States API v3
 *  * [More documentation](https://docs.openstates.org/en/latest/api/v3/index.html) * [Register for an account](https://openstates.org/accounts/signup/)   **We are currently working to restore experimental support for committees & events.**  During this period please note that data is not yet available for all states and the exact format of the new endpoints may change slightly depending on user feedback.  If you have any issues or questions use our [GitHub Issues](https://github.com/openstates/issues/issues) to give feedback. 
 *
 * The version of the OpenAPI document: 2021.11.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompactBill.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompactBill::OAICompactBill(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompactBill::OAICompactBill() {
    this->initializeModel();
}

OAICompactBill::~OAICompactBill() {}

void OAICompactBill::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_identifier_isSet = false;
    m_identifier_isValid = false;

    m_session_isSet = false;
    m_session_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAICompactBill::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompactBill::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_identifier_isValid = ::OpenAPI::fromJsonValue(m_identifier, json[QString("identifier")]);
    m_identifier_isSet = !json[QString("identifier")].isNull() && m_identifier_isValid;

    m_session_isValid = ::OpenAPI::fromJsonValue(m_session, json[QString("session")]);
    m_session_isSet = !json[QString("session")].isNull() && m_session_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAICompactBill::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompactBill::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_identifier_isSet) {
        obj.insert(QString("identifier"), ::OpenAPI::toJsonValue(m_identifier));
    }
    if (m_session_isSet) {
        obj.insert(QString("session"), ::OpenAPI::toJsonValue(m_session));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAICompactBill::getId() const {
    return m_id;
}
void OAICompactBill::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICompactBill::is_id_Set() const{
    return m_id_isSet;
}

bool OAICompactBill::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICompactBill::getIdentifier() const {
    return m_identifier;
}
void OAICompactBill::setIdentifier(const QString &identifier) {
    m_identifier = identifier;
    m_identifier_isSet = true;
}

bool OAICompactBill::is_identifier_Set() const{
    return m_identifier_isSet;
}

bool OAICompactBill::is_identifier_Valid() const{
    return m_identifier_isValid;
}

QString OAICompactBill::getSession() const {
    return m_session;
}
void OAICompactBill::setSession(const QString &session) {
    m_session = session;
    m_session_isSet = true;
}

bool OAICompactBill::is_session_Set() const{
    return m_session_isSet;
}

bool OAICompactBill::is_session_Valid() const{
    return m_session_isValid;
}

QString OAICompactBill::getTitle() const {
    return m_title;
}
void OAICompactBill::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICompactBill::is_title_Set() const{
    return m_title_isSet;
}

bool OAICompactBill::is_title_Valid() const{
    return m_title_isValid;
}

bool OAICompactBill::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompactBill::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_identifier_isValid && m_session_isValid && m_title_isValid && true;
}

} // namespace OpenAPI
