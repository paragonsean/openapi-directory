/**
 * Redeal Analytics API
 * Access analytics for Redeal
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@redeal.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EventRecord from '../model/EventRecord';

/**
* Developers service.
* @module api/DevelopersApi
* @version 1.0.0
*/
export default class DevelopersApi {

    /**
    * Constructs a new DevelopersApi. 
    * @alias module:api/DevelopersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getEvents operation.
     * @callback module:api/DevelopersApi~getEventsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EventRecord>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get events for analytics
     * By passing in the company, site or deal Id a set of user interaction event records is returned. For pagination of a large result set use queryexecutionid and nexttoken instead. 
     * @param {Object} opts Optional parameters
     * @param {String} [company] pass an optional company Id
     * @param {String} [site] pass an optional site Id
     * @param {String} [deal] pass an optional deal Id
     * @param {module:model/String} [type] type of records to return
     * @param {String} [nexttoken] next token to start returning records from
     * @param {String} [queryexecutionid] id of execution to get more records based on next token
     * @param {module:api/DevelopersApi~getEventsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EventRecord>}
     */
    getEvents(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'company': opts['company'],
        'site': opts['site'],
        'deal': opts['deal'],
        'type': opts['type'],
        'nexttoken': opts['nexttoken'],
        'queryexecutionid': opts['queryexecutionid']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [EventRecord];
      return this.apiClient.callApi(
        '/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
