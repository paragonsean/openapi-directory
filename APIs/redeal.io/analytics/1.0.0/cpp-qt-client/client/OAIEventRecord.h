/**
 * Redeal Analytics API
 * Access analytics for Redeal
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@redeal.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventRecord.h
 *
 * 
 */

#ifndef OAIEventRecord_H
#define OAIEventRecord_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventRecord : public OAIObject {
public:
    OAIEventRecord();
    OAIEventRecord(QString json);
    ~OAIEventRecord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgent() const;
    void setAgent(const QString &agent);
    bool is_agent_Set() const;
    bool is_agent_Valid() const;

    QString getBrowsertype() const;
    void setBrowsertype(const QString &browsertype);
    bool is_browsertype_Set() const;
    bool is_browsertype_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getClick() const;
    void setClick(const QString &click);
    bool is_click_Set() const;
    bool is_click_Valid() const;

    qint32 getClicks() const;
    void setClicks(const qint32 &clicks);
    bool is_clicks_Set() const;
    bool is_clicks_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QString getContact() const;
    void setContact(const QString &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    double getCost() const;
    void setCost(const double &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    QString getCostcurrency() const;
    void setCostcurrency(const QString &costcurrency);
    bool is_costcurrency_Set() const;
    bool is_costcurrency_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDeal() const;
    void setDeal(const QString &deal);
    bool is_deal_Set() const;
    bool is_deal_Valid() const;

    QString getDealName() const;
    void setDealName(const QString &deal_name);
    bool is_deal_name_Set() const;
    bool is_deal_name_Valid() const;

    qint32 getDelay() const;
    void setDelay(const qint32 &delay);
    bool is_delay_Set() const;
    bool is_delay_Valid() const;

    QString getDenyreason() const;
    void setDenyreason(const QString &denyreason);
    bool is_denyreason_Set() const;
    bool is_denyreason_Valid() const;

    QString getDevice() const;
    void setDevice(const QString &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    QString getDevicetype() const;
    void setDevicetype(const QString &devicetype);
    bool is_devicetype_Set() const;
    bool is_devicetype_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getEmailaddrsha256() const;
    void setEmailaddrsha256(const QString &emailaddrsha256);
    bool is_emailaddrsha256_Set() const;
    bool is_emailaddrsha256_Valid() const;

    QString getFlow() const;
    void setFlow(const QString &flow);
    bool is_flow_Set() const;
    bool is_flow_Valid() const;

    QString getFlowstep() const;
    void setFlowstep(const QString &flowstep);
    bool is_flowstep_Set() const;
    bool is_flowstep_Valid() const;

    QString getFlowtype() const;
    void setFlowtype(const QString &flowtype);
    bool is_flowtype_Set() const;
    bool is_flowtype_Valid() const;

    QString getImpression() const;
    void setImpression(const QString &impression);
    bool is_impression_Set() const;
    bool is_impression_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getLatitude() const;
    void setLatitude(const QString &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    QString getLongitude() const;
    void setLongitude(const QString &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getOptin() const;
    void setOptin(const QString &optin);
    bool is_optin_Set() const;
    bool is_optin_Valid() const;

    QString getOs() const;
    void setOs(const QString &os);
    bool is_os_Set() const;
    bool is_os_Valid() const;

    QString getResolution() const;
    void setResolution(const QString &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    double getRevenue() const;
    void setRevenue(const double &revenue);
    bool is_revenue_Set() const;
    bool is_revenue_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getSession() const;
    void setSession(const QString &session);
    bool is_session_Set() const;
    bool is_session_Valid() const;

    QString getSite() const;
    void setSite(const QString &site);
    bool is_site_Set() const;
    bool is_site_Valid() const;

    QString getSiteName() const;
    void setSiteName(const QString &site_name);
    bool is_site_name_Set() const;
    bool is_site_name_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getUserlanguage() const;
    void setUserlanguage(const QString &userlanguage);
    bool is_userlanguage_Set() const;
    bool is_userlanguage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agent;
    bool m_agent_isSet;
    bool m_agent_isValid;

    QString m_browsertype;
    bool m_browsertype_isSet;
    bool m_browsertype_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_click;
    bool m_click_isSet;
    bool m_click_isValid;

    qint32 m_clicks;
    bool m_clicks_isSet;
    bool m_clicks_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QString m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    double m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    QString m_costcurrency;
    bool m_costcurrency_isSet;
    bool m_costcurrency_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_deal;
    bool m_deal_isSet;
    bool m_deal_isValid;

    QString m_deal_name;
    bool m_deal_name_isSet;
    bool m_deal_name_isValid;

    qint32 m_delay;
    bool m_delay_isSet;
    bool m_delay_isValid;

    QString m_denyreason;
    bool m_denyreason_isSet;
    bool m_denyreason_isValid;

    QString m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    QString m_devicetype;
    bool m_devicetype_isSet;
    bool m_devicetype_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_emailaddrsha256;
    bool m_emailaddrsha256_isSet;
    bool m_emailaddrsha256_isValid;

    QString m_flow;
    bool m_flow_isSet;
    bool m_flow_isValid;

    QString m_flowstep;
    bool m_flowstep_isSet;
    bool m_flowstep_isValid;

    QString m_flowtype;
    bool m_flowtype_isSet;
    bool m_flowtype_isValid;

    QString m_impression;
    bool m_impression_isSet;
    bool m_impression_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    QString m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_optin;
    bool m_optin_isSet;
    bool m_optin_isValid;

    QString m_os;
    bool m_os_isSet;
    bool m_os_isValid;

    QString m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;

    double m_revenue;
    bool m_revenue_isSet;
    bool m_revenue_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_session;
    bool m_session_isSet;
    bool m_session_isValid;

    QString m_site;
    bool m_site_isSet;
    bool m_site_isValid;

    QString m_site_name;
    bool m_site_name_isSet;
    bool m_site_name_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_userlanguage;
    bool m_userlanguage_isSet;
    bool m_userlanguage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventRecord)

#endif // OAIEventRecord_H
