/*
 * LotaData
 * Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.EventOccurenceDetail;
import org.openapitools.client.model.EventsSearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
@Disabled
public class EventsApiTest {

    private final EventsApi api = new EventsApi();

    /**
     * Find event occurrences in the area. Returns results at specific place and time, event groups are expanded for every occurrence.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventsGetTest() throws ApiException {
        String fieldset = null;
        List<String> category = null;
        String activity = null;
        String ambience = null;
        String genre = null;
        String name = null;
        String q = null;
        String fromDay = null;
        String toDay = null;
        BigDecimal capacityMin = null;
        BigDecimal capacityMax = null;
        String center = null;
        Integer radius = null;
        List<String> bbox = null;
        List<String> polygon = null;
        String within = null;
        Integer offset = null;
        Integer limit = null;
        EventsSearchResponse response = api.eventsGet(fieldset, category, activity, ambience, genre, name, q, fromDay, toDay, capacityMin, capacityMax, center, radius, bbox, polygon, within, offset, limit);
        // TODO: test validations
    }

    /**
     * Get Specific event details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventsIdGetTest() throws ApiException {
        String id = null;
        String fieldset = null;
        EventOccurenceDetail response = api.eventsIdGet(id, fieldset);
        // TODO: test validations
    }

}
