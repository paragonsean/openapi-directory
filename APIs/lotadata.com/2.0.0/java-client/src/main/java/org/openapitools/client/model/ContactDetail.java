/*
 * LotaData
 * Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContactDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:02.676450-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContactDetail {
  public static final String SERIALIZED_NAME_DISPLAY_PHONE = "displayPhone";
  @SerializedName(SERIALIZED_NAME_DISPLAY_PHONE)
  private String displayPhone;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FACEBOOK_URL = "facebookUrl";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_URL)
  private String facebookUrl;

  public static final String SERIALIZED_NAME_INSTAGRAM_NAME = "instagramName";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM_NAME)
  private String instagramName;

  public static final String SERIALIZED_NAME_LASTFM_URL = "lastfmUrl";
  @SerializedName(SERIALIZED_NAME_LASTFM_URL)
  private String lastfmUrl;

  public static final String SERIALIZED_NAME_SOUNDCLOUD_URL = "soundcloudUrl";
  @SerializedName(SERIALIZED_NAME_SOUNDCLOUD_URL)
  private String soundcloudUrl;

  public static final String SERIALIZED_NAME_SPOTIFY_URL = "spotifyUrl";
  @SerializedName(SERIALIZED_NAME_SPOTIFY_URL)
  private String spotifyUrl;

  public static final String SERIALIZED_NAME_TWITTER_NAME = "twitterName";
  @SerializedName(SERIALIZED_NAME_TWITTER_NAME)
  private String twitterName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_YOUTUBE_URL = "youtubeUrl";
  @SerializedName(SERIALIZED_NAME_YOUTUBE_URL)
  private String youtubeUrl;

  public ContactDetail() {
  }

  public ContactDetail displayPhone(String displayPhone) {
    this.displayPhone = displayPhone;
    return this;
  }

  /**
   * Get displayPhone
   * @return displayPhone
   */
  @javax.annotation.Nullable
  public String getDisplayPhone() {
    return displayPhone;
  }

  public void setDisplayPhone(String displayPhone) {
    this.displayPhone = displayPhone;
  }


  public ContactDetail email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public ContactDetail facebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
    return this;
  }

  /**
   * Get facebookUrl
   * @return facebookUrl
   */
  @javax.annotation.Nullable
  public String getFacebookUrl() {
    return facebookUrl;
  }

  public void setFacebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
  }


  public ContactDetail instagramName(String instagramName) {
    this.instagramName = instagramName;
    return this;
  }

  /**
   * Get instagramName
   * @return instagramName
   */
  @javax.annotation.Nullable
  public String getInstagramName() {
    return instagramName;
  }

  public void setInstagramName(String instagramName) {
    this.instagramName = instagramName;
  }


  public ContactDetail lastfmUrl(String lastfmUrl) {
    this.lastfmUrl = lastfmUrl;
    return this;
  }

  /**
   * Get lastfmUrl
   * @return lastfmUrl
   */
  @javax.annotation.Nullable
  public String getLastfmUrl() {
    return lastfmUrl;
  }

  public void setLastfmUrl(String lastfmUrl) {
    this.lastfmUrl = lastfmUrl;
  }


  public ContactDetail soundcloudUrl(String soundcloudUrl) {
    this.soundcloudUrl = soundcloudUrl;
    return this;
  }

  /**
   * Get soundcloudUrl
   * @return soundcloudUrl
   */
  @javax.annotation.Nullable
  public String getSoundcloudUrl() {
    return soundcloudUrl;
  }

  public void setSoundcloudUrl(String soundcloudUrl) {
    this.soundcloudUrl = soundcloudUrl;
  }


  public ContactDetail spotifyUrl(String spotifyUrl) {
    this.spotifyUrl = spotifyUrl;
    return this;
  }

  /**
   * Get spotifyUrl
   * @return spotifyUrl
   */
  @javax.annotation.Nullable
  public String getSpotifyUrl() {
    return spotifyUrl;
  }

  public void setSpotifyUrl(String spotifyUrl) {
    this.spotifyUrl = spotifyUrl;
  }


  public ContactDetail twitterName(String twitterName) {
    this.twitterName = twitterName;
    return this;
  }

  /**
   * Get twitterName
   * @return twitterName
   */
  @javax.annotation.Nullable
  public String getTwitterName() {
    return twitterName;
  }

  public void setTwitterName(String twitterName) {
    this.twitterName = twitterName;
  }


  public ContactDetail url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public ContactDetail youtubeUrl(String youtubeUrl) {
    this.youtubeUrl = youtubeUrl;
    return this;
  }

  /**
   * Get youtubeUrl
   * @return youtubeUrl
   */
  @javax.annotation.Nullable
  public String getYoutubeUrl() {
    return youtubeUrl;
  }

  public void setYoutubeUrl(String youtubeUrl) {
    this.youtubeUrl = youtubeUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactDetail contactDetail = (ContactDetail) o;
    return Objects.equals(this.displayPhone, contactDetail.displayPhone) &&
        Objects.equals(this.email, contactDetail.email) &&
        Objects.equals(this.facebookUrl, contactDetail.facebookUrl) &&
        Objects.equals(this.instagramName, contactDetail.instagramName) &&
        Objects.equals(this.lastfmUrl, contactDetail.lastfmUrl) &&
        Objects.equals(this.soundcloudUrl, contactDetail.soundcloudUrl) &&
        Objects.equals(this.spotifyUrl, contactDetail.spotifyUrl) &&
        Objects.equals(this.twitterName, contactDetail.twitterName) &&
        Objects.equals(this.url, contactDetail.url) &&
        Objects.equals(this.youtubeUrl, contactDetail.youtubeUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayPhone, email, facebookUrl, instagramName, lastfmUrl, soundcloudUrl, spotifyUrl, twitterName, url, youtubeUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactDetail {\n");
    sb.append("    displayPhone: ").append(toIndentedString(displayPhone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    facebookUrl: ").append(toIndentedString(facebookUrl)).append("\n");
    sb.append("    instagramName: ").append(toIndentedString(instagramName)).append("\n");
    sb.append("    lastfmUrl: ").append(toIndentedString(lastfmUrl)).append("\n");
    sb.append("    soundcloudUrl: ").append(toIndentedString(soundcloudUrl)).append("\n");
    sb.append("    spotifyUrl: ").append(toIndentedString(spotifyUrl)).append("\n");
    sb.append("    twitterName: ").append(toIndentedString(twitterName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    youtubeUrl: ").append(toIndentedString(youtubeUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayPhone");
    openapiFields.add("email");
    openapiFields.add("facebookUrl");
    openapiFields.add("instagramName");
    openapiFields.add("lastfmUrl");
    openapiFields.add("soundcloudUrl");
    openapiFields.add("spotifyUrl");
    openapiFields.add("twitterName");
    openapiFields.add("url");
    openapiFields.add("youtubeUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContactDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContactDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContactDetail is not found in the empty JSON string", ContactDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContactDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContactDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayPhone") != null && !jsonObj.get("displayPhone").isJsonNull()) && !jsonObj.get("displayPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayPhone").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("facebookUrl") != null && !jsonObj.get("facebookUrl").isJsonNull()) && !jsonObj.get("facebookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebookUrl").toString()));
      }
      if ((jsonObj.get("instagramName") != null && !jsonObj.get("instagramName").isJsonNull()) && !jsonObj.get("instagramName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instagramName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instagramName").toString()));
      }
      if ((jsonObj.get("lastfmUrl") != null && !jsonObj.get("lastfmUrl").isJsonNull()) && !jsonObj.get("lastfmUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastfmUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastfmUrl").toString()));
      }
      if ((jsonObj.get("soundcloudUrl") != null && !jsonObj.get("soundcloudUrl").isJsonNull()) && !jsonObj.get("soundcloudUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `soundcloudUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("soundcloudUrl").toString()));
      }
      if ((jsonObj.get("spotifyUrl") != null && !jsonObj.get("spotifyUrl").isJsonNull()) && !jsonObj.get("spotifyUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spotifyUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spotifyUrl").toString()));
      }
      if ((jsonObj.get("twitterName") != null && !jsonObj.get("twitterName").isJsonNull()) && !jsonObj.get("twitterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitterName").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("youtubeUrl") != null && !jsonObj.get("youtubeUrl").isJsonNull()) && !jsonObj.get("youtubeUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `youtubeUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("youtubeUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContactDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContactDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContactDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContactDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<ContactDetail>() {
           @Override
           public void write(JsonWriter out, ContactDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContactDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContactDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContactDetail
   * @throws IOException if the JSON string is invalid with respect to ContactDetail
   */
  public static ContactDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContactDetail.class);
  }

  /**
   * Convert an instance of ContactDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

