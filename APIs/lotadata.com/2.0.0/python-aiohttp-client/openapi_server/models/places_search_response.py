# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.place_detail import PlaceDetail
from openapi_server.models.places_query import PlacesQuery
from openapi_server.models.search_stats_meta_result import SearchStatsMetaResult
from openapi_server import util


class PlacesSearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, places: List[PlaceDetail]=None, query: PlacesQuery=None, stats: SearchStatsMetaResult=None):
        """PlacesSearchResponse - a model defined in OpenAPI

        :param places: The places of this PlacesSearchResponse.
        :param query: The query of this PlacesSearchResponse.
        :param stats: The stats of this PlacesSearchResponse.
        """
        self.openapi_types = {
            'places': List[PlaceDetail],
            'query': PlacesQuery,
            'stats': SearchStatsMetaResult
        }

        self.attribute_map = {
            'places': 'places',
            'query': 'query',
            'stats': 'stats'
        }

        self._places = places
        self._query = query
        self._stats = stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlacesSearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlacesSearchResponse of this PlacesSearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def places(self):
        """Gets the places of this PlacesSearchResponse.


        :return: The places of this PlacesSearchResponse.
        :rtype: List[PlaceDetail]
        """
        return self._places

    @places.setter
    def places(self, places):
        """Sets the places of this PlacesSearchResponse.


        :param places: The places of this PlacesSearchResponse.
        :type places: List[PlaceDetail]
        """

        self._places = places

    @property
    def query(self):
        """Gets the query of this PlacesSearchResponse.


        :return: The query of this PlacesSearchResponse.
        :rtype: PlacesQuery
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this PlacesSearchResponse.


        :param query: The query of this PlacesSearchResponse.
        :type query: PlacesQuery
        """

        self._query = query

    @property
    def stats(self):
        """Gets the stats of this PlacesSearchResponse.


        :return: The stats of this PlacesSearchResponse.
        :rtype: SearchStatsMetaResult
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this PlacesSearchResponse.


        :param stats: The stats of this PlacesSearchResponse.
        :type stats: SearchStatsMetaResult
        """

        self._stats = stats
