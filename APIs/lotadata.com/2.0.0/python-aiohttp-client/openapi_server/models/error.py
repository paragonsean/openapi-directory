# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_cause import ErrorCause
from openapi_server.models.error_tracking import ErrorTracking
from openapi_server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cause: ErrorCause=None, message: str=None, status: int=None, tracking: ErrorTracking=None):
        """Error - a model defined in OpenAPI

        :param cause: The cause of this Error.
        :param message: The message of this Error.
        :param status: The status of this Error.
        :param tracking: The tracking of this Error.
        """
        self.openapi_types = {
            'cause': ErrorCause,
            'message': str,
            'status': int,
            'tracking': ErrorTracking
        }

        self.attribute_map = {
            'cause': 'cause',
            'message': 'message',
            'status': 'status',
            'tracking': 'tracking'
        }

        self._cause = cause
        self._message = message
        self._status = status
        self._tracking = tracking

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Error of this Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cause(self):
        """Gets the cause of this Error.


        :return: The cause of this Error.
        :rtype: ErrorCause
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this Error.


        :param cause: The cause of this Error.
        :type cause: ErrorCause
        """

        self._cause = cause

    @property
    def message(self):
        """Gets the message of this Error.


        :return: The message of this Error.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Error.


        :param message: The message of this Error.
        :type message: str
        """

        self._message = message

    @property
    def status(self):
        """Gets the status of this Error.


        :return: The status of this Error.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Error.


        :param status: The status of this Error.
        :type status: int
        """

        self._status = status

    @property
    def tracking(self):
        """Gets the tracking of this Error.


        :return: The tracking of this Error.
        :rtype: ErrorTracking
        """
        return self._tracking

    @tracking.setter
    def tracking(self, tracking):
        """Sets the tracking of this Error.


        :param tracking: The tracking of this Error.
        :type tracking: ErrorTracking
        """

        self._tracking = tracking
