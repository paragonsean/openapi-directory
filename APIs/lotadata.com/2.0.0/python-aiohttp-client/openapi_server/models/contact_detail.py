# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_phone: str=None, email: str=None, facebook_url: str=None, instagram_name: str=None, lastfm_url: str=None, soundcloud_url: str=None, spotify_url: str=None, twitter_name: str=None, url: str=None, youtube_url: str=None):
        """ContactDetail - a model defined in OpenAPI

        :param display_phone: The display_phone of this ContactDetail.
        :param email: The email of this ContactDetail.
        :param facebook_url: The facebook_url of this ContactDetail.
        :param instagram_name: The instagram_name of this ContactDetail.
        :param lastfm_url: The lastfm_url of this ContactDetail.
        :param soundcloud_url: The soundcloud_url of this ContactDetail.
        :param spotify_url: The spotify_url of this ContactDetail.
        :param twitter_name: The twitter_name of this ContactDetail.
        :param url: The url of this ContactDetail.
        :param youtube_url: The youtube_url of this ContactDetail.
        """
        self.openapi_types = {
            'display_phone': str,
            'email': str,
            'facebook_url': str,
            'instagram_name': str,
            'lastfm_url': str,
            'soundcloud_url': str,
            'spotify_url': str,
            'twitter_name': str,
            'url': str,
            'youtube_url': str
        }

        self.attribute_map = {
            'display_phone': 'displayPhone',
            'email': 'email',
            'facebook_url': 'facebookUrl',
            'instagram_name': 'instagramName',
            'lastfm_url': 'lastfmUrl',
            'soundcloud_url': 'soundcloudUrl',
            'spotify_url': 'spotifyUrl',
            'twitter_name': 'twitterName',
            'url': 'url',
            'youtube_url': 'youtubeUrl'
        }

        self._display_phone = display_phone
        self._email = email
        self._facebook_url = facebook_url
        self._instagram_name = instagram_name
        self._lastfm_url = lastfm_url
        self._soundcloud_url = soundcloud_url
        self._spotify_url = spotify_url
        self._twitter_name = twitter_name
        self._url = url
        self._youtube_url = youtube_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactDetail of this ContactDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_phone(self):
        """Gets the display_phone of this ContactDetail.


        :return: The display_phone of this ContactDetail.
        :rtype: str
        """
        return self._display_phone

    @display_phone.setter
    def display_phone(self, display_phone):
        """Sets the display_phone of this ContactDetail.


        :param display_phone: The display_phone of this ContactDetail.
        :type display_phone: str
        """

        self._display_phone = display_phone

    @property
    def email(self):
        """Gets the email of this ContactDetail.


        :return: The email of this ContactDetail.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ContactDetail.


        :param email: The email of this ContactDetail.
        :type email: str
        """

        self._email = email

    @property
    def facebook_url(self):
        """Gets the facebook_url of this ContactDetail.


        :return: The facebook_url of this ContactDetail.
        :rtype: str
        """
        return self._facebook_url

    @facebook_url.setter
    def facebook_url(self, facebook_url):
        """Sets the facebook_url of this ContactDetail.


        :param facebook_url: The facebook_url of this ContactDetail.
        :type facebook_url: str
        """

        self._facebook_url = facebook_url

    @property
    def instagram_name(self):
        """Gets the instagram_name of this ContactDetail.


        :return: The instagram_name of this ContactDetail.
        :rtype: str
        """
        return self._instagram_name

    @instagram_name.setter
    def instagram_name(self, instagram_name):
        """Sets the instagram_name of this ContactDetail.


        :param instagram_name: The instagram_name of this ContactDetail.
        :type instagram_name: str
        """

        self._instagram_name = instagram_name

    @property
    def lastfm_url(self):
        """Gets the lastfm_url of this ContactDetail.


        :return: The lastfm_url of this ContactDetail.
        :rtype: str
        """
        return self._lastfm_url

    @lastfm_url.setter
    def lastfm_url(self, lastfm_url):
        """Sets the lastfm_url of this ContactDetail.


        :param lastfm_url: The lastfm_url of this ContactDetail.
        :type lastfm_url: str
        """

        self._lastfm_url = lastfm_url

    @property
    def soundcloud_url(self):
        """Gets the soundcloud_url of this ContactDetail.


        :return: The soundcloud_url of this ContactDetail.
        :rtype: str
        """
        return self._soundcloud_url

    @soundcloud_url.setter
    def soundcloud_url(self, soundcloud_url):
        """Sets the soundcloud_url of this ContactDetail.


        :param soundcloud_url: The soundcloud_url of this ContactDetail.
        :type soundcloud_url: str
        """

        self._soundcloud_url = soundcloud_url

    @property
    def spotify_url(self):
        """Gets the spotify_url of this ContactDetail.


        :return: The spotify_url of this ContactDetail.
        :rtype: str
        """
        return self._spotify_url

    @spotify_url.setter
    def spotify_url(self, spotify_url):
        """Sets the spotify_url of this ContactDetail.


        :param spotify_url: The spotify_url of this ContactDetail.
        :type spotify_url: str
        """

        self._spotify_url = spotify_url

    @property
    def twitter_name(self):
        """Gets the twitter_name of this ContactDetail.


        :return: The twitter_name of this ContactDetail.
        :rtype: str
        """
        return self._twitter_name

    @twitter_name.setter
    def twitter_name(self, twitter_name):
        """Sets the twitter_name of this ContactDetail.


        :param twitter_name: The twitter_name of this ContactDetail.
        :type twitter_name: str
        """

        self._twitter_name = twitter_name

    @property
    def url(self):
        """Gets the url of this ContactDetail.


        :return: The url of this ContactDetail.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ContactDetail.


        :param url: The url of this ContactDetail.
        :type url: str
        """

        self._url = url

    @property
    def youtube_url(self):
        """Gets the youtube_url of this ContactDetail.


        :return: The youtube_url of this ContactDetail.
        :rtype: str
        """
        return self._youtube_url

    @youtube_url.setter
    def youtube_url(self, youtube_url):
        """Sets the youtube_url of this ContactDetail.


        :param youtube_url: The youtube_url of this ContactDetail.
        :type youtube_url: str
        """

        self._youtube_url = youtube_url
