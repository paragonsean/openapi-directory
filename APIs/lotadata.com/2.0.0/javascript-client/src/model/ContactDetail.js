/**
 * LotaData
 * Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContactDetail model module.
 * @module model/ContactDetail
 * @version 2.0.0
 */
class ContactDetail {
    /**
     * Constructs a new <code>ContactDetail</code>.
     * @alias module:model/ContactDetail
     */
    constructor() { 
        
        ContactDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContactDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContactDetail} obj Optional instance to populate.
     * @return {module:model/ContactDetail} The populated <code>ContactDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContactDetail();

            if (data.hasOwnProperty('displayPhone')) {
                obj['displayPhone'] = ApiClient.convertToType(data['displayPhone'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('facebookUrl')) {
                obj['facebookUrl'] = ApiClient.convertToType(data['facebookUrl'], 'String');
            }
            if (data.hasOwnProperty('instagramName')) {
                obj['instagramName'] = ApiClient.convertToType(data['instagramName'], 'String');
            }
            if (data.hasOwnProperty('lastfmUrl')) {
                obj['lastfmUrl'] = ApiClient.convertToType(data['lastfmUrl'], 'String');
            }
            if (data.hasOwnProperty('soundcloudUrl')) {
                obj['soundcloudUrl'] = ApiClient.convertToType(data['soundcloudUrl'], 'String');
            }
            if (data.hasOwnProperty('spotifyUrl')) {
                obj['spotifyUrl'] = ApiClient.convertToType(data['spotifyUrl'], 'String');
            }
            if (data.hasOwnProperty('twitterName')) {
                obj['twitterName'] = ApiClient.convertToType(data['twitterName'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('youtubeUrl')) {
                obj['youtubeUrl'] = ApiClient.convertToType(data['youtubeUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContactDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContactDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayPhone'] && !(typeof data['displayPhone'] === 'string' || data['displayPhone'] instanceof String)) {
            throw new Error("Expected the field `displayPhone` to be a primitive type in the JSON string but got " + data['displayPhone']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['facebookUrl'] && !(typeof data['facebookUrl'] === 'string' || data['facebookUrl'] instanceof String)) {
            throw new Error("Expected the field `facebookUrl` to be a primitive type in the JSON string but got " + data['facebookUrl']);
        }
        // ensure the json data is a string
        if (data['instagramName'] && !(typeof data['instagramName'] === 'string' || data['instagramName'] instanceof String)) {
            throw new Error("Expected the field `instagramName` to be a primitive type in the JSON string but got " + data['instagramName']);
        }
        // ensure the json data is a string
        if (data['lastfmUrl'] && !(typeof data['lastfmUrl'] === 'string' || data['lastfmUrl'] instanceof String)) {
            throw new Error("Expected the field `lastfmUrl` to be a primitive type in the JSON string but got " + data['lastfmUrl']);
        }
        // ensure the json data is a string
        if (data['soundcloudUrl'] && !(typeof data['soundcloudUrl'] === 'string' || data['soundcloudUrl'] instanceof String)) {
            throw new Error("Expected the field `soundcloudUrl` to be a primitive type in the JSON string but got " + data['soundcloudUrl']);
        }
        // ensure the json data is a string
        if (data['spotifyUrl'] && !(typeof data['spotifyUrl'] === 'string' || data['spotifyUrl'] instanceof String)) {
            throw new Error("Expected the field `spotifyUrl` to be a primitive type in the JSON string but got " + data['spotifyUrl']);
        }
        // ensure the json data is a string
        if (data['twitterName'] && !(typeof data['twitterName'] === 'string' || data['twitterName'] instanceof String)) {
            throw new Error("Expected the field `twitterName` to be a primitive type in the JSON string but got " + data['twitterName']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['youtubeUrl'] && !(typeof data['youtubeUrl'] === 'string' || data['youtubeUrl'] instanceof String)) {
            throw new Error("Expected the field `youtubeUrl` to be a primitive type in the JSON string but got " + data['youtubeUrl']);
        }

        return true;
    }


}



/**
 * @member {String} displayPhone
 */
ContactDetail.prototype['displayPhone'] = undefined;

/**
 * @member {String} email
 */
ContactDetail.prototype['email'] = undefined;

/**
 * @member {String} facebookUrl
 */
ContactDetail.prototype['facebookUrl'] = undefined;

/**
 * @member {String} instagramName
 */
ContactDetail.prototype['instagramName'] = undefined;

/**
 * @member {String} lastfmUrl
 */
ContactDetail.prototype['lastfmUrl'] = undefined;

/**
 * @member {String} soundcloudUrl
 */
ContactDetail.prototype['soundcloudUrl'] = undefined;

/**
 * @member {String} spotifyUrl
 */
ContactDetail.prototype['spotifyUrl'] = undefined;

/**
 * @member {String} twitterName
 */
ContactDetail.prototype['twitterName'] = undefined;

/**
 * @member {String} url
 */
ContactDetail.prototype['url'] = undefined;

/**
 * @member {String} youtubeUrl
 */
ContactDetail.prototype['youtubeUrl'] = undefined;






export default ContactDetail;

