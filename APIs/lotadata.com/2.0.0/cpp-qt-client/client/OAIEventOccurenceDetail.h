/**
 * LotaData
 * Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventOccurenceDetail.h
 *
 * Event Occurrence Detail limited to requested fieldset.
 */

#ifndef OAIEventOccurenceDetail_H
#define OAIEventOccurenceDetail_H

#include <QJsonObject>

#include "OAIContactDetail.h"
#include "OAIFeatureReference.h"
#include "OAIImageMeta.h"
#include "OAIOccurrenceReference.h"
#include "OAIPlaceReference.h"
#include "OAITicketOffer.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeatureReference;
class OAIPlaceReference;
class OAIContactDetail;
class OAIImageMeta;
class OAITicketOffer;
class OAIOccurrenceReference;

class OAIEventOccurenceDetail : public OAIObject {
public:
    OAIEventOccurenceDetail();
    OAIEventOccurenceDetail(QString json);
    ~OAIEventOccurenceDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<OAIFeatureReference> getActivity() const;
    void setActivity(const QList<OAIFeatureReference> &activity);
    bool is_activity_Set() const;
    bool is_activity_Valid() const;

    QList<OAIFeatureReference> getAmbience() const;
    void setAmbience(const QList<OAIFeatureReference> &ambience);
    bool is_ambience_Set() const;
    bool is_ambience_Valid() const;

    OAIPlaceReference getAt() const;
    void setAt(const OAIPlaceReference &at);
    bool is_at_Set() const;
    bool is_at_Valid() const;

    OAIFeatureReference getAwayTeam() const;
    void setAwayTeam(const OAIFeatureReference &away_team);
    bool is_away_team_Set() const;
    bool is_away_team_Valid() const;

    QList<OAIFeatureReference> getCategory() const;
    void setCategory(const QList<OAIFeatureReference> &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAIContactDetail getContactPoint() const;
    void setContactPoint(const OAIContactDetail &contact_point);
    bool is_contact_point_Set() const;
    bool is_contact_point_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getDoorTime() const;
    void setDoorTime(const QDateTime &door_time);
    bool is_door_time_Set() const;
    bool is_door_time_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    bool isEndApprox() const;
    void setEndApprox(const bool &end_approx);
    bool is_end_approx_Set() const;
    bool is_end_approx_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QList<OAIFeatureReference> getExtTaxonomy() const;
    void setExtTaxonomy(const QList<OAIFeatureReference> &ext_taxonomy);
    bool is_ext_taxonomy_Set() const;
    bool is_ext_taxonomy_Valid() const;

    QList<OAIFeatureReference> getGenre() const;
    void setGenre(const QList<OAIFeatureReference> &genre);
    bool is_genre_Set() const;
    bool is_genre_Valid() const;

    QString getHeadline() const;
    void setHeadline(const QString &headline);
    bool is_headline_Set() const;
    bool is_headline_Valid() const;

    OAIFeatureReference getHomeTeam() const;
    void setHomeTeam(const OAIFeatureReference &home_team);
    bool is_home_team_Set() const;
    bool is_home_team_Valid() const;

    QString getHtmlDescription() const;
    void setHtmlDescription(const QString &html_description);
    bool is_html_description_Set() const;
    bool is_html_description_Valid() const;

    OAIImageMeta getImage() const;
    void setImage(const OAIImageMeta &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    OAIFeatureReference getInLanguage() const;
    void setInLanguage(const OAIFeatureReference &in_language);
    bool is_in_language_Set() const;
    bool is_in_language_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isNoTime() const;
    void setNoTime(const bool &no_time);
    bool is_no_time_Set() const;
    bool is_no_time_Valid() const;

    QList<OAITicketOffer> getOffers() const;
    void setOffers(const QList<OAITicketOffer> &offers);
    bool is_offers_Set() const;
    bool is_offers_Valid() const;

    bool isOnDemand() const;
    void setOnDemand(const bool &on_demand);
    bool is_on_demand_Set() const;
    bool is_on_demand_Valid() const;

    QList<OAIFeatureReference> getPerformer() const;
    void setPerformer(const QList<OAIFeatureReference> &performer);
    bool is_performer_Set() const;
    bool is_performer_Valid() const;

    QList<OAIImageMeta> getPhoto() const;
    void setPhoto(const QList<OAIImageMeta> &photo);
    bool is_photo_Set() const;
    bool is_photo_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    OAIOccurrenceReference getSuperEvent() const;
    void setSuperEvent(const OAIOccurrenceReference &super_event);
    bool is_super_event_Set() const;
    bool is_super_event_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QList<OAIFeatureReference> getWorkPerformed() const;
    void setWorkPerformed(const QList<OAIFeatureReference> &work_performed);
    bool is_work_performed_Set() const;
    bool is_work_performed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<OAIFeatureReference> m_activity;
    bool m_activity_isSet;
    bool m_activity_isValid;

    QList<OAIFeatureReference> m_ambience;
    bool m_ambience_isSet;
    bool m_ambience_isValid;

    OAIPlaceReference m_at;
    bool m_at_isSet;
    bool m_at_isValid;

    OAIFeatureReference m_away_team;
    bool m_away_team_isSet;
    bool m_away_team_isValid;

    QList<OAIFeatureReference> m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAIContactDetail m_contact_point;
    bool m_contact_point_isSet;
    bool m_contact_point_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_door_time;
    bool m_door_time_isSet;
    bool m_door_time_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    bool m_end_approx;
    bool m_end_approx_isSet;
    bool m_end_approx_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QList<OAIFeatureReference> m_ext_taxonomy;
    bool m_ext_taxonomy_isSet;
    bool m_ext_taxonomy_isValid;

    QList<OAIFeatureReference> m_genre;
    bool m_genre_isSet;
    bool m_genre_isValid;

    QString m_headline;
    bool m_headline_isSet;
    bool m_headline_isValid;

    OAIFeatureReference m_home_team;
    bool m_home_team_isSet;
    bool m_home_team_isValid;

    QString m_html_description;
    bool m_html_description_isSet;
    bool m_html_description_isValid;

    OAIImageMeta m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    OAIFeatureReference m_in_language;
    bool m_in_language_isSet;
    bool m_in_language_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_no_time;
    bool m_no_time_isSet;
    bool m_no_time_isValid;

    QList<OAITicketOffer> m_offers;
    bool m_offers_isSet;
    bool m_offers_isValid;

    bool m_on_demand;
    bool m_on_demand_isSet;
    bool m_on_demand_isValid;

    QList<OAIFeatureReference> m_performer;
    bool m_performer_isSet;
    bool m_performer_isValid;

    QList<OAIImageMeta> m_photo;
    bool m_photo_isSet;
    bool m_photo_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    OAIOccurrenceReference m_super_event;
    bool m_super_event_isSet;
    bool m_super_event_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QList<OAIFeatureReference> m_work_performed;
    bool m_work_performed_isSet;
    bool m_work_performed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventOccurenceDetail)

#endif // OAIEventOccurenceDetail_H
