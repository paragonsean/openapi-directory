/**
 * LotaData
 * Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlacesQuery.h
 *
 * Specific filters understood and executed for this query. If your parameter is not visible here, then consult the documentation for correct usage.
 */

#ifndef OAIPlacesQuery_H
#define OAIPlacesQuery_H

#include <QJsonObject>

#include "OAIAddress.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;

class OAIPlacesQuery : public OAIObject {
public:
    OAIPlacesQuery();
    OAIPlacesQuery(QString json);
    ~OAIPlacesQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<QString> getCategory() const;
    void setCategory(const QList<QString> &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<QString> m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlacesQuery)

#endif // OAIPlacesQuery_H
