/**
 * LotaData
 * Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIError.h
 *
 * 
 */

#ifndef OAIError_H
#define OAIError_H

#include <QJsonObject>

#include "OAIError_cause.h"
#include "OAIError_tracking.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIError_cause;
class OAIError_tracking;

class OAIError : public OAIObject {
public:
    OAIError();
    OAIError(QString json);
    ~OAIError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIError_cause getCause() const;
    void setCause(const OAIError_cause &cause);
    bool is_cause_Set() const;
    bool is_cause_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIError_tracking getTracking() const;
    void setTracking(const OAIError_tracking &tracking);
    bool is_tracking_Set() const;
    bool is_tracking_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIError_cause m_cause;
    bool m_cause_isSet;
    bool m_cause_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIError_tracking m_tracking;
    bool m_tracking_isSet;
    bool m_tracking_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIError)

#endif // OAIError_H
