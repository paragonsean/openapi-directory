/**
 * LotaData
 * Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlacesSearchResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlacesSearchResponse::OAIPlacesSearchResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlacesSearchResponse::OAIPlacesSearchResponse() {
    this->initializeModel();
}

OAIPlacesSearchResponse::~OAIPlacesSearchResponse() {}

void OAIPlacesSearchResponse::initializeModel() {

    m_places_isSet = false;
    m_places_isValid = false;

    m_query_isSet = false;
    m_query_isValid = false;

    m_stats_isSet = false;
    m_stats_isValid = false;
}

void OAIPlacesSearchResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlacesSearchResponse::fromJsonObject(QJsonObject json) {

    m_places_isValid = ::OpenAPI::fromJsonValue(m_places, json[QString("places")]);
    m_places_isSet = !json[QString("places")].isNull() && m_places_isValid;

    m_query_isValid = ::OpenAPI::fromJsonValue(m_query, json[QString("query")]);
    m_query_isSet = !json[QString("query")].isNull() && m_query_isValid;

    m_stats_isValid = ::OpenAPI::fromJsonValue(m_stats, json[QString("stats")]);
    m_stats_isSet = !json[QString("stats")].isNull() && m_stats_isValid;
}

QString OAIPlacesSearchResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlacesSearchResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_places.size() > 0) {
        obj.insert(QString("places"), ::OpenAPI::toJsonValue(m_places));
    }
    if (m_query.isSet()) {
        obj.insert(QString("query"), ::OpenAPI::toJsonValue(m_query));
    }
    if (m_stats.isSet()) {
        obj.insert(QString("stats"), ::OpenAPI::toJsonValue(m_stats));
    }
    return obj;
}

QList<OAIPlaceDetail> OAIPlacesSearchResponse::getPlaces() const {
    return m_places;
}
void OAIPlacesSearchResponse::setPlaces(const QList<OAIPlaceDetail> &places) {
    m_places = places;
    m_places_isSet = true;
}

bool OAIPlacesSearchResponse::is_places_Set() const{
    return m_places_isSet;
}

bool OAIPlacesSearchResponse::is_places_Valid() const{
    return m_places_isValid;
}

OAIPlacesQuery OAIPlacesSearchResponse::getQuery() const {
    return m_query;
}
void OAIPlacesSearchResponse::setQuery(const OAIPlacesQuery &query) {
    m_query = query;
    m_query_isSet = true;
}

bool OAIPlacesSearchResponse::is_query_Set() const{
    return m_query_isSet;
}

bool OAIPlacesSearchResponse::is_query_Valid() const{
    return m_query_isValid;
}

OAISearchStatsMetaResult OAIPlacesSearchResponse::getStats() const {
    return m_stats;
}
void OAIPlacesSearchResponse::setStats(const OAISearchStatsMetaResult &stats) {
    m_stats = stats;
    m_stats_isSet = true;
}

bool OAIPlacesSearchResponse::is_stats_Set() const{
    return m_stats_isSet;
}

bool OAIPlacesSearchResponse::is_stats_Valid() const{
    return m_stats_isValid;
}

bool OAIPlacesSearchResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_places.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_query.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlacesSearchResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
