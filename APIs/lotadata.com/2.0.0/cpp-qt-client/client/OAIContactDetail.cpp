/**
 * LotaData
 * Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactDetail::OAIContactDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactDetail::OAIContactDetail() {
    this->initializeModel();
}

OAIContactDetail::~OAIContactDetail() {}

void OAIContactDetail::initializeModel() {

    m_display_phone_isSet = false;
    m_display_phone_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_facebook_url_isSet = false;
    m_facebook_url_isValid = false;

    m_instagram_name_isSet = false;
    m_instagram_name_isValid = false;

    m_lastfm_url_isSet = false;
    m_lastfm_url_isValid = false;

    m_soundcloud_url_isSet = false;
    m_soundcloud_url_isValid = false;

    m_spotify_url_isSet = false;
    m_spotify_url_isValid = false;

    m_twitter_name_isSet = false;
    m_twitter_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_youtube_url_isSet = false;
    m_youtube_url_isValid = false;
}

void OAIContactDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactDetail::fromJsonObject(QJsonObject json) {

    m_display_phone_isValid = ::OpenAPI::fromJsonValue(m_display_phone, json[QString("displayPhone")]);
    m_display_phone_isSet = !json[QString("displayPhone")].isNull() && m_display_phone_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_facebook_url_isValid = ::OpenAPI::fromJsonValue(m_facebook_url, json[QString("facebookUrl")]);
    m_facebook_url_isSet = !json[QString("facebookUrl")].isNull() && m_facebook_url_isValid;

    m_instagram_name_isValid = ::OpenAPI::fromJsonValue(m_instagram_name, json[QString("instagramName")]);
    m_instagram_name_isSet = !json[QString("instagramName")].isNull() && m_instagram_name_isValid;

    m_lastfm_url_isValid = ::OpenAPI::fromJsonValue(m_lastfm_url, json[QString("lastfmUrl")]);
    m_lastfm_url_isSet = !json[QString("lastfmUrl")].isNull() && m_lastfm_url_isValid;

    m_soundcloud_url_isValid = ::OpenAPI::fromJsonValue(m_soundcloud_url, json[QString("soundcloudUrl")]);
    m_soundcloud_url_isSet = !json[QString("soundcloudUrl")].isNull() && m_soundcloud_url_isValid;

    m_spotify_url_isValid = ::OpenAPI::fromJsonValue(m_spotify_url, json[QString("spotifyUrl")]);
    m_spotify_url_isSet = !json[QString("spotifyUrl")].isNull() && m_spotify_url_isValid;

    m_twitter_name_isValid = ::OpenAPI::fromJsonValue(m_twitter_name, json[QString("twitterName")]);
    m_twitter_name_isSet = !json[QString("twitterName")].isNull() && m_twitter_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_youtube_url_isValid = ::OpenAPI::fromJsonValue(m_youtube_url, json[QString("youtubeUrl")]);
    m_youtube_url_isSet = !json[QString("youtubeUrl")].isNull() && m_youtube_url_isValid;
}

QString OAIContactDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_display_phone_isSet) {
        obj.insert(QString("displayPhone"), ::OpenAPI::toJsonValue(m_display_phone));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_facebook_url_isSet) {
        obj.insert(QString("facebookUrl"), ::OpenAPI::toJsonValue(m_facebook_url));
    }
    if (m_instagram_name_isSet) {
        obj.insert(QString("instagramName"), ::OpenAPI::toJsonValue(m_instagram_name));
    }
    if (m_lastfm_url_isSet) {
        obj.insert(QString("lastfmUrl"), ::OpenAPI::toJsonValue(m_lastfm_url));
    }
    if (m_soundcloud_url_isSet) {
        obj.insert(QString("soundcloudUrl"), ::OpenAPI::toJsonValue(m_soundcloud_url));
    }
    if (m_spotify_url_isSet) {
        obj.insert(QString("spotifyUrl"), ::OpenAPI::toJsonValue(m_spotify_url));
    }
    if (m_twitter_name_isSet) {
        obj.insert(QString("twitterName"), ::OpenAPI::toJsonValue(m_twitter_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_youtube_url_isSet) {
        obj.insert(QString("youtubeUrl"), ::OpenAPI::toJsonValue(m_youtube_url));
    }
    return obj;
}

QString OAIContactDetail::getDisplayPhone() const {
    return m_display_phone;
}
void OAIContactDetail::setDisplayPhone(const QString &display_phone) {
    m_display_phone = display_phone;
    m_display_phone_isSet = true;
}

bool OAIContactDetail::is_display_phone_Set() const{
    return m_display_phone_isSet;
}

bool OAIContactDetail::is_display_phone_Valid() const{
    return m_display_phone_isValid;
}

QString OAIContactDetail::getEmail() const {
    return m_email;
}
void OAIContactDetail::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIContactDetail::is_email_Set() const{
    return m_email_isSet;
}

bool OAIContactDetail::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIContactDetail::getFacebookUrl() const {
    return m_facebook_url;
}
void OAIContactDetail::setFacebookUrl(const QString &facebook_url) {
    m_facebook_url = facebook_url;
    m_facebook_url_isSet = true;
}

bool OAIContactDetail::is_facebook_url_Set() const{
    return m_facebook_url_isSet;
}

bool OAIContactDetail::is_facebook_url_Valid() const{
    return m_facebook_url_isValid;
}

QString OAIContactDetail::getInstagramName() const {
    return m_instagram_name;
}
void OAIContactDetail::setInstagramName(const QString &instagram_name) {
    m_instagram_name = instagram_name;
    m_instagram_name_isSet = true;
}

bool OAIContactDetail::is_instagram_name_Set() const{
    return m_instagram_name_isSet;
}

bool OAIContactDetail::is_instagram_name_Valid() const{
    return m_instagram_name_isValid;
}

QString OAIContactDetail::getLastfmUrl() const {
    return m_lastfm_url;
}
void OAIContactDetail::setLastfmUrl(const QString &lastfm_url) {
    m_lastfm_url = lastfm_url;
    m_lastfm_url_isSet = true;
}

bool OAIContactDetail::is_lastfm_url_Set() const{
    return m_lastfm_url_isSet;
}

bool OAIContactDetail::is_lastfm_url_Valid() const{
    return m_lastfm_url_isValid;
}

QString OAIContactDetail::getSoundcloudUrl() const {
    return m_soundcloud_url;
}
void OAIContactDetail::setSoundcloudUrl(const QString &soundcloud_url) {
    m_soundcloud_url = soundcloud_url;
    m_soundcloud_url_isSet = true;
}

bool OAIContactDetail::is_soundcloud_url_Set() const{
    return m_soundcloud_url_isSet;
}

bool OAIContactDetail::is_soundcloud_url_Valid() const{
    return m_soundcloud_url_isValid;
}

QString OAIContactDetail::getSpotifyUrl() const {
    return m_spotify_url;
}
void OAIContactDetail::setSpotifyUrl(const QString &spotify_url) {
    m_spotify_url = spotify_url;
    m_spotify_url_isSet = true;
}

bool OAIContactDetail::is_spotify_url_Set() const{
    return m_spotify_url_isSet;
}

bool OAIContactDetail::is_spotify_url_Valid() const{
    return m_spotify_url_isValid;
}

QString OAIContactDetail::getTwitterName() const {
    return m_twitter_name;
}
void OAIContactDetail::setTwitterName(const QString &twitter_name) {
    m_twitter_name = twitter_name;
    m_twitter_name_isSet = true;
}

bool OAIContactDetail::is_twitter_name_Set() const{
    return m_twitter_name_isSet;
}

bool OAIContactDetail::is_twitter_name_Valid() const{
    return m_twitter_name_isValid;
}

QString OAIContactDetail::getUrl() const {
    return m_url;
}
void OAIContactDetail::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIContactDetail::is_url_Set() const{
    return m_url_isSet;
}

bool OAIContactDetail::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIContactDetail::getYoutubeUrl() const {
    return m_youtube_url;
}
void OAIContactDetail::setYoutubeUrl(const QString &youtube_url) {
    m_youtube_url = youtube_url;
    m_youtube_url_isSet = true;
}

bool OAIContactDetail::is_youtube_url_Set() const{
    return m_youtube_url_isSet;
}

bool OAIContactDetail::is_youtube_url_Valid() const{
    return m_youtube_url_isValid;
}

bool OAIContactDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facebook_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instagram_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lastfm_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_soundcloud_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spotify_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_twitter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_youtube_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
