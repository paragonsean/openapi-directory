/**
 * ConfigCat Public Management API
 * **Base API URL**: https://api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).  The purpose of this API is to access the ConfigCat platform programmatically.  You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.   The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  and JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available here: [swagger.json](v1/swagger.json).  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@configcat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class AuditLogType.
* @enum {}
* @readonly
*/
export default class AuditLogType {
    
        /**
         * value: "productCreated"
         * @const
         */
        "productCreated" = "productCreated";

    
        /**
         * value: "productChanged"
         * @const
         */
        "productChanged" = "productChanged";

    
        /**
         * value: "productOwnershipTransferred"
         * @const
         */
        "productOwnershipTransferred" = "productOwnershipTransferred";

    
        /**
         * value: "productDeleted"
         * @const
         */
        "productDeleted" = "productDeleted";

    
        /**
         * value: "productsReordered"
         * @const
         */
        "productsReordered" = "productsReordered";

    
        /**
         * value: "teamMemberInvited"
         * @const
         */
        "teamMemberInvited" = "teamMemberInvited";

    
        /**
         * value: "teamMemberInvitationRevoked"
         * @const
         */
        "teamMemberInvitationRevoked" = "teamMemberInvitationRevoked";

    
        /**
         * value: "teamMemberJoined"
         * @const
         */
        "teamMemberJoined" = "teamMemberJoined";

    
        /**
         * value: "teamMemberPermissionGroupChanged"
         * @const
         */
        "teamMemberPermissionGroupChanged" = "teamMemberPermissionGroupChanged";

    
        /**
         * value: "teamMemberRemoved"
         * @const
         */
        "teamMemberRemoved" = "teamMemberRemoved";

    
        /**
         * value: "teamMemberLeft"
         * @const
         */
        "teamMemberLeft" = "teamMemberLeft";

    
        /**
         * value: "teamMemberInvitationChanged"
         * @const
         */
        "teamMemberInvitationChanged" = "teamMemberInvitationChanged";

    
        /**
         * value: "teamMemberInvitationResent"
         * @const
         */
        "teamMemberInvitationResent" = "teamMemberInvitationResent";

    
        /**
         * value: "teamMemberInvitationRejected"
         * @const
         */
        "teamMemberInvitationRejected" = "teamMemberInvitationRejected";

    
        /**
         * value: "configCreated"
         * @const
         */
        "configCreated" = "configCreated";

    
        /**
         * value: "configChanged"
         * @const
         */
        "configChanged" = "configChanged";

    
        /**
         * value: "configDeleted"
         * @const
         */
        "configDeleted" = "configDeleted";

    
        /**
         * value: "configsReordered"
         * @const
         */
        "configsReordered" = "configsReordered";

    
        /**
         * value: "environmentCreated"
         * @const
         */
        "environmentCreated" = "environmentCreated";

    
        /**
         * value: "environmentChanged"
         * @const
         */
        "environmentChanged" = "environmentChanged";

    
        /**
         * value: "environmentDeleted"
         * @const
         */
        "environmentDeleted" = "environmentDeleted";

    
        /**
         * value: "environmentsReordered"
         * @const
         */
        "environmentsReordered" = "environmentsReordered";

    
        /**
         * value: "settingCreated"
         * @const
         */
        "settingCreated" = "settingCreated";

    
        /**
         * value: "settingChanged"
         * @const
         */
        "settingChanged" = "settingChanged";

    
        /**
         * value: "settingDeleted"
         * @const
         */
        "settingDeleted" = "settingDeleted";

    
        /**
         * value: "settingsReordered"
         * @const
         */
        "settingsReordered" = "settingsReordered";

    
        /**
         * value: "settingValueChanged"
         * @const
         */
        "settingValueChanged" = "settingValueChanged";

    
        /**
         * value: "webHookCreated"
         * @const
         */
        "webHookCreated" = "webHookCreated";

    
        /**
         * value: "webHookChanged"
         * @const
         */
        "webHookChanged" = "webHookChanged";

    
        /**
         * value: "webHookDeleted"
         * @const
         */
        "webHookDeleted" = "webHookDeleted";

    
        /**
         * value: "subscriptionChanged"
         * @const
         */
        "subscriptionChanged" = "subscriptionChanged";

    
        /**
         * value: "permissionGroupCreated"
         * @const
         */
        "permissionGroupCreated" = "permissionGroupCreated";

    
        /**
         * value: "permissionGroupChanged"
         * @const
         */
        "permissionGroupChanged" = "permissionGroupChanged";

    
        /**
         * value: "permissionGroupDeleted"
         * @const
         */
        "permissionGroupDeleted" = "permissionGroupDeleted";

    
        /**
         * value: "permissionGroupDefault"
         * @const
         */
        "permissionGroupDefault" = "permissionGroupDefault";

    
        /**
         * value: "apiKeyAdded"
         * @const
         */
        "apiKeyAdded" = "apiKeyAdded";

    
        /**
         * value: "apiKeyRemoved"
         * @const
         */
        "apiKeyRemoved" = "apiKeyRemoved";

    
        /**
         * value: "integrationAdded"
         * @const
         */
        "integrationAdded" = "integrationAdded";

    
        /**
         * value: "integrationChanged"
         * @const
         */
        "integrationChanged" = "integrationChanged";

    
        /**
         * value: "integrationRemoved"
         * @const
         */
        "integrationRemoved" = "integrationRemoved";

    
        /**
         * value: "apiKeyConnected"
         * @const
         */
        "apiKeyConnected" = "apiKeyConnected";

    
        /**
         * value: "integrationLinkAdded"
         * @const
         */
        "integrationLinkAdded" = "integrationLinkAdded";

    
        /**
         * value: "integrationLinkRemoved"
         * @const
         */
        "integrationLinkRemoved" = "integrationLinkRemoved";

    
        /**
         * value: "organizationAdded"
         * @const
         */
        "organizationAdded" = "organizationAdded";

    
        /**
         * value: "organizationRemoved"
         * @const
         */
        "organizationRemoved" = "organizationRemoved";

    
        /**
         * value: "organizationChanged"
         * @const
         */
        "organizationChanged" = "organizationChanged";

    
        /**
         * value: "organizationSubscriptionTypeChanged"
         * @const
         */
        "organizationSubscriptionTypeChanged" = "organizationSubscriptionTypeChanged";

    
        /**
         * value: "organizationAdminChanged"
         * @const
         */
        "organizationAdminChanged" = "organizationAdminChanged";

    
        /**
         * value: "organizationAdminLeft"
         * @const
         */
        "organizationAdminLeft" = "organizationAdminLeft";

    
        /**
         * value: "organizationAdminDisabled2FA"
         * @const
         */
        "organizationAdminDisabled2FA" = "organizationAdminDisabled2FA";

    
        /**
         * value: "tagAdded"
         * @const
         */
        "tagAdded" = "tagAdded";

    
        /**
         * value: "tagChanged"
         * @const
         */
        "tagChanged" = "tagChanged";

    
        /**
         * value: "tagRemoved"
         * @const
         */
        "tagRemoved" = "tagRemoved";

    
        /**
         * value: "settingTagAdded"
         * @const
         */
        "settingTagAdded" = "settingTagAdded";

    
        /**
         * value: "settingTagRemoved"
         * @const
         */
        "settingTagRemoved" = "settingTagRemoved";

    
        /**
         * value: "publicApiAccessTokenAdded"
         * @const
         */
        "publicApiAccessTokenAdded" = "publicApiAccessTokenAdded";

    
        /**
         * value: "publicApiAccessTokenRemoved"
         * @const
         */
        "publicApiAccessTokenRemoved" = "publicApiAccessTokenRemoved";

    
        /**
         * value: "domainAdded"
         * @const
         */
        "domainAdded" = "domainAdded";

    
        /**
         * value: "domainVerified"
         * @const
         */
        "domainVerified" = "domainVerified";

    
        /**
         * value: "domainRemoved"
         * @const
         */
        "domainRemoved" = "domainRemoved";

    
        /**
         * value: "domainSamlConfigured"
         * @const
         */
        "domainSamlConfigured" = "domainSamlConfigured";

    
        /**
         * value: "domainSamlDeleted"
         * @const
         */
        "domainSamlDeleted" = "domainSamlDeleted";

    
        /**
         * value: "autoProvisioningConfigurationChanged"
         * @const
         */
        "autoProvisioningConfigurationChanged" = "autoProvisioningConfigurationChanged";

    
        /**
         * value: "organizationMemberJoined"
         * @const
         */
        "organizationMemberJoined" = "organizationMemberJoined";

    
        /**
         * value: "organizationMemberProductJoinRequested"
         * @const
         */
        "organizationMemberProductJoinRequested" = "organizationMemberProductJoinRequested";

    
        /**
         * value: "organizationMemberProductJoinRequestRejected"
         * @const
         */
        "organizationMemberProductJoinRequestRejected" = "organizationMemberProductJoinRequestRejected";

    
        /**
         * value: "organizationMemberProductJoinRequestApproved"
         * @const
         */
        "organizationMemberProductJoinRequestApproved" = "organizationMemberProductJoinRequestApproved";

    
        /**
         * value: "codeReferencesUploaded"
         * @const
         */
        "codeReferencesUploaded" = "codeReferencesUploaded";

    
        /**
         * value: "codeReferenceDeleted"
         * @const
         */
        "codeReferenceDeleted" = "codeReferenceDeleted";

    
        /**
         * value: "codeReferenceStaleBranchDeleted"
         * @const
         */
        "codeReferenceStaleBranchDeleted" = "codeReferenceStaleBranchDeleted";

    
        /**
         * value: "segmentCreated"
         * @const
         */
        "segmentCreated" = "segmentCreated";

    
        /**
         * value: "segmentChanged"
         * @const
         */
        "segmentChanged" = "segmentChanged";

    
        /**
         * value: "segmentDeleted"
         * @const
         */
        "segmentDeleted" = "segmentDeleted";

    
        /**
         * value: "webhookSigningKeyDeleted"
         * @const
         */
        "webhookSigningKeyDeleted" = "webhookSigningKeyDeleted";

    
        /**
         * value: "webhookSigningKeyCreated"
         * @const
         */
        "webhookSigningKeyCreated" = "webhookSigningKeyCreated";

    

    /**
    * Returns a <code>AuditLogType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/AuditLogType} The enum <code>AuditLogType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

