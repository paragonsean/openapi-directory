# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RolloutRuleComparator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ISONEOF = 'isOneOf'
    ISNOTONEOF = 'isNotOneOf'
    CONTAINS = 'contains'
    DOESNOTCONTAIN = 'doesNotContain'
    SEMVERISONEOF = 'semVerIsOneOf'
    SEMVERISNOTONEOF = 'semVerIsNotOneOf'
    SEMVERLESS = 'semVerLess'
    SEMVERLESSOREQUALS = 'semVerLessOrEquals'
    SEMVERGREATER = 'semVerGreater'
    SEMVERGREATEROREQUALS = 'semVerGreaterOrEquals'
    NUMBEREQUALS = 'numberEquals'
    NUMBERDOESNOTEQUAL = 'numberDoesNotEqual'
    NUMBERLESS = 'numberLess'
    NUMBERLESSOREQUALS = 'numberLessOrEquals'
    NUMBERGREATER = 'numberGreater'
    NUMBERGREATEROREQUALS = 'numberGreaterOrEquals'
    SENSITIVEISONEOF = 'sensitiveIsOneOf'
    SENSITIVEISNOTONEOF = 'sensitiveIsNotOneOf'

    def __init__(self):
        """RolloutRuleComparator - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RolloutRuleComparator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RolloutRuleComparator of this RolloutRuleComparator.
        """
        return util.deserialize_model(dikt, cls)
