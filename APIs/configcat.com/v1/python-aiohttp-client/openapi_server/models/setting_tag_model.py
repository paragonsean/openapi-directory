# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SettingTagModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: str=None, name: str=None, setting_tag_id: int=None, tag_id: int=None):
        """SettingTagModel - a model defined in OpenAPI

        :param color: The color of this SettingTagModel.
        :param name: The name of this SettingTagModel.
        :param setting_tag_id: The setting_tag_id of this SettingTagModel.
        :param tag_id: The tag_id of this SettingTagModel.
        """
        self.openapi_types = {
            'color': str,
            'name': str,
            'setting_tag_id': int,
            'tag_id': int
        }

        self.attribute_map = {
            'color': 'color',
            'name': 'name',
            'setting_tag_id': 'settingTagId',
            'tag_id': 'tagId'
        }

        self._color = color
        self._name = name
        self._setting_tag_id = setting_tag_id
        self._tag_id = tag_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SettingTagModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SettingTagModel of this SettingTagModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this SettingTagModel.


        :return: The color of this SettingTagModel.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this SettingTagModel.


        :param color: The color of this SettingTagModel.
        :type color: str
        """

        self._color = color

    @property
    def name(self):
        """Gets the name of this SettingTagModel.


        :return: The name of this SettingTagModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SettingTagModel.


        :param name: The name of this SettingTagModel.
        :type name: str
        """

        self._name = name

    @property
    def setting_tag_id(self):
        """Gets the setting_tag_id of this SettingTagModel.


        :return: The setting_tag_id of this SettingTagModel.
        :rtype: int
        """
        return self._setting_tag_id

    @setting_tag_id.setter
    def setting_tag_id(self, setting_tag_id):
        """Sets the setting_tag_id of this SettingTagModel.


        :param setting_tag_id: The setting_tag_id of this SettingTagModel.
        :type setting_tag_id: int
        """

        self._setting_tag_id = setting_tag_id

    @property
    def tag_id(self):
        """Gets the tag_id of this SettingTagModel.


        :return: The tag_id of this SettingTagModel.
        :rtype: int
        """
        return self._tag_id

    @tag_id.setter
    def tag_id(self, tag_id):
        """Sets the tag_id of this SettingTagModel.


        :param tag_id: The tag_id of this SettingTagModel.
        :type tag_id: int
        """

        self._tag_id = tag_id
