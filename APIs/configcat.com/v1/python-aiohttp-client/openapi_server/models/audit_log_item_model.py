# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audit_log_type import AuditLogType
from openapi_server import util


class AuditLogItemModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_target: str=None, audit_log_date_time: datetime=None, audit_log_id: int=None, audit_log_type: str=None, audit_log_type_enum: AuditLogType=None, details: str=None, user_email: str=None, user_name: str=None, where: str=None, why: str=None):
        """AuditLogItemModel - a model defined in OpenAPI

        :param action_target: The action_target of this AuditLogItemModel.
        :param audit_log_date_time: The audit_log_date_time of this AuditLogItemModel.
        :param audit_log_id: The audit_log_id of this AuditLogItemModel.
        :param audit_log_type: The audit_log_type of this AuditLogItemModel.
        :param audit_log_type_enum: The audit_log_type_enum of this AuditLogItemModel.
        :param details: The details of this AuditLogItemModel.
        :param user_email: The user_email of this AuditLogItemModel.
        :param user_name: The user_name of this AuditLogItemModel.
        :param where: The where of this AuditLogItemModel.
        :param why: The why of this AuditLogItemModel.
        """
        self.openapi_types = {
            'action_target': str,
            'audit_log_date_time': datetime,
            'audit_log_id': int,
            'audit_log_type': str,
            'audit_log_type_enum': AuditLogType,
            'details': str,
            'user_email': str,
            'user_name': str,
            'where': str,
            'why': str
        }

        self.attribute_map = {
            'action_target': 'actionTarget',
            'audit_log_date_time': 'auditLogDateTime',
            'audit_log_id': 'auditLogId',
            'audit_log_type': 'auditLogType',
            'audit_log_type_enum': 'auditLogTypeEnum',
            'details': 'details',
            'user_email': 'userEmail',
            'user_name': 'userName',
            'where': 'where',
            'why': 'why'
        }

        self._action_target = action_target
        self._audit_log_date_time = audit_log_date_time
        self._audit_log_id = audit_log_id
        self._audit_log_type = audit_log_type
        self._audit_log_type_enum = audit_log_type_enum
        self._details = details
        self._user_email = user_email
        self._user_name = user_name
        self._where = where
        self._why = why

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuditLogItemModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuditLogItemModel of this AuditLogItemModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_target(self):
        """Gets the action_target of this AuditLogItemModel.


        :return: The action_target of this AuditLogItemModel.
        :rtype: str
        """
        return self._action_target

    @action_target.setter
    def action_target(self, action_target):
        """Sets the action_target of this AuditLogItemModel.


        :param action_target: The action_target of this AuditLogItemModel.
        :type action_target: str
        """

        self._action_target = action_target

    @property
    def audit_log_date_time(self):
        """Gets the audit_log_date_time of this AuditLogItemModel.


        :return: The audit_log_date_time of this AuditLogItemModel.
        :rtype: datetime
        """
        return self._audit_log_date_time

    @audit_log_date_time.setter
    def audit_log_date_time(self, audit_log_date_time):
        """Sets the audit_log_date_time of this AuditLogItemModel.


        :param audit_log_date_time: The audit_log_date_time of this AuditLogItemModel.
        :type audit_log_date_time: datetime
        """

        self._audit_log_date_time = audit_log_date_time

    @property
    def audit_log_id(self):
        """Gets the audit_log_id of this AuditLogItemModel.


        :return: The audit_log_id of this AuditLogItemModel.
        :rtype: int
        """
        return self._audit_log_id

    @audit_log_id.setter
    def audit_log_id(self, audit_log_id):
        """Sets the audit_log_id of this AuditLogItemModel.


        :param audit_log_id: The audit_log_id of this AuditLogItemModel.
        :type audit_log_id: int
        """

        self._audit_log_id = audit_log_id

    @property
    def audit_log_type(self):
        """Gets the audit_log_type of this AuditLogItemModel.


        :return: The audit_log_type of this AuditLogItemModel.
        :rtype: str
        """
        return self._audit_log_type

    @audit_log_type.setter
    def audit_log_type(self, audit_log_type):
        """Sets the audit_log_type of this AuditLogItemModel.


        :param audit_log_type: The audit_log_type of this AuditLogItemModel.
        :type audit_log_type: str
        """

        self._audit_log_type = audit_log_type

    @property
    def audit_log_type_enum(self):
        """Gets the audit_log_type_enum of this AuditLogItemModel.


        :return: The audit_log_type_enum of this AuditLogItemModel.
        :rtype: AuditLogType
        """
        return self._audit_log_type_enum

    @audit_log_type_enum.setter
    def audit_log_type_enum(self, audit_log_type_enum):
        """Sets the audit_log_type_enum of this AuditLogItemModel.


        :param audit_log_type_enum: The audit_log_type_enum of this AuditLogItemModel.
        :type audit_log_type_enum: AuditLogType
        """

        self._audit_log_type_enum = audit_log_type_enum

    @property
    def details(self):
        """Gets the details of this AuditLogItemModel.


        :return: The details of this AuditLogItemModel.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this AuditLogItemModel.


        :param details: The details of this AuditLogItemModel.
        :type details: str
        """

        self._details = details

    @property
    def user_email(self):
        """Gets the user_email of this AuditLogItemModel.


        :return: The user_email of this AuditLogItemModel.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email):
        """Sets the user_email of this AuditLogItemModel.


        :param user_email: The user_email of this AuditLogItemModel.
        :type user_email: str
        """

        self._user_email = user_email

    @property
    def user_name(self):
        """Gets the user_name of this AuditLogItemModel.


        :return: The user_name of this AuditLogItemModel.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this AuditLogItemModel.


        :param user_name: The user_name of this AuditLogItemModel.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def where(self):
        """Gets the where of this AuditLogItemModel.


        :return: The where of this AuditLogItemModel.
        :rtype: str
        """
        return self._where

    @where.setter
    def where(self, where):
        """Sets the where of this AuditLogItemModel.


        :param where: The where of this AuditLogItemModel.
        :type where: str
        """

        self._where = where

    @property
    def why(self):
        """Gets the why of this AuditLogItemModel.


        :return: The why of this AuditLogItemModel.
        :rtype: str
        """
        return self._why

    @why.setter
    def why(self, why):
        """Sets the why of this AuditLogItemModel.


        :param why: The why of this AuditLogItemModel.
        :type why: str
        """

        self._why = why
