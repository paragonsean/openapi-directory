# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.setting_type import SettingType
from openapi_server import util


class SettingValueModelHaljsonEmbeddedSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, creator_email: str=None, creator_full_name: str=None, hint: str=None, is_watching: bool=None, key: str=None, name: str=None, order: int=None, setting_id: int=None, setting_type: SettingType=None):
        """SettingValueModelHaljsonEmbeddedSetting - a model defined in OpenAPI

        :param created_at: The created_at of this SettingValueModelHaljsonEmbeddedSetting.
        :param creator_email: The creator_email of this SettingValueModelHaljsonEmbeddedSetting.
        :param creator_full_name: The creator_full_name of this SettingValueModelHaljsonEmbeddedSetting.
        :param hint: The hint of this SettingValueModelHaljsonEmbeddedSetting.
        :param is_watching: The is_watching of this SettingValueModelHaljsonEmbeddedSetting.
        :param key: The key of this SettingValueModelHaljsonEmbeddedSetting.
        :param name: The name of this SettingValueModelHaljsonEmbeddedSetting.
        :param order: The order of this SettingValueModelHaljsonEmbeddedSetting.
        :param setting_id: The setting_id of this SettingValueModelHaljsonEmbeddedSetting.
        :param setting_type: The setting_type of this SettingValueModelHaljsonEmbeddedSetting.
        """
        self.openapi_types = {
            'created_at': datetime,
            'creator_email': str,
            'creator_full_name': str,
            'hint': str,
            'is_watching': bool,
            'key': str,
            'name': str,
            'order': int,
            'setting_id': int,
            'setting_type': SettingType
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'creator_email': 'creatorEmail',
            'creator_full_name': 'creatorFullName',
            'hint': 'hint',
            'is_watching': 'isWatching',
            'key': 'key',
            'name': 'name',
            'order': 'order',
            'setting_id': 'settingId',
            'setting_type': 'settingType'
        }

        self._created_at = created_at
        self._creator_email = creator_email
        self._creator_full_name = creator_full_name
        self._hint = hint
        self._is_watching = is_watching
        self._key = key
        self._name = name
        self._order = order
        self._setting_id = setting_id
        self._setting_type = setting_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SettingValueModelHaljsonEmbeddedSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SettingValueModel_haljson__embedded_setting of this SettingValueModelHaljsonEmbeddedSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The created_at of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SettingValueModelHaljsonEmbeddedSetting.


        :param created_at: The created_at of this SettingValueModelHaljsonEmbeddedSetting.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def creator_email(self):
        """Gets the creator_email of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The creator_email of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: str
        """
        return self._creator_email

    @creator_email.setter
    def creator_email(self, creator_email):
        """Sets the creator_email of this SettingValueModelHaljsonEmbeddedSetting.


        :param creator_email: The creator_email of this SettingValueModelHaljsonEmbeddedSetting.
        :type creator_email: str
        """

        self._creator_email = creator_email

    @property
    def creator_full_name(self):
        """Gets the creator_full_name of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The creator_full_name of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: str
        """
        return self._creator_full_name

    @creator_full_name.setter
    def creator_full_name(self, creator_full_name):
        """Sets the creator_full_name of this SettingValueModelHaljsonEmbeddedSetting.


        :param creator_full_name: The creator_full_name of this SettingValueModelHaljsonEmbeddedSetting.
        :type creator_full_name: str
        """

        self._creator_full_name = creator_full_name

    @property
    def hint(self):
        """Gets the hint of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The hint of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: str
        """
        return self._hint

    @hint.setter
    def hint(self, hint):
        """Sets the hint of this SettingValueModelHaljsonEmbeddedSetting.


        :param hint: The hint of this SettingValueModelHaljsonEmbeddedSetting.
        :type hint: str
        """

        self._hint = hint

    @property
    def is_watching(self):
        """Gets the is_watching of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The is_watching of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: bool
        """
        return self._is_watching

    @is_watching.setter
    def is_watching(self, is_watching):
        """Sets the is_watching of this SettingValueModelHaljsonEmbeddedSetting.


        :param is_watching: The is_watching of this SettingValueModelHaljsonEmbeddedSetting.
        :type is_watching: bool
        """

        self._is_watching = is_watching

    @property
    def key(self):
        """Gets the key of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The key of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SettingValueModelHaljsonEmbeddedSetting.


        :param key: The key of this SettingValueModelHaljsonEmbeddedSetting.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The name of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SettingValueModelHaljsonEmbeddedSetting.


        :param name: The name of this SettingValueModelHaljsonEmbeddedSetting.
        :type name: str
        """

        self._name = name

    @property
    def order(self):
        """Gets the order of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The order of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this SettingValueModelHaljsonEmbeddedSetting.


        :param order: The order of this SettingValueModelHaljsonEmbeddedSetting.
        :type order: int
        """

        self._order = order

    @property
    def setting_id(self):
        """Gets the setting_id of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The setting_id of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: int
        """
        return self._setting_id

    @setting_id.setter
    def setting_id(self, setting_id):
        """Sets the setting_id of this SettingValueModelHaljsonEmbeddedSetting.


        :param setting_id: The setting_id of this SettingValueModelHaljsonEmbeddedSetting.
        :type setting_id: int
        """

        self._setting_id = setting_id

    @property
    def setting_type(self):
        """Gets the setting_type of this SettingValueModelHaljsonEmbeddedSetting.


        :return: The setting_type of this SettingValueModelHaljsonEmbeddedSetting.
        :rtype: SettingType
        """
        return self._setting_type

    @setting_type.setter
    def setting_type(self, setting_type):
        """Sets the setting_type of this SettingValueModelHaljsonEmbeddedSetting.


        :param setting_type: The setting_type of this SettingValueModelHaljsonEmbeddedSetting.
        :type setting_type: SettingType
        """

        self._setting_type = setting_type
