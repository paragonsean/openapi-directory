# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_setting_value_with_setting_id_model import UpdateSettingValueWithSettingIdModel
from openapi_server import util


class UpdateSettingValuesWithIdModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, setting_values: List[UpdateSettingValueWithSettingIdModel]=None):
        """UpdateSettingValuesWithIdModel - a model defined in OpenAPI

        :param setting_values: The setting_values of this UpdateSettingValuesWithIdModel.
        """
        self.openapi_types = {
            'setting_values': List[UpdateSettingValueWithSettingIdModel]
        }

        self.attribute_map = {
            'setting_values': 'settingValues'
        }

        self._setting_values = setting_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSettingValuesWithIdModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSettingValuesWithIdModel of this UpdateSettingValuesWithIdModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def setting_values(self):
        """Gets the setting_values of this UpdateSettingValuesWithIdModel.

        The values to update.

        :return: The setting_values of this UpdateSettingValuesWithIdModel.
        :rtype: List[UpdateSettingValueWithSettingIdModel]
        """
        return self._setting_values

    @setting_values.setter
    def setting_values(self, setting_values):
        """Sets the setting_values of this UpdateSettingValuesWithIdModel.

        The values to update.

        :param setting_values: The setting_values of this UpdateSettingValuesWithIdModel.
        :type setting_values: List[UpdateSettingValueWithSettingIdModel]
        """

        self._setting_values = setting_values
