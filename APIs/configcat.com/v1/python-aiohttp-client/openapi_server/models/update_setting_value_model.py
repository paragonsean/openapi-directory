# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rollout_percentage_item_model import RolloutPercentageItemModel
from openapi_server.models.rollout_rule_model import RolloutRuleModel
from openapi_server import util


class UpdateSettingValueModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rollout_percentage_items: List[RolloutPercentageItemModel]=None, rollout_rules: List[RolloutRuleModel]=None, value: object=None):
        """UpdateSettingValueModel - a model defined in OpenAPI

        :param rollout_percentage_items: The rollout_percentage_items of this UpdateSettingValueModel.
        :param rollout_rules: The rollout_rules of this UpdateSettingValueModel.
        :param value: The value of this UpdateSettingValueModel.
        """
        self.openapi_types = {
            'rollout_percentage_items': List[RolloutPercentageItemModel],
            'rollout_rules': List[RolloutRuleModel],
            'value': object
        }

        self.attribute_map = {
            'rollout_percentage_items': 'rolloutPercentageItems',
            'rollout_rules': 'rolloutRules',
            'value': 'value'
        }

        self._rollout_percentage_items = rollout_percentage_items
        self._rollout_rules = rollout_rules
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSettingValueModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSettingValueModel of this UpdateSettingValueModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rollout_percentage_items(self):
        """Gets the rollout_percentage_items of this UpdateSettingValueModel.

        The percentage rule collection.

        :return: The rollout_percentage_items of this UpdateSettingValueModel.
        :rtype: List[RolloutPercentageItemModel]
        """
        return self._rollout_percentage_items

    @rollout_percentage_items.setter
    def rollout_percentage_items(self, rollout_percentage_items):
        """Sets the rollout_percentage_items of this UpdateSettingValueModel.

        The percentage rule collection.

        :param rollout_percentage_items: The rollout_percentage_items of this UpdateSettingValueModel.
        :type rollout_percentage_items: List[RolloutPercentageItemModel]
        """

        self._rollout_percentage_items = rollout_percentage_items

    @property
    def rollout_rules(self):
        """Gets the rollout_rules of this UpdateSettingValueModel.

        The targeting rule collection.

        :return: The rollout_rules of this UpdateSettingValueModel.
        :rtype: List[RolloutRuleModel]
        """
        return self._rollout_rules

    @rollout_rules.setter
    def rollout_rules(self, rollout_rules):
        """Sets the rollout_rules of this UpdateSettingValueModel.

        The targeting rule collection.

        :param rollout_rules: The rollout_rules of this UpdateSettingValueModel.
        :type rollout_rules: List[RolloutRuleModel]
        """

        self._rollout_rules = rollout_rules

    @property
    def value(self):
        """Gets the value of this UpdateSettingValueModel.

        The value to serve. It must respect the setting type.

        :return: The value of this UpdateSettingValueModel.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UpdateSettingValueModel.

        The value to serve. It must respect the setting type.

        :param value: The value of this UpdateSettingValueModel.
        :type value: object
        """

        self._value = value
