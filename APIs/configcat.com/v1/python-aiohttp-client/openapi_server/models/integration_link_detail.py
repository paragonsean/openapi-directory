# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_model import ConfigModel
from openapi_server.models.environment_model import EnvironmentModel
from openapi_server.models.product_model import ProductModel
from openapi_server.models.setting_data_model import SettingDataModel
from openapi_server import util


class IntegrationLinkDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: ConfigModel=None, environment: EnvironmentModel=None, product: ProductModel=None, read_only: bool=None, setting: SettingDataModel=None, status: str=None):
        """IntegrationLinkDetail - a model defined in OpenAPI

        :param config: The config of this IntegrationLinkDetail.
        :param environment: The environment of this IntegrationLinkDetail.
        :param product: The product of this IntegrationLinkDetail.
        :param read_only: The read_only of this IntegrationLinkDetail.
        :param setting: The setting of this IntegrationLinkDetail.
        :param status: The status of this IntegrationLinkDetail.
        """
        self.openapi_types = {
            'config': ConfigModel,
            'environment': EnvironmentModel,
            'product': ProductModel,
            'read_only': bool,
            'setting': SettingDataModel,
            'status': str
        }

        self.attribute_map = {
            'config': 'config',
            'environment': 'environment',
            'product': 'product',
            'read_only': 'readOnly',
            'setting': 'setting',
            'status': 'status'
        }

        self._config = config
        self._environment = environment
        self._product = product
        self._read_only = read_only
        self._setting = setting
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationLinkDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationLinkDetail of this IntegrationLinkDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this IntegrationLinkDetail.


        :return: The config of this IntegrationLinkDetail.
        :rtype: ConfigModel
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this IntegrationLinkDetail.


        :param config: The config of this IntegrationLinkDetail.
        :type config: ConfigModel
        """

        self._config = config

    @property
    def environment(self):
        """Gets the environment of this IntegrationLinkDetail.


        :return: The environment of this IntegrationLinkDetail.
        :rtype: EnvironmentModel
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this IntegrationLinkDetail.


        :param environment: The environment of this IntegrationLinkDetail.
        :type environment: EnvironmentModel
        """

        self._environment = environment

    @property
    def product(self):
        """Gets the product of this IntegrationLinkDetail.


        :return: The product of this IntegrationLinkDetail.
        :rtype: ProductModel
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this IntegrationLinkDetail.


        :param product: The product of this IntegrationLinkDetail.
        :type product: ProductModel
        """

        self._product = product

    @property
    def read_only(self):
        """Gets the read_only of this IntegrationLinkDetail.


        :return: The read_only of this IntegrationLinkDetail.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this IntegrationLinkDetail.


        :param read_only: The read_only of this IntegrationLinkDetail.
        :type read_only: bool
        """

        self._read_only = read_only

    @property
    def setting(self):
        """Gets the setting of this IntegrationLinkDetail.


        :return: The setting of this IntegrationLinkDetail.
        :rtype: SettingDataModel
        """
        return self._setting

    @setting.setter
    def setting(self, setting):
        """Sets the setting of this IntegrationLinkDetail.


        :param setting: The setting of this IntegrationLinkDetail.
        :type setting: SettingDataModel
        """

        self._setting = setting

    @property
    def status(self):
        """Gets the status of this IntegrationLinkDetail.


        :return: The status of this IntegrationLinkDetail.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this IntegrationLinkDetail.


        :param status: The status of this IntegrationLinkDetail.
        :type status: str
        """

        self._status = status
