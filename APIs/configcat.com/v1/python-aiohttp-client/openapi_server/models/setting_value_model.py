# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_model import ConfigModel
from openapi_server.models.environment_model import EnvironmentModel
from openapi_server.models.integration_link_model import IntegrationLinkModel
from openapi_server.models.rollout_percentage_item_model import RolloutPercentageItemModel
from openapi_server.models.rollout_rule_model import RolloutRuleModel
from openapi_server.models.setting_data_model import SettingDataModel
from openapi_server.models.setting_tag_model import SettingTagModel
from openapi_server import util


class SettingValueModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: ConfigModel=None, environment: EnvironmentModel=None, integration_links: List[IntegrationLinkModel]=None, last_updater_user_email: str=None, last_updater_user_full_name: str=None, read_only: bool=None, rollout_percentage_items: List[RolloutPercentageItemModel]=None, rollout_rules: List[RolloutRuleModel]=None, setting: SettingDataModel=None, setting_tags: List[SettingTagModel]=None, updated_at: datetime=None, value: object=None):
        """SettingValueModel - a model defined in OpenAPI

        :param config: The config of this SettingValueModel.
        :param environment: The environment of this SettingValueModel.
        :param integration_links: The integration_links of this SettingValueModel.
        :param last_updater_user_email: The last_updater_user_email of this SettingValueModel.
        :param last_updater_user_full_name: The last_updater_user_full_name of this SettingValueModel.
        :param read_only: The read_only of this SettingValueModel.
        :param rollout_percentage_items: The rollout_percentage_items of this SettingValueModel.
        :param rollout_rules: The rollout_rules of this SettingValueModel.
        :param setting: The setting of this SettingValueModel.
        :param setting_tags: The setting_tags of this SettingValueModel.
        :param updated_at: The updated_at of this SettingValueModel.
        :param value: The value of this SettingValueModel.
        """
        self.openapi_types = {
            'config': ConfigModel,
            'environment': EnvironmentModel,
            'integration_links': List[IntegrationLinkModel],
            'last_updater_user_email': str,
            'last_updater_user_full_name': str,
            'read_only': bool,
            'rollout_percentage_items': List[RolloutPercentageItemModel],
            'rollout_rules': List[RolloutRuleModel],
            'setting': SettingDataModel,
            'setting_tags': List[SettingTagModel],
            'updated_at': datetime,
            'value': object
        }

        self.attribute_map = {
            'config': 'config',
            'environment': 'environment',
            'integration_links': 'integrationLinks',
            'last_updater_user_email': 'lastUpdaterUserEmail',
            'last_updater_user_full_name': 'lastUpdaterUserFullName',
            'read_only': 'readOnly',
            'rollout_percentage_items': 'rolloutPercentageItems',
            'rollout_rules': 'rolloutRules',
            'setting': 'setting',
            'setting_tags': 'settingTags',
            'updated_at': 'updatedAt',
            'value': 'value'
        }

        self._config = config
        self._environment = environment
        self._integration_links = integration_links
        self._last_updater_user_email = last_updater_user_email
        self._last_updater_user_full_name = last_updater_user_full_name
        self._read_only = read_only
        self._rollout_percentage_items = rollout_percentage_items
        self._rollout_rules = rollout_rules
        self._setting = setting
        self._setting_tags = setting_tags
        self._updated_at = updated_at
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SettingValueModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SettingValueModel of this SettingValueModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this SettingValueModel.


        :return: The config of this SettingValueModel.
        :rtype: ConfigModel
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this SettingValueModel.


        :param config: The config of this SettingValueModel.
        :type config: ConfigModel
        """

        self._config = config

    @property
    def environment(self):
        """Gets the environment of this SettingValueModel.


        :return: The environment of this SettingValueModel.
        :rtype: EnvironmentModel
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this SettingValueModel.


        :param environment: The environment of this SettingValueModel.
        :type environment: EnvironmentModel
        """

        self._environment = environment

    @property
    def integration_links(self):
        """Gets the integration_links of this SettingValueModel.


        :return: The integration_links of this SettingValueModel.
        :rtype: List[IntegrationLinkModel]
        """
        return self._integration_links

    @integration_links.setter
    def integration_links(self, integration_links):
        """Sets the integration_links of this SettingValueModel.


        :param integration_links: The integration_links of this SettingValueModel.
        :type integration_links: List[IntegrationLinkModel]
        """

        self._integration_links = integration_links

    @property
    def last_updater_user_email(self):
        """Gets the last_updater_user_email of this SettingValueModel.


        :return: The last_updater_user_email of this SettingValueModel.
        :rtype: str
        """
        return self._last_updater_user_email

    @last_updater_user_email.setter
    def last_updater_user_email(self, last_updater_user_email):
        """Sets the last_updater_user_email of this SettingValueModel.


        :param last_updater_user_email: The last_updater_user_email of this SettingValueModel.
        :type last_updater_user_email: str
        """

        self._last_updater_user_email = last_updater_user_email

    @property
    def last_updater_user_full_name(self):
        """Gets the last_updater_user_full_name of this SettingValueModel.


        :return: The last_updater_user_full_name of this SettingValueModel.
        :rtype: str
        """
        return self._last_updater_user_full_name

    @last_updater_user_full_name.setter
    def last_updater_user_full_name(self, last_updater_user_full_name):
        """Sets the last_updater_user_full_name of this SettingValueModel.


        :param last_updater_user_full_name: The last_updater_user_full_name of this SettingValueModel.
        :type last_updater_user_full_name: str
        """

        self._last_updater_user_full_name = last_updater_user_full_name

    @property
    def read_only(self):
        """Gets the read_only of this SettingValueModel.


        :return: The read_only of this SettingValueModel.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this SettingValueModel.


        :param read_only: The read_only of this SettingValueModel.
        :type read_only: bool
        """

        self._read_only = read_only

    @property
    def rollout_percentage_items(self):
        """Gets the rollout_percentage_items of this SettingValueModel.

        The percentage rule collection.

        :return: The rollout_percentage_items of this SettingValueModel.
        :rtype: List[RolloutPercentageItemModel]
        """
        return self._rollout_percentage_items

    @rollout_percentage_items.setter
    def rollout_percentage_items(self, rollout_percentage_items):
        """Sets the rollout_percentage_items of this SettingValueModel.

        The percentage rule collection.

        :param rollout_percentage_items: The rollout_percentage_items of this SettingValueModel.
        :type rollout_percentage_items: List[RolloutPercentageItemModel]
        """

        self._rollout_percentage_items = rollout_percentage_items

    @property
    def rollout_rules(self):
        """Gets the rollout_rules of this SettingValueModel.

        The targeting rule collection.

        :return: The rollout_rules of this SettingValueModel.
        :rtype: List[RolloutRuleModel]
        """
        return self._rollout_rules

    @rollout_rules.setter
    def rollout_rules(self, rollout_rules):
        """Sets the rollout_rules of this SettingValueModel.

        The targeting rule collection.

        :param rollout_rules: The rollout_rules of this SettingValueModel.
        :type rollout_rules: List[RolloutRuleModel]
        """

        self._rollout_rules = rollout_rules

    @property
    def setting(self):
        """Gets the setting of this SettingValueModel.


        :return: The setting of this SettingValueModel.
        :rtype: SettingDataModel
        """
        return self._setting

    @setting.setter
    def setting(self, setting):
        """Sets the setting of this SettingValueModel.


        :param setting: The setting of this SettingValueModel.
        :type setting: SettingDataModel
        """

        self._setting = setting

    @property
    def setting_tags(self):
        """Gets the setting_tags of this SettingValueModel.


        :return: The setting_tags of this SettingValueModel.
        :rtype: List[SettingTagModel]
        """
        return self._setting_tags

    @setting_tags.setter
    def setting_tags(self, setting_tags):
        """Sets the setting_tags of this SettingValueModel.


        :param setting_tags: The setting_tags of this SettingValueModel.
        :type setting_tags: List[SettingTagModel]
        """

        self._setting_tags = setting_tags

    @property
    def updated_at(self):
        """Gets the updated_at of this SettingValueModel.


        :return: The updated_at of this SettingValueModel.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this SettingValueModel.


        :param updated_at: The updated_at of this SettingValueModel.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def value(self):
        """Gets the value of this SettingValueModel.

        The value to serve. It must respect the setting type.

        :return: The value of this SettingValueModel.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this SettingValueModel.

        The value to serve. It must respect the setting type.

        :param value: The value of this SettingValueModel.
        :type value: object
        """

        self._value = value
