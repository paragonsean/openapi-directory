# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JsonNodeOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, property_name_case_insensitive: bool=None):
        """JsonNodeOptions - a model defined in OpenAPI

        :param property_name_case_insensitive: The property_name_case_insensitive of this JsonNodeOptions.
        """
        self.openapi_types = {
            'property_name_case_insensitive': bool
        }

        self.attribute_map = {
            'property_name_case_insensitive': 'propertyNameCaseInsensitive'
        }

        self._property_name_case_insensitive = property_name_case_insensitive

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JsonNodeOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JsonNodeOptions of this JsonNodeOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def property_name_case_insensitive(self):
        """Gets the property_name_case_insensitive of this JsonNodeOptions.


        :return: The property_name_case_insensitive of this JsonNodeOptions.
        :rtype: bool
        """
        return self._property_name_case_insensitive

    @property_name_case_insensitive.setter
    def property_name_case_insensitive(self, property_name_case_insensitive):
        """Sets the property_name_case_insensitive of this JsonNodeOptions.


        :param property_name_case_insensitive: The property_name_case_insensitive of this JsonNodeOptions.
        :type property_name_case_insensitive: bool
        """

        self._property_name_case_insensitive = property_name_case_insensitive
