# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.patch_operation import PatchOperation
from openapi_server import util


class JsonPatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operations: List[PatchOperation]=None):
        """JsonPatch - a model defined in OpenAPI

        :param operations: The operations of this JsonPatch.
        """
        self.openapi_types = {
            'operations': List[PatchOperation]
        }

        self.attribute_map = {
            'operations': 'operations'
        }

        self._operations = operations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JsonPatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JsonPatch of this JsonPatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operations(self):
        """Gets the operations of this JsonPatch.


        :return: The operations of this JsonPatch.
        :rtype: List[PatchOperation]
        """
        return self._operations

    @operations.setter
    def operations(self, operations):
        """Sets the operations of this JsonPatch.


        :param operations: The operations of this JsonPatch.
        :type operations: List[PatchOperation]
        """

        self._operations = operations
