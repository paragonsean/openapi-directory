# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_model import ProductModel
from openapi_server.models.rollout_rule_comparator import RolloutRuleComparator
from openapi_server import util


class SegmentModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comparator: RolloutRuleComparator=None, comparison_attribute: str=None, comparison_value: str=None, created_at: datetime=None, creator_email: str=None, creator_full_name: str=None, description: str=None, last_updater_email: str=None, last_updater_full_name: str=None, name: str=None, product: ProductModel=None, segment_id: str=None, updated_at: datetime=None):
        """SegmentModel - a model defined in OpenAPI

        :param comparator: The comparator of this SegmentModel.
        :param comparison_attribute: The comparison_attribute of this SegmentModel.
        :param comparison_value: The comparison_value of this SegmentModel.
        :param created_at: The created_at of this SegmentModel.
        :param creator_email: The creator_email of this SegmentModel.
        :param creator_full_name: The creator_full_name of this SegmentModel.
        :param description: The description of this SegmentModel.
        :param last_updater_email: The last_updater_email of this SegmentModel.
        :param last_updater_full_name: The last_updater_full_name of this SegmentModel.
        :param name: The name of this SegmentModel.
        :param product: The product of this SegmentModel.
        :param segment_id: The segment_id of this SegmentModel.
        :param updated_at: The updated_at of this SegmentModel.
        """
        self.openapi_types = {
            'comparator': RolloutRuleComparator,
            'comparison_attribute': str,
            'comparison_value': str,
            'created_at': datetime,
            'creator_email': str,
            'creator_full_name': str,
            'description': str,
            'last_updater_email': str,
            'last_updater_full_name': str,
            'name': str,
            'product': ProductModel,
            'segment_id': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'comparator': 'comparator',
            'comparison_attribute': 'comparisonAttribute',
            'comparison_value': 'comparisonValue',
            'created_at': 'createdAt',
            'creator_email': 'creatorEmail',
            'creator_full_name': 'creatorFullName',
            'description': 'description',
            'last_updater_email': 'lastUpdaterEmail',
            'last_updater_full_name': 'lastUpdaterFullName',
            'name': 'name',
            'product': 'product',
            'segment_id': 'segmentId',
            'updated_at': 'updatedAt'
        }

        self._comparator = comparator
        self._comparison_attribute = comparison_attribute
        self._comparison_value = comparison_value
        self._created_at = created_at
        self._creator_email = creator_email
        self._creator_full_name = creator_full_name
        self._description = description
        self._last_updater_email = last_updater_email
        self._last_updater_full_name = last_updater_full_name
        self._name = name
        self._product = product
        self._segment_id = segment_id
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SegmentModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SegmentModel of this SegmentModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comparator(self):
        """Gets the comparator of this SegmentModel.


        :return: The comparator of this SegmentModel.
        :rtype: RolloutRuleComparator
        """
        return self._comparator

    @comparator.setter
    def comparator(self, comparator):
        """Sets the comparator of this SegmentModel.


        :param comparator: The comparator of this SegmentModel.
        :type comparator: RolloutRuleComparator
        """

        self._comparator = comparator

    @property
    def comparison_attribute(self):
        """Gets the comparison_attribute of this SegmentModel.


        :return: The comparison_attribute of this SegmentModel.
        :rtype: str
        """
        return self._comparison_attribute

    @comparison_attribute.setter
    def comparison_attribute(self, comparison_attribute):
        """Sets the comparison_attribute of this SegmentModel.


        :param comparison_attribute: The comparison_attribute of this SegmentModel.
        :type comparison_attribute: str
        """

        self._comparison_attribute = comparison_attribute

    @property
    def comparison_value(self):
        """Gets the comparison_value of this SegmentModel.


        :return: The comparison_value of this SegmentModel.
        :rtype: str
        """
        return self._comparison_value

    @comparison_value.setter
    def comparison_value(self, comparison_value):
        """Sets the comparison_value of this SegmentModel.


        :param comparison_value: The comparison_value of this SegmentModel.
        :type comparison_value: str
        """

        self._comparison_value = comparison_value

    @property
    def created_at(self):
        """Gets the created_at of this SegmentModel.


        :return: The created_at of this SegmentModel.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SegmentModel.


        :param created_at: The created_at of this SegmentModel.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def creator_email(self):
        """Gets the creator_email of this SegmentModel.


        :return: The creator_email of this SegmentModel.
        :rtype: str
        """
        return self._creator_email

    @creator_email.setter
    def creator_email(self, creator_email):
        """Sets the creator_email of this SegmentModel.


        :param creator_email: The creator_email of this SegmentModel.
        :type creator_email: str
        """

        self._creator_email = creator_email

    @property
    def creator_full_name(self):
        """Gets the creator_full_name of this SegmentModel.


        :return: The creator_full_name of this SegmentModel.
        :rtype: str
        """
        return self._creator_full_name

    @creator_full_name.setter
    def creator_full_name(self, creator_full_name):
        """Sets the creator_full_name of this SegmentModel.


        :param creator_full_name: The creator_full_name of this SegmentModel.
        :type creator_full_name: str
        """

        self._creator_full_name = creator_full_name

    @property
    def description(self):
        """Gets the description of this SegmentModel.


        :return: The description of this SegmentModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SegmentModel.


        :param description: The description of this SegmentModel.
        :type description: str
        """

        self._description = description

    @property
    def last_updater_email(self):
        """Gets the last_updater_email of this SegmentModel.


        :return: The last_updater_email of this SegmentModel.
        :rtype: str
        """
        return self._last_updater_email

    @last_updater_email.setter
    def last_updater_email(self, last_updater_email):
        """Sets the last_updater_email of this SegmentModel.


        :param last_updater_email: The last_updater_email of this SegmentModel.
        :type last_updater_email: str
        """

        self._last_updater_email = last_updater_email

    @property
    def last_updater_full_name(self):
        """Gets the last_updater_full_name of this SegmentModel.


        :return: The last_updater_full_name of this SegmentModel.
        :rtype: str
        """
        return self._last_updater_full_name

    @last_updater_full_name.setter
    def last_updater_full_name(self, last_updater_full_name):
        """Sets the last_updater_full_name of this SegmentModel.


        :param last_updater_full_name: The last_updater_full_name of this SegmentModel.
        :type last_updater_full_name: str
        """

        self._last_updater_full_name = last_updater_full_name

    @property
    def name(self):
        """Gets the name of this SegmentModel.


        :return: The name of this SegmentModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SegmentModel.


        :param name: The name of this SegmentModel.
        :type name: str
        """

        self._name = name

    @property
    def product(self):
        """Gets the product of this SegmentModel.


        :return: The product of this SegmentModel.
        :rtype: ProductModel
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this SegmentModel.


        :param product: The product of this SegmentModel.
        :type product: ProductModel
        """

        self._product = product

    @property
    def segment_id(self):
        """Gets the segment_id of this SegmentModel.


        :return: The segment_id of this SegmentModel.
        :rtype: str
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id):
        """Sets the segment_id of this SegmentModel.


        :param segment_id: The segment_id of this SegmentModel.
        :type segment_id: str
        """

        self._segment_id = segment_id

    @property
    def updated_at(self):
        """Gets the updated_at of this SegmentModel.


        :return: The updated_at of this SegmentModel.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this SegmentModel.


        :param updated_at: The updated_at of this SegmentModel.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
