/**
 * ConfigCat Public Management API
 * **Base API URL**: https://api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).  The purpose of this API is to access the ConfigCat platform programmatically.  You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.   The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  and JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available here: [swagger.json](v1/swagger.json).  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@configcat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigSettingValuesModel.h
 *
 * 
 */

#ifndef OAIConfigSettingValuesModel_H
#define OAIConfigSettingValuesModel_H

#include <QJsonObject>

#include "OAIConfigModel.h"
#include "OAIConfigSettingValueModel.h"
#include "OAIEnvironmentModel.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConfigModel;
class OAIEnvironmentModel;
class OAIConfigSettingValueModel;

class OAIConfigSettingValuesModel : public OAIObject {
public:
    OAIConfigSettingValuesModel();
    OAIConfigSettingValuesModel(QString json);
    ~OAIConfigSettingValuesModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigModel getConfig() const;
    void setConfig(const OAIConfigModel &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    OAIEnvironmentModel getEnvironment() const;
    void setEnvironment(const OAIEnvironmentModel &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    bool isReadOnly() const;
    void setReadOnly(const bool &read_only);
    bool is_read_only_Set() const;
    bool is_read_only_Valid() const;

    QList<OAIConfigSettingValueModel> getSettingValues() const;
    void setSettingValues(const QList<OAIConfigSettingValueModel> &setting_values);
    bool is_setting_values_Set() const;
    bool is_setting_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConfigModel m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    OAIEnvironmentModel m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    bool m_read_only;
    bool m_read_only_isSet;
    bool m_read_only_isValid;

    QList<OAIConfigSettingValueModel> m_setting_values;
    bool m_setting_values_isSet;
    bool m_setting_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigSettingValuesModel)

#endif // OAIConfigSettingValuesModel_H
