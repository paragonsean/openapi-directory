/*
 * ConfigCat Public Management API
 * **Base API URL**: https://api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).  The purpose of this API is to access the ConfigCat platform programmatically.  You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.   The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  and JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available here: [swagger.json](v1/swagger.json).  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@configcat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConfigModel;
import org.openapitools.client.model.EnvironmentModel;
import org.openapitools.client.model.IntegrationLinkModel;
import org.openapitools.client.model.RolloutPercentageItemModel;
import org.openapitools.client.model.RolloutRuleModel;
import org.openapitools.client.model.SettingDataModel;
import org.openapitools.client.model.SettingTagModel;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SettingValueModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:03:46.616681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SettingValueModel {
  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private ConfigModel config;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private EnvironmentModel environment;

  public static final String SERIALIZED_NAME_INTEGRATION_LINKS = "integrationLinks";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_LINKS)
  private List<IntegrationLinkModel> integrationLinks;

  public static final String SERIALIZED_NAME_LAST_UPDATER_USER_EMAIL = "lastUpdaterUserEmail";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATER_USER_EMAIL)
  private String lastUpdaterUserEmail;

  public static final String SERIALIZED_NAME_LAST_UPDATER_USER_FULL_NAME = "lastUpdaterUserFullName";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATER_USER_FULL_NAME)
  private String lastUpdaterUserFullName;

  public static final String SERIALIZED_NAME_READ_ONLY = "readOnly";
  @SerializedName(SERIALIZED_NAME_READ_ONLY)
  private Boolean readOnly;

  public static final String SERIALIZED_NAME_ROLLOUT_PERCENTAGE_ITEMS = "rolloutPercentageItems";
  @SerializedName(SERIALIZED_NAME_ROLLOUT_PERCENTAGE_ITEMS)
  private List<RolloutPercentageItemModel> rolloutPercentageItems;

  public static final String SERIALIZED_NAME_ROLLOUT_RULES = "rolloutRules";
  @SerializedName(SERIALIZED_NAME_ROLLOUT_RULES)
  private List<RolloutRuleModel> rolloutRules;

  public static final String SERIALIZED_NAME_SETTING = "setting";
  @SerializedName(SERIALIZED_NAME_SETTING)
  private SettingDataModel setting;

  public static final String SERIALIZED_NAME_SETTING_TAGS = "settingTags";
  @SerializedName(SERIALIZED_NAME_SETTING_TAGS)
  private List<SettingTagModel> settingTags;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Object value = null;

  public SettingValueModel() {
  }

  public SettingValueModel config(ConfigModel config) {
    this.config = config;
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nullable
  public ConfigModel getConfig() {
    return config;
  }

  public void setConfig(ConfigModel config) {
    this.config = config;
  }


  public SettingValueModel environment(EnvironmentModel environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public EnvironmentModel getEnvironment() {
    return environment;
  }

  public void setEnvironment(EnvironmentModel environment) {
    this.environment = environment;
  }


  public SettingValueModel integrationLinks(List<IntegrationLinkModel> integrationLinks) {
    this.integrationLinks = integrationLinks;
    return this;
  }

  public SettingValueModel addIntegrationLinksItem(IntegrationLinkModel integrationLinksItem) {
    if (this.integrationLinks == null) {
      this.integrationLinks = new ArrayList<>();
    }
    this.integrationLinks.add(integrationLinksItem);
    return this;
  }

  /**
   * Get integrationLinks
   * @return integrationLinks
   */
  @javax.annotation.Nullable
  public List<IntegrationLinkModel> getIntegrationLinks() {
    return integrationLinks;
  }

  public void setIntegrationLinks(List<IntegrationLinkModel> integrationLinks) {
    this.integrationLinks = integrationLinks;
  }


  public SettingValueModel lastUpdaterUserEmail(String lastUpdaterUserEmail) {
    this.lastUpdaterUserEmail = lastUpdaterUserEmail;
    return this;
  }

  /**
   * Get lastUpdaterUserEmail
   * @return lastUpdaterUserEmail
   */
  @javax.annotation.Nullable
  public String getLastUpdaterUserEmail() {
    return lastUpdaterUserEmail;
  }

  public void setLastUpdaterUserEmail(String lastUpdaterUserEmail) {
    this.lastUpdaterUserEmail = lastUpdaterUserEmail;
  }


  public SettingValueModel lastUpdaterUserFullName(String lastUpdaterUserFullName) {
    this.lastUpdaterUserFullName = lastUpdaterUserFullName;
    return this;
  }

  /**
   * Get lastUpdaterUserFullName
   * @return lastUpdaterUserFullName
   */
  @javax.annotation.Nullable
  public String getLastUpdaterUserFullName() {
    return lastUpdaterUserFullName;
  }

  public void setLastUpdaterUserFullName(String lastUpdaterUserFullName) {
    this.lastUpdaterUserFullName = lastUpdaterUserFullName;
  }


  public SettingValueModel readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  /**
   * Get readOnly
   * @return readOnly
   */
  @javax.annotation.Nullable
  public Boolean getReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public SettingValueModel rolloutPercentageItems(List<RolloutPercentageItemModel> rolloutPercentageItems) {
    this.rolloutPercentageItems = rolloutPercentageItems;
    return this;
  }

  public SettingValueModel addRolloutPercentageItemsItem(RolloutPercentageItemModel rolloutPercentageItemsItem) {
    if (this.rolloutPercentageItems == null) {
      this.rolloutPercentageItems = new ArrayList<>();
    }
    this.rolloutPercentageItems.add(rolloutPercentageItemsItem);
    return this;
  }

  /**
   * The percentage rule collection.
   * @return rolloutPercentageItems
   */
  @javax.annotation.Nullable
  public List<RolloutPercentageItemModel> getRolloutPercentageItems() {
    return rolloutPercentageItems;
  }

  public void setRolloutPercentageItems(List<RolloutPercentageItemModel> rolloutPercentageItems) {
    this.rolloutPercentageItems = rolloutPercentageItems;
  }


  public SettingValueModel rolloutRules(List<RolloutRuleModel> rolloutRules) {
    this.rolloutRules = rolloutRules;
    return this;
  }

  public SettingValueModel addRolloutRulesItem(RolloutRuleModel rolloutRulesItem) {
    if (this.rolloutRules == null) {
      this.rolloutRules = new ArrayList<>();
    }
    this.rolloutRules.add(rolloutRulesItem);
    return this;
  }

  /**
   * The targeting rule collection.
   * @return rolloutRules
   */
  @javax.annotation.Nullable
  public List<RolloutRuleModel> getRolloutRules() {
    return rolloutRules;
  }

  public void setRolloutRules(List<RolloutRuleModel> rolloutRules) {
    this.rolloutRules = rolloutRules;
  }


  public SettingValueModel setting(SettingDataModel setting) {
    this.setting = setting;
    return this;
  }

  /**
   * Get setting
   * @return setting
   */
  @javax.annotation.Nullable
  public SettingDataModel getSetting() {
    return setting;
  }

  public void setSetting(SettingDataModel setting) {
    this.setting = setting;
  }


  public SettingValueModel settingTags(List<SettingTagModel> settingTags) {
    this.settingTags = settingTags;
    return this;
  }

  public SettingValueModel addSettingTagsItem(SettingTagModel settingTagsItem) {
    if (this.settingTags == null) {
      this.settingTags = new ArrayList<>();
    }
    this.settingTags.add(settingTagsItem);
    return this;
  }

  /**
   * Get settingTags
   * @return settingTags
   */
  @javax.annotation.Nullable
  public List<SettingTagModel> getSettingTags() {
    return settingTags;
  }

  public void setSettingTags(List<SettingTagModel> settingTags) {
    this.settingTags = settingTags;
  }


  public SettingValueModel updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public SettingValueModel value(Object value) {
    this.value = value;
    return this;
  }

  /**
   * The value to serve. It must respect the setting type.
   * @return value
   */
  @javax.annotation.Nullable
  public Object getValue() {
    return value;
  }

  public void setValue(Object value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingValueModel settingValueModel = (SettingValueModel) o;
    return Objects.equals(this.config, settingValueModel.config) &&
        Objects.equals(this.environment, settingValueModel.environment) &&
        Objects.equals(this.integrationLinks, settingValueModel.integrationLinks) &&
        Objects.equals(this.lastUpdaterUserEmail, settingValueModel.lastUpdaterUserEmail) &&
        Objects.equals(this.lastUpdaterUserFullName, settingValueModel.lastUpdaterUserFullName) &&
        Objects.equals(this.readOnly, settingValueModel.readOnly) &&
        Objects.equals(this.rolloutPercentageItems, settingValueModel.rolloutPercentageItems) &&
        Objects.equals(this.rolloutRules, settingValueModel.rolloutRules) &&
        Objects.equals(this.setting, settingValueModel.setting) &&
        Objects.equals(this.settingTags, settingValueModel.settingTags) &&
        Objects.equals(this.updatedAt, settingValueModel.updatedAt) &&
        Objects.equals(this.value, settingValueModel.value);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(config, environment, integrationLinks, lastUpdaterUserEmail, lastUpdaterUserFullName, readOnly, rolloutPercentageItems, rolloutRules, setting, settingTags, updatedAt, value);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingValueModel {\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    integrationLinks: ").append(toIndentedString(integrationLinks)).append("\n");
    sb.append("    lastUpdaterUserEmail: ").append(toIndentedString(lastUpdaterUserEmail)).append("\n");
    sb.append("    lastUpdaterUserFullName: ").append(toIndentedString(lastUpdaterUserFullName)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    rolloutPercentageItems: ").append(toIndentedString(rolloutPercentageItems)).append("\n");
    sb.append("    rolloutRules: ").append(toIndentedString(rolloutRules)).append("\n");
    sb.append("    setting: ").append(toIndentedString(setting)).append("\n");
    sb.append("    settingTags: ").append(toIndentedString(settingTags)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("config");
    openapiFields.add("environment");
    openapiFields.add("integrationLinks");
    openapiFields.add("lastUpdaterUserEmail");
    openapiFields.add("lastUpdaterUserFullName");
    openapiFields.add("readOnly");
    openapiFields.add("rolloutPercentageItems");
    openapiFields.add("rolloutRules");
    openapiFields.add("setting");
    openapiFields.add("settingTags");
    openapiFields.add("updatedAt");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SettingValueModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SettingValueModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SettingValueModel is not found in the empty JSON string", SettingValueModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SettingValueModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SettingValueModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `config`
      if (jsonObj.get("config") != null && !jsonObj.get("config").isJsonNull()) {
        ConfigModel.validateJsonElement(jsonObj.get("config"));
      }
      // validate the optional field `environment`
      if (jsonObj.get("environment") != null && !jsonObj.get("environment").isJsonNull()) {
        EnvironmentModel.validateJsonElement(jsonObj.get("environment"));
      }
      if (jsonObj.get("integrationLinks") != null && !jsonObj.get("integrationLinks").isJsonNull()) {
        JsonArray jsonArrayintegrationLinks = jsonObj.getAsJsonArray("integrationLinks");
        if (jsonArrayintegrationLinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("integrationLinks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `integrationLinks` to be an array in the JSON string but got `%s`", jsonObj.get("integrationLinks").toString()));
          }

          // validate the optional field `integrationLinks` (array)
          for (int i = 0; i < jsonArrayintegrationLinks.size(); i++) {
            IntegrationLinkModel.validateJsonElement(jsonArrayintegrationLinks.get(i));
          };
        }
      }
      if ((jsonObj.get("lastUpdaterUserEmail") != null && !jsonObj.get("lastUpdaterUserEmail").isJsonNull()) && !jsonObj.get("lastUpdaterUserEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdaterUserEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdaterUserEmail").toString()));
      }
      if ((jsonObj.get("lastUpdaterUserFullName") != null && !jsonObj.get("lastUpdaterUserFullName").isJsonNull()) && !jsonObj.get("lastUpdaterUserFullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdaterUserFullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdaterUserFullName").toString()));
      }
      if (jsonObj.get("rolloutPercentageItems") != null && !jsonObj.get("rolloutPercentageItems").isJsonNull()) {
        JsonArray jsonArrayrolloutPercentageItems = jsonObj.getAsJsonArray("rolloutPercentageItems");
        if (jsonArrayrolloutPercentageItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rolloutPercentageItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rolloutPercentageItems` to be an array in the JSON string but got `%s`", jsonObj.get("rolloutPercentageItems").toString()));
          }

          // validate the optional field `rolloutPercentageItems` (array)
          for (int i = 0; i < jsonArrayrolloutPercentageItems.size(); i++) {
            RolloutPercentageItemModel.validateJsonElement(jsonArrayrolloutPercentageItems.get(i));
          };
        }
      }
      if (jsonObj.get("rolloutRules") != null && !jsonObj.get("rolloutRules").isJsonNull()) {
        JsonArray jsonArrayrolloutRules = jsonObj.getAsJsonArray("rolloutRules");
        if (jsonArrayrolloutRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rolloutRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rolloutRules` to be an array in the JSON string but got `%s`", jsonObj.get("rolloutRules").toString()));
          }

          // validate the optional field `rolloutRules` (array)
          for (int i = 0; i < jsonArrayrolloutRules.size(); i++) {
            RolloutRuleModel.validateJsonElement(jsonArrayrolloutRules.get(i));
          };
        }
      }
      // validate the optional field `setting`
      if (jsonObj.get("setting") != null && !jsonObj.get("setting").isJsonNull()) {
        SettingDataModel.validateJsonElement(jsonObj.get("setting"));
      }
      if (jsonObj.get("settingTags") != null && !jsonObj.get("settingTags").isJsonNull()) {
        JsonArray jsonArraysettingTags = jsonObj.getAsJsonArray("settingTags");
        if (jsonArraysettingTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("settingTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `settingTags` to be an array in the JSON string but got `%s`", jsonObj.get("settingTags").toString()));
          }

          // validate the optional field `settingTags` (array)
          for (int i = 0; i < jsonArraysettingTags.size(); i++) {
            SettingTagModel.validateJsonElement(jsonArraysettingTags.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SettingValueModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SettingValueModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SettingValueModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SettingValueModel.class));

       return (TypeAdapter<T>) new TypeAdapter<SettingValueModel>() {
           @Override
           public void write(JsonWriter out, SettingValueModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SettingValueModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SettingValueModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SettingValueModel
   * @throws IOException if the JSON string is invalid with respect to SettingValueModel
   */
  public static SettingValueModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SettingValueModel.class);
  }

  /**
   * Convert an instance of SettingValueModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

