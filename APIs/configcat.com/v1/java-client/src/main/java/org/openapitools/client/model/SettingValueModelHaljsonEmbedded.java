/*
 * ConfigCat Public Management API
 * **Base API URL**: https://api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).  The purpose of this API is to access the ConfigCat platform programmatically.  You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.   The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  and JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available here: [swagger.json](v1/swagger.json).  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@configcat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SettingValueModelHaljsonEmbeddedConfig;
import org.openapitools.client.model.SettingValueModelHaljsonEmbeddedEnvironment;
import org.openapitools.client.model.SettingValueModelHaljsonEmbeddedIntegrationLinksInner;
import org.openapitools.client.model.SettingValueModelHaljsonEmbeddedSetting;
import org.openapitools.client.model.SettingValueModelHaljsonEmbeddedSettingTagsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SettingValueModelHaljsonEmbedded
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:03:46.616681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SettingValueModelHaljsonEmbedded {
  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private SettingValueModelHaljsonEmbeddedConfig config;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private SettingValueModelHaljsonEmbeddedEnvironment environment;

  public static final String SERIALIZED_NAME_INTEGRATION_LINKS = "integrationLinks";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_LINKS)
  private List<SettingValueModelHaljsonEmbeddedIntegrationLinksInner> integrationLinks = new ArrayList<>();

  public static final String SERIALIZED_NAME_SETTING = "setting";
  @SerializedName(SERIALIZED_NAME_SETTING)
  private SettingValueModelHaljsonEmbeddedSetting setting;

  public static final String SERIALIZED_NAME_SETTING_TAGS = "settingTags";
  @SerializedName(SERIALIZED_NAME_SETTING_TAGS)
  private List<SettingValueModelHaljsonEmbeddedSettingTagsInner> settingTags = new ArrayList<>();

  public SettingValueModelHaljsonEmbedded() {
  }

  public SettingValueModelHaljsonEmbedded config(SettingValueModelHaljsonEmbeddedConfig config) {
    this.config = config;
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nullable
  public SettingValueModelHaljsonEmbeddedConfig getConfig() {
    return config;
  }

  public void setConfig(SettingValueModelHaljsonEmbeddedConfig config) {
    this.config = config;
  }


  public SettingValueModelHaljsonEmbedded environment(SettingValueModelHaljsonEmbeddedEnvironment environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public SettingValueModelHaljsonEmbeddedEnvironment getEnvironment() {
    return environment;
  }

  public void setEnvironment(SettingValueModelHaljsonEmbeddedEnvironment environment) {
    this.environment = environment;
  }


  public SettingValueModelHaljsonEmbedded integrationLinks(List<SettingValueModelHaljsonEmbeddedIntegrationLinksInner> integrationLinks) {
    this.integrationLinks = integrationLinks;
    return this;
  }

  public SettingValueModelHaljsonEmbedded addIntegrationLinksItem(SettingValueModelHaljsonEmbeddedIntegrationLinksInner integrationLinksItem) {
    if (this.integrationLinks == null) {
      this.integrationLinks = new ArrayList<>();
    }
    this.integrationLinks.add(integrationLinksItem);
    return this;
  }

  /**
   * Get integrationLinks
   * @return integrationLinks
   */
  @javax.annotation.Nullable
  public List<SettingValueModelHaljsonEmbeddedIntegrationLinksInner> getIntegrationLinks() {
    return integrationLinks;
  }

  public void setIntegrationLinks(List<SettingValueModelHaljsonEmbeddedIntegrationLinksInner> integrationLinks) {
    this.integrationLinks = integrationLinks;
  }


  public SettingValueModelHaljsonEmbedded setting(SettingValueModelHaljsonEmbeddedSetting setting) {
    this.setting = setting;
    return this;
  }

  /**
   * Get setting
   * @return setting
   */
  @javax.annotation.Nullable
  public SettingValueModelHaljsonEmbeddedSetting getSetting() {
    return setting;
  }

  public void setSetting(SettingValueModelHaljsonEmbeddedSetting setting) {
    this.setting = setting;
  }


  public SettingValueModelHaljsonEmbedded settingTags(List<SettingValueModelHaljsonEmbeddedSettingTagsInner> settingTags) {
    this.settingTags = settingTags;
    return this;
  }

  public SettingValueModelHaljsonEmbedded addSettingTagsItem(SettingValueModelHaljsonEmbeddedSettingTagsInner settingTagsItem) {
    if (this.settingTags == null) {
      this.settingTags = new ArrayList<>();
    }
    this.settingTags.add(settingTagsItem);
    return this;
  }

  /**
   * Get settingTags
   * @return settingTags
   */
  @javax.annotation.Nullable
  public List<SettingValueModelHaljsonEmbeddedSettingTagsInner> getSettingTags() {
    return settingTags;
  }

  public void setSettingTags(List<SettingValueModelHaljsonEmbeddedSettingTagsInner> settingTags) {
    this.settingTags = settingTags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingValueModelHaljsonEmbedded settingValueModelHaljsonEmbedded = (SettingValueModelHaljsonEmbedded) o;
    return Objects.equals(this.config, settingValueModelHaljsonEmbedded.config) &&
        Objects.equals(this.environment, settingValueModelHaljsonEmbedded.environment) &&
        Objects.equals(this.integrationLinks, settingValueModelHaljsonEmbedded.integrationLinks) &&
        Objects.equals(this.setting, settingValueModelHaljsonEmbedded.setting) &&
        Objects.equals(this.settingTags, settingValueModelHaljsonEmbedded.settingTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(config, environment, integrationLinks, setting, settingTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingValueModelHaljsonEmbedded {\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    integrationLinks: ").append(toIndentedString(integrationLinks)).append("\n");
    sb.append("    setting: ").append(toIndentedString(setting)).append("\n");
    sb.append("    settingTags: ").append(toIndentedString(settingTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("config");
    openapiFields.add("environment");
    openapiFields.add("integrationLinks");
    openapiFields.add("setting");
    openapiFields.add("settingTags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SettingValueModelHaljsonEmbedded
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SettingValueModelHaljsonEmbedded.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SettingValueModelHaljsonEmbedded is not found in the empty JSON string", SettingValueModelHaljsonEmbedded.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SettingValueModelHaljsonEmbedded.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SettingValueModelHaljsonEmbedded` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `config`
      if (jsonObj.get("config") != null && !jsonObj.get("config").isJsonNull()) {
        SettingValueModelHaljsonEmbeddedConfig.validateJsonElement(jsonObj.get("config"));
      }
      // validate the optional field `environment`
      if (jsonObj.get("environment") != null && !jsonObj.get("environment").isJsonNull()) {
        SettingValueModelHaljsonEmbeddedEnvironment.validateJsonElement(jsonObj.get("environment"));
      }
      if (jsonObj.get("integrationLinks") != null && !jsonObj.get("integrationLinks").isJsonNull()) {
        JsonArray jsonArrayintegrationLinks = jsonObj.getAsJsonArray("integrationLinks");
        if (jsonArrayintegrationLinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("integrationLinks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `integrationLinks` to be an array in the JSON string but got `%s`", jsonObj.get("integrationLinks").toString()));
          }

          // validate the optional field `integrationLinks` (array)
          for (int i = 0; i < jsonArrayintegrationLinks.size(); i++) {
            SettingValueModelHaljsonEmbeddedIntegrationLinksInner.validateJsonElement(jsonArrayintegrationLinks.get(i));
          };
        }
      }
      // validate the optional field `setting`
      if (jsonObj.get("setting") != null && !jsonObj.get("setting").isJsonNull()) {
        SettingValueModelHaljsonEmbeddedSetting.validateJsonElement(jsonObj.get("setting"));
      }
      if (jsonObj.get("settingTags") != null && !jsonObj.get("settingTags").isJsonNull()) {
        JsonArray jsonArraysettingTags = jsonObj.getAsJsonArray("settingTags");
        if (jsonArraysettingTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("settingTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `settingTags` to be an array in the JSON string but got `%s`", jsonObj.get("settingTags").toString()));
          }

          // validate the optional field `settingTags` (array)
          for (int i = 0; i < jsonArraysettingTags.size(); i++) {
            SettingValueModelHaljsonEmbeddedSettingTagsInner.validateJsonElement(jsonArraysettingTags.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SettingValueModelHaljsonEmbedded.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SettingValueModelHaljsonEmbedded' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SettingValueModelHaljsonEmbedded> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SettingValueModelHaljsonEmbedded.class));

       return (TypeAdapter<T>) new TypeAdapter<SettingValueModelHaljsonEmbedded>() {
           @Override
           public void write(JsonWriter out, SettingValueModelHaljsonEmbedded value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SettingValueModelHaljsonEmbedded read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SettingValueModelHaljsonEmbedded given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SettingValueModelHaljsonEmbedded
   * @throws IOException if the JSON string is invalid with respect to SettingValueModelHaljsonEmbedded
   */
  public static SettingValueModelHaljsonEmbedded fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SettingValueModelHaljsonEmbedded.class);
  }

  /**
   * Convert an instance of SettingValueModelHaljsonEmbedded to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

