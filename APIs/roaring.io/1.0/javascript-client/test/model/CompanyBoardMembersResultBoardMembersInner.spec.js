/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CompanyApi);
  }
}(this, function(expect, CompanyApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CompanyBoardMembersResultBoardMembersInner', function() {
    it('should create an instance of CompanyBoardMembersResultBoardMembersInner', function() {
      // uncomment below and update the code to test CompanyBoardMembersResultBoardMembersInner
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be.a(CompanyApi.CompanyBoardMembersResultBoardMembersInner);
    });

    it('should have the property boardMemberCompanyId (base name: "boardMemberCompanyId")', function() {
      // uncomment below and update the code to test the property boardMemberCompanyId
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property fromDate (base name: "fromDate")', function() {
      // uncomment below and update the code to test the property fromDate
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "fullName")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property givenName (base name: "givenName")', function() {
      // uncomment below and update the code to test the property givenName
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middleName")', function() {
      // uncomment below and update the code to test the property middleName
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property personalNumber (base name: "personalNumber")', function() {
      // uncomment below and update the code to test the property personalNumber
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property roleCode (base name: "roleCode")', function() {
      // uncomment below and update the code to test the property roleCode
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property roleName (base name: "roleName")', function() {
      // uncomment below and update the code to test the property roleName
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property surName (base name: "surName")', function() {
      // uncomment below and update the code to test the property surName
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

    it('should have the property toDate (base name: "toDate")', function() {
      // uncomment below and update the code to test the property toDate
      //var instance = new CompanyApi.CompanyBoardMembersResultBoardMembersInner();
      //expect(instance).to.be();
    });

  });

}));
