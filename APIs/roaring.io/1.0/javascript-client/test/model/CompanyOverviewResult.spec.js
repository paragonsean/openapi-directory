/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CompanyApi);
  }
}(this, function(expect, CompanyApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CompanyApi.CompanyOverviewResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CompanyOverviewResult', function() {
    it('should create an instance of CompanyOverviewResult', function() {
      // uncomment below and update the code to test CompanyOverviewResult
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be.a(CompanyApi.CompanyOverviewResult);
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property changeDate (base name: "changeDate")', function() {
      // uncomment below and update the code to test the property changeDate
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property coAddress (base name: "coAddress")', function() {
      // uncomment below and update the code to test the property coAddress
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property commune (base name: "commune")', function() {
      // uncomment below and update the code to test the property commune
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property companyHolder (base name: "companyHolder")', function() {
      // uncomment below and update the code to test the property companyHolder
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property companyId (base name: "companyId")', function() {
      // uncomment below and update the code to test the property companyId
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property companyRegistrationDate (base name: "companyRegistrationDate")', function() {
      // uncomment below and update the code to test the property companyRegistrationDate
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property county (base name: "county")', function() {
      // uncomment below and update the code to test the property county
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property employerContributionReg (base name: "employerContributionReg")', function() {
      // uncomment below and update the code to test the property employerContributionReg
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property faxNumber (base name: "faxNumber")', function() {
      // uncomment below and update the code to test the property faxNumber
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property industryCode (base name: "industryCode")', function() {
      // uncomment below and update the code to test the property industryCode
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property industryText (base name: "industryText")', function() {
      // uncomment below and update the code to test the property industryText
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property legalGroupCode (base name: "legalGroupCode")', function() {
      // uncomment below and update the code to test the property legalGroupCode
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property legalGroupText (base name: "legalGroupText")', function() {
      // uncomment below and update the code to test the property legalGroupText
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property numberCompanyUnits (base name: "numberCompanyUnits")', function() {
      // uncomment below and update the code to test the property numberCompanyUnits
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property numberEmployees (base name: "numberEmployees")', function() {
      // uncomment below and update the code to test the property numberEmployees
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property preliminaryTaxReg (base name: "preliminaryTaxReg")', function() {
      // uncomment below and update the code to test the property preliminaryTaxReg
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property severalCompanyName (base name: "severalCompanyName")', function() {
      // uncomment below and update the code to test the property severalCompanyName
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property statusCode (base name: "statusCode")', function() {
      // uncomment below and update the code to test the property statusCode
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property statusDateFrom (base name: "statusDateFrom")', function() {
      // uncomment below and update the code to test the property statusDateFrom
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property statusTextDetailed (base name: "statusTextDetailed")', function() {
      // uncomment below and update the code to test the property statusTextDetailed
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property statusTextHigh (base name: "statusTextHigh")', function() {
      // uncomment below and update the code to test the property statusTextHigh
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property topDirectorFunction (base name: "topDirectorFunction")', function() {
      // uncomment below and update the code to test the property topDirectorFunction
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property topDirectorName (base name: "topDirectorName")', function() {
      // uncomment below and update the code to test the property topDirectorName
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property town (base name: "town")', function() {
      // uncomment below and update the code to test the property town
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property vatReg (base name: "vatReg")', function() {
      // uncomment below and update the code to test the property vatReg
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property vepChangedDate (base name: "vepChangedDate")', function() {
      // uncomment below and update the code to test the property vepChangedDate
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property visitAddress (base name: "visitAddress")', function() {
      // uncomment below and update the code to test the property visitAddress
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property visitCommune (base name: "visitCommune")', function() {
      // uncomment below and update the code to test the property visitCommune
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property visitCounty (base name: "visitCounty")', function() {
      // uncomment below and update the code to test the property visitCounty
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property visitStreet (base name: "visitStreet")', function() {
      // uncomment below and update the code to test the property visitStreet
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property visitStreetNumber (base name: "visitStreetNumber")', function() {
      // uncomment below and update the code to test the property visitStreetNumber
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property visitStreetUnit (base name: "visitStreetUnit")', function() {
      // uncomment below and update the code to test the property visitStreetUnit
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property visitTown (base name: "visitTown")', function() {
      // uncomment below and update the code to test the property visitTown
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property visitZipCode (base name: "visitZipCode")', function() {
      // uncomment below and update the code to test the property visitZipCode
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property webAddress (base name: "webAddress")', function() {
      // uncomment below and update the code to test the property webAddress
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "zipCode")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new CompanyApi.CompanyOverviewResult();
      //expect(instance).to.be();
    });

  });

}));
