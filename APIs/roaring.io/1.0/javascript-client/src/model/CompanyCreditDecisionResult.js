/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyRejection from './CompanyRejection';

/**
 * The CompanyCreditDecisionResult model module.
 * @module model/CompanyCreditDecisionResult
 * @version 1.0
 */
class CompanyCreditDecisionResult {
    /**
     * Constructs a new <code>CompanyCreditDecisionResult</code>.
     * Roaring Apps company credit decision
     * @alias module:model/CompanyCreditDecisionResult
     */
    constructor() { 
        
        CompanyCreditDecisionResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyCreditDecisionResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyCreditDecisionResult} obj Optional instance to populate.
     * @return {module:model/CompanyCreditDecisionResult} The populated <code>CompanyCreditDecisionResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyCreditDecisionResult();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('companyId')) {
                obj['companyId'] = ApiClient.convertToType(data['companyId'], 'String');
            }
            if (data.hasOwnProperty('rejections')) {
                obj['rejections'] = CompanyRejection.constructFromObject(data['rejections']);
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], 'String');
            }
            if (data.hasOwnProperty('statusText')) {
                obj['statusText'] = ApiClient.convertToType(data['statusText'], 'String');
            }
            if (data.hasOwnProperty('town')) {
                obj['town'] = ApiClient.convertToType(data['town'], 'String');
            }
            if (data.hasOwnProperty('zipCode')) {
                obj['zipCode'] = ApiClient.convertToType(data['zipCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyCreditDecisionResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyCreditDecisionResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['companyId'] && !(typeof data['companyId'] === 'string' || data['companyId'] instanceof String)) {
            throw new Error("Expected the field `companyId` to be a primitive type in the JSON string but got " + data['companyId']);
        }
        // validate the optional field `rejections`
        if (data['rejections']) { // data not null
          CompanyRejection.validateJSON(data['rejections']);
        }
        // ensure the json data is a string
        if (data['statusCode'] && !(typeof data['statusCode'] === 'string' || data['statusCode'] instanceof String)) {
            throw new Error("Expected the field `statusCode` to be a primitive type in the JSON string but got " + data['statusCode']);
        }
        // ensure the json data is a string
        if (data['statusText'] && !(typeof data['statusText'] === 'string' || data['statusText'] instanceof String)) {
            throw new Error("Expected the field `statusText` to be a primitive type in the JSON string but got " + data['statusText']);
        }
        // ensure the json data is a string
        if (data['town'] && !(typeof data['town'] === 'string' || data['town'] instanceof String)) {
            throw new Error("Expected the field `town` to be a primitive type in the JSON string but got " + data['town']);
        }
        // ensure the json data is a string
        if (data['zipCode'] && !(typeof data['zipCode'] === 'string' || data['zipCode'] instanceof String)) {
            throw new Error("Expected the field `zipCode` to be a primitive type in the JSON string but got " + data['zipCode']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} address
 */
CompanyCreditDecisionResult.prototype['address'] = undefined;

/**
 * Company identifier
 * @member {String} companyId
 */
CompanyCreditDecisionResult.prototype['companyId'] = undefined;

/**
 * @member {module:model/CompanyRejection} rejections
 */
CompanyCreditDecisionResult.prototype['rejections'] = undefined;

/**
 * 
 * @member {String} statusCode
 */
CompanyCreditDecisionResult.prototype['statusCode'] = undefined;

/**
 * 
 * @member {String} statusText
 */
CompanyCreditDecisionResult.prototype['statusText'] = undefined;

/**
 * 
 * @member {String} town
 */
CompanyCreditDecisionResult.prototype['town'] = undefined;

/**
 * 
 * @member {String} zipCode
 */
CompanyCreditDecisionResult.prototype['zipCode'] = undefined;






export default CompanyCreditDecisionResult;

