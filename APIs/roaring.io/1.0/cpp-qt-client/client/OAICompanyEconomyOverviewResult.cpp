/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyEconomyOverviewResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyEconomyOverviewResult::OAICompanyEconomyOverviewResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyEconomyOverviewResult::OAICompanyEconomyOverviewResult() {
    this->initializeModel();
}

OAICompanyEconomyOverviewResult::~OAICompanyEconomyOverviewResult() {}

void OAICompanyEconomyOverviewResult::initializeModel() {

    m_bs_cash_and_bank_balances_isSet = false;
    m_bs_cash_and_bank_balances_isValid = false;

    m_bs_share_capital_isSet = false;
    m_bs_share_capital_isValid = false;

    m_bs_total_assets_isSet = false;
    m_bs_total_assets_isValid = false;

    m_bs_total_equity_isSet = false;
    m_bs_total_equity_isValid = false;

    m_change_date_isSet = false;
    m_change_date_isValid = false;

    m_company_id_isSet = false;
    m_company_id_isValid = false;

    m_kpi_net_margin_percent_isSet = false;
    m_kpi_net_margin_percent_isValid = false;

    m_kpi_quick_ratio_percent_isSet = false;
    m_kpi_quick_ratio_percent_isValid = false;

    m_kpi_solidity_percent_isSet = false;
    m_kpi_solidity_percent_isValid = false;

    m_nbr_of_employees_isSet = false;
    m_nbr_of_employees_isValid = false;

    m_nbr_of_employees_interval_isSet = false;
    m_nbr_of_employees_interval_isValid = false;

    m_nbr_of_employees_office_interval_isSet = false;
    m_nbr_of_employees_office_interval_isValid = false;

    m_net_turnover_isSet = false;
    m_net_turnover_isValid = false;

    m_pl_net_income_isSet = false;
    m_pl_net_income_isValid = false;

    m_pl_operating_profit_isSet = false;
    m_pl_operating_profit_isValid = false;

    m_pl_profit_loss_after_fin_items_isSet = false;
    m_pl_profit_loss_after_fin_items_isValid = false;

    m_turnover_interval_isSet = false;
    m_turnover_interval_isValid = false;

    m_turnover_per_employee_isSet = false;
    m_turnover_per_employee_isValid = false;
}

void OAICompanyEconomyOverviewResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyEconomyOverviewResult::fromJsonObject(QJsonObject json) {

    m_bs_cash_and_bank_balances_isValid = ::OpenAPI::fromJsonValue(m_bs_cash_and_bank_balances, json[QString("bsCashAndBankBalances")]);
    m_bs_cash_and_bank_balances_isSet = !json[QString("bsCashAndBankBalances")].isNull() && m_bs_cash_and_bank_balances_isValid;

    m_bs_share_capital_isValid = ::OpenAPI::fromJsonValue(m_bs_share_capital, json[QString("bsShareCapital")]);
    m_bs_share_capital_isSet = !json[QString("bsShareCapital")].isNull() && m_bs_share_capital_isValid;

    m_bs_total_assets_isValid = ::OpenAPI::fromJsonValue(m_bs_total_assets, json[QString("bsTotalAssets")]);
    m_bs_total_assets_isSet = !json[QString("bsTotalAssets")].isNull() && m_bs_total_assets_isValid;

    m_bs_total_equity_isValid = ::OpenAPI::fromJsonValue(m_bs_total_equity, json[QString("bsTotalEquity")]);
    m_bs_total_equity_isSet = !json[QString("bsTotalEquity")].isNull() && m_bs_total_equity_isValid;

    m_change_date_isValid = ::OpenAPI::fromJsonValue(m_change_date, json[QString("changeDate")]);
    m_change_date_isSet = !json[QString("changeDate")].isNull() && m_change_date_isValid;

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("companyId")]);
    m_company_id_isSet = !json[QString("companyId")].isNull() && m_company_id_isValid;

    m_kpi_net_margin_percent_isValid = ::OpenAPI::fromJsonValue(m_kpi_net_margin_percent, json[QString("kpiNetMarginPercent")]);
    m_kpi_net_margin_percent_isSet = !json[QString("kpiNetMarginPercent")].isNull() && m_kpi_net_margin_percent_isValid;

    m_kpi_quick_ratio_percent_isValid = ::OpenAPI::fromJsonValue(m_kpi_quick_ratio_percent, json[QString("kpiQuickRatioPercent")]);
    m_kpi_quick_ratio_percent_isSet = !json[QString("kpiQuickRatioPercent")].isNull() && m_kpi_quick_ratio_percent_isValid;

    m_kpi_solidity_percent_isValid = ::OpenAPI::fromJsonValue(m_kpi_solidity_percent, json[QString("kpiSolidityPercent")]);
    m_kpi_solidity_percent_isSet = !json[QString("kpiSolidityPercent")].isNull() && m_kpi_solidity_percent_isValid;

    m_nbr_of_employees_isValid = ::OpenAPI::fromJsonValue(m_nbr_of_employees, json[QString("nbrOfEmployees")]);
    m_nbr_of_employees_isSet = !json[QString("nbrOfEmployees")].isNull() && m_nbr_of_employees_isValid;

    m_nbr_of_employees_interval_isValid = ::OpenAPI::fromJsonValue(m_nbr_of_employees_interval, json[QString("nbrOfEmployeesInterval")]);
    m_nbr_of_employees_interval_isSet = !json[QString("nbrOfEmployeesInterval")].isNull() && m_nbr_of_employees_interval_isValid;

    m_nbr_of_employees_office_interval_isValid = ::OpenAPI::fromJsonValue(m_nbr_of_employees_office_interval, json[QString("nbrOfEmployeesOfficeInterval")]);
    m_nbr_of_employees_office_interval_isSet = !json[QString("nbrOfEmployeesOfficeInterval")].isNull() && m_nbr_of_employees_office_interval_isValid;

    m_net_turnover_isValid = ::OpenAPI::fromJsonValue(m_net_turnover, json[QString("netTurnover")]);
    m_net_turnover_isSet = !json[QString("netTurnover")].isNull() && m_net_turnover_isValid;

    m_pl_net_income_isValid = ::OpenAPI::fromJsonValue(m_pl_net_income, json[QString("plNetIncome")]);
    m_pl_net_income_isSet = !json[QString("plNetIncome")].isNull() && m_pl_net_income_isValid;

    m_pl_operating_profit_isValid = ::OpenAPI::fromJsonValue(m_pl_operating_profit, json[QString("plOperatingProfit")]);
    m_pl_operating_profit_isSet = !json[QString("plOperatingProfit")].isNull() && m_pl_operating_profit_isValid;

    m_pl_profit_loss_after_fin_items_isValid = ::OpenAPI::fromJsonValue(m_pl_profit_loss_after_fin_items, json[QString("plProfitLossAfterFinItems")]);
    m_pl_profit_loss_after_fin_items_isSet = !json[QString("plProfitLossAfterFinItems")].isNull() && m_pl_profit_loss_after_fin_items_isValid;

    m_turnover_interval_isValid = ::OpenAPI::fromJsonValue(m_turnover_interval, json[QString("turnoverInterval")]);
    m_turnover_interval_isSet = !json[QString("turnoverInterval")].isNull() && m_turnover_interval_isValid;

    m_turnover_per_employee_isValid = ::OpenAPI::fromJsonValue(m_turnover_per_employee, json[QString("turnoverPerEmployee")]);
    m_turnover_per_employee_isSet = !json[QString("turnoverPerEmployee")].isNull() && m_turnover_per_employee_isValid;
}

QString OAICompanyEconomyOverviewResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyEconomyOverviewResult::asJsonObject() const {
    QJsonObject obj;
    if (m_bs_cash_and_bank_balances_isSet) {
        obj.insert(QString("bsCashAndBankBalances"), ::OpenAPI::toJsonValue(m_bs_cash_and_bank_balances));
    }
    if (m_bs_share_capital_isSet) {
        obj.insert(QString("bsShareCapital"), ::OpenAPI::toJsonValue(m_bs_share_capital));
    }
    if (m_bs_total_assets_isSet) {
        obj.insert(QString("bsTotalAssets"), ::OpenAPI::toJsonValue(m_bs_total_assets));
    }
    if (m_bs_total_equity_isSet) {
        obj.insert(QString("bsTotalEquity"), ::OpenAPI::toJsonValue(m_bs_total_equity));
    }
    if (m_change_date_isSet) {
        obj.insert(QString("changeDate"), ::OpenAPI::toJsonValue(m_change_date));
    }
    if (m_company_id_isSet) {
        obj.insert(QString("companyId"), ::OpenAPI::toJsonValue(m_company_id));
    }
    if (m_kpi_net_margin_percent_isSet) {
        obj.insert(QString("kpiNetMarginPercent"), ::OpenAPI::toJsonValue(m_kpi_net_margin_percent));
    }
    if (m_kpi_quick_ratio_percent_isSet) {
        obj.insert(QString("kpiQuickRatioPercent"), ::OpenAPI::toJsonValue(m_kpi_quick_ratio_percent));
    }
    if (m_kpi_solidity_percent_isSet) {
        obj.insert(QString("kpiSolidityPercent"), ::OpenAPI::toJsonValue(m_kpi_solidity_percent));
    }
    if (m_nbr_of_employees_isSet) {
        obj.insert(QString("nbrOfEmployees"), ::OpenAPI::toJsonValue(m_nbr_of_employees));
    }
    if (m_nbr_of_employees_interval_isSet) {
        obj.insert(QString("nbrOfEmployeesInterval"), ::OpenAPI::toJsonValue(m_nbr_of_employees_interval));
    }
    if (m_nbr_of_employees_office_interval_isSet) {
        obj.insert(QString("nbrOfEmployeesOfficeInterval"), ::OpenAPI::toJsonValue(m_nbr_of_employees_office_interval));
    }
    if (m_net_turnover_isSet) {
        obj.insert(QString("netTurnover"), ::OpenAPI::toJsonValue(m_net_turnover));
    }
    if (m_pl_net_income_isSet) {
        obj.insert(QString("plNetIncome"), ::OpenAPI::toJsonValue(m_pl_net_income));
    }
    if (m_pl_operating_profit_isSet) {
        obj.insert(QString("plOperatingProfit"), ::OpenAPI::toJsonValue(m_pl_operating_profit));
    }
    if (m_pl_profit_loss_after_fin_items_isSet) {
        obj.insert(QString("plProfitLossAfterFinItems"), ::OpenAPI::toJsonValue(m_pl_profit_loss_after_fin_items));
    }
    if (m_turnover_interval_isSet) {
        obj.insert(QString("turnoverInterval"), ::OpenAPI::toJsonValue(m_turnover_interval));
    }
    if (m_turnover_per_employee_isSet) {
        obj.insert(QString("turnoverPerEmployee"), ::OpenAPI::toJsonValue(m_turnover_per_employee));
    }
    return obj;
}

QString OAICompanyEconomyOverviewResult::getBsCashAndBankBalances() const {
    return m_bs_cash_and_bank_balances;
}
void OAICompanyEconomyOverviewResult::setBsCashAndBankBalances(const QString &bs_cash_and_bank_balances) {
    m_bs_cash_and_bank_balances = bs_cash_and_bank_balances;
    m_bs_cash_and_bank_balances_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_bs_cash_and_bank_balances_Set() const{
    return m_bs_cash_and_bank_balances_isSet;
}

bool OAICompanyEconomyOverviewResult::is_bs_cash_and_bank_balances_Valid() const{
    return m_bs_cash_and_bank_balances_isValid;
}

QString OAICompanyEconomyOverviewResult::getBsShareCapital() const {
    return m_bs_share_capital;
}
void OAICompanyEconomyOverviewResult::setBsShareCapital(const QString &bs_share_capital) {
    m_bs_share_capital = bs_share_capital;
    m_bs_share_capital_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_bs_share_capital_Set() const{
    return m_bs_share_capital_isSet;
}

bool OAICompanyEconomyOverviewResult::is_bs_share_capital_Valid() const{
    return m_bs_share_capital_isValid;
}

QString OAICompanyEconomyOverviewResult::getBsTotalAssets() const {
    return m_bs_total_assets;
}
void OAICompanyEconomyOverviewResult::setBsTotalAssets(const QString &bs_total_assets) {
    m_bs_total_assets = bs_total_assets;
    m_bs_total_assets_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_bs_total_assets_Set() const{
    return m_bs_total_assets_isSet;
}

bool OAICompanyEconomyOverviewResult::is_bs_total_assets_Valid() const{
    return m_bs_total_assets_isValid;
}

QString OAICompanyEconomyOverviewResult::getBsTotalEquity() const {
    return m_bs_total_equity;
}
void OAICompanyEconomyOverviewResult::setBsTotalEquity(const QString &bs_total_equity) {
    m_bs_total_equity = bs_total_equity;
    m_bs_total_equity_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_bs_total_equity_Set() const{
    return m_bs_total_equity_isSet;
}

bool OAICompanyEconomyOverviewResult::is_bs_total_equity_Valid() const{
    return m_bs_total_equity_isValid;
}

QString OAICompanyEconomyOverviewResult::getChangeDate() const {
    return m_change_date;
}
void OAICompanyEconomyOverviewResult::setChangeDate(const QString &change_date) {
    m_change_date = change_date;
    m_change_date_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_change_date_Set() const{
    return m_change_date_isSet;
}

bool OAICompanyEconomyOverviewResult::is_change_date_Valid() const{
    return m_change_date_isValid;
}

QString OAICompanyEconomyOverviewResult::getCompanyId() const {
    return m_company_id;
}
void OAICompanyEconomyOverviewResult::setCompanyId(const QString &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAICompanyEconomyOverviewResult::is_company_id_Valid() const{
    return m_company_id_isValid;
}

QString OAICompanyEconomyOverviewResult::getKpiNetMarginPercent() const {
    return m_kpi_net_margin_percent;
}
void OAICompanyEconomyOverviewResult::setKpiNetMarginPercent(const QString &kpi_net_margin_percent) {
    m_kpi_net_margin_percent = kpi_net_margin_percent;
    m_kpi_net_margin_percent_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_kpi_net_margin_percent_Set() const{
    return m_kpi_net_margin_percent_isSet;
}

bool OAICompanyEconomyOverviewResult::is_kpi_net_margin_percent_Valid() const{
    return m_kpi_net_margin_percent_isValid;
}

QString OAICompanyEconomyOverviewResult::getKpiQuickRatioPercent() const {
    return m_kpi_quick_ratio_percent;
}
void OAICompanyEconomyOverviewResult::setKpiQuickRatioPercent(const QString &kpi_quick_ratio_percent) {
    m_kpi_quick_ratio_percent = kpi_quick_ratio_percent;
    m_kpi_quick_ratio_percent_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_kpi_quick_ratio_percent_Set() const{
    return m_kpi_quick_ratio_percent_isSet;
}

bool OAICompanyEconomyOverviewResult::is_kpi_quick_ratio_percent_Valid() const{
    return m_kpi_quick_ratio_percent_isValid;
}

QString OAICompanyEconomyOverviewResult::getKpiSolidityPercent() const {
    return m_kpi_solidity_percent;
}
void OAICompanyEconomyOverviewResult::setKpiSolidityPercent(const QString &kpi_solidity_percent) {
    m_kpi_solidity_percent = kpi_solidity_percent;
    m_kpi_solidity_percent_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_kpi_solidity_percent_Set() const{
    return m_kpi_solidity_percent_isSet;
}

bool OAICompanyEconomyOverviewResult::is_kpi_solidity_percent_Valid() const{
    return m_kpi_solidity_percent_isValid;
}

QString OAICompanyEconomyOverviewResult::getNbrOfEmployees() const {
    return m_nbr_of_employees;
}
void OAICompanyEconomyOverviewResult::setNbrOfEmployees(const QString &nbr_of_employees) {
    m_nbr_of_employees = nbr_of_employees;
    m_nbr_of_employees_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_nbr_of_employees_Set() const{
    return m_nbr_of_employees_isSet;
}

bool OAICompanyEconomyOverviewResult::is_nbr_of_employees_Valid() const{
    return m_nbr_of_employees_isValid;
}

QString OAICompanyEconomyOverviewResult::getNbrOfEmployeesInterval() const {
    return m_nbr_of_employees_interval;
}
void OAICompanyEconomyOverviewResult::setNbrOfEmployeesInterval(const QString &nbr_of_employees_interval) {
    m_nbr_of_employees_interval = nbr_of_employees_interval;
    m_nbr_of_employees_interval_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_nbr_of_employees_interval_Set() const{
    return m_nbr_of_employees_interval_isSet;
}

bool OAICompanyEconomyOverviewResult::is_nbr_of_employees_interval_Valid() const{
    return m_nbr_of_employees_interval_isValid;
}

QString OAICompanyEconomyOverviewResult::getNbrOfEmployeesOfficeInterval() const {
    return m_nbr_of_employees_office_interval;
}
void OAICompanyEconomyOverviewResult::setNbrOfEmployeesOfficeInterval(const QString &nbr_of_employees_office_interval) {
    m_nbr_of_employees_office_interval = nbr_of_employees_office_interval;
    m_nbr_of_employees_office_interval_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_nbr_of_employees_office_interval_Set() const{
    return m_nbr_of_employees_office_interval_isSet;
}

bool OAICompanyEconomyOverviewResult::is_nbr_of_employees_office_interval_Valid() const{
    return m_nbr_of_employees_office_interval_isValid;
}

QString OAICompanyEconomyOverviewResult::getNetTurnover() const {
    return m_net_turnover;
}
void OAICompanyEconomyOverviewResult::setNetTurnover(const QString &net_turnover) {
    m_net_turnover = net_turnover;
    m_net_turnover_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_net_turnover_Set() const{
    return m_net_turnover_isSet;
}

bool OAICompanyEconomyOverviewResult::is_net_turnover_Valid() const{
    return m_net_turnover_isValid;
}

QString OAICompanyEconomyOverviewResult::getPlNetIncome() const {
    return m_pl_net_income;
}
void OAICompanyEconomyOverviewResult::setPlNetIncome(const QString &pl_net_income) {
    m_pl_net_income = pl_net_income;
    m_pl_net_income_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_pl_net_income_Set() const{
    return m_pl_net_income_isSet;
}

bool OAICompanyEconomyOverviewResult::is_pl_net_income_Valid() const{
    return m_pl_net_income_isValid;
}

QString OAICompanyEconomyOverviewResult::getPlOperatingProfit() const {
    return m_pl_operating_profit;
}
void OAICompanyEconomyOverviewResult::setPlOperatingProfit(const QString &pl_operating_profit) {
    m_pl_operating_profit = pl_operating_profit;
    m_pl_operating_profit_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_pl_operating_profit_Set() const{
    return m_pl_operating_profit_isSet;
}

bool OAICompanyEconomyOverviewResult::is_pl_operating_profit_Valid() const{
    return m_pl_operating_profit_isValid;
}

QString OAICompanyEconomyOverviewResult::getPlProfitLossAfterFinItems() const {
    return m_pl_profit_loss_after_fin_items;
}
void OAICompanyEconomyOverviewResult::setPlProfitLossAfterFinItems(const QString &pl_profit_loss_after_fin_items) {
    m_pl_profit_loss_after_fin_items = pl_profit_loss_after_fin_items;
    m_pl_profit_loss_after_fin_items_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_pl_profit_loss_after_fin_items_Set() const{
    return m_pl_profit_loss_after_fin_items_isSet;
}

bool OAICompanyEconomyOverviewResult::is_pl_profit_loss_after_fin_items_Valid() const{
    return m_pl_profit_loss_after_fin_items_isValid;
}

QString OAICompanyEconomyOverviewResult::getTurnoverInterval() const {
    return m_turnover_interval;
}
void OAICompanyEconomyOverviewResult::setTurnoverInterval(const QString &turnover_interval) {
    m_turnover_interval = turnover_interval;
    m_turnover_interval_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_turnover_interval_Set() const{
    return m_turnover_interval_isSet;
}

bool OAICompanyEconomyOverviewResult::is_turnover_interval_Valid() const{
    return m_turnover_interval_isValid;
}

QString OAICompanyEconomyOverviewResult::getTurnoverPerEmployee() const {
    return m_turnover_per_employee;
}
void OAICompanyEconomyOverviewResult::setTurnoverPerEmployee(const QString &turnover_per_employee) {
    m_turnover_per_employee = turnover_per_employee;
    m_turnover_per_employee_isSet = true;
}

bool OAICompanyEconomyOverviewResult::is_turnover_per_employee_Set() const{
    return m_turnover_per_employee_isSet;
}

bool OAICompanyEconomyOverviewResult::is_turnover_per_employee_Valid() const{
    return m_turnover_per_employee_isValid;
}

bool OAICompanyEconomyOverviewResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bs_cash_and_bank_balances_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bs_share_capital_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bs_total_assets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bs_total_equity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kpi_net_margin_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kpi_quick_ratio_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kpi_solidity_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nbr_of_employees_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nbr_of_employees_interval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nbr_of_employees_office_interval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_turnover_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pl_net_income_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pl_operating_profit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pl_profit_loss_after_fin_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_turnover_interval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_turnover_per_employee_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyEconomyOverviewResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
