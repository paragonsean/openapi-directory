/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyCreditDecisionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyCreditDecisionResult::OAICompanyCreditDecisionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyCreditDecisionResult::OAICompanyCreditDecisionResult() {
    this->initializeModel();
}

OAICompanyCreditDecisionResult::~OAICompanyCreditDecisionResult() {}

void OAICompanyCreditDecisionResult::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_company_id_isSet = false;
    m_company_id_isValid = false;

    m_rejections_isSet = false;
    m_rejections_isValid = false;

    m_status_code_isSet = false;
    m_status_code_isValid = false;

    m_status_text_isSet = false;
    m_status_text_isValid = false;

    m_town_isSet = false;
    m_town_isValid = false;

    m_zip_code_isSet = false;
    m_zip_code_isValid = false;
}

void OAICompanyCreditDecisionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyCreditDecisionResult::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("companyId")]);
    m_company_id_isSet = !json[QString("companyId")].isNull() && m_company_id_isValid;

    m_rejections_isValid = ::OpenAPI::fromJsonValue(m_rejections, json[QString("rejections")]);
    m_rejections_isSet = !json[QString("rejections")].isNull() && m_rejections_isValid;

    m_status_code_isValid = ::OpenAPI::fromJsonValue(m_status_code, json[QString("statusCode")]);
    m_status_code_isSet = !json[QString("statusCode")].isNull() && m_status_code_isValid;

    m_status_text_isValid = ::OpenAPI::fromJsonValue(m_status_text, json[QString("statusText")]);
    m_status_text_isSet = !json[QString("statusText")].isNull() && m_status_text_isValid;

    m_town_isValid = ::OpenAPI::fromJsonValue(m_town, json[QString("town")]);
    m_town_isSet = !json[QString("town")].isNull() && m_town_isValid;

    m_zip_code_isValid = ::OpenAPI::fromJsonValue(m_zip_code, json[QString("zipCode")]);
    m_zip_code_isSet = !json[QString("zipCode")].isNull() && m_zip_code_isValid;
}

QString OAICompanyCreditDecisionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyCreditDecisionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_company_id_isSet) {
        obj.insert(QString("companyId"), ::OpenAPI::toJsonValue(m_company_id));
    }
    if (m_rejections.isSet()) {
        obj.insert(QString("rejections"), ::OpenAPI::toJsonValue(m_rejections));
    }
    if (m_status_code_isSet) {
        obj.insert(QString("statusCode"), ::OpenAPI::toJsonValue(m_status_code));
    }
    if (m_status_text_isSet) {
        obj.insert(QString("statusText"), ::OpenAPI::toJsonValue(m_status_text));
    }
    if (m_town_isSet) {
        obj.insert(QString("town"), ::OpenAPI::toJsonValue(m_town));
    }
    if (m_zip_code_isSet) {
        obj.insert(QString("zipCode"), ::OpenAPI::toJsonValue(m_zip_code));
    }
    return obj;
}

QString OAICompanyCreditDecisionResult::getAddress() const {
    return m_address;
}
void OAICompanyCreditDecisionResult::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICompanyCreditDecisionResult::is_address_Set() const{
    return m_address_isSet;
}

bool OAICompanyCreditDecisionResult::is_address_Valid() const{
    return m_address_isValid;
}

QString OAICompanyCreditDecisionResult::getCompanyId() const {
    return m_company_id;
}
void OAICompanyCreditDecisionResult::setCompanyId(const QString &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAICompanyCreditDecisionResult::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAICompanyCreditDecisionResult::is_company_id_Valid() const{
    return m_company_id_isValid;
}

OAICompanyRejection OAICompanyCreditDecisionResult::getRejections() const {
    return m_rejections;
}
void OAICompanyCreditDecisionResult::setRejections(const OAICompanyRejection &rejections) {
    m_rejections = rejections;
    m_rejections_isSet = true;
}

bool OAICompanyCreditDecisionResult::is_rejections_Set() const{
    return m_rejections_isSet;
}

bool OAICompanyCreditDecisionResult::is_rejections_Valid() const{
    return m_rejections_isValid;
}

QString OAICompanyCreditDecisionResult::getStatusCode() const {
    return m_status_code;
}
void OAICompanyCreditDecisionResult::setStatusCode(const QString &status_code) {
    m_status_code = status_code;
    m_status_code_isSet = true;
}

bool OAICompanyCreditDecisionResult::is_status_code_Set() const{
    return m_status_code_isSet;
}

bool OAICompanyCreditDecisionResult::is_status_code_Valid() const{
    return m_status_code_isValid;
}

QString OAICompanyCreditDecisionResult::getStatusText() const {
    return m_status_text;
}
void OAICompanyCreditDecisionResult::setStatusText(const QString &status_text) {
    m_status_text = status_text;
    m_status_text_isSet = true;
}

bool OAICompanyCreditDecisionResult::is_status_text_Set() const{
    return m_status_text_isSet;
}

bool OAICompanyCreditDecisionResult::is_status_text_Valid() const{
    return m_status_text_isValid;
}

QString OAICompanyCreditDecisionResult::getTown() const {
    return m_town;
}
void OAICompanyCreditDecisionResult::setTown(const QString &town) {
    m_town = town;
    m_town_isSet = true;
}

bool OAICompanyCreditDecisionResult::is_town_Set() const{
    return m_town_isSet;
}

bool OAICompanyCreditDecisionResult::is_town_Valid() const{
    return m_town_isValid;
}

QString OAICompanyCreditDecisionResult::getZipCode() const {
    return m_zip_code;
}
void OAICompanyCreditDecisionResult::setZipCode(const QString &zip_code) {
    m_zip_code = zip_code;
    m_zip_code_isSet = true;
}

bool OAICompanyCreditDecisionResult::is_zip_code_Set() const{
    return m_zip_code_isSet;
}

bool OAICompanyCreditDecisionResult::is_zip_code_Valid() const{
    return m_zip_code_isValid;
}

bool OAICompanyCreditDecisionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rejections.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_town_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyCreditDecisionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
