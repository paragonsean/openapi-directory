/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyOverviewResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyOverviewResult::OAICompanyOverviewResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyOverviewResult::OAICompanyOverviewResult() {
    this->initializeModel();
}

OAICompanyOverviewResult::~OAICompanyOverviewResult() {}

void OAICompanyOverviewResult::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_change_date_isSet = false;
    m_change_date_isValid = false;

    m_co_address_isSet = false;
    m_co_address_isValid = false;

    m_commune_isSet = false;
    m_commune_isValid = false;

    m_company_holder_isSet = false;
    m_company_holder_isValid = false;

    m_company_id_isSet = false;
    m_company_id_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_company_registration_date_isSet = false;
    m_company_registration_date_isValid = false;

    m_county_isSet = false;
    m_county_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_employer_contribution_reg_isSet = false;
    m_employer_contribution_reg_isValid = false;

    m_fax_number_isSet = false;
    m_fax_number_isValid = false;

    m_industry_code_isSet = false;
    m_industry_code_isValid = false;

    m_industry_text_isSet = false;
    m_industry_text_isValid = false;

    m_legal_group_code_isSet = false;
    m_legal_group_code_isValid = false;

    m_legal_group_text_isSet = false;
    m_legal_group_text_isValid = false;

    m_number_company_units_isSet = false;
    m_number_company_units_isValid = false;

    m_number_employees_isSet = false;
    m_number_employees_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_preliminary_tax_reg_isSet = false;
    m_preliminary_tax_reg_isValid = false;

    m_several_company_name_isSet = false;
    m_several_company_name_isValid = false;

    m_status_code_isSet = false;
    m_status_code_isValid = false;

    m_status_date_from_isSet = false;
    m_status_date_from_isValid = false;

    m_status_text_detailed_isSet = false;
    m_status_text_detailed_isValid = false;

    m_status_text_high_isSet = false;
    m_status_text_high_isValid = false;

    m_top_director_function_isSet = false;
    m_top_director_function_isValid = false;

    m_top_director_name_isSet = false;
    m_top_director_name_isValid = false;

    m_town_isSet = false;
    m_town_isValid = false;

    m_vat_reg_isSet = false;
    m_vat_reg_isValid = false;

    m_vep_changed_date_isSet = false;
    m_vep_changed_date_isValid = false;

    m_visit_address_isSet = false;
    m_visit_address_isValid = false;

    m_visit_commune_isSet = false;
    m_visit_commune_isValid = false;

    m_visit_county_isSet = false;
    m_visit_county_isValid = false;

    m_visit_street_isSet = false;
    m_visit_street_isValid = false;

    m_visit_street_number_isSet = false;
    m_visit_street_number_isValid = false;

    m_visit_street_unit_isSet = false;
    m_visit_street_unit_isValid = false;

    m_visit_town_isSet = false;
    m_visit_town_isValid = false;

    m_visit_zip_code_isSet = false;
    m_visit_zip_code_isValid = false;

    m_web_address_isSet = false;
    m_web_address_isValid = false;

    m_zip_code_isSet = false;
    m_zip_code_isValid = false;
}

void OAICompanyOverviewResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyOverviewResult::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_change_date_isValid = ::OpenAPI::fromJsonValue(m_change_date, json[QString("changeDate")]);
    m_change_date_isSet = !json[QString("changeDate")].isNull() && m_change_date_isValid;

    m_co_address_isValid = ::OpenAPI::fromJsonValue(m_co_address, json[QString("coAddress")]);
    m_co_address_isSet = !json[QString("coAddress")].isNull() && m_co_address_isValid;

    m_commune_isValid = ::OpenAPI::fromJsonValue(m_commune, json[QString("commune")]);
    m_commune_isSet = !json[QString("commune")].isNull() && m_commune_isValid;

    m_company_holder_isValid = ::OpenAPI::fromJsonValue(m_company_holder, json[QString("companyHolder")]);
    m_company_holder_isSet = !json[QString("companyHolder")].isNull() && m_company_holder_isValid;

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("companyId")]);
    m_company_id_isSet = !json[QString("companyId")].isNull() && m_company_id_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_company_registration_date_isValid = ::OpenAPI::fromJsonValue(m_company_registration_date, json[QString("companyRegistrationDate")]);
    m_company_registration_date_isSet = !json[QString("companyRegistrationDate")].isNull() && m_company_registration_date_isValid;

    m_county_isValid = ::OpenAPI::fromJsonValue(m_county, json[QString("county")]);
    m_county_isSet = !json[QString("county")].isNull() && m_county_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_employer_contribution_reg_isValid = ::OpenAPI::fromJsonValue(m_employer_contribution_reg, json[QString("employerContributionReg")]);
    m_employer_contribution_reg_isSet = !json[QString("employerContributionReg")].isNull() && m_employer_contribution_reg_isValid;

    m_fax_number_isValid = ::OpenAPI::fromJsonValue(m_fax_number, json[QString("faxNumber")]);
    m_fax_number_isSet = !json[QString("faxNumber")].isNull() && m_fax_number_isValid;

    m_industry_code_isValid = ::OpenAPI::fromJsonValue(m_industry_code, json[QString("industryCode")]);
    m_industry_code_isSet = !json[QString("industryCode")].isNull() && m_industry_code_isValid;

    m_industry_text_isValid = ::OpenAPI::fromJsonValue(m_industry_text, json[QString("industryText")]);
    m_industry_text_isSet = !json[QString("industryText")].isNull() && m_industry_text_isValid;

    m_legal_group_code_isValid = ::OpenAPI::fromJsonValue(m_legal_group_code, json[QString("legalGroupCode")]);
    m_legal_group_code_isSet = !json[QString("legalGroupCode")].isNull() && m_legal_group_code_isValid;

    m_legal_group_text_isValid = ::OpenAPI::fromJsonValue(m_legal_group_text, json[QString("legalGroupText")]);
    m_legal_group_text_isSet = !json[QString("legalGroupText")].isNull() && m_legal_group_text_isValid;

    m_number_company_units_isValid = ::OpenAPI::fromJsonValue(m_number_company_units, json[QString("numberCompanyUnits")]);
    m_number_company_units_isSet = !json[QString("numberCompanyUnits")].isNull() && m_number_company_units_isValid;

    m_number_employees_isValid = ::OpenAPI::fromJsonValue(m_number_employees, json[QString("numberEmployees")]);
    m_number_employees_isSet = !json[QString("numberEmployees")].isNull() && m_number_employees_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_preliminary_tax_reg_isValid = ::OpenAPI::fromJsonValue(m_preliminary_tax_reg, json[QString("preliminaryTaxReg")]);
    m_preliminary_tax_reg_isSet = !json[QString("preliminaryTaxReg")].isNull() && m_preliminary_tax_reg_isValid;

    m_several_company_name_isValid = ::OpenAPI::fromJsonValue(m_several_company_name, json[QString("severalCompanyName")]);
    m_several_company_name_isSet = !json[QString("severalCompanyName")].isNull() && m_several_company_name_isValid;

    m_status_code_isValid = ::OpenAPI::fromJsonValue(m_status_code, json[QString("statusCode")]);
    m_status_code_isSet = !json[QString("statusCode")].isNull() && m_status_code_isValid;

    m_status_date_from_isValid = ::OpenAPI::fromJsonValue(m_status_date_from, json[QString("statusDateFrom")]);
    m_status_date_from_isSet = !json[QString("statusDateFrom")].isNull() && m_status_date_from_isValid;

    m_status_text_detailed_isValid = ::OpenAPI::fromJsonValue(m_status_text_detailed, json[QString("statusTextDetailed")]);
    m_status_text_detailed_isSet = !json[QString("statusTextDetailed")].isNull() && m_status_text_detailed_isValid;

    m_status_text_high_isValid = ::OpenAPI::fromJsonValue(m_status_text_high, json[QString("statusTextHigh")]);
    m_status_text_high_isSet = !json[QString("statusTextHigh")].isNull() && m_status_text_high_isValid;

    m_top_director_function_isValid = ::OpenAPI::fromJsonValue(m_top_director_function, json[QString("topDirectorFunction")]);
    m_top_director_function_isSet = !json[QString("topDirectorFunction")].isNull() && m_top_director_function_isValid;

    m_top_director_name_isValid = ::OpenAPI::fromJsonValue(m_top_director_name, json[QString("topDirectorName")]);
    m_top_director_name_isSet = !json[QString("topDirectorName")].isNull() && m_top_director_name_isValid;

    m_town_isValid = ::OpenAPI::fromJsonValue(m_town, json[QString("town")]);
    m_town_isSet = !json[QString("town")].isNull() && m_town_isValid;

    m_vat_reg_isValid = ::OpenAPI::fromJsonValue(m_vat_reg, json[QString("vatReg")]);
    m_vat_reg_isSet = !json[QString("vatReg")].isNull() && m_vat_reg_isValid;

    m_vep_changed_date_isValid = ::OpenAPI::fromJsonValue(m_vep_changed_date, json[QString("vepChangedDate")]);
    m_vep_changed_date_isSet = !json[QString("vepChangedDate")].isNull() && m_vep_changed_date_isValid;

    m_visit_address_isValid = ::OpenAPI::fromJsonValue(m_visit_address, json[QString("visitAddress")]);
    m_visit_address_isSet = !json[QString("visitAddress")].isNull() && m_visit_address_isValid;

    m_visit_commune_isValid = ::OpenAPI::fromJsonValue(m_visit_commune, json[QString("visitCommune")]);
    m_visit_commune_isSet = !json[QString("visitCommune")].isNull() && m_visit_commune_isValid;

    m_visit_county_isValid = ::OpenAPI::fromJsonValue(m_visit_county, json[QString("visitCounty")]);
    m_visit_county_isSet = !json[QString("visitCounty")].isNull() && m_visit_county_isValid;

    m_visit_street_isValid = ::OpenAPI::fromJsonValue(m_visit_street, json[QString("visitStreet")]);
    m_visit_street_isSet = !json[QString("visitStreet")].isNull() && m_visit_street_isValid;

    m_visit_street_number_isValid = ::OpenAPI::fromJsonValue(m_visit_street_number, json[QString("visitStreetNumber")]);
    m_visit_street_number_isSet = !json[QString("visitStreetNumber")].isNull() && m_visit_street_number_isValid;

    m_visit_street_unit_isValid = ::OpenAPI::fromJsonValue(m_visit_street_unit, json[QString("visitStreetUnit")]);
    m_visit_street_unit_isSet = !json[QString("visitStreetUnit")].isNull() && m_visit_street_unit_isValid;

    m_visit_town_isValid = ::OpenAPI::fromJsonValue(m_visit_town, json[QString("visitTown")]);
    m_visit_town_isSet = !json[QString("visitTown")].isNull() && m_visit_town_isValid;

    m_visit_zip_code_isValid = ::OpenAPI::fromJsonValue(m_visit_zip_code, json[QString("visitZipCode")]);
    m_visit_zip_code_isSet = !json[QString("visitZipCode")].isNull() && m_visit_zip_code_isValid;

    m_web_address_isValid = ::OpenAPI::fromJsonValue(m_web_address, json[QString("webAddress")]);
    m_web_address_isSet = !json[QString("webAddress")].isNull() && m_web_address_isValid;

    m_zip_code_isValid = ::OpenAPI::fromJsonValue(m_zip_code, json[QString("zipCode")]);
    m_zip_code_isSet = !json[QString("zipCode")].isNull() && m_zip_code_isValid;
}

QString OAICompanyOverviewResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyOverviewResult::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_change_date_isSet) {
        obj.insert(QString("changeDate"), ::OpenAPI::toJsonValue(m_change_date));
    }
    if (m_co_address_isSet) {
        obj.insert(QString("coAddress"), ::OpenAPI::toJsonValue(m_co_address));
    }
    if (m_commune_isSet) {
        obj.insert(QString("commune"), ::OpenAPI::toJsonValue(m_commune));
    }
    if (m_company_holder_isSet) {
        obj.insert(QString("companyHolder"), ::OpenAPI::toJsonValue(m_company_holder));
    }
    if (m_company_id_isSet) {
        obj.insert(QString("companyId"), ::OpenAPI::toJsonValue(m_company_id));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_company_registration_date_isSet) {
        obj.insert(QString("companyRegistrationDate"), ::OpenAPI::toJsonValue(m_company_registration_date));
    }
    if (m_county_isSet) {
        obj.insert(QString("county"), ::OpenAPI::toJsonValue(m_county));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_employer_contribution_reg_isSet) {
        obj.insert(QString("employerContributionReg"), ::OpenAPI::toJsonValue(m_employer_contribution_reg));
    }
    if (m_fax_number_isSet) {
        obj.insert(QString("faxNumber"), ::OpenAPI::toJsonValue(m_fax_number));
    }
    if (m_industry_code_isSet) {
        obj.insert(QString("industryCode"), ::OpenAPI::toJsonValue(m_industry_code));
    }
    if (m_industry_text_isSet) {
        obj.insert(QString("industryText"), ::OpenAPI::toJsonValue(m_industry_text));
    }
    if (m_legal_group_code_isSet) {
        obj.insert(QString("legalGroupCode"), ::OpenAPI::toJsonValue(m_legal_group_code));
    }
    if (m_legal_group_text_isSet) {
        obj.insert(QString("legalGroupText"), ::OpenAPI::toJsonValue(m_legal_group_text));
    }
    if (m_number_company_units_isSet) {
        obj.insert(QString("numberCompanyUnits"), ::OpenAPI::toJsonValue(m_number_company_units));
    }
    if (m_number_employees_isSet) {
        obj.insert(QString("numberEmployees"), ::OpenAPI::toJsonValue(m_number_employees));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_preliminary_tax_reg_isSet) {
        obj.insert(QString("preliminaryTaxReg"), ::OpenAPI::toJsonValue(m_preliminary_tax_reg));
    }
    if (m_several_company_name_isSet) {
        obj.insert(QString("severalCompanyName"), ::OpenAPI::toJsonValue(m_several_company_name));
    }
    if (m_status_code_isSet) {
        obj.insert(QString("statusCode"), ::OpenAPI::toJsonValue(m_status_code));
    }
    if (m_status_date_from_isSet) {
        obj.insert(QString("statusDateFrom"), ::OpenAPI::toJsonValue(m_status_date_from));
    }
    if (m_status_text_detailed_isSet) {
        obj.insert(QString("statusTextDetailed"), ::OpenAPI::toJsonValue(m_status_text_detailed));
    }
    if (m_status_text_high_isSet) {
        obj.insert(QString("statusTextHigh"), ::OpenAPI::toJsonValue(m_status_text_high));
    }
    if (m_top_director_function_isSet) {
        obj.insert(QString("topDirectorFunction"), ::OpenAPI::toJsonValue(m_top_director_function));
    }
    if (m_top_director_name_isSet) {
        obj.insert(QString("topDirectorName"), ::OpenAPI::toJsonValue(m_top_director_name));
    }
    if (m_town_isSet) {
        obj.insert(QString("town"), ::OpenAPI::toJsonValue(m_town));
    }
    if (m_vat_reg_isSet) {
        obj.insert(QString("vatReg"), ::OpenAPI::toJsonValue(m_vat_reg));
    }
    if (m_vep_changed_date_isSet) {
        obj.insert(QString("vepChangedDate"), ::OpenAPI::toJsonValue(m_vep_changed_date));
    }
    if (m_visit_address_isSet) {
        obj.insert(QString("visitAddress"), ::OpenAPI::toJsonValue(m_visit_address));
    }
    if (m_visit_commune_isSet) {
        obj.insert(QString("visitCommune"), ::OpenAPI::toJsonValue(m_visit_commune));
    }
    if (m_visit_county_isSet) {
        obj.insert(QString("visitCounty"), ::OpenAPI::toJsonValue(m_visit_county));
    }
    if (m_visit_street_isSet) {
        obj.insert(QString("visitStreet"), ::OpenAPI::toJsonValue(m_visit_street));
    }
    if (m_visit_street_number_isSet) {
        obj.insert(QString("visitStreetNumber"), ::OpenAPI::toJsonValue(m_visit_street_number));
    }
    if (m_visit_street_unit_isSet) {
        obj.insert(QString("visitStreetUnit"), ::OpenAPI::toJsonValue(m_visit_street_unit));
    }
    if (m_visit_town_isSet) {
        obj.insert(QString("visitTown"), ::OpenAPI::toJsonValue(m_visit_town));
    }
    if (m_visit_zip_code_isSet) {
        obj.insert(QString("visitZipCode"), ::OpenAPI::toJsonValue(m_visit_zip_code));
    }
    if (m_web_address_isSet) {
        obj.insert(QString("webAddress"), ::OpenAPI::toJsonValue(m_web_address));
    }
    if (m_zip_code_isSet) {
        obj.insert(QString("zipCode"), ::OpenAPI::toJsonValue(m_zip_code));
    }
    return obj;
}

QString OAICompanyOverviewResult::getAddress() const {
    return m_address;
}
void OAICompanyOverviewResult::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICompanyOverviewResult::is_address_Set() const{
    return m_address_isSet;
}

bool OAICompanyOverviewResult::is_address_Valid() const{
    return m_address_isValid;
}

QString OAICompanyOverviewResult::getChangeDate() const {
    return m_change_date;
}
void OAICompanyOverviewResult::setChangeDate(const QString &change_date) {
    m_change_date = change_date;
    m_change_date_isSet = true;
}

bool OAICompanyOverviewResult::is_change_date_Set() const{
    return m_change_date_isSet;
}

bool OAICompanyOverviewResult::is_change_date_Valid() const{
    return m_change_date_isValid;
}

QString OAICompanyOverviewResult::getCoAddress() const {
    return m_co_address;
}
void OAICompanyOverviewResult::setCoAddress(const QString &co_address) {
    m_co_address = co_address;
    m_co_address_isSet = true;
}

bool OAICompanyOverviewResult::is_co_address_Set() const{
    return m_co_address_isSet;
}

bool OAICompanyOverviewResult::is_co_address_Valid() const{
    return m_co_address_isValid;
}

QString OAICompanyOverviewResult::getCommune() const {
    return m_commune;
}
void OAICompanyOverviewResult::setCommune(const QString &commune) {
    m_commune = commune;
    m_commune_isSet = true;
}

bool OAICompanyOverviewResult::is_commune_Set() const{
    return m_commune_isSet;
}

bool OAICompanyOverviewResult::is_commune_Valid() const{
    return m_commune_isValid;
}

QString OAICompanyOverviewResult::getCompanyHolder() const {
    return m_company_holder;
}
void OAICompanyOverviewResult::setCompanyHolder(const QString &company_holder) {
    m_company_holder = company_holder;
    m_company_holder_isSet = true;
}

bool OAICompanyOverviewResult::is_company_holder_Set() const{
    return m_company_holder_isSet;
}

bool OAICompanyOverviewResult::is_company_holder_Valid() const{
    return m_company_holder_isValid;
}

QString OAICompanyOverviewResult::getCompanyId() const {
    return m_company_id;
}
void OAICompanyOverviewResult::setCompanyId(const QString &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAICompanyOverviewResult::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAICompanyOverviewResult::is_company_id_Valid() const{
    return m_company_id_isValid;
}

QString OAICompanyOverviewResult::getCompanyName() const {
    return m_company_name;
}
void OAICompanyOverviewResult::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAICompanyOverviewResult::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAICompanyOverviewResult::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAICompanyOverviewResult::getCompanyRegistrationDate() const {
    return m_company_registration_date;
}
void OAICompanyOverviewResult::setCompanyRegistrationDate(const QString &company_registration_date) {
    m_company_registration_date = company_registration_date;
    m_company_registration_date_isSet = true;
}

bool OAICompanyOverviewResult::is_company_registration_date_Set() const{
    return m_company_registration_date_isSet;
}

bool OAICompanyOverviewResult::is_company_registration_date_Valid() const{
    return m_company_registration_date_isValid;
}

QString OAICompanyOverviewResult::getCounty() const {
    return m_county;
}
void OAICompanyOverviewResult::setCounty(const QString &county) {
    m_county = county;
    m_county_isSet = true;
}

bool OAICompanyOverviewResult::is_county_Set() const{
    return m_county_isSet;
}

bool OAICompanyOverviewResult::is_county_Valid() const{
    return m_county_isValid;
}

QString OAICompanyOverviewResult::getEmail() const {
    return m_email;
}
void OAICompanyOverviewResult::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICompanyOverviewResult::is_email_Set() const{
    return m_email_isSet;
}

bool OAICompanyOverviewResult::is_email_Valid() const{
    return m_email_isValid;
}

QString OAICompanyOverviewResult::getEmployerContributionReg() const {
    return m_employer_contribution_reg;
}
void OAICompanyOverviewResult::setEmployerContributionReg(const QString &employer_contribution_reg) {
    m_employer_contribution_reg = employer_contribution_reg;
    m_employer_contribution_reg_isSet = true;
}

bool OAICompanyOverviewResult::is_employer_contribution_reg_Set() const{
    return m_employer_contribution_reg_isSet;
}

bool OAICompanyOverviewResult::is_employer_contribution_reg_Valid() const{
    return m_employer_contribution_reg_isValid;
}

QString OAICompanyOverviewResult::getFaxNumber() const {
    return m_fax_number;
}
void OAICompanyOverviewResult::setFaxNumber(const QString &fax_number) {
    m_fax_number = fax_number;
    m_fax_number_isSet = true;
}

bool OAICompanyOverviewResult::is_fax_number_Set() const{
    return m_fax_number_isSet;
}

bool OAICompanyOverviewResult::is_fax_number_Valid() const{
    return m_fax_number_isValid;
}

QString OAICompanyOverviewResult::getIndustryCode() const {
    return m_industry_code;
}
void OAICompanyOverviewResult::setIndustryCode(const QString &industry_code) {
    m_industry_code = industry_code;
    m_industry_code_isSet = true;
}

bool OAICompanyOverviewResult::is_industry_code_Set() const{
    return m_industry_code_isSet;
}

bool OAICompanyOverviewResult::is_industry_code_Valid() const{
    return m_industry_code_isValid;
}

QString OAICompanyOverviewResult::getIndustryText() const {
    return m_industry_text;
}
void OAICompanyOverviewResult::setIndustryText(const QString &industry_text) {
    m_industry_text = industry_text;
    m_industry_text_isSet = true;
}

bool OAICompanyOverviewResult::is_industry_text_Set() const{
    return m_industry_text_isSet;
}

bool OAICompanyOverviewResult::is_industry_text_Valid() const{
    return m_industry_text_isValid;
}

QString OAICompanyOverviewResult::getLegalGroupCode() const {
    return m_legal_group_code;
}
void OAICompanyOverviewResult::setLegalGroupCode(const QString &legal_group_code) {
    m_legal_group_code = legal_group_code;
    m_legal_group_code_isSet = true;
}

bool OAICompanyOverviewResult::is_legal_group_code_Set() const{
    return m_legal_group_code_isSet;
}

bool OAICompanyOverviewResult::is_legal_group_code_Valid() const{
    return m_legal_group_code_isValid;
}

QString OAICompanyOverviewResult::getLegalGroupText() const {
    return m_legal_group_text;
}
void OAICompanyOverviewResult::setLegalGroupText(const QString &legal_group_text) {
    m_legal_group_text = legal_group_text;
    m_legal_group_text_isSet = true;
}

bool OAICompanyOverviewResult::is_legal_group_text_Set() const{
    return m_legal_group_text_isSet;
}

bool OAICompanyOverviewResult::is_legal_group_text_Valid() const{
    return m_legal_group_text_isValid;
}

qint32 OAICompanyOverviewResult::getNumberCompanyUnits() const {
    return m_number_company_units;
}
void OAICompanyOverviewResult::setNumberCompanyUnits(const qint32 &number_company_units) {
    m_number_company_units = number_company_units;
    m_number_company_units_isSet = true;
}

bool OAICompanyOverviewResult::is_number_company_units_Set() const{
    return m_number_company_units_isSet;
}

bool OAICompanyOverviewResult::is_number_company_units_Valid() const{
    return m_number_company_units_isValid;
}

QString OAICompanyOverviewResult::getNumberEmployees() const {
    return m_number_employees;
}
void OAICompanyOverviewResult::setNumberEmployees(const QString &number_employees) {
    m_number_employees = number_employees;
    m_number_employees_isSet = true;
}

bool OAICompanyOverviewResult::is_number_employees_Set() const{
    return m_number_employees_isSet;
}

bool OAICompanyOverviewResult::is_number_employees_Valid() const{
    return m_number_employees_isValid;
}

QString OAICompanyOverviewResult::getPhoneNumber() const {
    return m_phone_number;
}
void OAICompanyOverviewResult::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAICompanyOverviewResult::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAICompanyOverviewResult::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAICompanyOverviewResult::getPreliminaryTaxReg() const {
    return m_preliminary_tax_reg;
}
void OAICompanyOverviewResult::setPreliminaryTaxReg(const QString &preliminary_tax_reg) {
    m_preliminary_tax_reg = preliminary_tax_reg;
    m_preliminary_tax_reg_isSet = true;
}

bool OAICompanyOverviewResult::is_preliminary_tax_reg_Set() const{
    return m_preliminary_tax_reg_isSet;
}

bool OAICompanyOverviewResult::is_preliminary_tax_reg_Valid() const{
    return m_preliminary_tax_reg_isValid;
}

bool OAICompanyOverviewResult::isSeveralCompanyName() const {
    return m_several_company_name;
}
void OAICompanyOverviewResult::setSeveralCompanyName(const bool &several_company_name) {
    m_several_company_name = several_company_name;
    m_several_company_name_isSet = true;
}

bool OAICompanyOverviewResult::is_several_company_name_Set() const{
    return m_several_company_name_isSet;
}

bool OAICompanyOverviewResult::is_several_company_name_Valid() const{
    return m_several_company_name_isValid;
}

QString OAICompanyOverviewResult::getStatusCode() const {
    return m_status_code;
}
void OAICompanyOverviewResult::setStatusCode(const QString &status_code) {
    m_status_code = status_code;
    m_status_code_isSet = true;
}

bool OAICompanyOverviewResult::is_status_code_Set() const{
    return m_status_code_isSet;
}

bool OAICompanyOverviewResult::is_status_code_Valid() const{
    return m_status_code_isValid;
}

QString OAICompanyOverviewResult::getStatusDateFrom() const {
    return m_status_date_from;
}
void OAICompanyOverviewResult::setStatusDateFrom(const QString &status_date_from) {
    m_status_date_from = status_date_from;
    m_status_date_from_isSet = true;
}

bool OAICompanyOverviewResult::is_status_date_from_Set() const{
    return m_status_date_from_isSet;
}

bool OAICompanyOverviewResult::is_status_date_from_Valid() const{
    return m_status_date_from_isValid;
}

QString OAICompanyOverviewResult::getStatusTextDetailed() const {
    return m_status_text_detailed;
}
void OAICompanyOverviewResult::setStatusTextDetailed(const QString &status_text_detailed) {
    m_status_text_detailed = status_text_detailed;
    m_status_text_detailed_isSet = true;
}

bool OAICompanyOverviewResult::is_status_text_detailed_Set() const{
    return m_status_text_detailed_isSet;
}

bool OAICompanyOverviewResult::is_status_text_detailed_Valid() const{
    return m_status_text_detailed_isValid;
}

QString OAICompanyOverviewResult::getStatusTextHigh() const {
    return m_status_text_high;
}
void OAICompanyOverviewResult::setStatusTextHigh(const QString &status_text_high) {
    m_status_text_high = status_text_high;
    m_status_text_high_isSet = true;
}

bool OAICompanyOverviewResult::is_status_text_high_Set() const{
    return m_status_text_high_isSet;
}

bool OAICompanyOverviewResult::is_status_text_high_Valid() const{
    return m_status_text_high_isValid;
}

QString OAICompanyOverviewResult::getTopDirectorFunction() const {
    return m_top_director_function;
}
void OAICompanyOverviewResult::setTopDirectorFunction(const QString &top_director_function) {
    m_top_director_function = top_director_function;
    m_top_director_function_isSet = true;
}

bool OAICompanyOverviewResult::is_top_director_function_Set() const{
    return m_top_director_function_isSet;
}

bool OAICompanyOverviewResult::is_top_director_function_Valid() const{
    return m_top_director_function_isValid;
}

QString OAICompanyOverviewResult::getTopDirectorName() const {
    return m_top_director_name;
}
void OAICompanyOverviewResult::setTopDirectorName(const QString &top_director_name) {
    m_top_director_name = top_director_name;
    m_top_director_name_isSet = true;
}

bool OAICompanyOverviewResult::is_top_director_name_Set() const{
    return m_top_director_name_isSet;
}

bool OAICompanyOverviewResult::is_top_director_name_Valid() const{
    return m_top_director_name_isValid;
}

QString OAICompanyOverviewResult::getTown() const {
    return m_town;
}
void OAICompanyOverviewResult::setTown(const QString &town) {
    m_town = town;
    m_town_isSet = true;
}

bool OAICompanyOverviewResult::is_town_Set() const{
    return m_town_isSet;
}

bool OAICompanyOverviewResult::is_town_Valid() const{
    return m_town_isValid;
}

QString OAICompanyOverviewResult::getVatReg() const {
    return m_vat_reg;
}
void OAICompanyOverviewResult::setVatReg(const QString &vat_reg) {
    m_vat_reg = vat_reg;
    m_vat_reg_isSet = true;
}

bool OAICompanyOverviewResult::is_vat_reg_Set() const{
    return m_vat_reg_isSet;
}

bool OAICompanyOverviewResult::is_vat_reg_Valid() const{
    return m_vat_reg_isValid;
}

QString OAICompanyOverviewResult::getVepChangedDate() const {
    return m_vep_changed_date;
}
void OAICompanyOverviewResult::setVepChangedDate(const QString &vep_changed_date) {
    m_vep_changed_date = vep_changed_date;
    m_vep_changed_date_isSet = true;
}

bool OAICompanyOverviewResult::is_vep_changed_date_Set() const{
    return m_vep_changed_date_isSet;
}

bool OAICompanyOverviewResult::is_vep_changed_date_Valid() const{
    return m_vep_changed_date_isValid;
}

QString OAICompanyOverviewResult::getVisitAddress() const {
    return m_visit_address;
}
void OAICompanyOverviewResult::setVisitAddress(const QString &visit_address) {
    m_visit_address = visit_address;
    m_visit_address_isSet = true;
}

bool OAICompanyOverviewResult::is_visit_address_Set() const{
    return m_visit_address_isSet;
}

bool OAICompanyOverviewResult::is_visit_address_Valid() const{
    return m_visit_address_isValid;
}

QString OAICompanyOverviewResult::getVisitCommune() const {
    return m_visit_commune;
}
void OAICompanyOverviewResult::setVisitCommune(const QString &visit_commune) {
    m_visit_commune = visit_commune;
    m_visit_commune_isSet = true;
}

bool OAICompanyOverviewResult::is_visit_commune_Set() const{
    return m_visit_commune_isSet;
}

bool OAICompanyOverviewResult::is_visit_commune_Valid() const{
    return m_visit_commune_isValid;
}

QString OAICompanyOverviewResult::getVisitCounty() const {
    return m_visit_county;
}
void OAICompanyOverviewResult::setVisitCounty(const QString &visit_county) {
    m_visit_county = visit_county;
    m_visit_county_isSet = true;
}

bool OAICompanyOverviewResult::is_visit_county_Set() const{
    return m_visit_county_isSet;
}

bool OAICompanyOverviewResult::is_visit_county_Valid() const{
    return m_visit_county_isValid;
}

QString OAICompanyOverviewResult::getVisitStreet() const {
    return m_visit_street;
}
void OAICompanyOverviewResult::setVisitStreet(const QString &visit_street) {
    m_visit_street = visit_street;
    m_visit_street_isSet = true;
}

bool OAICompanyOverviewResult::is_visit_street_Set() const{
    return m_visit_street_isSet;
}

bool OAICompanyOverviewResult::is_visit_street_Valid() const{
    return m_visit_street_isValid;
}

QString OAICompanyOverviewResult::getVisitStreetNumber() const {
    return m_visit_street_number;
}
void OAICompanyOverviewResult::setVisitStreetNumber(const QString &visit_street_number) {
    m_visit_street_number = visit_street_number;
    m_visit_street_number_isSet = true;
}

bool OAICompanyOverviewResult::is_visit_street_number_Set() const{
    return m_visit_street_number_isSet;
}

bool OAICompanyOverviewResult::is_visit_street_number_Valid() const{
    return m_visit_street_number_isValid;
}

QString OAICompanyOverviewResult::getVisitStreetUnit() const {
    return m_visit_street_unit;
}
void OAICompanyOverviewResult::setVisitStreetUnit(const QString &visit_street_unit) {
    m_visit_street_unit = visit_street_unit;
    m_visit_street_unit_isSet = true;
}

bool OAICompanyOverviewResult::is_visit_street_unit_Set() const{
    return m_visit_street_unit_isSet;
}

bool OAICompanyOverviewResult::is_visit_street_unit_Valid() const{
    return m_visit_street_unit_isValid;
}

QString OAICompanyOverviewResult::getVisitTown() const {
    return m_visit_town;
}
void OAICompanyOverviewResult::setVisitTown(const QString &visit_town) {
    m_visit_town = visit_town;
    m_visit_town_isSet = true;
}

bool OAICompanyOverviewResult::is_visit_town_Set() const{
    return m_visit_town_isSet;
}

bool OAICompanyOverviewResult::is_visit_town_Valid() const{
    return m_visit_town_isValid;
}

QString OAICompanyOverviewResult::getVisitZipCode() const {
    return m_visit_zip_code;
}
void OAICompanyOverviewResult::setVisitZipCode(const QString &visit_zip_code) {
    m_visit_zip_code = visit_zip_code;
    m_visit_zip_code_isSet = true;
}

bool OAICompanyOverviewResult::is_visit_zip_code_Set() const{
    return m_visit_zip_code_isSet;
}

bool OAICompanyOverviewResult::is_visit_zip_code_Valid() const{
    return m_visit_zip_code_isValid;
}

QString OAICompanyOverviewResult::getWebAddress() const {
    return m_web_address;
}
void OAICompanyOverviewResult::setWebAddress(const QString &web_address) {
    m_web_address = web_address;
    m_web_address_isSet = true;
}

bool OAICompanyOverviewResult::is_web_address_Set() const{
    return m_web_address_isSet;
}

bool OAICompanyOverviewResult::is_web_address_Valid() const{
    return m_web_address_isValid;
}

QString OAICompanyOverviewResult::getZipCode() const {
    return m_zip_code;
}
void OAICompanyOverviewResult::setZipCode(const QString &zip_code) {
    m_zip_code = zip_code;
    m_zip_code_isSet = true;
}

bool OAICompanyOverviewResult::is_zip_code_Set() const{
    return m_zip_code_isSet;
}

bool OAICompanyOverviewResult::is_zip_code_Valid() const{
    return m_zip_code_isValid;
}

bool OAICompanyOverviewResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_co_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commune_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_holder_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_registration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_county_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_employer_contribution_reg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_industry_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_industry_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_group_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_group_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_company_units_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_employees_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preliminary_tax_reg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_several_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_date_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_text_detailed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_text_high_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_top_director_function_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_top_director_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_town_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_reg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vep_changed_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visit_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visit_commune_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visit_county_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visit_street_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visit_street_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visit_street_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visit_town_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visit_zip_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyOverviewResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
