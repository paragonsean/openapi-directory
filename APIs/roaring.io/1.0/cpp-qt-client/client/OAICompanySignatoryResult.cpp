/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanySignatoryResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanySignatoryResult::OAICompanySignatoryResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanySignatoryResult::OAICompanySignatoryResult() {
    this->initializeModel();
}

OAICompanySignatoryResult::~OAICompanySignatoryResult() {}

void OAICompanySignatoryResult::initializeModel() {

    m_change_date_isSet = false;
    m_change_date_isValid = false;

    m_company_id_isSet = false;
    m_company_id_isValid = false;

    m_company_signatory_isSet = false;
    m_company_signatory_isValid = false;
}

void OAICompanySignatoryResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanySignatoryResult::fromJsonObject(QJsonObject json) {

    m_change_date_isValid = ::OpenAPI::fromJsonValue(m_change_date, json[QString("changeDate")]);
    m_change_date_isSet = !json[QString("changeDate")].isNull() && m_change_date_isValid;

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("companyId")]);
    m_company_id_isSet = !json[QString("companyId")].isNull() && m_company_id_isValid;

    m_company_signatory_isValid = ::OpenAPI::fromJsonValue(m_company_signatory, json[QString("companySignatory")]);
    m_company_signatory_isSet = !json[QString("companySignatory")].isNull() && m_company_signatory_isValid;
}

QString OAICompanySignatoryResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanySignatoryResult::asJsonObject() const {
    QJsonObject obj;
    if (m_change_date_isSet) {
        obj.insert(QString("changeDate"), ::OpenAPI::toJsonValue(m_change_date));
    }
    if (m_company_id_isSet) {
        obj.insert(QString("companyId"), ::OpenAPI::toJsonValue(m_company_id));
    }
    if (m_company_signatory_isSet) {
        obj.insert(QString("companySignatory"), ::OpenAPI::toJsonValue(m_company_signatory));
    }
    return obj;
}

QString OAICompanySignatoryResult::getChangeDate() const {
    return m_change_date;
}
void OAICompanySignatoryResult::setChangeDate(const QString &change_date) {
    m_change_date = change_date;
    m_change_date_isSet = true;
}

bool OAICompanySignatoryResult::is_change_date_Set() const{
    return m_change_date_isSet;
}

bool OAICompanySignatoryResult::is_change_date_Valid() const{
    return m_change_date_isValid;
}

QString OAICompanySignatoryResult::getCompanyId() const {
    return m_company_id;
}
void OAICompanySignatoryResult::setCompanyId(const QString &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAICompanySignatoryResult::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAICompanySignatoryResult::is_company_id_Valid() const{
    return m_company_id_isValid;
}

QString OAICompanySignatoryResult::getCompanySignatory() const {
    return m_company_signatory;
}
void OAICompanySignatoryResult::setCompanySignatory(const QString &company_signatory) {
    m_company_signatory = company_signatory;
    m_company_signatory_isSet = true;
}

bool OAICompanySignatoryResult::is_company_signatory_Set() const{
    return m_company_signatory_isSet;
}

bool OAICompanySignatoryResult::is_company_signatory_Valid() const{
    return m_company_signatory_isValid;
}

bool OAICompanySignatoryResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_signatory_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanySignatoryResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
