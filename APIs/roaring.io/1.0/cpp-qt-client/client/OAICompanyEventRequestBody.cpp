/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyEventRequestBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyEventRequestBody::OAICompanyEventRequestBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyEventRequestBody::OAICompanyEventRequestBody() {
    this->initializeModel();
}

OAICompanyEventRequestBody::~OAICompanyEventRequestBody() {}

void OAICompanyEventRequestBody::initializeModel() {

    m_requests_isSet = false;
    m_requests_isValid = false;
}

void OAICompanyEventRequestBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyEventRequestBody::fromJsonObject(QJsonObject json) {

    m_requests_isValid = ::OpenAPI::fromJsonValue(m_requests, json[QString("requests")]);
    m_requests_isSet = !json[QString("requests")].isNull() && m_requests_isValid;
}

QString OAICompanyEventRequestBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyEventRequestBody::asJsonObject() const {
    QJsonObject obj;
    if (m_requests.size() > 0) {
        obj.insert(QString("requests"), ::OpenAPI::toJsonValue(m_requests));
    }
    return obj;
}

QList<OAICompanyEventRequestBody_requests_inner> OAICompanyEventRequestBody::getRequests() const {
    return m_requests;
}
void OAICompanyEventRequestBody::setRequests(const QList<OAICompanyEventRequestBody_requests_inner> &requests) {
    m_requests = requests;
    m_requests_isSet = true;
}

bool OAICompanyEventRequestBody::is_requests_Set() const{
    return m_requests_isSet;
}

bool OAICompanyEventRequestBody::is_requests_Valid() const{
    return m_requests_isValid;
}

bool OAICompanyEventRequestBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyEventRequestBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
