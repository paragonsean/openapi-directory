/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyBoardMembersResult_boardMembers_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyBoardMembersResult_boardMembers_inner::OAICompanyBoardMembersResult_boardMembers_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyBoardMembersResult_boardMembers_inner::OAICompanyBoardMembersResult_boardMembers_inner() {
    this->initializeModel();
}

OAICompanyBoardMembersResult_boardMembers_inner::~OAICompanyBoardMembersResult_boardMembers_inner() {}

void OAICompanyBoardMembersResult_boardMembers_inner::initializeModel() {

    m_board_member_company_id_isSet = false;
    m_board_member_company_id_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_from_date_isSet = false;
    m_from_date_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_personal_number_isSet = false;
    m_personal_number_isValid = false;

    m_role_code_isSet = false;
    m_role_code_isValid = false;

    m_role_name_isSet = false;
    m_role_name_isValid = false;

    m_sur_name_isSet = false;
    m_sur_name_isValid = false;

    m_to_date_isSet = false;
    m_to_date_isValid = false;
}

void OAICompanyBoardMembersResult_boardMembers_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyBoardMembersResult_boardMembers_inner::fromJsonObject(QJsonObject json) {

    m_board_member_company_id_isValid = ::OpenAPI::fromJsonValue(m_board_member_company_id, json[QString("boardMemberCompanyId")]);
    m_board_member_company_id_isSet = !json[QString("boardMemberCompanyId")].isNull() && m_board_member_company_id_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_from_date_isValid = ::OpenAPI::fromJsonValue(m_from_date, json[QString("fromDate")]);
    m_from_date_isSet = !json[QString("fromDate")].isNull() && m_from_date_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("givenName")]);
    m_given_name_isSet = !json[QString("givenName")].isNull() && m_given_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_personal_number_isValid = ::OpenAPI::fromJsonValue(m_personal_number, json[QString("personalNumber")]);
    m_personal_number_isSet = !json[QString("personalNumber")].isNull() && m_personal_number_isValid;

    m_role_code_isValid = ::OpenAPI::fromJsonValue(m_role_code, json[QString("roleCode")]);
    m_role_code_isSet = !json[QString("roleCode")].isNull() && m_role_code_isValid;

    m_role_name_isValid = ::OpenAPI::fromJsonValue(m_role_name, json[QString("roleName")]);
    m_role_name_isSet = !json[QString("roleName")].isNull() && m_role_name_isValid;

    m_sur_name_isValid = ::OpenAPI::fromJsonValue(m_sur_name, json[QString("surName")]);
    m_sur_name_isSet = !json[QString("surName")].isNull() && m_sur_name_isValid;

    m_to_date_isValid = ::OpenAPI::fromJsonValue(m_to_date, json[QString("toDate")]);
    m_to_date_isSet = !json[QString("toDate")].isNull() && m_to_date_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyBoardMembersResult_boardMembers_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_board_member_company_id_isSet) {
        obj.insert(QString("boardMemberCompanyId"), ::OpenAPI::toJsonValue(m_board_member_company_id));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_from_date_isSet) {
        obj.insert(QString("fromDate"), ::OpenAPI::toJsonValue(m_from_date));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("givenName"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_personal_number_isSet) {
        obj.insert(QString("personalNumber"), ::OpenAPI::toJsonValue(m_personal_number));
    }
    if (m_role_code_isSet) {
        obj.insert(QString("roleCode"), ::OpenAPI::toJsonValue(m_role_code));
    }
    if (m_role_name_isSet) {
        obj.insert(QString("roleName"), ::OpenAPI::toJsonValue(m_role_name));
    }
    if (m_sur_name_isSet) {
        obj.insert(QString("surName"), ::OpenAPI::toJsonValue(m_sur_name));
    }
    if (m_to_date_isSet) {
        obj.insert(QString("toDate"), ::OpenAPI::toJsonValue(m_to_date));
    }
    return obj;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getBoardMemberCompanyId() const {
    return m_board_member_company_id;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setBoardMemberCompanyId(const QString &board_member_company_id) {
    m_board_member_company_id = board_member_company_id;
    m_board_member_company_id_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_board_member_company_id_Set() const{
    return m_board_member_company_id_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_board_member_company_id_Valid() const{
    return m_board_member_company_id_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getFirstName() const {
    return m_first_name;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getFromDate() const {
    return m_from_date;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setFromDate(const QString &from_date) {
    m_from_date = from_date;
    m_from_date_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_from_date_Set() const{
    return m_from_date_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_from_date_Valid() const{
    return m_from_date_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getFullName() const {
    return m_full_name;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getGivenName() const {
    return m_given_name;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getMiddleName() const {
    return m_middle_name;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getPersonalNumber() const {
    return m_personal_number;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setPersonalNumber(const QString &personal_number) {
    m_personal_number = personal_number;
    m_personal_number_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_personal_number_Set() const{
    return m_personal_number_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_personal_number_Valid() const{
    return m_personal_number_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getRoleCode() const {
    return m_role_code;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setRoleCode(const QString &role_code) {
    m_role_code = role_code;
    m_role_code_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_role_code_Set() const{
    return m_role_code_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_role_code_Valid() const{
    return m_role_code_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getRoleName() const {
    return m_role_name;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setRoleName(const QString &role_name) {
    m_role_name = role_name;
    m_role_name_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_role_name_Set() const{
    return m_role_name_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_role_name_Valid() const{
    return m_role_name_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getSurName() const {
    return m_sur_name;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setSurName(const QString &sur_name) {
    m_sur_name = sur_name;
    m_sur_name_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_sur_name_Set() const{
    return m_sur_name_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_sur_name_Valid() const{
    return m_sur_name_isValid;
}

QString OAICompanyBoardMembersResult_boardMembers_inner::getToDate() const {
    return m_to_date;
}
void OAICompanyBoardMembersResult_boardMembers_inner::setToDate(const QString &to_date) {
    m_to_date = to_date;
    m_to_date_isSet = true;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_to_date_Set() const{
    return m_to_date_isSet;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::is_to_date_Valid() const{
    return m_to_date_isValid;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_board_member_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personal_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sur_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyBoardMembersResult_boardMembers_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
