/**
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyRejection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyRejection::OAICompanyRejection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyRejection::OAICompanyRejection() {
    this->initializeModel();
}

OAICompanyRejection::~OAICompanyRejection() {}

void OAICompanyRejection::initializeModel() {

    m_cause_of_reject_isSet = false;
    m_cause_of_reject_isValid = false;

    m_reject_comment_isSet = false;
    m_reject_comment_isValid = false;

    m_reject_text_isSet = false;
    m_reject_text_isValid = false;
}

void OAICompanyRejection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyRejection::fromJsonObject(QJsonObject json) {

    m_cause_of_reject_isValid = ::OpenAPI::fromJsonValue(m_cause_of_reject, json[QString("causeOfReject")]);
    m_cause_of_reject_isSet = !json[QString("causeOfReject")].isNull() && m_cause_of_reject_isValid;

    m_reject_comment_isValid = ::OpenAPI::fromJsonValue(m_reject_comment, json[QString("rejectComment")]);
    m_reject_comment_isSet = !json[QString("rejectComment")].isNull() && m_reject_comment_isValid;

    m_reject_text_isValid = ::OpenAPI::fromJsonValue(m_reject_text, json[QString("rejectText")]);
    m_reject_text_isSet = !json[QString("rejectText")].isNull() && m_reject_text_isValid;
}

QString OAICompanyRejection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyRejection::asJsonObject() const {
    QJsonObject obj;
    if (m_cause_of_reject_isSet) {
        obj.insert(QString("causeOfReject"), ::OpenAPI::toJsonValue(m_cause_of_reject));
    }
    if (m_reject_comment_isSet) {
        obj.insert(QString("rejectComment"), ::OpenAPI::toJsonValue(m_reject_comment));
    }
    if (m_reject_text_isSet) {
        obj.insert(QString("rejectText"), ::OpenAPI::toJsonValue(m_reject_text));
    }
    return obj;
}

QString OAICompanyRejection::getCauseOfReject() const {
    return m_cause_of_reject;
}
void OAICompanyRejection::setCauseOfReject(const QString &cause_of_reject) {
    m_cause_of_reject = cause_of_reject;
    m_cause_of_reject_isSet = true;
}

bool OAICompanyRejection::is_cause_of_reject_Set() const{
    return m_cause_of_reject_isSet;
}

bool OAICompanyRejection::is_cause_of_reject_Valid() const{
    return m_cause_of_reject_isValid;
}

QString OAICompanyRejection::getRejectComment() const {
    return m_reject_comment;
}
void OAICompanyRejection::setRejectComment(const QString &reject_comment) {
    m_reject_comment = reject_comment;
    m_reject_comment_isSet = true;
}

bool OAICompanyRejection::is_reject_comment_Set() const{
    return m_reject_comment_isSet;
}

bool OAICompanyRejection::is_reject_comment_Valid() const{
    return m_reject_comment_isValid;
}

QString OAICompanyRejection::getRejectText() const {
    return m_reject_text;
}
void OAICompanyRejection::setRejectText(const QString &reject_text) {
    m_reject_text = reject_text;
    m_reject_text_isSet = true;
}

bool OAICompanyRejection::is_reject_text_Set() const{
    return m_reject_text_isSet;
}

bool OAICompanyRejection::is_reject_text_Valid() const{
    return m_reject_text_isValid;
}

bool OAICompanyRejection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cause_of_reject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reject_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reject_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyRejection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
