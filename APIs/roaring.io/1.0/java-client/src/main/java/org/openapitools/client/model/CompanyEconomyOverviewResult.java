/*
 * CompanyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Roaring Apps company economy overview in a lookup. list contains all possible fields returned
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:12.861098-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CompanyEconomyOverviewResult {
  public static final String SERIALIZED_NAME_BS_CASH_AND_BANK_BALANCES = "bsCashAndBankBalances";
  @SerializedName(SERIALIZED_NAME_BS_CASH_AND_BANK_BALANCES)
  private String bsCashAndBankBalances;

  public static final String SERIALIZED_NAME_BS_SHARE_CAPITAL = "bsShareCapital";
  @SerializedName(SERIALIZED_NAME_BS_SHARE_CAPITAL)
  private String bsShareCapital;

  public static final String SERIALIZED_NAME_BS_TOTAL_ASSETS = "bsTotalAssets";
  @SerializedName(SERIALIZED_NAME_BS_TOTAL_ASSETS)
  private String bsTotalAssets;

  public static final String SERIALIZED_NAME_BS_TOTAL_EQUITY = "bsTotalEquity";
  @SerializedName(SERIALIZED_NAME_BS_TOTAL_EQUITY)
  private String bsTotalEquity;

  public static final String SERIALIZED_NAME_CHANGE_DATE = "changeDate";
  @SerializedName(SERIALIZED_NAME_CHANGE_DATE)
  private String changeDate;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_KPI_NET_MARGIN_PERCENT = "kpiNetMarginPercent";
  @SerializedName(SERIALIZED_NAME_KPI_NET_MARGIN_PERCENT)
  private String kpiNetMarginPercent;

  public static final String SERIALIZED_NAME_KPI_QUICK_RATIO_PERCENT = "kpiQuickRatioPercent";
  @SerializedName(SERIALIZED_NAME_KPI_QUICK_RATIO_PERCENT)
  private String kpiQuickRatioPercent;

  public static final String SERIALIZED_NAME_KPI_SOLIDITY_PERCENT = "kpiSolidityPercent";
  @SerializedName(SERIALIZED_NAME_KPI_SOLIDITY_PERCENT)
  private String kpiSolidityPercent;

  public static final String SERIALIZED_NAME_NBR_OF_EMPLOYEES = "nbrOfEmployees";
  @SerializedName(SERIALIZED_NAME_NBR_OF_EMPLOYEES)
  private String nbrOfEmployees;

  public static final String SERIALIZED_NAME_NBR_OF_EMPLOYEES_INTERVAL = "nbrOfEmployeesInterval";
  @SerializedName(SERIALIZED_NAME_NBR_OF_EMPLOYEES_INTERVAL)
  private String nbrOfEmployeesInterval;

  public static final String SERIALIZED_NAME_NBR_OF_EMPLOYEES_OFFICE_INTERVAL = "nbrOfEmployeesOfficeInterval";
  @SerializedName(SERIALIZED_NAME_NBR_OF_EMPLOYEES_OFFICE_INTERVAL)
  private String nbrOfEmployeesOfficeInterval;

  public static final String SERIALIZED_NAME_NET_TURNOVER = "netTurnover";
  @SerializedName(SERIALIZED_NAME_NET_TURNOVER)
  private String netTurnover;

  public static final String SERIALIZED_NAME_PL_NET_INCOME = "plNetIncome";
  @SerializedName(SERIALIZED_NAME_PL_NET_INCOME)
  private String plNetIncome;

  public static final String SERIALIZED_NAME_PL_OPERATING_PROFIT = "plOperatingProfit";
  @SerializedName(SERIALIZED_NAME_PL_OPERATING_PROFIT)
  private String plOperatingProfit;

  public static final String SERIALIZED_NAME_PL_PROFIT_LOSS_AFTER_FIN_ITEMS = "plProfitLossAfterFinItems";
  @SerializedName(SERIALIZED_NAME_PL_PROFIT_LOSS_AFTER_FIN_ITEMS)
  private String plProfitLossAfterFinItems;

  public static final String SERIALIZED_NAME_TURNOVER_INTERVAL = "turnoverInterval";
  @SerializedName(SERIALIZED_NAME_TURNOVER_INTERVAL)
  private String turnoverInterval;

  public static final String SERIALIZED_NAME_TURNOVER_PER_EMPLOYEE = "turnoverPerEmployee";
  @SerializedName(SERIALIZED_NAME_TURNOVER_PER_EMPLOYEE)
  private String turnoverPerEmployee;

  public CompanyEconomyOverviewResult() {
  }

  public CompanyEconomyOverviewResult bsCashAndBankBalances(String bsCashAndBankBalances) {
    this.bsCashAndBankBalances = bsCashAndBankBalances;
    return this;
  }

  /**
   * 
   * @return bsCashAndBankBalances
   */
  @javax.annotation.Nullable
  public String getBsCashAndBankBalances() {
    return bsCashAndBankBalances;
  }

  public void setBsCashAndBankBalances(String bsCashAndBankBalances) {
    this.bsCashAndBankBalances = bsCashAndBankBalances;
  }


  public CompanyEconomyOverviewResult bsShareCapital(String bsShareCapital) {
    this.bsShareCapital = bsShareCapital;
    return this;
  }

  /**
   * 
   * @return bsShareCapital
   */
  @javax.annotation.Nullable
  public String getBsShareCapital() {
    return bsShareCapital;
  }

  public void setBsShareCapital(String bsShareCapital) {
    this.bsShareCapital = bsShareCapital;
  }


  public CompanyEconomyOverviewResult bsTotalAssets(String bsTotalAssets) {
    this.bsTotalAssets = bsTotalAssets;
    return this;
  }

  /**
   * 
   * @return bsTotalAssets
   */
  @javax.annotation.Nullable
  public String getBsTotalAssets() {
    return bsTotalAssets;
  }

  public void setBsTotalAssets(String bsTotalAssets) {
    this.bsTotalAssets = bsTotalAssets;
  }


  public CompanyEconomyOverviewResult bsTotalEquity(String bsTotalEquity) {
    this.bsTotalEquity = bsTotalEquity;
    return this;
  }

  /**
   * 
   * @return bsTotalEquity
   */
  @javax.annotation.Nullable
  public String getBsTotalEquity() {
    return bsTotalEquity;
  }

  public void setBsTotalEquity(String bsTotalEquity) {
    this.bsTotalEquity = bsTotalEquity;
  }


  public CompanyEconomyOverviewResult changeDate(String changeDate) {
    this.changeDate = changeDate;
    return this;
  }

  /**
   * 
   * @return changeDate
   */
  @javax.annotation.Nullable
  public String getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(String changeDate) {
    this.changeDate = changeDate;
  }


  public CompanyEconomyOverviewResult companyId(String companyId) {
    this.companyId = companyId;
    return this;
  }

  /**
   * 
   * @return companyId
   */
  @javax.annotation.Nullable
  public String getCompanyId() {
    return companyId;
  }

  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }


  public CompanyEconomyOverviewResult kpiNetMarginPercent(String kpiNetMarginPercent) {
    this.kpiNetMarginPercent = kpiNetMarginPercent;
    return this;
  }

  /**
   * 
   * @return kpiNetMarginPercent
   */
  @javax.annotation.Nullable
  public String getKpiNetMarginPercent() {
    return kpiNetMarginPercent;
  }

  public void setKpiNetMarginPercent(String kpiNetMarginPercent) {
    this.kpiNetMarginPercent = kpiNetMarginPercent;
  }


  public CompanyEconomyOverviewResult kpiQuickRatioPercent(String kpiQuickRatioPercent) {
    this.kpiQuickRatioPercent = kpiQuickRatioPercent;
    return this;
  }

  /**
   * 
   * @return kpiQuickRatioPercent
   */
  @javax.annotation.Nullable
  public String getKpiQuickRatioPercent() {
    return kpiQuickRatioPercent;
  }

  public void setKpiQuickRatioPercent(String kpiQuickRatioPercent) {
    this.kpiQuickRatioPercent = kpiQuickRatioPercent;
  }


  public CompanyEconomyOverviewResult kpiSolidityPercent(String kpiSolidityPercent) {
    this.kpiSolidityPercent = kpiSolidityPercent;
    return this;
  }

  /**
   * 
   * @return kpiSolidityPercent
   */
  @javax.annotation.Nullable
  public String getKpiSolidityPercent() {
    return kpiSolidityPercent;
  }

  public void setKpiSolidityPercent(String kpiSolidityPercent) {
    this.kpiSolidityPercent = kpiSolidityPercent;
  }


  public CompanyEconomyOverviewResult nbrOfEmployees(String nbrOfEmployees) {
    this.nbrOfEmployees = nbrOfEmployees;
    return this;
  }

  /**
   * 
   * @return nbrOfEmployees
   */
  @javax.annotation.Nullable
  public String getNbrOfEmployees() {
    return nbrOfEmployees;
  }

  public void setNbrOfEmployees(String nbrOfEmployees) {
    this.nbrOfEmployees = nbrOfEmployees;
  }


  public CompanyEconomyOverviewResult nbrOfEmployeesInterval(String nbrOfEmployeesInterval) {
    this.nbrOfEmployeesInterval = nbrOfEmployeesInterval;
    return this;
  }

  /**
   * 
   * @return nbrOfEmployeesInterval
   */
  @javax.annotation.Nullable
  public String getNbrOfEmployeesInterval() {
    return nbrOfEmployeesInterval;
  }

  public void setNbrOfEmployeesInterval(String nbrOfEmployeesInterval) {
    this.nbrOfEmployeesInterval = nbrOfEmployeesInterval;
  }


  public CompanyEconomyOverviewResult nbrOfEmployeesOfficeInterval(String nbrOfEmployeesOfficeInterval) {
    this.nbrOfEmployeesOfficeInterval = nbrOfEmployeesOfficeInterval;
    return this;
  }

  /**
   * 
   * @return nbrOfEmployeesOfficeInterval
   */
  @javax.annotation.Nullable
  public String getNbrOfEmployeesOfficeInterval() {
    return nbrOfEmployeesOfficeInterval;
  }

  public void setNbrOfEmployeesOfficeInterval(String nbrOfEmployeesOfficeInterval) {
    this.nbrOfEmployeesOfficeInterval = nbrOfEmployeesOfficeInterval;
  }


  public CompanyEconomyOverviewResult netTurnover(String netTurnover) {
    this.netTurnover = netTurnover;
    return this;
  }

  /**
   * 
   * @return netTurnover
   */
  @javax.annotation.Nullable
  public String getNetTurnover() {
    return netTurnover;
  }

  public void setNetTurnover(String netTurnover) {
    this.netTurnover = netTurnover;
  }


  public CompanyEconomyOverviewResult plNetIncome(String plNetIncome) {
    this.plNetIncome = plNetIncome;
    return this;
  }

  /**
   * 
   * @return plNetIncome
   */
  @javax.annotation.Nullable
  public String getPlNetIncome() {
    return plNetIncome;
  }

  public void setPlNetIncome(String plNetIncome) {
    this.plNetIncome = plNetIncome;
  }


  public CompanyEconomyOverviewResult plOperatingProfit(String plOperatingProfit) {
    this.plOperatingProfit = plOperatingProfit;
    return this;
  }

  /**
   * 
   * @return plOperatingProfit
   */
  @javax.annotation.Nullable
  public String getPlOperatingProfit() {
    return plOperatingProfit;
  }

  public void setPlOperatingProfit(String plOperatingProfit) {
    this.plOperatingProfit = plOperatingProfit;
  }


  public CompanyEconomyOverviewResult plProfitLossAfterFinItems(String plProfitLossAfterFinItems) {
    this.plProfitLossAfterFinItems = plProfitLossAfterFinItems;
    return this;
  }

  /**
   * 
   * @return plProfitLossAfterFinItems
   */
  @javax.annotation.Nullable
  public String getPlProfitLossAfterFinItems() {
    return plProfitLossAfterFinItems;
  }

  public void setPlProfitLossAfterFinItems(String plProfitLossAfterFinItems) {
    this.plProfitLossAfterFinItems = plProfitLossAfterFinItems;
  }


  public CompanyEconomyOverviewResult turnoverInterval(String turnoverInterval) {
    this.turnoverInterval = turnoverInterval;
    return this;
  }

  /**
   * 
   * @return turnoverInterval
   */
  @javax.annotation.Nullable
  public String getTurnoverInterval() {
    return turnoverInterval;
  }

  public void setTurnoverInterval(String turnoverInterval) {
    this.turnoverInterval = turnoverInterval;
  }


  public CompanyEconomyOverviewResult turnoverPerEmployee(String turnoverPerEmployee) {
    this.turnoverPerEmployee = turnoverPerEmployee;
    return this;
  }

  /**
   * 
   * @return turnoverPerEmployee
   */
  @javax.annotation.Nullable
  public String getTurnoverPerEmployee() {
    return turnoverPerEmployee;
  }

  public void setTurnoverPerEmployee(String turnoverPerEmployee) {
    this.turnoverPerEmployee = turnoverPerEmployee;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyEconomyOverviewResult companyEconomyOverviewResult = (CompanyEconomyOverviewResult) o;
    return Objects.equals(this.bsCashAndBankBalances, companyEconomyOverviewResult.bsCashAndBankBalances) &&
        Objects.equals(this.bsShareCapital, companyEconomyOverviewResult.bsShareCapital) &&
        Objects.equals(this.bsTotalAssets, companyEconomyOverviewResult.bsTotalAssets) &&
        Objects.equals(this.bsTotalEquity, companyEconomyOverviewResult.bsTotalEquity) &&
        Objects.equals(this.changeDate, companyEconomyOverviewResult.changeDate) &&
        Objects.equals(this.companyId, companyEconomyOverviewResult.companyId) &&
        Objects.equals(this.kpiNetMarginPercent, companyEconomyOverviewResult.kpiNetMarginPercent) &&
        Objects.equals(this.kpiQuickRatioPercent, companyEconomyOverviewResult.kpiQuickRatioPercent) &&
        Objects.equals(this.kpiSolidityPercent, companyEconomyOverviewResult.kpiSolidityPercent) &&
        Objects.equals(this.nbrOfEmployees, companyEconomyOverviewResult.nbrOfEmployees) &&
        Objects.equals(this.nbrOfEmployeesInterval, companyEconomyOverviewResult.nbrOfEmployeesInterval) &&
        Objects.equals(this.nbrOfEmployeesOfficeInterval, companyEconomyOverviewResult.nbrOfEmployeesOfficeInterval) &&
        Objects.equals(this.netTurnover, companyEconomyOverviewResult.netTurnover) &&
        Objects.equals(this.plNetIncome, companyEconomyOverviewResult.plNetIncome) &&
        Objects.equals(this.plOperatingProfit, companyEconomyOverviewResult.plOperatingProfit) &&
        Objects.equals(this.plProfitLossAfterFinItems, companyEconomyOverviewResult.plProfitLossAfterFinItems) &&
        Objects.equals(this.turnoverInterval, companyEconomyOverviewResult.turnoverInterval) &&
        Objects.equals(this.turnoverPerEmployee, companyEconomyOverviewResult.turnoverPerEmployee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bsCashAndBankBalances, bsShareCapital, bsTotalAssets, bsTotalEquity, changeDate, companyId, kpiNetMarginPercent, kpiQuickRatioPercent, kpiSolidityPercent, nbrOfEmployees, nbrOfEmployeesInterval, nbrOfEmployeesOfficeInterval, netTurnover, plNetIncome, plOperatingProfit, plProfitLossAfterFinItems, turnoverInterval, turnoverPerEmployee);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyEconomyOverviewResult {\n");
    sb.append("    bsCashAndBankBalances: ").append(toIndentedString(bsCashAndBankBalances)).append("\n");
    sb.append("    bsShareCapital: ").append(toIndentedString(bsShareCapital)).append("\n");
    sb.append("    bsTotalAssets: ").append(toIndentedString(bsTotalAssets)).append("\n");
    sb.append("    bsTotalEquity: ").append(toIndentedString(bsTotalEquity)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    kpiNetMarginPercent: ").append(toIndentedString(kpiNetMarginPercent)).append("\n");
    sb.append("    kpiQuickRatioPercent: ").append(toIndentedString(kpiQuickRatioPercent)).append("\n");
    sb.append("    kpiSolidityPercent: ").append(toIndentedString(kpiSolidityPercent)).append("\n");
    sb.append("    nbrOfEmployees: ").append(toIndentedString(nbrOfEmployees)).append("\n");
    sb.append("    nbrOfEmployeesInterval: ").append(toIndentedString(nbrOfEmployeesInterval)).append("\n");
    sb.append("    nbrOfEmployeesOfficeInterval: ").append(toIndentedString(nbrOfEmployeesOfficeInterval)).append("\n");
    sb.append("    netTurnover: ").append(toIndentedString(netTurnover)).append("\n");
    sb.append("    plNetIncome: ").append(toIndentedString(plNetIncome)).append("\n");
    sb.append("    plOperatingProfit: ").append(toIndentedString(plOperatingProfit)).append("\n");
    sb.append("    plProfitLossAfterFinItems: ").append(toIndentedString(plProfitLossAfterFinItems)).append("\n");
    sb.append("    turnoverInterval: ").append(toIndentedString(turnoverInterval)).append("\n");
    sb.append("    turnoverPerEmployee: ").append(toIndentedString(turnoverPerEmployee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bsCashAndBankBalances");
    openapiFields.add("bsShareCapital");
    openapiFields.add("bsTotalAssets");
    openapiFields.add("bsTotalEquity");
    openapiFields.add("changeDate");
    openapiFields.add("companyId");
    openapiFields.add("kpiNetMarginPercent");
    openapiFields.add("kpiQuickRatioPercent");
    openapiFields.add("kpiSolidityPercent");
    openapiFields.add("nbrOfEmployees");
    openapiFields.add("nbrOfEmployeesInterval");
    openapiFields.add("nbrOfEmployeesOfficeInterval");
    openapiFields.add("netTurnover");
    openapiFields.add("plNetIncome");
    openapiFields.add("plOperatingProfit");
    openapiFields.add("plProfitLossAfterFinItems");
    openapiFields.add("turnoverInterval");
    openapiFields.add("turnoverPerEmployee");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CompanyEconomyOverviewResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CompanyEconomyOverviewResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompanyEconomyOverviewResult is not found in the empty JSON string", CompanyEconomyOverviewResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CompanyEconomyOverviewResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CompanyEconomyOverviewResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bsCashAndBankBalances") != null && !jsonObj.get("bsCashAndBankBalances").isJsonNull()) && !jsonObj.get("bsCashAndBankBalances").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bsCashAndBankBalances` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bsCashAndBankBalances").toString()));
      }
      if ((jsonObj.get("bsShareCapital") != null && !jsonObj.get("bsShareCapital").isJsonNull()) && !jsonObj.get("bsShareCapital").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bsShareCapital` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bsShareCapital").toString()));
      }
      if ((jsonObj.get("bsTotalAssets") != null && !jsonObj.get("bsTotalAssets").isJsonNull()) && !jsonObj.get("bsTotalAssets").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bsTotalAssets` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bsTotalAssets").toString()));
      }
      if ((jsonObj.get("bsTotalEquity") != null && !jsonObj.get("bsTotalEquity").isJsonNull()) && !jsonObj.get("bsTotalEquity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bsTotalEquity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bsTotalEquity").toString()));
      }
      if ((jsonObj.get("changeDate") != null && !jsonObj.get("changeDate").isJsonNull()) && !jsonObj.get("changeDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `changeDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("changeDate").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("kpiNetMarginPercent") != null && !jsonObj.get("kpiNetMarginPercent").isJsonNull()) && !jsonObj.get("kpiNetMarginPercent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kpiNetMarginPercent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kpiNetMarginPercent").toString()));
      }
      if ((jsonObj.get("kpiQuickRatioPercent") != null && !jsonObj.get("kpiQuickRatioPercent").isJsonNull()) && !jsonObj.get("kpiQuickRatioPercent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kpiQuickRatioPercent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kpiQuickRatioPercent").toString()));
      }
      if ((jsonObj.get("kpiSolidityPercent") != null && !jsonObj.get("kpiSolidityPercent").isJsonNull()) && !jsonObj.get("kpiSolidityPercent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kpiSolidityPercent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kpiSolidityPercent").toString()));
      }
      if ((jsonObj.get("nbrOfEmployees") != null && !jsonObj.get("nbrOfEmployees").isJsonNull()) && !jsonObj.get("nbrOfEmployees").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nbrOfEmployees` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nbrOfEmployees").toString()));
      }
      if ((jsonObj.get("nbrOfEmployeesInterval") != null && !jsonObj.get("nbrOfEmployeesInterval").isJsonNull()) && !jsonObj.get("nbrOfEmployeesInterval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nbrOfEmployeesInterval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nbrOfEmployeesInterval").toString()));
      }
      if ((jsonObj.get("nbrOfEmployeesOfficeInterval") != null && !jsonObj.get("nbrOfEmployeesOfficeInterval").isJsonNull()) && !jsonObj.get("nbrOfEmployeesOfficeInterval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nbrOfEmployeesOfficeInterval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nbrOfEmployeesOfficeInterval").toString()));
      }
      if ((jsonObj.get("netTurnover") != null && !jsonObj.get("netTurnover").isJsonNull()) && !jsonObj.get("netTurnover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `netTurnover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("netTurnover").toString()));
      }
      if ((jsonObj.get("plNetIncome") != null && !jsonObj.get("plNetIncome").isJsonNull()) && !jsonObj.get("plNetIncome").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plNetIncome` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plNetIncome").toString()));
      }
      if ((jsonObj.get("plOperatingProfit") != null && !jsonObj.get("plOperatingProfit").isJsonNull()) && !jsonObj.get("plOperatingProfit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plOperatingProfit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plOperatingProfit").toString()));
      }
      if ((jsonObj.get("plProfitLossAfterFinItems") != null && !jsonObj.get("plProfitLossAfterFinItems").isJsonNull()) && !jsonObj.get("plProfitLossAfterFinItems").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plProfitLossAfterFinItems` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plProfitLossAfterFinItems").toString()));
      }
      if ((jsonObj.get("turnoverInterval") != null && !jsonObj.get("turnoverInterval").isJsonNull()) && !jsonObj.get("turnoverInterval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `turnoverInterval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("turnoverInterval").toString()));
      }
      if ((jsonObj.get("turnoverPerEmployee") != null && !jsonObj.get("turnoverPerEmployee").isJsonNull()) && !jsonObj.get("turnoverPerEmployee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `turnoverPerEmployee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("turnoverPerEmployee").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompanyEconomyOverviewResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompanyEconomyOverviewResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompanyEconomyOverviewResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompanyEconomyOverviewResult.class));

       return (TypeAdapter<T>) new TypeAdapter<CompanyEconomyOverviewResult>() {
           @Override
           public void write(JsonWriter out, CompanyEconomyOverviewResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CompanyEconomyOverviewResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CompanyEconomyOverviewResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CompanyEconomyOverviewResult
   * @throws IOException if the JSON string is invalid with respect to CompanyEconomyOverviewResult
   */
  public static CompanyEconomyOverviewResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompanyEconomyOverviewResult.class);
  }

  /**
   * Convert an instance of CompanyEconomyOverviewResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

