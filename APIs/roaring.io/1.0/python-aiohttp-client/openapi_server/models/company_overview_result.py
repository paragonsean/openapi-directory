# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompanyOverviewResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, change_date: str=None, co_address: str=None, commune: str=None, company_holder: str=None, company_id: str=None, company_name: str=None, company_registration_date: str=None, county: str=None, email: str=None, employer_contribution_reg: str=None, fax_number: str=None, industry_code: str=None, industry_text: str=None, legal_group_code: str=None, legal_group_text: str=None, number_company_units: int=None, number_employees: str=None, phone_number: str=None, preliminary_tax_reg: str=None, several_company_name: bool=None, status_code: str=None, status_date_from: str=None, status_text_detailed: str=None, status_text_high: str=None, top_director_function: str=None, top_director_name: str=None, town: str=None, vat_reg: str=None, vep_changed_date: str=None, visit_address: str=None, visit_commune: str=None, visit_county: str=None, visit_street: str=None, visit_street_number: str=None, visit_street_unit: str=None, visit_town: str=None, visit_zip_code: str=None, web_address: str=None, zip_code: str=None):
        """CompanyOverviewResult - a model defined in OpenAPI

        :param address: The address of this CompanyOverviewResult.
        :param change_date: The change_date of this CompanyOverviewResult.
        :param co_address: The co_address of this CompanyOverviewResult.
        :param commune: The commune of this CompanyOverviewResult.
        :param company_holder: The company_holder of this CompanyOverviewResult.
        :param company_id: The company_id of this CompanyOverviewResult.
        :param company_name: The company_name of this CompanyOverviewResult.
        :param company_registration_date: The company_registration_date of this CompanyOverviewResult.
        :param county: The county of this CompanyOverviewResult.
        :param email: The email of this CompanyOverviewResult.
        :param employer_contribution_reg: The employer_contribution_reg of this CompanyOverviewResult.
        :param fax_number: The fax_number of this CompanyOverviewResult.
        :param industry_code: The industry_code of this CompanyOverviewResult.
        :param industry_text: The industry_text of this CompanyOverviewResult.
        :param legal_group_code: The legal_group_code of this CompanyOverviewResult.
        :param legal_group_text: The legal_group_text of this CompanyOverviewResult.
        :param number_company_units: The number_company_units of this CompanyOverviewResult.
        :param number_employees: The number_employees of this CompanyOverviewResult.
        :param phone_number: The phone_number of this CompanyOverviewResult.
        :param preliminary_tax_reg: The preliminary_tax_reg of this CompanyOverviewResult.
        :param several_company_name: The several_company_name of this CompanyOverviewResult.
        :param status_code: The status_code of this CompanyOverviewResult.
        :param status_date_from: The status_date_from of this CompanyOverviewResult.
        :param status_text_detailed: The status_text_detailed of this CompanyOverviewResult.
        :param status_text_high: The status_text_high of this CompanyOverviewResult.
        :param top_director_function: The top_director_function of this CompanyOverviewResult.
        :param top_director_name: The top_director_name of this CompanyOverviewResult.
        :param town: The town of this CompanyOverviewResult.
        :param vat_reg: The vat_reg of this CompanyOverviewResult.
        :param vep_changed_date: The vep_changed_date of this CompanyOverviewResult.
        :param visit_address: The visit_address of this CompanyOverviewResult.
        :param visit_commune: The visit_commune of this CompanyOverviewResult.
        :param visit_county: The visit_county of this CompanyOverviewResult.
        :param visit_street: The visit_street of this CompanyOverviewResult.
        :param visit_street_number: The visit_street_number of this CompanyOverviewResult.
        :param visit_street_unit: The visit_street_unit of this CompanyOverviewResult.
        :param visit_town: The visit_town of this CompanyOverviewResult.
        :param visit_zip_code: The visit_zip_code of this CompanyOverviewResult.
        :param web_address: The web_address of this CompanyOverviewResult.
        :param zip_code: The zip_code of this CompanyOverviewResult.
        """
        self.openapi_types = {
            'address': str,
            'change_date': str,
            'co_address': str,
            'commune': str,
            'company_holder': str,
            'company_id': str,
            'company_name': str,
            'company_registration_date': str,
            'county': str,
            'email': str,
            'employer_contribution_reg': str,
            'fax_number': str,
            'industry_code': str,
            'industry_text': str,
            'legal_group_code': str,
            'legal_group_text': str,
            'number_company_units': int,
            'number_employees': str,
            'phone_number': str,
            'preliminary_tax_reg': str,
            'several_company_name': bool,
            'status_code': str,
            'status_date_from': str,
            'status_text_detailed': str,
            'status_text_high': str,
            'top_director_function': str,
            'top_director_name': str,
            'town': str,
            'vat_reg': str,
            'vep_changed_date': str,
            'visit_address': str,
            'visit_commune': str,
            'visit_county': str,
            'visit_street': str,
            'visit_street_number': str,
            'visit_street_unit': str,
            'visit_town': str,
            'visit_zip_code': str,
            'web_address': str,
            'zip_code': str
        }

        self.attribute_map = {
            'address': 'address',
            'change_date': 'changeDate',
            'co_address': 'coAddress',
            'commune': 'commune',
            'company_holder': 'companyHolder',
            'company_id': 'companyId',
            'company_name': 'companyName',
            'company_registration_date': 'companyRegistrationDate',
            'county': 'county',
            'email': 'email',
            'employer_contribution_reg': 'employerContributionReg',
            'fax_number': 'faxNumber',
            'industry_code': 'industryCode',
            'industry_text': 'industryText',
            'legal_group_code': 'legalGroupCode',
            'legal_group_text': 'legalGroupText',
            'number_company_units': 'numberCompanyUnits',
            'number_employees': 'numberEmployees',
            'phone_number': 'phoneNumber',
            'preliminary_tax_reg': 'preliminaryTaxReg',
            'several_company_name': 'severalCompanyName',
            'status_code': 'statusCode',
            'status_date_from': 'statusDateFrom',
            'status_text_detailed': 'statusTextDetailed',
            'status_text_high': 'statusTextHigh',
            'top_director_function': 'topDirectorFunction',
            'top_director_name': 'topDirectorName',
            'town': 'town',
            'vat_reg': 'vatReg',
            'vep_changed_date': 'vepChangedDate',
            'visit_address': 'visitAddress',
            'visit_commune': 'visitCommune',
            'visit_county': 'visitCounty',
            'visit_street': 'visitStreet',
            'visit_street_number': 'visitStreetNumber',
            'visit_street_unit': 'visitStreetUnit',
            'visit_town': 'visitTown',
            'visit_zip_code': 'visitZipCode',
            'web_address': 'webAddress',
            'zip_code': 'zipCode'
        }

        self._address = address
        self._change_date = change_date
        self._co_address = co_address
        self._commune = commune
        self._company_holder = company_holder
        self._company_id = company_id
        self._company_name = company_name
        self._company_registration_date = company_registration_date
        self._county = county
        self._email = email
        self._employer_contribution_reg = employer_contribution_reg
        self._fax_number = fax_number
        self._industry_code = industry_code
        self._industry_text = industry_text
        self._legal_group_code = legal_group_code
        self._legal_group_text = legal_group_text
        self._number_company_units = number_company_units
        self._number_employees = number_employees
        self._phone_number = phone_number
        self._preliminary_tax_reg = preliminary_tax_reg
        self._several_company_name = several_company_name
        self._status_code = status_code
        self._status_date_from = status_date_from
        self._status_text_detailed = status_text_detailed
        self._status_text_high = status_text_high
        self._top_director_function = top_director_function
        self._top_director_name = top_director_name
        self._town = town
        self._vat_reg = vat_reg
        self._vep_changed_date = vep_changed_date
        self._visit_address = visit_address
        self._visit_commune = visit_commune
        self._visit_county = visit_county
        self._visit_street = visit_street
        self._visit_street_number = visit_street_number
        self._visit_street_unit = visit_street_unit
        self._visit_town = visit_town
        self._visit_zip_code = visit_zip_code
        self._web_address = web_address
        self._zip_code = zip_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyOverviewResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyOverviewResult of this CompanyOverviewResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this CompanyOverviewResult.

        Postal address, street/P.O BOX

        :return: The address of this CompanyOverviewResult.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this CompanyOverviewResult.

        Postal address, street/P.O BOX

        :param address: The address of this CompanyOverviewResult.
        :type address: str
        """

        self._address = address

    @property
    def change_date(self):
        """Gets the change_date of this CompanyOverviewResult.

        Date for when the record was last changed 

        :return: The change_date of this CompanyOverviewResult.
        :rtype: str
        """
        return self._change_date

    @change_date.setter
    def change_date(self, change_date):
        """Sets the change_date of this CompanyOverviewResult.

        Date for when the record was last changed 

        :param change_date: The change_date of this CompanyOverviewResult.
        :type change_date: str
        """

        self._change_date = change_date

    @property
    def co_address(self):
        """Gets the co_address of this CompanyOverviewResult.

        Postal address, C/O address

        :return: The co_address of this CompanyOverviewResult.
        :rtype: str
        """
        return self._co_address

    @co_address.setter
    def co_address(self, co_address):
        """Sets the co_address of this CompanyOverviewResult.

        Postal address, C/O address

        :param co_address: The co_address of this CompanyOverviewResult.
        :type co_address: str
        """

        self._co_address = co_address

    @property
    def commune(self):
        """Gets the commune of this CompanyOverviewResult.

        Postal address, commune name

        :return: The commune of this CompanyOverviewResult.
        :rtype: str
        """
        return self._commune

    @commune.setter
    def commune(self, commune):
        """Sets the commune of this CompanyOverviewResult.

        Postal address, commune name

        :param commune: The commune of this CompanyOverviewResult.
        :type commune: str
        """

        self._commune = commune

    @property
    def company_holder(self):
        """Gets the company_holder of this CompanyOverviewResult.

        Name of company holder

        :return: The company_holder of this CompanyOverviewResult.
        :rtype: str
        """
        return self._company_holder

    @company_holder.setter
    def company_holder(self, company_holder):
        """Sets the company_holder of this CompanyOverviewResult.

        Name of company holder

        :param company_holder: The company_holder of this CompanyOverviewResult.
        :type company_holder: str
        """

        self._company_holder = company_holder

    @property
    def company_id(self):
        """Gets the company_id of this CompanyOverviewResult.

        Company identifier (company registration number / organization number)

        :return: The company_id of this CompanyOverviewResult.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this CompanyOverviewResult.

        Company identifier (company registration number / organization number)

        :param company_id: The company_id of this CompanyOverviewResult.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def company_name(self):
        """Gets the company_name of this CompanyOverviewResult.

        Company name

        :return: The company_name of this CompanyOverviewResult.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this CompanyOverviewResult.

        Company name

        :param company_name: The company_name of this CompanyOverviewResult.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def company_registration_date(self):
        """Gets the company_registration_date of this CompanyOverviewResult.

        Company registration date

        :return: The company_registration_date of this CompanyOverviewResult.
        :rtype: str
        """
        return self._company_registration_date

    @company_registration_date.setter
    def company_registration_date(self, company_registration_date):
        """Sets the company_registration_date of this CompanyOverviewResult.

        Company registration date

        :param company_registration_date: The company_registration_date of this CompanyOverviewResult.
        :type company_registration_date: str
        """

        self._company_registration_date = company_registration_date

    @property
    def county(self):
        """Gets the county of this CompanyOverviewResult.

        Postal address, county

        :return: The county of this CompanyOverviewResult.
        :rtype: str
        """
        return self._county

    @county.setter
    def county(self, county):
        """Sets the county of this CompanyOverviewResult.

        Postal address, county

        :param county: The county of this CompanyOverviewResult.
        :type county: str
        """

        self._county = county

    @property
    def email(self):
        """Gets the email of this CompanyOverviewResult.

        Email address

        :return: The email of this CompanyOverviewResult.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this CompanyOverviewResult.

        Email address

        :param email: The email of this CompanyOverviewResult.
        :type email: str
        """

        self._email = email

    @property
    def employer_contribution_reg(self):
        """Gets the employer_contribution_reg of this CompanyOverviewResult.

        Company is registererd for employer contribution tax (Arb.avg Sweden)

        :return: The employer_contribution_reg of this CompanyOverviewResult.
        :rtype: str
        """
        return self._employer_contribution_reg

    @employer_contribution_reg.setter
    def employer_contribution_reg(self, employer_contribution_reg):
        """Sets the employer_contribution_reg of this CompanyOverviewResult.

        Company is registererd for employer contribution tax (Arb.avg Sweden)

        :param employer_contribution_reg: The employer_contribution_reg of this CompanyOverviewResult.
        :type employer_contribution_reg: str
        """

        self._employer_contribution_reg = employer_contribution_reg

    @property
    def fax_number(self):
        """Gets the fax_number of this CompanyOverviewResult.

        Fax number

        :return: The fax_number of this CompanyOverviewResult.
        :rtype: str
        """
        return self._fax_number

    @fax_number.setter
    def fax_number(self, fax_number):
        """Sets the fax_number of this CompanyOverviewResult.

        Fax number

        :param fax_number: The fax_number of this CompanyOverviewResult.
        :type fax_number: str
        """

        self._fax_number = fax_number

    @property
    def industry_code(self):
        """Gets the industry_code of this CompanyOverviewResult.

        Company main industry, NACE code

        :return: The industry_code of this CompanyOverviewResult.
        :rtype: str
        """
        return self._industry_code

    @industry_code.setter
    def industry_code(self, industry_code):
        """Sets the industry_code of this CompanyOverviewResult.

        Company main industry, NACE code

        :param industry_code: The industry_code of this CompanyOverviewResult.
        :type industry_code: str
        """

        self._industry_code = industry_code

    @property
    def industry_text(self):
        """Gets the industry_text of this CompanyOverviewResult.

        Company main industry, NACE text

        :return: The industry_text of this CompanyOverviewResult.
        :rtype: str
        """
        return self._industry_text

    @industry_text.setter
    def industry_text(self, industry_text):
        """Sets the industry_text of this CompanyOverviewResult.

        Company main industry, NACE text

        :param industry_text: The industry_text of this CompanyOverviewResult.
        :type industry_text: str
        """

        self._industry_text = industry_text

    @property
    def legal_group_code(self):
        """Gets the legal_group_code of this CompanyOverviewResult.

        Company type code

        :return: The legal_group_code of this CompanyOverviewResult.
        :rtype: str
        """
        return self._legal_group_code

    @legal_group_code.setter
    def legal_group_code(self, legal_group_code):
        """Sets the legal_group_code of this CompanyOverviewResult.

        Company type code

        :param legal_group_code: The legal_group_code of this CompanyOverviewResult.
        :type legal_group_code: str
        """

        self._legal_group_code = legal_group_code

    @property
    def legal_group_text(self):
        """Gets the legal_group_text of this CompanyOverviewResult.

        Company type text

        :return: The legal_group_text of this CompanyOverviewResult.
        :rtype: str
        """
        return self._legal_group_text

    @legal_group_text.setter
    def legal_group_text(self, legal_group_text):
        """Sets the legal_group_text of this CompanyOverviewResult.

        Company type text

        :param legal_group_text: The legal_group_text of this CompanyOverviewResult.
        :type legal_group_text: str
        """

        self._legal_group_text = legal_group_text

    @property
    def number_company_units(self):
        """Gets the number_company_units of this CompanyOverviewResult.

        Number of company units/workplaces

        :return: The number_company_units of this CompanyOverviewResult.
        :rtype: int
        """
        return self._number_company_units

    @number_company_units.setter
    def number_company_units(self, number_company_units):
        """Sets the number_company_units of this CompanyOverviewResult.

        Number of company units/workplaces

        :param number_company_units: The number_company_units of this CompanyOverviewResult.
        :type number_company_units: int
        """

        self._number_company_units = number_company_units

    @property
    def number_employees(self):
        """Gets the number_employees of this CompanyOverviewResult.

        Number of employees (pcs)

        :return: The number_employees of this CompanyOverviewResult.
        :rtype: str
        """
        return self._number_employees

    @number_employees.setter
    def number_employees(self, number_employees):
        """Sets the number_employees of this CompanyOverviewResult.

        Number of employees (pcs)

        :param number_employees: The number_employees of this CompanyOverviewResult.
        :type number_employees: str
        """

        self._number_employees = number_employees

    @property
    def phone_number(self):
        """Gets the phone_number of this CompanyOverviewResult.

        Telephone number

        :return: The phone_number of this CompanyOverviewResult.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this CompanyOverviewResult.

        Telephone number

        :param phone_number: The phone_number of this CompanyOverviewResult.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def preliminary_tax_reg(self):
        """Gets the preliminary_tax_reg of this CompanyOverviewResult.

        Company is approved for preliminary tax (F-skatt Sweden)

        :return: The preliminary_tax_reg of this CompanyOverviewResult.
        :rtype: str
        """
        return self._preliminary_tax_reg

    @preliminary_tax_reg.setter
    def preliminary_tax_reg(self, preliminary_tax_reg):
        """Sets the preliminary_tax_reg of this CompanyOverviewResult.

        Company is approved for preliminary tax (F-skatt Sweden)

        :param preliminary_tax_reg: The preliminary_tax_reg of this CompanyOverviewResult.
        :type preliminary_tax_reg: str
        """

        self._preliminary_tax_reg = preliminary_tax_reg

    @property
    def several_company_name(self):
        """Gets the several_company_name of this CompanyOverviewResult.

        Indicates if the company have more than one active name

        :return: The several_company_name of this CompanyOverviewResult.
        :rtype: bool
        """
        return self._several_company_name

    @several_company_name.setter
    def several_company_name(self, several_company_name):
        """Sets the several_company_name of this CompanyOverviewResult.

        Indicates if the company have more than one active name

        :param several_company_name: The several_company_name of this CompanyOverviewResult.
        :type several_company_name: bool
        """

        self._several_company_name = several_company_name

    @property
    def status_code(self):
        """Gets the status_code of this CompanyOverviewResult.

        Company status code

        :return: The status_code of this CompanyOverviewResult.
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CompanyOverviewResult.

        Company status code

        :param status_code: The status_code of this CompanyOverviewResult.
        :type status_code: str
        """

        self._status_code = status_code

    @property
    def status_date_from(self):
        """Gets the status_date_from of this CompanyOverviewResult.

        Company status date from

        :return: The status_date_from of this CompanyOverviewResult.
        :rtype: str
        """
        return self._status_date_from

    @status_date_from.setter
    def status_date_from(self, status_date_from):
        """Sets the status_date_from of this CompanyOverviewResult.

        Company status date from

        :param status_date_from: The status_date_from of this CompanyOverviewResult.
        :type status_date_from: str
        """

        self._status_date_from = status_date_from

    @property
    def status_text_detailed(self):
        """Gets the status_text_detailed of this CompanyOverviewResult.

        Company status text detailed

        :return: The status_text_detailed of this CompanyOverviewResult.
        :rtype: str
        """
        return self._status_text_detailed

    @status_text_detailed.setter
    def status_text_detailed(self, status_text_detailed):
        """Sets the status_text_detailed of this CompanyOverviewResult.

        Company status text detailed

        :param status_text_detailed: The status_text_detailed of this CompanyOverviewResult.
        :type status_text_detailed: str
        """

        self._status_text_detailed = status_text_detailed

    @property
    def status_text_high(self):
        """Gets the status_text_high of this CompanyOverviewResult.

        Company status text

        :return: The status_text_high of this CompanyOverviewResult.
        :rtype: str
        """
        return self._status_text_high

    @status_text_high.setter
    def status_text_high(self, status_text_high):
        """Sets the status_text_high of this CompanyOverviewResult.

        Company status text

        :param status_text_high: The status_text_high of this CompanyOverviewResult.
        :type status_text_high: str
        """

        self._status_text_high = status_text_high

    @property
    def top_director_function(self):
        """Gets the top_director_function of this CompanyOverviewResult.

        Top director's function

        :return: The top_director_function of this CompanyOverviewResult.
        :rtype: str
        """
        return self._top_director_function

    @top_director_function.setter
    def top_director_function(self, top_director_function):
        """Sets the top_director_function of this CompanyOverviewResult.

        Top director's function

        :param top_director_function: The top_director_function of this CompanyOverviewResult.
        :type top_director_function: str
        """

        self._top_director_function = top_director_function

    @property
    def top_director_name(self):
        """Gets the top_director_name of this CompanyOverviewResult.

        Top director's name

        :return: The top_director_name of this CompanyOverviewResult.
        :rtype: str
        """
        return self._top_director_name

    @top_director_name.setter
    def top_director_name(self, top_director_name):
        """Sets the top_director_name of this CompanyOverviewResult.

        Top director's name

        :param top_director_name: The top_director_name of this CompanyOverviewResult.
        :type top_director_name: str
        """

        self._top_director_name = top_director_name

    @property
    def town(self):
        """Gets the town of this CompanyOverviewResult.

        Postal address, town

        :return: The town of this CompanyOverviewResult.
        :rtype: str
        """
        return self._town

    @town.setter
    def town(self, town):
        """Sets the town of this CompanyOverviewResult.

        Postal address, town

        :param town: The town of this CompanyOverviewResult.
        :type town: str
        """

        self._town = town

    @property
    def vat_reg(self):
        """Gets the vat_reg of this CompanyOverviewResult.

        Company is registered for VAT (MOMS Sweden)

        :return: The vat_reg of this CompanyOverviewResult.
        :rtype: str
        """
        return self._vat_reg

    @vat_reg.setter
    def vat_reg(self, vat_reg):
        """Sets the vat_reg of this CompanyOverviewResult.

        Company is registered for VAT (MOMS Sweden)

        :param vat_reg: The vat_reg of this CompanyOverviewResult.
        :type vat_reg: str
        """

        self._vat_reg = vat_reg

    @property
    def vep_changed_date(self):
        """Gets the vep_changed_date of this CompanyOverviewResult.

        Show the latest date any of preliminaryTaxReg, employerContributionReg or vatReg has had a change

        :return: The vep_changed_date of this CompanyOverviewResult.
        :rtype: str
        """
        return self._vep_changed_date

    @vep_changed_date.setter
    def vep_changed_date(self, vep_changed_date):
        """Sets the vep_changed_date of this CompanyOverviewResult.

        Show the latest date any of preliminaryTaxReg, employerContributionReg or vatReg has had a change

        :param vep_changed_date: The vep_changed_date of this CompanyOverviewResult.
        :type vep_changed_date: str
        """

        self._vep_changed_date = vep_changed_date

    @property
    def visit_address(self):
        """Gets the visit_address of this CompanyOverviewResult.

        Visiting address, street name, street number and unit

        :return: The visit_address of this CompanyOverviewResult.
        :rtype: str
        """
        return self._visit_address

    @visit_address.setter
    def visit_address(self, visit_address):
        """Sets the visit_address of this CompanyOverviewResult.

        Visiting address, street name, street number and unit

        :param visit_address: The visit_address of this CompanyOverviewResult.
        :type visit_address: str
        """

        self._visit_address = visit_address

    @property
    def visit_commune(self):
        """Gets the visit_commune of this CompanyOverviewResult.

        Visiting address, commune

        :return: The visit_commune of this CompanyOverviewResult.
        :rtype: str
        """
        return self._visit_commune

    @visit_commune.setter
    def visit_commune(self, visit_commune):
        """Sets the visit_commune of this CompanyOverviewResult.

        Visiting address, commune

        :param visit_commune: The visit_commune of this CompanyOverviewResult.
        :type visit_commune: str
        """

        self._visit_commune = visit_commune

    @property
    def visit_county(self):
        """Gets the visit_county of this CompanyOverviewResult.

        Visiting address, county

        :return: The visit_county of this CompanyOverviewResult.
        :rtype: str
        """
        return self._visit_county

    @visit_county.setter
    def visit_county(self, visit_county):
        """Sets the visit_county of this CompanyOverviewResult.

        Visiting address, county

        :param visit_county: The visit_county of this CompanyOverviewResult.
        :type visit_county: str
        """

        self._visit_county = visit_county

    @property
    def visit_street(self):
        """Gets the visit_street of this CompanyOverviewResult.

        Visiting address, street

        :return: The visit_street of this CompanyOverviewResult.
        :rtype: str
        """
        return self._visit_street

    @visit_street.setter
    def visit_street(self, visit_street):
        """Sets the visit_street of this CompanyOverviewResult.

        Visiting address, street

        :param visit_street: The visit_street of this CompanyOverviewResult.
        :type visit_street: str
        """

        self._visit_street = visit_street

    @property
    def visit_street_number(self):
        """Gets the visit_street_number of this CompanyOverviewResult.

        Visiting address, number

        :return: The visit_street_number of this CompanyOverviewResult.
        :rtype: str
        """
        return self._visit_street_number

    @visit_street_number.setter
    def visit_street_number(self, visit_street_number):
        """Sets the visit_street_number of this CompanyOverviewResult.

        Visiting address, number

        :param visit_street_number: The visit_street_number of this CompanyOverviewResult.
        :type visit_street_number: str
        """

        self._visit_street_number = visit_street_number

    @property
    def visit_street_unit(self):
        """Gets the visit_street_unit of this CompanyOverviewResult.

        Visiting address, unit

        :return: The visit_street_unit of this CompanyOverviewResult.
        :rtype: str
        """
        return self._visit_street_unit

    @visit_street_unit.setter
    def visit_street_unit(self, visit_street_unit):
        """Sets the visit_street_unit of this CompanyOverviewResult.

        Visiting address, unit

        :param visit_street_unit: The visit_street_unit of this CompanyOverviewResult.
        :type visit_street_unit: str
        """

        self._visit_street_unit = visit_street_unit

    @property
    def visit_town(self):
        """Gets the visit_town of this CompanyOverviewResult.

        Visiting address, town

        :return: The visit_town of this CompanyOverviewResult.
        :rtype: str
        """
        return self._visit_town

    @visit_town.setter
    def visit_town(self, visit_town):
        """Sets the visit_town of this CompanyOverviewResult.

        Visiting address, town

        :param visit_town: The visit_town of this CompanyOverviewResult.
        :type visit_town: str
        """

        self._visit_town = visit_town

    @property
    def visit_zip_code(self):
        """Gets the visit_zip_code of this CompanyOverviewResult.

        Visiting address, zip code

        :return: The visit_zip_code of this CompanyOverviewResult.
        :rtype: str
        """
        return self._visit_zip_code

    @visit_zip_code.setter
    def visit_zip_code(self, visit_zip_code):
        """Sets the visit_zip_code of this CompanyOverviewResult.

        Visiting address, zip code

        :param visit_zip_code: The visit_zip_code of this CompanyOverviewResult.
        :type visit_zip_code: str
        """

        self._visit_zip_code = visit_zip_code

    @property
    def web_address(self):
        """Gets the web_address of this CompanyOverviewResult.

        Web address

        :return: The web_address of this CompanyOverviewResult.
        :rtype: str
        """
        return self._web_address

    @web_address.setter
    def web_address(self, web_address):
        """Sets the web_address of this CompanyOverviewResult.

        Web address

        :param web_address: The web_address of this CompanyOverviewResult.
        :type web_address: str
        """

        self._web_address = web_address

    @property
    def zip_code(self):
        """Gets the zip_code of this CompanyOverviewResult.

        Postal address, zipcode

        :return: The zip_code of this CompanyOverviewResult.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this CompanyOverviewResult.

        Postal address, zipcode

        :param zip_code: The zip_code of this CompanyOverviewResult.
        :type zip_code: str
        """

        self._zip_code = zip_code
