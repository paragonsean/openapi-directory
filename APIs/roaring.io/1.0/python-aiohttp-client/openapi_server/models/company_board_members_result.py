# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company_board_members_result_board_members_inner import CompanyBoardMembersResultBoardMembersInner
from openapi_server import util


class CompanyBoardMembersResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, board_members: List[CompanyBoardMembersResultBoardMembersInner]=None, change_date: str=None, company_id: str=None):
        """CompanyBoardMembersResult - a model defined in OpenAPI

        :param board_members: The board_members of this CompanyBoardMembersResult.
        :param change_date: The change_date of this CompanyBoardMembersResult.
        :param company_id: The company_id of this CompanyBoardMembersResult.
        """
        self.openapi_types = {
            'board_members': List[CompanyBoardMembersResultBoardMembersInner],
            'change_date': str,
            'company_id': str
        }

        self.attribute_map = {
            'board_members': 'boardMembers',
            'change_date': 'changeDate',
            'company_id': 'companyId'
        }

        self._board_members = board_members
        self._change_date = change_date
        self._company_id = company_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyBoardMembersResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyBoardMembersResult of this CompanyBoardMembersResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def board_members(self):
        """Gets the board_members of this CompanyBoardMembersResult.

        Array of board members for the requested company

        :return: The board_members of this CompanyBoardMembersResult.
        :rtype: List[CompanyBoardMembersResultBoardMembersInner]
        """
        return self._board_members

    @board_members.setter
    def board_members(self, board_members):
        """Sets the board_members of this CompanyBoardMembersResult.

        Array of board members for the requested company

        :param board_members: The board_members of this CompanyBoardMembersResult.
        :type board_members: List[CompanyBoardMembersResultBoardMembersInner]
        """

        self._board_members = board_members

    @property
    def change_date(self):
        """Gets the change_date of this CompanyBoardMembersResult.

        

        :return: The change_date of this CompanyBoardMembersResult.
        :rtype: str
        """
        return self._change_date

    @change_date.setter
    def change_date(self, change_date):
        """Sets the change_date of this CompanyBoardMembersResult.

        

        :param change_date: The change_date of this CompanyBoardMembersResult.
        :type change_date: str
        """

        self._change_date = change_date

    @property
    def company_id(self):
        """Gets the company_id of this CompanyBoardMembersResult.

        

        :return: The company_id of this CompanyBoardMembersResult.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this CompanyBoardMembersResult.

        

        :param company_id: The company_id of this CompanyBoardMembersResult.
        :type company_id: str
        """

        self._company_id = company_id
