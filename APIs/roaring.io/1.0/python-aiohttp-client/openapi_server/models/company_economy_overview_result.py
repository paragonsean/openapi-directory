# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompanyEconomyOverviewResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bs_cash_and_bank_balances: str=None, bs_share_capital: str=None, bs_total_assets: str=None, bs_total_equity: str=None, change_date: str=None, company_id: str=None, kpi_net_margin_percent: str=None, kpi_quick_ratio_percent: str=None, kpi_solidity_percent: str=None, nbr_of_employees: str=None, nbr_of_employees_interval: str=None, nbr_of_employees_office_interval: str=None, net_turnover: str=None, pl_net_income: str=None, pl_operating_profit: str=None, pl_profit_loss_after_fin_items: str=None, turnover_interval: str=None, turnover_per_employee: str=None):
        """CompanyEconomyOverviewResult - a model defined in OpenAPI

        :param bs_cash_and_bank_balances: The bs_cash_and_bank_balances of this CompanyEconomyOverviewResult.
        :param bs_share_capital: The bs_share_capital of this CompanyEconomyOverviewResult.
        :param bs_total_assets: The bs_total_assets of this CompanyEconomyOverviewResult.
        :param bs_total_equity: The bs_total_equity of this CompanyEconomyOverviewResult.
        :param change_date: The change_date of this CompanyEconomyOverviewResult.
        :param company_id: The company_id of this CompanyEconomyOverviewResult.
        :param kpi_net_margin_percent: The kpi_net_margin_percent of this CompanyEconomyOverviewResult.
        :param kpi_quick_ratio_percent: The kpi_quick_ratio_percent of this CompanyEconomyOverviewResult.
        :param kpi_solidity_percent: The kpi_solidity_percent of this CompanyEconomyOverviewResult.
        :param nbr_of_employees: The nbr_of_employees of this CompanyEconomyOverviewResult.
        :param nbr_of_employees_interval: The nbr_of_employees_interval of this CompanyEconomyOverviewResult.
        :param nbr_of_employees_office_interval: The nbr_of_employees_office_interval of this CompanyEconomyOverviewResult.
        :param net_turnover: The net_turnover of this CompanyEconomyOverviewResult.
        :param pl_net_income: The pl_net_income of this CompanyEconomyOverviewResult.
        :param pl_operating_profit: The pl_operating_profit of this CompanyEconomyOverviewResult.
        :param pl_profit_loss_after_fin_items: The pl_profit_loss_after_fin_items of this CompanyEconomyOverviewResult.
        :param turnover_interval: The turnover_interval of this CompanyEconomyOverviewResult.
        :param turnover_per_employee: The turnover_per_employee of this CompanyEconomyOverviewResult.
        """
        self.openapi_types = {
            'bs_cash_and_bank_balances': str,
            'bs_share_capital': str,
            'bs_total_assets': str,
            'bs_total_equity': str,
            'change_date': str,
            'company_id': str,
            'kpi_net_margin_percent': str,
            'kpi_quick_ratio_percent': str,
            'kpi_solidity_percent': str,
            'nbr_of_employees': str,
            'nbr_of_employees_interval': str,
            'nbr_of_employees_office_interval': str,
            'net_turnover': str,
            'pl_net_income': str,
            'pl_operating_profit': str,
            'pl_profit_loss_after_fin_items': str,
            'turnover_interval': str,
            'turnover_per_employee': str
        }

        self.attribute_map = {
            'bs_cash_and_bank_balances': 'bsCashAndBankBalances',
            'bs_share_capital': 'bsShareCapital',
            'bs_total_assets': 'bsTotalAssets',
            'bs_total_equity': 'bsTotalEquity',
            'change_date': 'changeDate',
            'company_id': 'companyId',
            'kpi_net_margin_percent': 'kpiNetMarginPercent',
            'kpi_quick_ratio_percent': 'kpiQuickRatioPercent',
            'kpi_solidity_percent': 'kpiSolidityPercent',
            'nbr_of_employees': 'nbrOfEmployees',
            'nbr_of_employees_interval': 'nbrOfEmployeesInterval',
            'nbr_of_employees_office_interval': 'nbrOfEmployeesOfficeInterval',
            'net_turnover': 'netTurnover',
            'pl_net_income': 'plNetIncome',
            'pl_operating_profit': 'plOperatingProfit',
            'pl_profit_loss_after_fin_items': 'plProfitLossAfterFinItems',
            'turnover_interval': 'turnoverInterval',
            'turnover_per_employee': 'turnoverPerEmployee'
        }

        self._bs_cash_and_bank_balances = bs_cash_and_bank_balances
        self._bs_share_capital = bs_share_capital
        self._bs_total_assets = bs_total_assets
        self._bs_total_equity = bs_total_equity
        self._change_date = change_date
        self._company_id = company_id
        self._kpi_net_margin_percent = kpi_net_margin_percent
        self._kpi_quick_ratio_percent = kpi_quick_ratio_percent
        self._kpi_solidity_percent = kpi_solidity_percent
        self._nbr_of_employees = nbr_of_employees
        self._nbr_of_employees_interval = nbr_of_employees_interval
        self._nbr_of_employees_office_interval = nbr_of_employees_office_interval
        self._net_turnover = net_turnover
        self._pl_net_income = pl_net_income
        self._pl_operating_profit = pl_operating_profit
        self._pl_profit_loss_after_fin_items = pl_profit_loss_after_fin_items
        self._turnover_interval = turnover_interval
        self._turnover_per_employee = turnover_per_employee

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyEconomyOverviewResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyEconomyOverviewResult of this CompanyEconomyOverviewResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bs_cash_and_bank_balances(self):
        """Gets the bs_cash_and_bank_balances of this CompanyEconomyOverviewResult.

        

        :return: The bs_cash_and_bank_balances of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._bs_cash_and_bank_balances

    @bs_cash_and_bank_balances.setter
    def bs_cash_and_bank_balances(self, bs_cash_and_bank_balances):
        """Sets the bs_cash_and_bank_balances of this CompanyEconomyOverviewResult.

        

        :param bs_cash_and_bank_balances: The bs_cash_and_bank_balances of this CompanyEconomyOverviewResult.
        :type bs_cash_and_bank_balances: str
        """

        self._bs_cash_and_bank_balances = bs_cash_and_bank_balances

    @property
    def bs_share_capital(self):
        """Gets the bs_share_capital of this CompanyEconomyOverviewResult.

        

        :return: The bs_share_capital of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._bs_share_capital

    @bs_share_capital.setter
    def bs_share_capital(self, bs_share_capital):
        """Sets the bs_share_capital of this CompanyEconomyOverviewResult.

        

        :param bs_share_capital: The bs_share_capital of this CompanyEconomyOverviewResult.
        :type bs_share_capital: str
        """

        self._bs_share_capital = bs_share_capital

    @property
    def bs_total_assets(self):
        """Gets the bs_total_assets of this CompanyEconomyOverviewResult.

        

        :return: The bs_total_assets of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._bs_total_assets

    @bs_total_assets.setter
    def bs_total_assets(self, bs_total_assets):
        """Sets the bs_total_assets of this CompanyEconomyOverviewResult.

        

        :param bs_total_assets: The bs_total_assets of this CompanyEconomyOverviewResult.
        :type bs_total_assets: str
        """

        self._bs_total_assets = bs_total_assets

    @property
    def bs_total_equity(self):
        """Gets the bs_total_equity of this CompanyEconomyOverviewResult.

        

        :return: The bs_total_equity of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._bs_total_equity

    @bs_total_equity.setter
    def bs_total_equity(self, bs_total_equity):
        """Sets the bs_total_equity of this CompanyEconomyOverviewResult.

        

        :param bs_total_equity: The bs_total_equity of this CompanyEconomyOverviewResult.
        :type bs_total_equity: str
        """

        self._bs_total_equity = bs_total_equity

    @property
    def change_date(self):
        """Gets the change_date of this CompanyEconomyOverviewResult.

        

        :return: The change_date of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._change_date

    @change_date.setter
    def change_date(self, change_date):
        """Sets the change_date of this CompanyEconomyOverviewResult.

        

        :param change_date: The change_date of this CompanyEconomyOverviewResult.
        :type change_date: str
        """

        self._change_date = change_date

    @property
    def company_id(self):
        """Gets the company_id of this CompanyEconomyOverviewResult.

        

        :return: The company_id of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this CompanyEconomyOverviewResult.

        

        :param company_id: The company_id of this CompanyEconomyOverviewResult.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def kpi_net_margin_percent(self):
        """Gets the kpi_net_margin_percent of this CompanyEconomyOverviewResult.

        

        :return: The kpi_net_margin_percent of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._kpi_net_margin_percent

    @kpi_net_margin_percent.setter
    def kpi_net_margin_percent(self, kpi_net_margin_percent):
        """Sets the kpi_net_margin_percent of this CompanyEconomyOverviewResult.

        

        :param kpi_net_margin_percent: The kpi_net_margin_percent of this CompanyEconomyOverviewResult.
        :type kpi_net_margin_percent: str
        """

        self._kpi_net_margin_percent = kpi_net_margin_percent

    @property
    def kpi_quick_ratio_percent(self):
        """Gets the kpi_quick_ratio_percent of this CompanyEconomyOverviewResult.

        

        :return: The kpi_quick_ratio_percent of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._kpi_quick_ratio_percent

    @kpi_quick_ratio_percent.setter
    def kpi_quick_ratio_percent(self, kpi_quick_ratio_percent):
        """Sets the kpi_quick_ratio_percent of this CompanyEconomyOverviewResult.

        

        :param kpi_quick_ratio_percent: The kpi_quick_ratio_percent of this CompanyEconomyOverviewResult.
        :type kpi_quick_ratio_percent: str
        """

        self._kpi_quick_ratio_percent = kpi_quick_ratio_percent

    @property
    def kpi_solidity_percent(self):
        """Gets the kpi_solidity_percent of this CompanyEconomyOverviewResult.

        

        :return: The kpi_solidity_percent of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._kpi_solidity_percent

    @kpi_solidity_percent.setter
    def kpi_solidity_percent(self, kpi_solidity_percent):
        """Sets the kpi_solidity_percent of this CompanyEconomyOverviewResult.

        

        :param kpi_solidity_percent: The kpi_solidity_percent of this CompanyEconomyOverviewResult.
        :type kpi_solidity_percent: str
        """

        self._kpi_solidity_percent = kpi_solidity_percent

    @property
    def nbr_of_employees(self):
        """Gets the nbr_of_employees of this CompanyEconomyOverviewResult.

        

        :return: The nbr_of_employees of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._nbr_of_employees

    @nbr_of_employees.setter
    def nbr_of_employees(self, nbr_of_employees):
        """Sets the nbr_of_employees of this CompanyEconomyOverviewResult.

        

        :param nbr_of_employees: The nbr_of_employees of this CompanyEconomyOverviewResult.
        :type nbr_of_employees: str
        """

        self._nbr_of_employees = nbr_of_employees

    @property
    def nbr_of_employees_interval(self):
        """Gets the nbr_of_employees_interval of this CompanyEconomyOverviewResult.

        

        :return: The nbr_of_employees_interval of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._nbr_of_employees_interval

    @nbr_of_employees_interval.setter
    def nbr_of_employees_interval(self, nbr_of_employees_interval):
        """Sets the nbr_of_employees_interval of this CompanyEconomyOverviewResult.

        

        :param nbr_of_employees_interval: The nbr_of_employees_interval of this CompanyEconomyOverviewResult.
        :type nbr_of_employees_interval: str
        """

        self._nbr_of_employees_interval = nbr_of_employees_interval

    @property
    def nbr_of_employees_office_interval(self):
        """Gets the nbr_of_employees_office_interval of this CompanyEconomyOverviewResult.

        

        :return: The nbr_of_employees_office_interval of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._nbr_of_employees_office_interval

    @nbr_of_employees_office_interval.setter
    def nbr_of_employees_office_interval(self, nbr_of_employees_office_interval):
        """Sets the nbr_of_employees_office_interval of this CompanyEconomyOverviewResult.

        

        :param nbr_of_employees_office_interval: The nbr_of_employees_office_interval of this CompanyEconomyOverviewResult.
        :type nbr_of_employees_office_interval: str
        """

        self._nbr_of_employees_office_interval = nbr_of_employees_office_interval

    @property
    def net_turnover(self):
        """Gets the net_turnover of this CompanyEconomyOverviewResult.

        

        :return: The net_turnover of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._net_turnover

    @net_turnover.setter
    def net_turnover(self, net_turnover):
        """Sets the net_turnover of this CompanyEconomyOverviewResult.

        

        :param net_turnover: The net_turnover of this CompanyEconomyOverviewResult.
        :type net_turnover: str
        """

        self._net_turnover = net_turnover

    @property
    def pl_net_income(self):
        """Gets the pl_net_income of this CompanyEconomyOverviewResult.

        

        :return: The pl_net_income of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._pl_net_income

    @pl_net_income.setter
    def pl_net_income(self, pl_net_income):
        """Sets the pl_net_income of this CompanyEconomyOverviewResult.

        

        :param pl_net_income: The pl_net_income of this CompanyEconomyOverviewResult.
        :type pl_net_income: str
        """

        self._pl_net_income = pl_net_income

    @property
    def pl_operating_profit(self):
        """Gets the pl_operating_profit of this CompanyEconomyOverviewResult.

        

        :return: The pl_operating_profit of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._pl_operating_profit

    @pl_operating_profit.setter
    def pl_operating_profit(self, pl_operating_profit):
        """Sets the pl_operating_profit of this CompanyEconomyOverviewResult.

        

        :param pl_operating_profit: The pl_operating_profit of this CompanyEconomyOverviewResult.
        :type pl_operating_profit: str
        """

        self._pl_operating_profit = pl_operating_profit

    @property
    def pl_profit_loss_after_fin_items(self):
        """Gets the pl_profit_loss_after_fin_items of this CompanyEconomyOverviewResult.

        

        :return: The pl_profit_loss_after_fin_items of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._pl_profit_loss_after_fin_items

    @pl_profit_loss_after_fin_items.setter
    def pl_profit_loss_after_fin_items(self, pl_profit_loss_after_fin_items):
        """Sets the pl_profit_loss_after_fin_items of this CompanyEconomyOverviewResult.

        

        :param pl_profit_loss_after_fin_items: The pl_profit_loss_after_fin_items of this CompanyEconomyOverviewResult.
        :type pl_profit_loss_after_fin_items: str
        """

        self._pl_profit_loss_after_fin_items = pl_profit_loss_after_fin_items

    @property
    def turnover_interval(self):
        """Gets the turnover_interval of this CompanyEconomyOverviewResult.

        

        :return: The turnover_interval of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._turnover_interval

    @turnover_interval.setter
    def turnover_interval(self, turnover_interval):
        """Sets the turnover_interval of this CompanyEconomyOverviewResult.

        

        :param turnover_interval: The turnover_interval of this CompanyEconomyOverviewResult.
        :type turnover_interval: str
        """

        self._turnover_interval = turnover_interval

    @property
    def turnover_per_employee(self):
        """Gets the turnover_per_employee of this CompanyEconomyOverviewResult.

        

        :return: The turnover_per_employee of this CompanyEconomyOverviewResult.
        :rtype: str
        """
        return self._turnover_per_employee

    @turnover_per_employee.setter
    def turnover_per_employee(self, turnover_per_employee):
        """Sets the turnover_per_employee of this CompanyEconomyOverviewResult.

        

        :param turnover_per_employee: The turnover_per_employee of this CompanyEconomyOverviewResult.
        :type turnover_per_employee: str
        """

        self._turnover_per_employee = turnover_per_employee
