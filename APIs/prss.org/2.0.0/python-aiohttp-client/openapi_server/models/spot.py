# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Spot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date: datetime=None, duration: int=None, file_name: str=None, file_size: int=None, id: int=None, last_modified_date: datetime=None, last_uploaded_date: datetime=None, name: str=None, notes: str=None, original_file_name: str=None):
        """Spot - a model defined in OpenAPI

        :param created_date: The created_date of this Spot.
        :param duration: The duration of this Spot.
        :param file_name: The file_name of this Spot.
        :param file_size: The file_size of this Spot.
        :param id: The id of this Spot.
        :param last_modified_date: The last_modified_date of this Spot.
        :param last_uploaded_date: The last_uploaded_date of this Spot.
        :param name: The name of this Spot.
        :param notes: The notes of this Spot.
        :param original_file_name: The original_file_name of this Spot.
        """
        self.openapi_types = {
            'created_date': datetime,
            'duration': int,
            'file_name': str,
            'file_size': int,
            'id': int,
            'last_modified_date': datetime,
            'last_uploaded_date': datetime,
            'name': str,
            'notes': str,
            'original_file_name': str
        }

        self.attribute_map = {
            'created_date': 'createdDate',
            'duration': 'duration',
            'file_name': 'fileName',
            'file_size': 'fileSize',
            'id': 'id',
            'last_modified_date': 'lastModifiedDate',
            'last_uploaded_date': 'lastUploadedDate',
            'name': 'name',
            'notes': 'notes',
            'original_file_name': 'originalFileName'
        }

        self._created_date = created_date
        self._duration = duration
        self._file_name = file_name
        self._file_size = file_size
        self._id = id
        self._last_modified_date = last_modified_date
        self._last_uploaded_date = last_uploaded_date
        self._name = name
        self._notes = notes
        self._original_file_name = original_file_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Spot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Spot of this Spot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date(self):
        """Gets the created_date of this Spot.

        The date the spot was created. Generated at creation.

        :return: The created_date of this Spot.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this Spot.

        The date the spot was created. Generated at creation.

        :param created_date: The created_date of this Spot.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def duration(self):
        """Gets the duration of this Spot.

        The length (duration) of the spot in seconds.

        :return: The duration of this Spot.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this Spot.

        The length (duration) of the spot in seconds.

        :param duration: The duration of this Spot.
        :type duration: int
        """

        self._duration = duration

    @property
    def file_name(self):
        """Gets the file_name of this Spot.

        The name of the audio content file. Generated at creation.

        :return: The file_name of this Spot.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this Spot.

        The name of the audio content file. Generated at creation.

        :param file_name: The file_name of this Spot.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def file_size(self):
        """Gets the file_size of this Spot.

        The size of the audio content file in bytes. Generated at creation.

        :return: The file_size of this Spot.
        :rtype: int
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this Spot.

        The size of the audio content file in bytes. Generated at creation.

        :param file_size: The file_size of this Spot.
        :type file_size: int
        """

        self._file_size = file_size

    @property
    def id(self):
        """Gets the id of this Spot.

        The unique ID of the spot. Generated at creation.

        :return: The id of this Spot.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Spot.

        The unique ID of the spot. Generated at creation.

        :param id: The id of this Spot.
        :type id: int
        """
        if id is not None and id < 1:
            raise ValueError("Invalid value for `id`, must be a value greater than or equal to `1`")

        self._id = id

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this Spot.

        The date the spot was last modified/updated. Automatically updated on any write operation.

        :return: The last_modified_date of this Spot.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this Spot.

        The date the spot was last modified/updated. Automatically updated on any write operation.

        :param last_modified_date: The last_modified_date of this Spot.
        :type last_modified_date: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def last_uploaded_date(self):
        """Gets the last_uploaded_date of this Spot.

        The date the spot audio file was uploaded. Automatically updated on upload.

        :return: The last_uploaded_date of this Spot.
        :rtype: datetime
        """
        return self._last_uploaded_date

    @last_uploaded_date.setter
    def last_uploaded_date(self, last_uploaded_date):
        """Sets the last_uploaded_date of this Spot.

        The date the spot audio file was uploaded. Automatically updated on upload.

        :param last_uploaded_date: The last_uploaded_date of this Spot.
        :type last_uploaded_date: datetime
        """

        self._last_uploaded_date = last_uploaded_date

    @property
    def name(self):
        """Gets the name of this Spot.

        The unique name of the spot

        :return: The name of this Spot.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Spot.

        The unique name of the spot

        :param name: The name of this Spot.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this Spot.

        Miscellaneous notes about the spot

        :return: The notes of this Spot.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Spot.

        Miscellaneous notes about the spot

        :param notes: The notes of this Spot.
        :type notes: str
        """

        self._notes = notes

    @property
    def original_file_name(self):
        """Gets the original_file_name of this Spot.

        The original name of the audio content file.

        :return: The original_file_name of this Spot.
        :rtype: str
        """
        return self._original_file_name

    @original_file_name.setter
    def original_file_name(self, original_file_name):
        """Sets the original_file_name of this Spot.

        The original name of the audio content file.

        :param original_file_name: The original_file_name of this Spot.
        :type original_file_name: str
        """

        self._original_file_name = original_file_name
