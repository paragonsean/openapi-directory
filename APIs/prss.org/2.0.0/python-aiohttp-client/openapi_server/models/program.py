# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Program(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date: datetime=None, customer_id: int=None, id: int=None, last_modified_date: datetime=None, title: str=None):
        """Program - a model defined in OpenAPI

        :param created_date: The created_date of this Program.
        :param customer_id: The customer_id of this Program.
        :param id: The id of this Program.
        :param last_modified_date: The last_modified_date of this Program.
        :param title: The title of this Program.
        """
        self.openapi_types = {
            'created_date': datetime,
            'customer_id': int,
            'id': int,
            'last_modified_date': datetime,
            'title': str
        }

        self.attribute_map = {
            'created_date': 'createdDate',
            'customer_id': 'customerId',
            'id': 'id',
            'last_modified_date': 'lastModifiedDate',
            'title': 'title'
        }

        self._created_date = created_date
        self._customer_id = customer_id
        self._id = id
        self._last_modified_date = last_modified_date
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Program':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Program of this Program.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date(self):
        """Gets the created_date of this Program.

        The date the segment was created. Generated at creation.

        :return: The created_date of this Program.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this Program.

        The date the segment was created. Generated at creation.

        :param created_date: The created_date of this Program.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def customer_id(self):
        """Gets the customer_id of this Program.

        The ID of the customer that owns this program.

        :return: The customer_id of this Program.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this Program.

        The ID of the customer that owns this program.

        :param customer_id: The customer_id of this Program.
        :type customer_id: int
        """
        if customer_id is not None and customer_id < 0:
            raise ValueError("Invalid value for `customer_id`, must be a value greater than or equal to `0`")

        self._customer_id = customer_id

    @property
    def id(self):
        """Gets the id of this Program.

        The unique ID of the program. Generated at creation.

        :return: The id of this Program.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Program.

        The unique ID of the program. Generated at creation.

        :param id: The id of this Program.
        :type id: int
        """
        if id is not None and id < 0:
            raise ValueError("Invalid value for `id`, must be a value greater than or equal to `0`")

        self._id = id

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this Program.

        The date the program was last modified/updated. Automatically updated on any write operation.

        :return: The last_modified_date of this Program.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this Program.

        The date the program was last modified/updated. Automatically updated on any write operation.

        :param last_modified_date: The last_modified_date of this Program.
        :type last_modified_date: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def title(self):
        """Gets the title of this Program.

        The title of the program.

        :return: The title of this Program.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Program.

        The title of the program.

        :param title: The title of this Program.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title
