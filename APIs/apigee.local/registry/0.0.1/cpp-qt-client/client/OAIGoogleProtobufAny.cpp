/**
 * Registry API
 * The Registry service allows teams to manage descriptions of APIs.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleProtobufAny.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleProtobufAny::OAIGoogleProtobufAny(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleProtobufAny::OAIGoogleProtobufAny() {
    this->initializeModel();
}

OAIGoogleProtobufAny::~OAIGoogleProtobufAny() {}

void OAIGoogleProtobufAny::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleProtobufAny::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleProtobufAny::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("@type")]);
    m_type_isSet = !json[QString("@type")].isNull() && m_type_isValid;
}

QString OAIGoogleProtobufAny::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleProtobufAny::asJsonObject() const {
    QJsonObject obj;
    if (m_type_isSet) {
        obj.insert(QString("@type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleProtobufAny::getType() const {
    return m_type;
}
void OAIGoogleProtobufAny::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleProtobufAny::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleProtobufAny::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleProtobufAny::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleProtobufAny::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
