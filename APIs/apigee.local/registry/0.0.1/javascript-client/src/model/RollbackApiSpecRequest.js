/**
 * Registry API
 * The Registry service allows teams to manage descriptions of APIs.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RollbackApiSpecRequest model module.
 * @module model/RollbackApiSpecRequest
 * @version 0.0.1
 */
class RollbackApiSpecRequest {
    /**
     * Constructs a new <code>RollbackApiSpecRequest</code>.
     * Request message for RollbackApiSpec.
     * @alias module:model/RollbackApiSpecRequest
     * @param name {String} Required. The spec being rolled back.
     * @param revisionId {String} Required. The revision ID to roll back to. It must be a revision of the same spec.   Example: c7cfa2a8
     */
    constructor(name, revisionId) { 
        
        RollbackApiSpecRequest.initialize(this, name, revisionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, revisionId) { 
        obj['name'] = name;
        obj['revisionId'] = revisionId;
    }

    /**
     * Constructs a <code>RollbackApiSpecRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RollbackApiSpecRequest} obj Optional instance to populate.
     * @return {module:model/RollbackApiSpecRequest} The populated <code>RollbackApiSpecRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RollbackApiSpecRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('revisionId')) {
                obj['revisionId'] = ApiClient.convertToType(data['revisionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RollbackApiSpecRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RollbackApiSpecRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RollbackApiSpecRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['revisionId'] && !(typeof data['revisionId'] === 'string' || data['revisionId'] instanceof String)) {
            throw new Error("Expected the field `revisionId` to be a primitive type in the JSON string but got " + data['revisionId']);
        }

        return true;
    }


}

RollbackApiSpecRequest.RequiredProperties = ["name", "revisionId"];

/**
 * Required. The spec being rolled back.
 * @member {String} name
 */
RollbackApiSpecRequest.prototype['name'] = undefined;

/**
 * Required. The revision ID to roll back to. It must be a revision of the same spec.   Example: c7cfa2a8
 * @member {String} revisionId
 */
RollbackApiSpecRequest.prototype['revisionId'] = undefined;






export default RollbackApiSpecRequest;

