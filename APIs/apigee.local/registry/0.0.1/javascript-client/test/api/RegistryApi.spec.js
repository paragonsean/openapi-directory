/**
 * Registry API
 * The Registry service allows teams to manage descriptions of APIs.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RegistryApi);
  }
}(this, function(expect, RegistryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RegistryApi.RegistryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RegistryApi', function() {
    describe('registryCreateApi', function() {
      it('should call registryCreateApi successfully', function(done) {
        //uncomment below and update the code to test registryCreateApi
        //instance.registryCreateApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryCreateApiDeployment', function() {
      it('should call registryCreateApiDeployment successfully', function(done) {
        //uncomment below and update the code to test registryCreateApiDeployment
        //instance.registryCreateApiDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryCreateApiSpec', function() {
      it('should call registryCreateApiSpec successfully', function(done) {
        //uncomment below and update the code to test registryCreateApiSpec
        //instance.registryCreateApiSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryCreateApiVersion', function() {
      it('should call registryCreateApiVersion successfully', function(done) {
        //uncomment below and update the code to test registryCreateApiVersion
        //instance.registryCreateApiVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryCreateArtifact', function() {
      it('should call registryCreateArtifact successfully', function(done) {
        //uncomment below and update the code to test registryCreateArtifact
        //instance.registryCreateArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryDeleteApi', function() {
      it('should call registryDeleteApi successfully', function(done) {
        //uncomment below and update the code to test registryDeleteApi
        //instance.registryDeleteApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryDeleteApiDeployment', function() {
      it('should call registryDeleteApiDeployment successfully', function(done) {
        //uncomment below and update the code to test registryDeleteApiDeployment
        //instance.registryDeleteApiDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryDeleteApiDeploymentRevision', function() {
      it('should call registryDeleteApiDeploymentRevision successfully', function(done) {
        //uncomment below and update the code to test registryDeleteApiDeploymentRevision
        //instance.registryDeleteApiDeploymentRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryDeleteApiSpec', function() {
      it('should call registryDeleteApiSpec successfully', function(done) {
        //uncomment below and update the code to test registryDeleteApiSpec
        //instance.registryDeleteApiSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryDeleteApiSpecRevision', function() {
      it('should call registryDeleteApiSpecRevision successfully', function(done) {
        //uncomment below and update the code to test registryDeleteApiSpecRevision
        //instance.registryDeleteApiSpecRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryDeleteApiVersion', function() {
      it('should call registryDeleteApiVersion successfully', function(done) {
        //uncomment below and update the code to test registryDeleteApiVersion
        //instance.registryDeleteApiVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryDeleteArtifact', function() {
      it('should call registryDeleteArtifact successfully', function(done) {
        //uncomment below and update the code to test registryDeleteArtifact
        //instance.registryDeleteArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryGetApi', function() {
      it('should call registryGetApi successfully', function(done) {
        //uncomment below and update the code to test registryGetApi
        //instance.registryGetApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryGetApiDeployment', function() {
      it('should call registryGetApiDeployment successfully', function(done) {
        //uncomment below and update the code to test registryGetApiDeployment
        //instance.registryGetApiDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryGetApiSpec', function() {
      it('should call registryGetApiSpec successfully', function(done) {
        //uncomment below and update the code to test registryGetApiSpec
        //instance.registryGetApiSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryGetApiSpecContents', function() {
      it('should call registryGetApiSpecContents successfully', function(done) {
        //uncomment below and update the code to test registryGetApiSpecContents
        //instance.registryGetApiSpecContents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryGetApiVersion', function() {
      it('should call registryGetApiVersion successfully', function(done) {
        //uncomment below and update the code to test registryGetApiVersion
        //instance.registryGetApiVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryGetArtifact', function() {
      it('should call registryGetArtifact successfully', function(done) {
        //uncomment below and update the code to test registryGetArtifact
        //instance.registryGetArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryGetArtifactContents', function() {
      it('should call registryGetArtifactContents successfully', function(done) {
        //uncomment below and update the code to test registryGetArtifactContents
        //instance.registryGetArtifactContents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryListApiDeploymentRevisions', function() {
      it('should call registryListApiDeploymentRevisions successfully', function(done) {
        //uncomment below and update the code to test registryListApiDeploymentRevisions
        //instance.registryListApiDeploymentRevisions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryListApiDeployments', function() {
      it('should call registryListApiDeployments successfully', function(done) {
        //uncomment below and update the code to test registryListApiDeployments
        //instance.registryListApiDeployments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryListApiSpecRevisions', function() {
      it('should call registryListApiSpecRevisions successfully', function(done) {
        //uncomment below and update the code to test registryListApiSpecRevisions
        //instance.registryListApiSpecRevisions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryListApiSpecs', function() {
      it('should call registryListApiSpecs successfully', function(done) {
        //uncomment below and update the code to test registryListApiSpecs
        //instance.registryListApiSpecs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryListApiVersions', function() {
      it('should call registryListApiVersions successfully', function(done) {
        //uncomment below and update the code to test registryListApiVersions
        //instance.registryListApiVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryListApis', function() {
      it('should call registryListApis successfully', function(done) {
        //uncomment below and update the code to test registryListApis
        //instance.registryListApis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryListArtifacts', function() {
      it('should call registryListArtifacts successfully', function(done) {
        //uncomment below and update the code to test registryListArtifacts
        //instance.registryListArtifacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryReplaceArtifact', function() {
      it('should call registryReplaceArtifact successfully', function(done) {
        //uncomment below and update the code to test registryReplaceArtifact
        //instance.registryReplaceArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryRollbackApiDeployment', function() {
      it('should call registryRollbackApiDeployment successfully', function(done) {
        //uncomment below and update the code to test registryRollbackApiDeployment
        //instance.registryRollbackApiDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryRollbackApiSpec', function() {
      it('should call registryRollbackApiSpec successfully', function(done) {
        //uncomment below and update the code to test registryRollbackApiSpec
        //instance.registryRollbackApiSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryTagApiDeploymentRevision', function() {
      it('should call registryTagApiDeploymentRevision successfully', function(done) {
        //uncomment below and update the code to test registryTagApiDeploymentRevision
        //instance.registryTagApiDeploymentRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryTagApiSpecRevision', function() {
      it('should call registryTagApiSpecRevision successfully', function(done) {
        //uncomment below and update the code to test registryTagApiSpecRevision
        //instance.registryTagApiSpecRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryUpdateApi', function() {
      it('should call registryUpdateApi successfully', function(done) {
        //uncomment below and update the code to test registryUpdateApi
        //instance.registryUpdateApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryUpdateApiDeployment', function() {
      it('should call registryUpdateApiDeployment successfully', function(done) {
        //uncomment below and update the code to test registryUpdateApiDeployment
        //instance.registryUpdateApiDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryUpdateApiSpec', function() {
      it('should call registryUpdateApiSpec successfully', function(done) {
        //uncomment below and update the code to test registryUpdateApiSpec
        //instance.registryUpdateApiSpec(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registryUpdateApiVersion', function() {
      it('should call registryUpdateApiVersion successfully', function(done) {
        //uncomment below and update the code to test registryUpdateApiVersion
        //instance.registryUpdateApiVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
