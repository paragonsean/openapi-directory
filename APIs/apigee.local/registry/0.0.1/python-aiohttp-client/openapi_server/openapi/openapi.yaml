openapi: 3.0.3
info:
  description: The Registry service allows teams to manage descriptions of APIs.
  title: Registry API
  version: 0.0.1
  x-apisguru-categories:
  - developer_tools
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/apigee/registry/main/openapi.yaml
    version: "3.0"
  x-providerName: apigee.local
  x-serviceName: registry
servers:
- url: http://apigee.local
- url: https://apigeeregistry.googleapis.com
tags:
- name: Registry
paths:
  /v1/projects/{project}/locations/{location}/apis:
    get:
      description: ListApis returns matching APIs.
      operationId: registry_list_apis
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of APIs to return. The service may return\
          \ fewer than this value. If unspecified, at most 50 values will be returned.\
          \ The maximum is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "A page token, received from a previous `ListApis` call. Provide\
          \ this to retrieve the subsequent page. When paginating, all other parameters\
          \ provided to `ListApis` must match the call that provided the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: An expression that can be used to filter the list. Filters use
          the Common Expression Language and can refer to all message fields.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApisResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    post:
      description: CreateApi creates a specified API.
      operationId: registry_create_api
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. The ID to use for the api, which will become the final\
          \ component of the api's resource name. This value should be 4-63 characters,\
          \ and valid characters are /[a-z][0-9]-/. Following AIP-162, IDs must not\
          \ have the form of a UUID."
        explode: true
        in: query
        name: apiId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}:
    delete:
      description: |-
        DeleteApi removes a specified API and all of the resources that it
         owns.
      operationId: registry_delete_api
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, any child resources will also be deleted. (Otherwise,\
          \ the request will only work if there are no child resources.)"
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    get:
      description: GetApi returns a specified API.
      operationId: registry_get_api
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    patch:
      description: UpdateApi can be used to modify a specified API.
      operationId: registry_update_api
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: "The list of fields to be updated. If omitted, all fields are\
          \ updated that are set in the request message (fields set to default values\
          \ are ignored). If a \"*\" is specified, all fields are updated, including\
          \ fields that are unspecified/default in the request."
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          format: field-mask
          type: string
        style: form
      - description: "If set to true, and the api is not found, a new api_versions\
          \ will be created. In this situation, `update_mask` is ignored."
        explode: true
        in: query
        name: allowMissing
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/deployments:
    get:
      description: ListApiDeployments returns matching deployments.
      operationId: registry_list_api_deployments
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of deployments to return. The service may\
          \ return fewer than this value. If unspecified, at most 50 values will be\
          \ returned. The maximum is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "A page token, received from a previous `ListApiDeployments`\
          \ call. Provide this to retrieve the subsequent page. When paginating, all\
          \ other parameters provided to `ListApiDeployments` must match the call\
          \ that provided the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: An expression that can be used to filter the list. Filters use
          the Common Expression Language and can refer to all message fields.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiDeploymentsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    post:
      description: CreateApiDeployment creates a specified deployment.
      operationId: registry_create_api_deployment
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. The ID to use for the deployment, which will become\
          \ the final component of the deployment's resource name. This value should\
          \ be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following\
          \ AIP-162, IDs must not have the form of a UUID."
        explode: true
        in: query
        name: apiDeploymentId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDeployment'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:
    delete:
      description: |-
        DeleteApiDeployment removes a specified deployment, all revisions, and all
         child resources (e.g. artifacts).
      operationId: registry_delete_api_deployment
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The deployment id.
        explode: false
        in: path
        name: deployment
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, any child resources will also be deleted. (Otherwise,\
          \ the request will only work if there are no child resources.)"
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    get:
      description: GetApiDeployment returns a specified deployment.
      operationId: registry_get_api_deployment
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The deployment id.
        explode: false
        in: path
        name: deployment
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    patch:
      description: UpdateApiDeployment can be used to modify a specified deployment.
      operationId: registry_update_api_deployment
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The deployment id.
        explode: false
        in: path
        name: deployment
        required: true
        schema:
          type: string
        style: simple
      - description: "The list of fields to be updated. If omitted, all fields are\
          \ updated that are set in the request message (fields set to default values\
          \ are ignored). If a \"*\" is specified, all fields are updated, including\
          \ fields that are unspecified/default in the request."
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          format: field-mask
          type: string
        style: form
      - description: "If set to true, and the deployment is not found, a new deployment\
          \ will be created. In this situation, `update_mask` is ignored."
        explode: true
        in: query
        name: allowMissing
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDeployment'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:deleteRevision:
    delete:
      description: DeleteApiDeploymentRevision deletes a revision of a deployment.
      operationId: registry_delete_api_deployment_revision
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The deployment id.
        explode: false
        in: path
        name: deployment
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
  /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:listRevisions:
    get:
      description: |-
        ListApiDeploymentRevisions lists all revisions of a deployment.
         Revisions are returned in descending order of revision creation time.
      operationId: registry_list_api_deployment_revisions
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The deployment id.
        explode: false
        in: path
        name: deployment
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of revisions to return per page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The page token, received from a previous ListApiDeploymentRevisions\
          \ call. Provide this to retrieve the subsequent page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiDeploymentRevisionsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
  /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:rollback:
    post:
      description: |-
        RollbackApiDeployment sets the current revision to a specified prior
         revision. Note that this creates a new revision with a new revision ID.
      operationId: registry_rollback_api_deployment
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The deployment id.
        explode: false
        in: path
        name: deployment
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackApiDeploymentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:tagRevision:
    post:
      description: |-
        TagApiDeploymentRevision adds a tag to a specified revision of a
         deployment.
      operationId: registry_tag_api_deployment_revision
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The deployment id.
        explode: false
        in: path
        name: deployment
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagApiDeploymentRevisionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/versions:
    get:
      description: ListApiVersions returns matching versions.
      operationId: registry_list_api_versions
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of versions to return. The service may return\
          \ fewer than this value. If unspecified, at most 50 values will be returned.\
          \ The maximum is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "A page token, received from a previous `ListApiVersions` call.\
          \ Provide this to retrieve the subsequent page. When paginating, all other\
          \ parameters provided to `ListApiVersions` must match the call that provided\
          \ the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: An expression that can be used to filter the list. Filters use
          the Common Expression Language and can refer to all message fields.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiVersionsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    post:
      description: CreateApiVersion creates a specified version.
      operationId: registry_create_api_version
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. The ID to use for the version, which will become the\
          \ final component of the version's resource name. This value should be 4-63\
          \ characters, and valid characters are /[a-z][0-9]-/. Following AIP-162,\
          \ IDs must not have the form of a UUID."
        explode: true
        in: query
        name: apiVersionId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiVersion'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}:
    delete:
      description: |-
        DeleteApiVersion removes a specified version and all of the resources that
         it owns.
      operationId: registry_delete_api_version
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, any child resources will also be deleted. (Otherwise,\
          \ the request will only work if there are no child resources.)"
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    get:
      description: GetApiVersion returns a specified version.
      operationId: registry_get_api_version
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    patch:
      description: UpdateApiVersion can be used to modify a specified version.
      operationId: registry_update_api_version
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: "The list of fields to be updated. If omitted, all fields are\
          \ updated that are set in the request message (fields set to default values\
          \ are ignored). If a \"*\" is specified, all fields are updated, including\
          \ fields that are unspecified/default in the request."
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          format: field-mask
          type: string
        style: form
      - description: "If set to true, and the version is not found, a new version\
          \ will be created. In this situation, `update_mask` is ignored."
        explode: true
        in: query
        name: allowMissing
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiVersion'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs:
    get:
      description: ListApiSpecs returns matching specs.
      operationId: registry_list_api_specs
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of specs to return. The service may return\
          \ fewer than this value. If unspecified, at most 50 values will be returned.\
          \ The maximum is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "A page token, received from a previous `ListApiSpecs` call.\
          \ Provide this to retrieve the subsequent page. When paginating, all other\
          \ parameters provided to `ListApiSpecs` must match the call that provided\
          \ the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: An expression that can be used to filter the list. Filters use
          the Common Expression Language and can refer to all message fields except
          contents.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiSpecsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    post:
      description: CreateApiSpec creates a specified spec.
      operationId: registry_create_api_spec
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. The ID to use for the spec, which will become the\
          \ final component of the spec's resource name. This value should be 4-63\
          \ characters, and valid characters are /[a-z][0-9]-/. Following AIP-162,\
          \ IDs must not have the form of a UUID."
        explode: true
        in: query
        name: apiSpecId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSpec'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpec'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:
    delete:
      description: |-
        DeleteApiSpec removes a specified spec, all revisions, and all child
         resources (e.g. artifacts).
      operationId: registry_delete_api_spec
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: The spec id.
        explode: false
        in: path
        name: spec
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, any child resources will also be deleted. (Otherwise,\
          \ the request will only work if there are no child resources.)"
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    get:
      description: GetApiSpec returns a specified spec.
      operationId: registry_get_api_spec
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: The spec id.
        explode: false
        in: path
        name: spec
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpec'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    patch:
      description: UpdateApiSpec can be used to modify a specified spec.
      operationId: registry_update_api_spec
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: The spec id.
        explode: false
        in: path
        name: spec
        required: true
        schema:
          type: string
        style: simple
      - description: "The list of fields to be updated. If omitted, all fields are\
          \ updated that are set in the request message (fields set to default values\
          \ are ignored). If a \"*\" is specified, all fields are updated, including\
          \ fields that are unspecified/default in the request."
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          format: field-mask
          type: string
        style: form
      - description: "If set to true, and the spec is not found, a new spec will be\
          \ created. In this situation, `update_mask` is ignored."
        explode: true
        in: query
        name: allowMissing
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSpec'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpec'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:deleteRevision:
    delete:
      description: DeleteApiSpecRevision deletes a revision of a spec.
      operationId: registry_delete_api_spec_revision
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: The spec id.
        explode: false
        in: path
        name: spec
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpec'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
  /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:getContents:
    get:
      description: |-
        GetApiSpecContents returns the contents of a specified spec.
         If specs are stored with GZip compression, the default behavior
         is to return the spec uncompressed (the mime_type response field
         indicates the exact format returned).
      operationId: registry_get_api_spec_contents
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: The spec id.
        explode: false
        in: path
        name: spec
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*': {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
  /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:listRevisions:
    get:
      description: |-
        ListApiSpecRevisions lists all revisions of a spec.
         Revisions are returned in descending order of revision creation time.
      operationId: registry_list_api_spec_revisions
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: The spec id.
        explode: false
        in: path
        name: spec
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of revisions to return per page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The page token, received from a previous ListApiSpecRevisions\
          \ call. Provide this to retrieve the subsequent page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiSpecRevisionsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
  /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:rollback:
    post:
      description: |-
        RollbackApiSpec sets the current revision to a specified prior revision.
         Note that this creates a new revision with a new revision ID.
      operationId: registry_rollback_api_spec
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: The spec id.
        explode: false
        in: path
        name: spec
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackApiSpecRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpec'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:tagRevision:
    post:
      description: TagApiSpecRevision adds a tag to a specified revision of a spec.
      operationId: registry_tag_api_spec_revision
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The api id.
        explode: false
        in: path
        name: api
        required: true
        schema:
          type: string
        style: simple
      - description: The version id.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: The spec id.
        explode: false
        in: path
        name: spec
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagApiSpecRevisionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpec'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/artifacts:
    get:
      description: ListArtifacts returns matching artifacts.
      operationId: registry_list_artifacts
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of artifacts to return. The service may return\
          \ fewer than this value. If unspecified, at most 50 values will be returned.\
          \ The maximum is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "A page token, received from a previous `ListArtifacts` call.\
          \ Provide this to retrieve the subsequent page. When paginating, all other\
          \ parameters provided to `ListArtifacts` must match the call that provided\
          \ the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: An expression that can be used to filter the list. Filters use
          the Common Expression Language and can refer to all message fields except
          contents.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArtifactsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    post:
      description: CreateArtifact creates a specified artifact.
      operationId: registry_create_artifact
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. The ID to use for the artifact, which will become\
          \ the final component of the artifact's resource name. This value should\
          \ be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following\
          \ AIP-162, IDs must not have the form of a UUID."
        explode: true
        in: query
        name: artifactId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifact'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/artifacts/{artifact}:
    delete:
      description: DeleteArtifact removes a specified artifact.
      operationId: registry_delete_artifact
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact id.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    get:
      description: GetArtifact returns a specified artifact.
      operationId: registry_get_artifact
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact id.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
    put:
      description: ReplaceArtifact can be used to replace a specified artifact.
      operationId: registry_replace_artifact
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact id.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifact'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
      x-codegen-request-body-name: body
  /v1/projects/{project}/locations/{location}/artifacts/{artifact}:getContents:
    get:
      description: |-
        GetArtifactContents returns the contents of a specified artifact.
         If artifacts are stored with GZip compression, the default behavior
         is to return the artifact uncompressed (the mime_type response field
         indicates the exact format returned).
      operationId: registry_get_artifact_contents
      parameters:
      - description: The project id.
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: The location id.
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact id.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*': {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - Registry
      x-openapi-router-controller: openapi_server.controllers.registry_controller
components:
  schemas:
    Api:
      description: An Api is a top-level description of an API. Apis are produced
        by producers and are commitments to provide services.
      example:
        recommendedVersion: recommendedVersion
        createTime: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        name: name
        annotations:
          key: annotations
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
        availability: availability
        labels:
          key: labels
        recommendedDeployment: recommendedDeployment
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations attach non-identifying metadata to resources.\
            \ Annotation keys and values are less restricted than those of labels,\
            \ but should be generally used for small values of broad interest. Larger,\
            \ topic- specific metadata should be stored in Artifacts."
          title: annotations
          type: object
        availability:
          description: "A user-definable description of the availability of this service.\
            \ Format: free-form, but we expect single words that describe availability,\
            \ e.g. \"NONE\", \"TESTING\", \"PREVIEW\", \"GENERAL\", \"DEPRECATED\"\
            , \"SHUTDOWN\"."
          title: availability
          type: string
        createTime:
          description: Output only. Creation timestamp.
          format: date-time
          readOnly: true
          title: createTime
          type: string
        description:
          description: A detailed description.
          title: description
          type: string
        displayName:
          description: Human-meaningful name.
          title: displayName
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels attach identifying metadata to resources. Identifying\
            \ metadata can be used to filter list operations. Label keys and values\
            \ can be no longer than 64 characters (Unicode codepoints), can only contain\
            \ lowercase letters, numeric characters, underscores and dashes. International\
            \ characters are allowed. No more than 64 user labels can be associated\
            \ with one resource (System labels are excluded). See https://goo.gl/xmQnxf\
            \ for more information and examples of labels. System reserved label keys\
            \ are prefixed with \"apigeeregistry.googleapis.com/\" and cannot be changed."
          title: labels
          type: object
        name:
          description: Resource name.
          title: name
          type: string
        recommendedDeployment:
          description: "The recommended deployment of the API. Format: apis/{api}/deployments/{deployment}"
          title: recommendedDeployment
          type: string
        recommendedVersion:
          description: "The recommended version of the API. Format: apis/{api}/versions/{version}"
          title: recommendedVersion
          type: string
        updateTime:
          description: Output only. Last update timestamp.
          format: date-time
          readOnly: true
          title: updateTime
          type: string
      title: Api
      type: object
    ApiDeployment:
      description: An ApiDeployment describes a service running at particular address
        that provides a particular version of an API. ApiDeployments have revisions
        which correspond to different configurations of a single deployment in time.
        Revision identifiers should be updated whenever the served API spec or endpoint
        address changes.
      example:
        intendedAudience: intendedAudience
        displayName: displayName
        annotations:
          key: annotations
        description: description
        revisionCreateTime: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
        revisionId: revisionId
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        accessGuidance: accessGuidance
        endpointUri: endpointUri
        externalChannelUri: externalChannelUri
        revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
        apiSpecRevision: apiSpecRevision
      properties:
        accessGuidance:
          description: Text briefly describing how to access the endpoint. Changes
            to this value will not affect the revision.
          title: accessGuidance
          type: string
        annotations:
          additionalProperties:
            type: string
          description: "Annotations attach non-identifying metadata to resources.\
            \ Annotation keys and values are less restricted than those of labels,\
            \ but should be generally used for small values of broad interest. Larger,\
            \ topic- specific metadata should be stored in Artifacts."
          title: annotations
          type: object
        apiSpecRevision:
          description: "The full resource name (including revision id) of the spec\
            \ of the API being served by the deployment. Changes to this value will\
            \ update the revision. Format: apis/{api}/deployments/{deployment}"
          title: apiSpecRevision
          type: string
        createTime:
          description: Output only. Creation timestamp; when the deployment resource
            was created.
          format: date-time
          readOnly: true
          title: createTime
          type: string
        description:
          description: A detailed description.
          title: description
          type: string
        displayName:
          description: Human-meaningful name.
          title: displayName
          type: string
        endpointUri:
          description: The address where the deployment is serving. Changes to this
            value will update the revision.
          title: endpointUri
          type: string
        externalChannelUri:
          description: The address of the external channel of the API (e.g. the Developer
            Portal). Changes to this value will not affect the revision.
          title: externalChannelUri
          type: string
        intendedAudience:
          description: Text briefly identifying the intended audience of the API.
            Changes to this value will not affect the revision.
          title: intendedAudience
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels attach identifying metadata to resources. Identifying\
            \ metadata can be used to filter list operations. Label keys and values\
            \ can be no longer than 64 characters (Unicode codepoints), can only contain\
            \ lowercase letters, numeric characters, underscores and dashes. International\
            \ characters are allowed. No more than 64 user labels can be associated\
            \ with one resource (System labels are excluded). See https://goo.gl/xmQnxf\
            \ for more information and examples of labels. System reserved label keys\
            \ are prefixed with \"registry.googleapis.com/\" and cannot be changed."
          title: labels
          type: object
        name:
          description: Resource name.
          title: name
          type: string
        revisionCreateTime:
          description: Output only. Revision creation timestamp; when the represented
            revision was created.
          format: date-time
          readOnly: true
          title: revisionCreateTime
          type: string
        revisionId:
          description: Output only. Immutable. The revision ID of the deployment.
            A new revision is committed whenever the deployment contents are changed.
            The format is an 8-character hexadecimal string.
          readOnly: true
          title: revisionId
          type: string
        revisionUpdateTime:
          description: "Output only. Last update timestamp: when the represented revision\
            \ was last modified."
          format: date-time
          readOnly: true
          title: revisionUpdateTime
          type: string
      title: ApiDeployment
      type: object
    ApiSpec:
      description: "An ApiSpec describes a version of an API in a structured way.\
        \ ApiSpecs provide formal descriptions that consumers can use to use a version.\
        \ ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion.\
        \ When specs consist of multiple files, these should be bundled together (e.g.\
        \ in a zip archive) and stored as a unit. Multiple specs can exist to provide\
        \ representations in different API description formats. Synchronization of\
        \ these representations would be provided by tooling and background services."
      example:
        annotations:
          key: annotations
        description: description
        mimeType: mimeType
        revisionCreateTime: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
        sizeBytes: 0
        revisionId: revisionId
        filename: filename
        contents: contents
        createTime: 2000-01-23T04:56:07.000+00:00
        sourceUri: sourceUri
        name: name
        hash: hash
        revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations attach non-identifying metadata to resources.\
            \ Annotation keys and values are less restricted than those of labels,\
            \ but should be generally used for small values of broad interest. Larger,\
            \ topic- specific metadata should be stored in Artifacts."
          title: annotations
          type: object
        contents:
          description: "Input only. The contents of the spec. Provided by API callers\
            \ when specs are created or updated. To access the contents of a spec,\
            \ use GetApiSpecContents."
          format: bytes
          title: contents
          type: string
          writeOnly: true
        createTime:
          description: Output only. Creation timestamp; when the spec resource was
            created.
          format: date-time
          readOnly: true
          title: createTime
          type: string
        description:
          description: A detailed description.
          title: description
          type: string
        filename:
          description: A possibly-hierarchical name used to refer to the spec from
            other specs.
          title: filename
          type: string
        hash:
          description: "Output only. A SHA-256 hash of the spec's contents. If the\
            \ spec is gzipped, this is the hash of the uncompressed spec."
          readOnly: true
          title: hash
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels attach identifying metadata to resources. Identifying\
            \ metadata can be used to filter list operations. Label keys and values\
            \ can be no longer than 64 characters (Unicode codepoints), can only contain\
            \ lowercase letters, numeric characters, underscores and dashes. International\
            \ characters are allowed. No more than 64 user labels can be associated\
            \ with one resource (System labels are excluded). See https://goo.gl/xmQnxf\
            \ for more information and examples of labels. System reserved label keys\
            \ are prefixed with \"apigeeregistry.googleapis.com/\" and cannot be changed."
          title: labels
          type: object
        mimeType:
          description: "A style (format) descriptor for this spec that is specified\
            \ as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible\
            \ values include \"application/vnd.apigee.proto\", \"application/vnd.apigee.openapi\"\
            , and \"application/vnd.apigee.graphql\", with possible suffixes representing\
            \ compression types. These hypothetical names are defined in the vendor\
            \ tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are\
            \ not final. Content types can specify compression. Currently only GZip\
            \ compression is supported (indicated with \"+gzip\")."
          title: mimeType
          type: string
        name:
          description: Resource name.
          title: name
          type: string
        revisionCreateTime:
          description: Output only. Revision creation timestamp; when the represented
            revision was created.
          format: date-time
          readOnly: true
          title: revisionCreateTime
          type: string
        revisionId:
          description: Output only. Immutable. The revision ID of the spec. A new
            revision is committed whenever the spec contents are changed. The format
            is an 8-character hexadecimal string.
          readOnly: true
          title: revisionId
          type: string
        revisionUpdateTime:
          description: "Output only. Last update timestamp: when the represented revision\
            \ was last modified."
          format: date-time
          readOnly: true
          title: revisionUpdateTime
          type: string
        sizeBytes:
          description: "Output only. The size of the spec file in bytes. If the spec\
            \ is gzipped, this is the size of the uncompressed spec."
          format: int32
          readOnly: true
          title: sizeBytes
          type: integer
        sourceUri:
          description: The original source URI of the spec (if one exists). This is
            an external location that can be used for reference purposes but which
            may not be authoritative since this external resource may change after
            the spec is retrieved.
          title: sourceUri
          type: string
      title: ApiSpec
      type: object
    ApiVersion:
      description: An ApiVersion describes a particular version of an API. ApiVersions
        are what consumers actually use.
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        name: name
        annotations:
          key: annotations
        description: description
        updateTime: 2000-01-23T04:56:07.000+00:00
        state: state
        labels:
          key: labels
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations attach non-identifying metadata to resources.\
            \ Annotation keys and values are less restricted than those of labels,\
            \ but should be generally used for small values of broad interest. Larger,\
            \ topic- specific metadata should be stored in Artifacts."
          title: annotations
          type: object
        createTime:
          description: Output only. Creation timestamp.
          format: date-time
          readOnly: true
          title: createTime
          type: string
        description:
          description: A detailed description.
          title: description
          type: string
        displayName:
          description: Human-meaningful name.
          title: displayName
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels attach identifying metadata to resources. Identifying\
            \ metadata can be used to filter list operations. Label keys and values\
            \ can be no longer than 64 characters (Unicode codepoints), can only contain\
            \ lowercase letters, numeric characters, underscores and dashes. International\
            \ characters are allowed. No more than 64 user labels can be associated\
            \ with one resource (System labels are excluded). See https://goo.gl/xmQnxf\
            \ for more information and examples of labels. System reserved label keys\
            \ are prefixed with \"apigeeregistry.googleapis.com/\" and cannot be changed."
          title: labels
          type: object
        name:
          description: Resource name.
          title: name
          type: string
        state:
          description: "A user-definable description of the lifecycle phase of this\
            \ API version. Format: free-form, but we expect single words that describe\
            \ API maturity, e.g. \"CONCEPT\", \"DESIGN\", \"DEVELOPMENT\", \"STAGING\"\
            , \"PRODUCTION\", \"DEPRECATED\", \"RETIRED\"."
          title: state
          type: string
        updateTime:
          description: Output only. Last update timestamp.
          format: date-time
          readOnly: true
          title: updateTime
          type: string
      title: ApiVersion
      type: object
    Artifact:
      description: "Artifacts of resources. Artifacts are unique (single-value) per\
        \ resource and are used to store metadata that is too large or numerous to\
        \ be stored directly on the resource. Since artifacts are stored separately\
        \ from parent resources, they should generally be used for metadata that is\
        \ needed infrequently, i.e. not for display in primary views of the resource\
        \ but perhaps displayed or downloaded upon request. The ListArtifacts method\
        \ allows artifacts to be quickly enumerated and checked for presence without\
        \ downloading their (potentially-large) contents."
      example:
        contents: contents
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        updateTime: 2000-01-23T04:56:07.000+00:00
        mimeType: mimeType
        hash: hash
        sizeBytes: 0
      properties:
        contents:
          description: "Input only. The contents of the artifact. Provided by API\
            \ callers when artifacts are created or replaced. To access the contents\
            \ of an artifact, use GetArtifactContents."
          format: bytes
          title: contents
          type: string
          writeOnly: true
        createTime:
          description: Output only. Creation timestamp.
          format: date-time
          readOnly: true
          title: createTime
          type: string
        hash:
          description: "Output only. A SHA-256 hash of the artifact's contents. If\
            \ the artifact is gzipped, this is the hash of the uncompressed artifact."
          readOnly: true
          title: hash
          type: string
        mimeType:
          description: A content type specifier for the artifact. Content type specifiers
            are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible
            "schema" parameter that specifies a schema for the stored information.
            Content types can specify compression. Currently only GZip compression
            is supported (indicated with "+gzip").
          title: mimeType
          type: string
        name:
          description: Resource name.
          title: name
          type: string
        sizeBytes:
          description: "Output only. The size of the artifact in bytes. If the artifact\
            \ is gzipped, this is the size of the uncompressed artifact."
          format: int32
          readOnly: true
          title: sizeBytes
          type: integer
        updateTime:
          description: Output only. Last update timestamp.
          format: date-time
          readOnly: true
          title: updateTime
          type: string
      title: Artifact
      type: object
    GoogleProtobufAny:
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that
        describes the type of the serialized message.
      example:
        '@type': '@type'
      properties:
        '@type':
          description: The type of the serialized message.
          type: string
      title: GoogleProtobufAny
      type: object
    ListApiDeploymentRevisionsResponse:
      description: Response message for ListApiDeploymentRevisionsResponse.
      example:
        nextPageToken: nextPageToken
        apiDeployments:
        - intendedAudience: intendedAudience
          displayName: displayName
          annotations:
            key: annotations
          description: description
          revisionCreateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          revisionId: revisionId
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          accessGuidance: accessGuidance
          endpointUri: endpointUri
          externalChannelUri: externalChannelUri
          revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
          apiSpecRevision: apiSpecRevision
        - intendedAudience: intendedAudience
          displayName: displayName
          annotations:
            key: annotations
          description: description
          revisionCreateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          revisionId: revisionId
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          accessGuidance: accessGuidance
          endpointUri: endpointUri
          externalChannelUri: externalChannelUri
          revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
          apiSpecRevision: apiSpecRevision
      properties:
        apiDeployments:
          description: The revisions of the deployment.
          items:
            $ref: '#/components/schemas/ApiDeployment'
          title: apiDeployments
          type: array
        nextPageToken:
          description: "A token that can be sent as `page_token` to retrieve the next\
            \ page. If this field is omitted, there are no subsequent pages."
          title: nextPageToken
          type: string
      title: ListApiDeploymentRevisionsResponse
      type: object
    ListApiDeploymentsResponse:
      description: Response message for ListApiDeployments.
      example:
        nextPageToken: nextPageToken
        apiDeployments:
        - intendedAudience: intendedAudience
          displayName: displayName
          annotations:
            key: annotations
          description: description
          revisionCreateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          revisionId: revisionId
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          accessGuidance: accessGuidance
          endpointUri: endpointUri
          externalChannelUri: externalChannelUri
          revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
          apiSpecRevision: apiSpecRevision
        - intendedAudience: intendedAudience
          displayName: displayName
          annotations:
            key: annotations
          description: description
          revisionCreateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          revisionId: revisionId
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          accessGuidance: accessGuidance
          endpointUri: endpointUri
          externalChannelUri: externalChannelUri
          revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
          apiSpecRevision: apiSpecRevision
      properties:
        apiDeployments:
          description: The deployments from the specified publisher.
          items:
            $ref: '#/components/schemas/ApiDeployment'
          title: apiDeployments
          type: array
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is omitted, there are no subsequent pages."
          title: nextPageToken
          type: string
      title: ListApiDeploymentsResponse
      type: object
    ListApiSpecRevisionsResponse:
      description: Response message for ListApiSpecRevisionsResponse.
      example:
        apiSpecs:
        - annotations:
            key: annotations
          description: description
          mimeType: mimeType
          revisionCreateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          sizeBytes: 0
          revisionId: revisionId
          filename: filename
          contents: contents
          createTime: 2000-01-23T04:56:07.000+00:00
          sourceUri: sourceUri
          name: name
          hash: hash
          revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
        - annotations:
            key: annotations
          description: description
          mimeType: mimeType
          revisionCreateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          sizeBytes: 0
          revisionId: revisionId
          filename: filename
          contents: contents
          createTime: 2000-01-23T04:56:07.000+00:00
          sourceUri: sourceUri
          name: name
          hash: hash
          revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
        nextPageToken: nextPageToken
      properties:
        apiSpecs:
          description: The revisions of the spec.
          items:
            $ref: '#/components/schemas/ApiSpec'
          title: apiSpecs
          type: array
        nextPageToken:
          description: "A token that can be sent as `page_token` to retrieve the next\
            \ page. If this field is omitted, there are no subsequent pages."
          title: nextPageToken
          type: string
      title: ListApiSpecRevisionsResponse
      type: object
    ListApiSpecsResponse:
      description: Response message for ListApiSpecs.
      example:
        apiSpecs:
        - annotations:
            key: annotations
          description: description
          mimeType: mimeType
          revisionCreateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          sizeBytes: 0
          revisionId: revisionId
          filename: filename
          contents: contents
          createTime: 2000-01-23T04:56:07.000+00:00
          sourceUri: sourceUri
          name: name
          hash: hash
          revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
        - annotations:
            key: annotations
          description: description
          mimeType: mimeType
          revisionCreateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          sizeBytes: 0
          revisionId: revisionId
          filename: filename
          contents: contents
          createTime: 2000-01-23T04:56:07.000+00:00
          sourceUri: sourceUri
          name: name
          hash: hash
          revisionUpdateTime: 2000-01-23T04:56:07.000+00:00
        nextPageToken: nextPageToken
      properties:
        apiSpecs:
          description: The specs from the specified publisher.
          items:
            $ref: '#/components/schemas/ApiSpec'
          title: apiSpecs
          type: array
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is omitted, there are no subsequent pages."
          title: nextPageToken
          type: string
      title: ListApiSpecsResponse
      type: object
    ListApiVersionsResponse:
      description: Response message for ListApiVersions.
      example:
        apiVersions:
        - createTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          annotations:
            key: annotations
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          state: state
          labels:
            key: labels
        - createTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          annotations:
            key: annotations
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          state: state
          labels:
            key: labels
        nextPageToken: nextPageToken
      properties:
        apiVersions:
          description: The versions from the specified publisher.
          items:
            $ref: '#/components/schemas/ApiVersion'
          title: apiVersions
          type: array
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is omitted, there are no subsequent pages."
          title: nextPageToken
          type: string
      title: ListApiVersionsResponse
      type: object
    ListApisResponse:
      description: Response message for ListApis.
      example:
        apis:
        - recommendedVersion: recommendedVersion
          createTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          annotations:
            key: annotations
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          availability: availability
          labels:
            key: labels
          recommendedDeployment: recommendedDeployment
        - recommendedVersion: recommendedVersion
          createTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          annotations:
            key: annotations
          description: description
          updateTime: 2000-01-23T04:56:07.000+00:00
          availability: availability
          labels:
            key: labels
          recommendedDeployment: recommendedDeployment
        nextPageToken: nextPageToken
      properties:
        apis:
          description: The APIs from the specified publisher.
          items:
            $ref: '#/components/schemas/Api'
          title: apis
          type: array
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is omitted, there are no subsequent pages."
          title: nextPageToken
          type: string
      title: ListApisResponse
      type: object
    ListArtifactsResponse:
      description: Response message for ListArtifacts.
      example:
        nextPageToken: nextPageToken
        artifacts:
        - contents: contents
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          updateTime: 2000-01-23T04:56:07.000+00:00
          mimeType: mimeType
          hash: hash
          sizeBytes: 0
        - contents: contents
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          updateTime: 2000-01-23T04:56:07.000+00:00
          mimeType: mimeType
          hash: hash
          sizeBytes: 0
      properties:
        artifacts:
          description: The artifacts from the specified publisher.
          items:
            $ref: '#/components/schemas/Artifact'
          title: artifacts
          type: array
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is omitted, there are no subsequent pages."
          title: nextPageToken
          type: string
      title: ListArtifactsResponse
      type: object
    RollbackApiDeploymentRequest:
      description: Request message for RollbackApiDeployment.
      example:
        revisionId: revisionId
        name: name
      properties:
        name:
          description: Required. The deployment being rolled back.
          title: name
          type: string
        revisionId:
          description: "Required. The revision ID to roll back to. It must be a revision\
            \ of the same deployment.   Example: c7cfa2a8"
          title: revisionId
          type: string
      required:
      - name
      - revisionId
      title: RollbackApiDeploymentRequest
      type: object
    RollbackApiSpecRequest:
      description: Request message for RollbackApiSpec.
      example:
        revisionId: revisionId
        name: name
      properties:
        name:
          description: Required. The spec being rolled back.
          title: name
          type: string
        revisionId:
          description: "Required. The revision ID to roll back to. It must be a revision\
            \ of the same spec.   Example: c7cfa2a8"
          title: revisionId
          type: string
      required:
      - name
      - revisionId
      title: RollbackApiSpecRequest
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - '@type': '@type'
        - '@type': '@type'
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          format: int32
          title: code
          type: integer
        details:
          description: A list of messages that carry the error details.  There is
            a common set of message types for APIs to use.
          items:
            $ref: '#/components/schemas/GoogleProtobufAny'
          title: details
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details]\
            \ field, or localized by the client."
          title: message
          type: string
      title: Status
      type: object
    TagApiDeploymentRevisionRequest:
      description: Request message for TagApiDeploymentRevision.
      example:
        name: name
        tag: tag
      properties:
        name:
          description: "Required. The name of the deployment to be tagged, including\
            \ the revision ID."
          title: name
          type: string
        tag:
          description: "Required. The tag to apply. The tag should be at most 40 characters,\
            \ and match `[a-z][a-z0-9-]{3,39}`."
          title: tag
          type: string
      required:
      - name
      - tag
      title: TagApiDeploymentRevisionRequest
      type: object
    TagApiSpecRevisionRequest:
      description: Request message for TagApiSpecRevision.
      example:
        name: name
        tag: tag
      properties:
        name:
          description: "Required. The name of the spec to be tagged, including the\
            \ revision ID."
          title: name
          type: string
        tag:
          description: "Required. The tag to apply. The tag should be at most 40 characters,\
            \ and match `[a-z][a-z0-9-]{3,39}`."
          title: tag
          type: string
      required:
      - name
      - tag
      title: TagApiSpecRevisionRequest
      type: object
