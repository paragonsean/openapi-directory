/**
 * Voodoo Manufacturing 3D Print API
 * Welcome to the Voodoo Manufacturing API docs!  Your Voodoo Manufacturing API key must be included with each request to the API. The API will look for the key in the \"api_key\" header of the request. <a href=\"https://voodoomfg.com/3d-print-api#get-access\" target=\"_blank\">You can request a key here.</a>  This API provides a programmatic interface for submitting printing orders to Voodoo Manufacturing. The general process for creating an order is as follows:   - Get a list of the available materials with the /materials endpoint   - Upload models to the API with the /models endpoint   - Get quotes for shipping methods with the /order/shipping endpoint   - Get a quote for an order with the /order/create endpoint   - Confirm the order with the /order/confirm endpoint  Uploaded models and orders can be retrieved either in bulk or by id at the /model and /order endpoints, respectively.  In some cases, you may wish to get a quote for a specific model without the context of an order. In this case, you may use the /model/quote (if you've already uploaded the model to the API) or the /model/quote_attrs (lets you quote based on calculated model attributes) endpoints. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@voodoomfg.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModel.h
 *
 * 
 */

#ifndef OAIModel_H
#define OAIModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModel : public OAIObject {
public:
    OAIModel();
    OAIModel(QString json);
    ~OAIModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getRenderingUrl() const;
    void setRenderingUrl(const QString &rendering_url);
    bool is_rendering_url_Set() const;
    bool is_rendering_url_Valid() const;

    double getSurfaceArea() const;
    void setSurfaceArea(const double &surface_area);
    bool is_surface_area_Set() const;
    bool is_surface_area_Valid() const;

    double getVolume() const;
    void setVolume(const double &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    double getX() const;
    void setX(const double &x);
    bool is_x_Set() const;
    bool is_x_Valid() const;

    double getY() const;
    void setY(const double &y);
    bool is_y_Set() const;
    bool is_y_Valid() const;

    double getZ() const;
    void setZ(const double &z);
    bool is_z_Set() const;
    bool is_z_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_rendering_url;
    bool m_rendering_url_isSet;
    bool m_rendering_url_isValid;

    double m_surface_area;
    bool m_surface_area_isSet;
    bool m_surface_area_isValid;

    double m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;

    double m_x;
    bool m_x_isSet;
    bool m_x_isValid;

    double m_y;
    bool m_y_isSet;
    bool m_y_isValid;

    double m_z;
    bool m_z_isSet;
    bool m_z_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModel)

#endif // OAIModel_H
