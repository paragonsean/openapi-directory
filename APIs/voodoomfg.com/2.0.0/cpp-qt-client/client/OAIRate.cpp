/**
 * Voodoo Manufacturing 3D Print API
 * Welcome to the Voodoo Manufacturing API docs!  Your Voodoo Manufacturing API key must be included with each request to the API. The API will look for the key in the \"api_key\" header of the request. <a href=\"https://voodoomfg.com/3d-print-api#get-access\" target=\"_blank\">You can request a key here.</a>  This API provides a programmatic interface for submitting printing orders to Voodoo Manufacturing. The general process for creating an order is as follows:   - Get a list of the available materials with the /materials endpoint   - Upload models to the API with the /models endpoint   - Get quotes for shipping methods with the /order/shipping endpoint   - Get a quote for an order with the /order/create endpoint   - Confirm the order with the /order/confirm endpoint  Uploaded models and orders can be retrieved either in bulk or by id at the /model and /order endpoints, respectively.  In some cases, you may wish to get a quote for a specific model without the context of an order. In this case, you may use the /model/quote (if you've already uploaded the model to the API) or the /model/quote_attrs (lets you quote based on calculated model attributes) endpoints. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@voodoomfg.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRate::OAIRate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRate::OAIRate() {
    this->initializeModel();
}

OAIRate::~OAIRate() {}

void OAIRate::initializeModel() {

    m_delivery_date_isSet = false;
    m_delivery_date_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_guaranteed_isSet = false;
    m_guaranteed_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_service_isSet = false;
    m_service_isValid = false;

    m_ship_date_isSet = false;
    m_ship_date_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIRate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRate::fromJsonObject(QJsonObject json) {

    m_delivery_date_isValid = ::OpenAPI::fromJsonValue(m_delivery_date, json[QString("delivery_date")]);
    m_delivery_date_isSet = !json[QString("delivery_date")].isNull() && m_delivery_date_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_guaranteed_isValid = ::OpenAPI::fromJsonValue(m_guaranteed, json[QString("guaranteed")]);
    m_guaranteed_isSet = !json[QString("guaranteed")].isNull() && m_guaranteed_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;

    m_ship_date_isValid = ::OpenAPI::fromJsonValue(m_ship_date, json[QString("ship_date")]);
    m_ship_date_isSet = !json[QString("ship_date")].isNull() && m_ship_date_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIRate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRate::asJsonObject() const {
    QJsonObject obj;
    if (m_delivery_date_isSet) {
        obj.insert(QString("delivery_date"), ::OpenAPI::toJsonValue(m_delivery_date));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_guaranteed_isSet) {
        obj.insert(QString("guaranteed"), ::OpenAPI::toJsonValue(m_guaranteed));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_service_isSet) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    if (m_ship_date_isSet) {
        obj.insert(QString("ship_date"), ::OpenAPI::toJsonValue(m_ship_date));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIRate::getDeliveryDate() const {
    return m_delivery_date;
}
void OAIRate::setDeliveryDate(const QString &delivery_date) {
    m_delivery_date = delivery_date;
    m_delivery_date_isSet = true;
}

bool OAIRate::is_delivery_date_Set() const{
    return m_delivery_date_isSet;
}

bool OAIRate::is_delivery_date_Valid() const{
    return m_delivery_date_isValid;
}

QString OAIRate::getDisplayName() const {
    return m_display_name;
}
void OAIRate::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIRate::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIRate::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIRate::isGuaranteed() const {
    return m_guaranteed;
}
void OAIRate::setGuaranteed(const bool &guaranteed) {
    m_guaranteed = guaranteed;
    m_guaranteed_isSet = true;
}

bool OAIRate::is_guaranteed_Set() const{
    return m_guaranteed_isSet;
}

bool OAIRate::is_guaranteed_Valid() const{
    return m_guaranteed_isValid;
}

double OAIRate::getPrice() const {
    return m_price;
}
void OAIRate::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIRate::is_price_Set() const{
    return m_price_isSet;
}

bool OAIRate::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIRate::getService() const {
    return m_service;
}
void OAIRate::setService(const QString &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAIRate::is_service_Set() const{
    return m_service_isSet;
}

bool OAIRate::is_service_Valid() const{
    return m_service_isValid;
}

QString OAIRate::getShipDate() const {
    return m_ship_date;
}
void OAIRate::setShipDate(const QString &ship_date) {
    m_ship_date = ship_date;
    m_ship_date_isSet = true;
}

bool OAIRate::is_ship_date_Set() const{
    return m_ship_date_isSet;
}

bool OAIRate::is_ship_date_Valid() const{
    return m_ship_date_isValid;
}

QString OAIRate::getValue() const {
    return m_value;
}
void OAIRate::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIRate::is_value_Set() const{
    return m_value_isSet;
}

bool OAIRate::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIRate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delivery_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guaranteed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
