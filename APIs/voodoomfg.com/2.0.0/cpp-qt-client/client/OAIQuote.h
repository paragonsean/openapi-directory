/**
 * Voodoo Manufacturing 3D Print API
 * Welcome to the Voodoo Manufacturing API docs!  Your Voodoo Manufacturing API key must be included with each request to the API. The API will look for the key in the \"api_key\" header of the request. <a href=\"https://voodoomfg.com/3d-print-api#get-access\" target=\"_blank\">You can request a key here.</a>  This API provides a programmatic interface for submitting printing orders to Voodoo Manufacturing. The general process for creating an order is as follows:   - Get a list of the available materials with the /materials endpoint   - Upload models to the API with the /models endpoint   - Get quotes for shipping methods with the /order/shipping endpoint   - Get a quote for an order with the /order/create endpoint   - Confirm the order with the /order/confirm endpoint  Uploaded models and orders can be retrieved either in bulk or by id at the /model and /order endpoints, respectively.  In some cases, you may wish to get a quote for a specific model without the context of an order. In this case, you may use the /model/quote (if you've already uploaded the model to the API) or the /model/quote_attrs (lets you quote based on calculated model attributes) endpoints. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@voodoomfg.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuote.h
 *
 * 
 */

#ifndef OAIQuote_H
#define OAIQuote_H

#include <QJsonObject>

#include "OAIProductionOptionsCosts.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProductionOptionsCosts;

class OAIQuote : public OAIObject {
public:
    OAIQuote();
    OAIQuote(QString json);
    ~OAIQuote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getErrors() const;
    void setErrors(const QList<QString> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    double getGrandTotal() const;
    void setGrandTotal(const double &grand_total);
    bool is_grand_total_Set() const;
    bool is_grand_total_Valid() const;

    double getItems() const;
    void setItems(const double &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    OAIProductionOptionsCosts getOptions() const;
    void setOptions(const OAIProductionOptionsCosts &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    double getShipping() const;
    void setShipping(const double &shipping);
    bool is_shipping_Set() const;
    bool is_shipping_Valid() const;

    double getTax() const;
    void setTax(const double &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    double m_grand_total;
    bool m_grand_total_isSet;
    bool m_grand_total_isValid;

    double m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    OAIProductionOptionsCosts m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    double m_shipping;
    bool m_shipping_isSet;
    bool m_shipping_isValid;

    double m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuote)

#endif // OAIQuote_H
