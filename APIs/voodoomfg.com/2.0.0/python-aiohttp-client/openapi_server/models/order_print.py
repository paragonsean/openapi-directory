# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.material import Material
from openapi_server.models.model import Model
from openapi_server import util


class OrderPrint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, material: Material=None, model: Model=None, quantity: int=None, units: str=None):
        """OrderPrint - a model defined in OpenAPI

        :param material: The material of this OrderPrint.
        :param model: The model of this OrderPrint.
        :param quantity: The quantity of this OrderPrint.
        :param units: The units of this OrderPrint.
        """
        self.openapi_types = {
            'material': Material,
            'model': Model,
            'quantity': int,
            'units': str
        }

        self.attribute_map = {
            'material': 'material',
            'model': 'model',
            'quantity': 'quantity',
            'units': 'units'
        }

        self._material = material
        self._model = model
        self._quantity = quantity
        self._units = units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderPrint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderPrint of this OrderPrint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def material(self):
        """Gets the material of this OrderPrint.


        :return: The material of this OrderPrint.
        :rtype: Material
        """
        return self._material

    @material.setter
    def material(self, material):
        """Sets the material of this OrderPrint.


        :param material: The material of this OrderPrint.
        :type material: Material
        """

        self._material = material

    @property
    def model(self):
        """Gets the model of this OrderPrint.


        :return: The model of this OrderPrint.
        :rtype: Model
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this OrderPrint.


        :param model: The model of this OrderPrint.
        :type model: Model
        """

        self._model = model

    @property
    def quantity(self):
        """Gets the quantity of this OrderPrint.

        The number of prints requested for this model and material pair.

        :return: The quantity of this OrderPrint.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this OrderPrint.

        The number of prints requested for this model and material pair.

        :param quantity: The quantity of this OrderPrint.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def units(self):
        """Gets the units of this OrderPrint.

        Units for the requested print. One of \"mm\", \"cm\", or \"in\".

        :return: The units of this OrderPrint.
        :rtype: str
        """
        return self._units

    @units.setter
    def units(self, units):
        """Sets the units of this OrderPrint.

        Units for the requested print. One of \"mm\", \"cm\", or \"in\".

        :param units: The units of this OrderPrint.
        :type units: str
        """

        self._units = units
