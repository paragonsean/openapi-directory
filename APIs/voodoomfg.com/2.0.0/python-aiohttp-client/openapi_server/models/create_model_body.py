# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateModelBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_url: str=None):
        """CreateModelBody - a model defined in OpenAPI

        :param file_url: The file_url of this CreateModelBody.
        """
        self.openapi_types = {
            'file_url': str
        }

        self.attribute_map = {
            'file_url': 'file_url'
        }

        self._file_url = file_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateModelBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateModelBody of this CreateModelBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_url(self):
        """Gets the file_url of this CreateModelBody.

        URL to download the model data from. The URL must end in .STL or .OBJ -- the extension of the final segment of the URL is used to determine how ot parse the file.

        :return: The file_url of this CreateModelBody.
        :rtype: str
        """
        return self._file_url

    @file_url.setter
    def file_url(self, file_url):
        """Sets the file_url of this CreateModelBody.

        URL to download the model data from. The URL must end in .STL or .OBJ -- the extension of the final segment of the URL is used to determine how ot parse the file.

        :param file_url: The file_url of this CreateModelBody.
        :type file_url: str
        """

        self._file_url = file_url
