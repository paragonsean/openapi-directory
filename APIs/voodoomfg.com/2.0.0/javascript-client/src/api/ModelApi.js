/**
 * Voodoo Manufacturing 3D Print API
 * Welcome to the Voodoo Manufacturing API docs!  Your Voodoo Manufacturing API key must be included with each request to the API. The API will look for the key in the \"api_key\" header of the request. <a href=\"https://voodoomfg.com/3d-print-api#get-access\" target=\"_blank\">You can request a key here.</a>  This API provides a programmatic interface for submitting printing orders to Voodoo Manufacturing. The general process for creating an order is as follows:   - Get a list of the available materials with the /materials endpoint   - Upload models to the API with the /models endpoint   - Get quotes for shipping methods with the /order/shipping endpoint   - Get a quote for an order with the /order/create endpoint   - Confirm the order with the /order/confirm endpoint  Uploaded models and orders can be retrieved either in bulk or by id at the /model and /order endpoints, respectively.  In some cases, you may wish to get a quote for a specific model without the context of an order. In this case, you may use the /model/quote (if you've already uploaded the model to the API) or the /model/quote_attrs (lets you quote based on calculated model attributes) endpoints. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@voodoomfg.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateModelBody from '../model/CreateModelBody';
import Model from '../model/Model';
import ModelQuote from '../model/ModelQuote';

/**
* Model service.
* @module api/ModelApi
* @version 2.0.0
*/
export default class ModelApi {

    /**
    * Constructs a new ModelApi. 
    * @alias module:api/ModelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the modelGet operation.
     * @callback module:api/ModelApi~modelGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Model>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the models you've created. 
     * Lists all of the models you've created. 
     * @param {module:api/ModelApi~modelGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Model>}
     */
    modelGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Voodoo Manufacturing API Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Model];
      return this.apiClient.callApi(
        '/model', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the modelModelIdGet operation.
     * @callback module:api/ModelApi~modelModelIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Model} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a previously created model by its id. 
     * In cases where you're ordering models you've created previously, you can fetch a specific model by its id. 
     * @param {Number} modelId 
     * @param {module:api/ModelApi~modelModelIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model}
     */
    modelModelIdGet(modelId, callback) {
      let postBody = null;
      // verify the required parameter 'modelId' is set
      if (modelId === undefined || modelId === null) {
        throw new Error("Missing the required parameter 'modelId' when calling modelModelIdGet");
      }

      let pathParams = {
        'model_id': modelId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Voodoo Manufacturing API Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Model;
      return this.apiClient.callApi(
        '/model/{model_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the modelPost operation.
     * @callback module:api/ModelApi~modelPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Model} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Models represent 3D design files that you'd like to produce. Creating models is generally the first step in creating an order. 
     * Downloads the model data from the URL specified by file_url and saves it as a model. As a part of the model upload process, the file is run through a program that repairs the mesh (closing holes, flipping inverted normals, etc). In some cases, this may alter the geometry of your model. If you're noticing bad results for your created models, you might consider repairing your files before submitting them. 
     * @param {module:model/CreateModelBody} body 
     * @param {module:api/ModelApi~modelPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model}
     */
    modelPost(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling modelPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Voodoo Manufacturing API Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Model;
      return this.apiClient.callApi(
        '/model', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the modelQuoteAttrsGet operation.
     * @callback module:api/ModelApi~modelQuoteAttrsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelQuote} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a quote for a model with the given attributes. 
     * This endpoint will provide a quote for a model matching the submitted parameters. Note that this quote may be different than the quote provided by /model/quote in the case that your attribute calculations differ from the ones used by Voodoo Manufacturing. 
     * @param {Number} x The calculated unitless x dimension of this model's bounding box.
     * @param {Number} y The calculated unitless y dimension of this model's bounding box.
     * @param {Number} z The calculated unitless z dimension of this model's bounding box.
     * @param {Number} volume The calculated unitless volume of the model.
     * @param {Number} surfaceArea The calculated unitless surface area of the model.
     * @param {Number} materialId The unique id of the desired material.
     * @param {Number} quantity The number of units in this quote.
     * @param {String} units The units of the model file. Either \"mm\", \"cm\", or \"in\". The correct value to pass here depends on which design program you're using. Defaults to \"mm\".
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optionsOrientation] Indicates whether or not this model needs to be oriented prior to printing. If your model is already oriented for 3D printing, you can omit this flag (or set it to false) and it will not be re-oriented prior to printing. If true, it will be re-oriented prior to printing. If you're not sure if your model is oriented, you should set this flag to true. There is an additional charge for orientation.
     * @param {module:api/ModelApi~modelQuoteAttrsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelQuote}
     */
    modelQuoteAttrsGet(x, y, z, volume, surfaceArea, materialId, quantity, units, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'x' is set
      if (x === undefined || x === null) {
        throw new Error("Missing the required parameter 'x' when calling modelQuoteAttrsGet");
      }
      // verify the required parameter 'y' is set
      if (y === undefined || y === null) {
        throw new Error("Missing the required parameter 'y' when calling modelQuoteAttrsGet");
      }
      // verify the required parameter 'z' is set
      if (z === undefined || z === null) {
        throw new Error("Missing the required parameter 'z' when calling modelQuoteAttrsGet");
      }
      // verify the required parameter 'volume' is set
      if (volume === undefined || volume === null) {
        throw new Error("Missing the required parameter 'volume' when calling modelQuoteAttrsGet");
      }
      // verify the required parameter 'surfaceArea' is set
      if (surfaceArea === undefined || surfaceArea === null) {
        throw new Error("Missing the required parameter 'surfaceArea' when calling modelQuoteAttrsGet");
      }
      // verify the required parameter 'materialId' is set
      if (materialId === undefined || materialId === null) {
        throw new Error("Missing the required parameter 'materialId' when calling modelQuoteAttrsGet");
      }
      // verify the required parameter 'quantity' is set
      if (quantity === undefined || quantity === null) {
        throw new Error("Missing the required parameter 'quantity' when calling modelQuoteAttrsGet");
      }
      // verify the required parameter 'units' is set
      if (units === undefined || units === null) {
        throw new Error("Missing the required parameter 'units' when calling modelQuoteAttrsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'x': x,
        'y': y,
        'z': z,
        'volume': volume,
        'surface_area': surfaceArea,
        'material_id': materialId,
        'quantity': quantity,
        'units': units,
        'options[orientation]': opts['optionsOrientation']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Voodoo Manufacturing API Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelQuote;
      return this.apiClient.callApi(
        '/model/quote_attrs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the modelQuoteGet operation.
     * @callback module:api/ModelApi~modelQuoteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelQuote} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a quote a given model id. 
     * Calculates a quote for the given model in the given material and quantity. This endpoint required that you've already uploaded the model to our servers -- to get a quote for a model you haven't yet uploaded, you can try /model/quote_attrs. 
     * @param {Number} modelId The unique id of the model you'd like to quote.
     * @param {Number} materialId The unique id of the desired material.
     * @param {Number} quantity The number of units in this quote.
     * @param {String} units The units of the model file. Either \"mm\", \"cm\", or \"in\". The correct value to pass here depends on which design program you're using. Defaults to \"mm\".
     * @param {Object} opts Optional parameters
     * @param {Boolean} [optionsOrientation] Indicates whether or not this model needs to be oriented prior to printing. If your model is already oriented for 3D printing, you can omit this flag (or set it to false) and it will not be re-oriented prior to printing. If true, it will be re-oriented prior to printing. If you're not sure if your model is oriented, you should set this flag to true. There is an additional charge for orientation.
     * @param {module:api/ModelApi~modelQuoteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelQuote}
     */
    modelQuoteGet(modelId, materialId, quantity, units, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'modelId' is set
      if (modelId === undefined || modelId === null) {
        throw new Error("Missing the required parameter 'modelId' when calling modelQuoteGet");
      }
      // verify the required parameter 'materialId' is set
      if (materialId === undefined || materialId === null) {
        throw new Error("Missing the required parameter 'materialId' when calling modelQuoteGet");
      }
      // verify the required parameter 'quantity' is set
      if (quantity === undefined || quantity === null) {
        throw new Error("Missing the required parameter 'quantity' when calling modelQuoteGet");
      }
      // verify the required parameter 'units' is set
      if (units === undefined || units === null) {
        throw new Error("Missing the required parameter 'units' when calling modelQuoteGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'model_id': modelId,
        'material_id': materialId,
        'quantity': quantity,
        'units': units,
        'options[orientation]': opts['optionsOrientation']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Voodoo Manufacturing API Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelQuote;
      return this.apiClient.callApi(
        '/model/quote', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
