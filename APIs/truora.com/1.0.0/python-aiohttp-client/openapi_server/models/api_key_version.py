# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_key_version_changelog import APIKeyVersionChangelog
from openapi_server import util


class APIKeyVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changelog: APIKeyVersionChangelog=None, expiration_date: date=None, release_date: date=None, version: str=None):
        """APIKeyVersion - a model defined in OpenAPI

        :param changelog: The changelog of this APIKeyVersion.
        :param expiration_date: The expiration_date of this APIKeyVersion.
        :param release_date: The release_date of this APIKeyVersion.
        :param version: The version of this APIKeyVersion.
        """
        self.openapi_types = {
            'changelog': APIKeyVersionChangelog,
            'expiration_date': date,
            'release_date': date,
            'version': str
        }

        self.attribute_map = {
            'changelog': 'changelog',
            'expiration_date': 'expiration_date',
            'release_date': 'release_date',
            'version': 'version'
        }

        self._changelog = changelog
        self._expiration_date = expiration_date
        self._release_date = release_date
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIKeyVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIKeyVersion of this APIKeyVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changelog(self):
        """Gets the changelog of this APIKeyVersion.


        :return: The changelog of this APIKeyVersion.
        :rtype: APIKeyVersionChangelog
        """
        return self._changelog

    @changelog.setter
    def changelog(self, changelog):
        """Sets the changelog of this APIKeyVersion.


        :param changelog: The changelog of this APIKeyVersion.
        :type changelog: APIKeyVersionChangelog
        """

        self._changelog = changelog

    @property
    def expiration_date(self):
        """Gets the expiration_date of this APIKeyVersion.

        Expiration date of the API key version

        :return: The expiration_date of this APIKeyVersion.
        :rtype: date
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this APIKeyVersion.

        Expiration date of the API key version

        :param expiration_date: The expiration_date of this APIKeyVersion.
        :type expiration_date: date
        """

        self._expiration_date = expiration_date

    @property
    def release_date(self):
        """Gets the release_date of this APIKeyVersion.

        Release date of the API key version

        :return: The release_date of this APIKeyVersion.
        :rtype: date
        """
        return self._release_date

    @release_date.setter
    def release_date(self, release_date):
        """Sets the release_date of this APIKeyVersion.

        Release date of the API key version

        :param release_date: The release_date of this APIKeyVersion.
        :type release_date: date
        """

        self._release_date = release_date

    @property
    def version(self):
        """Gets the version of this APIKeyVersion.

        API key version

        :return: The version of this APIKeyVersion.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this APIKeyVersion.

        API key version

        :param version: The version of this APIKeyVersion.
        :type version: str
        """

        self._version = version
