# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VehicleSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capacity: int=None, color: str=None, license_plate: str=None, manufacturer: str=None, model: str=None, number_of_doors: int=None, obligatory_insurance_expiration_date: date=None, obligatory_insurance_status: str=None, service_type: str=None, vehicle_category: str=None, vehicle_id: str=None, vehicle_type: str=None, year: int=None):
        """VehicleSummary - a model defined in OpenAPI

        :param capacity: The capacity of this VehicleSummary.
        :param color: The color of this VehicleSummary.
        :param license_plate: The license_plate of this VehicleSummary.
        :param manufacturer: The manufacturer of this VehicleSummary.
        :param model: The model of this VehicleSummary.
        :param number_of_doors: The number_of_doors of this VehicleSummary.
        :param obligatory_insurance_expiration_date: The obligatory_insurance_expiration_date of this VehicleSummary.
        :param obligatory_insurance_status: The obligatory_insurance_status of this VehicleSummary.
        :param service_type: The service_type of this VehicleSummary.
        :param vehicle_category: The vehicle_category of this VehicleSummary.
        :param vehicle_id: The vehicle_id of this VehicleSummary.
        :param vehicle_type: The vehicle_type of this VehicleSummary.
        :param year: The year of this VehicleSummary.
        """
        self.openapi_types = {
            'capacity': int,
            'color': str,
            'license_plate': str,
            'manufacturer': str,
            'model': str,
            'number_of_doors': int,
            'obligatory_insurance_expiration_date': date,
            'obligatory_insurance_status': str,
            'service_type': str,
            'vehicle_category': str,
            'vehicle_id': str,
            'vehicle_type': str,
            'year': int
        }

        self.attribute_map = {
            'capacity': 'capacity',
            'color': 'color',
            'license_plate': 'license_plate',
            'manufacturer': 'manufacturer',
            'model': 'model',
            'number_of_doors': 'number_of_doors',
            'obligatory_insurance_expiration_date': 'obligatory_insurance_expiration_date',
            'obligatory_insurance_status': 'obligatory_insurance_status',
            'service_type': 'service_type',
            'vehicle_category': 'vehicle_category',
            'vehicle_id': 'vehicle_id',
            'vehicle_type': 'vehicle_type',
            'year': 'year'
        }

        self._capacity = capacity
        self._color = color
        self._license_plate = license_plate
        self._manufacturer = manufacturer
        self._model = model
        self._number_of_doors = number_of_doors
        self._obligatory_insurance_expiration_date = obligatory_insurance_expiration_date
        self._obligatory_insurance_status = obligatory_insurance_status
        self._service_type = service_type
        self._vehicle_category = vehicle_category
        self._vehicle_id = vehicle_id
        self._vehicle_type = vehicle_type
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VehicleSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VehicleSummary of this VehicleSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capacity(self):
        """Gets the capacity of this VehicleSummary.

        Number of passengers allowed to travel in the vehicle

        :return: The capacity of this VehicleSummary.
        :rtype: int
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity):
        """Sets the capacity of this VehicleSummary.

        Number of passengers allowed to travel in the vehicle

        :param capacity: The capacity of this VehicleSummary.
        :type capacity: int
        """

        self._capacity = capacity

    @property
    def color(self):
        """Gets the color of this VehicleSummary.

        Vehicle color

        :return: The color of this VehicleSummary.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this VehicleSummary.

        Vehicle color

        :param color: The color of this VehicleSummary.
        :type color: str
        """

        self._color = color

    @property
    def license_plate(self):
        """Gets the license_plate of this VehicleSummary.

        Vehicle license plate

        :return: The license_plate of this VehicleSummary.
        :rtype: str
        """
        return self._license_plate

    @license_plate.setter
    def license_plate(self, license_plate):
        """Sets the license_plate of this VehicleSummary.

        Vehicle license plate

        :param license_plate: The license_plate of this VehicleSummary.
        :type license_plate: str
        """

        self._license_plate = license_plate

    @property
    def manufacturer(self):
        """Gets the manufacturer of this VehicleSummary.

        Vehicle manufacturer

        :return: The manufacturer of this VehicleSummary.
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this VehicleSummary.

        Vehicle manufacturer

        :param manufacturer: The manufacturer of this VehicleSummary.
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def model(self):
        """Gets the model of this VehicleSummary.

        Vehicle model

        :return: The model of this VehicleSummary.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this VehicleSummary.

        Vehicle model

        :param model: The model of this VehicleSummary.
        :type model: str
        """

        self._model = model

    @property
    def number_of_doors(self):
        """Gets the number_of_doors of this VehicleSummary.

        Vehicle door count

        :return: The number_of_doors of this VehicleSummary.
        :rtype: int
        """
        return self._number_of_doors

    @number_of_doors.setter
    def number_of_doors(self, number_of_doors):
        """Sets the number_of_doors of this VehicleSummary.

        Vehicle door count

        :param number_of_doors: The number_of_doors of this VehicleSummary.
        :type number_of_doors: int
        """

        self._number_of_doors = number_of_doors

    @property
    def obligatory_insurance_expiration_date(self):
        """Gets the obligatory_insurance_expiration_date of this VehicleSummary.

        Expiration date of the vehicle compulsory insurance 

        :return: The obligatory_insurance_expiration_date of this VehicleSummary.
        :rtype: date
        """
        return self._obligatory_insurance_expiration_date

    @obligatory_insurance_expiration_date.setter
    def obligatory_insurance_expiration_date(self, obligatory_insurance_expiration_date):
        """Sets the obligatory_insurance_expiration_date of this VehicleSummary.

        Expiration date of the vehicle compulsory insurance 

        :param obligatory_insurance_expiration_date: The obligatory_insurance_expiration_date of this VehicleSummary.
        :type obligatory_insurance_expiration_date: date
        """

        self._obligatory_insurance_expiration_date = obligatory_insurance_expiration_date

    @property
    def obligatory_insurance_status(self):
        """Gets the obligatory_insurance_status of this VehicleSummary.

        Status of the vehicle compulsory insurances

        :return: The obligatory_insurance_status of this VehicleSummary.
        :rtype: str
        """
        return self._obligatory_insurance_status

    @obligatory_insurance_status.setter
    def obligatory_insurance_status(self, obligatory_insurance_status):
        """Sets the obligatory_insurance_status of this VehicleSummary.

        Status of the vehicle compulsory insurances

        :param obligatory_insurance_status: The obligatory_insurance_status of this VehicleSummary.
        :type obligatory_insurance_status: str
        """

        self._obligatory_insurance_status = obligatory_insurance_status

    @property
    def service_type(self):
        """Gets the service_type of this VehicleSummary.

        Vehicle service type

        :return: The service_type of this VehicleSummary.
        :rtype: str
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type):
        """Sets the service_type of this VehicleSummary.

        Vehicle service type

        :param service_type: The service_type of this VehicleSummary.
        :type service_type: str
        """

        self._service_type = service_type

    @property
    def vehicle_category(self):
        """Gets the vehicle_category of this VehicleSummary.

        Vehicle category

        :return: The vehicle_category of this VehicleSummary.
        :rtype: str
        """
        return self._vehicle_category

    @vehicle_category.setter
    def vehicle_category(self, vehicle_category):
        """Sets the vehicle_category of this VehicleSummary.

        Vehicle category

        :param vehicle_category: The vehicle_category of this VehicleSummary.
        :type vehicle_category: str
        """

        self._vehicle_category = vehicle_category

    @property
    def vehicle_id(self):
        """Gets the vehicle_id of this VehicleSummary.

        Vehicle ID

        :return: The vehicle_id of this VehicleSummary.
        :rtype: str
        """
        return self._vehicle_id

    @vehicle_id.setter
    def vehicle_id(self, vehicle_id):
        """Sets the vehicle_id of this VehicleSummary.

        Vehicle ID

        :param vehicle_id: The vehicle_id of this VehicleSummary.
        :type vehicle_id: str
        """

        self._vehicle_id = vehicle_id

    @property
    def vehicle_type(self):
        """Gets the vehicle_type of this VehicleSummary.

        Vehicle type

        :return: The vehicle_type of this VehicleSummary.
        :rtype: str
        """
        return self._vehicle_type

    @vehicle_type.setter
    def vehicle_type(self, vehicle_type):
        """Sets the vehicle_type of this VehicleSummary.

        Vehicle type

        :param vehicle_type: The vehicle_type of this VehicleSummary.
        :type vehicle_type: str
        """

        self._vehicle_type = vehicle_type

    @property
    def year(self):
        """Gets the year of this VehicleSummary.

        Vehicle model year

        :return: The year of this VehicleSummary.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this VehicleSummary.

        Vehicle model year

        :param year: The year of this VehicleSummary.
        :type year: int
        """

        self._year = year
