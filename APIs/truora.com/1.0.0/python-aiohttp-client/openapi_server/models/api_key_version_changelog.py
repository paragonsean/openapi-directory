# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APIKeyVersionChangelog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added: List[str]=None, changed: List[str]=None, deprecated: List[str]=None, fixed: List[str]=None, notes: str=None, removed: List[str]=None, security: List[str]=None):
        """APIKeyVersionChangelog - a model defined in OpenAPI

        :param added: The added of this APIKeyVersionChangelog.
        :param changed: The changed of this APIKeyVersionChangelog.
        :param deprecated: The deprecated of this APIKeyVersionChangelog.
        :param fixed: The fixed of this APIKeyVersionChangelog.
        :param notes: The notes of this APIKeyVersionChangelog.
        :param removed: The removed of this APIKeyVersionChangelog.
        :param security: The security of this APIKeyVersionChangelog.
        """
        self.openapi_types = {
            'added': List[str],
            'changed': List[str],
            'deprecated': List[str],
            'fixed': List[str],
            'notes': str,
            'removed': List[str],
            'security': List[str]
        }

        self.attribute_map = {
            'added': 'added',
            'changed': 'changed',
            'deprecated': 'deprecated',
            'fixed': 'fixed',
            'notes': 'notes',
            'removed': 'removed',
            'security': 'security'
        }

        self._added = added
        self._changed = changed
        self._deprecated = deprecated
        self._fixed = fixed
        self._notes = notes
        self._removed = removed
        self._security = security

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIKeyVersionChangelog':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIKeyVersionChangelog of this APIKeyVersionChangelog.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added(self):
        """Gets the added of this APIKeyVersionChangelog.

        List of added features

        :return: The added of this APIKeyVersionChangelog.
        :rtype: List[str]
        """
        return self._added

    @added.setter
    def added(self, added):
        """Sets the added of this APIKeyVersionChangelog.

        List of added features

        :param added: The added of this APIKeyVersionChangelog.
        :type added: List[str]
        """

        self._added = added

    @property
    def changed(self):
        """Gets the changed of this APIKeyVersionChangelog.

        List of changed features

        :return: The changed of this APIKeyVersionChangelog.
        :rtype: List[str]
        """
        return self._changed

    @changed.setter
    def changed(self, changed):
        """Sets the changed of this APIKeyVersionChangelog.

        List of changed features

        :param changed: The changed of this APIKeyVersionChangelog.
        :type changed: List[str]
        """

        self._changed = changed

    @property
    def deprecated(self):
        """Gets the deprecated of this APIKeyVersionChangelog.

        List of deprecated features

        :return: The deprecated of this APIKeyVersionChangelog.
        :rtype: List[str]
        """
        return self._deprecated

    @deprecated.setter
    def deprecated(self, deprecated):
        """Sets the deprecated of this APIKeyVersionChangelog.

        List of deprecated features

        :param deprecated: The deprecated of this APIKeyVersionChangelog.
        :type deprecated: List[str]
        """

        self._deprecated = deprecated

    @property
    def fixed(self):
        """Gets the fixed of this APIKeyVersionChangelog.

        List of fixed features

        :return: The fixed of this APIKeyVersionChangelog.
        :rtype: List[str]
        """
        return self._fixed

    @fixed.setter
    def fixed(self, fixed):
        """Sets the fixed of this APIKeyVersionChangelog.

        List of fixed features

        :param fixed: The fixed of this APIKeyVersionChangelog.
        :type fixed: List[str]
        """

        self._fixed = fixed

    @property
    def notes(self):
        """Gets the notes of this APIKeyVersionChangelog.

        Additional notes

        :return: The notes of this APIKeyVersionChangelog.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this APIKeyVersionChangelog.

        Additional notes

        :param notes: The notes of this APIKeyVersionChangelog.
        :type notes: str
        """

        self._notes = notes

    @property
    def removed(self):
        """Gets the removed of this APIKeyVersionChangelog.

        List of removed features

        :return: The removed of this APIKeyVersionChangelog.
        :rtype: List[str]
        """
        return self._removed

    @removed.setter
    def removed(self, removed):
        """Sets the removed of this APIKeyVersionChangelog.

        List of removed features

        :param removed: The removed of this APIKeyVersionChangelog.
        :type removed: List[str]
        """

        self._removed = removed

    @property
    def security(self):
        """Gets the security of this APIKeyVersionChangelog.

        List of security features added

        :return: The security of this APIKeyVersionChangelog.
        :rtype: List[str]
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this APIKeyVersionChangelog.

        List of security features added

        :param security: The security of this APIKeyVersionChangelog.
        :type security: List[str]
        """

        self._security = security
