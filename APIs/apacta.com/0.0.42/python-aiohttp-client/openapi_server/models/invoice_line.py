# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvoiceLine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, created_by_id: str=None, deleted: str=None, description: str=None, discount_percent: int=None, discount_text: str=None, ean_product_id: str=None, form_id: str=None, id: str=None, invoice_id: str=None, material_id: str=None, modified: str=None, name: str=None, parent_id: str=None, product_bundle_id: str=None, product_id: str=None, quantity: int=None, selling_price: float=None, type: str=None, user_id: str=None):
        """InvoiceLine - a model defined in OpenAPI

        :param created: The created of this InvoiceLine.
        :param created_by_id: The created_by_id of this InvoiceLine.
        :param deleted: The deleted of this InvoiceLine.
        :param description: The description of this InvoiceLine.
        :param discount_percent: The discount_percent of this InvoiceLine.
        :param discount_text: The discount_text of this InvoiceLine.
        :param ean_product_id: The ean_product_id of this InvoiceLine.
        :param form_id: The form_id of this InvoiceLine.
        :param id: The id of this InvoiceLine.
        :param invoice_id: The invoice_id of this InvoiceLine.
        :param material_id: The material_id of this InvoiceLine.
        :param modified: The modified of this InvoiceLine.
        :param name: The name of this InvoiceLine.
        :param parent_id: The parent_id of this InvoiceLine.
        :param product_bundle_id: The product_bundle_id of this InvoiceLine.
        :param product_id: The product_id of this InvoiceLine.
        :param quantity: The quantity of this InvoiceLine.
        :param selling_price: The selling_price of this InvoiceLine.
        :param type: The type of this InvoiceLine.
        :param user_id: The user_id of this InvoiceLine.
        """
        self.openapi_types = {
            'created': str,
            'created_by_id': str,
            'deleted': str,
            'description': str,
            'discount_percent': int,
            'discount_text': str,
            'ean_product_id': str,
            'form_id': str,
            'id': str,
            'invoice_id': str,
            'material_id': str,
            'modified': str,
            'name': str,
            'parent_id': str,
            'product_bundle_id': str,
            'product_id': str,
            'quantity': int,
            'selling_price': float,
            'type': str,
            'user_id': str
        }

        self.attribute_map = {
            'created': 'created',
            'created_by_id': 'created_by_id',
            'deleted': 'deleted',
            'description': 'description',
            'discount_percent': 'discount_percent',
            'discount_text': 'discount_text',
            'ean_product_id': 'ean_product_id',
            'form_id': 'form_id',
            'id': 'id',
            'invoice_id': 'invoice_id',
            'material_id': 'material_id',
            'modified': 'modified',
            'name': 'name',
            'parent_id': 'parent_id',
            'product_bundle_id': 'product_bundle_id',
            'product_id': 'product_id',
            'quantity': 'quantity',
            'selling_price': 'selling_price',
            'type': 'type',
            'user_id': 'user_id'
        }

        self._created = created
        self._created_by_id = created_by_id
        self._deleted = deleted
        self._description = description
        self._discount_percent = discount_percent
        self._discount_text = discount_text
        self._ean_product_id = ean_product_id
        self._form_id = form_id
        self._id = id
        self._invoice_id = invoice_id
        self._material_id = material_id
        self._modified = modified
        self._name = name
        self._parent_id = parent_id
        self._product_bundle_id = product_bundle_id
        self._product_id = product_id
        self._quantity = quantity
        self._selling_price = selling_price
        self._type = type
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceLine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceLine of this InvoiceLine.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this InvoiceLine.


        :return: The created of this InvoiceLine.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this InvoiceLine.


        :param created: The created of this InvoiceLine.
        :type created: str
        """

        self._created = created

    @property
    def created_by_id(self):
        """Gets the created_by_id of this InvoiceLine.


        :return: The created_by_id of this InvoiceLine.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this InvoiceLine.


        :param created_by_id: The created_by_id of this InvoiceLine.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def deleted(self):
        """Gets the deleted of this InvoiceLine.

        Only present if it's a deleted object

        :return: The deleted of this InvoiceLine.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this InvoiceLine.

        Only present if it's a deleted object

        :param deleted: The deleted of this InvoiceLine.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def description(self):
        """Gets the description of this InvoiceLine.


        :return: The description of this InvoiceLine.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InvoiceLine.


        :param description: The description of this InvoiceLine.
        :type description: str
        """
        if description is not None and len(description) > 8192:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `8192`")

        self._description = description

    @property
    def discount_percent(self):
        """Gets the discount_percent of this InvoiceLine.


        :return: The discount_percent of this InvoiceLine.
        :rtype: int
        """
        return self._discount_percent

    @discount_percent.setter
    def discount_percent(self, discount_percent):
        """Sets the discount_percent of this InvoiceLine.


        :param discount_percent: The discount_percent of this InvoiceLine.
        :type discount_percent: int
        """

        self._discount_percent = discount_percent

    @property
    def discount_text(self):
        """Gets the discount_text of this InvoiceLine.


        :return: The discount_text of this InvoiceLine.
        :rtype: str
        """
        return self._discount_text

    @discount_text.setter
    def discount_text(self, discount_text):
        """Sets the discount_text of this InvoiceLine.


        :param discount_text: The discount_text of this InvoiceLine.
        :type discount_text: str
        """
        if discount_text is not None and len(discount_text) > 255:
            raise ValueError("Invalid value for `discount_text`, length must be less than or equal to `255`")

        self._discount_text = discount_text

    @property
    def ean_product_id(self):
        """Gets the ean_product_id of this InvoiceLine.


        :return: The ean_product_id of this InvoiceLine.
        :rtype: str
        """
        return self._ean_product_id

    @ean_product_id.setter
    def ean_product_id(self, ean_product_id):
        """Sets the ean_product_id of this InvoiceLine.


        :param ean_product_id: The ean_product_id of this InvoiceLine.
        :type ean_product_id: str
        """

        self._ean_product_id = ean_product_id

    @property
    def form_id(self):
        """Gets the form_id of this InvoiceLine.


        :return: The form_id of this InvoiceLine.
        :rtype: str
        """
        return self._form_id

    @form_id.setter
    def form_id(self, form_id):
        """Sets the form_id of this InvoiceLine.


        :param form_id: The form_id of this InvoiceLine.
        :type form_id: str
        """

        self._form_id = form_id

    @property
    def id(self):
        """Gets the id of this InvoiceLine.


        :return: The id of this InvoiceLine.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InvoiceLine.


        :param id: The id of this InvoiceLine.
        :type id: str
        """

        self._id = id

    @property
    def invoice_id(self):
        """Gets the invoice_id of this InvoiceLine.


        :return: The invoice_id of this InvoiceLine.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this InvoiceLine.


        :param invoice_id: The invoice_id of this InvoiceLine.
        :type invoice_id: str
        """

        self._invoice_id = invoice_id

    @property
    def material_id(self):
        """Gets the material_id of this InvoiceLine.


        :return: The material_id of this InvoiceLine.
        :rtype: str
        """
        return self._material_id

    @material_id.setter
    def material_id(self, material_id):
        """Sets the material_id of this InvoiceLine.


        :param material_id: The material_id of this InvoiceLine.
        :type material_id: str
        """

        self._material_id = material_id

    @property
    def modified(self):
        """Gets the modified of this InvoiceLine.


        :return: The modified of this InvoiceLine.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this InvoiceLine.


        :param modified: The modified of this InvoiceLine.
        :type modified: str
        """

        self._modified = modified

    @property
    def name(self):
        """Gets the name of this InvoiceLine.


        :return: The name of this InvoiceLine.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InvoiceLine.


        :param name: The name of this InvoiceLine.
        :type name: str
        """
        if name is not None and len(name) > 2048:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `2048`")

        self._name = name

    @property
    def parent_id(self):
        """Gets the parent_id of this InvoiceLine.


        :return: The parent_id of this InvoiceLine.
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this InvoiceLine.


        :param parent_id: The parent_id of this InvoiceLine.
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def product_bundle_id(self):
        """Gets the product_bundle_id of this InvoiceLine.


        :return: The product_bundle_id of this InvoiceLine.
        :rtype: str
        """
        return self._product_bundle_id

    @product_bundle_id.setter
    def product_bundle_id(self, product_bundle_id):
        """Sets the product_bundle_id of this InvoiceLine.


        :param product_bundle_id: The product_bundle_id of this InvoiceLine.
        :type product_bundle_id: str
        """

        self._product_bundle_id = product_bundle_id

    @property
    def product_id(self):
        """Gets the product_id of this InvoiceLine.


        :return: The product_id of this InvoiceLine.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this InvoiceLine.


        :param product_id: The product_id of this InvoiceLine.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def quantity(self):
        """Gets the quantity of this InvoiceLine.


        :return: The quantity of this InvoiceLine.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this InvoiceLine.


        :param quantity: The quantity of this InvoiceLine.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def selling_price(self):
        """Gets the selling_price of this InvoiceLine.


        :return: The selling_price of this InvoiceLine.
        :rtype: float
        """
        return self._selling_price

    @selling_price.setter
    def selling_price(self, selling_price):
        """Sets the selling_price of this InvoiceLine.


        :param selling_price: The selling_price of this InvoiceLine.
        :type selling_price: float
        """

        self._selling_price = selling_price

    @property
    def type(self):
        """Gets the type of this InvoiceLine.


        :return: The type of this InvoiceLine.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InvoiceLine.


        :param type: The type of this InvoiceLine.
        :type type: str
        """
        allowed_values = ["normal", "text", "bundle"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def user_id(self):
        """Gets the user_id of this InvoiceLine.


        :return: The user_id of this InvoiceLine.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this InvoiceLine.


        :param user_id: The user_id of this InvoiceLine.
        :type user_id: str
        """

        self._user_id = user_id
