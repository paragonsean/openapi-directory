# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, count: float=None):
        """GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner - a model defined in OpenAPI

        :param amount: The amount of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.
        :param count: The count of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.
        """
        self.openapi_types = {
            'amount': float,
            'count': float
        }

        self.attribute_map = {
            'amount': 'amount',
            'count': 'count'
        }

        self._amount = amount
        self._count = count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getCompaniesVendorsExpenseStatistics_200_response_data_inner_last_month_inner of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.


        :return: The amount of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.


        :param amount: The amount of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.
        :type amount: float
        """

        self._amount = amount

    @property
    def count(self):
        """Gets the count of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.


        :return: The count of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.
        :rtype: float
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.


        :param count: The count of this GetCompaniesVendorsExpenseStatistics200ResponseDataInnerLastMonthInner.
        :type count: float
        """

        self._count = count
