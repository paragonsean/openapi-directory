# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvoicesInvoiceIdPutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_id: str=None, date_from: date=None, date_to: date=None, erp_id: str=None, erp_payment_term_id: str=None, invoice_number: int=None, is_draft: bool=None, is_locked: bool=None, is_offer: bool=None, issued_date: date=None, message: str=None, offer_number: int=None, payment_due_date: date=None, payment_term_id: str=None, project_id: str=None, reference: str=None, vat_percent: int=None):
        """InvoicesInvoiceIdPutRequest - a model defined in OpenAPI

        :param contact_id: The contact_id of this InvoicesInvoiceIdPutRequest.
        :param date_from: The date_from of this InvoicesInvoiceIdPutRequest.
        :param date_to: The date_to of this InvoicesInvoiceIdPutRequest.
        :param erp_id: The erp_id of this InvoicesInvoiceIdPutRequest.
        :param erp_payment_term_id: The erp_payment_term_id of this InvoicesInvoiceIdPutRequest.
        :param invoice_number: The invoice_number of this InvoicesInvoiceIdPutRequest.
        :param is_draft: The is_draft of this InvoicesInvoiceIdPutRequest.
        :param is_locked: The is_locked of this InvoicesInvoiceIdPutRequest.
        :param is_offer: The is_offer of this InvoicesInvoiceIdPutRequest.
        :param issued_date: The issued_date of this InvoicesInvoiceIdPutRequest.
        :param message: The message of this InvoicesInvoiceIdPutRequest.
        :param offer_number: The offer_number of this InvoicesInvoiceIdPutRequest.
        :param payment_due_date: The payment_due_date of this InvoicesInvoiceIdPutRequest.
        :param payment_term_id: The payment_term_id of this InvoicesInvoiceIdPutRequest.
        :param project_id: The project_id of this InvoicesInvoiceIdPutRequest.
        :param reference: The reference of this InvoicesInvoiceIdPutRequest.
        :param vat_percent: The vat_percent of this InvoicesInvoiceIdPutRequest.
        """
        self.openapi_types = {
            'contact_id': str,
            'date_from': date,
            'date_to': date,
            'erp_id': str,
            'erp_payment_term_id': str,
            'invoice_number': int,
            'is_draft': bool,
            'is_locked': bool,
            'is_offer': bool,
            'issued_date': date,
            'message': str,
            'offer_number': int,
            'payment_due_date': date,
            'payment_term_id': str,
            'project_id': str,
            'reference': str,
            'vat_percent': int
        }

        self.attribute_map = {
            'contact_id': 'contact_id',
            'date_from': 'date_from',
            'date_to': 'date_to',
            'erp_id': 'erp_id',
            'erp_payment_term_id': 'erp_payment_term_id',
            'invoice_number': 'invoice_number',
            'is_draft': 'is_draft',
            'is_locked': 'is_locked',
            'is_offer': 'is_offer',
            'issued_date': 'issued_date',
            'message': 'message',
            'offer_number': 'offer_number',
            'payment_due_date': 'payment_due_date',
            'payment_term_id': 'payment_term_id',
            'project_id': 'project_id',
            'reference': 'reference',
            'vat_percent': 'vat_percent'
        }

        self._contact_id = contact_id
        self._date_from = date_from
        self._date_to = date_to
        self._erp_id = erp_id
        self._erp_payment_term_id = erp_payment_term_id
        self._invoice_number = invoice_number
        self._is_draft = is_draft
        self._is_locked = is_locked
        self._is_offer = is_offer
        self._issued_date = issued_date
        self._message = message
        self._offer_number = offer_number
        self._payment_due_date = payment_due_date
        self._payment_term_id = payment_term_id
        self._project_id = project_id
        self._reference = reference
        self._vat_percent = vat_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoicesInvoiceIdPutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _invoices__invoice_id__put_request of this InvoicesInvoiceIdPutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_id(self):
        """Gets the contact_id of this InvoicesInvoiceIdPutRequest.


        :return: The contact_id of this InvoicesInvoiceIdPutRequest.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this InvoicesInvoiceIdPutRequest.


        :param contact_id: The contact_id of this InvoicesInvoiceIdPutRequest.
        :type contact_id: str
        """

        self._contact_id = contact_id

    @property
    def date_from(self):
        """Gets the date_from of this InvoicesInvoiceIdPutRequest.


        :return: The date_from of this InvoicesInvoiceIdPutRequest.
        :rtype: date
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this InvoicesInvoiceIdPutRequest.


        :param date_from: The date_from of this InvoicesInvoiceIdPutRequest.
        :type date_from: date
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this InvoicesInvoiceIdPutRequest.


        :return: The date_to of this InvoicesInvoiceIdPutRequest.
        :rtype: date
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this InvoicesInvoiceIdPutRequest.


        :param date_to: The date_to of this InvoicesInvoiceIdPutRequest.
        :type date_to: date
        """

        self._date_to = date_to

    @property
    def erp_id(self):
        """Gets the erp_id of this InvoicesInvoiceIdPutRequest.


        :return: The erp_id of this InvoicesInvoiceIdPutRequest.
        :rtype: str
        """
        return self._erp_id

    @erp_id.setter
    def erp_id(self, erp_id):
        """Sets the erp_id of this InvoicesInvoiceIdPutRequest.


        :param erp_id: The erp_id of this InvoicesInvoiceIdPutRequest.
        :type erp_id: str
        """
        if erp_id is not None and len(erp_id) > 255:
            raise ValueError("Invalid value for `erp_id`, length must be less than or equal to `255`")

        self._erp_id = erp_id

    @property
    def erp_payment_term_id(self):
        """Gets the erp_payment_term_id of this InvoicesInvoiceIdPutRequest.


        :return: The erp_payment_term_id of this InvoicesInvoiceIdPutRequest.
        :rtype: str
        """
        return self._erp_payment_term_id

    @erp_payment_term_id.setter
    def erp_payment_term_id(self, erp_payment_term_id):
        """Sets the erp_payment_term_id of this InvoicesInvoiceIdPutRequest.


        :param erp_payment_term_id: The erp_payment_term_id of this InvoicesInvoiceIdPutRequest.
        :type erp_payment_term_id: str
        """
        if erp_payment_term_id is not None and len(erp_payment_term_id) > 255:
            raise ValueError("Invalid value for `erp_payment_term_id`, length must be less than or equal to `255`")

        self._erp_payment_term_id = erp_payment_term_id

    @property
    def invoice_number(self):
        """Gets the invoice_number of this InvoicesInvoiceIdPutRequest.


        :return: The invoice_number of this InvoicesInvoiceIdPutRequest.
        :rtype: int
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this InvoicesInvoiceIdPutRequest.


        :param invoice_number: The invoice_number of this InvoicesInvoiceIdPutRequest.
        :type invoice_number: int
        """

        self._invoice_number = invoice_number

    @property
    def is_draft(self):
        """Gets the is_draft of this InvoicesInvoiceIdPutRequest.


        :return: The is_draft of this InvoicesInvoiceIdPutRequest.
        :rtype: bool
        """
        return self._is_draft

    @is_draft.setter
    def is_draft(self, is_draft):
        """Sets the is_draft of this InvoicesInvoiceIdPutRequest.


        :param is_draft: The is_draft of this InvoicesInvoiceIdPutRequest.
        :type is_draft: bool
        """

        self._is_draft = is_draft

    @property
    def is_locked(self):
        """Gets the is_locked of this InvoicesInvoiceIdPutRequest.


        :return: The is_locked of this InvoicesInvoiceIdPutRequest.
        :rtype: bool
        """
        return self._is_locked

    @is_locked.setter
    def is_locked(self, is_locked):
        """Sets the is_locked of this InvoicesInvoiceIdPutRequest.


        :param is_locked: The is_locked of this InvoicesInvoiceIdPutRequest.
        :type is_locked: bool
        """

        self._is_locked = is_locked

    @property
    def is_offer(self):
        """Gets the is_offer of this InvoicesInvoiceIdPutRequest.


        :return: The is_offer of this InvoicesInvoiceIdPutRequest.
        :rtype: bool
        """
        return self._is_offer

    @is_offer.setter
    def is_offer(self, is_offer):
        """Sets the is_offer of this InvoicesInvoiceIdPutRequest.


        :param is_offer: The is_offer of this InvoicesInvoiceIdPutRequest.
        :type is_offer: bool
        """

        self._is_offer = is_offer

    @property
    def issued_date(self):
        """Gets the issued_date of this InvoicesInvoiceIdPutRequest.


        :return: The issued_date of this InvoicesInvoiceIdPutRequest.
        :rtype: date
        """
        return self._issued_date

    @issued_date.setter
    def issued_date(self, issued_date):
        """Sets the issued_date of this InvoicesInvoiceIdPutRequest.


        :param issued_date: The issued_date of this InvoicesInvoiceIdPutRequest.
        :type issued_date: date
        """

        self._issued_date = issued_date

    @property
    def message(self):
        """Gets the message of this InvoicesInvoiceIdPutRequest.


        :return: The message of this InvoicesInvoiceIdPutRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InvoicesInvoiceIdPutRequest.


        :param message: The message of this InvoicesInvoiceIdPutRequest.
        :type message: str
        """
        if message is not None and len(message) > 8192:
            raise ValueError("Invalid value for `message`, length must be less than or equal to `8192`")

        self._message = message

    @property
    def offer_number(self):
        """Gets the offer_number of this InvoicesInvoiceIdPutRequest.


        :return: The offer_number of this InvoicesInvoiceIdPutRequest.
        :rtype: int
        """
        return self._offer_number

    @offer_number.setter
    def offer_number(self, offer_number):
        """Sets the offer_number of this InvoicesInvoiceIdPutRequest.


        :param offer_number: The offer_number of this InvoicesInvoiceIdPutRequest.
        :type offer_number: int
        """

        self._offer_number = offer_number

    @property
    def payment_due_date(self):
        """Gets the payment_due_date of this InvoicesInvoiceIdPutRequest.


        :return: The payment_due_date of this InvoicesInvoiceIdPutRequest.
        :rtype: date
        """
        return self._payment_due_date

    @payment_due_date.setter
    def payment_due_date(self, payment_due_date):
        """Sets the payment_due_date of this InvoicesInvoiceIdPutRequest.


        :param payment_due_date: The payment_due_date of this InvoicesInvoiceIdPutRequest.
        :type payment_due_date: date
        """

        self._payment_due_date = payment_due_date

    @property
    def payment_term_id(self):
        """Gets the payment_term_id of this InvoicesInvoiceIdPutRequest.


        :return: The payment_term_id of this InvoicesInvoiceIdPutRequest.
        :rtype: str
        """
        return self._payment_term_id

    @payment_term_id.setter
    def payment_term_id(self, payment_term_id):
        """Sets the payment_term_id of this InvoicesInvoiceIdPutRequest.


        :param payment_term_id: The payment_term_id of this InvoicesInvoiceIdPutRequest.
        :type payment_term_id: str
        """

        self._payment_term_id = payment_term_id

    @property
    def project_id(self):
        """Gets the project_id of this InvoicesInvoiceIdPutRequest.


        :return: The project_id of this InvoicesInvoiceIdPutRequest.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this InvoicesInvoiceIdPutRequest.


        :param project_id: The project_id of this InvoicesInvoiceIdPutRequest.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def reference(self):
        """Gets the reference of this InvoicesInvoiceIdPutRequest.


        :return: The reference of this InvoicesInvoiceIdPutRequest.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this InvoicesInvoiceIdPutRequest.


        :param reference: The reference of this InvoicesInvoiceIdPutRequest.
        :type reference: str
        """
        if reference is not None and len(reference) > 255:
            raise ValueError("Invalid value for `reference`, length must be less than or equal to `255`")

        self._reference = reference

    @property
    def vat_percent(self):
        """Gets the vat_percent of this InvoicesInvoiceIdPutRequest.


        :return: The vat_percent of this InvoicesInvoiceIdPutRequest.
        :rtype: int
        """
        return self._vat_percent

    @vat_percent.setter
    def vat_percent(self, vat_percent):
        """Sets the vat_percent of this InvoicesInvoiceIdPutRequest.


        :param vat_percent: The vat_percent of this InvoicesInvoiceIdPutRequest.
        :type vat_percent: int
        """

        self._vat_percent = vat_percent
