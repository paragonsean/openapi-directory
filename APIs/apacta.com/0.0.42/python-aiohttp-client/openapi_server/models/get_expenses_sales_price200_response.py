# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetExpensesSalesPrice200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expenses_sales_price: float=None):
        """GetExpensesSalesPrice200Response - a model defined in OpenAPI

        :param expenses_sales_price: The expenses_sales_price of this GetExpensesSalesPrice200Response.
        """
        self.openapi_types = {
            'expenses_sales_price': float
        }

        self.attribute_map = {
            'expenses_sales_price': 'expensesSalesPrice'
        }

        self._expenses_sales_price = expenses_sales_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetExpensesSalesPrice200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getExpensesSalesPrice_200_response of this GetExpensesSalesPrice200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expenses_sales_price(self):
        """Gets the expenses_sales_price of this GetExpensesSalesPrice200Response.


        :return: The expenses_sales_price of this GetExpensesSalesPrice200Response.
        :rtype: float
        """
        return self._expenses_sales_price

    @expenses_sales_price.setter
    def expenses_sales_price(self, expenses_sales_price):
        """Sets the expenses_sales_price of this GetExpensesSalesPrice200Response.


        :param expenses_sales_price: The expenses_sales_price of this GetExpensesSalesPrice200Response.
        :type expenses_sales_price: float
        """

        self._expenses_sales_price = expenses_sales_price
