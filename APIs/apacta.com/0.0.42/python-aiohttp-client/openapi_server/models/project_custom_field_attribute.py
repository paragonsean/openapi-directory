# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectCustomFieldAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_type: str=None, company_id: str=None, created: str=None, created_by_id: str=None, deleted: str=None, id: str=None, is_active: bool=None, modified: str=None, name: str=None, placement: int=None):
        """ProjectCustomFieldAttribute - a model defined in OpenAPI

        :param access_type: The access_type of this ProjectCustomFieldAttribute.
        :param company_id: The company_id of this ProjectCustomFieldAttribute.
        :param created: The created of this ProjectCustomFieldAttribute.
        :param created_by_id: The created_by_id of this ProjectCustomFieldAttribute.
        :param deleted: The deleted of this ProjectCustomFieldAttribute.
        :param id: The id of this ProjectCustomFieldAttribute.
        :param is_active: The is_active of this ProjectCustomFieldAttribute.
        :param modified: The modified of this ProjectCustomFieldAttribute.
        :param name: The name of this ProjectCustomFieldAttribute.
        :param placement: The placement of this ProjectCustomFieldAttribute.
        """
        self.openapi_types = {
            'access_type': str,
            'company_id': str,
            'created': str,
            'created_by_id': str,
            'deleted': str,
            'id': str,
            'is_active': bool,
            'modified': str,
            'name': str,
            'placement': int
        }

        self.attribute_map = {
            'access_type': 'access_type',
            'company_id': 'company_id',
            'created': 'created',
            'created_by_id': 'created_by_id',
            'deleted': 'deleted',
            'id': 'id',
            'is_active': 'is_active',
            'modified': 'modified',
            'name': 'name',
            'placement': 'placement'
        }

        self._access_type = access_type
        self._company_id = company_id
        self._created = created
        self._created_by_id = created_by_id
        self._deleted = deleted
        self._id = id
        self._is_active = is_active
        self._modified = modified
        self._name = name
        self._placement = placement

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectCustomFieldAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectCustomFieldAttribute of this ProjectCustomFieldAttribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_type(self):
        """Gets the access_type of this ProjectCustomFieldAttribute.


        :return: The access_type of this ProjectCustomFieldAttribute.
        :rtype: str
        """
        return self._access_type

    @access_type.setter
    def access_type(self, access_type):
        """Sets the access_type of this ProjectCustomFieldAttribute.


        :param access_type: The access_type of this ProjectCustomFieldAttribute.
        :type access_type: str
        """
        if access_type is not None and len(access_type) > 255:
            raise ValueError("Invalid value for `access_type`, length must be less than or equal to `255`")

        self._access_type = access_type

    @property
    def company_id(self):
        """Gets the company_id of this ProjectCustomFieldAttribute.


        :return: The company_id of this ProjectCustomFieldAttribute.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this ProjectCustomFieldAttribute.


        :param company_id: The company_id of this ProjectCustomFieldAttribute.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def created(self):
        """Gets the created of this ProjectCustomFieldAttribute.


        :return: The created of this ProjectCustomFieldAttribute.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ProjectCustomFieldAttribute.


        :param created: The created of this ProjectCustomFieldAttribute.
        :type created: str
        """

        self._created = created

    @property
    def created_by_id(self):
        """Gets the created_by_id of this ProjectCustomFieldAttribute.

        Read-only

        :return: The created_by_id of this ProjectCustomFieldAttribute.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this ProjectCustomFieldAttribute.

        Read-only

        :param created_by_id: The created_by_id of this ProjectCustomFieldAttribute.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def deleted(self):
        """Gets the deleted of this ProjectCustomFieldAttribute.

        Only present if it's a deleted object

        :return: The deleted of this ProjectCustomFieldAttribute.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this ProjectCustomFieldAttribute.

        Only present if it's a deleted object

        :param deleted: The deleted of this ProjectCustomFieldAttribute.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this ProjectCustomFieldAttribute.


        :return: The id of this ProjectCustomFieldAttribute.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProjectCustomFieldAttribute.


        :param id: The id of this ProjectCustomFieldAttribute.
        :type id: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this ProjectCustomFieldAttribute.


        :return: The is_active of this ProjectCustomFieldAttribute.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this ProjectCustomFieldAttribute.


        :param is_active: The is_active of this ProjectCustomFieldAttribute.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def modified(self):
        """Gets the modified of this ProjectCustomFieldAttribute.


        :return: The modified of this ProjectCustomFieldAttribute.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this ProjectCustomFieldAttribute.


        :param modified: The modified of this ProjectCustomFieldAttribute.
        :type modified: str
        """

        self._modified = modified

    @property
    def name(self):
        """Gets the name of this ProjectCustomFieldAttribute.


        :return: The name of this ProjectCustomFieldAttribute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectCustomFieldAttribute.


        :param name: The name of this ProjectCustomFieldAttribute.
        :type name: str
        """
        if name is not None and len(name) > 255:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")

        self._name = name

    @property
    def placement(self):
        """Gets the placement of this ProjectCustomFieldAttribute.


        :return: The placement of this ProjectCustomFieldAttribute.
        :rtype: int
        """
        return self._placement

    @placement.setter
    def placement(self, placement):
        """Sets the placement of this ProjectCustomFieldAttribute.


        :param placement: The placement of this ProjectCustomFieldAttribute.
        :type placement: int
        """

        self._placement = placement
