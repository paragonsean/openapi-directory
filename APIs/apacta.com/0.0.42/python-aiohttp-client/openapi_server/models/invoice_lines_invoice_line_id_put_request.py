# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvoiceLinesInvoiceLineIdPutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, discount_percent: int=None, discount_text: str=None, invoice_id: str=None, name: str=None, product_id: str=None, quantity: int=None, selling_price: float=None, user_id: str=None):
        """InvoiceLinesInvoiceLineIdPutRequest - a model defined in OpenAPI

        :param description: The description of this InvoiceLinesInvoiceLineIdPutRequest.
        :param discount_percent: The discount_percent of this InvoiceLinesInvoiceLineIdPutRequest.
        :param discount_text: The discount_text of this InvoiceLinesInvoiceLineIdPutRequest.
        :param invoice_id: The invoice_id of this InvoiceLinesInvoiceLineIdPutRequest.
        :param name: The name of this InvoiceLinesInvoiceLineIdPutRequest.
        :param product_id: The product_id of this InvoiceLinesInvoiceLineIdPutRequest.
        :param quantity: The quantity of this InvoiceLinesInvoiceLineIdPutRequest.
        :param selling_price: The selling_price of this InvoiceLinesInvoiceLineIdPutRequest.
        :param user_id: The user_id of this InvoiceLinesInvoiceLineIdPutRequest.
        """
        self.openapi_types = {
            'description': str,
            'discount_percent': int,
            'discount_text': str,
            'invoice_id': str,
            'name': str,
            'product_id': str,
            'quantity': int,
            'selling_price': float,
            'user_id': str
        }

        self.attribute_map = {
            'description': 'description',
            'discount_percent': 'discount_percent',
            'discount_text': 'discount_text',
            'invoice_id': 'invoice_id',
            'name': 'name',
            'product_id': 'product_id',
            'quantity': 'quantity',
            'selling_price': 'selling_price',
            'user_id': 'user_id'
        }

        self._description = description
        self._discount_percent = discount_percent
        self._discount_text = discount_text
        self._invoice_id = invoice_id
        self._name = name
        self._product_id = product_id
        self._quantity = quantity
        self._selling_price = selling_price
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceLinesInvoiceLineIdPutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _invoice_lines__invoice_line_id__put_request of this InvoiceLinesInvoiceLineIdPutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The description of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InvoiceLinesInvoiceLineIdPutRequest.


        :param description: The description of this InvoiceLinesInvoiceLineIdPutRequest.
        :type description: str
        """
        if description is not None and len(description) > 8192:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `8192`")

        self._description = description

    @property
    def discount_percent(self):
        """Gets the discount_percent of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The discount_percent of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: int
        """
        return self._discount_percent

    @discount_percent.setter
    def discount_percent(self, discount_percent):
        """Sets the discount_percent of this InvoiceLinesInvoiceLineIdPutRequest.


        :param discount_percent: The discount_percent of this InvoiceLinesInvoiceLineIdPutRequest.
        :type discount_percent: int
        """

        self._discount_percent = discount_percent

    @property
    def discount_text(self):
        """Gets the discount_text of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The discount_text of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: str
        """
        return self._discount_text

    @discount_text.setter
    def discount_text(self, discount_text):
        """Sets the discount_text of this InvoiceLinesInvoiceLineIdPutRequest.


        :param discount_text: The discount_text of this InvoiceLinesInvoiceLineIdPutRequest.
        :type discount_text: str
        """
        if discount_text is not None and len(discount_text) > 255:
            raise ValueError("Invalid value for `discount_text`, length must be less than or equal to `255`")

        self._discount_text = discount_text

    @property
    def invoice_id(self):
        """Gets the invoice_id of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The invoice_id of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this InvoiceLinesInvoiceLineIdPutRequest.


        :param invoice_id: The invoice_id of this InvoiceLinesInvoiceLineIdPutRequest.
        :type invoice_id: str
        """

        self._invoice_id = invoice_id

    @property
    def name(self):
        """Gets the name of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The name of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InvoiceLinesInvoiceLineIdPutRequest.


        :param name: The name of this InvoiceLinesInvoiceLineIdPutRequest.
        :type name: str
        """
        if name is not None and len(name) > 2048:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `2048`")

        self._name = name

    @property
    def product_id(self):
        """Gets the product_id of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The product_id of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this InvoiceLinesInvoiceLineIdPutRequest.


        :param product_id: The product_id of this InvoiceLinesInvoiceLineIdPutRequest.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def quantity(self):
        """Gets the quantity of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The quantity of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this InvoiceLinesInvoiceLineIdPutRequest.


        :param quantity: The quantity of this InvoiceLinesInvoiceLineIdPutRequest.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def selling_price(self):
        """Gets the selling_price of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The selling_price of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: float
        """
        return self._selling_price

    @selling_price.setter
    def selling_price(self, selling_price):
        """Sets the selling_price of this InvoiceLinesInvoiceLineIdPutRequest.


        :param selling_price: The selling_price of this InvoiceLinesInvoiceLineIdPutRequest.
        :type selling_price: float
        """

        self._selling_price = selling_price

    @property
    def user_id(self):
        """Gets the user_id of this InvoiceLinesInvoiceLineIdPutRequest.


        :return: The user_id of this InvoiceLinesInvoiceLineIdPutRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this InvoiceLinesInvoiceLineIdPutRequest.


        :param user_id: The user_id of this InvoiceLinesInvoiceLineIdPutRequest.
        :type user_id: str
        """

        self._user_id = user_id
