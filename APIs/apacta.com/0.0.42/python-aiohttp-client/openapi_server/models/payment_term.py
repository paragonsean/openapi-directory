# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PaymentTerm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, created_by_id: str=None, days_of_credit: int=None, deleted: str=None, id: str=None, modified: str=None, payment_term_type_id: str=None):
        """PaymentTerm - a model defined in OpenAPI

        :param created: The created of this PaymentTerm.
        :param created_by_id: The created_by_id of this PaymentTerm.
        :param days_of_credit: The days_of_credit of this PaymentTerm.
        :param deleted: The deleted of this PaymentTerm.
        :param id: The id of this PaymentTerm.
        :param modified: The modified of this PaymentTerm.
        :param payment_term_type_id: The payment_term_type_id of this PaymentTerm.
        """
        self.openapi_types = {
            'created': str,
            'created_by_id': str,
            'days_of_credit': int,
            'deleted': str,
            'id': str,
            'modified': str,
            'payment_term_type_id': str
        }

        self.attribute_map = {
            'created': 'created',
            'created_by_id': 'created_by_id',
            'days_of_credit': 'days_of_credit',
            'deleted': 'deleted',
            'id': 'id',
            'modified': 'modified',
            'payment_term_type_id': 'payment_term_type_id'
        }

        self._created = created
        self._created_by_id = created_by_id
        self._days_of_credit = days_of_credit
        self._deleted = deleted
        self._id = id
        self._modified = modified
        self._payment_term_type_id = payment_term_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentTerm':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentTerm of this PaymentTerm.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this PaymentTerm.


        :return: The created of this PaymentTerm.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this PaymentTerm.


        :param created: The created of this PaymentTerm.
        :type created: str
        """

        self._created = created

    @property
    def created_by_id(self):
        """Gets the created_by_id of this PaymentTerm.


        :return: The created_by_id of this PaymentTerm.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this PaymentTerm.


        :param created_by_id: The created_by_id of this PaymentTerm.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def days_of_credit(self):
        """Gets the days_of_credit of this PaymentTerm.


        :return: The days_of_credit of this PaymentTerm.
        :rtype: int
        """
        return self._days_of_credit

    @days_of_credit.setter
    def days_of_credit(self, days_of_credit):
        """Sets the days_of_credit of this PaymentTerm.


        :param days_of_credit: The days_of_credit of this PaymentTerm.
        :type days_of_credit: int
        """

        self._days_of_credit = days_of_credit

    @property
    def deleted(self):
        """Gets the deleted of this PaymentTerm.

        Only present if it's a deleted object

        :return: The deleted of this PaymentTerm.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this PaymentTerm.

        Only present if it's a deleted object

        :param deleted: The deleted of this PaymentTerm.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this PaymentTerm.


        :return: The id of this PaymentTerm.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PaymentTerm.


        :param id: The id of this PaymentTerm.
        :type id: str
        """

        self._id = id

    @property
    def modified(self):
        """Gets the modified of this PaymentTerm.


        :return: The modified of this PaymentTerm.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this PaymentTerm.


        :param modified: The modified of this PaymentTerm.
        :type modified: str
        """

        self._modified = modified

    @property
    def payment_term_type_id(self):
        """Gets the payment_term_type_id of this PaymentTerm.


        :return: The payment_term_type_id of this PaymentTerm.
        :rtype: str
        """
        return self._payment_term_type_id

    @payment_term_type_id.setter
    def payment_term_type_id(self, payment_term_type_id):
        """Sets the payment_term_type_id of this PaymentTerm.


        :param payment_term_type_id: The payment_term_type_id of this PaymentTerm.
        :type payment_term_type_id: str
        """

        self._payment_term_type_id = payment_term_type_id
