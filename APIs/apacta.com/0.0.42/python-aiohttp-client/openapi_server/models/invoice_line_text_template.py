# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvoiceLineTextTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_id: str=None, created: str=None, created_by_id: str=None, deleted: str=None, html: str=None, id: str=None, image: str=None, modified: str=None):
        """InvoiceLineTextTemplate - a model defined in OpenAPI

        :param company_id: The company_id of this InvoiceLineTextTemplate.
        :param created: The created of this InvoiceLineTextTemplate.
        :param created_by_id: The created_by_id of this InvoiceLineTextTemplate.
        :param deleted: The deleted of this InvoiceLineTextTemplate.
        :param html: The html of this InvoiceLineTextTemplate.
        :param id: The id of this InvoiceLineTextTemplate.
        :param image: The image of this InvoiceLineTextTemplate.
        :param modified: The modified of this InvoiceLineTextTemplate.
        """
        self.openapi_types = {
            'company_id': str,
            'created': str,
            'created_by_id': str,
            'deleted': str,
            'html': str,
            'id': str,
            'image': str,
            'modified': str
        }

        self.attribute_map = {
            'company_id': 'company_id',
            'created': 'created',
            'created_by_id': 'created_by_id',
            'deleted': 'deleted',
            'html': 'html',
            'id': 'id',
            'image': 'image',
            'modified': 'modified'
        }

        self._company_id = company_id
        self._created = created
        self._created_by_id = created_by_id
        self._deleted = deleted
        self._html = html
        self._id = id
        self._image = image
        self._modified = modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceLineTextTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceLineTextTemplate of this InvoiceLineTextTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_id(self):
        """Gets the company_id of this InvoiceLineTextTemplate.


        :return: The company_id of this InvoiceLineTextTemplate.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this InvoiceLineTextTemplate.


        :param company_id: The company_id of this InvoiceLineTextTemplate.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def created(self):
        """Gets the created of this InvoiceLineTextTemplate.


        :return: The created of this InvoiceLineTextTemplate.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this InvoiceLineTextTemplate.


        :param created: The created of this InvoiceLineTextTemplate.
        :type created: str
        """

        self._created = created

    @property
    def created_by_id(self):
        """Gets the created_by_id of this InvoiceLineTextTemplate.


        :return: The created_by_id of this InvoiceLineTextTemplate.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this InvoiceLineTextTemplate.


        :param created_by_id: The created_by_id of this InvoiceLineTextTemplate.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def deleted(self):
        """Gets the deleted of this InvoiceLineTextTemplate.

        Only present if it's a deleted object

        :return: The deleted of this InvoiceLineTextTemplate.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this InvoiceLineTextTemplate.

        Only present if it's a deleted object

        :param deleted: The deleted of this InvoiceLineTextTemplate.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def html(self):
        """Gets the html of this InvoiceLineTextTemplate.


        :return: The html of this InvoiceLineTextTemplate.
        :rtype: str
        """
        return self._html

    @html.setter
    def html(self, html):
        """Sets the html of this InvoiceLineTextTemplate.


        :param html: The html of this InvoiceLineTextTemplate.
        :type html: str
        """

        self._html = html

    @property
    def id(self):
        """Gets the id of this InvoiceLineTextTemplate.


        :return: The id of this InvoiceLineTextTemplate.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InvoiceLineTextTemplate.


        :param id: The id of this InvoiceLineTextTemplate.
        :type id: str
        """

        self._id = id

    @property
    def image(self):
        """Gets the image of this InvoiceLineTextTemplate.


        :return: The image of this InvoiceLineTextTemplate.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this InvoiceLineTextTemplate.


        :param image: The image of this InvoiceLineTextTemplate.
        :type image: str
        """
        if image is not None and len(image) > 255:
            raise ValueError("Invalid value for `image`, length must be less than or equal to `255`")

        self._image = image

    @property
    def modified(self):
        """Gets the modified of this InvoiceLineTextTemplate.


        :return: The modified of this InvoiceLineTextTemplate.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this InvoiceLineTextTemplate.


        :param modified: The modified of this InvoiceLineTextTemplate.
        :type modified: str
        """

        self._modified = modified
