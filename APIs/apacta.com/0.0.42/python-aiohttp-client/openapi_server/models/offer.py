# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Offer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, all_lines_one_line: bool=None, all_products_one_line: bool=None, all_working_hours_one_line: bool=None, city_id: str=None, company_id: str=None, contact_id: str=None, created: str=None, created_by_id: str=None, deleted: str=None, description: str=None, discount_percent: int=None, erp_payment_term_id: str=None, expiraton_date: str=None, id: str=None, issue_date: date=None, modified: str=None, modified_by_id: str=None, offer_number: int=None, offer_status_id: str=None, payment_term_id: str=None, rejection_reason: str=None, sender_id: str=None, show_employee_name: bool=None, show_offer_lines: bool=None, show_payment_term: bool=None, show_prices: bool=None, show_product_images: bool=None, show_products_product_bundle: bool=None, slug: str=None, status: str=None, title: str=None, vat_percent: int=None):
        """Offer - a model defined in OpenAPI

        :param address: The address of this Offer.
        :param all_lines_one_line: The all_lines_one_line of this Offer.
        :param all_products_one_line: The all_products_one_line of this Offer.
        :param all_working_hours_one_line: The all_working_hours_one_line of this Offer.
        :param city_id: The city_id of this Offer.
        :param company_id: The company_id of this Offer.
        :param contact_id: The contact_id of this Offer.
        :param created: The created of this Offer.
        :param created_by_id: The created_by_id of this Offer.
        :param deleted: The deleted of this Offer.
        :param description: The description of this Offer.
        :param discount_percent: The discount_percent of this Offer.
        :param erp_payment_term_id: The erp_payment_term_id of this Offer.
        :param expiraton_date: The expiraton_date of this Offer.
        :param id: The id of this Offer.
        :param issue_date: The issue_date of this Offer.
        :param modified: The modified of this Offer.
        :param modified_by_id: The modified_by_id of this Offer.
        :param offer_number: The offer_number of this Offer.
        :param offer_status_id: The offer_status_id of this Offer.
        :param payment_term_id: The payment_term_id of this Offer.
        :param rejection_reason: The rejection_reason of this Offer.
        :param sender_id: The sender_id of this Offer.
        :param show_employee_name: The show_employee_name of this Offer.
        :param show_offer_lines: The show_offer_lines of this Offer.
        :param show_payment_term: The show_payment_term of this Offer.
        :param show_prices: The show_prices of this Offer.
        :param show_product_images: The show_product_images of this Offer.
        :param show_products_product_bundle: The show_products_product_bundle of this Offer.
        :param slug: The slug of this Offer.
        :param status: The status of this Offer.
        :param title: The title of this Offer.
        :param vat_percent: The vat_percent of this Offer.
        """
        self.openapi_types = {
            'address': str,
            'all_lines_one_line': bool,
            'all_products_one_line': bool,
            'all_working_hours_one_line': bool,
            'city_id': str,
            'company_id': str,
            'contact_id': str,
            'created': str,
            'created_by_id': str,
            'deleted': str,
            'description': str,
            'discount_percent': int,
            'erp_payment_term_id': str,
            'expiraton_date': str,
            'id': str,
            'issue_date': date,
            'modified': str,
            'modified_by_id': str,
            'offer_number': int,
            'offer_status_id': str,
            'payment_term_id': str,
            'rejection_reason': str,
            'sender_id': str,
            'show_employee_name': bool,
            'show_offer_lines': bool,
            'show_payment_term': bool,
            'show_prices': bool,
            'show_product_images': bool,
            'show_products_product_bundle': bool,
            'slug': str,
            'status': str,
            'title': str,
            'vat_percent': int
        }

        self.attribute_map = {
            'address': 'address',
            'all_lines_one_line': 'all_lines_one_line',
            'all_products_one_line': 'all_products_one_line',
            'all_working_hours_one_line': 'all_working_hours_one_line',
            'city_id': 'city_id',
            'company_id': 'company_id',
            'contact_id': 'contact_id',
            'created': 'created',
            'created_by_id': 'created_by_id',
            'deleted': 'deleted',
            'description': 'description',
            'discount_percent': 'discount_percent',
            'erp_payment_term_id': 'erp_payment_term_id',
            'expiraton_date': 'expiraton_date',
            'id': 'id',
            'issue_date': 'issue_date',
            'modified': 'modified',
            'modified_by_id': 'modified_by_id',
            'offer_number': 'offer_number',
            'offer_status_id': 'offer_status_id',
            'payment_term_id': 'payment_term_id',
            'rejection_reason': 'rejection_reason',
            'sender_id': 'sender_id',
            'show_employee_name': 'show_employee_name',
            'show_offer_lines': 'show_offer_lines',
            'show_payment_term': 'show_payment_term',
            'show_prices': 'show_prices',
            'show_product_images': 'show_product_images',
            'show_products_product_bundle': 'show_products_product_bundle',
            'slug': 'slug',
            'status': 'status',
            'title': 'title',
            'vat_percent': 'vat_percent'
        }

        self._address = address
        self._all_lines_one_line = all_lines_one_line
        self._all_products_one_line = all_products_one_line
        self._all_working_hours_one_line = all_working_hours_one_line
        self._city_id = city_id
        self._company_id = company_id
        self._contact_id = contact_id
        self._created = created
        self._created_by_id = created_by_id
        self._deleted = deleted
        self._description = description
        self._discount_percent = discount_percent
        self._erp_payment_term_id = erp_payment_term_id
        self._expiraton_date = expiraton_date
        self._id = id
        self._issue_date = issue_date
        self._modified = modified
        self._modified_by_id = modified_by_id
        self._offer_number = offer_number
        self._offer_status_id = offer_status_id
        self._payment_term_id = payment_term_id
        self._rejection_reason = rejection_reason
        self._sender_id = sender_id
        self._show_employee_name = show_employee_name
        self._show_offer_lines = show_offer_lines
        self._show_payment_term = show_payment_term
        self._show_prices = show_prices
        self._show_product_images = show_product_images
        self._show_products_product_bundle = show_products_product_bundle
        self._slug = slug
        self._status = status
        self._title = title
        self._vat_percent = vat_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Offer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Offer of this Offer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Offer.

        Street address

        :return: The address of this Offer.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Offer.

        Street address

        :param address: The address of this Offer.
        :type address: str
        """
        if address is not None and len(address) > 255:
            raise ValueError("Invalid value for `address`, length must be less than or equal to `255`")

        self._address = address

    @property
    def all_lines_one_line(self):
        """Gets the all_lines_one_line of this Offer.


        :return: The all_lines_one_line of this Offer.
        :rtype: bool
        """
        return self._all_lines_one_line

    @all_lines_one_line.setter
    def all_lines_one_line(self, all_lines_one_line):
        """Sets the all_lines_one_line of this Offer.


        :param all_lines_one_line: The all_lines_one_line of this Offer.
        :type all_lines_one_line: bool
        """

        self._all_lines_one_line = all_lines_one_line

    @property
    def all_products_one_line(self):
        """Gets the all_products_one_line of this Offer.


        :return: The all_products_one_line of this Offer.
        :rtype: bool
        """
        return self._all_products_one_line

    @all_products_one_line.setter
    def all_products_one_line(self, all_products_one_line):
        """Sets the all_products_one_line of this Offer.


        :param all_products_one_line: The all_products_one_line of this Offer.
        :type all_products_one_line: bool
        """

        self._all_products_one_line = all_products_one_line

    @property
    def all_working_hours_one_line(self):
        """Gets the all_working_hours_one_line of this Offer.


        :return: The all_working_hours_one_line of this Offer.
        :rtype: bool
        """
        return self._all_working_hours_one_line

    @all_working_hours_one_line.setter
    def all_working_hours_one_line(self, all_working_hours_one_line):
        """Sets the all_working_hours_one_line of this Offer.


        :param all_working_hours_one_line: The all_working_hours_one_line of this Offer.
        :type all_working_hours_one_line: bool
        """

        self._all_working_hours_one_line = all_working_hours_one_line

    @property
    def city_id(self):
        """Gets the city_id of this Offer.


        :return: The city_id of this Offer.
        :rtype: str
        """
        return self._city_id

    @city_id.setter
    def city_id(self, city_id):
        """Sets the city_id of this Offer.


        :param city_id: The city_id of this Offer.
        :type city_id: str
        """

        self._city_id = city_id

    @property
    def company_id(self):
        """Gets the company_id of this Offer.


        :return: The company_id of this Offer.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this Offer.


        :param company_id: The company_id of this Offer.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def contact_id(self):
        """Gets the contact_id of this Offer.


        :return: The contact_id of this Offer.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this Offer.


        :param contact_id: The contact_id of this Offer.
        :type contact_id: str
        """

        self._contact_id = contact_id

    @property
    def created(self):
        """Gets the created of this Offer.


        :return: The created of this Offer.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Offer.


        :param created: The created of this Offer.
        :type created: str
        """

        self._created = created

    @property
    def created_by_id(self):
        """Gets the created_by_id of this Offer.


        :return: The created_by_id of this Offer.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this Offer.


        :param created_by_id: The created_by_id of this Offer.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def deleted(self):
        """Gets the deleted of this Offer.

        Only present if it's a deleted object

        :return: The deleted of this Offer.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this Offer.

        Only present if it's a deleted object

        :param deleted: The deleted of this Offer.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def description(self):
        """Gets the description of this Offer.


        :return: The description of this Offer.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Offer.


        :param description: The description of this Offer.
        :type description: str
        """
        if description is not None and len(description) > 255:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `255`")

        self._description = description

    @property
    def discount_percent(self):
        """Gets the discount_percent of this Offer.


        :return: The discount_percent of this Offer.
        :rtype: int
        """
        return self._discount_percent

    @discount_percent.setter
    def discount_percent(self, discount_percent):
        """Sets the discount_percent of this Offer.


        :param discount_percent: The discount_percent of this Offer.
        :type discount_percent: int
        """

        self._discount_percent = discount_percent

    @property
    def erp_payment_term_id(self):
        """Gets the erp_payment_term_id of this Offer.


        :return: The erp_payment_term_id of this Offer.
        :rtype: str
        """
        return self._erp_payment_term_id

    @erp_payment_term_id.setter
    def erp_payment_term_id(self, erp_payment_term_id):
        """Sets the erp_payment_term_id of this Offer.


        :param erp_payment_term_id: The erp_payment_term_id of this Offer.
        :type erp_payment_term_id: str
        """
        if erp_payment_term_id is not None and len(erp_payment_term_id) > 255:
            raise ValueError("Invalid value for `erp_payment_term_id`, length must be less than or equal to `255`")

        self._erp_payment_term_id = erp_payment_term_id

    @property
    def expiraton_date(self):
        """Gets the expiraton_date of this Offer.


        :return: The expiraton_date of this Offer.
        :rtype: str
        """
        return self._expiraton_date

    @expiraton_date.setter
    def expiraton_date(self, expiraton_date):
        """Sets the expiraton_date of this Offer.


        :param expiraton_date: The expiraton_date of this Offer.
        :type expiraton_date: str
        """

        self._expiraton_date = expiraton_date

    @property
    def id(self):
        """Gets the id of this Offer.


        :return: The id of this Offer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Offer.


        :param id: The id of this Offer.
        :type id: str
        """

        self._id = id

    @property
    def issue_date(self):
        """Gets the issue_date of this Offer.


        :return: The issue_date of this Offer.
        :rtype: date
        """
        return self._issue_date

    @issue_date.setter
    def issue_date(self, issue_date):
        """Sets the issue_date of this Offer.


        :param issue_date: The issue_date of this Offer.
        :type issue_date: date
        """

        self._issue_date = issue_date

    @property
    def modified(self):
        """Gets the modified of this Offer.


        :return: The modified of this Offer.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this Offer.


        :param modified: The modified of this Offer.
        :type modified: str
        """

        self._modified = modified

    @property
    def modified_by_id(self):
        """Gets the modified_by_id of this Offer.


        :return: The modified_by_id of this Offer.
        :rtype: str
        """
        return self._modified_by_id

    @modified_by_id.setter
    def modified_by_id(self, modified_by_id):
        """Sets the modified_by_id of this Offer.


        :param modified_by_id: The modified_by_id of this Offer.
        :type modified_by_id: str
        """

        self._modified_by_id = modified_by_id

    @property
    def offer_number(self):
        """Gets the offer_number of this Offer.


        :return: The offer_number of this Offer.
        :rtype: int
        """
        return self._offer_number

    @offer_number.setter
    def offer_number(self, offer_number):
        """Sets the offer_number of this Offer.


        :param offer_number: The offer_number of this Offer.
        :type offer_number: int
        """

        self._offer_number = offer_number

    @property
    def offer_status_id(self):
        """Gets the offer_status_id of this Offer.


        :return: The offer_status_id of this Offer.
        :rtype: str
        """
        return self._offer_status_id

    @offer_status_id.setter
    def offer_status_id(self, offer_status_id):
        """Sets the offer_status_id of this Offer.


        :param offer_status_id: The offer_status_id of this Offer.
        :type offer_status_id: str
        """

        self._offer_status_id = offer_status_id

    @property
    def payment_term_id(self):
        """Gets the payment_term_id of this Offer.


        :return: The payment_term_id of this Offer.
        :rtype: str
        """
        return self._payment_term_id

    @payment_term_id.setter
    def payment_term_id(self, payment_term_id):
        """Sets the payment_term_id of this Offer.


        :param payment_term_id: The payment_term_id of this Offer.
        :type payment_term_id: str
        """
        if payment_term_id is not None and len(payment_term_id) > 255:
            raise ValueError("Invalid value for `payment_term_id`, length must be less than or equal to `255`")

        self._payment_term_id = payment_term_id

    @property
    def rejection_reason(self):
        """Gets the rejection_reason of this Offer.


        :return: The rejection_reason of this Offer.
        :rtype: str
        """
        return self._rejection_reason

    @rejection_reason.setter
    def rejection_reason(self, rejection_reason):
        """Sets the rejection_reason of this Offer.


        :param rejection_reason: The rejection_reason of this Offer.
        :type rejection_reason: str
        """
        if rejection_reason is not None and len(rejection_reason) > 255:
            raise ValueError("Invalid value for `rejection_reason`, length must be less than or equal to `255`")

        self._rejection_reason = rejection_reason

    @property
    def sender_id(self):
        """Gets the sender_id of this Offer.


        :return: The sender_id of this Offer.
        :rtype: str
        """
        return self._sender_id

    @sender_id.setter
    def sender_id(self, sender_id):
        """Sets the sender_id of this Offer.


        :param sender_id: The sender_id of this Offer.
        :type sender_id: str
        """

        self._sender_id = sender_id

    @property
    def show_employee_name(self):
        """Gets the show_employee_name of this Offer.


        :return: The show_employee_name of this Offer.
        :rtype: bool
        """
        return self._show_employee_name

    @show_employee_name.setter
    def show_employee_name(self, show_employee_name):
        """Sets the show_employee_name of this Offer.


        :param show_employee_name: The show_employee_name of this Offer.
        :type show_employee_name: bool
        """

        self._show_employee_name = show_employee_name

    @property
    def show_offer_lines(self):
        """Gets the show_offer_lines of this Offer.


        :return: The show_offer_lines of this Offer.
        :rtype: bool
        """
        return self._show_offer_lines

    @show_offer_lines.setter
    def show_offer_lines(self, show_offer_lines):
        """Sets the show_offer_lines of this Offer.


        :param show_offer_lines: The show_offer_lines of this Offer.
        :type show_offer_lines: bool
        """

        self._show_offer_lines = show_offer_lines

    @property
    def show_payment_term(self):
        """Gets the show_payment_term of this Offer.


        :return: The show_payment_term of this Offer.
        :rtype: bool
        """
        return self._show_payment_term

    @show_payment_term.setter
    def show_payment_term(self, show_payment_term):
        """Sets the show_payment_term of this Offer.


        :param show_payment_term: The show_payment_term of this Offer.
        :type show_payment_term: bool
        """

        self._show_payment_term = show_payment_term

    @property
    def show_prices(self):
        """Gets the show_prices of this Offer.


        :return: The show_prices of this Offer.
        :rtype: bool
        """
        return self._show_prices

    @show_prices.setter
    def show_prices(self, show_prices):
        """Sets the show_prices of this Offer.


        :param show_prices: The show_prices of this Offer.
        :type show_prices: bool
        """

        self._show_prices = show_prices

    @property
    def show_product_images(self):
        """Gets the show_product_images of this Offer.


        :return: The show_product_images of this Offer.
        :rtype: bool
        """
        return self._show_product_images

    @show_product_images.setter
    def show_product_images(self, show_product_images):
        """Sets the show_product_images of this Offer.


        :param show_product_images: The show_product_images of this Offer.
        :type show_product_images: bool
        """

        self._show_product_images = show_product_images

    @property
    def show_products_product_bundle(self):
        """Gets the show_products_product_bundle of this Offer.


        :return: The show_products_product_bundle of this Offer.
        :rtype: bool
        """
        return self._show_products_product_bundle

    @show_products_product_bundle.setter
    def show_products_product_bundle(self, show_products_product_bundle):
        """Sets the show_products_product_bundle of this Offer.


        :param show_products_product_bundle: The show_products_product_bundle of this Offer.
        :type show_products_product_bundle: bool
        """

        self._show_products_product_bundle = show_products_product_bundle

    @property
    def slug(self):
        """Gets the slug of this Offer.


        :return: The slug of this Offer.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this Offer.


        :param slug: The slug of this Offer.
        :type slug: str
        """
        if slug is not None and len(slug) > 255:
            raise ValueError("Invalid value for `slug`, length must be less than or equal to `255`")

        self._slug = slug

    @property
    def status(self):
        """Gets the status of this Offer.


        :return: The status of this Offer.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Offer.


        :param status: The status of this Offer.
        :type status: str
        """

        self._status = status

    @property
    def title(self):
        """Gets the title of this Offer.


        :return: The title of this Offer.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Offer.


        :param title: The title of this Offer.
        :type title: str
        """
        if title is not None and len(title) > 255:
            raise ValueError("Invalid value for `title`, length must be less than or equal to `255`")

        self._title = title

    @property
    def vat_percent(self):
        """Gets the vat_percent of this Offer.


        :return: The vat_percent of this Offer.
        :rtype: int
        """
        return self._vat_percent

    @vat_percent.setter
    def vat_percent(self, vat_percent):
        """Sets the vat_percent of this Offer.


        :param vat_percent: The vat_percent of this Offer.
        :type vat_percent: int
        """

        self._vat_percent = vat_percent
