# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WallPostsPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, project_id: str=None):
        """WallPostsPostRequest - a model defined in OpenAPI

        :param message: The message of this WallPostsPostRequest.
        :param project_id: The project_id of this WallPostsPostRequest.
        """
        self.openapi_types = {
            'message': str,
            'project_id': str
        }

        self.attribute_map = {
            'message': 'message',
            'project_id': 'project_id'
        }

        self._message = message
        self._project_id = project_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WallPostsPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _wall_posts_post_request of this WallPostsPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this WallPostsPostRequest.


        :return: The message of this WallPostsPostRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this WallPostsPostRequest.


        :param message: The message of this WallPostsPostRequest.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def project_id(self):
        """Gets the project_id of this WallPostsPostRequest.


        :return: The project_id of this WallPostsPostRequest.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this WallPostsPostRequest.


        :param project_id: The project_id of this WallPostsPostRequest.
        :type project_id: str
        """
        if project_id is None:
            raise ValueError("Invalid value for `project_id`, must not be `None`")

        self._project_id = project_id
