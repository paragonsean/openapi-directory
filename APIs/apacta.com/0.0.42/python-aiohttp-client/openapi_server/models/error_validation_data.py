# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorValidationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: int=None, error_count: int=None, errors: object=None, message: str='A validation error occurred', url: str=None):
        """ErrorValidationData - a model defined in OpenAPI

        :param code: The code of this ErrorValidationData.
        :param error_count: The error_count of this ErrorValidationData.
        :param errors: The errors of this ErrorValidationData.
        :param message: The message of this ErrorValidationData.
        :param url: The url of this ErrorValidationData.
        """
        self.openapi_types = {
            'code': int,
            'error_count': int,
            'errors': object,
            'message': str,
            'url': str
        }

        self.attribute_map = {
            'code': 'code',
            'error_count': 'errorCount',
            'errors': 'errors',
            'message': 'message',
            'url': 'url'
        }

        self._code = code
        self._error_count = error_count
        self._errors = errors
        self._message = message
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorValidationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorValidation_data of this ErrorValidationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this ErrorValidationData.

        The HTTP status code

        :return: The code of this ErrorValidationData.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this ErrorValidationData.

        The HTTP status code

        :param code: The code of this ErrorValidationData.
        :type code: int
        """

        self._code = code

    @property
    def error_count(self):
        """Gets the error_count of this ErrorValidationData.

        The amount of validation errors

        :return: The error_count of this ErrorValidationData.
        :rtype: int
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count):
        """Sets the error_count of this ErrorValidationData.

        The amount of validation errors

        :param error_count: The error_count of this ErrorValidationData.
        :type error_count: int
        """

        self._error_count = error_count

    @property
    def errors(self):
        """Gets the errors of this ErrorValidationData.

        Object that contains details information about which properties failed validation and what rules they failed.

        :return: The errors of this ErrorValidationData.
        :rtype: object
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ErrorValidationData.

        Object that contains details information about which properties failed validation and what rules they failed.

        :param errors: The errors of this ErrorValidationData.
        :type errors: object
        """

        self._errors = errors

    @property
    def message(self):
        """Gets the message of this ErrorValidationData.

        Error message

        :return: The message of this ErrorValidationData.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ErrorValidationData.

        Error message

        :param message: The message of this ErrorValidationData.
        :type message: str
        """

        self._message = message

    @property
    def url(self):
        """Gets the url of this ErrorValidationData.

        The url from which this originated

        :return: The url of this ErrorValidationData.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ErrorValidationData.

        The url from which this originated

        :param url: The url of this ErrorValidationData.
        :type url: str
        """

        self._url = url
