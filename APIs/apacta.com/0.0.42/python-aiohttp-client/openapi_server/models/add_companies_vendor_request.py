# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddCompaniesVendorRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_id: str=None, delivery_price: float=None, free_delivery_price: float=None, is_active: bool=None, password: str=None, receive_automatic_price_files: bool=None, receive_invoice_mails: bool=None, reviewed: bool=None, use_price_files: bool=None, username: str=None, vendor_account_reference: str=None, vendor_department_id: str=None, vendor_email: str=None, vendor_id: str=None, vendor_name: str=None):
        """AddCompaniesVendorRequest - a model defined in OpenAPI

        :param company_id: The company_id of this AddCompaniesVendorRequest.
        :param delivery_price: The delivery_price of this AddCompaniesVendorRequest.
        :param free_delivery_price: The free_delivery_price of this AddCompaniesVendorRequest.
        :param is_active: The is_active of this AddCompaniesVendorRequest.
        :param password: The password of this AddCompaniesVendorRequest.
        :param receive_automatic_price_files: The receive_automatic_price_files of this AddCompaniesVendorRequest.
        :param receive_invoice_mails: The receive_invoice_mails of this AddCompaniesVendorRequest.
        :param reviewed: The reviewed of this AddCompaniesVendorRequest.
        :param use_price_files: The use_price_files of this AddCompaniesVendorRequest.
        :param username: The username of this AddCompaniesVendorRequest.
        :param vendor_account_reference: The vendor_account_reference of this AddCompaniesVendorRequest.
        :param vendor_department_id: The vendor_department_id of this AddCompaniesVendorRequest.
        :param vendor_email: The vendor_email of this AddCompaniesVendorRequest.
        :param vendor_id: The vendor_id of this AddCompaniesVendorRequest.
        :param vendor_name: The vendor_name of this AddCompaniesVendorRequest.
        """
        self.openapi_types = {
            'company_id': str,
            'delivery_price': float,
            'free_delivery_price': float,
            'is_active': bool,
            'password': str,
            'receive_automatic_price_files': bool,
            'receive_invoice_mails': bool,
            'reviewed': bool,
            'use_price_files': bool,
            'username': str,
            'vendor_account_reference': str,
            'vendor_department_id': str,
            'vendor_email': str,
            'vendor_id': str,
            'vendor_name': str
        }

        self.attribute_map = {
            'company_id': 'company_id',
            'delivery_price': 'delivery_price',
            'free_delivery_price': 'free_delivery_price',
            'is_active': 'is_active',
            'password': 'password',
            'receive_automatic_price_files': 'receive_automatic_price_files',
            'receive_invoice_mails': 'receive_invoice_mails',
            'reviewed': 'reviewed',
            'use_price_files': 'use_price_files',
            'username': 'username',
            'vendor_account_reference': 'vendor_account_reference',
            'vendor_department_id': 'vendor_department_id',
            'vendor_email': 'vendor_email',
            'vendor_id': 'vendor_id',
            'vendor_name': 'vendor_name'
        }

        self._company_id = company_id
        self._delivery_price = delivery_price
        self._free_delivery_price = free_delivery_price
        self._is_active = is_active
        self._password = password
        self._receive_automatic_price_files = receive_automatic_price_files
        self._receive_invoice_mails = receive_invoice_mails
        self._reviewed = reviewed
        self._use_price_files = use_price_files
        self._username = username
        self._vendor_account_reference = vendor_account_reference
        self._vendor_department_id = vendor_department_id
        self._vendor_email = vendor_email
        self._vendor_id = vendor_id
        self._vendor_name = vendor_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddCompaniesVendorRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The addCompaniesVendor_request of this AddCompaniesVendorRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_id(self):
        """Gets the company_id of this AddCompaniesVendorRequest.


        :return: The company_id of this AddCompaniesVendorRequest.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this AddCompaniesVendorRequest.


        :param company_id: The company_id of this AddCompaniesVendorRequest.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def delivery_price(self):
        """Gets the delivery_price of this AddCompaniesVendorRequest.


        :return: The delivery_price of this AddCompaniesVendorRequest.
        :rtype: float
        """
        return self._delivery_price

    @delivery_price.setter
    def delivery_price(self, delivery_price):
        """Sets the delivery_price of this AddCompaniesVendorRequest.


        :param delivery_price: The delivery_price of this AddCompaniesVendorRequest.
        :type delivery_price: float
        """

        self._delivery_price = delivery_price

    @property
    def free_delivery_price(self):
        """Gets the free_delivery_price of this AddCompaniesVendorRequest.


        :return: The free_delivery_price of this AddCompaniesVendorRequest.
        :rtype: float
        """
        return self._free_delivery_price

    @free_delivery_price.setter
    def free_delivery_price(self, free_delivery_price):
        """Sets the free_delivery_price of this AddCompaniesVendorRequest.


        :param free_delivery_price: The free_delivery_price of this AddCompaniesVendorRequest.
        :type free_delivery_price: float
        """

        self._free_delivery_price = free_delivery_price

    @property
    def is_active(self):
        """Gets the is_active of this AddCompaniesVendorRequest.


        :return: The is_active of this AddCompaniesVendorRequest.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this AddCompaniesVendorRequest.


        :param is_active: The is_active of this AddCompaniesVendorRequest.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def password(self):
        """Gets the password of this AddCompaniesVendorRequest.


        :return: The password of this AddCompaniesVendorRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this AddCompaniesVendorRequest.


        :param password: The password of this AddCompaniesVendorRequest.
        :type password: str
        """
        if password is not None and len(password) > 255:
            raise ValueError("Invalid value for `password`, length must be less than or equal to `255`")

        self._password = password

    @property
    def receive_automatic_price_files(self):
        """Gets the receive_automatic_price_files of this AddCompaniesVendorRequest.


        :return: The receive_automatic_price_files of this AddCompaniesVendorRequest.
        :rtype: bool
        """
        return self._receive_automatic_price_files

    @receive_automatic_price_files.setter
    def receive_automatic_price_files(self, receive_automatic_price_files):
        """Sets the receive_automatic_price_files of this AddCompaniesVendorRequest.


        :param receive_automatic_price_files: The receive_automatic_price_files of this AddCompaniesVendorRequest.
        :type receive_automatic_price_files: bool
        """

        self._receive_automatic_price_files = receive_automatic_price_files

    @property
    def receive_invoice_mails(self):
        """Gets the receive_invoice_mails of this AddCompaniesVendorRequest.


        :return: The receive_invoice_mails of this AddCompaniesVendorRequest.
        :rtype: bool
        """
        return self._receive_invoice_mails

    @receive_invoice_mails.setter
    def receive_invoice_mails(self, receive_invoice_mails):
        """Sets the receive_invoice_mails of this AddCompaniesVendorRequest.


        :param receive_invoice_mails: The receive_invoice_mails of this AddCompaniesVendorRequest.
        :type receive_invoice_mails: bool
        """

        self._receive_invoice_mails = receive_invoice_mails

    @property
    def reviewed(self):
        """Gets the reviewed of this AddCompaniesVendorRequest.


        :return: The reviewed of this AddCompaniesVendorRequest.
        :rtype: bool
        """
        return self._reviewed

    @reviewed.setter
    def reviewed(self, reviewed):
        """Sets the reviewed of this AddCompaniesVendorRequest.


        :param reviewed: The reviewed of this AddCompaniesVendorRequest.
        :type reviewed: bool
        """

        self._reviewed = reviewed

    @property
    def use_price_files(self):
        """Gets the use_price_files of this AddCompaniesVendorRequest.


        :return: The use_price_files of this AddCompaniesVendorRequest.
        :rtype: bool
        """
        return self._use_price_files

    @use_price_files.setter
    def use_price_files(self, use_price_files):
        """Sets the use_price_files of this AddCompaniesVendorRequest.


        :param use_price_files: The use_price_files of this AddCompaniesVendorRequest.
        :type use_price_files: bool
        """

        self._use_price_files = use_price_files

    @property
    def username(self):
        """Gets the username of this AddCompaniesVendorRequest.


        :return: The username of this AddCompaniesVendorRequest.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this AddCompaniesVendorRequest.


        :param username: The username of this AddCompaniesVendorRequest.
        :type username: str
        """
        if username is not None and len(username) > 255:
            raise ValueError("Invalid value for `username`, length must be less than or equal to `255`")

        self._username = username

    @property
    def vendor_account_reference(self):
        """Gets the vendor_account_reference of this AddCompaniesVendorRequest.


        :return: The vendor_account_reference of this AddCompaniesVendorRequest.
        :rtype: str
        """
        return self._vendor_account_reference

    @vendor_account_reference.setter
    def vendor_account_reference(self, vendor_account_reference):
        """Sets the vendor_account_reference of this AddCompaniesVendorRequest.


        :param vendor_account_reference: The vendor_account_reference of this AddCompaniesVendorRequest.
        :type vendor_account_reference: str
        """
        if vendor_account_reference is not None and len(vendor_account_reference) > 255:
            raise ValueError("Invalid value for `vendor_account_reference`, length must be less than or equal to `255`")

        self._vendor_account_reference = vendor_account_reference

    @property
    def vendor_department_id(self):
        """Gets the vendor_department_id of this AddCompaniesVendorRequest.


        :return: The vendor_department_id of this AddCompaniesVendorRequest.
        :rtype: str
        """
        return self._vendor_department_id

    @vendor_department_id.setter
    def vendor_department_id(self, vendor_department_id):
        """Sets the vendor_department_id of this AddCompaniesVendorRequest.


        :param vendor_department_id: The vendor_department_id of this AddCompaniesVendorRequest.
        :type vendor_department_id: str
        """

        self._vendor_department_id = vendor_department_id

    @property
    def vendor_email(self):
        """Gets the vendor_email of this AddCompaniesVendorRequest.


        :return: The vendor_email of this AddCompaniesVendorRequest.
        :rtype: str
        """
        return self._vendor_email

    @vendor_email.setter
    def vendor_email(self, vendor_email):
        """Sets the vendor_email of this AddCompaniesVendorRequest.


        :param vendor_email: The vendor_email of this AddCompaniesVendorRequest.
        :type vendor_email: str
        """
        if vendor_email is not None and len(vendor_email) > 255:
            raise ValueError("Invalid value for `vendor_email`, length must be less than or equal to `255`")

        self._vendor_email = vendor_email

    @property
    def vendor_id(self):
        """Gets the vendor_id of this AddCompaniesVendorRequest.


        :return: The vendor_id of this AddCompaniesVendorRequest.
        :rtype: str
        """
        return self._vendor_id

    @vendor_id.setter
    def vendor_id(self, vendor_id):
        """Sets the vendor_id of this AddCompaniesVendorRequest.


        :param vendor_id: The vendor_id of this AddCompaniesVendorRequest.
        :type vendor_id: str
        """

        self._vendor_id = vendor_id

    @property
    def vendor_name(self):
        """Gets the vendor_name of this AddCompaniesVendorRequest.


        :return: The vendor_name of this AddCompaniesVendorRequest.
        :rtype: str
        """
        return self._vendor_name

    @vendor_name.setter
    def vendor_name(self, vendor_name):
        """Sets the vendor_name of this AddCompaniesVendorRequest.


        :param vendor_name: The vendor_name of this AddCompaniesVendorRequest.
        :type vendor_name: str
        """
        if vendor_name is not None and len(vendor_name) > 255:
            raise ValueError("Invalid value for `vendor_name`, length must be less than or equal to `255`")

        self._vendor_name = vendor_name
