# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WallPost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, deleted: str=None, id: str=None, message: str=None, modified: str=None, project_id: str=None, user_id: str=None):
        """WallPost - a model defined in OpenAPI

        :param created: The created of this WallPost.
        :param deleted: The deleted of this WallPost.
        :param id: The id of this WallPost.
        :param message: The message of this WallPost.
        :param modified: The modified of this WallPost.
        :param project_id: The project_id of this WallPost.
        :param user_id: The user_id of this WallPost.
        """
        self.openapi_types = {
            'created': str,
            'deleted': str,
            'id': str,
            'message': str,
            'modified': str,
            'project_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'created': 'created',
            'deleted': 'deleted',
            'id': 'id',
            'message': 'message',
            'modified': 'modified',
            'project_id': 'project_id',
            'user_id': 'user_id'
        }

        self._created = created
        self._deleted = deleted
        self._id = id
        self._message = message
        self._modified = modified
        self._project_id = project_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WallPost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WallPost of this WallPost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this WallPost.


        :return: The created of this WallPost.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this WallPost.


        :param created: The created of this WallPost.
        :type created: str
        """

        self._created = created

    @property
    def deleted(self):
        """Gets the deleted of this WallPost.

        Only present if it's a deleted object

        :return: The deleted of this WallPost.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this WallPost.

        Only present if it's a deleted object

        :param deleted: The deleted of this WallPost.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this WallPost.


        :return: The id of this WallPost.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WallPost.


        :param id: The id of this WallPost.
        :type id: str
        """

        self._id = id

    @property
    def message(self):
        """Gets the message of this WallPost.


        :return: The message of this WallPost.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this WallPost.


        :param message: The message of this WallPost.
        :type message: str
        """

        self._message = message

    @property
    def modified(self):
        """Gets the modified of this WallPost.


        :return: The modified of this WallPost.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this WallPost.


        :param modified: The modified of this WallPost.
        :type modified: str
        """

        self._modified = modified

    @property
    def project_id(self):
        """Gets the project_id of this WallPost.


        :return: The project_id of this WallPost.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this WallPost.


        :param project_id: The project_id of this WallPost.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def user_id(self):
        """Gets the user_id of this WallPost.


        :return: The user_id of this WallPost.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this WallPost.


        :param user_id: The user_id of this WallPost.
        :type user_id: str
        """

        self._user_id = user_id
