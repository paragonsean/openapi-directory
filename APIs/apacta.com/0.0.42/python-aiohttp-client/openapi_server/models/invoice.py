# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Invoice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_products_one_line: bool=None, all_working_hours_one_line: bool=None, company_id: str=None, contact_id: str=None, created: str=None, created_by_id: str=None, currency_id: str=None, date_from: date=None, date_to: date=None, deleted: str=None, downloaded: str=None, erp_id: str=None, erp_payment_term_id: str=None, eu_customer: bool=None, gross_payment: float=None, group_by_forms: bool=None, id: str=None, include_invoiced_lines: bool=None, integration_id: str=None, invoice_number: int=None, is_draft: bool=None, is_final_invoice: bool=None, is_locked: bool=None, is_offer: bool=None, issued_date: date=None, message: str=None, modified: str=None, net_payment: float=None, offer_number: int=None, order_line_group_id: str=None, payment_due_date: date=None, payment_term_id: str=None, project_id: str=None, project_overview_attached: bool=None, reference: str=None, show_employee_name: bool=None, show_price_product_bundle: bool=None, show_prices_products_and_hours: bool=None, show_product_images: bool=None, show_products_product_bundle: bool=None, title: str=None, total_cost_price: float=None, total_discount_percent: float=None, vat_percent: int=None, vendor_id: str=None):
        """Invoice - a model defined in OpenAPI

        :param all_products_one_line: The all_products_one_line of this Invoice.
        :param all_working_hours_one_line: The all_working_hours_one_line of this Invoice.
        :param company_id: The company_id of this Invoice.
        :param contact_id: The contact_id of this Invoice.
        :param created: The created of this Invoice.
        :param created_by_id: The created_by_id of this Invoice.
        :param currency_id: The currency_id of this Invoice.
        :param date_from: The date_from of this Invoice.
        :param date_to: The date_to of this Invoice.
        :param deleted: The deleted of this Invoice.
        :param downloaded: The downloaded of this Invoice.
        :param erp_id: The erp_id of this Invoice.
        :param erp_payment_term_id: The erp_payment_term_id of this Invoice.
        :param eu_customer: The eu_customer of this Invoice.
        :param gross_payment: The gross_payment of this Invoice.
        :param group_by_forms: The group_by_forms of this Invoice.
        :param id: The id of this Invoice.
        :param include_invoiced_lines: The include_invoiced_lines of this Invoice.
        :param integration_id: The integration_id of this Invoice.
        :param invoice_number: The invoice_number of this Invoice.
        :param is_draft: The is_draft of this Invoice.
        :param is_final_invoice: The is_final_invoice of this Invoice.
        :param is_locked: The is_locked of this Invoice.
        :param is_offer: The is_offer of this Invoice.
        :param issued_date: The issued_date of this Invoice.
        :param message: The message of this Invoice.
        :param modified: The modified of this Invoice.
        :param net_payment: The net_payment of this Invoice.
        :param offer_number: The offer_number of this Invoice.
        :param order_line_group_id: The order_line_group_id of this Invoice.
        :param payment_due_date: The payment_due_date of this Invoice.
        :param payment_term_id: The payment_term_id of this Invoice.
        :param project_id: The project_id of this Invoice.
        :param project_overview_attached: The project_overview_attached of this Invoice.
        :param reference: The reference of this Invoice.
        :param show_employee_name: The show_employee_name of this Invoice.
        :param show_price_product_bundle: The show_price_product_bundle of this Invoice.
        :param show_prices_products_and_hours: The show_prices_products_and_hours of this Invoice.
        :param show_product_images: The show_product_images of this Invoice.
        :param show_products_product_bundle: The show_products_product_bundle of this Invoice.
        :param title: The title of this Invoice.
        :param total_cost_price: The total_cost_price of this Invoice.
        :param total_discount_percent: The total_discount_percent of this Invoice.
        :param vat_percent: The vat_percent of this Invoice.
        :param vendor_id: The vendor_id of this Invoice.
        """
        self.openapi_types = {
            'all_products_one_line': bool,
            'all_working_hours_one_line': bool,
            'company_id': str,
            'contact_id': str,
            'created': str,
            'created_by_id': str,
            'currency_id': str,
            'date_from': date,
            'date_to': date,
            'deleted': str,
            'downloaded': str,
            'erp_id': str,
            'erp_payment_term_id': str,
            'eu_customer': bool,
            'gross_payment': float,
            'group_by_forms': bool,
            'id': str,
            'include_invoiced_lines': bool,
            'integration_id': str,
            'invoice_number': int,
            'is_draft': bool,
            'is_final_invoice': bool,
            'is_locked': bool,
            'is_offer': bool,
            'issued_date': date,
            'message': str,
            'modified': str,
            'net_payment': float,
            'offer_number': int,
            'order_line_group_id': str,
            'payment_due_date': date,
            'payment_term_id': str,
            'project_id': str,
            'project_overview_attached': bool,
            'reference': str,
            'show_employee_name': bool,
            'show_price_product_bundle': bool,
            'show_prices_products_and_hours': bool,
            'show_product_images': bool,
            'show_products_product_bundle': bool,
            'title': str,
            'total_cost_price': float,
            'total_discount_percent': float,
            'vat_percent': int,
            'vendor_id': str
        }

        self.attribute_map = {
            'all_products_one_line': 'all_products_one_line',
            'all_working_hours_one_line': 'all_working_hours_one_line',
            'company_id': 'company_id',
            'contact_id': 'contact_id',
            'created': 'created',
            'created_by_id': 'created_by_id',
            'currency_id': 'currency_id',
            'date_from': 'date_from',
            'date_to': 'date_to',
            'deleted': 'deleted',
            'downloaded': 'downloaded',
            'erp_id': 'erp_id',
            'erp_payment_term_id': 'erp_payment_term_id',
            'eu_customer': 'eu_customer',
            'gross_payment': 'gross_payment',
            'group_by_forms': 'group_by_forms',
            'id': 'id',
            'include_invoiced_lines': 'include_invoiced_lines',
            'integration_id': 'integration_id',
            'invoice_number': 'invoice_number',
            'is_draft': 'is_draft',
            'is_final_invoice': 'is_final_invoice',
            'is_locked': 'is_locked',
            'is_offer': 'is_offer',
            'issued_date': 'issued_date',
            'message': 'message',
            'modified': 'modified',
            'net_payment': 'net_payment',
            'offer_number': 'offer_number',
            'order_line_group_id': 'order_line_group_id',
            'payment_due_date': 'payment_due_date',
            'payment_term_id': 'payment_term_id',
            'project_id': 'project_id',
            'project_overview_attached': 'project_overview_attached',
            'reference': 'reference',
            'show_employee_name': 'show_employee_name',
            'show_price_product_bundle': 'show_price_product_bundle',
            'show_prices_products_and_hours': 'show_prices_products_and_hours',
            'show_product_images': 'show_product_images',
            'show_products_product_bundle': 'show_products_product_bundle',
            'title': 'title',
            'total_cost_price': 'total_cost_price',
            'total_discount_percent': 'total_discount_percent',
            'vat_percent': 'vat_percent',
            'vendor_id': 'vendor_id'
        }

        self._all_products_one_line = all_products_one_line
        self._all_working_hours_one_line = all_working_hours_one_line
        self._company_id = company_id
        self._contact_id = contact_id
        self._created = created
        self._created_by_id = created_by_id
        self._currency_id = currency_id
        self._date_from = date_from
        self._date_to = date_to
        self._deleted = deleted
        self._downloaded = downloaded
        self._erp_id = erp_id
        self._erp_payment_term_id = erp_payment_term_id
        self._eu_customer = eu_customer
        self._gross_payment = gross_payment
        self._group_by_forms = group_by_forms
        self._id = id
        self._include_invoiced_lines = include_invoiced_lines
        self._integration_id = integration_id
        self._invoice_number = invoice_number
        self._is_draft = is_draft
        self._is_final_invoice = is_final_invoice
        self._is_locked = is_locked
        self._is_offer = is_offer
        self._issued_date = issued_date
        self._message = message
        self._modified = modified
        self._net_payment = net_payment
        self._offer_number = offer_number
        self._order_line_group_id = order_line_group_id
        self._payment_due_date = payment_due_date
        self._payment_term_id = payment_term_id
        self._project_id = project_id
        self._project_overview_attached = project_overview_attached
        self._reference = reference
        self._show_employee_name = show_employee_name
        self._show_price_product_bundle = show_price_product_bundle
        self._show_prices_products_and_hours = show_prices_products_and_hours
        self._show_product_images = show_product_images
        self._show_products_product_bundle = show_products_product_bundle
        self._title = title
        self._total_cost_price = total_cost_price
        self._total_discount_percent = total_discount_percent
        self._vat_percent = vat_percent
        self._vendor_id = vendor_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Invoice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Invoice of this Invoice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_products_one_line(self):
        """Gets the all_products_one_line of this Invoice.


        :return: The all_products_one_line of this Invoice.
        :rtype: bool
        """
        return self._all_products_one_line

    @all_products_one_line.setter
    def all_products_one_line(self, all_products_one_line):
        """Sets the all_products_one_line of this Invoice.


        :param all_products_one_line: The all_products_one_line of this Invoice.
        :type all_products_one_line: bool
        """

        self._all_products_one_line = all_products_one_line

    @property
    def all_working_hours_one_line(self):
        """Gets the all_working_hours_one_line of this Invoice.


        :return: The all_working_hours_one_line of this Invoice.
        :rtype: bool
        """
        return self._all_working_hours_one_line

    @all_working_hours_one_line.setter
    def all_working_hours_one_line(self, all_working_hours_one_line):
        """Sets the all_working_hours_one_line of this Invoice.


        :param all_working_hours_one_line: The all_working_hours_one_line of this Invoice.
        :type all_working_hours_one_line: bool
        """

        self._all_working_hours_one_line = all_working_hours_one_line

    @property
    def company_id(self):
        """Gets the company_id of this Invoice.


        :return: The company_id of this Invoice.
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this Invoice.


        :param company_id: The company_id of this Invoice.
        :type company_id: str
        """

        self._company_id = company_id

    @property
    def contact_id(self):
        """Gets the contact_id of this Invoice.


        :return: The contact_id of this Invoice.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this Invoice.


        :param contact_id: The contact_id of this Invoice.
        :type contact_id: str
        """

        self._contact_id = contact_id

    @property
    def created(self):
        """Gets the created of this Invoice.


        :return: The created of this Invoice.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Invoice.


        :param created: The created of this Invoice.
        :type created: str
        """

        self._created = created

    @property
    def created_by_id(self):
        """Gets the created_by_id of this Invoice.


        :return: The created_by_id of this Invoice.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this Invoice.


        :param created_by_id: The created_by_id of this Invoice.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def currency_id(self):
        """Gets the currency_id of this Invoice.


        :return: The currency_id of this Invoice.
        :rtype: str
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this Invoice.


        :param currency_id: The currency_id of this Invoice.
        :type currency_id: str
        """

        self._currency_id = currency_id

    @property
    def date_from(self):
        """Gets the date_from of this Invoice.


        :return: The date_from of this Invoice.
        :rtype: date
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this Invoice.


        :param date_from: The date_from of this Invoice.
        :type date_from: date
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this Invoice.


        :return: The date_to of this Invoice.
        :rtype: date
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this Invoice.


        :param date_to: The date_to of this Invoice.
        :type date_to: date
        """

        self._date_to = date_to

    @property
    def deleted(self):
        """Gets the deleted of this Invoice.

        Only present if it's a deleted object

        :return: The deleted of this Invoice.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this Invoice.

        Only present if it's a deleted object

        :param deleted: The deleted of this Invoice.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def downloaded(self):
        """Gets the downloaded of this Invoice.


        :return: The downloaded of this Invoice.
        :rtype: str
        """
        return self._downloaded

    @downloaded.setter
    def downloaded(self, downloaded):
        """Sets the downloaded of this Invoice.


        :param downloaded: The downloaded of this Invoice.
        :type downloaded: str
        """

        self._downloaded = downloaded

    @property
    def erp_id(self):
        """Gets the erp_id of this Invoice.


        :return: The erp_id of this Invoice.
        :rtype: str
        """
        return self._erp_id

    @erp_id.setter
    def erp_id(self, erp_id):
        """Sets the erp_id of this Invoice.


        :param erp_id: The erp_id of this Invoice.
        :type erp_id: str
        """
        if erp_id is not None and len(erp_id) > 255:
            raise ValueError("Invalid value for `erp_id`, length must be less than or equal to `255`")

        self._erp_id = erp_id

    @property
    def erp_payment_term_id(self):
        """Gets the erp_payment_term_id of this Invoice.


        :return: The erp_payment_term_id of this Invoice.
        :rtype: str
        """
        return self._erp_payment_term_id

    @erp_payment_term_id.setter
    def erp_payment_term_id(self, erp_payment_term_id):
        """Sets the erp_payment_term_id of this Invoice.


        :param erp_payment_term_id: The erp_payment_term_id of this Invoice.
        :type erp_payment_term_id: str
        """
        if erp_payment_term_id is not None and len(erp_payment_term_id) > 255:
            raise ValueError("Invalid value for `erp_payment_term_id`, length must be less than or equal to `255`")

        self._erp_payment_term_id = erp_payment_term_id

    @property
    def eu_customer(self):
        """Gets the eu_customer of this Invoice.


        :return: The eu_customer of this Invoice.
        :rtype: bool
        """
        return self._eu_customer

    @eu_customer.setter
    def eu_customer(self, eu_customer):
        """Sets the eu_customer of this Invoice.


        :param eu_customer: The eu_customer of this Invoice.
        :type eu_customer: bool
        """

        self._eu_customer = eu_customer

    @property
    def gross_payment(self):
        """Gets the gross_payment of this Invoice.


        :return: The gross_payment of this Invoice.
        :rtype: float
        """
        return self._gross_payment

    @gross_payment.setter
    def gross_payment(self, gross_payment):
        """Sets the gross_payment of this Invoice.


        :param gross_payment: The gross_payment of this Invoice.
        :type gross_payment: float
        """

        self._gross_payment = gross_payment

    @property
    def group_by_forms(self):
        """Gets the group_by_forms of this Invoice.


        :return: The group_by_forms of this Invoice.
        :rtype: bool
        """
        return self._group_by_forms

    @group_by_forms.setter
    def group_by_forms(self, group_by_forms):
        """Sets the group_by_forms of this Invoice.


        :param group_by_forms: The group_by_forms of this Invoice.
        :type group_by_forms: bool
        """

        self._group_by_forms = group_by_forms

    @property
    def id(self):
        """Gets the id of this Invoice.


        :return: The id of this Invoice.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Invoice.


        :param id: The id of this Invoice.
        :type id: str
        """

        self._id = id

    @property
    def include_invoiced_lines(self):
        """Gets the include_invoiced_lines of this Invoice.


        :return: The include_invoiced_lines of this Invoice.
        :rtype: bool
        """
        return self._include_invoiced_lines

    @include_invoiced_lines.setter
    def include_invoiced_lines(self, include_invoiced_lines):
        """Sets the include_invoiced_lines of this Invoice.


        :param include_invoiced_lines: The include_invoiced_lines of this Invoice.
        :type include_invoiced_lines: bool
        """

        self._include_invoiced_lines = include_invoiced_lines

    @property
    def integration_id(self):
        """Gets the integration_id of this Invoice.


        :return: The integration_id of this Invoice.
        :rtype: str
        """
        return self._integration_id

    @integration_id.setter
    def integration_id(self, integration_id):
        """Sets the integration_id of this Invoice.


        :param integration_id: The integration_id of this Invoice.
        :type integration_id: str
        """

        self._integration_id = integration_id

    @property
    def invoice_number(self):
        """Gets the invoice_number of this Invoice.


        :return: The invoice_number of this Invoice.
        :rtype: int
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this Invoice.


        :param invoice_number: The invoice_number of this Invoice.
        :type invoice_number: int
        """

        self._invoice_number = invoice_number

    @property
    def is_draft(self):
        """Gets the is_draft of this Invoice.


        :return: The is_draft of this Invoice.
        :rtype: bool
        """
        return self._is_draft

    @is_draft.setter
    def is_draft(self, is_draft):
        """Sets the is_draft of this Invoice.


        :param is_draft: The is_draft of this Invoice.
        :type is_draft: bool
        """

        self._is_draft = is_draft

    @property
    def is_final_invoice(self):
        """Gets the is_final_invoice of this Invoice.


        :return: The is_final_invoice of this Invoice.
        :rtype: bool
        """
        return self._is_final_invoice

    @is_final_invoice.setter
    def is_final_invoice(self, is_final_invoice):
        """Sets the is_final_invoice of this Invoice.


        :param is_final_invoice: The is_final_invoice of this Invoice.
        :type is_final_invoice: bool
        """

        self._is_final_invoice = is_final_invoice

    @property
    def is_locked(self):
        """Gets the is_locked of this Invoice.


        :return: The is_locked of this Invoice.
        :rtype: bool
        """
        return self._is_locked

    @is_locked.setter
    def is_locked(self, is_locked):
        """Sets the is_locked of this Invoice.


        :param is_locked: The is_locked of this Invoice.
        :type is_locked: bool
        """

        self._is_locked = is_locked

    @property
    def is_offer(self):
        """Gets the is_offer of this Invoice.


        :return: The is_offer of this Invoice.
        :rtype: bool
        """
        return self._is_offer

    @is_offer.setter
    def is_offer(self, is_offer):
        """Sets the is_offer of this Invoice.


        :param is_offer: The is_offer of this Invoice.
        :type is_offer: bool
        """

        self._is_offer = is_offer

    @property
    def issued_date(self):
        """Gets the issued_date of this Invoice.


        :return: The issued_date of this Invoice.
        :rtype: date
        """
        return self._issued_date

    @issued_date.setter
    def issued_date(self, issued_date):
        """Sets the issued_date of this Invoice.


        :param issued_date: The issued_date of this Invoice.
        :type issued_date: date
        """

        self._issued_date = issued_date

    @property
    def message(self):
        """Gets the message of this Invoice.


        :return: The message of this Invoice.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Invoice.


        :param message: The message of this Invoice.
        :type message: str
        """
        if message is not None and len(message) > 8192:
            raise ValueError("Invalid value for `message`, length must be less than or equal to `8192`")

        self._message = message

    @property
    def modified(self):
        """Gets the modified of this Invoice.


        :return: The modified of this Invoice.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this Invoice.


        :param modified: The modified of this Invoice.
        :type modified: str
        """

        self._modified = modified

    @property
    def net_payment(self):
        """Gets the net_payment of this Invoice.


        :return: The net_payment of this Invoice.
        :rtype: float
        """
        return self._net_payment

    @net_payment.setter
    def net_payment(self, net_payment):
        """Sets the net_payment of this Invoice.


        :param net_payment: The net_payment of this Invoice.
        :type net_payment: float
        """

        self._net_payment = net_payment

    @property
    def offer_number(self):
        """Gets the offer_number of this Invoice.


        :return: The offer_number of this Invoice.
        :rtype: int
        """
        return self._offer_number

    @offer_number.setter
    def offer_number(self, offer_number):
        """Sets the offer_number of this Invoice.


        :param offer_number: The offer_number of this Invoice.
        :type offer_number: int
        """

        self._offer_number = offer_number

    @property
    def order_line_group_id(self):
        """Gets the order_line_group_id of this Invoice.


        :return: The order_line_group_id of this Invoice.
        :rtype: str
        """
        return self._order_line_group_id

    @order_line_group_id.setter
    def order_line_group_id(self, order_line_group_id):
        """Sets the order_line_group_id of this Invoice.


        :param order_line_group_id: The order_line_group_id of this Invoice.
        :type order_line_group_id: str
        """

        self._order_line_group_id = order_line_group_id

    @property
    def payment_due_date(self):
        """Gets the payment_due_date of this Invoice.


        :return: The payment_due_date of this Invoice.
        :rtype: date
        """
        return self._payment_due_date

    @payment_due_date.setter
    def payment_due_date(self, payment_due_date):
        """Sets the payment_due_date of this Invoice.


        :param payment_due_date: The payment_due_date of this Invoice.
        :type payment_due_date: date
        """

        self._payment_due_date = payment_due_date

    @property
    def payment_term_id(self):
        """Gets the payment_term_id of this Invoice.


        :return: The payment_term_id of this Invoice.
        :rtype: str
        """
        return self._payment_term_id

    @payment_term_id.setter
    def payment_term_id(self, payment_term_id):
        """Sets the payment_term_id of this Invoice.


        :param payment_term_id: The payment_term_id of this Invoice.
        :type payment_term_id: str
        """

        self._payment_term_id = payment_term_id

    @property
    def project_id(self):
        """Gets the project_id of this Invoice.


        :return: The project_id of this Invoice.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this Invoice.


        :param project_id: The project_id of this Invoice.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def project_overview_attached(self):
        """Gets the project_overview_attached of this Invoice.


        :return: The project_overview_attached of this Invoice.
        :rtype: bool
        """
        return self._project_overview_attached

    @project_overview_attached.setter
    def project_overview_attached(self, project_overview_attached):
        """Sets the project_overview_attached of this Invoice.


        :param project_overview_attached: The project_overview_attached of this Invoice.
        :type project_overview_attached: bool
        """

        self._project_overview_attached = project_overview_attached

    @property
    def reference(self):
        """Gets the reference of this Invoice.


        :return: The reference of this Invoice.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this Invoice.


        :param reference: The reference of this Invoice.
        :type reference: str
        """
        if reference is not None and len(reference) > 255:
            raise ValueError("Invalid value for `reference`, length must be less than or equal to `255`")

        self._reference = reference

    @property
    def show_employee_name(self):
        """Gets the show_employee_name of this Invoice.


        :return: The show_employee_name of this Invoice.
        :rtype: bool
        """
        return self._show_employee_name

    @show_employee_name.setter
    def show_employee_name(self, show_employee_name):
        """Sets the show_employee_name of this Invoice.


        :param show_employee_name: The show_employee_name of this Invoice.
        :type show_employee_name: bool
        """

        self._show_employee_name = show_employee_name

    @property
    def show_price_product_bundle(self):
        """Gets the show_price_product_bundle of this Invoice.


        :return: The show_price_product_bundle of this Invoice.
        :rtype: bool
        """
        return self._show_price_product_bundle

    @show_price_product_bundle.setter
    def show_price_product_bundle(self, show_price_product_bundle):
        """Sets the show_price_product_bundle of this Invoice.


        :param show_price_product_bundle: The show_price_product_bundle of this Invoice.
        :type show_price_product_bundle: bool
        """

        self._show_price_product_bundle = show_price_product_bundle

    @property
    def show_prices_products_and_hours(self):
        """Gets the show_prices_products_and_hours of this Invoice.


        :return: The show_prices_products_and_hours of this Invoice.
        :rtype: bool
        """
        return self._show_prices_products_and_hours

    @show_prices_products_and_hours.setter
    def show_prices_products_and_hours(self, show_prices_products_and_hours):
        """Sets the show_prices_products_and_hours of this Invoice.


        :param show_prices_products_and_hours: The show_prices_products_and_hours of this Invoice.
        :type show_prices_products_and_hours: bool
        """

        self._show_prices_products_and_hours = show_prices_products_and_hours

    @property
    def show_product_images(self):
        """Gets the show_product_images of this Invoice.


        :return: The show_product_images of this Invoice.
        :rtype: bool
        """
        return self._show_product_images

    @show_product_images.setter
    def show_product_images(self, show_product_images):
        """Sets the show_product_images of this Invoice.


        :param show_product_images: The show_product_images of this Invoice.
        :type show_product_images: bool
        """

        self._show_product_images = show_product_images

    @property
    def show_products_product_bundle(self):
        """Gets the show_products_product_bundle of this Invoice.


        :return: The show_products_product_bundle of this Invoice.
        :rtype: bool
        """
        return self._show_products_product_bundle

    @show_products_product_bundle.setter
    def show_products_product_bundle(self, show_products_product_bundle):
        """Sets the show_products_product_bundle of this Invoice.


        :param show_products_product_bundle: The show_products_product_bundle of this Invoice.
        :type show_products_product_bundle: bool
        """

        self._show_products_product_bundle = show_products_product_bundle

    @property
    def title(self):
        """Gets the title of this Invoice.


        :return: The title of this Invoice.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Invoice.


        :param title: The title of this Invoice.
        :type title: str
        """
        if title is not None and len(title) > 255:
            raise ValueError("Invalid value for `title`, length must be less than or equal to `255`")

        self._title = title

    @property
    def total_cost_price(self):
        """Gets the total_cost_price of this Invoice.


        :return: The total_cost_price of this Invoice.
        :rtype: float
        """
        return self._total_cost_price

    @total_cost_price.setter
    def total_cost_price(self, total_cost_price):
        """Sets the total_cost_price of this Invoice.


        :param total_cost_price: The total_cost_price of this Invoice.
        :type total_cost_price: float
        """

        self._total_cost_price = total_cost_price

    @property
    def total_discount_percent(self):
        """Gets the total_discount_percent of this Invoice.


        :return: The total_discount_percent of this Invoice.
        :rtype: float
        """
        return self._total_discount_percent

    @total_discount_percent.setter
    def total_discount_percent(self, total_discount_percent):
        """Sets the total_discount_percent of this Invoice.


        :param total_discount_percent: The total_discount_percent of this Invoice.
        :type total_discount_percent: float
        """

        self._total_discount_percent = total_discount_percent

    @property
    def vat_percent(self):
        """Gets the vat_percent of this Invoice.


        :return: The vat_percent of this Invoice.
        :rtype: int
        """
        return self._vat_percent

    @vat_percent.setter
    def vat_percent(self, vat_percent):
        """Sets the vat_percent of this Invoice.


        :param vat_percent: The vat_percent of this Invoice.
        :type vat_percent: int
        """

        self._vat_percent = vat_percent

    @property
    def vendor_id(self):
        """Gets the vendor_id of this Invoice.


        :return: The vendor_id of this Invoice.
        :rtype: str
        """
        return self._vendor_id

    @vendor_id.setter
    def vendor_id(self, vendor_id):
        """Sets the vendor_id of this Invoice.


        :param vendor_id: The vendor_id of this Invoice.
        :type vendor_id: str
        """

        self._vendor_id = vendor_id
