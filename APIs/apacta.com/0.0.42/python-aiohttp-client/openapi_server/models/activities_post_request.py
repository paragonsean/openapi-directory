# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivitiesPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hex_code: str=None, name: str=None):
        """ActivitiesPostRequest - a model defined in OpenAPI

        :param hex_code: The hex_code of this ActivitiesPostRequest.
        :param name: The name of this ActivitiesPostRequest.
        """
        self.openapi_types = {
            'hex_code': str,
            'name': str
        }

        self.attribute_map = {
            'hex_code': 'hex_code',
            'name': 'name'
        }

        self._hex_code = hex_code
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivitiesPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _activities_post_request of this ActivitiesPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hex_code(self):
        """Gets the hex_code of this ActivitiesPostRequest.


        :return: The hex_code of this ActivitiesPostRequest.
        :rtype: str
        """
        return self._hex_code

    @hex_code.setter
    def hex_code(self, hex_code):
        """Sets the hex_code of this ActivitiesPostRequest.


        :param hex_code: The hex_code of this ActivitiesPostRequest.
        :type hex_code: str
        """
        if hex_code is not None and len(hex_code) > 6:
            raise ValueError("Invalid value for `hex_code`, length must be less than or equal to `6`")

        self._hex_code = hex_code

    @property
    def name(self):
        """Gets the name of this ActivitiesPostRequest.


        :return: The name of this ActivitiesPostRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ActivitiesPostRequest.


        :param name: The name of this ActivitiesPostRequest.
        :type name: str
        """
        if name is not None and len(name) > 255:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")

        self._name = name
