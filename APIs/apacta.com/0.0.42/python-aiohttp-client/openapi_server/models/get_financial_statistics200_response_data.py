# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetFinancialStatistics200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invoiced_amount: float=None, invoiced_working_hours: str=None, not_invoiced_amount: float=None, not_invoiced_working_hours: str=None, products_costs: float=None, products_sales: float=None, rentals_costs: float=None, rentals_sales: float=None, total_costs: float=None, total_sales: float=None, work_time_costs: float=None, work_time_sales: float=None):
        """GetFinancialStatistics200ResponseData - a model defined in OpenAPI

        :param invoiced_amount: The invoiced_amount of this GetFinancialStatistics200ResponseData.
        :param invoiced_working_hours: The invoiced_working_hours of this GetFinancialStatistics200ResponseData.
        :param not_invoiced_amount: The not_invoiced_amount of this GetFinancialStatistics200ResponseData.
        :param not_invoiced_working_hours: The not_invoiced_working_hours of this GetFinancialStatistics200ResponseData.
        :param products_costs: The products_costs of this GetFinancialStatistics200ResponseData.
        :param products_sales: The products_sales of this GetFinancialStatistics200ResponseData.
        :param rentals_costs: The rentals_costs of this GetFinancialStatistics200ResponseData.
        :param rentals_sales: The rentals_sales of this GetFinancialStatistics200ResponseData.
        :param total_costs: The total_costs of this GetFinancialStatistics200ResponseData.
        :param total_sales: The total_sales of this GetFinancialStatistics200ResponseData.
        :param work_time_costs: The work_time_costs of this GetFinancialStatistics200ResponseData.
        :param work_time_sales: The work_time_sales of this GetFinancialStatistics200ResponseData.
        """
        self.openapi_types = {
            'invoiced_amount': float,
            'invoiced_working_hours': str,
            'not_invoiced_amount': float,
            'not_invoiced_working_hours': str,
            'products_costs': float,
            'products_sales': float,
            'rentals_costs': float,
            'rentals_sales': float,
            'total_costs': float,
            'total_sales': float,
            'work_time_costs': float,
            'work_time_sales': float
        }

        self.attribute_map = {
            'invoiced_amount': 'invoicedAmount',
            'invoiced_working_hours': 'invoicedWorkingHours',
            'not_invoiced_amount': 'notInvoicedAmount',
            'not_invoiced_working_hours': 'notInvoicedWorkingHours',
            'products_costs': 'productsCosts',
            'products_sales': 'productsSales',
            'rentals_costs': 'rentalsCosts',
            'rentals_sales': 'rentalsSales',
            'total_costs': 'totalCosts',
            'total_sales': 'totalSales',
            'work_time_costs': 'workTimeCosts',
            'work_time_sales': 'workTimeSales'
        }

        self._invoiced_amount = invoiced_amount
        self._invoiced_working_hours = invoiced_working_hours
        self._not_invoiced_amount = not_invoiced_amount
        self._not_invoiced_working_hours = not_invoiced_working_hours
        self._products_costs = products_costs
        self._products_sales = products_sales
        self._rentals_costs = rentals_costs
        self._rentals_sales = rentals_sales
        self._total_costs = total_costs
        self._total_sales = total_sales
        self._work_time_costs = work_time_costs
        self._work_time_sales = work_time_sales

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFinancialStatistics200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getFinancialStatistics_200_response_data of this GetFinancialStatistics200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoiced_amount(self):
        """Gets the invoiced_amount of this GetFinancialStatistics200ResponseData.


        :return: The invoiced_amount of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._invoiced_amount

    @invoiced_amount.setter
    def invoiced_amount(self, invoiced_amount):
        """Sets the invoiced_amount of this GetFinancialStatistics200ResponseData.


        :param invoiced_amount: The invoiced_amount of this GetFinancialStatistics200ResponseData.
        :type invoiced_amount: float
        """

        self._invoiced_amount = invoiced_amount

    @property
    def invoiced_working_hours(self):
        """Gets the invoiced_working_hours of this GetFinancialStatistics200ResponseData.


        :return: The invoiced_working_hours of this GetFinancialStatistics200ResponseData.
        :rtype: str
        """
        return self._invoiced_working_hours

    @invoiced_working_hours.setter
    def invoiced_working_hours(self, invoiced_working_hours):
        """Sets the invoiced_working_hours of this GetFinancialStatistics200ResponseData.


        :param invoiced_working_hours: The invoiced_working_hours of this GetFinancialStatistics200ResponseData.
        :type invoiced_working_hours: str
        """

        self._invoiced_working_hours = invoiced_working_hours

    @property
    def not_invoiced_amount(self):
        """Gets the not_invoiced_amount of this GetFinancialStatistics200ResponseData.


        :return: The not_invoiced_amount of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._not_invoiced_amount

    @not_invoiced_amount.setter
    def not_invoiced_amount(self, not_invoiced_amount):
        """Sets the not_invoiced_amount of this GetFinancialStatistics200ResponseData.


        :param not_invoiced_amount: The not_invoiced_amount of this GetFinancialStatistics200ResponseData.
        :type not_invoiced_amount: float
        """

        self._not_invoiced_amount = not_invoiced_amount

    @property
    def not_invoiced_working_hours(self):
        """Gets the not_invoiced_working_hours of this GetFinancialStatistics200ResponseData.


        :return: The not_invoiced_working_hours of this GetFinancialStatistics200ResponseData.
        :rtype: str
        """
        return self._not_invoiced_working_hours

    @not_invoiced_working_hours.setter
    def not_invoiced_working_hours(self, not_invoiced_working_hours):
        """Sets the not_invoiced_working_hours of this GetFinancialStatistics200ResponseData.


        :param not_invoiced_working_hours: The not_invoiced_working_hours of this GetFinancialStatistics200ResponseData.
        :type not_invoiced_working_hours: str
        """

        self._not_invoiced_working_hours = not_invoiced_working_hours

    @property
    def products_costs(self):
        """Gets the products_costs of this GetFinancialStatistics200ResponseData.


        :return: The products_costs of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._products_costs

    @products_costs.setter
    def products_costs(self, products_costs):
        """Sets the products_costs of this GetFinancialStatistics200ResponseData.


        :param products_costs: The products_costs of this GetFinancialStatistics200ResponseData.
        :type products_costs: float
        """

        self._products_costs = products_costs

    @property
    def products_sales(self):
        """Gets the products_sales of this GetFinancialStatistics200ResponseData.


        :return: The products_sales of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._products_sales

    @products_sales.setter
    def products_sales(self, products_sales):
        """Sets the products_sales of this GetFinancialStatistics200ResponseData.


        :param products_sales: The products_sales of this GetFinancialStatistics200ResponseData.
        :type products_sales: float
        """

        self._products_sales = products_sales

    @property
    def rentals_costs(self):
        """Gets the rentals_costs of this GetFinancialStatistics200ResponseData.


        :return: The rentals_costs of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._rentals_costs

    @rentals_costs.setter
    def rentals_costs(self, rentals_costs):
        """Sets the rentals_costs of this GetFinancialStatistics200ResponseData.


        :param rentals_costs: The rentals_costs of this GetFinancialStatistics200ResponseData.
        :type rentals_costs: float
        """

        self._rentals_costs = rentals_costs

    @property
    def rentals_sales(self):
        """Gets the rentals_sales of this GetFinancialStatistics200ResponseData.


        :return: The rentals_sales of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._rentals_sales

    @rentals_sales.setter
    def rentals_sales(self, rentals_sales):
        """Sets the rentals_sales of this GetFinancialStatistics200ResponseData.


        :param rentals_sales: The rentals_sales of this GetFinancialStatistics200ResponseData.
        :type rentals_sales: float
        """

        self._rentals_sales = rentals_sales

    @property
    def total_costs(self):
        """Gets the total_costs of this GetFinancialStatistics200ResponseData.


        :return: The total_costs of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._total_costs

    @total_costs.setter
    def total_costs(self, total_costs):
        """Sets the total_costs of this GetFinancialStatistics200ResponseData.


        :param total_costs: The total_costs of this GetFinancialStatistics200ResponseData.
        :type total_costs: float
        """

        self._total_costs = total_costs

    @property
    def total_sales(self):
        """Gets the total_sales of this GetFinancialStatistics200ResponseData.


        :return: The total_sales of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._total_sales

    @total_sales.setter
    def total_sales(self, total_sales):
        """Sets the total_sales of this GetFinancialStatistics200ResponseData.


        :param total_sales: The total_sales of this GetFinancialStatistics200ResponseData.
        :type total_sales: float
        """

        self._total_sales = total_sales

    @property
    def work_time_costs(self):
        """Gets the work_time_costs of this GetFinancialStatistics200ResponseData.


        :return: The work_time_costs of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._work_time_costs

    @work_time_costs.setter
    def work_time_costs(self, work_time_costs):
        """Sets the work_time_costs of this GetFinancialStatistics200ResponseData.


        :param work_time_costs: The work_time_costs of this GetFinancialStatistics200ResponseData.
        :type work_time_costs: float
        """

        self._work_time_costs = work_time_costs

    @property
    def work_time_sales(self):
        """Gets the work_time_sales of this GetFinancialStatistics200ResponseData.


        :return: The work_time_sales of this GetFinancialStatistics200ResponseData.
        :rtype: float
        """
        return self._work_time_sales

    @work_time_sales.setter
    def work_time_sales(self, work_time_sales):
        """Sets the work_time_sales of this GetFinancialStatistics200ResponseData.


        :param work_time_sales: The work_time_sales of this GetFinancialStatistics200ResponseData.
        :type work_time_sales: float
        """

        self._work_time_sales = work_time_sales
