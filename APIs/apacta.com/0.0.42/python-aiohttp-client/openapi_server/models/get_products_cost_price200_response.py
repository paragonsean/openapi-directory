# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetProductsCostPrice200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, products_cost_price: float=None):
        """GetProductsCostPrice200Response - a model defined in OpenAPI

        :param products_cost_price: The products_cost_price of this GetProductsCostPrice200Response.
        """
        self.openapi_types = {
            'products_cost_price': float
        }

        self.attribute_map = {
            'products_cost_price': 'productsCostPrice'
        }

        self._products_cost_price = products_cost_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetProductsCostPrice200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getProductsCostPrice_200_response of this GetProductsCostPrice200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def products_cost_price(self):
        """Gets the products_cost_price of this GetProductsCostPrice200Response.


        :return: The products_cost_price of this GetProductsCostPrice200Response.
        :rtype: float
        """
        return self._products_cost_price

    @products_cost_price.setter
    def products_cost_price(self, products_cost_price):
        """Sets the products_cost_price of this GetProductsCostPrice200Response.


        :param products_cost_price: The products_cost_price of this GetProductsCostPrice200Response.
        :type products_cost_price: float
        """

        self._products_cost_price = products_cost_price
