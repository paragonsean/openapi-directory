# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InvoiceFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, deleted: str=None, file_id: str=None, id: str=None, invoice_id: str=None, modified: str=None, type: str=None):
        """InvoiceFile - a model defined in OpenAPI

        :param created: The created of this InvoiceFile.
        :param deleted: The deleted of this InvoiceFile.
        :param file_id: The file_id of this InvoiceFile.
        :param id: The id of this InvoiceFile.
        :param invoice_id: The invoice_id of this InvoiceFile.
        :param modified: The modified of this InvoiceFile.
        :param type: The type of this InvoiceFile.
        """
        self.openapi_types = {
            'created': str,
            'deleted': str,
            'file_id': str,
            'id': str,
            'invoice_id': str,
            'modified': str,
            'type': str
        }

        self.attribute_map = {
            'created': 'created',
            'deleted': 'deleted',
            'file_id': 'file_id',
            'id': 'id',
            'invoice_id': 'invoice_id',
            'modified': 'modified',
            'type': 'type'
        }

        self._created = created
        self._deleted = deleted
        self._file_id = file_id
        self._id = id
        self._invoice_id = invoice_id
        self._modified = modified
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceFile of this InvoiceFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this InvoiceFile.


        :return: The created of this InvoiceFile.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this InvoiceFile.


        :param created: The created of this InvoiceFile.
        :type created: str
        """

        self._created = created

    @property
    def deleted(self):
        """Gets the deleted of this InvoiceFile.

        Only present if it's a deleted object

        :return: The deleted of this InvoiceFile.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this InvoiceFile.

        Only present if it's a deleted object

        :param deleted: The deleted of this InvoiceFile.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def file_id(self):
        """Gets the file_id of this InvoiceFile.


        :return: The file_id of this InvoiceFile.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this InvoiceFile.


        :param file_id: The file_id of this InvoiceFile.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def id(self):
        """Gets the id of this InvoiceFile.


        :return: The id of this InvoiceFile.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InvoiceFile.


        :param id: The id of this InvoiceFile.
        :type id: str
        """

        self._id = id

    @property
    def invoice_id(self):
        """Gets the invoice_id of this InvoiceFile.


        :return: The invoice_id of this InvoiceFile.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this InvoiceFile.


        :param invoice_id: The invoice_id of this InvoiceFile.
        :type invoice_id: str
        """

        self._invoice_id = invoice_id

    @property
    def modified(self):
        """Gets the modified of this InvoiceFile.


        :return: The modified of this InvoiceFile.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this InvoiceFile.


        :param modified: The modified of this InvoiceFile.
        :type modified: str
        """

        self._modified = modified

    @property
    def type(self):
        """Gets the type of this InvoiceFile.


        :return: The type of this InvoiceFile.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InvoiceFile.


        :param type: The type of this InvoiceFile.
        :type type: str
        """
        if type is not None and len(type) > 255:
            raise ValueError("Invalid value for `type`, length must be less than or equal to `255`")

        self._type = type
