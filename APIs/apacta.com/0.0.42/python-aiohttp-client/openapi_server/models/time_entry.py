# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, created_by_id: str=None, deleted: str=None, form_id: str=None, from_time: str=None, id: str=None, is_all_day: bool=None, modified: str=None, modified_by_id: str=None, project_id: str=None, sum: int=None, time_entry_type_id: str=None, to_time: str=None, user_id: str=None):
        """TimeEntry - a model defined in OpenAPI

        :param created: The created of this TimeEntry.
        :param created_by_id: The created_by_id of this TimeEntry.
        :param deleted: The deleted of this TimeEntry.
        :param form_id: The form_id of this TimeEntry.
        :param from_time: The from_time of this TimeEntry.
        :param id: The id of this TimeEntry.
        :param is_all_day: The is_all_day of this TimeEntry.
        :param modified: The modified of this TimeEntry.
        :param modified_by_id: The modified_by_id of this TimeEntry.
        :param project_id: The project_id of this TimeEntry.
        :param sum: The sum of this TimeEntry.
        :param time_entry_type_id: The time_entry_type_id of this TimeEntry.
        :param to_time: The to_time of this TimeEntry.
        :param user_id: The user_id of this TimeEntry.
        """
        self.openapi_types = {
            'created': str,
            'created_by_id': str,
            'deleted': str,
            'form_id': str,
            'from_time': str,
            'id': str,
            'is_all_day': bool,
            'modified': str,
            'modified_by_id': str,
            'project_id': str,
            'sum': int,
            'time_entry_type_id': str,
            'to_time': str,
            'user_id': str
        }

        self.attribute_map = {
            'created': 'created',
            'created_by_id': 'created_by_id',
            'deleted': 'deleted',
            'form_id': 'form_id',
            'from_time': 'from_time',
            'id': 'id',
            'is_all_day': 'is_all_day',
            'modified': 'modified',
            'modified_by_id': 'modified_by_id',
            'project_id': 'project_id',
            'sum': 'sum',
            'time_entry_type_id': 'time_entry_type_id',
            'to_time': 'to_time',
            'user_id': 'user_id'
        }

        self._created = created
        self._created_by_id = created_by_id
        self._deleted = deleted
        self._form_id = form_id
        self._from_time = from_time
        self._id = id
        self._is_all_day = is_all_day
        self._modified = modified
        self._modified_by_id = modified_by_id
        self._project_id = project_id
        self._sum = sum
        self._time_entry_type_id = time_entry_type_id
        self._to_time = to_time
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeEntry of this TimeEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this TimeEntry.


        :return: The created of this TimeEntry.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this TimeEntry.


        :param created: The created of this TimeEntry.
        :type created: str
        """

        self._created = created

    @property
    def created_by_id(self):
        """Gets the created_by_id of this TimeEntry.


        :return: The created_by_id of this TimeEntry.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this TimeEntry.


        :param created_by_id: The created_by_id of this TimeEntry.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def deleted(self):
        """Gets the deleted of this TimeEntry.

        Only present if it's a deleted object

        :return: The deleted of this TimeEntry.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this TimeEntry.

        Only present if it's a deleted object

        :param deleted: The deleted of this TimeEntry.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def form_id(self):
        """Gets the form_id of this TimeEntry.


        :return: The form_id of this TimeEntry.
        :rtype: str
        """
        return self._form_id

    @form_id.setter
    def form_id(self, form_id):
        """Sets the form_id of this TimeEntry.


        :param form_id: The form_id of this TimeEntry.
        :type form_id: str
        """

        self._form_id = form_id

    @property
    def from_time(self):
        """Gets the from_time of this TimeEntry.


        :return: The from_time of this TimeEntry.
        :rtype: str
        """
        return self._from_time

    @from_time.setter
    def from_time(self, from_time):
        """Sets the from_time of this TimeEntry.


        :param from_time: The from_time of this TimeEntry.
        :type from_time: str
        """

        self._from_time = from_time

    @property
    def id(self):
        """Gets the id of this TimeEntry.


        :return: The id of this TimeEntry.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TimeEntry.


        :param id: The id of this TimeEntry.
        :type id: str
        """

        self._id = id

    @property
    def is_all_day(self):
        """Gets the is_all_day of this TimeEntry.


        :return: The is_all_day of this TimeEntry.
        :rtype: bool
        """
        return self._is_all_day

    @is_all_day.setter
    def is_all_day(self, is_all_day):
        """Sets the is_all_day of this TimeEntry.


        :param is_all_day: The is_all_day of this TimeEntry.
        :type is_all_day: bool
        """

        self._is_all_day = is_all_day

    @property
    def modified(self):
        """Gets the modified of this TimeEntry.


        :return: The modified of this TimeEntry.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this TimeEntry.


        :param modified: The modified of this TimeEntry.
        :type modified: str
        """

        self._modified = modified

    @property
    def modified_by_id(self):
        """Gets the modified_by_id of this TimeEntry.


        :return: The modified_by_id of this TimeEntry.
        :rtype: str
        """
        return self._modified_by_id

    @modified_by_id.setter
    def modified_by_id(self, modified_by_id):
        """Sets the modified_by_id of this TimeEntry.


        :param modified_by_id: The modified_by_id of this TimeEntry.
        :type modified_by_id: str
        """

        self._modified_by_id = modified_by_id

    @property
    def project_id(self):
        """Gets the project_id of this TimeEntry.


        :return: The project_id of this TimeEntry.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this TimeEntry.


        :param project_id: The project_id of this TimeEntry.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def sum(self):
        """Gets the sum of this TimeEntry.

        Amount of seconds

        :return: The sum of this TimeEntry.
        :rtype: int
        """
        return self._sum

    @sum.setter
    def sum(self, sum):
        """Sets the sum of this TimeEntry.

        Amount of seconds

        :param sum: The sum of this TimeEntry.
        :type sum: int
        """

        self._sum = sum

    @property
    def time_entry_type_id(self):
        """Gets the time_entry_type_id of this TimeEntry.


        :return: The time_entry_type_id of this TimeEntry.
        :rtype: str
        """
        return self._time_entry_type_id

    @time_entry_type_id.setter
    def time_entry_type_id(self, time_entry_type_id):
        """Sets the time_entry_type_id of this TimeEntry.


        :param time_entry_type_id: The time_entry_type_id of this TimeEntry.
        :type time_entry_type_id: str
        """

        self._time_entry_type_id = time_entry_type_id

    @property
    def to_time(self):
        """Gets the to_time of this TimeEntry.


        :return: The to_time of this TimeEntry.
        :rtype: str
        """
        return self._to_time

    @to_time.setter
    def to_time(self, to_time):
        """Sets the to_time of this TimeEntry.


        :param to_time: The to_time of this TimeEntry.
        :type to_time: str
        """

        self._to_time = to_time

    @property
    def user_id(self):
        """Gets the user_id of this TimeEntry.


        :return: The user_id of this TimeEntry.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this TimeEntry.


        :param user_id: The user_id of this TimeEntry.
        :type user_id: str
        """

        self._user_id = user_id
