# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClockingRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checked_in: str=None, checked_out: str=None, checkin_latitude: str=None, checkin_longitude: str=None, checkout_latitude: str=None, checkout_longitude: str=None, created: str=None, created_by_id: str=None, deleted: str=None, id: str=None, modified: str=None, modified_by_id: str=None, project_id: str=None, user_id: str=None):
        """ClockingRecord - a model defined in OpenAPI

        :param checked_in: The checked_in of this ClockingRecord.
        :param checked_out: The checked_out of this ClockingRecord.
        :param checkin_latitude: The checkin_latitude of this ClockingRecord.
        :param checkin_longitude: The checkin_longitude of this ClockingRecord.
        :param checkout_latitude: The checkout_latitude of this ClockingRecord.
        :param checkout_longitude: The checkout_longitude of this ClockingRecord.
        :param created: The created of this ClockingRecord.
        :param created_by_id: The created_by_id of this ClockingRecord.
        :param deleted: The deleted of this ClockingRecord.
        :param id: The id of this ClockingRecord.
        :param modified: The modified of this ClockingRecord.
        :param modified_by_id: The modified_by_id of this ClockingRecord.
        :param project_id: The project_id of this ClockingRecord.
        :param user_id: The user_id of this ClockingRecord.
        """
        self.openapi_types = {
            'checked_in': str,
            'checked_out': str,
            'checkin_latitude': str,
            'checkin_longitude': str,
            'checkout_latitude': str,
            'checkout_longitude': str,
            'created': str,
            'created_by_id': str,
            'deleted': str,
            'id': str,
            'modified': str,
            'modified_by_id': str,
            'project_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'checked_in': 'checked_in',
            'checked_out': 'checked_out',
            'checkin_latitude': 'checkin_latitude',
            'checkin_longitude': 'checkin_longitude',
            'checkout_latitude': 'checkout_latitude',
            'checkout_longitude': 'checkout_longitude',
            'created': 'created',
            'created_by_id': 'created_by_id',
            'deleted': 'deleted',
            'id': 'id',
            'modified': 'modified',
            'modified_by_id': 'modified_by_id',
            'project_id': 'project_id',
            'user_id': 'user_id'
        }

        self._checked_in = checked_in
        self._checked_out = checked_out
        self._checkin_latitude = checkin_latitude
        self._checkin_longitude = checkin_longitude
        self._checkout_latitude = checkout_latitude
        self._checkout_longitude = checkout_longitude
        self._created = created
        self._created_by_id = created_by_id
        self._deleted = deleted
        self._id = id
        self._modified = modified
        self._modified_by_id = modified_by_id
        self._project_id = project_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClockingRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClockingRecord of this ClockingRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checked_in(self):
        """Gets the checked_in of this ClockingRecord.


        :return: The checked_in of this ClockingRecord.
        :rtype: str
        """
        return self._checked_in

    @checked_in.setter
    def checked_in(self, checked_in):
        """Sets the checked_in of this ClockingRecord.


        :param checked_in: The checked_in of this ClockingRecord.
        :type checked_in: str
        """

        self._checked_in = checked_in

    @property
    def checked_out(self):
        """Gets the checked_out of this ClockingRecord.


        :return: The checked_out of this ClockingRecord.
        :rtype: str
        """
        return self._checked_out

    @checked_out.setter
    def checked_out(self, checked_out):
        """Sets the checked_out of this ClockingRecord.


        :param checked_out: The checked_out of this ClockingRecord.
        :type checked_out: str
        """

        self._checked_out = checked_out

    @property
    def checkin_latitude(self):
        """Gets the checkin_latitude of this ClockingRecord.


        :return: The checkin_latitude of this ClockingRecord.
        :rtype: str
        """
        return self._checkin_latitude

    @checkin_latitude.setter
    def checkin_latitude(self, checkin_latitude):
        """Sets the checkin_latitude of this ClockingRecord.


        :param checkin_latitude: The checkin_latitude of this ClockingRecord.
        :type checkin_latitude: str
        """

        self._checkin_latitude = checkin_latitude

    @property
    def checkin_longitude(self):
        """Gets the checkin_longitude of this ClockingRecord.


        :return: The checkin_longitude of this ClockingRecord.
        :rtype: str
        """
        return self._checkin_longitude

    @checkin_longitude.setter
    def checkin_longitude(self, checkin_longitude):
        """Sets the checkin_longitude of this ClockingRecord.


        :param checkin_longitude: The checkin_longitude of this ClockingRecord.
        :type checkin_longitude: str
        """

        self._checkin_longitude = checkin_longitude

    @property
    def checkout_latitude(self):
        """Gets the checkout_latitude of this ClockingRecord.


        :return: The checkout_latitude of this ClockingRecord.
        :rtype: str
        """
        return self._checkout_latitude

    @checkout_latitude.setter
    def checkout_latitude(self, checkout_latitude):
        """Sets the checkout_latitude of this ClockingRecord.


        :param checkout_latitude: The checkout_latitude of this ClockingRecord.
        :type checkout_latitude: str
        """

        self._checkout_latitude = checkout_latitude

    @property
    def checkout_longitude(self):
        """Gets the checkout_longitude of this ClockingRecord.


        :return: The checkout_longitude of this ClockingRecord.
        :rtype: str
        """
        return self._checkout_longitude

    @checkout_longitude.setter
    def checkout_longitude(self, checkout_longitude):
        """Sets the checkout_longitude of this ClockingRecord.


        :param checkout_longitude: The checkout_longitude of this ClockingRecord.
        :type checkout_longitude: str
        """

        self._checkout_longitude = checkout_longitude

    @property
    def created(self):
        """Gets the created of this ClockingRecord.


        :return: The created of this ClockingRecord.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ClockingRecord.


        :param created: The created of this ClockingRecord.
        :type created: str
        """

        self._created = created

    @property
    def created_by_id(self):
        """Gets the created_by_id of this ClockingRecord.


        :return: The created_by_id of this ClockingRecord.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this ClockingRecord.


        :param created_by_id: The created_by_id of this ClockingRecord.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def deleted(self):
        """Gets the deleted of this ClockingRecord.

        Only present if it's a deleted object

        :return: The deleted of this ClockingRecord.
        :rtype: str
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this ClockingRecord.

        Only present if it's a deleted object

        :param deleted: The deleted of this ClockingRecord.
        :type deleted: str
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this ClockingRecord.


        :return: The id of this ClockingRecord.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ClockingRecord.


        :param id: The id of this ClockingRecord.
        :type id: str
        """

        self._id = id

    @property
    def modified(self):
        """Gets the modified of this ClockingRecord.


        :return: The modified of this ClockingRecord.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this ClockingRecord.


        :param modified: The modified of this ClockingRecord.
        :type modified: str
        """

        self._modified = modified

    @property
    def modified_by_id(self):
        """Gets the modified_by_id of this ClockingRecord.


        :return: The modified_by_id of this ClockingRecord.
        :rtype: str
        """
        return self._modified_by_id

    @modified_by_id.setter
    def modified_by_id(self, modified_by_id):
        """Sets the modified_by_id of this ClockingRecord.


        :param modified_by_id: The modified_by_id of this ClockingRecord.
        :type modified_by_id: str
        """

        self._modified_by_id = modified_by_id

    @property
    def project_id(self):
        """Gets the project_id of this ClockingRecord.


        :return: The project_id of this ClockingRecord.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this ClockingRecord.


        :param project_id: The project_id of this ClockingRecord.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def user_id(self):
        """Gets the user_id of this ClockingRecord.


        :return: The user_id of this ClockingRecord.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ClockingRecord.


        :param user_id: The user_id of this ClockingRecord.
        :type user_id: str
        """

        self._user_id = user_id
