# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.medias_post_request_payload_included_inner_one_of_attributes import MediasPostRequestPayloadIncludedInnerOneOfAttributes
from openapi_server.models.medias_post_request_payload_included_inner_one_of_relationships import MediasPostRequestPayloadIncludedInnerOneOfRelationships
from openapi_server import util


class MediasPostRequestPayloadIncludedInnerOneOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: MediasPostRequestPayloadIncludedInnerOneOfAttributes=None, id: str=None, relationships: MediasPostRequestPayloadIncludedInnerOneOfRelationships=None, type: str=None):
        """MediasPostRequestPayloadIncludedInnerOneOf - a model defined in OpenAPI

        :param attributes: The attributes of this MediasPostRequestPayloadIncludedInnerOneOf.
        :param id: The id of this MediasPostRequestPayloadIncludedInnerOneOf.
        :param relationships: The relationships of this MediasPostRequestPayloadIncludedInnerOneOf.
        :param type: The type of this MediasPostRequestPayloadIncludedInnerOneOf.
        """
        self.openapi_types = {
            'attributes': MediasPostRequestPayloadIncludedInnerOneOfAttributes,
            'id': str,
            'relationships': MediasPostRequestPayloadIncludedInnerOneOfRelationships,
            'type': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'id': 'id',
            'relationships': 'relationships',
            'type': 'type'
        }

        self._attributes = attributes
        self._id = id
        self._relationships = relationships
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediasPostRequestPayloadIncludedInnerOneOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _medias_post_request_payload_included_inner_oneOf of this MediasPostRequestPayloadIncludedInnerOneOf.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this MediasPostRequestPayloadIncludedInnerOneOf.


        :return: The attributes of this MediasPostRequestPayloadIncludedInnerOneOf.
        :rtype: MediasPostRequestPayloadIncludedInnerOneOfAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this MediasPostRequestPayloadIncludedInnerOneOf.


        :param attributes: The attributes of this MediasPostRequestPayloadIncludedInnerOneOf.
        :type attributes: MediasPostRequestPayloadIncludedInnerOneOfAttributes
        """

        self._attributes = attributes

    @property
    def id(self):
        """Gets the id of this MediasPostRequestPayloadIncludedInnerOneOf.


        :return: The id of this MediasPostRequestPayloadIncludedInnerOneOf.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MediasPostRequestPayloadIncludedInnerOneOf.


        :param id: The id of this MediasPostRequestPayloadIncludedInnerOneOf.
        :type id: str
        """

        self._id = id

    @property
    def relationships(self):
        """Gets the relationships of this MediasPostRequestPayloadIncludedInnerOneOf.


        :return: The relationships of this MediasPostRequestPayloadIncludedInnerOneOf.
        :rtype: MediasPostRequestPayloadIncludedInnerOneOfRelationships
        """
        return self._relationships

    @relationships.setter
    def relationships(self, relationships):
        """Sets the relationships of this MediasPostRequestPayloadIncludedInnerOneOf.


        :param relationships: The relationships of this MediasPostRequestPayloadIncludedInnerOneOf.
        :type relationships: MediasPostRequestPayloadIncludedInnerOneOfRelationships
        """

        self._relationships = relationships

    @property
    def type(self):
        """Gets the type of this MediasPostRequestPayloadIncludedInnerOneOf.


        :return: The type of this MediasPostRequestPayloadIncludedInnerOneOf.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MediasPostRequestPayloadIncludedInnerOneOf.


        :param type: The type of this MediasPostRequestPayloadIncludedInnerOneOf.
        :type type: str
        """

        self._type = type
