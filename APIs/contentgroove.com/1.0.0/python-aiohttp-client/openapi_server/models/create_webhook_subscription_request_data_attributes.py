# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateWebhookSubscriptionRequestDataAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscribed_events: List[str]=None, url: str=None):
        """CreateWebhookSubscriptionRequestDataAttributes - a model defined in OpenAPI

        :param subscribed_events: The subscribed_events of this CreateWebhookSubscriptionRequestDataAttributes.
        :param url: The url of this CreateWebhookSubscriptionRequestDataAttributes.
        """
        self.openapi_types = {
            'subscribed_events': List[str],
            'url': str
        }

        self.attribute_map = {
            'subscribed_events': 'subscribed_events',
            'url': 'url'
        }

        self._subscribed_events = subscribed_events
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWebhookSubscriptionRequestDataAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createWebhookSubscription_request_data_attributes of this CreateWebhookSubscriptionRequestDataAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscribed_events(self):
        """Gets the subscribed_events of this CreateWebhookSubscriptionRequestDataAttributes.


        :return: The subscribed_events of this CreateWebhookSubscriptionRequestDataAttributes.
        :rtype: List[str]
        """
        return self._subscribed_events

    @subscribed_events.setter
    def subscribed_events(self, subscribed_events):
        """Sets the subscribed_events of this CreateWebhookSubscriptionRequestDataAttributes.


        :param subscribed_events: The subscribed_events of this CreateWebhookSubscriptionRequestDataAttributes.
        :type subscribed_events: List[str]
        """

        self._subscribed_events = subscribed_events

    @property
    def url(self):
        """Gets the url of this CreateWebhookSubscriptionRequestDataAttributes.


        :return: The url of this CreateWebhookSubscriptionRequestDataAttributes.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CreateWebhookSubscriptionRequestDataAttributes.


        :param url: The url of this CreateWebhookSubscriptionRequestDataAttributes.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
