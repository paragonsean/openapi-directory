# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment_required_error_response_object_errors_inner_source import PaymentRequiredErrorResponseObjectErrorsInnerSource
from openapi_server import util


class PaymentRequiredErrorResponseObjectErrorsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, detail: str=None, source: PaymentRequiredErrorResponseObjectErrorsInnerSource=None, status: str=None, title: str=None):
        """PaymentRequiredErrorResponseObjectErrorsInner - a model defined in OpenAPI

        :param code: The code of this PaymentRequiredErrorResponseObjectErrorsInner.
        :param detail: The detail of this PaymentRequiredErrorResponseObjectErrorsInner.
        :param source: The source of this PaymentRequiredErrorResponseObjectErrorsInner.
        :param status: The status of this PaymentRequiredErrorResponseObjectErrorsInner.
        :param title: The title of this PaymentRequiredErrorResponseObjectErrorsInner.
        """
        self.openapi_types = {
            'code': str,
            'detail': str,
            'source': PaymentRequiredErrorResponseObjectErrorsInnerSource,
            'status': str,
            'title': str
        }

        self.attribute_map = {
            'code': 'code',
            'detail': 'detail',
            'source': 'source',
            'status': 'status',
            'title': 'title'
        }

        self._code = code
        self._detail = detail
        self._source = source
        self._status = status
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentRequiredErrorResponseObjectErrorsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The payment_required_error_response_object_errors_inner of this PaymentRequiredErrorResponseObjectErrorsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this PaymentRequiredErrorResponseObjectErrorsInner.


        :return: The code of this PaymentRequiredErrorResponseObjectErrorsInner.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this PaymentRequiredErrorResponseObjectErrorsInner.


        :param code: The code of this PaymentRequiredErrorResponseObjectErrorsInner.
        :type code: str
        """

        self._code = code

    @property
    def detail(self):
        """Gets the detail of this PaymentRequiredErrorResponseObjectErrorsInner.


        :return: The detail of this PaymentRequiredErrorResponseObjectErrorsInner.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this PaymentRequiredErrorResponseObjectErrorsInner.


        :param detail: The detail of this PaymentRequiredErrorResponseObjectErrorsInner.
        :type detail: str
        """

        self._detail = detail

    @property
    def source(self):
        """Gets the source of this PaymentRequiredErrorResponseObjectErrorsInner.


        :return: The source of this PaymentRequiredErrorResponseObjectErrorsInner.
        :rtype: PaymentRequiredErrorResponseObjectErrorsInnerSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this PaymentRequiredErrorResponseObjectErrorsInner.


        :param source: The source of this PaymentRequiredErrorResponseObjectErrorsInner.
        :type source: PaymentRequiredErrorResponseObjectErrorsInnerSource
        """

        self._source = source

    @property
    def status(self):
        """Gets the status of this PaymentRequiredErrorResponseObjectErrorsInner.


        :return: The status of this PaymentRequiredErrorResponseObjectErrorsInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PaymentRequiredErrorResponseObjectErrorsInner.


        :param status: The status of this PaymentRequiredErrorResponseObjectErrorsInner.
        :type status: str
        """

        self._status = status

    @property
    def title(self):
        """Gets the title of this PaymentRequiredErrorResponseObjectErrorsInner.


        :return: The title of this PaymentRequiredErrorResponseObjectErrorsInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PaymentRequiredErrorResponseObjectErrorsInner.


        :param title: The title of this PaymentRequiredErrorResponseObjectErrorsInner.
        :type title: str
        """

        self._title = title
