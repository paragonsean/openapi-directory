# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_group_data_request_feeds_inner import CreateGroupDataRequestFeedsInner
from openapi_server.models.create_group_data_request_location import CreateGroupDataRequestLocation
from openapi_server import util


class CreateGroupDataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, feeds: List[CreateGroupDataRequestFeedsInner]=None, location: CreateGroupDataRequestLocation=None):
        """CreateGroupDataRequest - a model defined in OpenAPI

        :param created_at: The created_at of this CreateGroupDataRequest.
        :param feeds: The feeds of this CreateGroupDataRequest.
        :param location: The location of this CreateGroupDataRequest.
        """
        self.openapi_types = {
            'created_at': str,
            'feeds': List[CreateGroupDataRequestFeedsInner],
            'location': CreateGroupDataRequestLocation
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'feeds': 'feeds',
            'location': 'location'
        }

        self._created_at = created_at
        self._feeds = feeds
        self._location = location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGroupDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createGroupData_request of this CreateGroupDataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this CreateGroupDataRequest.

        Optional created_at timestamp which will be applied to all feed values created.

        :return: The created_at of this CreateGroupDataRequest.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CreateGroupDataRequest.

        Optional created_at timestamp which will be applied to all feed values created.

        :param created_at: The created_at of this CreateGroupDataRequest.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def feeds(self):
        """Gets the feeds of this CreateGroupDataRequest.

        An array of feed data records with `key` and `value` properties.

        :return: The feeds of this CreateGroupDataRequest.
        :rtype: List[CreateGroupDataRequestFeedsInner]
        """
        return self._feeds

    @feeds.setter
    def feeds(self, feeds):
        """Sets the feeds of this CreateGroupDataRequest.

        An array of feed data records with `key` and `value` properties.

        :param feeds: The feeds of this CreateGroupDataRequest.
        :type feeds: List[CreateGroupDataRequestFeedsInner]
        """
        if feeds is None:
            raise ValueError("Invalid value for `feeds`, must not be `None`")

        self._feeds = feeds

    @property
    def location(self):
        """Gets the location of this CreateGroupDataRequest.


        :return: The location of this CreateGroupDataRequest.
        :rtype: CreateGroupDataRequestLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this CreateGroupDataRequest.


        :param location: The location of this CreateGroupDataRequest.
        :type location: CreateGroupDataRequestLocation
        """

        self._location = location
