# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: str=None, created_at: str=None, id: float=None, name: str=None, time_zone: str=None, updated_at: str=None, username: str=None):
        """User - a model defined in OpenAPI

        :param color: The color of this User.
        :param created_at: The created_at of this User.
        :param id: The id of this User.
        :param name: The name of this User.
        :param time_zone: The time_zone of this User.
        :param updated_at: The updated_at of this User.
        :param username: The username of this User.
        """
        self.openapi_types = {
            'color': str,
            'created_at': str,
            'id': float,
            'name': str,
            'time_zone': str,
            'updated_at': str,
            'username': str
        }

        self.attribute_map = {
            'color': 'color',
            'created_at': 'created_at',
            'id': 'id',
            'name': 'name',
            'time_zone': 'time_zone',
            'updated_at': 'updated_at',
            'username': 'username'
        }

        self._color = color
        self._created_at = created_at
        self._id = id
        self._name = name
        self._time_zone = time_zone
        self._updated_at = updated_at
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this User.


        :return: The color of this User.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this User.


        :param color: The color of this User.
        :type color: str
        """

        self._color = color

    @property
    def created_at(self):
        """Gets the created_at of this User.


        :return: The created_at of this User.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this User.


        :param created_at: The created_at of this User.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: float
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def time_zone(self):
        """Gets the time_zone of this User.


        :return: The time_zone of this User.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this User.


        :param time_zone: The time_zone of this User.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def updated_at(self):
        """Gets the updated_at of this User.


        :return: The updated_at of this User.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this User.


        :param updated_at: The updated_at of this User.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def username(self):
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username
