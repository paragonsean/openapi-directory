# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feed import Feed
from openapi_server.models.group import Group
from openapi_server import util


class BlockFeed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feed: Feed=None, group: Group=None, id: str=None):
        """BlockFeed - a model defined in OpenAPI

        :param feed: The feed of this BlockFeed.
        :param group: The group of this BlockFeed.
        :param id: The id of this BlockFeed.
        """
        self.openapi_types = {
            'feed': Feed,
            'group': Group,
            'id': str
        }

        self.attribute_map = {
            'feed': 'feed',
            'group': 'group',
            'id': 'id'
        }

        self._feed = feed
        self._group = group
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlockFeed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlockFeed of this BlockFeed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feed(self):
        """Gets the feed of this BlockFeed.


        :return: The feed of this BlockFeed.
        :rtype: Feed
        """
        return self._feed

    @feed.setter
    def feed(self, feed):
        """Sets the feed of this BlockFeed.


        :param feed: The feed of this BlockFeed.
        :type feed: Feed
        """

        self._feed = feed

    @property
    def group(self):
        """Gets the group of this BlockFeed.


        :return: The group of this BlockFeed.
        :rtype: Group
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this BlockFeed.


        :param group: The group of this BlockFeed.
        :type group: Group
        """

        self._group = group

    @property
    def id(self):
        """Gets the id of this BlockFeed.


        :return: The id of this BlockFeed.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BlockFeed.


        :param id: The id of this BlockFeed.
        :type id: str
        """

        self._id = id
