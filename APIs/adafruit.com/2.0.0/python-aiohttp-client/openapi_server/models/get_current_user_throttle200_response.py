# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCurrentUserThrottle200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_data_rate: int=None, data_rate_limit: int=None):
        """GetCurrentUserThrottle200Response - a model defined in OpenAPI

        :param active_data_rate: The active_data_rate of this GetCurrentUserThrottle200Response.
        :param data_rate_limit: The data_rate_limit of this GetCurrentUserThrottle200Response.
        """
        self.openapi_types = {
            'active_data_rate': int,
            'data_rate_limit': int
        }

        self.attribute_map = {
            'active_data_rate': 'active_data_rate',
            'data_rate_limit': 'data_rate_limit'
        }

        self._active_data_rate = active_data_rate
        self._data_rate_limit = data_rate_limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCurrentUserThrottle200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getCurrentUserThrottle_200_response of this GetCurrentUserThrottle200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_data_rate(self):
        """Gets the active_data_rate of this GetCurrentUserThrottle200Response.

        Actions taken inside the time window.

        :return: The active_data_rate of this GetCurrentUserThrottle200Response.
        :rtype: int
        """
        return self._active_data_rate

    @active_data_rate.setter
    def active_data_rate(self, active_data_rate):
        """Sets the active_data_rate of this GetCurrentUserThrottle200Response.

        Actions taken inside the time window.

        :param active_data_rate: The active_data_rate of this GetCurrentUserThrottle200Response.
        :type active_data_rate: int
        """

        self._active_data_rate = active_data_rate

    @property
    def data_rate_limit(self):
        """Gets the data_rate_limit of this GetCurrentUserThrottle200Response.

        Max possible actions inside the time window (usually 1 minute).

        :return: The data_rate_limit of this GetCurrentUserThrottle200Response.
        :rtype: int
        """
        return self._data_rate_limit

    @data_rate_limit.setter
    def data_rate_limit(self, data_rate_limit):
        """Sets the data_rate_limit of this GetCurrentUserThrottle200Response.

        Max possible actions inside the time window (usually 1 minute).

        :param data_rate_limit: The data_rate_limit of this GetCurrentUserThrottle200Response.
        :type data_rate_limit: int
        """

        self._data_rate_limit = data_rate_limit
