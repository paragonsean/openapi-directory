# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chart_data200_response_feed import ChartData200ResponseFeed
from openapi_server import util


class ChartData200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[str]=None, data: List[List[str]]=None, feed: ChartData200ResponseFeed=None, parameters: object=None):
        """ChartData200Response - a model defined in OpenAPI

        :param columns: The columns of this ChartData200Response.
        :param data: The data of this ChartData200Response.
        :param feed: The feed of this ChartData200Response.
        :param parameters: The parameters of this ChartData200Response.
        """
        self.openapi_types = {
            'columns': List[str],
            'data': List[List[str]],
            'feed': ChartData200ResponseFeed,
            'parameters': object
        }

        self.attribute_map = {
            'columns': 'columns',
            'data': 'data',
            'feed': 'feed',
            'parameters': 'parameters'
        }

        self._columns = columns
        self._data = data
        self._feed = feed
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartData200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The chartData_200_response of this ChartData200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this ChartData200Response.

        The names of the columns returned as data.

        :return: The columns of this ChartData200Response.
        :rtype: List[str]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this ChartData200Response.

        The names of the columns returned as data.

        :param columns: The columns of this ChartData200Response.
        :type columns: List[str]
        """

        self._columns = columns

    @property
    def data(self):
        """Gets the data of this ChartData200Response.

        The actual chart data.

        :return: The data of this ChartData200Response.
        :rtype: List[List[str]]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this ChartData200Response.

        The actual chart data.

        :param data: The data of this ChartData200Response.
        :type data: List[List[str]]
        """

        self._data = data

    @property
    def feed(self):
        """Gets the feed of this ChartData200Response.


        :return: The feed of this ChartData200Response.
        :rtype: ChartData200ResponseFeed
        """
        return self._feed

    @feed.setter
    def feed(self, feed):
        """Sets the feed of this ChartData200Response.


        :param feed: The feed of this ChartData200Response.
        :type feed: ChartData200ResponseFeed
        """

        self._feed = feed

    @property
    def parameters(self):
        """Gets the parameters of this ChartData200Response.


        :return: The parameters of this ChartData200Response.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ChartData200Response.


        :param parameters: The parameters of this ChartData200Response.
        :type parameters: object
        """

        self._parameters = parameters
