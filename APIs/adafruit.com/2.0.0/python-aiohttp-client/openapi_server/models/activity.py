# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Activity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, created_at: str=None, data: object=None, id: float=None, model: str=None, updated_at: str=None, user_id: float=None):
        """Activity - a model defined in OpenAPI

        :param action: The action of this Activity.
        :param created_at: The created_at of this Activity.
        :param data: The data of this Activity.
        :param id: The id of this Activity.
        :param model: The model of this Activity.
        :param updated_at: The updated_at of this Activity.
        :param user_id: The user_id of this Activity.
        """
        self.openapi_types = {
            'action': str,
            'created_at': str,
            'data': object,
            'id': float,
            'model': str,
            'updated_at': str,
            'user_id': float
        }

        self.attribute_map = {
            'action': 'action',
            'created_at': 'created_at',
            'data': 'data',
            'id': 'id',
            'model': 'model',
            'updated_at': 'updated_at',
            'user_id': 'user_id'
        }

        self._action = action
        self._created_at = created_at
        self._data = data
        self._id = id
        self._model = model
        self._updated_at = updated_at
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Activity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity of this Activity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this Activity.


        :return: The action of this Activity.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this Activity.


        :param action: The action of this Activity.
        :type action: str
        """

        self._action = action

    @property
    def created_at(self):
        """Gets the created_at of this Activity.


        :return: The created_at of this Activity.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Activity.


        :param created_at: The created_at of this Activity.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def data(self):
        """Gets the data of this Activity.


        :return: The data of this Activity.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this Activity.


        :param data: The data of this Activity.
        :type data: object
        """

        self._data = data

    @property
    def id(self):
        """Gets the id of this Activity.


        :return: The id of this Activity.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Activity.


        :param id: The id of this Activity.
        :type id: float
        """

        self._id = id

    @property
    def model(self):
        """Gets the model of this Activity.


        :return: The model of this Activity.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this Activity.


        :param model: The model of this Activity.
        :type model: str
        """

        self._model = model

    @property
    def updated_at(self):
        """Gets the updated_at of this Activity.


        :return: The updated_at of this Activity.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Activity.


        :param updated_at: The updated_at of this Activity.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def user_id(self):
        """Gets the user_id of this Activity.


        :return: The user_id of this Activity.
        :rtype: float
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Activity.


        :param user_id: The user_id of this Activity.
        :type user_id: float
        """

        self._user_id = user_id
