openapi: 3.0.1
info:
  description: |+
    ### The Internet of Things for Everyone

    The Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https://learn.adafruit.com/series/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https://www.adafruit.com/product/2821).

    This API documentation is hosted on GitHub Pages and is available at [https://github.com/adafruit/io-api](https://github.com/adafruit/io-api). For questions or comments visit the [Adafruit IO Forums](https://forums.adafruit.com/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https://discord.gg/adafruit).

    #### Authentication

    Authentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username "io_username" and the key "io_key_12345" could look like this:

        $ curl -H "X-AIO-Key: io_key_12345" https://io.adafruit.com/api/v2/io_username/feeds

    Or like this:

        $ curl "https://io.adafruit.com/api/v2/io_username/feeds?X-AIO-Key=io_key_12345

    Using the node.js [request](https://github.com/request/request) library, IO HTTP requests are as easy as:

    ```js
    var request = require('request');

    var options = {
      url: 'https://io.adafruit.com/api/v2/io_username/feeds',
      headers: {
        'X-AIO-Key': 'io_key_12345',
        'Content-Type': 'application/json'
      }
    };

    function callback(error, response, body) {
      if (!error && response.statusCode == 200) {
        var feeds = JSON.parse(body);
        console.log(feeds.length + " FEEDS AVAILABLE");

        feeds.forEach(function (feed) {
          console.log(feed.name, feed.key);
        })
      }
    }

    request(options, callback);
    ```

    Using the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):

    ```arduino
    /// based on
    /// https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266HTTPClient/examples/Authorization/Authorization.ino

    #include <Arduino.h>
    #include <ESP8266WiFi.h>
    #include <ESP8266WiFiMulti.h>
    #include <ESP8266HTTPClient.h>

    ESP8266WiFiMulti WiFiMulti;

    const char* ssid = "---";
    const char* password = "---";

    const char* host = "io.adafruit.com";

    const char* io_key = "---";
    const char* path_with_username = "/api/v2/---/dashboards";

    // Use web browser to view and copy
    // SHA1 fingerprint of the certificate
    const char* fingerprint = "77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18";

    void setup() {
      Serial.begin(115200);

      for(uint8_t t = 4; t > 0; t--) {
        Serial.printf("[SETUP] WAIT %d...\n", t);
        Serial.flush();
        delay(1000);
      }

      WiFi.mode(WIFI_STA);
      WiFiMulti.addAP(ssid, password);

      // wait for WiFi connection
      while(WiFiMulti.run() != WL_CONNECTED) {
        Serial.print('.');
        delay(1000);
      }

      Serial.println("[WIFI] connected!");

      HTTPClient http;

      // start request with URL and TLS cert fingerprint for verification
      http.begin("https://" + String(host) + String(path_with_username), fingerprint);

      // IO API authentication
      http.addHeader("X-AIO-Key", io_key);

      // start connection and send HTTP header
      int httpCode = http.GET();

      // httpCode will be negative on error
      if(httpCode > 0) {
        // HTTP header has been send and Server response header has been handled
        Serial.printf("[HTTP] GET response: %d\n", httpCode);

        // HTTP 200 OK
        if(httpCode == HTTP_CODE_OK) {
          String payload = http.getString();
          Serial.println(payload);
        }

        http.end();
      }
    }

    void loop() {}
    ```

    #### Client Libraries

    We have client libraries to help you get started with your project: [Python](https://github.com/adafruit/io-client-python), [Ruby](https://github.com/adafruit/io-client-ruby), [Arduino C++](https://github.com/adafruit/Adafruit_IO_Arduino), [Javascript](https://github.com/adafruit/adafruit-io-node), and [Go](https://github.com/adafruit/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.

  title: Adafruit IO REST API
  version: 2.0.0
  x-apisguru-categories:
  - iot
  x-logo:
    url: https://twitter.com/adafruit/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/adafruit/io-api/gh-pages/v2.json
    version: "2.0"
  x-providerName: adafruit.com
servers:
- url: https://io.adafruit.com/api/v2
- url: http://io.adafruit.com/api/v2
security:
- HeaderKey: []
- HeaderSignature: []
- QueryKey: []
paths:
  /user:
    get:
      operationId: current_user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
          description: A User record
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get information about the current user
      tags:
      - Users
      x-swagger-router-action: get
      x-swagger-router-controller: Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /webhooks/feed/:token:
    post:
      operationId: create_webhook_feed_data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createWebhookFeedData_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createWebhookFeedData_request'
        description: Webhook payload containing data `value` parameter.
        required: true
        x-body-name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
            text/csv:
              schema:
                $ref: '#/components/schemas/Data'
          description: New feed data record
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Send data to a feed via webhook URL.
      tags:
      - Webhooks
      - Data
      x-code-samples:
      - lang: curl
        source: curl -F 'value=65.5' https://io.adafruit.com/api/v2/webhooks/feed/12345thistoken
      x-swagger-router-action: create
      x-swagger-router-controller: WebhookReceivers
      x-codegen-request-body-name: payload
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
  /webhooks/feed/:token/raw:
    post:
      description: "The raw data webhook receiver accepts POST requests and stores\
        \ the raw request body on your feed. This is useful when you don't have control\
        \ of the webhook sender. If feed history is turned on, payloads will be truncated\
        \ at 1024 bytes. If feed history is turned off, payloads will be truncated\
        \ at 100KB."
      operationId: create_raw_webhook_feed_data
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
            text/csv:
              schema:
                $ref: '#/components/schemas/Data'
          description: New feed data record
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Send arbitrary data to a feed via webhook URL.
      tags:
      - Webhooks
      - Data
      x-code-samples:
      - lang: curl
        source: |-
          curl --header 'Content-Type: application/json' \
            --request POST \
            --data '{"some json": "goes here", "id": 12345}' \
            https://io.adafruit.com/api/v2/webhooks/feed/12345thistoken/raw
      x-swagger-router-action: createRaw
      x-swagger-router-controller: WebhookReceivers
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
  /{username}/activities:
    delete:
      description: Delete all your activities.
      operationId: destroy_activities
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Deleted activities successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All activities for current user
      tags:
      - Activities
      x-swagger-router-action: destroy
      x-swagger-router-controller: Activities
      x-openapi-router-controller: openapi_server.controllers.activities_controller
    get:
      description: The Activities endpoint returns information about the user's activities.
      operationId: all_activities
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: "Start time for filtering, returns records created after given\
          \ time."
        in: query
        name: start_time
        schema:
          format: date-time
          type: string
      - description: "End time for filtering, returns records created before give\
          \ time."
        in: query
        name: end_time
        schema:
          format: date-time
          type: string
      - description: Limit the number of records returned.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
          description: An array of activities
          headers:
            X-Pagination-Count:
              description: The number of records returned.
              schema:
                type: integer
            X-Pagination-Limit:
              description: "The limit this request is using, either your given value\
                \ or the default (1000)."
              schema:
                type: integer
            X-Pagination-End:
              description: The created_at value for the newest record returned.
              schema:
                type: string
            X-Pagination-Start:
              description: The created_at value for the oldest record returned.
              schema:
                type: string
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All activities for current user
      tags:
      - Activities
      x-swagger-router-action: all
      x-swagger-router-controller: Activities
      x-openapi-router-controller: openapi_server.controllers.activities_controller
  /{username}/activities/{type}:
    get:
      description: The Activities endpoint returns information about the user's activities.
      operationId: get_activity
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: type
        required: true
        schema:
          type: string
      - description: "Start time for filtering, returns records created after given\
          \ time."
        in: query
        name: start_time
        schema:
          format: date-time
          type: string
      - description: "End time for filtering, returns records created before give\
          \ time."
        in: query
        name: end_time
        schema:
          format: date-time
          type: string
      - description: Limit the number of records returned.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
          description: An array of activities
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get activities by type for current user
      tags:
      - Activities
      x-swagger-router-action: get
      x-swagger-router-controller: Activities
      x-openapi-router-controller: openapi_server.controllers.activities_controller
  /{username}/dashboards:
    get:
      description: |
        The Dashboards endpoint returns information about the user's dashboards.
      operationId: all_dashboards
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                type: array
          description: An array of dashboards
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All dashboards for current user
      tags:
      - Dashboards
      x-swagger-router-action: all
      x-swagger-router-controller: Dashboards
      x-openapi-router-controller: openapi_server.controllers.dashboards_controller
    post:
      operationId: create_dashboard
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
        required: true
        x-body-name: dashboard
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: New Dashboard
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create a new Dashboard
      tags:
      - Dashboards
      x-swagger-router-action: create
      x-swagger-router-controller: Dashboards
      x-codegen-request-body-name: dashboard
      x-openapi-router-controller: openapi_server.controllers.dashboards_controller
  /{username}/dashboards/{dashboard_id}/blocks:
    get:
      description: |
        The Blocks endpoint returns information about the user's blocks.
      operationId: all_blocks
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Block'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Block'
                type: array
          description: An array of blocks
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All blocks for current user
      tags:
      - Blocks
      x-swagger-router-action: all
      x-swagger-router-controller: Blocks
      x-openapi-router-controller: openapi_server.controllers.blocks_controller
    post:
      operationId: create_block
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createBlock_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createBlock_request'
        required: true
        x-body-name: block
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
            text/csv:
              schema:
                $ref: '#/components/schemas/Block'
          description: New Block
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create a new Block
      tags:
      - Blocks
      x-swagger-router-action: create
      x-swagger-router-controller: Blocks
      x-codegen-request-body-name: block
      x-openapi-router-controller: openapi_server.controllers.blocks_controller
  /{username}/dashboards/{dashboard_id}/blocks/{id}:
    delete:
      operationId: destroy_block
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Deleted Block successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete an existing Block
      tags:
      - Blocks
      x-swagger-router-action: destroy
      x-swagger-router-controller: Blocks
      x-openapi-router-controller: openapi_server.controllers.blocks_controller
    get:
      operationId: get_block
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
            text/csv:
              schema:
                $ref: '#/components/schemas/Block'
          description: Block response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error"
      summary: Returns Block based on ID
      tags:
      - Blocks
      x-swagger-router-action: get
      x-swagger-router-controller: Blocks
      x-openapi-router-controller: openapi_server.controllers.blocks_controller
    patch:
      operationId: update_block
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createBlock_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createBlock_request'
        required: true
        x-body-name: block
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
            text/csv:
              schema:
                $ref: '#/components/schemas/Block'
          description: Updated Block
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update properties of an existing Block
      tags:
      - Blocks
      x-swagger-router-action: update
      x-swagger-router-controller: Blocks
      x-codegen-request-body-name: block
      x-openapi-router-controller: openapi_server.controllers.blocks_controller
    put:
      operationId: replace_block
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createBlock_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createBlock_request'
        required: true
        x-body-name: block
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
            text/csv:
              schema:
                $ref: '#/components/schemas/Block'
          description: Updated block
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Replace an existing Block
      tags:
      - Blocks
      x-swagger-router-action: replace
      x-swagger-router-controller: Blocks
      x-codegen-request-body-name: block
      x-openapi-router-controller: openapi_server.controllers.blocks_controller
  /{username}/dashboards/{id}:
    delete:
      operationId: destroy_dashboard
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Deleted Dashboard successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete an existing Dashboard
      tags:
      - Dashboards
      x-swagger-router-action: destroy
      x-swagger-router-controller: Dashboards
      x-openapi-router-controller: openapi_server.controllers.dashboards_controller
    get:
      operationId: get_dashboard
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Dashboard response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error"
      summary: Returns Dashboard based on ID
      tags:
      - Dashboards
      x-swagger-router-action: get
      x-swagger-router-controller: Dashboards
      x-openapi-router-controller: openapi_server.controllers.dashboards_controller
    patch:
      operationId: update_dashboard
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
        required: true
        x-body-name: dashboard
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Updated Dashboard
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update properties of an existing Dashboard
      tags:
      - Dashboards
      x-swagger-router-action: update
      x-swagger-router-controller: Dashboards
      x-codegen-request-body-name: dashboard
      x-openapi-router-controller: openapi_server.controllers.dashboards_controller
    put:
      operationId: replace_dashboard
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
        required: true
        x-body-name: dashboard
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Updated dashboard
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Replace an existing Dashboard
      tags:
      - Dashboards
      x-swagger-router-action: replace
      x-swagger-router-controller: Dashboards
      x-codegen-request-body-name: dashboard
      x-openapi-router-controller: openapi_server.controllers.dashboards_controller
  /{username}/feeds:
    get:
      description: "The Feeds endpoint returns information about the user's feeds.\
        \ The response includes the latest value of each feed, and other metadata\
        \ about each feed."
      operationId: all_feeds
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
          description: An array of feeds
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All feeds for current user
      tags:
      - Feeds
      x-swagger-router-action: all
      x-swagger-router-controller: Feeds
      x-openapi-router-controller: openapi_server.controllers.feeds_controller
    post:
      operationId: create_feed
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: query
        name: group_key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFeed_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createFeed_request'
        required: true
        x-body-name: feed
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: New feed
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create a new Feed
      tags:
      - Feeds
      x-swagger-router-action: create
      x-swagger-router-controller: Feeds
      x-codegen-request-body-name: feed
      x-openapi-router-controller: openapi_server.controllers.feeds_controller
  /{username}/feeds/{feed_key}:
    delete:
      operationId: destroy_feed
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Deleted feed successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete an existing Feed
      tags:
      - Feeds
      x-swagger-router-action: destroy
      x-swagger-router-controller: Feeds
      x-openapi-router-controller: openapi_server.controllers.feeds_controller
    get:
      description: Returns feed based on the feed key
      operationId: get_feed
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: Feed response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get feed by feed key
      tags:
      - Feeds
      x-swagger-router-action: get
      x-swagger-router-controller: Feeds
      x-openapi-router-controller: openapi_server.controllers.feeds_controller
    patch:
      operationId: update_feed
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFeed_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createFeed_request'
        required: true
        x-body-name: feed
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: Updated feed
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update properties of an existing Feed
      tags:
      - Feeds
      x-swagger-router-action: update
      x-swagger-router-controller: Feeds
      x-codegen-request-body-name: feed
      x-openapi-router-controller: openapi_server.controllers.feeds_controller
    put:
      operationId: replace_feed
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFeed_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createFeed_request'
        required: true
        x-body-name: feed
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: Updated feed
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Replace an existing Feed
      tags:
      - Feeds
      x-swagger-router-action: replace
      x-swagger-router-controller: Feeds
      x-codegen-request-body-name: feed
      x-openapi-router-controller: openapi_server.controllers.feeds_controller
  /{username}/feeds/{feed_key}/data:
    get:
      operationId: all_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - description: "Start time for filtering, returns records created after given\
          \ time."
        in: query
        name: start_time
        schema:
          format: date-time
          type: string
      - description: "End time for filtering, returns records created before give\
          \ time."
        in: query
        name: end_time
        schema:
          format: date-time
          type: string
      - description: Limit the number of records returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "List of Data record fields to include in response as comma separated\
          \ list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. "
        in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
          description: An array of data
          headers:
            X-Pagination-Count:
              description: The number of records returned.
              schema:
                type: integer
            X-Pagination-Limit:
              description: "The limit this request is using, either your given value\
                \ or the default (1000)."
              schema:
                type: integer
            X-Pagination-End:
              description: The created_at value for the newest record returned.
              schema:
                type: string
            X-Pagination-Start:
              description: The created_at value for the oldest record returned.
              schema:
                type: string
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get all data for the given feed
      tags:
      - Data
      x-swagger-router-action: all
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
    post:
      description: |-
        Create new data records on the given feed.

        **NOTE:** when feed history is on, data `value` size is limited to 1KB, when feed history is turned off data value size is limited to 100KB.
      operationId: create_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createData_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createData_request'
        description: "Data record including a `value` field (required) and optionally\
          \ including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values),\
          \ and `created_at` (a date/time string)."
        required: true
        x-body-name: datum
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
            text/csv:
              schema:
                $ref: '#/components/schemas/Data'
          description: New data
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create new Data
      tags:
      - Data
      x-code-samples:
      - lang: curl
        source: |-
          curl -F 'value=65.5' -H 'X-AIO-Key: io_key_12345' \
            https://io.adafruit.com/api/v2/io_username/feeds/io-feed-key/data
      - lang: Ruby
        source: |-
          api = Adafruit::IO::Client.new(
            key: ENV['IO_KEY'],
            username: ENV['IO_USERNAME']
          )
          api.send_data('io-feed-key', 65.5)
      x-swagger-router-action: create
      x-swagger-router-controller: Data
      x-codegen-request-body-name: datum
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/data/batch:
    post:
      operationId: batch_create_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/createData_request'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/createData_request'
              type: array
        description: "A collection of data records including `value` (required) and\
          \ optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation\
          \ values), and `created_at` (a date/time string)."
        required: true
        x-body-name: data
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
          description: New data
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create multiple new Data records
      tags:
      - Data
      x-swagger-router-action: batch
      x-swagger-router-controller: Data
      x-codegen-request-body-name: data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/data/chart:
    get:
      description: |-
        The Chart API is what we use on io.adafruit.com to populate charts over varying timespans with a consistent number of data points. The maximum number of points returned is 480. This API works by aggregating slices of time into a single value by averaging.

        All time-based parameters are optional, if none are given it will default to 1 hour at the finest-grained resolution possible.
      operationId: chart_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - description: "Start time for filtering, returns records created after given\
          \ time."
        in: query
        name: start_time
        schema:
          format: date-time
          type: string
      - description: "End time for filtering, returns records created before give\
          \ time."
        in: query
        name: end_time
        schema:
          format: date-time
          type: string
      - description: "A resolution size in minutes. By giving a resolution value you\
          \ will get back grouped data points aggregated over resolution-sized intervals.\
          \ NOTE: time span is preferred over resolution, so if you request a span\
          \ of time that includes more than max limit points you may get a larger\
          \ resolution than you requested. Valid resolutions are 1, 5, 10, 30, 60,\
          \ and 120."
        in: query
        name: resolution
        schema:
          format: int32
          type: integer
      - description: The number of hours the chart should cover.
        in: query
        name: hours
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chartData_200_response'
            text/csv:
              schema:
                $ref: '#/components/schemas/chartData_200_response'
          description: A JSON record containing chart data and the parameters used
            to generate it.
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Chart data for current feed
      tags:
      - Data
      x-swagger-router-action: chart
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/data/first:
    get:
      description: Get the oldest data point in the feed. This request sets the queue
        pointer to the beginning of the feed.
      operationId: first_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - description: "List of Data record fields to include in response as comma separated\
          \ list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. "
        in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: Data response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: First Data in Queue
      tags:
      - Data
      x-swagger-router-action: last
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/data/last:
    get:
      description: Get the most recent data point in the feed. This request sets the
        queue pointer to the end of the feed.
      operationId: last_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - description: "List of Data record fields to include in response as comma separated\
          \ list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. "
        in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: Data response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Last Data in Queue
      tags:
      - Data
      x-swagger-router-action: last
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/data/next:
    get:
      description: "Get the next newest data point in the feed. If queue processing\
        \ hasn't been started, the first data point in the feed will be returned."
      operationId: next_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - description: "List of Data record fields to include in response as comma separated\
          \ list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. "
        in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: Data response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Next Data in Queue
      tags:
      - Data
      x-swagger-router-action: next
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/data/previous:
    get:
      description: "Get the previously processed data point in the feed. NOTE: this\
        \ method doesn't move the processing queue pointer."
      operationId: previous_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - description: "List of Data record fields to include in response as comma separated\
          \ list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. "
        in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: Data response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Previous Data in Queue
      tags:
      - Data
      x-swagger-router-action: previous
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/data/retain:
    get:
      description: "Get the most recent data point in the feed in an MQTT compatible\
        \ CSV format: `value,lat,lon,ele`"
      operationId: retain_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              schema:
                type: string
          description: "CSV string in `value,lat,lon,ele` format. The lat, lon, and\
            \ ele values are left blank if they are not set."
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Last Data in MQTT CSV format
      tags:
      - Data
      x-swagger-router-action: retain
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/data/{id}:
    delete:
      operationId: destroy_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Deleted Group successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete existing Data
      tags:
      - Data
      x-swagger-router-action: destroy
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
    get:
      operationId: get_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: "List of Data record fields to include in response as comma separated\
          \ list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. "
        in: query
        name: include
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: Data response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Returns data based on feed key
      tags:
      - Data
      x-swagger-router-action: get
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
    patch:
      operationId: update_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createData_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createData_request'
        description: "Data record including a `value` field (required) and optionally\
          \ including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values),\
          \ and `created_at` (a date/time string)."
        required: true
        x-body-name: datum
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: Updated Data
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update properties of existing Data
      tags:
      - Data
      x-swagger-router-action: update
      x-swagger-router-controller: Data
      x-codegen-request-body-name: datum
      x-openapi-router-controller: openapi_server.controllers.data_controller
    put:
      operationId: replace_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createData_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createData_request'
        description: "Data record including a `value` field (required) and optionally\
          \ including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values),\
          \ and `created_at` (a date/time string)."
        required: true
        x-body-name: datum
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: Updated Data
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Replace existing Data
      tags:
      - Data
      x-swagger-router-action: replace
      x-swagger-router-controller: Data
      x-codegen-request-body-name: datum
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/feeds/{feed_key}/details:
    get:
      description: Returns more detailed feed record based on the feed key
      operationId: get_feed_details
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: Feed response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get detailed feed by feed key
      tags:
      - Feeds
      x-swagger-router-action: details
      x-swagger-router-controller: Feeds
      x-openapi-router-controller: openapi_server.controllers.feeds_controller
  /{username}/groups:
    get:
      description: |
        The Groups endpoint returns information about the user's groups. The response includes the latest value of each feed in the group, and other metadata about the group.
      operationId: all_groups
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: An array of groups
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All groups for current user
      tags:
      - Groups
      x-swagger-router-action: all
      x-swagger-router-controller: Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    post:
      operationId: create_group
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
        required: true
        x-body-name: group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
          description: New Group
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create a new Group
      tags:
      - Groups
      x-swagger-router-action: create
      x-swagger-router-controller: Groups
      x-codegen-request-body-name: group
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /{username}/groups/{group_key}:
    delete:
      operationId: destroy_group
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Deleted Group successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete an existing Group
      tags:
      - Groups
      x-swagger-router-action: destroy
      x-swagger-router-controller: Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    get:
      operationId: get_group
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
          description: Group response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error"
      summary: Returns Group based on ID
      tags:
      - Groups
      x-swagger-router-action: get
      x-swagger-router-controller: Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    patch:
      operationId: update_group
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
        required: true
        x-body-name: group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
          description: Updated Group
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update properties of an existing Group
      tags:
      - Groups
      x-swagger-router-action: update
      x-swagger-router-controller: Groups
      x-codegen-request-body-name: group
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    put:
      operationId: replace_group
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createDashboard_request'
        required: true
        x-body-name: group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
          description: Updated group
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Replace an existing Group
      tags:
      - Groups
      x-swagger-router-action: replace
      x-swagger-router-controller: Groups
      x-codegen-request-body-name: group
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /{username}/groups/{group_key}/add:
    post:
      operationId: add_feed_to_group
      parameters:
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: query
        name: feed_key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
          description: Updated group
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Add an existing Feed to a Group
      tags:
      - Groups
      - Feeds
      x-swagger-router-action: add_feed
      x-swagger-router-controller: Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /{username}/groups/{group_key}/data:
    post:
      operationId: create_group_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createGroupData_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createGroupData_request'
        required: true
        x-body-name: group_feed_data
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
          description: New data
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create new data for multiple feeds in a group
      tags:
      - Data
      x-swagger-router-action: group_create
      x-swagger-router-controller: Data
      x-codegen-request-body-name: group_feed_data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/groups/{group_key}/feeds:
    get:
      description: "The Group Feeds endpoint returns information about the user's\
        \ feeds. The response includes the latest value of each feed, and other metadata\
        \ about each feed, but only for feeds within the given group."
      operationId: all_group_feeds
      parameters:
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Feed'
                type: array
          description: An array of feeds
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All feeds for current user in a given group
      tags:
      - Groups
      - Feeds
      x-swagger-router-action: group_all
      x-swagger-router-controller: GroupFeeds
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    post:
      operationId: create_group_feed
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFeed_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createFeed_request'
        required: true
        x-body-name: feed
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            text/csv:
              schema:
                $ref: '#/components/schemas/Feed'
          description: New feed
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create a new Feed in a Group
      tags:
      - Feeds
      x-swagger-router-action: group_create
      x-swagger-router-controller: GroupFeeds
      x-codegen-request-body-name: feed
      x-openapi-router-controller: openapi_server.controllers.feeds_controller
  /{username}/groups/{group_key}/feeds/{feed_key}/data:
    get:
      operationId: all_group_feed_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      - description: Start time for filtering data. Returns data created after given
          time.
        in: query
        name: start_time
        schema:
          format: date-time
          type: string
      - description: End time for filtering data. Returns data created before give
          time.
        in: query
        name: end_time
        schema:
          format: date-time
          type: string
      - description: Limit the number of records returned.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
          description: An array of data
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All data for current feed in a specific group
      tags:
      - Data
      x-swagger-router-action: group_all
      x-swagger-router-controller: Data
      x-openapi-router-controller: openapi_server.controllers.data_controller
    post:
      operationId: create_group_feed_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createData_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createData_request'
        description: "Data record including a `value` field (required) and optionally\
          \ including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values),\
          \ and `created_at` (a date/time string)."
        required: true
        x-body-name: datum
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: New data
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create new Data in a feed belonging to a particular group
      tags:
      - Data
      x-swagger-router-action: group_feed_create
      x-swagger-router-controller: Data
      x-codegen-request-body-name: datum
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/groups/{group_key}/feeds/{feed_key}/data/batch:
    post:
      operationId: batch_create_group_feed_data
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      - description: a valid feed key
        in: path
        name: feed_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/createData_request'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/createData_request'
              type: array
        description: "A collection of data records including `value` (required) and\
          \ optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation\
          \ values), and `created_at` (a date/time string)."
        required: true
        x-body-name: data
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/DataResponse'
                type: array
          description: New data
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create multiple new Data records in a feed belonging to a particular
        group
      tags:
      - Data
      x-swagger-router-action: group_feed_batch
      x-swagger-router-controller: Data
      x-codegen-request-body-name: data
      x-openapi-router-controller: openapi_server.controllers.data_controller
  /{username}/groups/{group_key}/remove:
    post:
      operationId: remove_feed_from_group
      parameters:
      - in: path
        name: group_key
        required: true
        schema:
          type: string
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: query
        name: feed_key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
          description: Updated group
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Remove a Feed from a Group
      tags:
      - Groups
      - Feeds
      x-swagger-router-action: remove_feed
      x-swagger-router-controller: Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /{username}/throttle:
    get:
      operationId: get_current_user_throttle
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCurrentUserThrottle_200_response'
            text/csv:
              schema:
                $ref: '#/components/schemas/getCurrentUserThrottle_200_response'
          description: Data rate limit and current actions.
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get the user's data rate limit and current activity level.
      tags:
      - Users
      x-swagger-router-action: throttle
      x-swagger-router-controller: Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{username}/tokens:
    get:
      description: |
        The Tokens endpoint returns information about the user's tokens.
      operationId: all_tokens
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Token'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Token'
                type: array
          description: An array of tokens
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All tokens for current user
      tags:
      - Tokens
      x-swagger-router-action: all
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: openapi_server.controllers.tokens_controller
    post:
      operationId: create_token
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createToken_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createToken_request'
        required: true
        x-body-name: token
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token'
          description: New Token
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create a new Token
      tags:
      - Tokens
      x-swagger-router-action: create
      x-swagger-router-controller: Tokens
      x-codegen-request-body-name: token
      x-openapi-router-controller: openapi_server.controllers.tokens_controller
  /{username}/tokens/{id}:
    delete:
      operationId: destroy_token
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Deleted Token successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete an existing Token
      tags:
      - Tokens
      x-swagger-router-action: destroy
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: openapi_server.controllers.tokens_controller
    get:
      operationId: get_token
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token'
          description: Token response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error"
      summary: Returns Token based on ID
      tags:
      - Tokens
      x-swagger-router-action: get
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: openapi_server.controllers.tokens_controller
    patch:
      operationId: update_token
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createToken_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createToken_request'
        required: true
        x-body-name: token
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token'
          description: Updated Token
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update properties of an existing Token
      tags:
      - Tokens
      x-swagger-router-action: update
      x-swagger-router-controller: Tokens
      x-codegen-request-body-name: token
      x-openapi-router-controller: openapi_server.controllers.tokens_controller
    put:
      operationId: replace_token
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createToken_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createToken_request'
        required: true
        x-body-name: token
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token'
          description: Updated token
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Replace an existing Token
      tags:
      - Tokens
      x-swagger-router-action: replace
      x-swagger-router-controller: Tokens
      x-codegen-request-body-name: token
      x-openapi-router-controller: openapi_server.controllers.tokens_controller
  /{username}/triggers:
    get:
      description: |
        The Triggers endpoint returns information about the user's triggers.
      operationId: all_triggers
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trigger'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Trigger'
                type: array
          description: An array of triggers
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All triggers for current user
      tags:
      - Triggers
      x-swagger-router-action: all
      x-swagger-router-controller: Triggers
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    post:
      operationId: create_trigger
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createTrigger_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createTrigger_request'
        required: true
        x-body-name: trigger
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
            text/csv:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: New Trigger
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create a new Trigger
      tags:
      - Triggers
      x-swagger-router-action: create
      x-swagger-router-controller: Triggers
      x-codegen-request-body-name: trigger
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
  /{username}/triggers/{id}:
    delete:
      operationId: destroy_trigger
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Deleted Trigger successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete an existing Trigger
      tags:
      - Triggers
      x-swagger-router-action: destroy
      x-swagger-router-controller: Triggers
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    get:
      operationId: get_trigger
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
            text/csv:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: Trigger response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error"
      summary: Returns Trigger based on ID
      tags:
      - Triggers
      x-swagger-router-action: get
      x-swagger-router-controller: Triggers
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    patch:
      operationId: update_trigger
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createTrigger_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createTrigger_request'
        required: true
        x-body-name: trigger
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
            text/csv:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: Updated Trigger
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update properties of an existing Trigger
      tags:
      - Triggers
      x-swagger-router-action: update
      x-swagger-router-controller: Triggers
      x-codegen-request-body-name: trigger
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    put:
      operationId: replace_trigger
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createTrigger_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createTrigger_request'
        required: true
        x-body-name: trigger
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
            text/csv:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: Updated trigger
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Replace an existing Trigger
      tags:
      - Triggers
      x-swagger-router-action: replace
      x-swagger-router-controller: Triggers
      x-codegen-request-body-name: trigger
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
  /{username}/{type}/{type_id}/acl:
    get:
      description: |
        The Permissions endpoint returns information about the user's permissions.
      operationId: all_permissions
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: type_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Permission'
                type: array
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Permission'
                type: array
          description: An array of permissions
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: All permissions for current user and type
      tags:
      - Permissions
      x-swagger-router-action: all
      x-swagger-router-controller: Permissions
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
    post:
      operationId: create_permission
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: type_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPermission_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createPermission_request'
        required: true
        x-body-name: permission
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
            text/csv:
              schema:
                $ref: '#/components/schemas/Permission'
          description: New Permission
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Create a new Permission
      tags:
      - Permissions
      x-swagger-router-action: create
      x-swagger-router-controller: Permissions
      x-codegen-request-body-name: permission
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
  /{username}/{type}/{type_id}/acl/{id}:
    delete:
      operationId: destroy_permission
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: type_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: Deleted Permission successfully
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Delete an existing Permission
      tags:
      - Permissions
      x-swagger-router-action: destroy
      x-swagger-router-controller: Permissions
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
    get:
      operationId: get_permission
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: type_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
            text/csv:
              schema:
                $ref: '#/components/schemas/Permission'
          description: Permission response
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error"
      summary: Returns Permission based on ID
      tags:
      - Permissions
      x-swagger-router-action: get
      x-swagger-router-controller: Permissions
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
    patch:
      operationId: update_permission
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: type_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPermission_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createPermission_request'
        required: true
        x-body-name: permission
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
            text/csv:
              schema:
                $ref: '#/components/schemas/Permission'
          description: Updated Permission
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Update properties of an existing Permission
      tags:
      - Permissions
      x-swagger-router-action: update
      x-swagger-router-controller: Permissions
      x-codegen-request-body-name: permission
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
    put:
      operationId: replace_permission
      parameters:
      - description: a valid username string
        in: path
        name: username
        required: true
        schema:
          type: string
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: type_id
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPermission_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createPermission_request'
        required: true
        x-body-name: permission
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
            text/csv:
              schema:
                $ref: '#/components/schemas/Permission'
          description: Updated permission
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Replace an existing Permission
      tags:
      - Permissions
      x-swagger-router-action: replace
      x-swagger-router-controller: Permissions
      x-codegen-request-body-name: permission
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
components:
  parameters:
    ActivityTypePath:
      in: path
      name: type
      required: true
      schema:
        type: string
    DashboardIDPath:
      in: path
      name: dashboard_id
      required: true
      schema:
        type: string
    DataInclude:
      description: "List of Data record fields to include in response as comma separated\
        \ list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. "
      in: query
      name: include
      schema:
        type: string
    EndTime:
      description: "End time for filtering, returns records created before give time."
      in: query
      name: end_time
      schema:
        format: date-time
        type: string
    FeedParam:
      in: query
      name: feed_key
      schema:
        type: string
    FeedPath:
      description: a valid feed key
      in: path
      name: feed_key
      required: true
      schema:
        type: string
    GroupParam:
      in: query
      name: group_key
      schema:
        type: string
    GroupPath:
      in: path
      name: group_key
      required: true
      schema:
        type: string
    IDPath:
      in: path
      name: id
      required: true
      schema:
        type: string
    Limit:
      description: Limit the number of records returned.
      in: query
      name: limit
      schema:
        type: integer
    PermTypeIDPath:
      in: path
      name: type_id
      required: true
      schema:
        type: string
    PermTypePath:
      in: path
      name: type
      required: true
      schema:
        type: string
    StartTime:
      description: "Start time for filtering, returns records created after given\
        \ time."
      in: query
      name: start_time
      schema:
        format: date-time
        type: string
    UsernamePath:
      description: a valid username string
      in: path
      name: username
      required: true
      schema:
        type: string
  requestBodies:
    Block:
      content:
        '*/*':
          schema:
            properties:
              block_feeds:
                items:
                  properties:
                    feed_id:
                      type: string
                    group_id:
                      type: string
                  type: object
                type: array
              column:
                type: number
              dashboard_id:
                type: number
              description:
                type: string
              key:
                type: string
              name:
                type: string
              properties:
                properties: {}
                type: object
              row:
                type: number
              size_x:
                type: number
              size_y:
                type: number
              visual_type:
                type: string
            type: object
      required: true
      x-body-name: block
    Dashboard:
      content:
        '*/*':
          schema:
            properties:
              description:
                type: string
              key:
                type: string
              name:
                type: string
            type: object
      required: true
      x-body-name: dashboard
    Data:
      content:
        '*/*':
          schema:
            properties:
              created_at:
                format: dateTime
                type: string
              ele:
                type: string
              epoch:
                type: number
              lat:
                type: string
              lon:
                type: string
              value:
                type: string
            type: object
      description: "Data record including a `value` field (required) and optionally\
        \ including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values),\
        \ and `created_at` (a date/time string)."
      required: true
      x-body-name: datum
    DataCollection:
      content:
        '*/*':
          schema:
            items:
              properties:
                created_at:
                  format: dateTime
                  type: string
                ele:
                  type: string
                epoch:
                  type: number
                lat:
                  type: string
                lon:
                  type: string
                value:
                  type: string
              type: object
            type: array
      description: "A collection of data records including `value` (required) and\
        \ optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation\
        \ values), and `created_at` (a date/time string)."
      required: true
      x-body-name: data
    Feed:
      content:
        '*/*':
          schema:
            properties:
              description:
                type: string
              key:
                type: string
              license:
                type: string
              name:
                type: string
            type: object
      required: true
      x-body-name: feed
    Group:
      content:
        '*/*':
          schema:
            properties:
              description:
                type: string
              key:
                type: string
              name:
                type: string
            type: object
      required: true
      x-body-name: group
    GroupFeedData:
      content:
        '*/*':
          schema:
            properties:
              created_at:
                description: Optional created_at timestamp which will be applied to
                  all feed values created.
                type: string
              feeds:
                description: An array of feed data records with `key` and `value`
                  properties.
                items:
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              location:
                description: "A location record with `lat`, `lon`, and [optional]\
                  \ `ele` properties."
                properties:
                  ele:
                    type: number
                  lat:
                    type: number
                  lon:
                    type: number
                required:
                - lat
                - lon
                type: object
            required:
            - feeds
            type: object
      required: true
      x-body-name: group_feed_data
    Permission:
      content:
        '*/*':
          schema:
            properties:
              mode:
                default: r
                enum:
                - r
                - w
                - rw
                type: string
              scope:
                default: public
                enum:
                - secret
                - public
                - user
                - organization
                type: string
              scope_value:
                type: string
            type: object
      required: true
      x-body-name: permission
    Token:
      content:
        '*/*':
          schema:
            properties:
              token:
                type: string
            type: object
      required: true
      x-body-name: token
    Trigger:
      content:
        '*/*':
          schema:
            properties:
              name:
                type: string
            type: object
      required: true
      x-body-name: trigger
  schemas:
    Activity:
      example:
        data: "{}"
        updated_at: updated_at
        user_id: 6.027456183070403
        action: action
        created_at: created_at
        model: model
        id: 0.8008281904610115
      properties:
        action:
          readOnly: true
          title: action
          type: string
        created_at:
          format: dateTime
          readOnly: true
          title: created_at
          type: string
        data:
          properties: {}
          readOnly: true
          title: data
          type: object
        id:
          readOnly: true
          title: id
          type: number
        model:
          readOnly: true
          title: model
          type: string
        updated_at:
          format: dateTime
          readOnly: true
          title: updated_at
          type: string
        user_id:
          readOnly: true
          title: user_id
          type: number
      title: Activity
      type: object
    Block:
      example:
        visual_type: visual_type
        size_y: 3.616076749251911
        size_x: 9.301444243932576
        column: 2.3021358869347655
        name: name
        description: description
        row: 7.061401241503109
        key: key
        block_feeds:
        - feed:
            last_value: last_value
            unit_symbol: unit_symbol
            visibility: private
            created_at: created_at
            description: description
            groups:
            - updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
            - updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
            status_timeout: 5
            history: true
            unit_type: unit_type
            enabled: true
            license: license
            updated_at: updated_at
            name: name
            status_notify: true
            details:
              shared_with:
              - "{}"
              - "{}"
              data:
                last:
                  key:
                    completed_at: completed_at
                    updated_at: updated_at
                    group_id: 5.962133916683182
                    created_at: created_at
                    expiration: expiration
                    lon: 2.3021358869347655
                    id: id
                    value: value
                    lat: 5.637376656633329
                    created_epoch: 0.8008281904610115
                    ele: 6.027456183070403
                    feed_id: 1.4658129805029452
                count: 0
                first:
                  key:
                    completed_at: completed_at
                    updated_at: updated_at
                    group_id: 5.962133916683182
                    created_at: created_at
                    expiration: expiration
                    lon: 2.3021358869347655
                    id: id
                    value: value
                    lat: 5.637376656633329
                    created_epoch: 0.8008281904610115
                    ele: 6.027456183070403
                    feed_id: 1.4658129805029452
            id: 1.4658129805029452
            key: key
            group:
              key:
                updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
            status: status
          id: id
          group:
            updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            feeds:
            - last_value: last_value
              unit_symbol: unit_symbol
              visibility: private
              created_at: created_at
              description: description
              groups:
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              status_timeout: 5
              history: true
              unit_type: unit_type
              enabled: true
              license: license
              updated_at: updated_at
              name: name
              status_notify: true
              details:
                shared_with:
                - "{}"
                - "{}"
                data:
                  last:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
                  count: 0
                  first:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
              id: 1.4658129805029452
              key: key
              group:
                key:
                  updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
              status: status
            - last_value: last_value
              unit_symbol: unit_symbol
              visibility: private
              created_at: created_at
              description: description
              groups:
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              status_timeout: 5
              history: true
              unit_type: unit_type
              enabled: true
              license: license
              updated_at: updated_at
              name: name
              status_notify: true
              details:
                shared_with:
                - "{}"
                - "{}"
                data:
                  last:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
                  count: 0
                  first:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
              id: 1.4658129805029452
              key: key
              group:
                key:
                  updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
              status: status
            id: 5.637376656633329
        - feed:
            last_value: last_value
            unit_symbol: unit_symbol
            visibility: private
            created_at: created_at
            description: description
            groups:
            - updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
            - updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
            status_timeout: 5
            history: true
            unit_type: unit_type
            enabled: true
            license: license
            updated_at: updated_at
            name: name
            status_notify: true
            details:
              shared_with:
              - "{}"
              - "{}"
              data:
                last:
                  key:
                    completed_at: completed_at
                    updated_at: updated_at
                    group_id: 5.962133916683182
                    created_at: created_at
                    expiration: expiration
                    lon: 2.3021358869347655
                    id: id
                    value: value
                    lat: 5.637376656633329
                    created_epoch: 0.8008281904610115
                    ele: 6.027456183070403
                    feed_id: 1.4658129805029452
                count: 0
                first:
                  key:
                    completed_at: completed_at
                    updated_at: updated_at
                    group_id: 5.962133916683182
                    created_at: created_at
                    expiration: expiration
                    lon: 2.3021358869347655
                    id: id
                    value: value
                    lat: 5.637376656633329
                    created_epoch: 0.8008281904610115
                    ele: 6.027456183070403
                    feed_id: 1.4658129805029452
            id: 1.4658129805029452
            key: key
            group:
              key:
                updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
            status: status
          id: id
          group:
            updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            feeds:
            - last_value: last_value
              unit_symbol: unit_symbol
              visibility: private
              created_at: created_at
              description: description
              groups:
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              status_timeout: 5
              history: true
              unit_type: unit_type
              enabled: true
              license: license
              updated_at: updated_at
              name: name
              status_notify: true
              details:
                shared_with:
                - "{}"
                - "{}"
                data:
                  last:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
                  count: 0
                  first:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
              id: 1.4658129805029452
              key: key
              group:
                key:
                  updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
              status: status
            - last_value: last_value
              unit_symbol: unit_symbol
              visibility: private
              created_at: created_at
              description: description
              groups:
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              status_timeout: 5
              history: true
              unit_type: unit_type
              enabled: true
              license: license
              updated_at: updated_at
              name: name
              status_notify: true
              details:
                shared_with:
                - "{}"
                - "{}"
                data:
                  last:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
                  count: 0
                  first:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
              id: 1.4658129805029452
              key: key
              group:
                key:
                  updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
              status: status
            id: 5.637376656633329
      properties:
        block_feeds:
          items:
            $ref: '#/components/schemas/BlockFeed'
          readOnly: true
          title: block_feeds
          type: array
        column:
          title: column
          type: number
        description:
          title: description
          type: string
        key:
          title: key
          type: string
        name:
          title: name
          type: string
        row:
          title: row
          type: number
        size_x:
          title: size_x
          type: number
        size_y:
          title: size_y
          type: number
        visual_type:
          title: visual_type
          type: string
      title: Block
      type: object
    BlockFeed:
      example:
        feed:
          last_value: last_value
          unit_symbol: unit_symbol
          visibility: private
          created_at: created_at
          description: description
          groups:
          - updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            id: 6.027456183070403
          - updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            id: 6.027456183070403
          status_timeout: 5
          history: true
          unit_type: unit_type
          enabled: true
          license: license
          updated_at: updated_at
          name: name
          status_notify: true
          details:
            shared_with:
            - "{}"
            - "{}"
            data:
              last:
                key:
                  completed_at: completed_at
                  updated_at: updated_at
                  group_id: 5.962133916683182
                  created_at: created_at
                  expiration: expiration
                  lon: 2.3021358869347655
                  id: id
                  value: value
                  lat: 5.637376656633329
                  created_epoch: 0.8008281904610115
                  ele: 6.027456183070403
                  feed_id: 1.4658129805029452
              count: 0
              first:
                key:
                  completed_at: completed_at
                  updated_at: updated_at
                  group_id: 5.962133916683182
                  created_at: created_at
                  expiration: expiration
                  lon: 2.3021358869347655
                  id: id
                  value: value
                  lat: 5.637376656633329
                  created_epoch: 0.8008281904610115
                  ele: 6.027456183070403
                  feed_id: 1.4658129805029452
          id: 1.4658129805029452
          key: key
          group:
            key:
              updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
          status: status
        id: id
        group:
          updated_at: updated_at
          name: name
          created_at: created_at
          description: description
          feeds:
          - last_value: last_value
            unit_symbol: unit_symbol
            visibility: private
            created_at: created_at
            description: description
            groups:
            - updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
            - updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
            status_timeout: 5
            history: true
            unit_type: unit_type
            enabled: true
            license: license
            updated_at: updated_at
            name: name
            status_notify: true
            details:
              shared_with:
              - "{}"
              - "{}"
              data:
                last:
                  key:
                    completed_at: completed_at
                    updated_at: updated_at
                    group_id: 5.962133916683182
                    created_at: created_at
                    expiration: expiration
                    lon: 2.3021358869347655
                    id: id
                    value: value
                    lat: 5.637376656633329
                    created_epoch: 0.8008281904610115
                    ele: 6.027456183070403
                    feed_id: 1.4658129805029452
                count: 0
                first:
                  key:
                    completed_at: completed_at
                    updated_at: updated_at
                    group_id: 5.962133916683182
                    created_at: created_at
                    expiration: expiration
                    lon: 2.3021358869347655
                    id: id
                    value: value
                    lat: 5.637376656633329
                    created_epoch: 0.8008281904610115
                    ele: 6.027456183070403
                    feed_id: 1.4658129805029452
            id: 1.4658129805029452
            key: key
            group:
              key:
                updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
            status: status
          - last_value: last_value
            unit_symbol: unit_symbol
            visibility: private
            created_at: created_at
            description: description
            groups:
            - updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
            - updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
            status_timeout: 5
            history: true
            unit_type: unit_type
            enabled: true
            license: license
            updated_at: updated_at
            name: name
            status_notify: true
            details:
              shared_with:
              - "{}"
              - "{}"
              data:
                last:
                  key:
                    completed_at: completed_at
                    updated_at: updated_at
                    group_id: 5.962133916683182
                    created_at: created_at
                    expiration: expiration
                    lon: 2.3021358869347655
                    id: id
                    value: value
                    lat: 5.637376656633329
                    created_epoch: 0.8008281904610115
                    ele: 6.027456183070403
                    feed_id: 1.4658129805029452
                count: 0
                first:
                  key:
                    completed_at: completed_at
                    updated_at: updated_at
                    group_id: 5.962133916683182
                    created_at: created_at
                    expiration: expiration
                    lon: 2.3021358869347655
                    id: id
                    value: value
                    lat: 5.637376656633329
                    created_epoch: 0.8008281904610115
                    ele: 6.027456183070403
                    feed_id: 1.4658129805029452
            id: 1.4658129805029452
            key: key
            group:
              key:
                updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
            status: status
          id: 5.637376656633329
      properties:
        feed:
          $ref: '#/components/schemas/Feed'
        group:
          $ref: '#/components/schemas/Group'
        id:
          title: id
          type: string
      title: BlockFeed
      type: object
    Dashboard:
      example:
        blocks:
        - visual_type: visual_type
          size_y: 3.616076749251911
          size_x: 9.301444243932576
          column: 2.3021358869347655
          name: name
          description: description
          row: 7.061401241503109
          key: key
          block_feeds:
          - feed:
              last_value: last_value
              unit_symbol: unit_symbol
              visibility: private
              created_at: created_at
              description: description
              groups:
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              status_timeout: 5
              history: true
              unit_type: unit_type
              enabled: true
              license: license
              updated_at: updated_at
              name: name
              status_notify: true
              details:
                shared_with:
                - "{}"
                - "{}"
                data:
                  last:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
                  count: 0
                  first:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
              id: 1.4658129805029452
              key: key
              group:
                key:
                  updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
              status: status
            id: id
            group:
              updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              feeds:
              - last_value: last_value
                unit_symbol: unit_symbol
                visibility: private
                created_at: created_at
                description: description
                groups:
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                status_timeout: 5
                history: true
                unit_type: unit_type
                enabled: true
                license: license
                updated_at: updated_at
                name: name
                status_notify: true
                details:
                  shared_with:
                  - "{}"
                  - "{}"
                  data:
                    last:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                    count: 0
                    first:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                id: 1.4658129805029452
                key: key
                group:
                  key:
                    updated_at: updated_at
                    name: name
                    created_at: created_at
                    description: description
                    id: 6.027456183070403
                status: status
              - last_value: last_value
                unit_symbol: unit_symbol
                visibility: private
                created_at: created_at
                description: description
                groups:
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                status_timeout: 5
                history: true
                unit_type: unit_type
                enabled: true
                license: license
                updated_at: updated_at
                name: name
                status_notify: true
                details:
                  shared_with:
                  - "{}"
                  - "{}"
                  data:
                    last:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                    count: 0
                    first:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                id: 1.4658129805029452
                key: key
                group:
                  key:
                    updated_at: updated_at
                    name: name
                    created_at: created_at
                    description: description
                    id: 6.027456183070403
                status: status
              id: 5.637376656633329
          - feed:
              last_value: last_value
              unit_symbol: unit_symbol
              visibility: private
              created_at: created_at
              description: description
              groups:
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              status_timeout: 5
              history: true
              unit_type: unit_type
              enabled: true
              license: license
              updated_at: updated_at
              name: name
              status_notify: true
              details:
                shared_with:
                - "{}"
                - "{}"
                data:
                  last:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
                  count: 0
                  first:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
              id: 1.4658129805029452
              key: key
              group:
                key:
                  updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
              status: status
            id: id
            group:
              updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              feeds:
              - last_value: last_value
                unit_symbol: unit_symbol
                visibility: private
                created_at: created_at
                description: description
                groups:
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                status_timeout: 5
                history: true
                unit_type: unit_type
                enabled: true
                license: license
                updated_at: updated_at
                name: name
                status_notify: true
                details:
                  shared_with:
                  - "{}"
                  - "{}"
                  data:
                    last:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                    count: 0
                    first:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                id: 1.4658129805029452
                key: key
                group:
                  key:
                    updated_at: updated_at
                    name: name
                    created_at: created_at
                    description: description
                    id: 6.027456183070403
                status: status
              - last_value: last_value
                unit_symbol: unit_symbol
                visibility: private
                created_at: created_at
                description: description
                groups:
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                status_timeout: 5
                history: true
                unit_type: unit_type
                enabled: true
                license: license
                updated_at: updated_at
                name: name
                status_notify: true
                details:
                  shared_with:
                  - "{}"
                  - "{}"
                  data:
                    last:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                    count: 0
                    first:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                id: 1.4658129805029452
                key: key
                group:
                  key:
                    updated_at: updated_at
                    name: name
                    created_at: created_at
                    description: description
                    id: 6.027456183070403
                status: status
              id: 5.637376656633329
        - visual_type: visual_type
          size_y: 3.616076749251911
          size_x: 9.301444243932576
          column: 2.3021358869347655
          name: name
          description: description
          row: 7.061401241503109
          key: key
          block_feeds:
          - feed:
              last_value: last_value
              unit_symbol: unit_symbol
              visibility: private
              created_at: created_at
              description: description
              groups:
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              status_timeout: 5
              history: true
              unit_type: unit_type
              enabled: true
              license: license
              updated_at: updated_at
              name: name
              status_notify: true
              details:
                shared_with:
                - "{}"
                - "{}"
                data:
                  last:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
                  count: 0
                  first:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
              id: 1.4658129805029452
              key: key
              group:
                key:
                  updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
              status: status
            id: id
            group:
              updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              feeds:
              - last_value: last_value
                unit_symbol: unit_symbol
                visibility: private
                created_at: created_at
                description: description
                groups:
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                status_timeout: 5
                history: true
                unit_type: unit_type
                enabled: true
                license: license
                updated_at: updated_at
                name: name
                status_notify: true
                details:
                  shared_with:
                  - "{}"
                  - "{}"
                  data:
                    last:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                    count: 0
                    first:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                id: 1.4658129805029452
                key: key
                group:
                  key:
                    updated_at: updated_at
                    name: name
                    created_at: created_at
                    description: description
                    id: 6.027456183070403
                status: status
              - last_value: last_value
                unit_symbol: unit_symbol
                visibility: private
                created_at: created_at
                description: description
                groups:
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                status_timeout: 5
                history: true
                unit_type: unit_type
                enabled: true
                license: license
                updated_at: updated_at
                name: name
                status_notify: true
                details:
                  shared_with:
                  - "{}"
                  - "{}"
                  data:
                    last:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                    count: 0
                    first:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                id: 1.4658129805029452
                key: key
                group:
                  key:
                    updated_at: updated_at
                    name: name
                    created_at: created_at
                    description: description
                    id: 6.027456183070403
                status: status
              id: 5.637376656633329
          - feed:
              last_value: last_value
              unit_symbol: unit_symbol
              visibility: private
              created_at: created_at
              description: description
              groups:
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              - updated_at: updated_at
                name: name
                created_at: created_at
                description: description
                id: 6.027456183070403
              status_timeout: 5
              history: true
              unit_type: unit_type
              enabled: true
              license: license
              updated_at: updated_at
              name: name
              status_notify: true
              details:
                shared_with:
                - "{}"
                - "{}"
                data:
                  last:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
                  count: 0
                  first:
                    key:
                      completed_at: completed_at
                      updated_at: updated_at
                      group_id: 5.962133916683182
                      created_at: created_at
                      expiration: expiration
                      lon: 2.3021358869347655
                      id: id
                      value: value
                      lat: 5.637376656633329
                      created_epoch: 0.8008281904610115
                      ele: 6.027456183070403
                      feed_id: 1.4658129805029452
              id: 1.4658129805029452
              key: key
              group:
                key:
                  updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
              status: status
            id: id
            group:
              updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              feeds:
              - last_value: last_value
                unit_symbol: unit_symbol
                visibility: private
                created_at: created_at
                description: description
                groups:
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                status_timeout: 5
                history: true
                unit_type: unit_type
                enabled: true
                license: license
                updated_at: updated_at
                name: name
                status_notify: true
                details:
                  shared_with:
                  - "{}"
                  - "{}"
                  data:
                    last:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                    count: 0
                    first:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                id: 1.4658129805029452
                key: key
                group:
                  key:
                    updated_at: updated_at
                    name: name
                    created_at: created_at
                    description: description
                    id: 6.027456183070403
                status: status
              - last_value: last_value
                unit_symbol: unit_symbol
                visibility: private
                created_at: created_at
                description: description
                groups:
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                - updated_at: updated_at
                  name: name
                  created_at: created_at
                  description: description
                  id: 6.027456183070403
                status_timeout: 5
                history: true
                unit_type: unit_type
                enabled: true
                license: license
                updated_at: updated_at
                name: name
                status_notify: true
                details:
                  shared_with:
                  - "{}"
                  - "{}"
                  data:
                    last:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                    count: 0
                    first:
                      key:
                        completed_at: completed_at
                        updated_at: updated_at
                        group_id: 5.962133916683182
                        created_at: created_at
                        expiration: expiration
                        lon: 2.3021358869347655
                        id: id
                        value: value
                        lat: 5.637376656633329
                        created_epoch: 0.8008281904610115
                        ele: 6.027456183070403
                        feed_id: 1.4658129805029452
                id: 1.4658129805029452
                key: key
                group:
                  key:
                    updated_at: updated_at
                    name: name
                    created_at: created_at
                    description: description
                    id: 6.027456183070403
                status: status
              id: 5.637376656633329
        name: name
        description: description
        key: key
      properties:
        blocks:
          items:
            $ref: '#/components/schemas/Block'
          readOnly: true
          title: blocks
          type: array
        description:
          title: description
          type: string
        key:
          title: key
          type: string
        name:
          title: name
          type: string
      title: Dashboard
      type: object
    Data:
      example:
        completed_at: completed_at
        updated_at: updated_at
        group_id: 5.962133916683182
        created_at: created_at
        expiration: expiration
        lon: 2.3021358869347655
        id: id
        value: value
        lat: 5.637376656633329
        created_epoch: 0.8008281904610115
        ele: 6.027456183070403
        feed_id: 1.4658129805029452
      properties:
        completed_at:
          readOnly: true
          title: completed_at
          type: string
        created_at:
          readOnly: true
          title: created_at
          type: string
        created_epoch:
          readOnly: true
          title: created_epoch
          type: number
        ele:
          title: ele
          type: number
        expiration:
          title: expiration
          type: string
        feed_id:
          title: feed_id
          type: number
        group_id:
          readOnly: true
          title: group_id
          type: number
        id:
          readOnly: true
          title: id
          type: string
        lat:
          title: lat
          type: number
        lon:
          title: lon
          type: number
        updated_at:
          readOnly: true
          title: updated_at
          type: string
        value:
          title: value
          type: string
      title: Data
      type: object
    DataResponse:
      example:
        completed_at: completed_at
        updated_at: updated_at
        group_id: 5.962133916683182
        created_at: created_at
        expiration: expiration
        lon: 2.3021358869347655
        id: id
        value: value
        lat: 5.637376656633329
        created_epoch: 0.8008281904610115
        ele: 6.027456183070403
        feed_id: 1.4658129805029452
      properties:
        completed_at:
          title: completed_at
          type: string
        created_at:
          title: created_at
          type: string
        created_epoch:
          title: created_epoch
          type: number
        ele:
          title: ele
          type: number
        expiration:
          title: expiration
          type: string
        feed_id:
          title: feed_id
          type: number
        group_id:
          title: group_id
          type: number
        id:
          title: id
          type: string
        lat:
          title: lat
          type: number
        lon:
          title: lon
          type: number
        updated_at:
          title: updated_at
          type: string
        value:
          title: value
          type: string
      title: DataResponse
      type: object
    Error:
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    Feed:
      example:
        last_value: last_value
        unit_symbol: unit_symbol
        visibility: private
        created_at: created_at
        description: description
        groups:
        - updated_at: updated_at
          name: name
          created_at: created_at
          description: description
          id: 6.027456183070403
        - updated_at: updated_at
          name: name
          created_at: created_at
          description: description
          id: 6.027456183070403
        status_timeout: 5
        history: true
        unit_type: unit_type
        enabled: true
        license: license
        updated_at: updated_at
        name: name
        status_notify: true
        details:
          shared_with:
          - "{}"
          - "{}"
          data:
            last:
              key:
                completed_at: completed_at
                updated_at: updated_at
                group_id: 5.962133916683182
                created_at: created_at
                expiration: expiration
                lon: 2.3021358869347655
                id: id
                value: value
                lat: 5.637376656633329
                created_epoch: 0.8008281904610115
                ele: 6.027456183070403
                feed_id: 1.4658129805029452
            count: 0
            first:
              key:
                completed_at: completed_at
                updated_at: updated_at
                group_id: 5.962133916683182
                created_at: created_at
                expiration: expiration
                lon: 2.3021358869347655
                id: id
                value: value
                lat: 5.637376656633329
                created_epoch: 0.8008281904610115
                ele: 6.027456183070403
                feed_id: 1.4658129805029452
        id: 1.4658129805029452
        key: key
        group:
          key:
            updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            id: 6.027456183070403
        status: status
      properties:
        created_at:
          readOnly: true
          title: created_at
          type: string
        description:
          title: description
          type: string
        details:
          $ref: '#/components/schemas/Feed_details'
        enabled:
          readOnly: true
          title: enabled
          type: boolean
        group:
          additionalProperties:
            $ref: '#/components/schemas/ShallowGroup'
          readOnly: true
          title: group
          type: object
        groups:
          items:
            $ref: '#/components/schemas/ShallowGroup'
          readOnly: true
          title: groups
          type: array
        history:
          title: history
          type: boolean
        id:
          readOnly: true
          title: id
          type: number
        key:
          title: key
          type: string
        last_value:
          readOnly: true
          title: last_value
          type: string
        license:
          title: license
          type: string
        name:
          title: name
          type: string
        status:
          readOnly: true
          title: status
          type: string
        status_notify:
          description: Is status notification active?
          title: status_notify
          type: boolean
        status_timeout:
          description: Status notification timeout in minutes.
          title: status_timeout
          type: integer
        unit_symbol:
          title: unit_symbol
          type: string
        unit_type:
          title: unit_type
          type: string
        updated_at:
          readOnly: true
          title: updated_at
          type: string
        visibility:
          default: private
          enum:
          - private
          - public
          title: visibility
          type: string
      title: Feed
      type: object
    Group:
      example:
        updated_at: updated_at
        name: name
        created_at: created_at
        description: description
        feeds:
        - last_value: last_value
          unit_symbol: unit_symbol
          visibility: private
          created_at: created_at
          description: description
          groups:
          - updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            id: 6.027456183070403
          - updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            id: 6.027456183070403
          status_timeout: 5
          history: true
          unit_type: unit_type
          enabled: true
          license: license
          updated_at: updated_at
          name: name
          status_notify: true
          details:
            shared_with:
            - "{}"
            - "{}"
            data:
              last:
                key:
                  completed_at: completed_at
                  updated_at: updated_at
                  group_id: 5.962133916683182
                  created_at: created_at
                  expiration: expiration
                  lon: 2.3021358869347655
                  id: id
                  value: value
                  lat: 5.637376656633329
                  created_epoch: 0.8008281904610115
                  ele: 6.027456183070403
                  feed_id: 1.4658129805029452
              count: 0
              first:
                key:
                  completed_at: completed_at
                  updated_at: updated_at
                  group_id: 5.962133916683182
                  created_at: created_at
                  expiration: expiration
                  lon: 2.3021358869347655
                  id: id
                  value: value
                  lat: 5.637376656633329
                  created_epoch: 0.8008281904610115
                  ele: 6.027456183070403
                  feed_id: 1.4658129805029452
          id: 1.4658129805029452
          key: key
          group:
            key:
              updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
          status: status
        - last_value: last_value
          unit_symbol: unit_symbol
          visibility: private
          created_at: created_at
          description: description
          groups:
          - updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            id: 6.027456183070403
          - updated_at: updated_at
            name: name
            created_at: created_at
            description: description
            id: 6.027456183070403
          status_timeout: 5
          history: true
          unit_type: unit_type
          enabled: true
          license: license
          updated_at: updated_at
          name: name
          status_notify: true
          details:
            shared_with:
            - "{}"
            - "{}"
            data:
              last:
                key:
                  completed_at: completed_at
                  updated_at: updated_at
                  group_id: 5.962133916683182
                  created_at: created_at
                  expiration: expiration
                  lon: 2.3021358869347655
                  id: id
                  value: value
                  lat: 5.637376656633329
                  created_epoch: 0.8008281904610115
                  ele: 6.027456183070403
                  feed_id: 1.4658129805029452
              count: 0
              first:
                key:
                  completed_at: completed_at
                  updated_at: updated_at
                  group_id: 5.962133916683182
                  created_at: created_at
                  expiration: expiration
                  lon: 2.3021358869347655
                  id: id
                  value: value
                  lat: 5.637376656633329
                  created_epoch: 0.8008281904610115
                  ele: 6.027456183070403
                  feed_id: 1.4658129805029452
          id: 1.4658129805029452
          key: key
          group:
            key:
              updated_at: updated_at
              name: name
              created_at: created_at
              description: description
              id: 6.027456183070403
          status: status
        id: 5.637376656633329
      properties:
        created_at:
          readOnly: true
          title: created_at
          type: string
        description:
          title: description
          type: string
        feeds:
          items:
            $ref: '#/components/schemas/Feed'
          readOnly: true
          title: feeds
          type: array
        id:
          readOnly: true
          title: id
          type: number
        name:
          title: name
          type: string
        updated_at:
          readOnly: true
          title: updated_at
          type: string
      title: Group
      type: object
    Permission:
      example:
        updated_at: updated_at
        user_id: 1.4658129805029452
        scope: public
        scope_value: scope_value
        created_at: created_at
        model: feed
        id: 0.8008281904610115
        object_id: 6.027456183070403
      properties:
        created_at:
          readOnly: true
          title: created_at
          type: string
        id:
          readOnly: true
          title: id
          type: number
        model:
          default: feed
          enum:
          - feed
          - group
          - dashboard
          title: model
          type: string
        object_id:
          title: object_id
          type: number
        scope:
          default: public
          enum:
          - secret
          - public
          - user
          - organization
          title: scope
          type: string
        scope_value:
          title: scope_value
          type: string
        updated_at:
          readOnly: true
          title: updated_at
          type: string
        user_id:
          readOnly: true
          title: user_id
          type: number
      title: Permission
      type: object
    ShallowGroup:
      example:
        updated_at: updated_at
        name: name
        created_at: created_at
        description: description
        id: 6.027456183070403
      properties:
        created_at:
          readOnly: true
          title: created_at
          type: string
        description:
          title: description
          type: string
        id:
          readOnly: true
          title: id
          type: number
        name:
          title: name
          type: string
        updated_at:
          readOnly: true
          title: updated_at
          type: string
      title: ShallowGroup
      type: object
    Token:
      example:
        token: token
      properties:
        token:
          title: token
          type: string
      title: Token
      type: object
    Trigger:
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      title: Trigger
      type: object
    User:
      example:
        color: color
        updated_at: updated_at
        name: name
        created_at: created_at
        id: 0.8008281904610115
        time_zone: time_zone
        username: username
      properties:
        color:
          readOnly: true
          title: color
          type: string
        created_at:
          format: dateTime
          readOnly: true
          title: created_at
          type: string
        id:
          readOnly: true
          title: id
          type: number
        name:
          readOnly: true
          title: name
          type: string
        time_zone:
          readOnly: true
          title: time_zone
          type: string
        updated_at:
          format: dateTime
          readOnly: true
          title: updated_at
          type: string
        username:
          readOnly: true
          title: username
          type: string
      title: User
      type: object
    createWebhookFeedData_request:
      properties:
        value:
          title: value
          type: string
      title: createWebhookFeedData_request
      type: object
    createDashboard_request:
      properties:
        description:
          title: description
          type: string
        key:
          title: key
          type: string
        name:
          title: name
          type: string
      title: createDashboard_request
      type: object
    createBlock_request_block_feeds_inner:
      properties:
        feed_id:
          title: feed_id
          type: string
        group_id:
          title: group_id
          type: string
      title: createBlock_request_block_feeds_inner
      type: object
    createBlock_request:
      properties:
        block_feeds:
          items:
            $ref: '#/components/schemas/createBlock_request_block_feeds_inner'
          title: block_feeds
          type: array
        column:
          title: column
          type: number
        dashboard_id:
          title: dashboard_id
          type: number
        description:
          title: description
          type: string
        key:
          title: key
          type: string
        name:
          title: name
          type: string
        properties:
          properties: {}
          title: properties
          type: object
        row:
          title: row
          type: number
        size_x:
          title: size_x
          type: number
        size_y:
          title: size_y
          type: number
        visual_type:
          title: visual_type
          type: string
      title: createBlock_request
      type: object
    createFeed_request:
      properties:
        description:
          title: description
          type: string
        key:
          title: key
          type: string
        license:
          title: license
          type: string
        name:
          title: name
          type: string
      title: createFeed_request
      type: object
    createData_request:
      properties:
        created_at:
          format: dateTime
          title: created_at
          type: string
        ele:
          title: ele
          type: string
        epoch:
          title: epoch
          type: number
        lat:
          title: lat
          type: string
        lon:
          title: lon
          type: string
        value:
          title: value
          type: string
      title: createData_request
      type: object
    chartData_200_response_feed:
      example:
        name: name
        id: 0
        key: key
      properties:
        id:
          title: id
          type: integer
        key:
          title: key
          type: string
        name:
          title: name
          type: string
      title: chartData_200_response_feed
      type: object
    chartData_200_response:
      example:
        feed:
          name: name
          id: 0
          key: key
        data:
        - - data
          - data
        - - data
          - data
        columns:
        - columns
        - columns
        parameters: "{}"
      properties:
        columns:
          description: The names of the columns returned as data.
          items:
            type: string
          title: columns
          type: array
        data:
          description: The actual chart data.
          items:
            items:
              type: string
            type: array
          title: data
          type: array
        feed:
          $ref: '#/components/schemas/chartData_200_response_feed'
        parameters:
          properties: {}
          title: parameters
          type: object
      title: chartData_200_response
      type: object
    createGroupData_request_feeds_inner:
      properties:
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      required:
      - key
      - value
      title: createGroupData_request_feeds_inner
      type: object
    createGroupData_request_location:
      description: "A location record with `lat`, `lon`, and [optional] `ele` properties."
      properties:
        ele:
          title: ele
          type: number
        lat:
          title: lat
          type: number
        lon:
          title: lon
          type: number
      required:
      - lat
      - lon
      title: createGroupData_request_location
      type: object
    createGroupData_request:
      properties:
        created_at:
          description: Optional created_at timestamp which will be applied to all
            feed values created.
          title: created_at
          type: string
        feeds:
          description: An array of feed data records with `key` and `value` properties.
          items:
            $ref: '#/components/schemas/createGroupData_request_feeds_inner'
          title: feeds
          type: array
        location:
          $ref: '#/components/schemas/createGroupData_request_location'
      required:
      - feeds
      title: createGroupData_request
      type: object
    getCurrentUserThrottle_200_response:
      example:
        data_rate_limit: 6
        active_data_rate: 0
      properties:
        active_data_rate:
          description: Actions taken inside the time window.
          title: active_data_rate
          type: integer
        data_rate_limit:
          description: Max possible actions inside the time window (usually 1 minute).
          title: data_rate_limit
          type: integer
      title: getCurrentUserThrottle_200_response
      type: object
    createToken_request:
      properties:
        token:
          title: token
          type: string
      title: createToken_request
      type: object
    createTrigger_request:
      properties:
        name:
          title: name
          type: string
      title: createTrigger_request
      type: object
    createPermission_request:
      properties:
        mode:
          default: r
          enum:
          - r
          - w
          - rw
          title: mode
          type: string
        scope:
          default: public
          enum:
          - secret
          - public
          - user
          - organization
          title: scope
          type: string
        scope_value:
          title: scope_value
          type: string
      title: createPermission_request
      type: object
    Feed_details_data:
      example:
        last:
          key:
            completed_at: completed_at
            updated_at: updated_at
            group_id: 5.962133916683182
            created_at: created_at
            expiration: expiration
            lon: 2.3021358869347655
            id: id
            value: value
            lat: 5.637376656633329
            created_epoch: 0.8008281904610115
            ele: 6.027456183070403
            feed_id: 1.4658129805029452
        count: 0
        first:
          key:
            completed_at: completed_at
            updated_at: updated_at
            group_id: 5.962133916683182
            created_at: created_at
            expiration: expiration
            lon: 2.3021358869347655
            id: id
            value: value
            lat: 5.637376656633329
            created_epoch: 0.8008281904610115
            ele: 6.027456183070403
            feed_id: 1.4658129805029452
      properties:
        count:
          description: Number of data points stored by this feed.
          title: count
          type: integer
        first:
          additionalProperties:
            $ref: '#/components/schemas/Data'
          title: first
          type: object
        last:
          additionalProperties:
            $ref: '#/components/schemas/Data'
          title: last
          type: object
      title: Feed_details_data
      type: object
    Feed_details:
      description: Additional details about this feed.
      example:
        shared_with:
        - "{}"
        - "{}"
        data:
          last:
            key:
              completed_at: completed_at
              updated_at: updated_at
              group_id: 5.962133916683182
              created_at: created_at
              expiration: expiration
              lon: 2.3021358869347655
              id: id
              value: value
              lat: 5.637376656633329
              created_epoch: 0.8008281904610115
              ele: 6.027456183070403
              feed_id: 1.4658129805029452
          count: 0
          first:
            key:
              completed_at: completed_at
              updated_at: updated_at
              group_id: 5.962133916683182
              created_at: created_at
              expiration: expiration
              lon: 2.3021358869347655
              id: id
              value: value
              lat: 5.637376656633329
              created_epoch: 0.8008281904610115
              ele: 6.027456183070403
              feed_id: 1.4658129805029452
      properties:
        data:
          $ref: '#/components/schemas/Feed_details_data'
        shared_with:
          description: Access control list for this feed
          items:
            properties: {}
            type: object
          title: shared_with
          type: array
      readOnly: true
      title: Feed_details
      type: object
  securitySchemes:
    HeaderKey:
      description: "The AIO Key is used to restrict or grant access to your data.\
        \ The key is unique, and you can generate a key per feed, and control it in\
        \ many different ways. The easiest process is to just use your automatically\
        \ generated master key. You can access this key right from the right-hand\
        \ side of your dashboard or from an individual feed page."
      in: header
      name: X-AIO-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_HeaderKey
    HeaderSignature:
      description: The AIO Signature is an AWS inspired request signature.
      in: header
      name: X-AIO-Signature
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_HeaderSignature
    QueryKey:
      description: "The AIO Key is used to restrict or grant access to your data.\
        \ The key is unique, and you can generate a key per feed, and control it in\
        \ many different ways. The easiest process is to just use your automatically\
        \ generated master key. You can access this key right from the right-hand\
        \ side of your dashboard or from an individual feed page."
      in: query
      name: X-AIO-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_QueryKey
x-original-swagger-version: "2.0"
