/**
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ForemApiV1);
  }
}(this, function(expect, ForemApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ForemApiV1.Organization();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Organization', function() {
    it('should create an instance of Organization', function() {
      // uncomment below and update the code to test Organization
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be.a(ForemApiV1.Organization);
    });

    it('should have the property githubUsername (base name: "github_username")', function() {
      // uncomment below and update the code to test the property githubUsername
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property joinedAt (base name: "joined_at")', function() {
      // uncomment below and update the code to test the property joinedAt
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property story (base name: "story")', function() {
      // uncomment below and update the code to test the property story
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property tagLine (base name: "tag_line")', function() {
      // uncomment below and update the code to test the property tagLine
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property techStack (base name: "tech_stack")', function() {
      // uncomment below and update the code to test the property techStack
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property twitterUsername (base name: "twitter_username")', function() {
      // uncomment below and update the code to test the property twitterUsername
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property typeOf (base name: "type_of")', function() {
      // uncomment below and update the code to test the property typeOf
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new ForemApiV1.Organization();
      //expect(instance).to.be();
    });

  });

}));
