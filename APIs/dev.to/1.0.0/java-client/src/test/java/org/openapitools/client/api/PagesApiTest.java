/*
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiPagesPostRequest;
import org.openapitools.client.model.Page;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PagesApi
 */
@Disabled
public class PagesApiTest {

    private final PagesApi api = new PagesApi();

    /**
     * show details for all pages
     *
     * This endpoint allows the client to retrieve details for all Page objects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPagesGetTest() throws ApiException {
        List<Page> response = api.apiPagesGet();
        // TODO: test validations
    }

    /**
     * remove a page
     *
     * This endpoint allows the client to delete a single Page object, specified by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPagesIdDeleteTest() throws ApiException {
        Integer id = null;
        Page response = api.apiPagesIdDelete(id);
        // TODO: test validations
    }

    /**
     * show details for a page
     *
     * This endpoint allows the client to retrieve details for a single Page object, specified by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPagesIdGetTest() throws ApiException {
        Integer id = null;
        Page response = api.apiPagesIdGet(id);
        // TODO: test validations
    }

    /**
     * update details for a page
     *
     * This endpoint allows the client to retrieve details for a single Page object, specified by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPagesIdPutTest() throws ApiException {
        Integer id = null;
        Page page = null;
        Page response = api.apiPagesIdPut(id, page);
        // TODO: test validations
    }

    /**
     * pages
     *
     * This endpoint allows the client to create a new page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPagesPostTest() throws ApiException {
        ApiPagesPostRequest apiPagesPostRequest = null;
        api.apiPagesPost(apiPagesPostRequest);
        // TODO: test validations
    }

}
