/*
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ArticleIndex;
import org.openapitools.client.model.Organization;
import org.openapitools.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationsApi
 */
@Disabled
public class OrganizationsApiTest {

    private final OrganizationsApi api = new OrganizationsApi();

    /**
     * Organization&#39;s Articles
     *
     * This endpoint allows the client to retrieve a list of Articles belonging to the organization  It supports pagination, each page will contain &#x60;30&#x60; users by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrgArticlesTest() throws ApiException {
        String username = null;
        Integer page = null;
        Integer perPage = null;
        List<ArticleIndex> response = api.getOrgArticles(username, page, perPage);
        // TODO: test validations
    }

    /**
     * Organization&#39;s users
     *
     * This endpoint allows the client to retrieve a list of users belonging to the organization  It supports pagination, each page will contain &#x60;30&#x60; users by default.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrgUsersTest() throws ApiException {
        String username = null;
        Integer page = null;
        Integer perPage = null;
        List<User> response = api.getOrgUsers(username, page, perPage);
        // TODO: test validations
    }

    /**
     * An organization
     *
     * This endpoint allows the client to retrieve a single organization by their username
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationTest() throws ApiException {
        String username = null;
        List<Organization> response = api.getOrganization(username);
        // TODO: test validations
    }

}
