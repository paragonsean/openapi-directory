/*
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.VideoArticleUser;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Representation of an Article with video
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:22.236584-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VideoArticle {
  public static final String SERIALIZED_NAME_CLOUDINARY_VIDEO_URL = "cloudinary_video_url";
  @SerializedName(SERIALIZED_NAME_CLOUDINARY_VIDEO_URL)
  private String cloudinaryVideoUrl;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TYPE_OF = "type_of";
  @SerializedName(SERIALIZED_NAME_TYPE_OF)
  private String typeOf;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private VideoArticleUser user;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Long userId;

  public static final String SERIALIZED_NAME_VIDEO_DURATION_IN_MINUTES = "video_duration_in_minutes";
  @SerializedName(SERIALIZED_NAME_VIDEO_DURATION_IN_MINUTES)
  private String videoDurationInMinutes;

  public static final String SERIALIZED_NAME_VIDEO_SOURCE_URL = "video_source_url";
  @SerializedName(SERIALIZED_NAME_VIDEO_SOURCE_URL)
  private String videoSourceUrl;

  public VideoArticle() {
  }

  public VideoArticle cloudinaryVideoUrl(String cloudinaryVideoUrl) {
    this.cloudinaryVideoUrl = cloudinaryVideoUrl;
    return this;
  }

  /**
   * Get cloudinaryVideoUrl
   * @return cloudinaryVideoUrl
   */
  @javax.annotation.Nullable
  public String getCloudinaryVideoUrl() {
    return cloudinaryVideoUrl;
  }

  public void setCloudinaryVideoUrl(String cloudinaryVideoUrl) {
    this.cloudinaryVideoUrl = cloudinaryVideoUrl;
  }


  public VideoArticle id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public VideoArticle path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Get path
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  public VideoArticle title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public VideoArticle typeOf(String typeOf) {
    this.typeOf = typeOf;
    return this;
  }

  /**
   * Get typeOf
   * @return typeOf
   */
  @javax.annotation.Nullable
  public String getTypeOf() {
    return typeOf;
  }

  public void setTypeOf(String typeOf) {
    this.typeOf = typeOf;
  }


  public VideoArticle user(VideoArticleUser user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   */
  @javax.annotation.Nullable
  public VideoArticleUser getUser() {
    return user;
  }

  public void setUser(VideoArticleUser user) {
    this.user = user;
  }


  public VideoArticle userId(Long userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }


  public VideoArticle videoDurationInMinutes(String videoDurationInMinutes) {
    this.videoDurationInMinutes = videoDurationInMinutes;
    return this;
  }

  /**
   * Get videoDurationInMinutes
   * @return videoDurationInMinutes
   */
  @javax.annotation.Nullable
  public String getVideoDurationInMinutes() {
    return videoDurationInMinutes;
  }

  public void setVideoDurationInMinutes(String videoDurationInMinutes) {
    this.videoDurationInMinutes = videoDurationInMinutes;
  }


  public VideoArticle videoSourceUrl(String videoSourceUrl) {
    this.videoSourceUrl = videoSourceUrl;
    return this;
  }

  /**
   * Get videoSourceUrl
   * @return videoSourceUrl
   */
  @javax.annotation.Nullable
  public String getVideoSourceUrl() {
    return videoSourceUrl;
  }

  public void setVideoSourceUrl(String videoSourceUrl) {
    this.videoSourceUrl = videoSourceUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoArticle videoArticle = (VideoArticle) o;
    return Objects.equals(this.cloudinaryVideoUrl, videoArticle.cloudinaryVideoUrl) &&
        Objects.equals(this.id, videoArticle.id) &&
        Objects.equals(this.path, videoArticle.path) &&
        Objects.equals(this.title, videoArticle.title) &&
        Objects.equals(this.typeOf, videoArticle.typeOf) &&
        Objects.equals(this.user, videoArticle.user) &&
        Objects.equals(this.userId, videoArticle.userId) &&
        Objects.equals(this.videoDurationInMinutes, videoArticle.videoDurationInMinutes) &&
        Objects.equals(this.videoSourceUrl, videoArticle.videoSourceUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudinaryVideoUrl, id, path, title, typeOf, user, userId, videoDurationInMinutes, videoSourceUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoArticle {\n");
    sb.append("    cloudinaryVideoUrl: ").append(toIndentedString(cloudinaryVideoUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    typeOf: ").append(toIndentedString(typeOf)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    videoDurationInMinutes: ").append(toIndentedString(videoDurationInMinutes)).append("\n");
    sb.append("    videoSourceUrl: ").append(toIndentedString(videoSourceUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cloudinary_video_url");
    openapiFields.add("id");
    openapiFields.add("path");
    openapiFields.add("title");
    openapiFields.add("type_of");
    openapiFields.add("user");
    openapiFields.add("user_id");
    openapiFields.add("video_duration_in_minutes");
    openapiFields.add("video_source_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VideoArticle
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VideoArticle.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VideoArticle is not found in the empty JSON string", VideoArticle.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VideoArticle.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VideoArticle` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cloudinary_video_url") != null && !jsonObj.get("cloudinary_video_url").isJsonNull()) && !jsonObj.get("cloudinary_video_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudinary_video_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cloudinary_video_url").toString()));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("type_of") != null && !jsonObj.get("type_of").isJsonNull()) && !jsonObj.get("type_of").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type_of` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type_of").toString()));
      }
      // validate the optional field `user`
      if (jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) {
        VideoArticleUser.validateJsonElement(jsonObj.get("user"));
      }
      if ((jsonObj.get("video_duration_in_minutes") != null && !jsonObj.get("video_duration_in_minutes").isJsonNull()) && !jsonObj.get("video_duration_in_minutes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_duration_in_minutes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_duration_in_minutes").toString()));
      }
      if ((jsonObj.get("video_source_url") != null && !jsonObj.get("video_source_url").isJsonNull()) && !jsonObj.get("video_source_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `video_source_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("video_source_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VideoArticle.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VideoArticle' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VideoArticle> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VideoArticle.class));

       return (TypeAdapter<T>) new TypeAdapter<VideoArticle>() {
           @Override
           public void write(JsonWriter out, VideoArticle value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VideoArticle read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VideoArticle given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VideoArticle
   * @throws IOException if the JSON string is invalid with respect to VideoArticle
   */
  public static VideoArticle fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VideoArticle.class);
  }

  /**
   * Convert an instance of VideoArticle to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

