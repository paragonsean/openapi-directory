/**
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPodcastEpisodeIndex.h
 *
 * Representation of a podcast episode returned in a list
 */

#ifndef OAIPodcastEpisodeIndex_H
#define OAIPodcastEpisodeIndex_H

#include <QJsonObject>

#include "OAISharedPodcast.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISharedPodcast;

class OAIPodcastEpisodeIndex : public OAIObject {
public:
    OAIPodcastEpisodeIndex();
    OAIPodcastEpisodeIndex(QString json);
    ~OAIPodcastEpisodeIndex() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClassName() const;
    void setClassName(const QString &class_name);
    bool is_class_name_Set() const;
    bool is_class_name_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAISharedPodcast getPodcast() const;
    void setPodcast(const OAISharedPodcast &podcast);
    bool is_podcast_Set() const;
    bool is_podcast_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTypeOf() const;
    void setTypeOf(const QString &type_of);
    bool is_type_of_Set() const;
    bool is_type_of_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_class_name;
    bool m_class_name_isSet;
    bool m_class_name_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAISharedPodcast m_podcast;
    bool m_podcast_isSet;
    bool m_podcast_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type_of;
    bool m_type_of_isSet;
    bool m_type_of_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPodcastEpisodeIndex)

#endif // OAIPodcastEpisodeIndex_H
