/**
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArticle.h
 *
 * Representation of an Article to be created/updated
 */

#ifndef OAIArticle_H
#define OAIArticle_H

#include <QJsonObject>

#include "OAIArticle_article.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArticle_article;

class OAIArticle : public OAIObject {
public:
    OAIArticle();
    OAIArticle(QString json);
    ~OAIArticle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIArticle_article getArticle() const;
    void setArticle(const OAIArticle_article &article);
    bool is_article_Set() const;
    bool is_article_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIArticle_article m_article;
    bool m_article_isSet;
    bool m_article_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArticle)

#endif // OAIArticle_H
