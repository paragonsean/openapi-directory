/**
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_api_pages_post_request.h
 *
 * 
 */

#ifndef OAI_api_pages_post_request_H
#define OAI_api_pages_post_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_api_pages_post_request : public OAIObject {
public:
    OAI_api_pages_post_request();
    OAI_api_pages_post_request(QString json);
    ~OAI_api_pages_post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBodyJson() const;
    void setBodyJson(const QString &body_json);
    bool is_body_json_Set() const;
    bool is_body_json_Valid() const;

    QString getBodyMarkdown() const;
    void setBodyMarkdown(const QString &body_markdown);
    bool is_body_markdown_Set() const;
    bool is_body_markdown_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isIsTopLevelPath() const;
    void setIsTopLevelPath(const bool &is_top_level_path);
    bool is_is_top_level_path_Set() const;
    bool is_is_top_level_path_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QString getRTemplate() const;
    void setRTemplate(const QString &r_template);
    bool is_r_template_Set() const;
    bool is_r_template_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body_json;
    bool m_body_json_isSet;
    bool m_body_json_isValid;

    QString m_body_markdown;
    bool m_body_markdown_isSet;
    bool m_body_markdown_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_is_top_level_path;
    bool m_is_top_level_path_isSet;
    bool m_is_top_level_path_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QString m_r_template;
    bool m_r_template_isSet;
    bool m_r_template_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_api_pages_post_request)

#endif // OAI_api_pages_post_request_H
