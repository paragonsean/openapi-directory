/**
 * Forem API V1
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArticle_article.h
 *
 * 
 */

#ifndef OAIArticle_article_H
#define OAIArticle_article_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIArticle_article : public OAIObject {
public:
    OAIArticle_article();
    OAIArticle_article(QString json);
    ~OAIArticle_article() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBodyMarkdown() const;
    void setBodyMarkdown(const QString &body_markdown);
    bool is_body_markdown_Set() const;
    bool is_body_markdown_Valid() const;

    QString getCanonicalUrl() const;
    void setCanonicalUrl(const QString &canonical_url);
    bool is_canonical_url_Set() const;
    bool is_canonical_url_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getMainImage() const;
    void setMainImage(const QString &main_image);
    bool is_main_image_Set() const;
    bool is_main_image_Valid() const;

    qint32 getOrganizationId() const;
    void setOrganizationId(const qint32 &organization_id);
    bool is_organization_id_Set() const;
    bool is_organization_id_Valid() const;

    bool isPublished() const;
    void setPublished(const bool &published);
    bool is_published_Set() const;
    bool is_published_Valid() const;

    QString getSeries() const;
    void setSeries(const QString &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    QString getTags() const;
    void setTags(const QString &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body_markdown;
    bool m_body_markdown_isSet;
    bool m_body_markdown_isValid;

    QString m_canonical_url;
    bool m_canonical_url_isSet;
    bool m_canonical_url_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_main_image;
    bool m_main_image_isSet;
    bool m_main_image_isValid;

    qint32 m_organization_id;
    bool m_organization_id_isSet;
    bool m_organization_id_isValid;

    bool m_published;
    bool m_published_isSet;
    bool m_published_isValid;

    QString m_series;
    bool m_series_isSet;
    bool m_series_isValid;

    QString m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArticle_article)

#endif // OAIArticle_article_H
