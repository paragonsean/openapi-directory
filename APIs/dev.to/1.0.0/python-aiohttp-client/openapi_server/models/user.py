# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, github_username: str=None, id: int=None, joined_at: str=None, location: str=None, name: str=None, profile_image: str=None, summary: str=None, twitter_username: str=None, type_of: str=None, username: str=None, website_url: str=None):
        """User - a model defined in OpenAPI

        :param github_username: The github_username of this User.
        :param id: The id of this User.
        :param joined_at: The joined_at of this User.
        :param location: The location of this User.
        :param name: The name of this User.
        :param profile_image: The profile_image of this User.
        :param summary: The summary of this User.
        :param twitter_username: The twitter_username of this User.
        :param type_of: The type_of of this User.
        :param username: The username of this User.
        :param website_url: The website_url of this User.
        """
        self.openapi_types = {
            'github_username': str,
            'id': int,
            'joined_at': str,
            'location': str,
            'name': str,
            'profile_image': str,
            'summary': str,
            'twitter_username': str,
            'type_of': str,
            'username': str,
            'website_url': str
        }

        self.attribute_map = {
            'github_username': 'github_username',
            'id': 'id',
            'joined_at': 'joined_at',
            'location': 'location',
            'name': 'name',
            'profile_image': 'profile_image',
            'summary': 'summary',
            'twitter_username': 'twitter_username',
            'type_of': 'type_of',
            'username': 'username',
            'website_url': 'website_url'
        }

        self._github_username = github_username
        self._id = id
        self._joined_at = joined_at
        self._location = location
        self._name = name
        self._profile_image = profile_image
        self._summary = summary
        self._twitter_username = twitter_username
        self._type_of = type_of
        self._username = username
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def github_username(self):
        """Gets the github_username of this User.


        :return: The github_username of this User.
        :rtype: str
        """
        return self._github_username

    @github_username.setter
    def github_username(self, github_username):
        """Sets the github_username of this User.


        :param github_username: The github_username of this User.
        :type github_username: str
        """

        self._github_username = github_username

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: int
        """

        self._id = id

    @property
    def joined_at(self):
        """Gets the joined_at of this User.


        :return: The joined_at of this User.
        :rtype: str
        """
        return self._joined_at

    @joined_at.setter
    def joined_at(self, joined_at):
        """Sets the joined_at of this User.


        :param joined_at: The joined_at of this User.
        :type joined_at: str
        """

        self._joined_at = joined_at

    @property
    def location(self):
        """Gets the location of this User.


        :return: The location of this User.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this User.


        :param location: The location of this User.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def profile_image(self):
        """Gets the profile_image of this User.


        :return: The profile_image of this User.
        :rtype: str
        """
        return self._profile_image

    @profile_image.setter
    def profile_image(self, profile_image):
        """Sets the profile_image of this User.


        :param profile_image: The profile_image of this User.
        :type profile_image: str
        """

        self._profile_image = profile_image

    @property
    def summary(self):
        """Gets the summary of this User.


        :return: The summary of this User.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this User.


        :param summary: The summary of this User.
        :type summary: str
        """

        self._summary = summary

    @property
    def twitter_username(self):
        """Gets the twitter_username of this User.


        :return: The twitter_username of this User.
        :rtype: str
        """
        return self._twitter_username

    @twitter_username.setter
    def twitter_username(self, twitter_username):
        """Sets the twitter_username of this User.


        :param twitter_username: The twitter_username of this User.
        :type twitter_username: str
        """

        self._twitter_username = twitter_username

    @property
    def type_of(self):
        """Gets the type_of of this User.


        :return: The type_of of this User.
        :rtype: str
        """
        return self._type_of

    @type_of.setter
    def type_of(self, type_of):
        """Sets the type_of of this User.


        :param type_of: The type_of of this User.
        :type type_of: str
        """

        self._type_of = type_of

    @property
    def username(self):
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username

    @property
    def website_url(self):
        """Gets the website_url of this User.


        :return: The website_url of this User.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this User.


        :param website_url: The website_url of this User.
        :type website_url: str
        """

        self._website_url = website_url
