# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SharedUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, github_username: str=None, name: str=None, profile_image: str=None, profile_image_90: str=None, twitter_username: str=None, username: str=None, website_url: str=None):
        """SharedUser - a model defined in OpenAPI

        :param github_username: The github_username of this SharedUser.
        :param name: The name of this SharedUser.
        :param profile_image: The profile_image of this SharedUser.
        :param profile_image_90: The profile_image_90 of this SharedUser.
        :param twitter_username: The twitter_username of this SharedUser.
        :param username: The username of this SharedUser.
        :param website_url: The website_url of this SharedUser.
        """
        self.openapi_types = {
            'github_username': str,
            'name': str,
            'profile_image': str,
            'profile_image_90': str,
            'twitter_username': str,
            'username': str,
            'website_url': str
        }

        self.attribute_map = {
            'github_username': 'github_username',
            'name': 'name',
            'profile_image': 'profile_image',
            'profile_image_90': 'profile_image_90',
            'twitter_username': 'twitter_username',
            'username': 'username',
            'website_url': 'website_url'
        }

        self._github_username = github_username
        self._name = name
        self._profile_image = profile_image
        self._profile_image_90 = profile_image_90
        self._twitter_username = twitter_username
        self._username = username
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SharedUser of this SharedUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def github_username(self):
        """Gets the github_username of this SharedUser.


        :return: The github_username of this SharedUser.
        :rtype: str
        """
        return self._github_username

    @github_username.setter
    def github_username(self, github_username):
        """Sets the github_username of this SharedUser.


        :param github_username: The github_username of this SharedUser.
        :type github_username: str
        """

        self._github_username = github_username

    @property
    def name(self):
        """Gets the name of this SharedUser.


        :return: The name of this SharedUser.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SharedUser.


        :param name: The name of this SharedUser.
        :type name: str
        """

        self._name = name

    @property
    def profile_image(self):
        """Gets the profile_image of this SharedUser.

        Profile image (640x640)

        :return: The profile_image of this SharedUser.
        :rtype: str
        """
        return self._profile_image

    @profile_image.setter
    def profile_image(self, profile_image):
        """Sets the profile_image of this SharedUser.

        Profile image (640x640)

        :param profile_image: The profile_image of this SharedUser.
        :type profile_image: str
        """

        self._profile_image = profile_image

    @property
    def profile_image_90(self):
        """Gets the profile_image_90 of this SharedUser.

        Profile image (90x90)

        :return: The profile_image_90 of this SharedUser.
        :rtype: str
        """
        return self._profile_image_90

    @profile_image_90.setter
    def profile_image_90(self, profile_image_90):
        """Sets the profile_image_90 of this SharedUser.

        Profile image (90x90)

        :param profile_image_90: The profile_image_90 of this SharedUser.
        :type profile_image_90: str
        """

        self._profile_image_90 = profile_image_90

    @property
    def twitter_username(self):
        """Gets the twitter_username of this SharedUser.


        :return: The twitter_username of this SharedUser.
        :rtype: str
        """
        return self._twitter_username

    @twitter_username.setter
    def twitter_username(self, twitter_username):
        """Sets the twitter_username of this SharedUser.


        :param twitter_username: The twitter_username of this SharedUser.
        :type twitter_username: str
        """

        self._twitter_username = twitter_username

    @property
    def username(self):
        """Gets the username of this SharedUser.


        :return: The username of this SharedUser.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this SharedUser.


        :param username: The username of this SharedUser.
        :type username: str
        """

        self._username = username

    @property
    def website_url(self):
        """Gets the website_url of this SharedUser.


        :return: The website_url of this SharedUser.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this SharedUser.


        :param website_url: The website_url of this SharedUser.
        :type website_url: str
        """

        self._website_url = website_url
