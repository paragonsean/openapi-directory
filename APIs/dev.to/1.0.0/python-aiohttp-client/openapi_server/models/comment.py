# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Comment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, id_code: str=None, image_url: str=None, type_of: str=None):
        """Comment - a model defined in OpenAPI

        :param created_at: The created_at of this Comment.
        :param id_code: The id_code of this Comment.
        :param image_url: The image_url of this Comment.
        :param type_of: The type_of of this Comment.
        """
        self.openapi_types = {
            'created_at': datetime,
            'id_code': str,
            'image_url': str,
            'type_of': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'id_code': 'id_code',
            'image_url': 'image_url',
            'type_of': 'type_of'
        }

        self._created_at = created_at
        self._id_code = id_code
        self._image_url = image_url
        self._type_of = type_of

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Comment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Comment of this Comment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Comment.


        :return: The created_at of this Comment.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Comment.


        :param created_at: The created_at of this Comment.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id_code(self):
        """Gets the id_code of this Comment.


        :return: The id_code of this Comment.
        :rtype: str
        """
        return self._id_code

    @id_code.setter
    def id_code(self, id_code):
        """Sets the id_code of this Comment.


        :param id_code: The id_code of this Comment.
        :type id_code: str
        """

        self._id_code = id_code

    @property
    def image_url(self):
        """Gets the image_url of this Comment.

        Podcast image url

        :return: The image_url of this Comment.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this Comment.

        Podcast image url

        :param image_url: The image_url of this Comment.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def type_of(self):
        """Gets the type_of of this Comment.


        :return: The type_of of this Comment.
        :rtype: str
        """
        return self._type_of

    @type_of.setter
    def type_of(self, type_of):
        """Sets the type_of of this Comment.


        :param type_of: The type_of of this Comment.
        :type type_of: str
        """

        self._type_of = type_of
