# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SharedPodcast(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_url: str=None, slug: str=None, title: str=None):
        """SharedPodcast - a model defined in OpenAPI

        :param image_url: The image_url of this SharedPodcast.
        :param slug: The slug of this SharedPodcast.
        :param title: The title of this SharedPodcast.
        """
        self.openapi_types = {
            'image_url': str,
            'slug': str,
            'title': str
        }

        self.attribute_map = {
            'image_url': 'image_url',
            'slug': 'slug',
            'title': 'title'
        }

        self._image_url = image_url
        self._slug = slug
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedPodcast':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SharedPodcast of this SharedPodcast.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_url(self):
        """Gets the image_url of this SharedPodcast.

        Podcast image url

        :return: The image_url of this SharedPodcast.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this SharedPodcast.

        Podcast image url

        :param image_url: The image_url of this SharedPodcast.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def slug(self):
        """Gets the slug of this SharedPodcast.


        :return: The slug of this SharedPodcast.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this SharedPodcast.


        :param slug: The slug of this SharedPodcast.
        :type slug: str
        """

        self._slug = slug

    @property
    def title(self):
        """Gets the title of this SharedPodcast.


        :return: The title of this SharedPodcast.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SharedPodcast.


        :param title: The title of this SharedPodcast.
        :type title: str
        """

        self._title = title
