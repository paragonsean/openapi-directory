/**
 * DEV Community
 * A plugin that recommends resources like articles or users to a user using ChatGP.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SharedOrganization model module.
 * @module model/SharedOrganization
 * @version v1
 */
class SharedOrganization {
    /**
     * Constructs a new <code>SharedOrganization</code>.
     * The organization the resource belongs to
     * @alias module:model/SharedOrganization
     */
    constructor() { 
        
        SharedOrganization.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SharedOrganization</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharedOrganization} obj Optional instance to populate.
     * @return {module:model/SharedOrganization} The populated <code>SharedOrganization</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharedOrganization();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('profile_image')) {
                obj['profile_image'] = ApiClient.convertToType(data['profile_image'], 'String');
            }
            if (data.hasOwnProperty('profile_image_90')) {
                obj['profile_image_90'] = ApiClient.convertToType(data['profile_image_90'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SharedOrganization</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharedOrganization</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['profile_image'] && !(typeof data['profile_image'] === 'string' || data['profile_image'] instanceof String)) {
            throw new Error("Expected the field `profile_image` to be a primitive type in the JSON string but got " + data['profile_image']);
        }
        // ensure the json data is a string
        if (data['profile_image_90'] && !(typeof data['profile_image_90'] === 'string' || data['profile_image_90'] instanceof String)) {
            throw new Error("Expected the field `profile_image_90` to be a primitive type in the JSON string but got " + data['profile_image_90']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
SharedOrganization.prototype['name'] = undefined;

/**
 * Profile image (640x640)
 * @member {String} profile_image
 */
SharedOrganization.prototype['profile_image'] = undefined;

/**
 * Profile image (90x90)
 * @member {String} profile_image_90
 */
SharedOrganization.prototype['profile_image_90'] = undefined;

/**
 * @member {String} slug
 */
SharedOrganization.prototype['slug'] = undefined;

/**
 * @member {String} username
 */
SharedOrganization.prototype['username'] = undefined;






export default SharedOrganization;

