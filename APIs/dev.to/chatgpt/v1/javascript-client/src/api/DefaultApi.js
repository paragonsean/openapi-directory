/**
 * DEV Community
 * A plugin that recommends resources like articles or users to a user using ChatGP.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetArticlesResponse from '../model/GetArticlesResponse';

/**
* Default service.
* @module api/DefaultApi
* @version v1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getArticles operation.
     * @callback module:api/DefaultApi~getArticlesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetArticlesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of filtered articles
     * @param {Object} opts Optional parameters
     * @param {String} [q] Accepts keywords to use as a search query.
     * @param {Number} [page = 0)] Pagination Page
     * @param {Number} [perPage = 60)] Page size (the number of items to return per page).
     * @param {String} [top] Returns the most popular articles in the last N days. 'top' indicates the number of days since publication of the articles returned. This param can be used in conjuction with q or tag.
     * @param {module:api/DefaultApi~getArticlesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetArticlesResponse}
     */
    getArticles(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'q': opts['q'],
        'page': opts['page'],
        'per_page': opts['perPage'],
        'top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/vnd.forem.api-v1+json'];
      let returnType = GetArticlesResponse;
      return this.apiClient.callApi(
        '/api/articles/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
