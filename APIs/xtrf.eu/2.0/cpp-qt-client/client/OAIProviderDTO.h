/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProviderDTO.h
 *
 * 
 */

#ifndef OAIProviderDTO_H
#define OAIProviderDTO_H

#include <QJsonObject>

#include "OAIAddressDTO.h"
#include "OAICompetenciesDTO.h"
#include "OAIContactDTO.h"
#include "OAICustomFieldDTO.h"
#include "OAIProviderPersonDTO.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddressDTO;
class OAICompetenciesDTO;
class OAIContactDTO;
class OAICustomFieldDTO;
class OAIProviderPersonDTO;

class OAIProviderDTO : public OAIObject {
public:
    OAIProviderDTO();
    OAIProviderDTO(QString json);
    ~OAIProviderDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddressDTO getBillingAddress() const;
    void setBillingAddress(const OAIAddressDTO &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    qint64 getBranchId() const;
    void setBranchId(const qint64 &branch_id);
    bool is_branch_id_Set() const;
    bool is_branch_id_Valid() const;

    OAICompetenciesDTO getCompetencies() const;
    void setCompetencies(const OAICompetenciesDTO &competencies);
    bool is_competencies_Set() const;
    bool is_competencies_Valid() const;

    OAIContactDTO getContact() const;
    void setContact(const OAIContactDTO &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    OAIAddressDTO getCorrespondenceAddress() const;
    void setCorrespondenceAddress(const OAIAddressDTO &correspondence_address);
    bool is_correspondence_address_Set() const;
    bool is_correspondence_address_Valid() const;

    QList<OAICustomFieldDTO> getCustomFields() const;
    void setCustomFields(const QList<OAICustomFieldDTO> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIdNumber() const;
    void setIdNumber(const QString &id_number);
    bool is_id_number_Set() const;
    bool is_id_number_Valid() const;

    qint64 getLeadSourceId() const;
    void setLeadSourceId(const qint64 &lead_source_id);
    bool is_lead_source_id_Set() const;
    bool is_lead_source_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QList<OAIProviderPersonDTO> getPersons() const;
    void setPersons(const QList<OAIProviderPersonDTO> &persons);
    bool is_persons_Set() const;
    bool is_persons_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddressDTO m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    qint64 m_branch_id;
    bool m_branch_id_isSet;
    bool m_branch_id_isValid;

    OAICompetenciesDTO m_competencies;
    bool m_competencies_isSet;
    bool m_competencies_isValid;

    OAIContactDTO m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    OAIAddressDTO m_correspondence_address;
    bool m_correspondence_address_isSet;
    bool m_correspondence_address_isValid;

    QList<OAICustomFieldDTO> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_id_number;
    bool m_id_number_isSet;
    bool m_id_number_isValid;

    qint64 m_lead_source_id;
    bool m_lead_source_id_isSet;
    bool m_lead_source_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QList<OAIProviderPersonDTO> m_persons;
    bool m_persons_isSet;
    bool m_persons_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProviderDTO)

#endif // OAIProviderDTO_H
