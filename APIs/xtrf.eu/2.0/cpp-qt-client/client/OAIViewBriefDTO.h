/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIViewBriefDTO.h
 *
 * 
 */

#ifndef OAIViewBriefDTO_H
#define OAIViewBriefDTO_H

#include <QJsonObject>

#include "OAIAccessDTO.h"
#include "OAILastModificationDTO.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccessDTO;
class OAILastModificationDTO;

class OAIViewBriefDTO : public OAIObject {
public:
    OAIViewBriefDTO();
    OAIViewBriefDTO(QString json);
    ~OAIViewBriefDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccessDTO getAccess() const;
    void setAccess(const OAIAccessDTO &access);
    bool is_access_Set() const;
    bool is_access_Valid() const;

    bool isCurrent() const;
    void setCurrent(const bool &current);
    bool is_current_Set() const;
    bool is_current_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAILastModificationDTO getLastModification() const;
    void setLastModification(const OAILastModificationDTO &last_modification);
    bool is_last_modification_Set() const;
    bool is_last_modification_Valid() const;

    bool isMine() const;
    void setMine(const bool &mine);
    bool is_mine_Set() const;
    bool is_mine_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccessDTO m_access;
    bool m_access_isSet;
    bool m_access_isValid;

    bool m_current;
    bool m_current_isSet;
    bool m_current_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAILastModificationDTO m_last_modification;
    bool m_last_modification_isSet;
    bool m_last_modification_isValid;

    bool m_mine;
    bool m_mine_isSet;
    bool m_mine_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIViewBriefDTO)

#endif // OAIViewBriefDTO_H
