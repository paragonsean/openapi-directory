/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerResponsiblePersonsDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerResponsiblePersonsDTO::OAICustomerResponsiblePersonsDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerResponsiblePersonsDTO::OAICustomerResponsiblePersonsDTO() {
    this->initializeModel();
}

OAICustomerResponsiblePersonsDTO::~OAICustomerResponsiblePersonsDTO() {}

void OAICustomerResponsiblePersonsDTO::initializeModel() {

    m_account_manager_id_isSet = false;
    m_account_manager_id_isValid = false;

    m_project_coordinator_id_isSet = false;
    m_project_coordinator_id_isValid = false;

    m_project_manager_id_isSet = false;
    m_project_manager_id_isValid = false;

    m_sales_person_id_isSet = false;
    m_sales_person_id_isValid = false;
}

void OAICustomerResponsiblePersonsDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerResponsiblePersonsDTO::fromJsonObject(QJsonObject json) {

    m_account_manager_id_isValid = ::OpenAPI::fromJsonValue(m_account_manager_id, json[QString("accountManagerId")]);
    m_account_manager_id_isSet = !json[QString("accountManagerId")].isNull() && m_account_manager_id_isValid;

    m_project_coordinator_id_isValid = ::OpenAPI::fromJsonValue(m_project_coordinator_id, json[QString("projectCoordinatorId")]);
    m_project_coordinator_id_isSet = !json[QString("projectCoordinatorId")].isNull() && m_project_coordinator_id_isValid;

    m_project_manager_id_isValid = ::OpenAPI::fromJsonValue(m_project_manager_id, json[QString("projectManagerId")]);
    m_project_manager_id_isSet = !json[QString("projectManagerId")].isNull() && m_project_manager_id_isValid;

    m_sales_person_id_isValid = ::OpenAPI::fromJsonValue(m_sales_person_id, json[QString("salesPersonId")]);
    m_sales_person_id_isSet = !json[QString("salesPersonId")].isNull() && m_sales_person_id_isValid;
}

QString OAICustomerResponsiblePersonsDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerResponsiblePersonsDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_account_manager_id_isSet) {
        obj.insert(QString("accountManagerId"), ::OpenAPI::toJsonValue(m_account_manager_id));
    }
    if (m_project_coordinator_id_isSet) {
        obj.insert(QString("projectCoordinatorId"), ::OpenAPI::toJsonValue(m_project_coordinator_id));
    }
    if (m_project_manager_id_isSet) {
        obj.insert(QString("projectManagerId"), ::OpenAPI::toJsonValue(m_project_manager_id));
    }
    if (m_sales_person_id_isSet) {
        obj.insert(QString("salesPersonId"), ::OpenAPI::toJsonValue(m_sales_person_id));
    }
    return obj;
}

qint64 OAICustomerResponsiblePersonsDTO::getAccountManagerId() const {
    return m_account_manager_id;
}
void OAICustomerResponsiblePersonsDTO::setAccountManagerId(const qint64 &account_manager_id) {
    m_account_manager_id = account_manager_id;
    m_account_manager_id_isSet = true;
}

bool OAICustomerResponsiblePersonsDTO::is_account_manager_id_Set() const{
    return m_account_manager_id_isSet;
}

bool OAICustomerResponsiblePersonsDTO::is_account_manager_id_Valid() const{
    return m_account_manager_id_isValid;
}

qint64 OAICustomerResponsiblePersonsDTO::getProjectCoordinatorId() const {
    return m_project_coordinator_id;
}
void OAICustomerResponsiblePersonsDTO::setProjectCoordinatorId(const qint64 &project_coordinator_id) {
    m_project_coordinator_id = project_coordinator_id;
    m_project_coordinator_id_isSet = true;
}

bool OAICustomerResponsiblePersonsDTO::is_project_coordinator_id_Set() const{
    return m_project_coordinator_id_isSet;
}

bool OAICustomerResponsiblePersonsDTO::is_project_coordinator_id_Valid() const{
    return m_project_coordinator_id_isValid;
}

qint64 OAICustomerResponsiblePersonsDTO::getProjectManagerId() const {
    return m_project_manager_id;
}
void OAICustomerResponsiblePersonsDTO::setProjectManagerId(const qint64 &project_manager_id) {
    m_project_manager_id = project_manager_id;
    m_project_manager_id_isSet = true;
}

bool OAICustomerResponsiblePersonsDTO::is_project_manager_id_Set() const{
    return m_project_manager_id_isSet;
}

bool OAICustomerResponsiblePersonsDTO::is_project_manager_id_Valid() const{
    return m_project_manager_id_isValid;
}

qint64 OAICustomerResponsiblePersonsDTO::getSalesPersonId() const {
    return m_sales_person_id;
}
void OAICustomerResponsiblePersonsDTO::setSalesPersonId(const qint64 &sales_person_id) {
    m_sales_person_id = sales_person_id;
    m_sales_person_id_isSet = true;
}

bool OAICustomerResponsiblePersonsDTO::is_sales_person_id_Set() const{
    return m_sales_person_id_isSet;
}

bool OAICustomerResponsiblePersonsDTO::is_sales_person_id_Valid() const{
    return m_sales_person_id_isValid;
}

bool OAICustomerResponsiblePersonsDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_manager_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_coordinator_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_manager_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_person_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerResponsiblePersonsDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_manager_id_isValid && m_sales_person_id_isValid && true;
}

} // namespace OpenAPI
