/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventsQueue.h
 *
 * 
 */

#ifndef OAIEventsQueue_H
#define OAIEventsQueue_H

#include <QJsonObject>

#include "OAIEvent.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEvent;

class OAIEventsQueue : public OAIObject {
public:
    OAIEventsQueue();
    OAIEventsQueue(QString json);
    ~OAIEventsQueue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEvent> getAll() const;
    void setAll(const QList<OAIEvent> &all);
    bool is_all_Set() const;
    bool is_all_Valid() const;

    bool isEmpty() const;
    void setEmpty(const bool &empty);
    bool is_empty_Set() const;
    bool is_empty_Valid() const;

    bool isReadyToBeDispatched() const;
    void setReadyToBeDispatched(const bool &ready_to_be_dispatched);
    bool is_ready_to_be_dispatched_Set() const;
    bool is_ready_to_be_dispatched_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEvent> m_all;
    bool m_all_isSet;
    bool m_all_isValid;

    bool m_empty;
    bool m_empty_isSet;
    bool m_empty_isValid;

    bool m_ready_to_be_dispatched;
    bool m_ready_to_be_dispatched_isSet;
    bool m_ready_to_be_dispatched_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventsQueue)

#endif // OAIEventsQueue_H
