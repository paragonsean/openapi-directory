/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBodyPart.h
 *
 * 
 */

#ifndef OAIBodyPart_H
#define OAIBodyPart_H

#include <QJsonObject>

#include "OAIBodyPart_headers.h"
#include "OAIBodyPart_mediaType.h"
#include "OAIBodyPart_parameterizedHeaders.h"
#include "OAIContentDisposition.h"
#include "OAIMultiPart.h"
#include "OAIObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContentDisposition;
class OAIBodyPart_mediaType;
class OAIMultiPart;

class OAIBodyPart : public OAIObject {
public:
    OAIBodyPart();
    OAIBodyPart(QString json);
    ~OAIBodyPart() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContentDisposition getContentDisposition() const;
    void setContentDisposition(const OAIContentDisposition &content_disposition);
    bool is_content_disposition_Set() const;
    bool is_content_disposition_Valid() const;

    OAIObject getEntity() const;
    void setEntity(const OAIObject &entity);
    bool is_entity_Set() const;
    bool is_entity_Valid() const;

    OAIBodyPart_headers getHeaders() const;
    void setHeaders(const OAIBodyPart_headers &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    OAIBodyPart_mediaType getMediaType() const;
    void setMediaType(const OAIBodyPart_mediaType &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    OAIObject getMessageBodyWorkers() const;
    void setMessageBodyWorkers(const OAIObject &message_body_workers);
    bool is_message_body_workers_Set() const;
    bool is_message_body_workers_Valid() const;

    OAIBodyPart_parameterizedHeaders getParameterizedHeaders() const;
    void setParameterizedHeaders(const OAIBodyPart_parameterizedHeaders &parameterized_headers);
    bool is_parameterized_headers_Set() const;
    bool is_parameterized_headers_Valid() const;

    OAIMultiPart getParent() const;
    void setParent(const OAIMultiPart &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    OAIObject getProviders() const;
    void setProviders(const OAIObject &providers);
    bool is_providers_Set() const;
    bool is_providers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContentDisposition m_content_disposition;
    bool m_content_disposition_isSet;
    bool m_content_disposition_isValid;

    OAIObject m_entity;
    bool m_entity_isSet;
    bool m_entity_isValid;

    OAIBodyPart_headers m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    OAIBodyPart_mediaType m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    OAIObject m_message_body_workers;
    bool m_message_body_workers_isSet;
    bool m_message_body_workers_isValid;

    OAIBodyPart_parameterizedHeaders m_parameterized_headers;
    bool m_parameterized_headers_isSet;
    bool m_parameterized_headers_isValid;

    OAIMultiPart m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    OAIObject m_providers;
    bool m_providers_isSet;
    bool m_providers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBodyPart)

#endif // OAIBodyPart_H
