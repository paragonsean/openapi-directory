/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstructionsDTO.h
 *
 * 
 */

#ifndef OAIInstructionsDTO_H
#define OAIInstructionsDTO_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInstructionsDTO : public OAIObject {
public:
    OAIInstructionsDTO();
    OAIInstructionsDTO(QString json);
    ~OAIInstructionsDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getForProvider() const;
    void setForProvider(const QString &for_provider);
    bool is_for_provider_Set() const;
    bool is_for_provider_Valid() const;

    QString getFromCustomer() const;
    void setFromCustomer(const QString &from_customer);
    bool is_from_customer_Set() const;
    bool is_from_customer_Valid() const;

    QString getInternal() const;
    void setInternal(const QString &internal);
    bool is_internal_Set() const;
    bool is_internal_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getPaymentNoteForCustomer() const;
    void setPaymentNoteForCustomer(const QString &payment_note_for_customer);
    bool is_payment_note_for_customer_Set() const;
    bool is_payment_note_for_customer_Valid() const;

    QString getPaymentNoteForVendor() const;
    void setPaymentNoteForVendor(const QString &payment_note_for_vendor);
    bool is_payment_note_for_vendor_Set() const;
    bool is_payment_note_for_vendor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_for_provider;
    bool m_for_provider_isSet;
    bool m_for_provider_isValid;

    QString m_from_customer;
    bool m_from_customer_isSet;
    bool m_from_customer_isValid;

    QString m_internal;
    bool m_internal_isSet;
    bool m_internal_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_payment_note_for_customer;
    bool m_payment_note_for_customer_isSet;
    bool m_payment_note_for_customer_isValid;

    QString m_payment_note_for_vendor;
    bool m_payment_note_for_vendor_isSet;
    bool m_payment_note_for_vendor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstructionsDTO)

#endif // OAIInstructionsDTO_H
