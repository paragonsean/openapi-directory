/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReceivableCreateDTO.h
 *
 * 
 */

#ifndef OAIReceivableCreateDTO_H
#define OAIReceivableCreateDTO_H

#include <QJsonObject>

#include "OAIChargeLanguageCombinationDTO.h"
#include "OAIFileDTO.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFileDTO;
class OAIChargeLanguageCombinationDTO;

class OAIReceivableCreateDTO : public OAIObject {
public:
    OAIReceivableCreateDTO();
    OAIReceivableCreateDTO(QString json);
    ~OAIReceivableCreateDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCalculationUnitId() const;
    void setCalculationUnitId(const qint64 &calculation_unit_id);
    bool is_calculation_unit_id_Set() const;
    bool is_calculation_unit_id_Valid() const;

    OAIFileDTO getCatLogFile() const;
    void setCatLogFile(const OAIFileDTO &cat_log_file);
    bool is_cat_log_file_Set() const;
    bool is_cat_log_file_Valid() const;

    qint64 getCurrencyId() const;
    void setCurrencyId(const qint64 &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIgnoreMinimumCharge() const;
    void setIgnoreMinimumCharge(const bool &ignore_minimum_charge);
    bool is_ignore_minimum_charge_Set() const;
    bool is_ignore_minimum_charge_Valid() const;

    QString getInvoiceId() const;
    void setInvoiceId(const QString &invoice_id);
    bool is_invoice_id_Set() const;
    bool is_invoice_id_Valid() const;

    qint64 getJobTypeId() const;
    void setJobTypeId(const qint64 &job_type_id);
    bool is_job_type_id_Set() const;
    bool is_job_type_id_Valid() const;

    OAIChargeLanguageCombinationDTO getLanguageCombination() const;
    void setLanguageCombination(const OAIChargeLanguageCombinationDTO &language_combination);
    bool is_language_combination_Set() const;
    bool is_language_combination_Valid() const;

    QString getLanguageCombinationIdNumber() const;
    void setLanguageCombinationIdNumber(const QString &language_combination_id_number);
    bool is_language_combination_id_number_Set() const;
    bool is_language_combination_id_number_Valid() const;

    double getMinimumCharge() const;
    void setMinimumCharge(const double &minimum_charge);
    bool is_minimum_charge_Set() const;
    bool is_minimum_charge_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    double getRate() const;
    void setRate(const double &rate);
    bool is_rate_Set() const;
    bool is_rate_Valid() const;

    QString getRateOrigin() const;
    void setRateOrigin(const QString &rate_origin);
    bool is_rate_origin_Set() const;
    bool is_rate_origin_Valid() const;

    qint64 getTaskId() const;
    void setTaskId(const qint64 &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_calculation_unit_id;
    bool m_calculation_unit_id_isSet;
    bool m_calculation_unit_id_isValid;

    OAIFileDTO m_cat_log_file;
    bool m_cat_log_file_isSet;
    bool m_cat_log_file_isValid;

    qint64 m_currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_ignore_minimum_charge;
    bool m_ignore_minimum_charge_isSet;
    bool m_ignore_minimum_charge_isValid;

    QString m_invoice_id;
    bool m_invoice_id_isSet;
    bool m_invoice_id_isValid;

    qint64 m_job_type_id;
    bool m_job_type_id_isSet;
    bool m_job_type_id_isValid;

    OAIChargeLanguageCombinationDTO m_language_combination;
    bool m_language_combination_isSet;
    bool m_language_combination_isValid;

    QString m_language_combination_id_number;
    bool m_language_combination_id_number_isSet;
    bool m_language_combination_id_number_isValid;

    double m_minimum_charge;
    bool m_minimum_charge_isSet;
    bool m_minimum_charge_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    double m_rate;
    bool m_rate_isSet;
    bool m_rate_isValid;

    QString m_rate_origin;
    bool m_rate_origin_isSet;
    bool m_rate_origin_isValid;

    qint64 m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReceivableCreateDTO)

#endif // OAIReceivableCreateDTO_H
