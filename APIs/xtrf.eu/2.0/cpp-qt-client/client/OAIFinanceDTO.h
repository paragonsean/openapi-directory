/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinanceDTO.h
 *
 * 
 */

#ifndef OAIFinanceDTO_H
#define OAIFinanceDTO_H

#include <QJsonObject>

#include "OAIChargeDTO.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChargeDTO;

class OAIFinanceDTO : public OAIObject {
public:
    OAIFinanceDTO();
    OAIFinanceDTO(QString json);
    ~OAIFinanceDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getRoi() const;
    void setRoi(const double &roi);
    bool is_roi_Set() const;
    bool is_roi_Valid() const;

    qint64 getCurrencyId() const;
    void setCurrencyId(const qint64 &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    double getMargin() const;
    void setMargin(const double &margin);
    bool is_margin_Set() const;
    bool is_margin_Valid() const;

    QList<OAIChargeDTO> getPayables() const;
    void setPayables(const QList<OAIChargeDTO> &payables);
    bool is_payables_Set() const;
    bool is_payables_Valid() const;

    double getProfit() const;
    void setProfit(const double &profit);
    bool is_profit_Set() const;
    bool is_profit_Valid() const;

    QList<OAIChargeDTO> getReceivables() const;
    void setReceivables(const QList<OAIChargeDTO> &receivables);
    bool is_receivables_Set() const;
    bool is_receivables_Valid() const;

    double getTotalAgreed() const;
    void setTotalAgreed(const double &total_agreed);
    bool is_total_agreed_Set() const;
    bool is_total_agreed_Valid() const;

    double getTotalCost() const;
    void setTotalCost(const double &total_cost);
    bool is_total_cost_Set() const;
    bool is_total_cost_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_roi;
    bool m_roi_isSet;
    bool m_roi_isValid;

    qint64 m_currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    double m_margin;
    bool m_margin_isSet;
    bool m_margin_isValid;

    QList<OAIChargeDTO> m_payables;
    bool m_payables_isSet;
    bool m_payables_isValid;

    double m_profit;
    bool m_profit_isSet;
    bool m_profit_isValid;

    QList<OAIChargeDTO> m_receivables;
    bool m_receivables_isSet;
    bool m_receivables_isValid;

    double m_total_agreed;
    bool m_total_agreed_isSet;
    bool m_total_agreed_isValid;

    double m_total_cost;
    bool m_total_cost_isSet;
    bool m_total_cost_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinanceDTO)

#endif // OAIFinanceDTO_H
