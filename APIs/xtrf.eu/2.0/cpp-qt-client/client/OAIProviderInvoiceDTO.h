/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProviderInvoiceDTO.h
 *
 * 
 */

#ifndef OAIProviderInvoiceDTO_H
#define OAIProviderInvoiceDTO_H

#include <QJsonObject>

#include "OAIProviderInvoiceDatesDTO.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProviderInvoiceDatesDTO;

class OAIProviderInvoiceDTO : public OAIObject {
public:
    OAIProviderInvoiceDTO();
    OAIProviderInvoiceDTO(QString json);
    ~OAIProviderInvoiceDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCurrencyId() const;
    void setCurrencyId(const qint64 &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    OAIProviderInvoiceDatesDTO getDates() const;
    void setDates(const OAIProviderInvoiceDatesDTO &dates);
    bool is_dates_Set() const;
    bool is_dates_Valid() const;

    QString getDraftNumber() const;
    void setDraftNumber(const QString &draft_number);
    bool is_draft_number_Set() const;
    bool is_draft_number_Valid() const;

    QString getFinalNumber() const;
    void setFinalNumber(const QString &final_number);
    bool is_final_number_Set() const;
    bool is_final_number_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInternalNumber() const;
    void setInternalNumber(const QString &internal_number);
    bool is_internal_number_Set() const;
    bool is_internal_number_Valid() const;

    double getJobsNetValue() const;
    void setJobsNetValue(const double &jobs_net_value);
    bool is_jobs_net_value_Set() const;
    bool is_jobs_net_value_Valid() const;

    QString getNotesFromProvider() const;
    void setNotesFromProvider(const QString &notes_from_provider);
    bool is_notes_from_provider_Set() const;
    bool is_notes_from_provider_Valid() const;

    QString getPaymentStatus() const;
    void setPaymentStatus(const QString &payment_status);
    bool is_payment_status_Set() const;
    bool is_payment_status_Valid() const;

    qint64 getProviderId() const;
    void setProviderId(const qint64 &provider_id);
    bool is_provider_id_Set() const;
    bool is_provider_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getTotalGross() const;
    void setTotalGross(const double &total_gross);
    bool is_total_gross_Set() const;
    bool is_total_gross_Valid() const;

    QString getTotalGrossInWords() const;
    void setTotalGrossInWords(const QString &total_gross_in_words);
    bool is_total_gross_in_words_Set() const;
    bool is_total_gross_in_words_Valid() const;

    double getTotalNetto() const;
    void setTotalNetto(const double &total_netto);
    bool is_total_netto_Set() const;
    bool is_total_netto_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    OAIProviderInvoiceDatesDTO m_dates;
    bool m_dates_isSet;
    bool m_dates_isValid;

    QString m_draft_number;
    bool m_draft_number_isSet;
    bool m_draft_number_isValid;

    QString m_final_number;
    bool m_final_number_isSet;
    bool m_final_number_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_internal_number;
    bool m_internal_number_isSet;
    bool m_internal_number_isValid;

    double m_jobs_net_value;
    bool m_jobs_net_value_isSet;
    bool m_jobs_net_value_isValid;

    QString m_notes_from_provider;
    bool m_notes_from_provider_isSet;
    bool m_notes_from_provider_isValid;

    QString m_payment_status;
    bool m_payment_status_isSet;
    bool m_payment_status_isValid;

    qint64 m_provider_id;
    bool m_provider_id_isSet;
    bool m_provider_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_total_gross;
    bool m_total_gross_isSet;
    bool m_total_gross_isValid;

    QString m_total_gross_in_words;
    bool m_total_gross_in_words_isSet;
    bool m_total_gross_in_words_isValid;

    double m_total_netto;
    bool m_total_netto_isSet;
    bool m_total_netto_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProviderInvoiceDTO)

#endif // OAIProviderInvoiceDTO_H
