/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerInvoiceDTO.h
 *
 * 
 */

#ifndef OAICustomerInvoiceDTO_H
#define OAICustomerInvoiceDTO_H

#include <QJsonObject>

#include "OAICustomerDetailsDTO.h"
#include "OAICustomerInvoiceDatesDTO.h"
#include "OAIPaymentTermsDTO.h"
#include "OAITaskDTO.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomerDetailsDTO;
class OAICustomerInvoiceDatesDTO;
class OAIPaymentTermsDTO;
class OAITaskDTO;

class OAICustomerInvoiceDTO : public OAIObject {
public:
    OAICustomerInvoiceDTO();
    OAICustomerInvoiceDTO(QString json);
    ~OAICustomerInvoiceDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCurrencyId() const;
    void setCurrencyId(const qint64 &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    OAICustomerDetailsDTO getCustomerDetails() const;
    void setCustomerDetails(const OAICustomerDetailsDTO &customer_details);
    bool is_customer_details_Set() const;
    bool is_customer_details_Valid() const;

    qint64 getCustomerId() const;
    void setCustomerId(const qint64 &customer_id);
    bool is_customer_id_Set() const;
    bool is_customer_id_Valid() const;

    OAICustomerInvoiceDatesDTO getDates() const;
    void setDates(const OAICustomerInvoiceDatesDTO &dates);
    bool is_dates_Set() const;
    bool is_dates_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInvoiceNumber() const;
    void setInvoiceNumber(const QString &invoice_number);
    bool is_invoice_number_Set() const;
    bool is_invoice_number_Valid() const;

    qint64 getPaymentMethodId() const;
    void setPaymentMethodId(const qint64 &payment_method_id);
    bool is_payment_method_id_Set() const;
    bool is_payment_method_id_Valid() const;

    OAIPaymentTermsDTO getPaymentTerms() const;
    void setPaymentTerms(const OAIPaymentTermsDTO &payment_terms);
    bool is_payment_terms_Set() const;
    bool is_payment_terms_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAITaskDTO> getTasks() const;
    void setTasks(const QList<OAITaskDTO> &tasks);
    bool is_tasks_Set() const;
    bool is_tasks_Valid() const;

    double getTasksValue() const;
    void setTasksValue(const double &tasks_value);
    bool is_tasks_value_Set() const;
    bool is_tasks_value_Valid() const;

    double getTotalGross() const;
    void setTotalGross(const double &total_gross);
    bool is_total_gross_Set() const;
    bool is_total_gross_Valid() const;

    QString getTotalInWords() const;
    void setTotalInWords(const QString &total_in_words);
    bool is_total_in_words_Set() const;
    bool is_total_in_words_Valid() const;

    double getTotalNetto() const;
    void setTotalNetto(const double &total_netto);
    bool is_total_netto_Set() const;
    bool is_total_netto_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVatCalculationRule() const;
    void setVatCalculationRule(const QString &vat_calculation_rule);
    bool is_vat_calculation_rule_Set() const;
    bool is_vat_calculation_rule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    OAICustomerDetailsDTO m_customer_details;
    bool m_customer_details_isSet;
    bool m_customer_details_isValid;

    qint64 m_customer_id;
    bool m_customer_id_isSet;
    bool m_customer_id_isValid;

    OAICustomerInvoiceDatesDTO m_dates;
    bool m_dates_isSet;
    bool m_dates_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_invoice_number;
    bool m_invoice_number_isSet;
    bool m_invoice_number_isValid;

    qint64 m_payment_method_id;
    bool m_payment_method_id_isSet;
    bool m_payment_method_id_isValid;

    OAIPaymentTermsDTO m_payment_terms;
    bool m_payment_terms_isSet;
    bool m_payment_terms_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAITaskDTO> m_tasks;
    bool m_tasks_isSet;
    bool m_tasks_isValid;

    double m_tasks_value;
    bool m_tasks_value_isSet;
    bool m_tasks_value_isValid;

    double m_total_gross;
    bool m_total_gross_isSet;
    bool m_total_gross_isValid;

    QString m_total_in_words;
    bool m_total_in_words_isSet;
    bool m_total_in_words_isValid;

    double m_total_netto;
    bool m_total_netto_isSet;
    bool m_total_netto_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_vat_calculation_rule;
    bool m_vat_calculation_rule_isSet;
    bool m_vat_calculation_rule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerInvoiceDTO)

#endif // OAICustomerInvoiceDTO_H
