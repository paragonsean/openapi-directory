/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobDTO::OAIJobDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobDTO::OAIJobDTO() {
    this->initializeModel();
}

OAIJobDTO::~OAIJobDTO() {}

void OAIJobDTO::initializeModel() {

    m_files_isSet = false;
    m_files_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_id_number_isSet = false;
    m_id_number_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIJobDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobDTO::fromJsonObject(QJsonObject json) {

    m_files_isValid = ::OpenAPI::fromJsonValue(m_files, json[QString("files")]);
    m_files_isSet = !json[QString("files")].isNull() && m_files_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_id_number_isValid = ::OpenAPI::fromJsonValue(m_id_number, json[QString("idNumber")]);
    m_id_number_isSet = !json[QString("idNumber")].isNull() && m_id_number_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIJobDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_files.isSet()) {
        obj.insert(QString("files"), ::OpenAPI::toJsonValue(m_files));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_id_number_isSet) {
        obj.insert(QString("idNumber"), ::OpenAPI::toJsonValue(m_id_number));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIJobFilesDTO OAIJobDTO::getFiles() const {
    return m_files;
}
void OAIJobDTO::setFiles(const OAIJobFilesDTO &files) {
    m_files = files;
    m_files_isSet = true;
}

bool OAIJobDTO::is_files_Set() const{
    return m_files_isSet;
}

bool OAIJobDTO::is_files_Valid() const{
    return m_files_isValid;
}

qint64 OAIJobDTO::getId() const {
    return m_id;
}
void OAIJobDTO::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIJobDTO::is_id_Set() const{
    return m_id_isSet;
}

bool OAIJobDTO::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIJobDTO::getIdNumber() const {
    return m_id_number;
}
void OAIJobDTO::setIdNumber(const QString &id_number) {
    m_id_number = id_number;
    m_id_number_isSet = true;
}

bool OAIJobDTO::is_id_number_Set() const{
    return m_id_number_isSet;
}

bool OAIJobDTO::is_id_number_Valid() const{
    return m_id_number_isValid;
}

QString OAIJobDTO::getName() const {
    return m_name;
}
void OAIJobDTO::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIJobDTO::is_name_Set() const{
    return m_name_isSet;
}

bool OAIJobDTO::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIJobDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_files.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
