/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddressDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddressDTO::OAIAddressDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddressDTO::OAIAddressDTO() {
    this->initializeModel();
}

OAIAddressDTO::~OAIAddressDTO() {}

void OAIAddressDTO::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_country_id_isSet = false;
    m_country_id_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_province_id_isSet = false;
    m_province_id_isValid = false;

    m_same_as_billing_address_isSet = false;
    m_same_as_billing_address_isValid = false;
}

void OAIAddressDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddressDTO::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("addressLine1")]);
    m_address_line1_isSet = !json[QString("addressLine1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("addressLine2")]);
    m_address_line2_isSet = !json[QString("addressLine2")].isNull() && m_address_line2_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_country_id_isValid = ::OpenAPI::fromJsonValue(m_country_id, json[QString("countryId")]);
    m_country_id_isSet = !json[QString("countryId")].isNull() && m_country_id_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postalCode")]);
    m_postal_code_isSet = !json[QString("postalCode")].isNull() && m_postal_code_isValid;

    m_province_id_isValid = ::OpenAPI::fromJsonValue(m_province_id, json[QString("provinceId")]);
    m_province_id_isSet = !json[QString("provinceId")].isNull() && m_province_id_isValid;

    m_same_as_billing_address_isValid = ::OpenAPI::fromJsonValue(m_same_as_billing_address, json[QString("sameAsBillingAddress")]);
    m_same_as_billing_address_isSet = !json[QString("sameAsBillingAddress")].isNull() && m_same_as_billing_address_isValid;
}

QString OAIAddressDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddressDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("addressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("addressLine2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_country_id_isSet) {
        obj.insert(QString("countryId"), ::OpenAPI::toJsonValue(m_country_id));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postalCode"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_province_id_isSet) {
        obj.insert(QString("provinceId"), ::OpenAPI::toJsonValue(m_province_id));
    }
    if (m_same_as_billing_address_isSet) {
        obj.insert(QString("sameAsBillingAddress"), ::OpenAPI::toJsonValue(m_same_as_billing_address));
    }
    return obj;
}

QString OAIAddressDTO::getAddressLine1() const {
    return m_address_line1;
}
void OAIAddressDTO::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAIAddressDTO::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAIAddressDTO::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAIAddressDTO::getAddressLine2() const {
    return m_address_line2;
}
void OAIAddressDTO::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAIAddressDTO::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAIAddressDTO::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAIAddressDTO::getCity() const {
    return m_city;
}
void OAIAddressDTO::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIAddressDTO::is_city_Set() const{
    return m_city_isSet;
}

bool OAIAddressDTO::is_city_Valid() const{
    return m_city_isValid;
}

qint64 OAIAddressDTO::getCountryId() const {
    return m_country_id;
}
void OAIAddressDTO::setCountryId(const qint64 &country_id) {
    m_country_id = country_id;
    m_country_id_isSet = true;
}

bool OAIAddressDTO::is_country_id_Set() const{
    return m_country_id_isSet;
}

bool OAIAddressDTO::is_country_id_Valid() const{
    return m_country_id_isValid;
}

QString OAIAddressDTO::getPostalCode() const {
    return m_postal_code;
}
void OAIAddressDTO::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIAddressDTO::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIAddressDTO::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

qint64 OAIAddressDTO::getProvinceId() const {
    return m_province_id;
}
void OAIAddressDTO::setProvinceId(const qint64 &province_id) {
    m_province_id = province_id;
    m_province_id_isSet = true;
}

bool OAIAddressDTO::is_province_id_Set() const{
    return m_province_id_isSet;
}

bool OAIAddressDTO::is_province_id_Valid() const{
    return m_province_id_isValid;
}

bool OAIAddressDTO::isSameAsBillingAddress() const {
    return m_same_as_billing_address;
}
void OAIAddressDTO::setSameAsBillingAddress(const bool &same_as_billing_address) {
    m_same_as_billing_address = same_as_billing_address;
    m_same_as_billing_address_isSet = true;
}

bool OAIAddressDTO::is_same_as_billing_address_Set() const{
    return m_same_as_billing_address_isSet;
}

bool OAIAddressDTO::is_same_as_billing_address_Valid() const{
    return m_same_as_billing_address_isValid;
}

bool OAIAddressDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_province_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_same_as_billing_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddressDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
