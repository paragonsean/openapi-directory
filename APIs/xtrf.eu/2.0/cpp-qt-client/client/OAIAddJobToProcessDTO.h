/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddJobToProcessDTO.h
 *
 * 
 */

#ifndef OAIAddJobToProcessDTO_H
#define OAIAddJobToProcessDTO_H

#include <QJsonObject>

#include "OAIExternalInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExternalInfo;

class OAIAddJobToProcessDTO : public OAIObject {
public:
    OAIAddJobToProcessDTO();
    OAIAddJobToProcessDTO(QString json);
    ~OAIAddJobToProcessDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExternalInfo getExternalInfo() const;
    void setExternalInfo(const OAIExternalInfo &external_info);
    bool is_external_info_Set() const;
    bool is_external_info_Valid() const;

    QString getExternalProjectId() const;
    void setExternalProjectId(const QString &external_project_id);
    bool is_external_project_id_Set() const;
    bool is_external_project_id_Valid() const;

    qint32 getPreviousStepNumber() const;
    void setPreviousStepNumber(const qint32 &previous_step_number);
    bool is_previous_step_number_Set() const;
    bool is_previous_step_number_Valid() const;

    QString getStepTypeId() const;
    void setStepTypeId(const QString &step_type_id);
    bool is_step_type_id_Set() const;
    bool is_step_type_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExternalInfo m_external_info;
    bool m_external_info_isSet;
    bool m_external_info_isValid;

    QString m_external_project_id;
    bool m_external_project_id_isSet;
    bool m_external_project_id_isValid;

    qint32 m_previous_step_number;
    bool m_previous_step_number_isSet;
    bool m_previous_step_number_isValid;

    QString m_step_type_id;
    bool m_step_type_id_isSet;
    bool m_step_type_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddJobToProcessDTO)

#endif // OAIAddJobToProcessDTO_H
