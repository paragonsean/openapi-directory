/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProviderPersonDTO.h
 *
 * 
 */

#ifndef OAIProviderPersonDTO_H
#define OAIProviderPersonDTO_H

#include <QJsonObject>

#include "OAICustomFieldDTO.h"
#include "OAIPersonContactDTO.h"
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPersonContactDTO;
class OAICustomFieldDTO;

class OAIProviderPersonDTO : public OAIObject {
public:
    OAIProviderPersonDTO();
    OAIProviderPersonDTO(QString json);
    ~OAIProviderPersonDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    OAIPersonContactDTO getContact() const;
    void setContact(const OAIPersonContactDTO &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    QList<OAICustomFieldDTO> getCustomFields() const;
    void setCustomFields(const QList<OAICustomFieldDTO> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getGender() const;
    void setGender(const QString &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QSet<qint64> getMotherTonguesIds() const;
    void setMotherTonguesIds(const QSet<qint64> &mother_tongues_ids);
    bool is_mother_tongues_ids_Set() const;
    bool is_mother_tongues_ids_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getPositionId() const;
    void setPositionId(const qint64 &position_id);
    bool is_position_id_Set() const;
    bool is_position_id_Valid() const;

    qint64 getProviderId() const;
    void setProviderId(const qint64 &provider_id);
    bool is_provider_id_Set() const;
    bool is_provider_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    OAIPersonContactDTO m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    QList<OAICustomFieldDTO> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QSet<qint64> m_mother_tongues_ids;
    bool m_mother_tongues_ids_isSet;
    bool m_mother_tongues_ids_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_position_id;
    bool m_position_id_isSet;
    bool m_position_id_isValid;

    qint64 m_provider_id;
    bool m_provider_id_isSet;
    bool m_provider_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProviderPersonDTO)

#endif // OAIProviderPersonDTO_H
