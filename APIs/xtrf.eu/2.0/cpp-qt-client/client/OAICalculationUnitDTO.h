/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICalculationUnitDTO.h
 *
 * 
 */

#ifndef OAICalculationUnitDTO_H
#define OAICalculationUnitDTO_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICalculationUnitDTO : public OAIObject {
public:
    OAICalculationUnitDTO();
    OAICalculationUnitDTO(QString json);
    ~OAICalculationUnitDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    bool isCanBeUsedInCatAnalysis() const;
    void setCanBeUsedInCatAnalysis(const bool &can_be_used_in_cat_analysis);
    bool is_can_be_used_in_cat_analysis_Set() const;
    bool is_can_be_used_in_cat_analysis_Valid() const;

    QString getCatQuantityConversionExpression() const;
    void setCatQuantityConversionExpression(const QString &cat_quantity_conversion_expression);
    bool is_cat_quantity_conversion_expression_Set() const;
    bool is_cat_quantity_conversion_expression_Valid() const;

    bool isRDefault() const;
    void setRDefault(const bool &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    double getExchangeRatio() const;
    void setExchangeRatio(const double &exchange_ratio);
    bool is_exchange_ratio_Set() const;
    bool is_exchange_ratio_Valid() const;

    QString getFileStatsConversionExpression() const;
    void setFileStatsConversionExpression(const QString &file_stats_conversion_expression);
    bool is_file_stats_conversion_expression_Set() const;
    bool is_file_stats_conversion_expression_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<qint64> getJobTypeIds() const;
    void setJobTypeIds(const QList<qint64> &job_type_ids);
    bool is_job_type_ids_Set() const;
    bool is_job_type_ids_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPreferred() const;
    void setPreferred(const bool &preferred);
    bool is_preferred_Set() const;
    bool is_preferred_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    QString getTimeToQuantityConversionExpression() const;
    void setTimeToQuantityConversionExpression(const QString &time_to_quantity_conversion_expression);
    bool is_time_to_quantity_conversion_expression_Set() const;
    bool is_time_to_quantity_conversion_expression_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    bool m_can_be_used_in_cat_analysis;
    bool m_can_be_used_in_cat_analysis_isSet;
    bool m_can_be_used_in_cat_analysis_isValid;

    QString m_cat_quantity_conversion_expression;
    bool m_cat_quantity_conversion_expression_isSet;
    bool m_cat_quantity_conversion_expression_isValid;

    bool m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    double m_exchange_ratio;
    bool m_exchange_ratio_isSet;
    bool m_exchange_ratio_isValid;

    QString m_file_stats_conversion_expression;
    bool m_file_stats_conversion_expression_isSet;
    bool m_file_stats_conversion_expression_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<qint64> m_job_type_ids;
    bool m_job_type_ids_isSet;
    bool m_job_type_ids_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_preferred;
    bool m_preferred_isSet;
    bool m_preferred_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;

    QString m_time_to_quantity_conversion_expression;
    bool m_time_to_quantity_conversion_expression_isSet;
    bool m_time_to_quantity_conversion_expression_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICalculationUnitDTO)

#endif // OAICalculationUnitDTO_H
