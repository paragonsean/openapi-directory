/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportResultDTO.h
 *
 * 
 */

#ifndef OAIImportResultDTO_H
#define OAIImportResultDTO_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportResultDTO : public OAIObject {
public:
    OAIImportResultDTO();
    OAIImportResultDTO(QString json);
    ~OAIImportResultDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentSystemVersion() const;
    void setCurrentSystemVersion(const QString &current_system_version);
    bool is_current_system_version_Set() const;
    bool is_current_system_version_Valid() const;

    QList<QString> getImportedReportsNames() const;
    void setImportedReportsNames(const QList<QString> &imported_reports_names);
    bool is_imported_reports_names_Set() const;
    bool is_imported_reports_names_Valid() const;

    QList<QString> getInvalidReportsNames() const;
    void setInvalidReportsNames(const QList<QString> &invalid_reports_names);
    bool is_invalid_reports_names_Set() const;
    bool is_invalid_reports_names_Valid() const;

    QString getTargetSystemVersion() const;
    void setTargetSystemVersion(const QString &target_system_version);
    bool is_target_system_version_Set() const;
    bool is_target_system_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_system_version;
    bool m_current_system_version_isSet;
    bool m_current_system_version_isValid;

    QList<QString> m_imported_reports_names;
    bool m_imported_reports_names_isSet;
    bool m_imported_reports_names_isValid;

    QList<QString> m_invalid_reports_names;
    bool m_invalid_reports_names_isSet;
    bool m_invalid_reports_names_isValid;

    QString m_target_system_version;
    bool m_target_system_version_isSet;
    bool m_target_system_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportResultDTO)

#endif // OAIImportResultDTO_H
