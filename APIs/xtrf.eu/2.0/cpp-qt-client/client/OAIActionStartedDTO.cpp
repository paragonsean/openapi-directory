/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionStartedDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionStartedDTO::OAIActionStartedDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionStartedDTO::OAIActionStartedDTO() {
    this->initializeModel();
}

OAIActionStartedDTO::~OAIActionStartedDTO() {}

void OAIActionStartedDTO::initializeModel() {

    m_action_id_isSet = false;
    m_action_id_isValid = false;

    m_result_url_isSet = false;
    m_result_url_isValid = false;

    m_status_url_isSet = false;
    m_status_url_isValid = false;
}

void OAIActionStartedDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionStartedDTO::fromJsonObject(QJsonObject json) {

    m_action_id_isValid = ::OpenAPI::fromJsonValue(m_action_id, json[QString("actionId")]);
    m_action_id_isSet = !json[QString("actionId")].isNull() && m_action_id_isValid;

    m_result_url_isValid = ::OpenAPI::fromJsonValue(m_result_url, json[QString("resultUrl")]);
    m_result_url_isSet = !json[QString("resultUrl")].isNull() && m_result_url_isValid;

    m_status_url_isValid = ::OpenAPI::fromJsonValue(m_status_url, json[QString("statusUrl")]);
    m_status_url_isSet = !json[QString("statusUrl")].isNull() && m_status_url_isValid;
}

QString OAIActionStartedDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionStartedDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_action_id_isSet) {
        obj.insert(QString("actionId"), ::OpenAPI::toJsonValue(m_action_id));
    }
    if (m_result_url_isSet) {
        obj.insert(QString("resultUrl"), ::OpenAPI::toJsonValue(m_result_url));
    }
    if (m_status_url_isSet) {
        obj.insert(QString("statusUrl"), ::OpenAPI::toJsonValue(m_status_url));
    }
    return obj;
}

QString OAIActionStartedDTO::getActionId() const {
    return m_action_id;
}
void OAIActionStartedDTO::setActionId(const QString &action_id) {
    m_action_id = action_id;
    m_action_id_isSet = true;
}

bool OAIActionStartedDTO::is_action_id_Set() const{
    return m_action_id_isSet;
}

bool OAIActionStartedDTO::is_action_id_Valid() const{
    return m_action_id_isValid;
}

QString OAIActionStartedDTO::getResultUrl() const {
    return m_result_url;
}
void OAIActionStartedDTO::setResultUrl(const QString &result_url) {
    m_result_url = result_url;
    m_result_url_isSet = true;
}

bool OAIActionStartedDTO::is_result_url_Set() const{
    return m_result_url_isSet;
}

bool OAIActionStartedDTO::is_result_url_Valid() const{
    return m_result_url_isValid;
}

QString OAIActionStartedDTO::getStatusUrl() const {
    return m_status_url;
}
void OAIActionStartedDTO::setStatusUrl(const QString &status_url) {
    m_status_url = status_url;
    m_status_url_isSet = true;
}

bool OAIActionStartedDTO::is_status_url_Set() const{
    return m_status_url_isSet;
}

bool OAIActionStartedDTO::is_status_url_Valid() const{
    return m_status_url_isValid;
}

bool OAIActionStartedDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionStartedDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
