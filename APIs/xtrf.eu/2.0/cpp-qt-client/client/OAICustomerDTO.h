/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerDTO.h
 *
 * 
 */

#ifndef OAICustomerDTO_H
#define OAICustomerDTO_H

#include <QJsonObject>

#include "OAIAddressDTO.h"
#include "OAIContactDTO.h"
#include "OAICustomFieldDTO.h"
#include "OAICustomerAccountingDTO.h"
#include "OAICustomerPersonDTO.h"
#include "OAICustomerResponsiblePersonsDTO.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomerAccountingDTO;
class OAIAddressDTO;
class OAIContactDTO;
class OAICustomFieldDTO;
class OAICustomerPersonDTO;
class OAICustomerResponsiblePersonsDTO;

class OAICustomerDTO : public OAIObject {
public:
    OAICustomerDTO();
    OAICustomerDTO(QString json);
    ~OAICustomerDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountOnCustomerServer() const;
    void setAccountOnCustomerServer(const QString &account_on_customer_server);
    bool is_account_on_customer_server_Set() const;
    bool is_account_on_customer_server_Valid() const;

    OAICustomerAccountingDTO getAccounting() const;
    void setAccounting(const OAICustomerAccountingDTO &accounting);
    bool is_accounting_Set() const;
    bool is_accounting_Valid() const;

    OAIAddressDTO getBillingAddress() const;
    void setBillingAddress(const OAIAddressDTO &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    qint64 getBranchId() const;
    void setBranchId(const qint64 &branch_id);
    bool is_branch_id_Set() const;
    bool is_branch_id_Valid() const;

    QList<qint64> getCategoriesIds() const;
    void setCategoriesIds(const QList<qint64> &categories_ids);
    bool is_categories_ids_Set() const;
    bool is_categories_ids_Valid() const;

    QDateTime getClientFirstProjectDate() const;
    void setClientFirstProjectDate(const QDateTime &client_first_project_date);
    bool is_client_first_project_date_Set() const;
    bool is_client_first_project_date_Valid() const;

    QDateTime getClientFirstQuoteDate() const;
    void setClientFirstQuoteDate(const QDateTime &client_first_quote_date);
    bool is_client_first_quote_date_Set() const;
    bool is_client_first_quote_date_Valid() const;

    QDateTime getClientLastProjectDate() const;
    void setClientLastProjectDate(const QDateTime &client_last_project_date);
    bool is_client_last_project_date_Set() const;
    bool is_client_last_project_date_Valid() const;

    QDateTime getClientLastQuoteDate() const;
    void setClientLastQuoteDate(const QDateTime &client_last_quote_date);
    bool is_client_last_quote_date_Set() const;
    bool is_client_last_quote_date_Valid() const;

    qint32 getClientNumberOfProjects() const;
    void setClientNumberOfProjects(const qint32 &client_number_of_projects);
    bool is_client_number_of_projects_Set() const;
    bool is_client_number_of_projects_Valid() const;

    qint32 getClientNumberOfQuotes() const;
    void setClientNumberOfQuotes(const qint32 &client_number_of_quotes);
    bool is_client_number_of_quotes_Set() const;
    bool is_client_number_of_quotes_Valid() const;

    OAIContactDTO getContact() const;
    void setContact(const OAIContactDTO &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    QString getContractNumber() const;
    void setContractNumber(const QString &contract_number);
    bool is_contract_number_Set() const;
    bool is_contract_number_Valid() const;

    OAIAddressDTO getCorrespondenceAddress() const;
    void setCorrespondenceAddress(const OAIAddressDTO &correspondence_address);
    bool is_correspondence_address_Set() const;
    bool is_correspondence_address_Valid() const;

    QList<OAICustomFieldDTO> getCustomFields() const;
    void setCustomFields(const QList<OAICustomFieldDTO> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIdNumber() const;
    void setIdNumber(const QString &id_number);
    bool is_id_number_Set() const;
    bool is_id_number_Valid() const;

    QList<qint64> getIndustriesIds() const;
    void setIndustriesIds(const QList<qint64> &industries_ids);
    bool is_industries_ids_Set() const;
    bool is_industries_ids_Valid() const;

    qint64 getLeadSourceId() const;
    void setLeadSourceId(const qint64 &lead_source_id);
    bool is_lead_source_id_Set() const;
    bool is_lead_source_id_Valid() const;

    bool isLimitAccessToPeopleResponsible() const;
    void setLimitAccessToPeopleResponsible(const bool &limit_access_to_people_responsible);
    bool is_limit_access_to_people_responsible_Set() const;
    bool is_limit_access_to_people_responsible_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QList<OAICustomerPersonDTO> getPersons() const;
    void setPersons(const QList<OAICustomerPersonDTO> &persons);
    bool is_persons_Set() const;
    bool is_persons_Valid() const;

    OAICustomerResponsiblePersonsDTO getResponsiblePersons() const;
    void setResponsiblePersons(const OAICustomerResponsiblePersonsDTO &responsible_persons);
    bool is_responsible_persons_Set() const;
    bool is_responsible_persons_Valid() const;

    QString getSalesNotes() const;
    void setSalesNotes(const QString &sales_notes);
    bool is_sales_notes_Set() const;
    bool is_sales_notes_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_on_customer_server;
    bool m_account_on_customer_server_isSet;
    bool m_account_on_customer_server_isValid;

    OAICustomerAccountingDTO m_accounting;
    bool m_accounting_isSet;
    bool m_accounting_isValid;

    OAIAddressDTO m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    qint64 m_branch_id;
    bool m_branch_id_isSet;
    bool m_branch_id_isValid;

    QList<qint64> m_categories_ids;
    bool m_categories_ids_isSet;
    bool m_categories_ids_isValid;

    QDateTime m_client_first_project_date;
    bool m_client_first_project_date_isSet;
    bool m_client_first_project_date_isValid;

    QDateTime m_client_first_quote_date;
    bool m_client_first_quote_date_isSet;
    bool m_client_first_quote_date_isValid;

    QDateTime m_client_last_project_date;
    bool m_client_last_project_date_isSet;
    bool m_client_last_project_date_isValid;

    QDateTime m_client_last_quote_date;
    bool m_client_last_quote_date_isSet;
    bool m_client_last_quote_date_isValid;

    qint32 m_client_number_of_projects;
    bool m_client_number_of_projects_isSet;
    bool m_client_number_of_projects_isValid;

    qint32 m_client_number_of_quotes;
    bool m_client_number_of_quotes_isSet;
    bool m_client_number_of_quotes_isValid;

    OAIContactDTO m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    QString m_contract_number;
    bool m_contract_number_isSet;
    bool m_contract_number_isValid;

    OAIAddressDTO m_correspondence_address;
    bool m_correspondence_address_isSet;
    bool m_correspondence_address_isValid;

    QList<OAICustomFieldDTO> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_id_number;
    bool m_id_number_isSet;
    bool m_id_number_isValid;

    QList<qint64> m_industries_ids;
    bool m_industries_ids_isSet;
    bool m_industries_ids_isValid;

    qint64 m_lead_source_id;
    bool m_lead_source_id_isSet;
    bool m_lead_source_id_isValid;

    bool m_limit_access_to_people_responsible;
    bool m_limit_access_to_people_responsible_isSet;
    bool m_limit_access_to_people_responsible_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QList<OAICustomerPersonDTO> m_persons;
    bool m_persons_isSet;
    bool m_persons_isValid;

    OAICustomerResponsiblePersonsDTO m_responsible_persons;
    bool m_responsible_persons_isSet;
    bool m_responsible_persons_isValid;

    QString m_sales_notes;
    bool m_sales_notes_isSet;
    bool m_sales_notes_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerDTO)

#endif // OAICustomerDTO_H
