/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRemoteCATToolReferencesDto.h
 *
 * 
 */

#ifndef OAIRemoteCATToolReferencesDto_H
#define OAIRemoteCATToolReferencesDto_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRemoteCATToolReferencesDto : public OAIObject {
public:
    OAIRemoteCATToolReferencesDto();
    OAIRemoteCATToolReferencesDto(QString json);
    ~OAIRemoteCATToolReferencesDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCatResourceId() const;
    void setCatResourceId(const QString &cat_resource_id);
    bool is_cat_resource_id_Set() const;
    bool is_cat_resource_id_Valid() const;

    QString getCatToolDocumentId() const;
    void setCatToolDocumentId(const QString &cat_tool_document_id);
    bool is_cat_tool_document_id_Set() const;
    bool is_cat_tool_document_id_Valid() const;

    QString getEditorUrl() const;
    void setEditorUrl(const QString &editor_url);
    bool is_editor_url_Set() const;
    bool is_editor_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cat_resource_id;
    bool m_cat_resource_id_isSet;
    bool m_cat_resource_id_isValid;

    QString m_cat_tool_document_id;
    bool m_cat_tool_document_id_isSet;
    bool m_cat_tool_document_id_isValid;

    QString m_editor_url;
    bool m_editor_url_isSet;
    bool m_editor_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRemoteCATToolReferencesDto)

#endif // OAIRemoteCATToolReferencesDto_H
