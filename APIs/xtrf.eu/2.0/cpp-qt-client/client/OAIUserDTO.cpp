/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserDTO::OAIUserDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserDTO::OAIUserDTO() {
    this->initializeModel();
}

OAIUserDTO::~OAIUserDTO() {}

void OAIUserDTO::initializeModel() {

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_login_isSet = false;
    m_login_isValid = false;

    m_mobile_phone_isSet = false;
    m_mobile_phone_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_position_name_isSet = false;
    m_position_name_isValid = false;

    m_time_zone_id_isSet = false;
    m_time_zone_id_isValid = false;

    m_user_group_name_isSet = false;
    m_user_group_name_isValid = false;
}

void OAIUserDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserDTO::fromJsonObject(QJsonObject json) {

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("customFields")]);
    m_custom_fields_isSet = !json[QString("customFields")].isNull() && m_custom_fields_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_login_isValid = ::OpenAPI::fromJsonValue(m_login, json[QString("login")]);
    m_login_isSet = !json[QString("login")].isNull() && m_login_isValid;

    m_mobile_phone_isValid = ::OpenAPI::fromJsonValue(m_mobile_phone, json[QString("mobilePhone")]);
    m_mobile_phone_isSet = !json[QString("mobilePhone")].isNull() && m_mobile_phone_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_position_name_isValid = ::OpenAPI::fromJsonValue(m_position_name, json[QString("positionName")]);
    m_position_name_isSet = !json[QString("positionName")].isNull() && m_position_name_isValid;

    m_time_zone_id_isValid = ::OpenAPI::fromJsonValue(m_time_zone_id, json[QString("timeZoneId")]);
    m_time_zone_id_isSet = !json[QString("timeZoneId")].isNull() && m_time_zone_id_isValid;

    m_user_group_name_isValid = ::OpenAPI::fromJsonValue(m_user_group_name, json[QString("userGroupName")]);
    m_user_group_name_isSet = !json[QString("userGroupName")].isNull() && m_user_group_name_isValid;
}

QString OAIUserDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("customFields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_login_isSet) {
        obj.insert(QString("login"), ::OpenAPI::toJsonValue(m_login));
    }
    if (m_mobile_phone_isSet) {
        obj.insert(QString("mobilePhone"), ::OpenAPI::toJsonValue(m_mobile_phone));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_position_name_isSet) {
        obj.insert(QString("positionName"), ::OpenAPI::toJsonValue(m_position_name));
    }
    if (m_time_zone_id_isSet) {
        obj.insert(QString("timeZoneId"), ::OpenAPI::toJsonValue(m_time_zone_id));
    }
    if (m_user_group_name_isSet) {
        obj.insert(QString("userGroupName"), ::OpenAPI::toJsonValue(m_user_group_name));
    }
    return obj;
}

QList<OAICustomFieldDTO> OAIUserDTO::getCustomFields() const {
    return m_custom_fields;
}
void OAIUserDTO::setCustomFields(const QList<OAICustomFieldDTO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIUserDTO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIUserDTO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIUserDTO::getEmail() const {
    return m_email;
}
void OAIUserDTO::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIUserDTO::is_email_Set() const{
    return m_email_isSet;
}

bool OAIUserDTO::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIUserDTO::getFirstName() const {
    return m_first_name;
}
void OAIUserDTO::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUserDTO::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUserDTO::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIUserDTO::getGender() const {
    return m_gender;
}
void OAIUserDTO::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIUserDTO::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIUserDTO::is_gender_Valid() const{
    return m_gender_isValid;
}

qint64 OAIUserDTO::getId() const {
    return m_id;
}
void OAIUserDTO::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUserDTO::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUserDTO::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIUserDTO::getLastName() const {
    return m_last_name;
}
void OAIUserDTO::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUserDTO::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUserDTO::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIUserDTO::getLogin() const {
    return m_login;
}
void OAIUserDTO::setLogin(const QString &login) {
    m_login = login;
    m_login_isSet = true;
}

bool OAIUserDTO::is_login_Set() const{
    return m_login_isSet;
}

bool OAIUserDTO::is_login_Valid() const{
    return m_login_isValid;
}

QString OAIUserDTO::getMobilePhone() const {
    return m_mobile_phone;
}
void OAIUserDTO::setMobilePhone(const QString &mobile_phone) {
    m_mobile_phone = mobile_phone;
    m_mobile_phone_isSet = true;
}

bool OAIUserDTO::is_mobile_phone_Set() const{
    return m_mobile_phone_isSet;
}

bool OAIUserDTO::is_mobile_phone_Valid() const{
    return m_mobile_phone_isValid;
}

QString OAIUserDTO::getPhone() const {
    return m_phone;
}
void OAIUserDTO::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIUserDTO::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIUserDTO::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAIUserDTO::getPositionName() const {
    return m_position_name;
}
void OAIUserDTO::setPositionName(const QString &position_name) {
    m_position_name = position_name;
    m_position_name_isSet = true;
}

bool OAIUserDTO::is_position_name_Set() const{
    return m_position_name_isSet;
}

bool OAIUserDTO::is_position_name_Valid() const{
    return m_position_name_isValid;
}

QString OAIUserDTO::getTimeZoneId() const {
    return m_time_zone_id;
}
void OAIUserDTO::setTimeZoneId(const QString &time_zone_id) {
    m_time_zone_id = time_zone_id;
    m_time_zone_id_isSet = true;
}

bool OAIUserDTO::is_time_zone_id_Set() const{
    return m_time_zone_id_isSet;
}

bool OAIUserDTO::is_time_zone_id_Valid() const{
    return m_time_zone_id_isValid;
}

QString OAIUserDTO::getUserGroupName() const {
    return m_user_group_name;
}
void OAIUserDTO::setUserGroupName(const QString &user_group_name) {
    m_user_group_name = user_group_name;
    m_user_group_name_isSet = true;
}

bool OAIUserDTO::is_user_group_name_Set() const{
    return m_user_group_name_isSet;
}

bool OAIUserDTO::is_user_group_name_Valid() const{
    return m_user_group_name_isValid;
}

bool OAIUserDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_login_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
