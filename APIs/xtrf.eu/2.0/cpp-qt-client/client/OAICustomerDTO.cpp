/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerDTO::OAICustomerDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerDTO::OAICustomerDTO() {
    this->initializeModel();
}

OAICustomerDTO::~OAICustomerDTO() {}

void OAICustomerDTO::initializeModel() {

    m_account_on_customer_server_isSet = false;
    m_account_on_customer_server_isValid = false;

    m_accounting_isSet = false;
    m_accounting_isValid = false;

    m_billing_address_isSet = false;
    m_billing_address_isValid = false;

    m_branch_id_isSet = false;
    m_branch_id_isValid = false;

    m_categories_ids_isSet = false;
    m_categories_ids_isValid = false;

    m_client_first_project_date_isSet = false;
    m_client_first_project_date_isValid = false;

    m_client_first_quote_date_isSet = false;
    m_client_first_quote_date_isValid = false;

    m_client_last_project_date_isSet = false;
    m_client_last_project_date_isValid = false;

    m_client_last_quote_date_isSet = false;
    m_client_last_quote_date_isValid = false;

    m_client_number_of_projects_isSet = false;
    m_client_number_of_projects_isValid = false;

    m_client_number_of_quotes_isSet = false;
    m_client_number_of_quotes_isValid = false;

    m_contact_isSet = false;
    m_contact_isValid = false;

    m_contract_number_isSet = false;
    m_contract_number_isValid = false;

    m_correspondence_address_isSet = false;
    m_correspondence_address_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_id_number_isSet = false;
    m_id_number_isValid = false;

    m_industries_ids_isSet = false;
    m_industries_ids_isValid = false;

    m_lead_source_id_isSet = false;
    m_lead_source_id_isValid = false;

    m_limit_access_to_people_responsible_isSet = false;
    m_limit_access_to_people_responsible_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_persons_isSet = false;
    m_persons_isValid = false;

    m_responsible_persons_isSet = false;
    m_responsible_persons_isValid = false;

    m_sales_notes_isSet = false;
    m_sales_notes_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAICustomerDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerDTO::fromJsonObject(QJsonObject json) {

    m_account_on_customer_server_isValid = ::OpenAPI::fromJsonValue(m_account_on_customer_server, json[QString("accountOnCustomerServer")]);
    m_account_on_customer_server_isSet = !json[QString("accountOnCustomerServer")].isNull() && m_account_on_customer_server_isValid;

    m_accounting_isValid = ::OpenAPI::fromJsonValue(m_accounting, json[QString("accounting")]);
    m_accounting_isSet = !json[QString("accounting")].isNull() && m_accounting_isValid;

    m_billing_address_isValid = ::OpenAPI::fromJsonValue(m_billing_address, json[QString("billingAddress")]);
    m_billing_address_isSet = !json[QString("billingAddress")].isNull() && m_billing_address_isValid;

    m_branch_id_isValid = ::OpenAPI::fromJsonValue(m_branch_id, json[QString("branchId")]);
    m_branch_id_isSet = !json[QString("branchId")].isNull() && m_branch_id_isValid;

    m_categories_ids_isValid = ::OpenAPI::fromJsonValue(m_categories_ids, json[QString("categoriesIds")]);
    m_categories_ids_isSet = !json[QString("categoriesIds")].isNull() && m_categories_ids_isValid;

    m_client_first_project_date_isValid = ::OpenAPI::fromJsonValue(m_client_first_project_date, json[QString("clientFirstProjectDate")]);
    m_client_first_project_date_isSet = !json[QString("clientFirstProjectDate")].isNull() && m_client_first_project_date_isValid;

    m_client_first_quote_date_isValid = ::OpenAPI::fromJsonValue(m_client_first_quote_date, json[QString("clientFirstQuoteDate")]);
    m_client_first_quote_date_isSet = !json[QString("clientFirstQuoteDate")].isNull() && m_client_first_quote_date_isValid;

    m_client_last_project_date_isValid = ::OpenAPI::fromJsonValue(m_client_last_project_date, json[QString("clientLastProjectDate")]);
    m_client_last_project_date_isSet = !json[QString("clientLastProjectDate")].isNull() && m_client_last_project_date_isValid;

    m_client_last_quote_date_isValid = ::OpenAPI::fromJsonValue(m_client_last_quote_date, json[QString("clientLastQuoteDate")]);
    m_client_last_quote_date_isSet = !json[QString("clientLastQuoteDate")].isNull() && m_client_last_quote_date_isValid;

    m_client_number_of_projects_isValid = ::OpenAPI::fromJsonValue(m_client_number_of_projects, json[QString("clientNumberOfProjects")]);
    m_client_number_of_projects_isSet = !json[QString("clientNumberOfProjects")].isNull() && m_client_number_of_projects_isValid;

    m_client_number_of_quotes_isValid = ::OpenAPI::fromJsonValue(m_client_number_of_quotes, json[QString("clientNumberOfQuotes")]);
    m_client_number_of_quotes_isSet = !json[QString("clientNumberOfQuotes")].isNull() && m_client_number_of_quotes_isValid;

    m_contact_isValid = ::OpenAPI::fromJsonValue(m_contact, json[QString("contact")]);
    m_contact_isSet = !json[QString("contact")].isNull() && m_contact_isValid;

    m_contract_number_isValid = ::OpenAPI::fromJsonValue(m_contract_number, json[QString("contractNumber")]);
    m_contract_number_isSet = !json[QString("contractNumber")].isNull() && m_contract_number_isValid;

    m_correspondence_address_isValid = ::OpenAPI::fromJsonValue(m_correspondence_address, json[QString("correspondenceAddress")]);
    m_correspondence_address_isSet = !json[QString("correspondenceAddress")].isNull() && m_correspondence_address_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("customFields")]);
    m_custom_fields_isSet = !json[QString("customFields")].isNull() && m_custom_fields_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_id_number_isValid = ::OpenAPI::fromJsonValue(m_id_number, json[QString("idNumber")]);
    m_id_number_isSet = !json[QString("idNumber")].isNull() && m_id_number_isValid;

    m_industries_ids_isValid = ::OpenAPI::fromJsonValue(m_industries_ids, json[QString("industriesIds")]);
    m_industries_ids_isSet = !json[QString("industriesIds")].isNull() && m_industries_ids_isValid;

    m_lead_source_id_isValid = ::OpenAPI::fromJsonValue(m_lead_source_id, json[QString("leadSourceId")]);
    m_lead_source_id_isSet = !json[QString("leadSourceId")].isNull() && m_lead_source_id_isValid;

    m_limit_access_to_people_responsible_isValid = ::OpenAPI::fromJsonValue(m_limit_access_to_people_responsible, json[QString("limitAccessToPeopleResponsible")]);
    m_limit_access_to_people_responsible_isSet = !json[QString("limitAccessToPeopleResponsible")].isNull() && m_limit_access_to_people_responsible_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_persons_isValid = ::OpenAPI::fromJsonValue(m_persons, json[QString("persons")]);
    m_persons_isSet = !json[QString("persons")].isNull() && m_persons_isValid;

    m_responsible_persons_isValid = ::OpenAPI::fromJsonValue(m_responsible_persons, json[QString("responsiblePersons")]);
    m_responsible_persons_isSet = !json[QString("responsiblePersons")].isNull() && m_responsible_persons_isValid;

    m_sales_notes_isValid = ::OpenAPI::fromJsonValue(m_sales_notes, json[QString("salesNotes")]);
    m_sales_notes_isSet = !json[QString("salesNotes")].isNull() && m_sales_notes_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAICustomerDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_account_on_customer_server_isSet) {
        obj.insert(QString("accountOnCustomerServer"), ::OpenAPI::toJsonValue(m_account_on_customer_server));
    }
    if (m_accounting.isSet()) {
        obj.insert(QString("accounting"), ::OpenAPI::toJsonValue(m_accounting));
    }
    if (m_billing_address.isSet()) {
        obj.insert(QString("billingAddress"), ::OpenAPI::toJsonValue(m_billing_address));
    }
    if (m_branch_id_isSet) {
        obj.insert(QString("branchId"), ::OpenAPI::toJsonValue(m_branch_id));
    }
    if (m_categories_ids.size() > 0) {
        obj.insert(QString("categoriesIds"), ::OpenAPI::toJsonValue(m_categories_ids));
    }
    if (m_client_first_project_date_isSet) {
        obj.insert(QString("clientFirstProjectDate"), ::OpenAPI::toJsonValue(m_client_first_project_date));
    }
    if (m_client_first_quote_date_isSet) {
        obj.insert(QString("clientFirstQuoteDate"), ::OpenAPI::toJsonValue(m_client_first_quote_date));
    }
    if (m_client_last_project_date_isSet) {
        obj.insert(QString("clientLastProjectDate"), ::OpenAPI::toJsonValue(m_client_last_project_date));
    }
    if (m_client_last_quote_date_isSet) {
        obj.insert(QString("clientLastQuoteDate"), ::OpenAPI::toJsonValue(m_client_last_quote_date));
    }
    if (m_client_number_of_projects_isSet) {
        obj.insert(QString("clientNumberOfProjects"), ::OpenAPI::toJsonValue(m_client_number_of_projects));
    }
    if (m_client_number_of_quotes_isSet) {
        obj.insert(QString("clientNumberOfQuotes"), ::OpenAPI::toJsonValue(m_client_number_of_quotes));
    }
    if (m_contact.isSet()) {
        obj.insert(QString("contact"), ::OpenAPI::toJsonValue(m_contact));
    }
    if (m_contract_number_isSet) {
        obj.insert(QString("contractNumber"), ::OpenAPI::toJsonValue(m_contract_number));
    }
    if (m_correspondence_address.isSet()) {
        obj.insert(QString("correspondenceAddress"), ::OpenAPI::toJsonValue(m_correspondence_address));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("customFields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_id_number_isSet) {
        obj.insert(QString("idNumber"), ::OpenAPI::toJsonValue(m_id_number));
    }
    if (m_industries_ids.size() > 0) {
        obj.insert(QString("industriesIds"), ::OpenAPI::toJsonValue(m_industries_ids));
    }
    if (m_lead_source_id_isSet) {
        obj.insert(QString("leadSourceId"), ::OpenAPI::toJsonValue(m_lead_source_id));
    }
    if (m_limit_access_to_people_responsible_isSet) {
        obj.insert(QString("limitAccessToPeopleResponsible"), ::OpenAPI::toJsonValue(m_limit_access_to_people_responsible));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_persons.size() > 0) {
        obj.insert(QString("persons"), ::OpenAPI::toJsonValue(m_persons));
    }
    if (m_responsible_persons.isSet()) {
        obj.insert(QString("responsiblePersons"), ::OpenAPI::toJsonValue(m_responsible_persons));
    }
    if (m_sales_notes_isSet) {
        obj.insert(QString("salesNotes"), ::OpenAPI::toJsonValue(m_sales_notes));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAICustomerDTO::getAccountOnCustomerServer() const {
    return m_account_on_customer_server;
}
void OAICustomerDTO::setAccountOnCustomerServer(const QString &account_on_customer_server) {
    m_account_on_customer_server = account_on_customer_server;
    m_account_on_customer_server_isSet = true;
}

bool OAICustomerDTO::is_account_on_customer_server_Set() const{
    return m_account_on_customer_server_isSet;
}

bool OAICustomerDTO::is_account_on_customer_server_Valid() const{
    return m_account_on_customer_server_isValid;
}

OAICustomerAccountingDTO OAICustomerDTO::getAccounting() const {
    return m_accounting;
}
void OAICustomerDTO::setAccounting(const OAICustomerAccountingDTO &accounting) {
    m_accounting = accounting;
    m_accounting_isSet = true;
}

bool OAICustomerDTO::is_accounting_Set() const{
    return m_accounting_isSet;
}

bool OAICustomerDTO::is_accounting_Valid() const{
    return m_accounting_isValid;
}

OAIAddressDTO OAICustomerDTO::getBillingAddress() const {
    return m_billing_address;
}
void OAICustomerDTO::setBillingAddress(const OAIAddressDTO &billing_address) {
    m_billing_address = billing_address;
    m_billing_address_isSet = true;
}

bool OAICustomerDTO::is_billing_address_Set() const{
    return m_billing_address_isSet;
}

bool OAICustomerDTO::is_billing_address_Valid() const{
    return m_billing_address_isValid;
}

qint64 OAICustomerDTO::getBranchId() const {
    return m_branch_id;
}
void OAICustomerDTO::setBranchId(const qint64 &branch_id) {
    m_branch_id = branch_id;
    m_branch_id_isSet = true;
}

bool OAICustomerDTO::is_branch_id_Set() const{
    return m_branch_id_isSet;
}

bool OAICustomerDTO::is_branch_id_Valid() const{
    return m_branch_id_isValid;
}

QList<qint64> OAICustomerDTO::getCategoriesIds() const {
    return m_categories_ids;
}
void OAICustomerDTO::setCategoriesIds(const QList<qint64> &categories_ids) {
    m_categories_ids = categories_ids;
    m_categories_ids_isSet = true;
}

bool OAICustomerDTO::is_categories_ids_Set() const{
    return m_categories_ids_isSet;
}

bool OAICustomerDTO::is_categories_ids_Valid() const{
    return m_categories_ids_isValid;
}

QDateTime OAICustomerDTO::getClientFirstProjectDate() const {
    return m_client_first_project_date;
}
void OAICustomerDTO::setClientFirstProjectDate(const QDateTime &client_first_project_date) {
    m_client_first_project_date = client_first_project_date;
    m_client_first_project_date_isSet = true;
}

bool OAICustomerDTO::is_client_first_project_date_Set() const{
    return m_client_first_project_date_isSet;
}

bool OAICustomerDTO::is_client_first_project_date_Valid() const{
    return m_client_first_project_date_isValid;
}

QDateTime OAICustomerDTO::getClientFirstQuoteDate() const {
    return m_client_first_quote_date;
}
void OAICustomerDTO::setClientFirstQuoteDate(const QDateTime &client_first_quote_date) {
    m_client_first_quote_date = client_first_quote_date;
    m_client_first_quote_date_isSet = true;
}

bool OAICustomerDTO::is_client_first_quote_date_Set() const{
    return m_client_first_quote_date_isSet;
}

bool OAICustomerDTO::is_client_first_quote_date_Valid() const{
    return m_client_first_quote_date_isValid;
}

QDateTime OAICustomerDTO::getClientLastProjectDate() const {
    return m_client_last_project_date;
}
void OAICustomerDTO::setClientLastProjectDate(const QDateTime &client_last_project_date) {
    m_client_last_project_date = client_last_project_date;
    m_client_last_project_date_isSet = true;
}

bool OAICustomerDTO::is_client_last_project_date_Set() const{
    return m_client_last_project_date_isSet;
}

bool OAICustomerDTO::is_client_last_project_date_Valid() const{
    return m_client_last_project_date_isValid;
}

QDateTime OAICustomerDTO::getClientLastQuoteDate() const {
    return m_client_last_quote_date;
}
void OAICustomerDTO::setClientLastQuoteDate(const QDateTime &client_last_quote_date) {
    m_client_last_quote_date = client_last_quote_date;
    m_client_last_quote_date_isSet = true;
}

bool OAICustomerDTO::is_client_last_quote_date_Set() const{
    return m_client_last_quote_date_isSet;
}

bool OAICustomerDTO::is_client_last_quote_date_Valid() const{
    return m_client_last_quote_date_isValid;
}

qint32 OAICustomerDTO::getClientNumberOfProjects() const {
    return m_client_number_of_projects;
}
void OAICustomerDTO::setClientNumberOfProjects(const qint32 &client_number_of_projects) {
    m_client_number_of_projects = client_number_of_projects;
    m_client_number_of_projects_isSet = true;
}

bool OAICustomerDTO::is_client_number_of_projects_Set() const{
    return m_client_number_of_projects_isSet;
}

bool OAICustomerDTO::is_client_number_of_projects_Valid() const{
    return m_client_number_of_projects_isValid;
}

qint32 OAICustomerDTO::getClientNumberOfQuotes() const {
    return m_client_number_of_quotes;
}
void OAICustomerDTO::setClientNumberOfQuotes(const qint32 &client_number_of_quotes) {
    m_client_number_of_quotes = client_number_of_quotes;
    m_client_number_of_quotes_isSet = true;
}

bool OAICustomerDTO::is_client_number_of_quotes_Set() const{
    return m_client_number_of_quotes_isSet;
}

bool OAICustomerDTO::is_client_number_of_quotes_Valid() const{
    return m_client_number_of_quotes_isValid;
}

OAIContactDTO OAICustomerDTO::getContact() const {
    return m_contact;
}
void OAICustomerDTO::setContact(const OAIContactDTO &contact) {
    m_contact = contact;
    m_contact_isSet = true;
}

bool OAICustomerDTO::is_contact_Set() const{
    return m_contact_isSet;
}

bool OAICustomerDTO::is_contact_Valid() const{
    return m_contact_isValid;
}

QString OAICustomerDTO::getContractNumber() const {
    return m_contract_number;
}
void OAICustomerDTO::setContractNumber(const QString &contract_number) {
    m_contract_number = contract_number;
    m_contract_number_isSet = true;
}

bool OAICustomerDTO::is_contract_number_Set() const{
    return m_contract_number_isSet;
}

bool OAICustomerDTO::is_contract_number_Valid() const{
    return m_contract_number_isValid;
}

OAIAddressDTO OAICustomerDTO::getCorrespondenceAddress() const {
    return m_correspondence_address;
}
void OAICustomerDTO::setCorrespondenceAddress(const OAIAddressDTO &correspondence_address) {
    m_correspondence_address = correspondence_address;
    m_correspondence_address_isSet = true;
}

bool OAICustomerDTO::is_correspondence_address_Set() const{
    return m_correspondence_address_isSet;
}

bool OAICustomerDTO::is_correspondence_address_Valid() const{
    return m_correspondence_address_isValid;
}

QList<OAICustomFieldDTO> OAICustomerDTO::getCustomFields() const {
    return m_custom_fields;
}
void OAICustomerDTO::setCustomFields(const QList<OAICustomFieldDTO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAICustomerDTO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAICustomerDTO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAICustomerDTO::getFullName() const {
    return m_full_name;
}
void OAICustomerDTO::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAICustomerDTO::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAICustomerDTO::is_full_name_Valid() const{
    return m_full_name_isValid;
}

qint64 OAICustomerDTO::getId() const {
    return m_id;
}
void OAICustomerDTO::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomerDTO::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomerDTO::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICustomerDTO::getIdNumber() const {
    return m_id_number;
}
void OAICustomerDTO::setIdNumber(const QString &id_number) {
    m_id_number = id_number;
    m_id_number_isSet = true;
}

bool OAICustomerDTO::is_id_number_Set() const{
    return m_id_number_isSet;
}

bool OAICustomerDTO::is_id_number_Valid() const{
    return m_id_number_isValid;
}

QList<qint64> OAICustomerDTO::getIndustriesIds() const {
    return m_industries_ids;
}
void OAICustomerDTO::setIndustriesIds(const QList<qint64> &industries_ids) {
    m_industries_ids = industries_ids;
    m_industries_ids_isSet = true;
}

bool OAICustomerDTO::is_industries_ids_Set() const{
    return m_industries_ids_isSet;
}

bool OAICustomerDTO::is_industries_ids_Valid() const{
    return m_industries_ids_isValid;
}

qint64 OAICustomerDTO::getLeadSourceId() const {
    return m_lead_source_id;
}
void OAICustomerDTO::setLeadSourceId(const qint64 &lead_source_id) {
    m_lead_source_id = lead_source_id;
    m_lead_source_id_isSet = true;
}

bool OAICustomerDTO::is_lead_source_id_Set() const{
    return m_lead_source_id_isSet;
}

bool OAICustomerDTO::is_lead_source_id_Valid() const{
    return m_lead_source_id_isValid;
}

bool OAICustomerDTO::isLimitAccessToPeopleResponsible() const {
    return m_limit_access_to_people_responsible;
}
void OAICustomerDTO::setLimitAccessToPeopleResponsible(const bool &limit_access_to_people_responsible) {
    m_limit_access_to_people_responsible = limit_access_to_people_responsible;
    m_limit_access_to_people_responsible_isSet = true;
}

bool OAICustomerDTO::is_limit_access_to_people_responsible_Set() const{
    return m_limit_access_to_people_responsible_isSet;
}

bool OAICustomerDTO::is_limit_access_to_people_responsible_Valid() const{
    return m_limit_access_to_people_responsible_isValid;
}

QString OAICustomerDTO::getName() const {
    return m_name;
}
void OAICustomerDTO::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICustomerDTO::is_name_Set() const{
    return m_name_isSet;
}

bool OAICustomerDTO::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICustomerDTO::getNotes() const {
    return m_notes;
}
void OAICustomerDTO::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAICustomerDTO::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAICustomerDTO::is_notes_Valid() const{
    return m_notes_isValid;
}

QList<OAICustomerPersonDTO> OAICustomerDTO::getPersons() const {
    return m_persons;
}
void OAICustomerDTO::setPersons(const QList<OAICustomerPersonDTO> &persons) {
    m_persons = persons;
    m_persons_isSet = true;
}

bool OAICustomerDTO::is_persons_Set() const{
    return m_persons_isSet;
}

bool OAICustomerDTO::is_persons_Valid() const{
    return m_persons_isValid;
}

OAICustomerResponsiblePersonsDTO OAICustomerDTO::getResponsiblePersons() const {
    return m_responsible_persons;
}
void OAICustomerDTO::setResponsiblePersons(const OAICustomerResponsiblePersonsDTO &responsible_persons) {
    m_responsible_persons = responsible_persons;
    m_responsible_persons_isSet = true;
}

bool OAICustomerDTO::is_responsible_persons_Set() const{
    return m_responsible_persons_isSet;
}

bool OAICustomerDTO::is_responsible_persons_Valid() const{
    return m_responsible_persons_isValid;
}

QString OAICustomerDTO::getSalesNotes() const {
    return m_sales_notes;
}
void OAICustomerDTO::setSalesNotes(const QString &sales_notes) {
    m_sales_notes = sales_notes;
    m_sales_notes_isSet = true;
}

bool OAICustomerDTO::is_sales_notes_Set() const{
    return m_sales_notes_isSet;
}

bool OAICustomerDTO::is_sales_notes_Valid() const{
    return m_sales_notes_isValid;
}

QString OAICustomerDTO::getStatus() const {
    return m_status;
}
void OAICustomerDTO::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICustomerDTO::is_status_Set() const{
    return m_status_isSet;
}

bool OAICustomerDTO::is_status_Valid() const{
    return m_status_isValid;
}

bool OAICustomerDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_on_customer_server_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accounting.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_categories_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_first_project_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_first_quote_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_last_project_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_last_quote_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_number_of_projects_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_number_of_quotes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_contract_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_correspondence_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_industries_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_access_to_people_responsible_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_persons.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_responsible_persons.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
