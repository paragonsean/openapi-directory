/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManyValuesPerTypeDTO.h
 *
 * 
 */

#ifndef OAIManyValuesPerTypeDTO_H
#define OAIManyValuesPerTypeDTO_H

#include <QJsonObject>

#include "OAICalculationUnitDTO.h"
#include "OAICategoryDTO.h"
#include "OAICountryDTO.h"
#include "OAICurrencyDTO.h"
#include "OAIIndustryDTO.h"
#include "OAIJobTypeDTO.h"
#include "OAILanguageDTO.h"
#include "OAILanguageSpecializationDTO.h"
#include "OAILeadSourceDTO.h"
#include "OAIPersonDepartmentDTO.h"
#include "OAIPersonPositionDTO.h"
#include "OAIProvinceDTO.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICalculationUnitDTO;
class OAICategoryDTO;
class OAICountryDTO;
class OAICurrencyDTO;
class OAIIndustryDTO;
class OAIJobTypeDTO;
class OAILanguageDTO;
class OAILeadSourceDTO;
class OAIPersonDepartmentDTO;
class OAIPersonPositionDTO;
class OAIProvinceDTO;
class OAILanguageSpecializationDTO;

class OAIManyValuesPerTypeDTO : public OAIObject {
public:
    OAIManyValuesPerTypeDTO();
    OAIManyValuesPerTypeDTO(QString json);
    ~OAIManyValuesPerTypeDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICalculationUnitDTO> getCalculationUnit() const;
    void setCalculationUnit(const QList<OAICalculationUnitDTO> &calculation_unit);
    bool is_calculation_unit_Set() const;
    bool is_calculation_unit_Valid() const;

    QList<OAICategoryDTO> getCategory() const;
    void setCategory(const QList<OAICategoryDTO> &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QList<OAICountryDTO> getCountry() const;
    void setCountry(const QList<OAICountryDTO> &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QList<OAICurrencyDTO> getCurrency() const;
    void setCurrency(const QList<OAICurrencyDTO> &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QList<OAIIndustryDTO> getIndustry() const;
    void setIndustry(const QList<OAIIndustryDTO> &industry);
    bool is_industry_Set() const;
    bool is_industry_Valid() const;

    QList<OAIJobTypeDTO> getJobType() const;
    void setJobType(const QList<OAIJobTypeDTO> &job_type);
    bool is_job_type_Set() const;
    bool is_job_type_Valid() const;

    QList<OAILanguageDTO> getLanguage() const;
    void setLanguage(const QList<OAILanguageDTO> &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QList<OAILeadSourceDTO> getLeadSource() const;
    void setLeadSource(const QList<OAILeadSourceDTO> &lead_source);
    bool is_lead_source_Set() const;
    bool is_lead_source_Valid() const;

    QList<OAIPersonDepartmentDTO> getPersonDepartment() const;
    void setPersonDepartment(const QList<OAIPersonDepartmentDTO> &person_department);
    bool is_person_department_Set() const;
    bool is_person_department_Valid() const;

    QList<OAIPersonPositionDTO> getPersonPosition() const;
    void setPersonPosition(const QList<OAIPersonPositionDTO> &person_position);
    bool is_person_position_Set() const;
    bool is_person_position_Valid() const;

    QList<OAIProvinceDTO> getProvince() const;
    void setProvince(const QList<OAIProvinceDTO> &province);
    bool is_province_Set() const;
    bool is_province_Valid() const;

    QList<OAILanguageSpecializationDTO> getSpecialization() const;
    void setSpecialization(const QList<OAILanguageSpecializationDTO> &specialization);
    bool is_specialization_Set() const;
    bool is_specialization_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICalculationUnitDTO> m_calculation_unit;
    bool m_calculation_unit_isSet;
    bool m_calculation_unit_isValid;

    QList<OAICategoryDTO> m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QList<OAICountryDTO> m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QList<OAICurrencyDTO> m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QList<OAIIndustryDTO> m_industry;
    bool m_industry_isSet;
    bool m_industry_isValid;

    QList<OAIJobTypeDTO> m_job_type;
    bool m_job_type_isSet;
    bool m_job_type_isValid;

    QList<OAILanguageDTO> m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QList<OAILeadSourceDTO> m_lead_source;
    bool m_lead_source_isSet;
    bool m_lead_source_isValid;

    QList<OAIPersonDepartmentDTO> m_person_department;
    bool m_person_department_isSet;
    bool m_person_department_isValid;

    QList<OAIPersonPositionDTO> m_person_position;
    bool m_person_position_isSet;
    bool m_person_position_isValid;

    QList<OAIProvinceDTO> m_province;
    bool m_province_isSet;
    bool m_province_isValid;

    QList<OAILanguageSpecializationDTO> m_specialization;
    bool m_specialization_isSet;
    bool m_specialization_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManyValuesPerTypeDTO)

#endif // OAIManyValuesPerTypeDTO_H
