/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIViewDetailsDTO.h
 *
 * 
 */

#ifndef OAIViewDetailsDTO_H
#define OAIViewDetailsDTO_H

#include <QJsonObject>

#include "OAIAccessDTO.h"
#include "OAIActionDTO.h"
#include "OAIFilterDTO.h"
#include "OAIViewDTO.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccessDTO;
class OAIActionDTO;
class OAIFilterDTO;
class OAIViewDTO;

class OAIViewDetailsDTO : public OAIObject {
public:
    OAIViewDetailsDTO();
    OAIViewDetailsDTO(QString json);
    ~OAIViewDetailsDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccessDTO getAccess() const;
    void setAccess(const OAIAccessDTO &access);
    bool is_access_Set() const;
    bool is_access_Valid() const;

    QList<OAIActionDTO> getActions() const;
    void setActions(const QList<OAIActionDTO> &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    OAIFilterDTO getFilter() const;
    void setFilter(const OAIFilterDTO &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIViewDTO getView() const;
    void setView(const OAIViewDTO &view);
    bool is_view_Set() const;
    bool is_view_Valid() const;

    qint64 getViewId() const;
    void setViewId(const qint64 &view_id);
    bool is_view_id_Set() const;
    bool is_view_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccessDTO m_access;
    bool m_access_isSet;
    bool m_access_isValid;

    QList<OAIActionDTO> m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;

    OAIFilterDTO m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIViewDTO m_view;
    bool m_view_isSet;
    bool m_view_isValid;

    qint64 m_view_id;
    bool m_view_id_isSet;
    bool m_view_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIViewDetailsDTO)

#endif // OAIViewDetailsDTO_H
