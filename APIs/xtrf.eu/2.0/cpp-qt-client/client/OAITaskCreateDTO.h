/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskCreateDTO.h
 *
 * 
 */

#ifndef OAITaskCreateDTO_H
#define OAITaskCreateDTO_H

#include <QJsonObject>

#include "OAIClassicPeopleDTO.h"
#include "OAICommonLanguageCombinationDTO.h"
#include "OAIInstructionsDTO.h"
#include "OAIProjectDatesDTO.h"
#include "OAITaskFileDTO.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProjectDatesDTO;
class OAITaskFileDTO;
class OAIInstructionsDTO;
class OAICommonLanguageCombinationDTO;
class OAIClassicPeopleDTO;

class OAITaskCreateDTO : public OAIObject {
public:
    OAITaskCreateDTO();
    OAITaskCreateDTO(QString json);
    ~OAITaskCreateDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientTaskPoNumber() const;
    void setClientTaskPoNumber(const QString &client_task_po_number);
    bool is_client_task_po_number_Set() const;
    bool is_client_task_po_number_Valid() const;

    OAIProjectDatesDTO getDates() const;
    void setDates(const OAIProjectDatesDTO &dates);
    bool is_dates_Set() const;
    bool is_dates_Valid() const;

    QList<OAITaskFileDTO> getFiles() const;
    void setFiles(const QList<OAITaskFileDTO> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    OAIInstructionsDTO getInstructions() const;
    void setInstructions(const OAIInstructionsDTO &instructions);
    bool is_instructions_Set() const;
    bool is_instructions_Valid() const;

    OAICommonLanguageCombinationDTO getLanguageCombination() const;
    void setLanguageCombination(const OAICommonLanguageCombinationDTO &language_combination);
    bool is_language_combination_Set() const;
    bool is_language_combination_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIClassicPeopleDTO getPeople() const;
    void setPeople(const OAIClassicPeopleDTO &people);
    bool is_people_Set() const;
    bool is_people_Valid() const;

    qint64 getSpecializationId() const;
    void setSpecializationId(const qint64 &specialization_id);
    bool is_specialization_id_Set() const;
    bool is_specialization_id_Valid() const;

    qint64 getWorkflowId() const;
    void setWorkflowId(const qint64 &workflow_id);
    bool is_workflow_id_Set() const;
    bool is_workflow_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_task_po_number;
    bool m_client_task_po_number_isSet;
    bool m_client_task_po_number_isValid;

    OAIProjectDatesDTO m_dates;
    bool m_dates_isSet;
    bool m_dates_isValid;

    QList<OAITaskFileDTO> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    OAIInstructionsDTO m_instructions;
    bool m_instructions_isSet;
    bool m_instructions_isValid;

    OAICommonLanguageCombinationDTO m_language_combination;
    bool m_language_combination_isSet;
    bool m_language_combination_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIClassicPeopleDTO m_people;
    bool m_people_isSet;
    bool m_people_isValid;

    qint64 m_specialization_id;
    bool m_specialization_id_isSet;
    bool m_specialization_id_isValid;

    qint64 m_workflow_id;
    bool m_workflow_id_isSet;
    bool m_workflow_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskCreateDTO)

#endif // OAITaskCreateDTO_H
