# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectCreateDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: int=None, external_id: str=None, name: str=None, service_id: int=None):
        """ProjectCreateDTO - a model defined in OpenAPI

        :param client_id: The client_id of this ProjectCreateDTO.
        :param external_id: The external_id of this ProjectCreateDTO.
        :param name: The name of this ProjectCreateDTO.
        :param service_id: The service_id of this ProjectCreateDTO.
        """
        self.openapi_types = {
            'client_id': int,
            'external_id': str,
            'name': str,
            'service_id': int
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'external_id': 'externalId',
            'name': 'name',
            'service_id': 'serviceId'
        }

        self._client_id = client_id
        self._external_id = external_id
        self._name = name
        self._service_id = service_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectCreateDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectCreateDTO of this ProjectCreateDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this ProjectCreateDTO.


        :return: The client_id of this ProjectCreateDTO.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this ProjectCreateDTO.


        :param client_id: The client_id of this ProjectCreateDTO.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def external_id(self):
        """Gets the external_id of this ProjectCreateDTO.


        :return: The external_id of this ProjectCreateDTO.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this ProjectCreateDTO.


        :param external_id: The external_id of this ProjectCreateDTO.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def name(self):
        """Gets the name of this ProjectCreateDTO.


        :return: The name of this ProjectCreateDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectCreateDTO.


        :param name: The name of this ProjectCreateDTO.
        :type name: str
        """

        self._name = name

    @property
    def service_id(self):
        """Gets the service_id of this ProjectCreateDTO.


        :return: The service_id of this ProjectCreateDTO.
        :rtype: int
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this ProjectCreateDTO.


        :param service_id: The service_id of this ProjectCreateDTO.
        :type service_id: int
        """

        self._service_id = service_id
