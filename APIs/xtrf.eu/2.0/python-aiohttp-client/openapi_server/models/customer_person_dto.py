# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field_dto import CustomFieldDTO
from openapi_server.models.person_contact_dto import PersonContactDTO
from openapi_server import util


class CustomerPersonDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, contact: PersonContactDTO=None, custom_fields: List[CustomFieldDTO]=None, customer_id: int=None, first_project_date: datetime=None, first_quote_date: datetime=None, gender: str=None, id: int=None, last_name: str=None, last_project_date: datetime=None, last_quote_date: datetime=None, mother_tongues_ids: list[int]=None, name: str=None, number_of_projects: int=None, number_of_quotes: int=None, position_id: int=None):
        """CustomerPersonDTO - a model defined in OpenAPI

        :param active: The active of this CustomerPersonDTO.
        :param contact: The contact of this CustomerPersonDTO.
        :param custom_fields: The custom_fields of this CustomerPersonDTO.
        :param customer_id: The customer_id of this CustomerPersonDTO.
        :param first_project_date: The first_project_date of this CustomerPersonDTO.
        :param first_quote_date: The first_quote_date of this CustomerPersonDTO.
        :param gender: The gender of this CustomerPersonDTO.
        :param id: The id of this CustomerPersonDTO.
        :param last_name: The last_name of this CustomerPersonDTO.
        :param last_project_date: The last_project_date of this CustomerPersonDTO.
        :param last_quote_date: The last_quote_date of this CustomerPersonDTO.
        :param mother_tongues_ids: The mother_tongues_ids of this CustomerPersonDTO.
        :param name: The name of this CustomerPersonDTO.
        :param number_of_projects: The number_of_projects of this CustomerPersonDTO.
        :param number_of_quotes: The number_of_quotes of this CustomerPersonDTO.
        :param position_id: The position_id of this CustomerPersonDTO.
        """
        self.openapi_types = {
            'active': bool,
            'contact': PersonContactDTO,
            'custom_fields': List[CustomFieldDTO],
            'customer_id': int,
            'first_project_date': datetime,
            'first_quote_date': datetime,
            'gender': str,
            'id': int,
            'last_name': str,
            'last_project_date': datetime,
            'last_quote_date': datetime,
            'mother_tongues_ids': list[int],
            'name': str,
            'number_of_projects': int,
            'number_of_quotes': int,
            'position_id': int
        }

        self.attribute_map = {
            'active': 'active',
            'contact': 'contact',
            'custom_fields': 'customFields',
            'customer_id': 'customerId',
            'first_project_date': 'firstProjectDate',
            'first_quote_date': 'firstQuoteDate',
            'gender': 'gender',
            'id': 'id',
            'last_name': 'lastName',
            'last_project_date': 'lastProjectDate',
            'last_quote_date': 'lastQuoteDate',
            'mother_tongues_ids': 'motherTonguesIds',
            'name': 'name',
            'number_of_projects': 'numberOfProjects',
            'number_of_quotes': 'numberOfQuotes',
            'position_id': 'positionId'
        }

        self._active = active
        self._contact = contact
        self._custom_fields = custom_fields
        self._customer_id = customer_id
        self._first_project_date = first_project_date
        self._first_quote_date = first_quote_date
        self._gender = gender
        self._id = id
        self._last_name = last_name
        self._last_project_date = last_project_date
        self._last_quote_date = last_quote_date
        self._mother_tongues_ids = mother_tongues_ids
        self._name = name
        self._number_of_projects = number_of_projects
        self._number_of_quotes = number_of_quotes
        self._position_id = position_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerPersonDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerPersonDTO of this CustomerPersonDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this CustomerPersonDTO.


        :return: The active of this CustomerPersonDTO.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this CustomerPersonDTO.


        :param active: The active of this CustomerPersonDTO.
        :type active: bool
        """

        self._active = active

    @property
    def contact(self):
        """Gets the contact of this CustomerPersonDTO.


        :return: The contact of this CustomerPersonDTO.
        :rtype: PersonContactDTO
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this CustomerPersonDTO.


        :param contact: The contact of this CustomerPersonDTO.
        :type contact: PersonContactDTO
        """

        self._contact = contact

    @property
    def custom_fields(self):
        """Gets the custom_fields of this CustomerPersonDTO.


        :return: The custom_fields of this CustomerPersonDTO.
        :rtype: List[CustomFieldDTO]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this CustomerPersonDTO.


        :param custom_fields: The custom_fields of this CustomerPersonDTO.
        :type custom_fields: List[CustomFieldDTO]
        """

        self._custom_fields = custom_fields

    @property
    def customer_id(self):
        """Gets the customer_id of this CustomerPersonDTO.


        :return: The customer_id of this CustomerPersonDTO.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this CustomerPersonDTO.


        :param customer_id: The customer_id of this CustomerPersonDTO.
        :type customer_id: int
        """

        self._customer_id = customer_id

    @property
    def first_project_date(self):
        """Gets the first_project_date of this CustomerPersonDTO.


        :return: The first_project_date of this CustomerPersonDTO.
        :rtype: datetime
        """
        return self._first_project_date

    @first_project_date.setter
    def first_project_date(self, first_project_date):
        """Sets the first_project_date of this CustomerPersonDTO.


        :param first_project_date: The first_project_date of this CustomerPersonDTO.
        :type first_project_date: datetime
        """

        self._first_project_date = first_project_date

    @property
    def first_quote_date(self):
        """Gets the first_quote_date of this CustomerPersonDTO.


        :return: The first_quote_date of this CustomerPersonDTO.
        :rtype: datetime
        """
        return self._first_quote_date

    @first_quote_date.setter
    def first_quote_date(self, first_quote_date):
        """Sets the first_quote_date of this CustomerPersonDTO.


        :param first_quote_date: The first_quote_date of this CustomerPersonDTO.
        :type first_quote_date: datetime
        """

        self._first_quote_date = first_quote_date

    @property
    def gender(self):
        """Gets the gender of this CustomerPersonDTO.


        :return: The gender of this CustomerPersonDTO.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this CustomerPersonDTO.


        :param gender: The gender of this CustomerPersonDTO.
        :type gender: str
        """
        allowed_values = ["FEMALE", "MALE"]  # noqa: E501
        if gender not in allowed_values:
            raise ValueError(
                "Invalid value for `gender` ({0}), must be one of {1}"
                .format(gender, allowed_values)
            )

        self._gender = gender

    @property
    def id(self):
        """Gets the id of this CustomerPersonDTO.


        :return: The id of this CustomerPersonDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomerPersonDTO.


        :param id: The id of this CustomerPersonDTO.
        :type id: int
        """

        self._id = id

    @property
    def last_name(self):
        """Gets the last_name of this CustomerPersonDTO.


        :return: The last_name of this CustomerPersonDTO.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this CustomerPersonDTO.


        :param last_name: The last_name of this CustomerPersonDTO.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def last_project_date(self):
        """Gets the last_project_date of this CustomerPersonDTO.


        :return: The last_project_date of this CustomerPersonDTO.
        :rtype: datetime
        """
        return self._last_project_date

    @last_project_date.setter
    def last_project_date(self, last_project_date):
        """Sets the last_project_date of this CustomerPersonDTO.


        :param last_project_date: The last_project_date of this CustomerPersonDTO.
        :type last_project_date: datetime
        """

        self._last_project_date = last_project_date

    @property
    def last_quote_date(self):
        """Gets the last_quote_date of this CustomerPersonDTO.


        :return: The last_quote_date of this CustomerPersonDTO.
        :rtype: datetime
        """
        return self._last_quote_date

    @last_quote_date.setter
    def last_quote_date(self, last_quote_date):
        """Sets the last_quote_date of this CustomerPersonDTO.


        :param last_quote_date: The last_quote_date of this CustomerPersonDTO.
        :type last_quote_date: datetime
        """

        self._last_quote_date = last_quote_date

    @property
    def mother_tongues_ids(self):
        """Gets the mother_tongues_ids of this CustomerPersonDTO.


        :return: The mother_tongues_ids of this CustomerPersonDTO.
        :rtype: list[int]
        """
        return self._mother_tongues_ids

    @mother_tongues_ids.setter
    def mother_tongues_ids(self, mother_tongues_ids):
        """Sets the mother_tongues_ids of this CustomerPersonDTO.


        :param mother_tongues_ids: The mother_tongues_ids of this CustomerPersonDTO.
        :type mother_tongues_ids: list[int]
        """

        self._mother_tongues_ids = mother_tongues_ids

    @property
    def name(self):
        """Gets the name of this CustomerPersonDTO.


        :return: The name of this CustomerPersonDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomerPersonDTO.


        :param name: The name of this CustomerPersonDTO.
        :type name: str
        """

        self._name = name

    @property
    def number_of_projects(self):
        """Gets the number_of_projects of this CustomerPersonDTO.


        :return: The number_of_projects of this CustomerPersonDTO.
        :rtype: int
        """
        return self._number_of_projects

    @number_of_projects.setter
    def number_of_projects(self, number_of_projects):
        """Sets the number_of_projects of this CustomerPersonDTO.


        :param number_of_projects: The number_of_projects of this CustomerPersonDTO.
        :type number_of_projects: int
        """

        self._number_of_projects = number_of_projects

    @property
    def number_of_quotes(self):
        """Gets the number_of_quotes of this CustomerPersonDTO.


        :return: The number_of_quotes of this CustomerPersonDTO.
        :rtype: int
        """
        return self._number_of_quotes

    @number_of_quotes.setter
    def number_of_quotes(self, number_of_quotes):
        """Sets the number_of_quotes of this CustomerPersonDTO.


        :param number_of_quotes: The number_of_quotes of this CustomerPersonDTO.
        :type number_of_quotes: int
        """

        self._number_of_quotes = number_of_quotes

    @property
    def position_id(self):
        """Gets the position_id of this CustomerPersonDTO.


        :return: The position_id of this CustomerPersonDTO.
        :rtype: int
        """
        return self._position_id

    @position_id.setter
    def position_id(self, position_id):
        """Sets the position_id of this CustomerPersonDTO.


        :param position_id: The position_id of this CustomerPersonDTO.
        :type position_id: int
        """

        self._position_id = position_id
