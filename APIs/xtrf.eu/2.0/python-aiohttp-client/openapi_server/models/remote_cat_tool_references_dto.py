# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoteCATToolReferencesDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cat_resource_id: str=None, cat_tool_document_id: str=None, editor_url: str=None):
        """RemoteCATToolReferencesDto - a model defined in OpenAPI

        :param cat_resource_id: The cat_resource_id of this RemoteCATToolReferencesDto.
        :param cat_tool_document_id: The cat_tool_document_id of this RemoteCATToolReferencesDto.
        :param editor_url: The editor_url of this RemoteCATToolReferencesDto.
        """
        self.openapi_types = {
            'cat_resource_id': str,
            'cat_tool_document_id': str,
            'editor_url': str
        }

        self.attribute_map = {
            'cat_resource_id': 'catResourceId',
            'cat_tool_document_id': 'catToolDocumentId',
            'editor_url': 'editorUrl'
        }

        self._cat_resource_id = cat_resource_id
        self._cat_tool_document_id = cat_tool_document_id
        self._editor_url = editor_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoteCATToolReferencesDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoteCATToolReferencesDto of this RemoteCATToolReferencesDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cat_resource_id(self):
        """Gets the cat_resource_id of this RemoteCATToolReferencesDto.


        :return: The cat_resource_id of this RemoteCATToolReferencesDto.
        :rtype: str
        """
        return self._cat_resource_id

    @cat_resource_id.setter
    def cat_resource_id(self, cat_resource_id):
        """Sets the cat_resource_id of this RemoteCATToolReferencesDto.


        :param cat_resource_id: The cat_resource_id of this RemoteCATToolReferencesDto.
        :type cat_resource_id: str
        """

        self._cat_resource_id = cat_resource_id

    @property
    def cat_tool_document_id(self):
        """Gets the cat_tool_document_id of this RemoteCATToolReferencesDto.


        :return: The cat_tool_document_id of this RemoteCATToolReferencesDto.
        :rtype: str
        """
        return self._cat_tool_document_id

    @cat_tool_document_id.setter
    def cat_tool_document_id(self, cat_tool_document_id):
        """Sets the cat_tool_document_id of this RemoteCATToolReferencesDto.


        :param cat_tool_document_id: The cat_tool_document_id of this RemoteCATToolReferencesDto.
        :type cat_tool_document_id: str
        """

        self._cat_tool_document_id = cat_tool_document_id

    @property
    def editor_url(self):
        """Gets the editor_url of this RemoteCATToolReferencesDto.


        :return: The editor_url of this RemoteCATToolReferencesDto.
        :rtype: str
        """
        return self._editor_url

    @editor_url.setter
    def editor_url(self, editor_url):
        """Sets the editor_url of this RemoteCATToolReferencesDto.


        :param editor_url: The editor_url of this RemoteCATToolReferencesDto.
        :type editor_url: str
        """

        self._editor_url = editor_url
