# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileShareStatusDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_id: str=None, message: str=None, successful: bool=None):
        """FileShareStatusDto - a model defined in OpenAPI

        :param file_id: The file_id of this FileShareStatusDto.
        :param message: The message of this FileShareStatusDto.
        :param successful: The successful of this FileShareStatusDto.
        """
        self.openapi_types = {
            'file_id': str,
            'message': str,
            'successful': bool
        }

        self.attribute_map = {
            'file_id': 'fileId',
            'message': 'message',
            'successful': 'successful'
        }

        self._file_id = file_id
        self._message = message
        self._successful = successful

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileShareStatusDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileShareStatusDto of this FileShareStatusDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_id(self):
        """Gets the file_id of this FileShareStatusDto.


        :return: The file_id of this FileShareStatusDto.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this FileShareStatusDto.


        :param file_id: The file_id of this FileShareStatusDto.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def message(self):
        """Gets the message of this FileShareStatusDto.


        :return: The message of this FileShareStatusDto.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this FileShareStatusDto.


        :param message: The message of this FileShareStatusDto.
        :type message: str
        """

        self._message = message

    @property
    def successful(self):
        """Gets the successful of this FileShareStatusDto.


        :return: The successful of this FileShareStatusDto.
        :rtype: bool
        """
        return self._successful

    @successful.setter
    def successful(self, successful):
        """Sets the successful of this FileShareStatusDto.


        :param successful: The successful of this FileShareStatusDto.
        :type successful: bool
        """

        self._successful = successful
