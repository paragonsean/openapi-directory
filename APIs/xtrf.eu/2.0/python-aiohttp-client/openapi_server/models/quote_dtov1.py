# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field_dto import CustomFieldDTO
from openapi_server.models.finance_dto import FinanceDTO
from openapi_server.models.instructions_dto import InstructionsDTO
from openapi_server.models.quote_dates_dto import QuoteDatesDTO
from openapi_server.models.task_dto import TaskDTO
from openapi_server import util


class QuoteDTOv1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automatically_accept_sent_quote: bool=None, categories_ids: list[int]=None, contact_person_id: int=None, custom_fields: List[CustomFieldDTO]=None, customer_id: int=None, dates: QuoteDatesDTO=None, finance: FinanceDTO=None, id: int=None, id_number: str=None, instructions: InstructionsDTO=None, is_classic_quote: bool=None, name: str=None, quote_id: str=None, sales_person_id: int=None, status: str=None, tasks: List[TaskDTO]=None):
        """QuoteDTOv1 - a model defined in OpenAPI

        :param automatically_accept_sent_quote: The automatically_accept_sent_quote of this QuoteDTOv1.
        :param categories_ids: The categories_ids of this QuoteDTOv1.
        :param contact_person_id: The contact_person_id of this QuoteDTOv1.
        :param custom_fields: The custom_fields of this QuoteDTOv1.
        :param customer_id: The customer_id of this QuoteDTOv1.
        :param dates: The dates of this QuoteDTOv1.
        :param finance: The finance of this QuoteDTOv1.
        :param id: The id of this QuoteDTOv1.
        :param id_number: The id_number of this QuoteDTOv1.
        :param instructions: The instructions of this QuoteDTOv1.
        :param is_classic_quote: The is_classic_quote of this QuoteDTOv1.
        :param name: The name of this QuoteDTOv1.
        :param quote_id: The quote_id of this QuoteDTOv1.
        :param sales_person_id: The sales_person_id of this QuoteDTOv1.
        :param status: The status of this QuoteDTOv1.
        :param tasks: The tasks of this QuoteDTOv1.
        """
        self.openapi_types = {
            'automatically_accept_sent_quote': bool,
            'categories_ids': list[int],
            'contact_person_id': int,
            'custom_fields': List[CustomFieldDTO],
            'customer_id': int,
            'dates': QuoteDatesDTO,
            'finance': FinanceDTO,
            'id': int,
            'id_number': str,
            'instructions': InstructionsDTO,
            'is_classic_quote': bool,
            'name': str,
            'quote_id': str,
            'sales_person_id': int,
            'status': str,
            'tasks': List[TaskDTO]
        }

        self.attribute_map = {
            'automatically_accept_sent_quote': 'automaticallyAcceptSentQuote',
            'categories_ids': 'categoriesIds',
            'contact_person_id': 'contactPersonId',
            'custom_fields': 'customFields',
            'customer_id': 'customerId',
            'dates': 'dates',
            'finance': 'finance',
            'id': 'id',
            'id_number': 'idNumber',
            'instructions': 'instructions',
            'is_classic_quote': 'isClassicQuote',
            'name': 'name',
            'quote_id': 'quoteId',
            'sales_person_id': 'salesPersonId',
            'status': 'status',
            'tasks': 'tasks'
        }

        self._automatically_accept_sent_quote = automatically_accept_sent_quote
        self._categories_ids = categories_ids
        self._contact_person_id = contact_person_id
        self._custom_fields = custom_fields
        self._customer_id = customer_id
        self._dates = dates
        self._finance = finance
        self._id = id
        self._id_number = id_number
        self._instructions = instructions
        self._is_classic_quote = is_classic_quote
        self._name = name
        self._quote_id = quote_id
        self._sales_person_id = sales_person_id
        self._status = status
        self._tasks = tasks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteDTOv1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuoteDTOv1 of this QuoteDTOv1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automatically_accept_sent_quote(self):
        """Gets the automatically_accept_sent_quote of this QuoteDTOv1.


        :return: The automatically_accept_sent_quote of this QuoteDTOv1.
        :rtype: bool
        """
        return self._automatically_accept_sent_quote

    @automatically_accept_sent_quote.setter
    def automatically_accept_sent_quote(self, automatically_accept_sent_quote):
        """Sets the automatically_accept_sent_quote of this QuoteDTOv1.


        :param automatically_accept_sent_quote: The automatically_accept_sent_quote of this QuoteDTOv1.
        :type automatically_accept_sent_quote: bool
        """

        self._automatically_accept_sent_quote = automatically_accept_sent_quote

    @property
    def categories_ids(self):
        """Gets the categories_ids of this QuoteDTOv1.


        :return: The categories_ids of this QuoteDTOv1.
        :rtype: list[int]
        """
        return self._categories_ids

    @categories_ids.setter
    def categories_ids(self, categories_ids):
        """Sets the categories_ids of this QuoteDTOv1.


        :param categories_ids: The categories_ids of this QuoteDTOv1.
        :type categories_ids: list[int]
        """

        self._categories_ids = categories_ids

    @property
    def contact_person_id(self):
        """Gets the contact_person_id of this QuoteDTOv1.


        :return: The contact_person_id of this QuoteDTOv1.
        :rtype: int
        """
        return self._contact_person_id

    @contact_person_id.setter
    def contact_person_id(self, contact_person_id):
        """Sets the contact_person_id of this QuoteDTOv1.


        :param contact_person_id: The contact_person_id of this QuoteDTOv1.
        :type contact_person_id: int
        """

        self._contact_person_id = contact_person_id

    @property
    def custom_fields(self):
        """Gets the custom_fields of this QuoteDTOv1.


        :return: The custom_fields of this QuoteDTOv1.
        :rtype: List[CustomFieldDTO]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this QuoteDTOv1.


        :param custom_fields: The custom_fields of this QuoteDTOv1.
        :type custom_fields: List[CustomFieldDTO]
        """

        self._custom_fields = custom_fields

    @property
    def customer_id(self):
        """Gets the customer_id of this QuoteDTOv1.


        :return: The customer_id of this QuoteDTOv1.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this QuoteDTOv1.


        :param customer_id: The customer_id of this QuoteDTOv1.
        :type customer_id: int
        """

        self._customer_id = customer_id

    @property
    def dates(self):
        """Gets the dates of this QuoteDTOv1.


        :return: The dates of this QuoteDTOv1.
        :rtype: QuoteDatesDTO
        """
        return self._dates

    @dates.setter
    def dates(self, dates):
        """Sets the dates of this QuoteDTOv1.


        :param dates: The dates of this QuoteDTOv1.
        :type dates: QuoteDatesDTO
        """

        self._dates = dates

    @property
    def finance(self):
        """Gets the finance of this QuoteDTOv1.


        :return: The finance of this QuoteDTOv1.
        :rtype: FinanceDTO
        """
        return self._finance

    @finance.setter
    def finance(self, finance):
        """Sets the finance of this QuoteDTOv1.


        :param finance: The finance of this QuoteDTOv1.
        :type finance: FinanceDTO
        """

        self._finance = finance

    @property
    def id(self):
        """Gets the id of this QuoteDTOv1.


        :return: The id of this QuoteDTOv1.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this QuoteDTOv1.


        :param id: The id of this QuoteDTOv1.
        :type id: int
        """

        self._id = id

    @property
    def id_number(self):
        """Gets the id_number of this QuoteDTOv1.


        :return: The id_number of this QuoteDTOv1.
        :rtype: str
        """
        return self._id_number

    @id_number.setter
    def id_number(self, id_number):
        """Sets the id_number of this QuoteDTOv1.


        :param id_number: The id_number of this QuoteDTOv1.
        :type id_number: str
        """

        self._id_number = id_number

    @property
    def instructions(self):
        """Gets the instructions of this QuoteDTOv1.


        :return: The instructions of this QuoteDTOv1.
        :rtype: InstructionsDTO
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """Sets the instructions of this QuoteDTOv1.


        :param instructions: The instructions of this QuoteDTOv1.
        :type instructions: InstructionsDTO
        """

        self._instructions = instructions

    @property
    def is_classic_quote(self):
        """Gets the is_classic_quote of this QuoteDTOv1.


        :return: The is_classic_quote of this QuoteDTOv1.
        :rtype: bool
        """
        return self._is_classic_quote

    @is_classic_quote.setter
    def is_classic_quote(self, is_classic_quote):
        """Sets the is_classic_quote of this QuoteDTOv1.


        :param is_classic_quote: The is_classic_quote of this QuoteDTOv1.
        :type is_classic_quote: bool
        """

        self._is_classic_quote = is_classic_quote

    @property
    def name(self):
        """Gets the name of this QuoteDTOv1.


        :return: The name of this QuoteDTOv1.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this QuoteDTOv1.


        :param name: The name of this QuoteDTOv1.
        :type name: str
        """

        self._name = name

    @property
    def quote_id(self):
        """Gets the quote_id of this QuoteDTOv1.


        :return: The quote_id of this QuoteDTOv1.
        :rtype: str
        """
        return self._quote_id

    @quote_id.setter
    def quote_id(self, quote_id):
        """Sets the quote_id of this QuoteDTOv1.


        :param quote_id: The quote_id of this QuoteDTOv1.
        :type quote_id: str
        """

        self._quote_id = quote_id

    @property
    def sales_person_id(self):
        """Gets the sales_person_id of this QuoteDTOv1.


        :return: The sales_person_id of this QuoteDTOv1.
        :rtype: int
        """
        return self._sales_person_id

    @sales_person_id.setter
    def sales_person_id(self, sales_person_id):
        """Sets the sales_person_id of this QuoteDTOv1.


        :param sales_person_id: The sales_person_id of this QuoteDTOv1.
        :type sales_person_id: int
        """

        self._sales_person_id = sales_person_id

    @property
    def status(self):
        """Gets the status of this QuoteDTOv1.


        :return: The status of this QuoteDTOv1.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this QuoteDTOv1.


        :param status: The status of this QuoteDTOv1.
        :type status: str
        """

        self._status = status

    @property
    def tasks(self):
        """Gets the tasks of this QuoteDTOv1.


        :return: The tasks of this QuoteDTOv1.
        :rtype: List[TaskDTO]
        """
        return self._tasks

    @tasks.setter
    def tasks(self, tasks):
        """Sets the tasks of this QuoteDTOv1.


        :param tasks: The tasks of this QuoteDTOv1.
        :type tasks: List[TaskDTO]
        """

        self._tasks = tasks
