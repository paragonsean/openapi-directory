# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccessTokenRequestDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, login_or_email: str=None):
        """AccessTokenRequestDTO - a model defined in OpenAPI

        :param login_or_email: The login_or_email of this AccessTokenRequestDTO.
        """
        self.openapi_types = {
            'login_or_email': str
        }

        self.attribute_map = {
            'login_or_email': 'loginOrEmail'
        }

        self._login_or_email = login_or_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessTokenRequestDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessTokenRequestDTO of this AccessTokenRequestDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def login_or_email(self):
        """Gets the login_or_email of this AccessTokenRequestDTO.


        :return: The login_or_email of this AccessTokenRequestDTO.
        :rtype: str
        """
        return self._login_or_email

    @login_or_email.setter
    def login_or_email(self, login_or_email):
        """Sets the login_or_email of this AccessTokenRequestDTO.


        :param login_or_email: The login_or_email of this AccessTokenRequestDTO.
        :type login_or_email: str
        """

        self._login_or_email = login_or_email
