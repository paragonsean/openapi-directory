# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contacts_dto import ContactsDTO
from openapi_server.models.responsible_persons_dto import ResponsiblePersonsDTO
from openapi_server import util


class ClassicPeopleDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_contacts: ContactsDTO=None, responsible_persons: ResponsiblePersonsDTO=None):
        """ClassicPeopleDTO - a model defined in OpenAPI

        :param customer_contacts: The customer_contacts of this ClassicPeopleDTO.
        :param responsible_persons: The responsible_persons of this ClassicPeopleDTO.
        """
        self.openapi_types = {
            'customer_contacts': ContactsDTO,
            'responsible_persons': ResponsiblePersonsDTO
        }

        self.attribute_map = {
            'customer_contacts': 'customerContacts',
            'responsible_persons': 'responsiblePersons'
        }

        self._customer_contacts = customer_contacts
        self._responsible_persons = responsible_persons

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClassicPeopleDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClassicPeopleDTO of this ClassicPeopleDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_contacts(self):
        """Gets the customer_contacts of this ClassicPeopleDTO.


        :return: The customer_contacts of this ClassicPeopleDTO.
        :rtype: ContactsDTO
        """
        return self._customer_contacts

    @customer_contacts.setter
    def customer_contacts(self, customer_contacts):
        """Sets the customer_contacts of this ClassicPeopleDTO.


        :param customer_contacts: The customer_contacts of this ClassicPeopleDTO.
        :type customer_contacts: ContactsDTO
        """

        self._customer_contacts = customer_contacts

    @property
    def responsible_persons(self):
        """Gets the responsible_persons of this ClassicPeopleDTO.


        :return: The responsible_persons of this ClassicPeopleDTO.
        :rtype: ResponsiblePersonsDTO
        """
        return self._responsible_persons

    @responsible_persons.setter
    def responsible_persons(self, responsible_persons):
        """Sets the responsible_persons of this ClassicPeopleDTO.


        :param responsible_persons: The responsible_persons of this ClassicPeopleDTO.
        :type responsible_persons: ResponsiblePersonsDTO
        """

        self._responsible_persons = responsible_persons
