# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MacroRequestDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _async: bool=None, ids: List[int]=None, params: Dict[str, object]=None):
        """MacroRequestDTO - a model defined in OpenAPI

        :param _async: The _async of this MacroRequestDTO.
        :param ids: The ids of this MacroRequestDTO.
        :param params: The params of this MacroRequestDTO.
        """
        self.openapi_types = {
            '_async': bool,
            'ids': List[int],
            'params': Dict[str, object]
        }

        self.attribute_map = {
            '_async': 'async',
            'ids': 'ids',
            'params': 'params'
        }

        self.__async = _async
        self._ids = ids
        self._params = params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MacroRequestDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MacroRequestDTO of this MacroRequestDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _async(self):
        """Gets the _async of this MacroRequestDTO.

        indicates whether the macro should be executed asynchronously or synchronously (default: false)

        :return: The _async of this MacroRequestDTO.
        :rtype: bool
        """
        return self.__async

    @_async.setter
    def _async(self, _async):
        """Sets the _async of this MacroRequestDTO.

        indicates whether the macro should be executed asynchronously or synchronously (default: false)

        :param _async: The _async of this MacroRequestDTO.
        :type _async: bool
        """

        self.__async = _async

    @property
    def ids(self):
        """Gets the ids of this MacroRequestDTO.

        list of internal identifiers of elements to be processed by the macro, can be empty for certain macros

        :return: The ids of this MacroRequestDTO.
        :rtype: List[int]
        """
        return self._ids

    @ids.setter
    def ids(self, ids):
        """Sets the ids of this MacroRequestDTO.

        list of internal identifiers of elements to be processed by the macro, can be empty for certain macros

        :param ids: The ids of this MacroRequestDTO.
        :type ids: List[int]
        """

        self._ids = ids

    @property
    def params(self):
        """Gets the params of this MacroRequestDTO.

        map of custom key-value pairs that can optionally parametrize the macro execution

        :return: The params of this MacroRequestDTO.
        :rtype: Dict[str, object]
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this MacroRequestDTO.

        map of custom key-value pairs that can optionally parametrize the macro execution

        :param params: The params of this MacroRequestDTO.
        :type params: Dict[str, object]
        """

        self._params = params
