# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field_dto import CustomFieldDTO
from openapi_server import util


class UserDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_fields: List[CustomFieldDTO]=None, email: str=None, first_name: str=None, gender: str=None, id: int=None, last_name: str=None, login: str=None, mobile_phone: str=None, phone: str=None, position_name: str=None, time_zone_id: str=None, user_group_name: str=None):
        """UserDTO - a model defined in OpenAPI

        :param custom_fields: The custom_fields of this UserDTO.
        :param email: The email of this UserDTO.
        :param first_name: The first_name of this UserDTO.
        :param gender: The gender of this UserDTO.
        :param id: The id of this UserDTO.
        :param last_name: The last_name of this UserDTO.
        :param login: The login of this UserDTO.
        :param mobile_phone: The mobile_phone of this UserDTO.
        :param phone: The phone of this UserDTO.
        :param position_name: The position_name of this UserDTO.
        :param time_zone_id: The time_zone_id of this UserDTO.
        :param user_group_name: The user_group_name of this UserDTO.
        """
        self.openapi_types = {
            'custom_fields': List[CustomFieldDTO],
            'email': str,
            'first_name': str,
            'gender': str,
            'id': int,
            'last_name': str,
            'login': str,
            'mobile_phone': str,
            'phone': str,
            'position_name': str,
            'time_zone_id': str,
            'user_group_name': str
        }

        self.attribute_map = {
            'custom_fields': 'customFields',
            'email': 'email',
            'first_name': 'firstName',
            'gender': 'gender',
            'id': 'id',
            'last_name': 'lastName',
            'login': 'login',
            'mobile_phone': 'mobilePhone',
            'phone': 'phone',
            'position_name': 'positionName',
            'time_zone_id': 'timeZoneId',
            'user_group_name': 'userGroupName'
        }

        self._custom_fields = custom_fields
        self._email = email
        self._first_name = first_name
        self._gender = gender
        self._id = id
        self._last_name = last_name
        self._login = login
        self._mobile_phone = mobile_phone
        self._phone = phone
        self._position_name = position_name
        self._time_zone_id = time_zone_id
        self._user_group_name = user_group_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserDTO of this UserDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_fields(self):
        """Gets the custom_fields of this UserDTO.


        :return: The custom_fields of this UserDTO.
        :rtype: List[CustomFieldDTO]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this UserDTO.


        :param custom_fields: The custom_fields of this UserDTO.
        :type custom_fields: List[CustomFieldDTO]
        """

        self._custom_fields = custom_fields

    @property
    def email(self):
        """Gets the email of this UserDTO.


        :return: The email of this UserDTO.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UserDTO.


        :param email: The email of this UserDTO.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this UserDTO.


        :return: The first_name of this UserDTO.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this UserDTO.


        :param first_name: The first_name of this UserDTO.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def gender(self):
        """Gets the gender of this UserDTO.


        :return: The gender of this UserDTO.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this UserDTO.


        :param gender: The gender of this UserDTO.
        :type gender: str
        """

        self._gender = gender

    @property
    def id(self):
        """Gets the id of this UserDTO.


        :return: The id of this UserDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UserDTO.


        :param id: The id of this UserDTO.
        :type id: int
        """

        self._id = id

    @property
    def last_name(self):
        """Gets the last_name of this UserDTO.


        :return: The last_name of this UserDTO.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this UserDTO.


        :param last_name: The last_name of this UserDTO.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def login(self):
        """Gets the login of this UserDTO.


        :return: The login of this UserDTO.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """Sets the login of this UserDTO.


        :param login: The login of this UserDTO.
        :type login: str
        """

        self._login = login

    @property
    def mobile_phone(self):
        """Gets the mobile_phone of this UserDTO.


        :return: The mobile_phone of this UserDTO.
        :rtype: str
        """
        return self._mobile_phone

    @mobile_phone.setter
    def mobile_phone(self, mobile_phone):
        """Sets the mobile_phone of this UserDTO.


        :param mobile_phone: The mobile_phone of this UserDTO.
        :type mobile_phone: str
        """

        self._mobile_phone = mobile_phone

    @property
    def phone(self):
        """Gets the phone of this UserDTO.


        :return: The phone of this UserDTO.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this UserDTO.


        :param phone: The phone of this UserDTO.
        :type phone: str
        """

        self._phone = phone

    @property
    def position_name(self):
        """Gets the position_name of this UserDTO.


        :return: The position_name of this UserDTO.
        :rtype: str
        """
        return self._position_name

    @position_name.setter
    def position_name(self, position_name):
        """Sets the position_name of this UserDTO.


        :param position_name: The position_name of this UserDTO.
        :type position_name: str
        """

        self._position_name = position_name

    @property
    def time_zone_id(self):
        """Gets the time_zone_id of this UserDTO.


        :return: The time_zone_id of this UserDTO.
        :rtype: str
        """
        return self._time_zone_id

    @time_zone_id.setter
    def time_zone_id(self, time_zone_id):
        """Sets the time_zone_id of this UserDTO.


        :param time_zone_id: The time_zone_id of this UserDTO.
        :type time_zone_id: str
        """

        self._time_zone_id = time_zone_id

    @property
    def user_group_name(self):
        """Gets the user_group_name of this UserDTO.


        :return: The user_group_name of this UserDTO.
        :rtype: str
        """
        return self._user_group_name

    @user_group_name.setter
    def user_group_name(self, user_group_name):
        """Sets the user_group_name of this UserDTO.


        :param user_group_name: The user_group_name of this UserDTO.
        :type user_group_name: str
        """

        self._user_group_name = user_group_name
