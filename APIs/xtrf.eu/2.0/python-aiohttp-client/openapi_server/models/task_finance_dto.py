# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskFinanceDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invoiceable: bool=None):
        """TaskFinanceDTO - a model defined in OpenAPI

        :param invoiceable: The invoiceable of this TaskFinanceDTO.
        """
        self.openapi_types = {
            'invoiceable': bool
        }

        self.attribute_map = {
            'invoiceable': 'invoiceable'
        }

        self._invoiceable = invoiceable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskFinanceDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskFinanceDTO of this TaskFinanceDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoiceable(self):
        """Gets the invoiceable of this TaskFinanceDTO.

        is this task invoiceable or not

        :return: The invoiceable of this TaskFinanceDTO.
        :rtype: bool
        """
        return self._invoiceable

    @invoiceable.setter
    def invoiceable(self, invoiceable):
        """Sets the invoiceable of this TaskFinanceDTO.

        is this task invoiceable or not

        :param invoiceable: The invoiceable of this TaskFinanceDTO.
        :type invoiceable: bool
        """

        self._invoiceable = invoiceable
