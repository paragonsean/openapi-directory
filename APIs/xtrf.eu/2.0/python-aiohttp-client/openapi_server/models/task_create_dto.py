# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.classic_people_dto import ClassicPeopleDTO
from openapi_server.models.common_language_combination_dto import CommonLanguageCombinationDTO
from openapi_server.models.instructions_dto import InstructionsDTO
from openapi_server.models.project_dates_dto import ProjectDatesDTO
from openapi_server.models.task_file_dto import TaskFileDTO
from openapi_server import util


class TaskCreateDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_task_po_number: str=None, dates: ProjectDatesDTO=None, files: List[TaskFileDTO]=None, instructions: InstructionsDTO=None, language_combination: CommonLanguageCombinationDTO=None, name: str=None, people: ClassicPeopleDTO=None, specialization_id: int=None, workflow_id: int=None):
        """TaskCreateDTO - a model defined in OpenAPI

        :param client_task_po_number: The client_task_po_number of this TaskCreateDTO.
        :param dates: The dates of this TaskCreateDTO.
        :param files: The files of this TaskCreateDTO.
        :param instructions: The instructions of this TaskCreateDTO.
        :param language_combination: The language_combination of this TaskCreateDTO.
        :param name: The name of this TaskCreateDTO.
        :param people: The people of this TaskCreateDTO.
        :param specialization_id: The specialization_id of this TaskCreateDTO.
        :param workflow_id: The workflow_id of this TaskCreateDTO.
        """
        self.openapi_types = {
            'client_task_po_number': str,
            'dates': ProjectDatesDTO,
            'files': List[TaskFileDTO],
            'instructions': InstructionsDTO,
            'language_combination': CommonLanguageCombinationDTO,
            'name': str,
            'people': ClassicPeopleDTO,
            'specialization_id': int,
            'workflow_id': int
        }

        self.attribute_map = {
            'client_task_po_number': 'clientTaskPONumber',
            'dates': 'dates',
            'files': 'files',
            'instructions': 'instructions',
            'language_combination': 'languageCombination',
            'name': 'name',
            'people': 'people',
            'specialization_id': 'specializationId',
            'workflow_id': 'workflowId'
        }

        self._client_task_po_number = client_task_po_number
        self._dates = dates
        self._files = files
        self._instructions = instructions
        self._language_combination = language_combination
        self._name = name
        self._people = people
        self._specialization_id = specialization_id
        self._workflow_id = workflow_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskCreateDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskCreateDTO of this TaskCreateDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_task_po_number(self):
        """Gets the client_task_po_number of this TaskCreateDTO.

        client task PO number

        :return: The client_task_po_number of this TaskCreateDTO.
        :rtype: str
        """
        return self._client_task_po_number

    @client_task_po_number.setter
    def client_task_po_number(self, client_task_po_number):
        """Sets the client_task_po_number of this TaskCreateDTO.

        client task PO number

        :param client_task_po_number: The client_task_po_number of this TaskCreateDTO.
        :type client_task_po_number: str
        """

        self._client_task_po_number = client_task_po_number

    @property
    def dates(self):
        """Gets the dates of this TaskCreateDTO.


        :return: The dates of this TaskCreateDTO.
        :rtype: ProjectDatesDTO
        """
        return self._dates

    @dates.setter
    def dates(self, dates):
        """Sets the dates of this TaskCreateDTO.


        :param dates: The dates of this TaskCreateDTO.
        :type dates: ProjectDatesDTO
        """

        self._dates = dates

    @property
    def files(self):
        """Gets the files of this TaskCreateDTO.

        files

        :return: The files of this TaskCreateDTO.
        :rtype: List[TaskFileDTO]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this TaskCreateDTO.

        files

        :param files: The files of this TaskCreateDTO.
        :type files: List[TaskFileDTO]
        """

        self._files = files

    @property
    def instructions(self):
        """Gets the instructions of this TaskCreateDTO.


        :return: The instructions of this TaskCreateDTO.
        :rtype: InstructionsDTO
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """Sets the instructions of this TaskCreateDTO.


        :param instructions: The instructions of this TaskCreateDTO.
        :type instructions: InstructionsDTO
        """

        self._instructions = instructions

    @property
    def language_combination(self):
        """Gets the language_combination of this TaskCreateDTO.


        :return: The language_combination of this TaskCreateDTO.
        :rtype: CommonLanguageCombinationDTO
        """
        return self._language_combination

    @language_combination.setter
    def language_combination(self, language_combination):
        """Sets the language_combination of this TaskCreateDTO.


        :param language_combination: The language_combination of this TaskCreateDTO.
        :type language_combination: CommonLanguageCombinationDTO
        """

        self._language_combination = language_combination

    @property
    def name(self):
        """Gets the name of this TaskCreateDTO.

        name

        :return: The name of this TaskCreateDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TaskCreateDTO.

        name

        :param name: The name of this TaskCreateDTO.
        :type name: str
        """

        self._name = name

    @property
    def people(self):
        """Gets the people of this TaskCreateDTO.


        :return: The people of this TaskCreateDTO.
        :rtype: ClassicPeopleDTO
        """
        return self._people

    @people.setter
    def people(self, people):
        """Sets the people of this TaskCreateDTO.


        :param people: The people of this TaskCreateDTO.
        :type people: ClassicPeopleDTO
        """

        self._people = people

    @property
    def specialization_id(self):
        """Gets the specialization_id of this TaskCreateDTO.

        specialization

        :return: The specialization_id of this TaskCreateDTO.
        :rtype: int
        """
        return self._specialization_id

    @specialization_id.setter
    def specialization_id(self, specialization_id):
        """Sets the specialization_id of this TaskCreateDTO.

        specialization

        :param specialization_id: The specialization_id of this TaskCreateDTO.
        :type specialization_id: int
        """

        self._specialization_id = specialization_id

    @property
    def workflow_id(self):
        """Gets the workflow_id of this TaskCreateDTO.

        workflow

        :return: The workflow_id of this TaskCreateDTO.
        :rtype: int
        """
        return self._workflow_id

    @workflow_id.setter
    def workflow_id(self, workflow_id):
        """Sets the workflow_id of this TaskCreateDTO.

        workflow

        :param workflow_id: The workflow_id of this TaskCreateDTO.
        :type workflow_id: int
        """

        self._workflow_id = workflow_id
