# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_dto import FileDTO
from openapi_server import util


class InputFilesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_files: List[FileDTO]=None, reference_files: List[FileDTO]=None, terminology: List[FileDTO]=None, tm: List[FileDTO]=None, work_files: List[FileDTO]=None):
        """InputFilesDTO - a model defined in OpenAPI

        :param log_files: The log_files of this InputFilesDTO.
        :param reference_files: The reference_files of this InputFilesDTO.
        :param terminology: The terminology of this InputFilesDTO.
        :param tm: The tm of this InputFilesDTO.
        :param work_files: The work_files of this InputFilesDTO.
        """
        self.openapi_types = {
            'log_files': List[FileDTO],
            'reference_files': List[FileDTO],
            'terminology': List[FileDTO],
            'tm': List[FileDTO],
            'work_files': List[FileDTO]
        }

        self.attribute_map = {
            'log_files': 'logFiles',
            'reference_files': 'referenceFiles',
            'terminology': 'terminology',
            'tm': 'tm',
            'work_files': 'workFiles'
        }

        self._log_files = log_files
        self._reference_files = reference_files
        self._terminology = terminology
        self._tm = tm
        self._work_files = work_files

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputFilesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputFilesDTO of this InputFilesDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_files(self):
        """Gets the log_files of this InputFilesDTO.


        :return: The log_files of this InputFilesDTO.
        :rtype: List[FileDTO]
        """
        return self._log_files

    @log_files.setter
    def log_files(self, log_files):
        """Sets the log_files of this InputFilesDTO.


        :param log_files: The log_files of this InputFilesDTO.
        :type log_files: List[FileDTO]
        """

        self._log_files = log_files

    @property
    def reference_files(self):
        """Gets the reference_files of this InputFilesDTO.


        :return: The reference_files of this InputFilesDTO.
        :rtype: List[FileDTO]
        """
        return self._reference_files

    @reference_files.setter
    def reference_files(self, reference_files):
        """Sets the reference_files of this InputFilesDTO.


        :param reference_files: The reference_files of this InputFilesDTO.
        :type reference_files: List[FileDTO]
        """

        self._reference_files = reference_files

    @property
    def terminology(self):
        """Gets the terminology of this InputFilesDTO.


        :return: The terminology of this InputFilesDTO.
        :rtype: List[FileDTO]
        """
        return self._terminology

    @terminology.setter
    def terminology(self, terminology):
        """Sets the terminology of this InputFilesDTO.


        :param terminology: The terminology of this InputFilesDTO.
        :type terminology: List[FileDTO]
        """

        self._terminology = terminology

    @property
    def tm(self):
        """Gets the tm of this InputFilesDTO.


        :return: The tm of this InputFilesDTO.
        :rtype: List[FileDTO]
        """
        return self._tm

    @tm.setter
    def tm(self, tm):
        """Sets the tm of this InputFilesDTO.


        :param tm: The tm of this InputFilesDTO.
        :type tm: List[FileDTO]
        """

        self._tm = tm

    @property
    def work_files(self):
        """Gets the work_files of this InputFilesDTO.


        :return: The work_files of this InputFilesDTO.
        :rtype: List[FileDTO]
        """
        return self._work_files

    @work_files.setter
    def work_files(self, work_files):
        """Sets the work_files of this InputFilesDTO.


        :param work_files: The work_files of this InputFilesDTO.
        :type work_files: List[FileDTO]
        """

        self._work_files = work_files
