# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskJobsDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_count: int=None, job_ids: List[int]=None):
        """TaskJobsDTO - a model defined in OpenAPI

        :param job_count: The job_count of this TaskJobsDTO.
        :param job_ids: The job_ids of this TaskJobsDTO.
        """
        self.openapi_types = {
            'job_count': int,
            'job_ids': List[int]
        }

        self.attribute_map = {
            'job_count': 'jobCount',
            'job_ids': 'jobIds'
        }

        self._job_count = job_count
        self._job_ids = job_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskJobsDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskJobsDTO of this TaskJobsDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_count(self):
        """Gets the job_count of this TaskJobsDTO.


        :return: The job_count of this TaskJobsDTO.
        :rtype: int
        """
        return self._job_count

    @job_count.setter
    def job_count(self, job_count):
        """Sets the job_count of this TaskJobsDTO.


        :param job_count: The job_count of this TaskJobsDTO.
        :type job_count: int
        """

        self._job_count = job_count

    @property
    def job_ids(self):
        """Gets the job_ids of this TaskJobsDTO.


        :return: The job_ids of this TaskJobsDTO.
        :rtype: List[int]
        """
        return self._job_ids

    @job_ids.setter
    def job_ids(self, job_ids):
        """Sets the job_ids of this TaskJobsDTO.


        :param job_ids: The job_ids of this TaskJobsDTO.
        :type job_ids: List[int]
        """

        self._job_ids = job_ids
