# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.external_info import ExternalInfo
from openapi_server import util


class AddJobToProcessDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_info: ExternalInfo=None, external_project_id: str=None, previous_step_number: int=None, step_type_id: str=None):
        """AddJobToProcessDTO - a model defined in OpenAPI

        :param external_info: The external_info of this AddJobToProcessDTO.
        :param external_project_id: The external_project_id of this AddJobToProcessDTO.
        :param previous_step_number: The previous_step_number of this AddJobToProcessDTO.
        :param step_type_id: The step_type_id of this AddJobToProcessDTO.
        """
        self.openapi_types = {
            'external_info': ExternalInfo,
            'external_project_id': str,
            'previous_step_number': int,
            'step_type_id': str
        }

        self.attribute_map = {
            'external_info': 'externalInfo',
            'external_project_id': 'externalProjectId',
            'previous_step_number': 'previousStepNumber',
            'step_type_id': 'stepTypeId'
        }

        self._external_info = external_info
        self._external_project_id = external_project_id
        self._previous_step_number = previous_step_number
        self._step_type_id = step_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddJobToProcessDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddJobToProcessDTO of this AddJobToProcessDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_info(self):
        """Gets the external_info of this AddJobToProcessDTO.


        :return: The external_info of this AddJobToProcessDTO.
        :rtype: ExternalInfo
        """
        return self._external_info

    @external_info.setter
    def external_info(self, external_info):
        """Sets the external_info of this AddJobToProcessDTO.


        :param external_info: The external_info of this AddJobToProcessDTO.
        :type external_info: ExternalInfo
        """

        self._external_info = external_info

    @property
    def external_project_id(self):
        """Gets the external_project_id of this AddJobToProcessDTO.


        :return: The external_project_id of this AddJobToProcessDTO.
        :rtype: str
        """
        return self._external_project_id

    @external_project_id.setter
    def external_project_id(self, external_project_id):
        """Sets the external_project_id of this AddJobToProcessDTO.


        :param external_project_id: The external_project_id of this AddJobToProcessDTO.
        :type external_project_id: str
        """

        self._external_project_id = external_project_id

    @property
    def previous_step_number(self):
        """Gets the previous_step_number of this AddJobToProcessDTO.


        :return: The previous_step_number of this AddJobToProcessDTO.
        :rtype: int
        """
        return self._previous_step_number

    @previous_step_number.setter
    def previous_step_number(self, previous_step_number):
        """Sets the previous_step_number of this AddJobToProcessDTO.


        :param previous_step_number: The previous_step_number of this AddJobToProcessDTO.
        :type previous_step_number: int
        """

        self._previous_step_number = previous_step_number

    @property
    def step_type_id(self):
        """Gets the step_type_id of this AddJobToProcessDTO.


        :return: The step_type_id of this AddJobToProcessDTO.
        :rtype: str
        """
        return self._step_type_id

    @step_type_id.setter
    def step_type_id(self, step_type_id):
        """Sets the step_type_id of this AddJobToProcessDTO.


        :param step_type_id: The step_type_id of this AddJobToProcessDTO.
        :type step_type_id: str
        """

        self._step_type_id = step_type_id
