# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.column_dto import ColumnDTO
from openapi_server.models.order_dto import OrderDTO
from openapi_server.models.permissions_dto import PermissionsDTO
from openapi_server.models.settings_dto import SettingsDTO
from openapi_server import util


class ViewWithIdDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[ColumnDTO]=None, order: OrderDTO=None, permissions: PermissionsDTO=None, settings: SettingsDTO=None, view_id: int=None):
        """ViewWithIdDTO - a model defined in OpenAPI

        :param columns: The columns of this ViewWithIdDTO.
        :param order: The order of this ViewWithIdDTO.
        :param permissions: The permissions of this ViewWithIdDTO.
        :param settings: The settings of this ViewWithIdDTO.
        :param view_id: The view_id of this ViewWithIdDTO.
        """
        self.openapi_types = {
            'columns': List[ColumnDTO],
            'order': OrderDTO,
            'permissions': PermissionsDTO,
            'settings': SettingsDTO,
            'view_id': int
        }

        self.attribute_map = {
            'columns': 'columns',
            'order': 'order',
            'permissions': 'permissions',
            'settings': 'settings',
            'view_id': 'viewId'
        }

        self._columns = columns
        self._order = order
        self._permissions = permissions
        self._settings = settings
        self._view_id = view_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ViewWithIdDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ViewWithIdDTO of this ViewWithIdDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this ViewWithIdDTO.


        :return: The columns of this ViewWithIdDTO.
        :rtype: List[ColumnDTO]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this ViewWithIdDTO.


        :param columns: The columns of this ViewWithIdDTO.
        :type columns: List[ColumnDTO]
        """

        self._columns = columns

    @property
    def order(self):
        """Gets the order of this ViewWithIdDTO.


        :return: The order of this ViewWithIdDTO.
        :rtype: OrderDTO
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this ViewWithIdDTO.


        :param order: The order of this ViewWithIdDTO.
        :type order: OrderDTO
        """

        self._order = order

    @property
    def permissions(self):
        """Gets the permissions of this ViewWithIdDTO.


        :return: The permissions of this ViewWithIdDTO.
        :rtype: PermissionsDTO
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this ViewWithIdDTO.


        :param permissions: The permissions of this ViewWithIdDTO.
        :type permissions: PermissionsDTO
        """

        self._permissions = permissions

    @property
    def settings(self):
        """Gets the settings of this ViewWithIdDTO.


        :return: The settings of this ViewWithIdDTO.
        :rtype: SettingsDTO
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this ViewWithIdDTO.


        :param settings: The settings of this ViewWithIdDTO.
        :type settings: SettingsDTO
        """

        self._settings = settings

    @property
    def view_id(self):
        """Gets the view_id of this ViewWithIdDTO.


        :return: The view_id of this ViewWithIdDTO.
        :rtype: int
        """
        return self._view_id

    @view_id.setter
    def view_id(self, view_id):
        """Sets the view_id of this ViewWithIdDTO.


        :param view_id: The view_id of this ViewWithIdDTO.
        :type view_id: int
        """

        self._view_id = view_id
