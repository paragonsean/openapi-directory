# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactsDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_ids: list[int]=None, primary_id: int=None, send_back_to_id: int=None):
        """ContactsDTO - a model defined in OpenAPI

        :param additional_ids: The additional_ids of this ContactsDTO.
        :param primary_id: The primary_id of this ContactsDTO.
        :param send_back_to_id: The send_back_to_id of this ContactsDTO.
        """
        self.openapi_types = {
            'additional_ids': list[int],
            'primary_id': int,
            'send_back_to_id': int
        }

        self.attribute_map = {
            'additional_ids': 'additionalIds',
            'primary_id': 'primaryId',
            'send_back_to_id': 'sendBackToId'
        }

        self._additional_ids = additional_ids
        self._primary_id = primary_id
        self._send_back_to_id = send_back_to_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactsDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactsDTO of this ContactsDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_ids(self):
        """Gets the additional_ids of this ContactsDTO.


        :return: The additional_ids of this ContactsDTO.
        :rtype: list[int]
        """
        return self._additional_ids

    @additional_ids.setter
    def additional_ids(self, additional_ids):
        """Sets the additional_ids of this ContactsDTO.


        :param additional_ids: The additional_ids of this ContactsDTO.
        :type additional_ids: list[int]
        """

        self._additional_ids = additional_ids

    @property
    def primary_id(self):
        """Gets the primary_id of this ContactsDTO.


        :return: The primary_id of this ContactsDTO.
        :rtype: int
        """
        return self._primary_id

    @primary_id.setter
    def primary_id(self, primary_id):
        """Sets the primary_id of this ContactsDTO.


        :param primary_id: The primary_id of this ContactsDTO.
        :type primary_id: int
        """

        self._primary_id = primary_id

    @property
    def send_back_to_id(self):
        """Gets the send_back_to_id of this ContactsDTO.


        :return: The send_back_to_id of this ContactsDTO.
        :rtype: int
        """
        return self._send_back_to_id

    @send_back_to_id.setter
    def send_back_to_id(self, send_back_to_id):
        """Sets the send_back_to_id of this ContactsDTO.


        :param send_back_to_id: The send_back_to_id of this ContactsDTO.
        :type send_back_to_id: int
        """

        self._send_back_to_id = send_back_to_id
