# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.time_dto import TimeDTO
from openapi_server import util


class PaymentDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, notes: str=None, payment_date: TimeDTO=None, payment_method_id: int=None):
        """PaymentDTO - a model defined in OpenAPI

        :param amount: The amount of this PaymentDTO.
        :param notes: The notes of this PaymentDTO.
        :param payment_date: The payment_date of this PaymentDTO.
        :param payment_method_id: The payment_method_id of this PaymentDTO.
        """
        self.openapi_types = {
            'amount': float,
            'notes': str,
            'payment_date': TimeDTO,
            'payment_method_id': int
        }

        self.attribute_map = {
            'amount': 'amount',
            'notes': 'notes',
            'payment_date': 'paymentDate',
            'payment_method_id': 'paymentMethodId'
        }

        self._amount = amount
        self._notes = notes
        self._payment_date = payment_date
        self._payment_method_id = payment_method_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentDTO of this PaymentDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this PaymentDTO.


        :return: The amount of this PaymentDTO.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this PaymentDTO.


        :param amount: The amount of this PaymentDTO.
        :type amount: float
        """

        self._amount = amount

    @property
    def notes(self):
        """Gets the notes of this PaymentDTO.


        :return: The notes of this PaymentDTO.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this PaymentDTO.


        :param notes: The notes of this PaymentDTO.
        :type notes: str
        """

        self._notes = notes

    @property
    def payment_date(self):
        """Gets the payment_date of this PaymentDTO.


        :return: The payment_date of this PaymentDTO.
        :rtype: TimeDTO
        """
        return self._payment_date

    @payment_date.setter
    def payment_date(self, payment_date):
        """Sets the payment_date of this PaymentDTO.


        :param payment_date: The payment_date of this PaymentDTO.
        :type payment_date: TimeDTO
        """

        self._payment_date = payment_date

    @property
    def payment_method_id(self):
        """Gets the payment_method_id of this PaymentDTO.


        :return: The payment_method_id of this PaymentDTO.
        :rtype: int
        """
        return self._payment_method_id

    @payment_method_id.setter
    def payment_method_id(self, payment_method_id):
        """Sets the payment_method_id of this PaymentDTO.


        :param payment_method_id: The payment_method_id of this PaymentDTO.
        :type payment_method_id: int
        """

        self._payment_method_id = payment_method_id
