# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VolumeDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, unit_id: int=None, value: float=None):
        """VolumeDTO - a model defined in OpenAPI

        :param unit_id: The unit_id of this VolumeDTO.
        :param value: The value of this VolumeDTO.
        """
        self.openapi_types = {
            'unit_id': int,
            'value': float
        }

        self.attribute_map = {
            'unit_id': 'unitId',
            'value': 'value'
        }

        self._unit_id = unit_id
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VolumeDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VolumeDTO of this VolumeDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def unit_id(self):
        """Gets the unit_id of this VolumeDTO.


        :return: The unit_id of this VolumeDTO.
        :rtype: int
        """
        return self._unit_id

    @unit_id.setter
    def unit_id(self, unit_id):
        """Sets the unit_id of this VolumeDTO.


        :param unit_id: The unit_id of this VolumeDTO.
        :type unit_id: int
        """

        self._unit_id = unit_id

    @property
    def value(self):
        """Gets the value of this VolumeDTO.


        :return: The value of this VolumeDTO.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this VolumeDTO.


        :param value: The value of this VolumeDTO.
        :type value: float
        """

        self._value = value
