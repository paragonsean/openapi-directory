# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobLanguageCombinationDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_language_id: int=None, specialization_id: int=None, target_language_id: int=None):
        """JobLanguageCombinationDto - a model defined in OpenAPI

        :param source_language_id: The source_language_id of this JobLanguageCombinationDto.
        :param specialization_id: The specialization_id of this JobLanguageCombinationDto.
        :param target_language_id: The target_language_id of this JobLanguageCombinationDto.
        """
        self.openapi_types = {
            'source_language_id': int,
            'specialization_id': int,
            'target_language_id': int
        }

        self.attribute_map = {
            'source_language_id': 'sourceLanguageId',
            'specialization_id': 'specializationId',
            'target_language_id': 'targetLanguageId'
        }

        self._source_language_id = source_language_id
        self._specialization_id = specialization_id
        self._target_language_id = target_language_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobLanguageCombinationDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobLanguageCombinationDto of this JobLanguageCombinationDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_language_id(self):
        """Gets the source_language_id of this JobLanguageCombinationDto.


        :return: The source_language_id of this JobLanguageCombinationDto.
        :rtype: int
        """
        return self._source_language_id

    @source_language_id.setter
    def source_language_id(self, source_language_id):
        """Sets the source_language_id of this JobLanguageCombinationDto.


        :param source_language_id: The source_language_id of this JobLanguageCombinationDto.
        :type source_language_id: int
        """

        self._source_language_id = source_language_id

    @property
    def specialization_id(self):
        """Gets the specialization_id of this JobLanguageCombinationDto.


        :return: The specialization_id of this JobLanguageCombinationDto.
        :rtype: int
        """
        return self._specialization_id

    @specialization_id.setter
    def specialization_id(self, specialization_id):
        """Sets the specialization_id of this JobLanguageCombinationDto.


        :param specialization_id: The specialization_id of this JobLanguageCombinationDto.
        :type specialization_id: int
        """

        self._specialization_id = specialization_id

    @property
    def target_language_id(self):
        """Gets the target_language_id of this JobLanguageCombinationDto.


        :return: The target_language_id of this JobLanguageCombinationDto.
        :rtype: int
        """
        return self._target_language_id

    @target_language_id.setter
    def target_language_id(self, target_language_id):
        """Sets the target_language_id of this JobLanguageCombinationDto.


        :param target_language_id: The target_language_id of this JobLanguageCombinationDto.
        :type target_language_id: int
        """

        self._target_language_id = target_language_id
