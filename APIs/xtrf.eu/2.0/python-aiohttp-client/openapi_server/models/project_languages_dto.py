# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.language_combination_dto import LanguageCombinationDTO
from openapi_server import util


class ProjectLanguagesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language_combinations: List[LanguageCombinationDTO]=None, source_language_id: int=None, specialization_id: int=None, target_language_ids: List[int]=None):
        """ProjectLanguagesDTO - a model defined in OpenAPI

        :param language_combinations: The language_combinations of this ProjectLanguagesDTO.
        :param source_language_id: The source_language_id of this ProjectLanguagesDTO.
        :param specialization_id: The specialization_id of this ProjectLanguagesDTO.
        :param target_language_ids: The target_language_ids of this ProjectLanguagesDTO.
        """
        self.openapi_types = {
            'language_combinations': List[LanguageCombinationDTO],
            'source_language_id': int,
            'specialization_id': int,
            'target_language_ids': List[int]
        }

        self.attribute_map = {
            'language_combinations': 'languageCombinations',
            'source_language_id': 'sourceLanguageId',
            'specialization_id': 'specializationId',
            'target_language_ids': 'targetLanguageIds'
        }

        self._language_combinations = language_combinations
        self._source_language_id = source_language_id
        self._specialization_id = specialization_id
        self._target_language_ids = target_language_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectLanguagesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectLanguagesDTO of this ProjectLanguagesDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language_combinations(self):
        """Gets the language_combinations of this ProjectLanguagesDTO.


        :return: The language_combinations of this ProjectLanguagesDTO.
        :rtype: List[LanguageCombinationDTO]
        """
        return self._language_combinations

    @language_combinations.setter
    def language_combinations(self, language_combinations):
        """Sets the language_combinations of this ProjectLanguagesDTO.


        :param language_combinations: The language_combinations of this ProjectLanguagesDTO.
        :type language_combinations: List[LanguageCombinationDTO]
        """

        self._language_combinations = language_combinations

    @property
    def source_language_id(self):
        """Gets the source_language_id of this ProjectLanguagesDTO.


        :return: The source_language_id of this ProjectLanguagesDTO.
        :rtype: int
        """
        return self._source_language_id

    @source_language_id.setter
    def source_language_id(self, source_language_id):
        """Sets the source_language_id of this ProjectLanguagesDTO.


        :param source_language_id: The source_language_id of this ProjectLanguagesDTO.
        :type source_language_id: int
        """

        self._source_language_id = source_language_id

    @property
    def specialization_id(self):
        """Gets the specialization_id of this ProjectLanguagesDTO.


        :return: The specialization_id of this ProjectLanguagesDTO.
        :rtype: int
        """
        return self._specialization_id

    @specialization_id.setter
    def specialization_id(self, specialization_id):
        """Sets the specialization_id of this ProjectLanguagesDTO.


        :param specialization_id: The specialization_id of this ProjectLanguagesDTO.
        :type specialization_id: int
        """

        self._specialization_id = specialization_id

    @property
    def target_language_ids(self):
        """Gets the target_language_ids of this ProjectLanguagesDTO.


        :return: The target_language_ids of this ProjectLanguagesDTO.
        :rtype: List[int]
        """
        return self._target_language_ids

    @target_language_ids.setter
    def target_language_ids(self, target_language_ids):
        """Sets the target_language_ids of this ProjectLanguagesDTO.


        :param target_language_ids: The target_language_ids of this ProjectLanguagesDTO.
        :type target_language_ids: List[int]
        """

        self._target_language_ids = target_language_ids
