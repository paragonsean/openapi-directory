# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_dto import AccessDTO
from openapi_server.models.last_modification_dto import LastModificationDTO
from openapi_server import util


class ViewBriefDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: AccessDTO=None, current: bool=None, id: int=None, last_modification: LastModificationDTO=None, mine: bool=None, name: str=None, owner: str=None):
        """ViewBriefDTO - a model defined in OpenAPI

        :param access: The access of this ViewBriefDTO.
        :param current: The current of this ViewBriefDTO.
        :param id: The id of this ViewBriefDTO.
        :param last_modification: The last_modification of this ViewBriefDTO.
        :param mine: The mine of this ViewBriefDTO.
        :param name: The name of this ViewBriefDTO.
        :param owner: The owner of this ViewBriefDTO.
        """
        self.openapi_types = {
            'access': AccessDTO,
            'current': bool,
            'id': int,
            'last_modification': LastModificationDTO,
            'mine': bool,
            'name': str,
            'owner': str
        }

        self.attribute_map = {
            'access': 'access',
            'current': 'current',
            'id': 'id',
            'last_modification': 'lastModification',
            'mine': 'mine',
            'name': 'name',
            'owner': 'owner'
        }

        self._access = access
        self._current = current
        self._id = id
        self._last_modification = last_modification
        self._mine = mine
        self._name = name
        self._owner = owner

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ViewBriefDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ViewBriefDTO of this ViewBriefDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this ViewBriefDTO.


        :return: The access of this ViewBriefDTO.
        :rtype: AccessDTO
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this ViewBriefDTO.


        :param access: The access of this ViewBriefDTO.
        :type access: AccessDTO
        """

        self._access = access

    @property
    def current(self):
        """Gets the current of this ViewBriefDTO.


        :return: The current of this ViewBriefDTO.
        :rtype: bool
        """
        return self._current

    @current.setter
    def current(self, current):
        """Sets the current of this ViewBriefDTO.


        :param current: The current of this ViewBriefDTO.
        :type current: bool
        """

        self._current = current

    @property
    def id(self):
        """Gets the id of this ViewBriefDTO.


        :return: The id of this ViewBriefDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ViewBriefDTO.


        :param id: The id of this ViewBriefDTO.
        :type id: int
        """

        self._id = id

    @property
    def last_modification(self):
        """Gets the last_modification of this ViewBriefDTO.


        :return: The last_modification of this ViewBriefDTO.
        :rtype: LastModificationDTO
        """
        return self._last_modification

    @last_modification.setter
    def last_modification(self, last_modification):
        """Sets the last_modification of this ViewBriefDTO.


        :param last_modification: The last_modification of this ViewBriefDTO.
        :type last_modification: LastModificationDTO
        """

        self._last_modification = last_modification

    @property
    def mine(self):
        """Gets the mine of this ViewBriefDTO.


        :return: The mine of this ViewBriefDTO.
        :rtype: bool
        """
        return self._mine

    @mine.setter
    def mine(self, mine):
        """Sets the mine of this ViewBriefDTO.


        :param mine: The mine of this ViewBriefDTO.
        :type mine: bool
        """

        self._mine = mine

    @property
    def name(self):
        """Gets the name of this ViewBriefDTO.


        :return: The name of this ViewBriefDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ViewBriefDTO.


        :param name: The name of this ViewBriefDTO.
        :type name: str
        """

        self._name = name

    @property
    def owner(self):
        """Gets the owner of this ViewBriefDTO.


        :return: The owner of this ViewBriefDTO.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this ViewBriefDTO.


        :param owner: The owner of this ViewBriefDTO.
        :type owner: str
        """

        self._owner = owner
