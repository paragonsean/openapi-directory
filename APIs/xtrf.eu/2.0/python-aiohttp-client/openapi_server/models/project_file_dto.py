# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.language_relation_dto import LanguageRelationDto
from openapi_server.models.project_file_added_by_dto import ProjectFileAddedByDto
from openapi_server.models.remote_cat_tool_references_dto import RemoteCATToolReferencesDto
from openapi_server import util


class ProjectFileDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added_by: ProjectFileAddedByDto=None, added_in_job: str=None, added_in_last_step: bool=None, added_in_step: int=None, category_key: str=None, id: str=None, is_accepted: bool=None, is_link: bool=None, is_remote: bool=None, language_relation: LanguageRelationDto=None, last_modified_on: int=None, name: str=None, remote_cat_tool_references: RemoteCATToolReferencesDto=None, shared_with_jobs: list[str]=None, size: int=None, url: str=None):
        """ProjectFileDto - a model defined in OpenAPI

        :param added_by: The added_by of this ProjectFileDto.
        :param added_in_job: The added_in_job of this ProjectFileDto.
        :param added_in_last_step: The added_in_last_step of this ProjectFileDto.
        :param added_in_step: The added_in_step of this ProjectFileDto.
        :param category_key: The category_key of this ProjectFileDto.
        :param id: The id of this ProjectFileDto.
        :param is_accepted: The is_accepted of this ProjectFileDto.
        :param is_link: The is_link of this ProjectFileDto.
        :param is_remote: The is_remote of this ProjectFileDto.
        :param language_relation: The language_relation of this ProjectFileDto.
        :param last_modified_on: The last_modified_on of this ProjectFileDto.
        :param name: The name of this ProjectFileDto.
        :param remote_cat_tool_references: The remote_cat_tool_references of this ProjectFileDto.
        :param shared_with_jobs: The shared_with_jobs of this ProjectFileDto.
        :param size: The size of this ProjectFileDto.
        :param url: The url of this ProjectFileDto.
        """
        self.openapi_types = {
            'added_by': ProjectFileAddedByDto,
            'added_in_job': str,
            'added_in_last_step': bool,
            'added_in_step': int,
            'category_key': str,
            'id': str,
            'is_accepted': bool,
            'is_link': bool,
            'is_remote': bool,
            'language_relation': LanguageRelationDto,
            'last_modified_on': int,
            'name': str,
            'remote_cat_tool_references': RemoteCATToolReferencesDto,
            'shared_with_jobs': list[str],
            'size': int,
            'url': str
        }

        self.attribute_map = {
            'added_by': 'addedBy',
            'added_in_job': 'addedInJob',
            'added_in_last_step': 'addedInLastStep',
            'added_in_step': 'addedInStep',
            'category_key': 'categoryKey',
            'id': 'id',
            'is_accepted': 'isAccepted',
            'is_link': 'isLink',
            'is_remote': 'isRemote',
            'language_relation': 'languageRelation',
            'last_modified_on': 'lastModifiedOn',
            'name': 'name',
            'remote_cat_tool_references': 'remoteCATToolReferences',
            'shared_with_jobs': 'sharedWithJobs',
            'size': 'size',
            'url': 'url'
        }

        self._added_by = added_by
        self._added_in_job = added_in_job
        self._added_in_last_step = added_in_last_step
        self._added_in_step = added_in_step
        self._category_key = category_key
        self._id = id
        self._is_accepted = is_accepted
        self._is_link = is_link
        self._is_remote = is_remote
        self._language_relation = language_relation
        self._last_modified_on = last_modified_on
        self._name = name
        self._remote_cat_tool_references = remote_cat_tool_references
        self._shared_with_jobs = shared_with_jobs
        self._size = size
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectFileDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectFileDto of this ProjectFileDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added_by(self):
        """Gets the added_by of this ProjectFileDto.


        :return: The added_by of this ProjectFileDto.
        :rtype: ProjectFileAddedByDto
        """
        return self._added_by

    @added_by.setter
    def added_by(self, added_by):
        """Sets the added_by of this ProjectFileDto.


        :param added_by: The added_by of this ProjectFileDto.
        :type added_by: ProjectFileAddedByDto
        """

        self._added_by = added_by

    @property
    def added_in_job(self):
        """Gets the added_in_job of this ProjectFileDto.


        :return: The added_in_job of this ProjectFileDto.
        :rtype: str
        """
        return self._added_in_job

    @added_in_job.setter
    def added_in_job(self, added_in_job):
        """Sets the added_in_job of this ProjectFileDto.


        :param added_in_job: The added_in_job of this ProjectFileDto.
        :type added_in_job: str
        """

        self._added_in_job = added_in_job

    @property
    def added_in_last_step(self):
        """Gets the added_in_last_step of this ProjectFileDto.


        :return: The added_in_last_step of this ProjectFileDto.
        :rtype: bool
        """
        return self._added_in_last_step

    @added_in_last_step.setter
    def added_in_last_step(self, added_in_last_step):
        """Sets the added_in_last_step of this ProjectFileDto.


        :param added_in_last_step: The added_in_last_step of this ProjectFileDto.
        :type added_in_last_step: bool
        """

        self._added_in_last_step = added_in_last_step

    @property
    def added_in_step(self):
        """Gets the added_in_step of this ProjectFileDto.


        :return: The added_in_step of this ProjectFileDto.
        :rtype: int
        """
        return self._added_in_step

    @added_in_step.setter
    def added_in_step(self, added_in_step):
        """Sets the added_in_step of this ProjectFileDto.


        :param added_in_step: The added_in_step of this ProjectFileDto.
        :type added_in_step: int
        """

        self._added_in_step = added_in_step

    @property
    def category_key(self):
        """Gets the category_key of this ProjectFileDto.


        :return: The category_key of this ProjectFileDto.
        :rtype: str
        """
        return self._category_key

    @category_key.setter
    def category_key(self, category_key):
        """Sets the category_key of this ProjectFileDto.


        :param category_key: The category_key of this ProjectFileDto.
        :type category_key: str
        """

        self._category_key = category_key

    @property
    def id(self):
        """Gets the id of this ProjectFileDto.


        :return: The id of this ProjectFileDto.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProjectFileDto.


        :param id: The id of this ProjectFileDto.
        :type id: str
        """

        self._id = id

    @property
    def is_accepted(self):
        """Gets the is_accepted of this ProjectFileDto.


        :return: The is_accepted of this ProjectFileDto.
        :rtype: bool
        """
        return self._is_accepted

    @is_accepted.setter
    def is_accepted(self, is_accepted):
        """Sets the is_accepted of this ProjectFileDto.


        :param is_accepted: The is_accepted of this ProjectFileDto.
        :type is_accepted: bool
        """

        self._is_accepted = is_accepted

    @property
    def is_link(self):
        """Gets the is_link of this ProjectFileDto.


        :return: The is_link of this ProjectFileDto.
        :rtype: bool
        """
        return self._is_link

    @is_link.setter
    def is_link(self, is_link):
        """Sets the is_link of this ProjectFileDto.


        :param is_link: The is_link of this ProjectFileDto.
        :type is_link: bool
        """

        self._is_link = is_link

    @property
    def is_remote(self):
        """Gets the is_remote of this ProjectFileDto.


        :return: The is_remote of this ProjectFileDto.
        :rtype: bool
        """
        return self._is_remote

    @is_remote.setter
    def is_remote(self, is_remote):
        """Sets the is_remote of this ProjectFileDto.


        :param is_remote: The is_remote of this ProjectFileDto.
        :type is_remote: bool
        """

        self._is_remote = is_remote

    @property
    def language_relation(self):
        """Gets the language_relation of this ProjectFileDto.


        :return: The language_relation of this ProjectFileDto.
        :rtype: LanguageRelationDto
        """
        return self._language_relation

    @language_relation.setter
    def language_relation(self, language_relation):
        """Sets the language_relation of this ProjectFileDto.


        :param language_relation: The language_relation of this ProjectFileDto.
        :type language_relation: LanguageRelationDto
        """

        self._language_relation = language_relation

    @property
    def last_modified_on(self):
        """Gets the last_modified_on of this ProjectFileDto.


        :return: The last_modified_on of this ProjectFileDto.
        :rtype: int
        """
        return self._last_modified_on

    @last_modified_on.setter
    def last_modified_on(self, last_modified_on):
        """Sets the last_modified_on of this ProjectFileDto.


        :param last_modified_on: The last_modified_on of this ProjectFileDto.
        :type last_modified_on: int
        """

        self._last_modified_on = last_modified_on

    @property
    def name(self):
        """Gets the name of this ProjectFileDto.


        :return: The name of this ProjectFileDto.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectFileDto.


        :param name: The name of this ProjectFileDto.
        :type name: str
        """

        self._name = name

    @property
    def remote_cat_tool_references(self):
        """Gets the remote_cat_tool_references of this ProjectFileDto.


        :return: The remote_cat_tool_references of this ProjectFileDto.
        :rtype: RemoteCATToolReferencesDto
        """
        return self._remote_cat_tool_references

    @remote_cat_tool_references.setter
    def remote_cat_tool_references(self, remote_cat_tool_references):
        """Sets the remote_cat_tool_references of this ProjectFileDto.


        :param remote_cat_tool_references: The remote_cat_tool_references of this ProjectFileDto.
        :type remote_cat_tool_references: RemoteCATToolReferencesDto
        """

        self._remote_cat_tool_references = remote_cat_tool_references

    @property
    def shared_with_jobs(self):
        """Gets the shared_with_jobs of this ProjectFileDto.


        :return: The shared_with_jobs of this ProjectFileDto.
        :rtype: list[str]
        """
        return self._shared_with_jobs

    @shared_with_jobs.setter
    def shared_with_jobs(self, shared_with_jobs):
        """Sets the shared_with_jobs of this ProjectFileDto.


        :param shared_with_jobs: The shared_with_jobs of this ProjectFileDto.
        :type shared_with_jobs: list[str]
        """

        self._shared_with_jobs = shared_with_jobs

    @property
    def size(self):
        """Gets the size of this ProjectFileDto.


        :return: The size of this ProjectFileDto.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ProjectFileDto.


        :param size: The size of this ProjectFileDto.
        :type size: int
        """

        self._size = size

    @property
    def url(self):
        """Gets the url of this ProjectFileDto.


        :return: The url of this ProjectFileDto.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ProjectFileDto.


        :param url: The url of this ProjectFileDto.
        :type url: str
        """

        self._url = url
