# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomerInvoiceCreateDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prepayments_ids: List[int]=None, tasks_ids: List[int]=None, type: str=None):
        """CustomerInvoiceCreateDTO - a model defined in OpenAPI

        :param prepayments_ids: The prepayments_ids of this CustomerInvoiceCreateDTO.
        :param tasks_ids: The tasks_ids of this CustomerInvoiceCreateDTO.
        :param type: The type of this CustomerInvoiceCreateDTO.
        """
        self.openapi_types = {
            'prepayments_ids': List[int],
            'tasks_ids': List[int],
            'type': str
        }

        self.attribute_map = {
            'prepayments_ids': 'prepaymentsIds',
            'tasks_ids': 'tasksIds',
            'type': 'type'
        }

        self._prepayments_ids = prepayments_ids
        self._tasks_ids = tasks_ids
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerInvoiceCreateDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerInvoiceCreateDTO of this CustomerInvoiceCreateDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prepayments_ids(self):
        """Gets the prepayments_ids of this CustomerInvoiceCreateDTO.


        :return: The prepayments_ids of this CustomerInvoiceCreateDTO.
        :rtype: List[int]
        """
        return self._prepayments_ids

    @prepayments_ids.setter
    def prepayments_ids(self, prepayments_ids):
        """Sets the prepayments_ids of this CustomerInvoiceCreateDTO.


        :param prepayments_ids: The prepayments_ids of this CustomerInvoiceCreateDTO.
        :type prepayments_ids: List[int]
        """

        self._prepayments_ids = prepayments_ids

    @property
    def tasks_ids(self):
        """Gets the tasks_ids of this CustomerInvoiceCreateDTO.


        :return: The tasks_ids of this CustomerInvoiceCreateDTO.
        :rtype: List[int]
        """
        return self._tasks_ids

    @tasks_ids.setter
    def tasks_ids(self, tasks_ids):
        """Sets the tasks_ids of this CustomerInvoiceCreateDTO.


        :param tasks_ids: The tasks_ids of this CustomerInvoiceCreateDTO.
        :type tasks_ids: List[int]
        """

        self._tasks_ids = tasks_ids

    @property
    def type(self):
        """Gets the type of this CustomerInvoiceCreateDTO.


        :return: The type of this CustomerInvoiceCreateDTO.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CustomerInvoiceCreateDTO.


        :param type: The type of this CustomerInvoiceCreateDTO.
        :type type: str
        """
        allowed_values = ["FINAL", "DRAFT", "CREDIT_NOTE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
