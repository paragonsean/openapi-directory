# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_dto import FileDTO
from openapi_server.models.input_files_dto import InputFilesDTO
from openapi_server.models.job_dto import JobDTO
from openapi_server import util


class TaskFilesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bundles: Dict[str, List[FileDTO]]=None, input_files: InputFilesDTO=None, jobs: List[JobDTO]=None, output_files: List[FileDTO]=None):
        """TaskFilesDTO - a model defined in OpenAPI

        :param bundles: The bundles of this TaskFilesDTO.
        :param input_files: The input_files of this TaskFilesDTO.
        :param jobs: The jobs of this TaskFilesDTO.
        :param output_files: The output_files of this TaskFilesDTO.
        """
        self.openapi_types = {
            'bundles': Dict[str, List[FileDTO]],
            'input_files': InputFilesDTO,
            'jobs': List[JobDTO],
            'output_files': List[FileDTO]
        }

        self.attribute_map = {
            'bundles': 'bundles',
            'input_files': 'inputFiles',
            'jobs': 'jobs',
            'output_files': 'outputFiles'
        }

        self._bundles = bundles
        self._input_files = input_files
        self._jobs = jobs
        self._output_files = output_files

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskFilesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskFilesDTO of this TaskFilesDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundles(self):
        """Gets the bundles of this TaskFilesDTO.


        :return: The bundles of this TaskFilesDTO.
        :rtype: Dict[str, List[FileDTO]]
        """
        return self._bundles

    @bundles.setter
    def bundles(self, bundles):
        """Sets the bundles of this TaskFilesDTO.


        :param bundles: The bundles of this TaskFilesDTO.
        :type bundles: Dict[str, List[FileDTO]]
        """

        self._bundles = bundles

    @property
    def input_files(self):
        """Gets the input_files of this TaskFilesDTO.


        :return: The input_files of this TaskFilesDTO.
        :rtype: InputFilesDTO
        """
        return self._input_files

    @input_files.setter
    def input_files(self, input_files):
        """Sets the input_files of this TaskFilesDTO.


        :param input_files: The input_files of this TaskFilesDTO.
        :type input_files: InputFilesDTO
        """

        self._input_files = input_files

    @property
    def jobs(self):
        """Gets the jobs of this TaskFilesDTO.


        :return: The jobs of this TaskFilesDTO.
        :rtype: List[JobDTO]
        """
        return self._jobs

    @jobs.setter
    def jobs(self, jobs):
        """Sets the jobs of this TaskFilesDTO.


        :param jobs: The jobs of this TaskFilesDTO.
        :type jobs: List[JobDTO]
        """

        self._jobs = jobs

    @property
    def output_files(self):
        """Gets the output_files of this TaskFilesDTO.


        :return: The output_files of this TaskFilesDTO.
        :rtype: List[FileDTO]
        """
        return self._output_files

    @output_files.setter
    def output_files(self, output_files):
        """Sets the output_files of this TaskFilesDTO.


        :param output_files: The output_files of this TaskFilesDTO.
        :type output_files: List[FileDTO]
        """

        self._output_files = output_files
