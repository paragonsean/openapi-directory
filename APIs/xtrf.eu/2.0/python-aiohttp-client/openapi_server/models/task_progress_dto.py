# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskProgressDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phase: str=None, status: str=None):
        """TaskProgressDTO - a model defined in OpenAPI

        :param phase: The phase of this TaskProgressDTO.
        :param status: The status of this TaskProgressDTO.
        """
        self.openapi_types = {
            'phase': str,
            'status': str
        }

        self.attribute_map = {
            'phase': 'phase',
            'status': 'status'
        }

        self._phase = phase
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskProgressDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskProgressDTO of this TaskProgressDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phase(self):
        """Gets the phase of this TaskProgressDTO.


        :return: The phase of this TaskProgressDTO.
        :rtype: str
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this TaskProgressDTO.


        :param phase: The phase of this TaskProgressDTO.
        :type phase: str
        """

        self._phase = phase

    @property
    def status(self):
        """Gets the status of this TaskProgressDTO.


        :return: The status of this TaskProgressDTO.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TaskProgressDTO.


        :param status: The status of this TaskProgressDTO.
        :type status: str
        """

        self._status = status
