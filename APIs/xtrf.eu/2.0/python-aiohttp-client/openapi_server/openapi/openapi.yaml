openapi: 3.0.1
info:
  description: "XTRF Home Portal API enables you to perform operations on Projects,\
    \ Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation\
    \ is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\"\
    >here</a> <br>\n  The API client/consumer code may be easily generated in 60+\
    \ programming languages using an open source code generator available at the time\
    \ of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a>\
    \ Thank you for using XTRF Application Programming interface (XTRF API). By using\
    \ the API you agree to the terms below. If you disagree with any of these terms,\
    \ XTRF does not grant you a license to use the XTRF API. XTRF reserves the right\
    \ to update and change these terms from time to time without a prior notice of\
    \ API users. You can always find the most recent version of these terms here: "
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://legal.xtrf.eu/2017/products/GeneralTermsAndConditions.pdf
  title: XTRF Home Portal API
  version: "2.0"
  x-logo:
    url: https://xtrf.eu/wp-content/uploads/2023/01/cropped-XTRF-Favicon--180x180.webp
  x-origin:
  - format: openapi
    url: https://presentation.s.xtrf.eu/home-api/openapi.json
    version: "3.0"
  x-providerName: xtrf.eu
servers:
- url: https://presentation.s.xtrf.eu/home-api
security:
- X-AUTH-ACCESS-TOKEN: []
- X-AUTH-ACCESS-TOKEN: []
- X-AUTH-ACCESS-TOKEN: []
- X-AUTH-ACCESS-TOKEN: []
tags:
- description: To change the description use /examples/TagsDescriptions.json
  name: Browser
- description: To change the description use /examples/TagsDescriptions.json
  name: Client Invoices
- description: To change the description use /examples/TagsDescriptions.json
  name: Clients
- description: To change the description use /examples/TagsDescriptions.json
  name: Dictionaries
- description: To change the description use /examples/TagsDescriptions.json
  name: Currency exchange rates
- description: To change the description use /examples/TagsDescriptions.json
  name: Files
- description: To change the description use /examples/TagsDescriptions.json
  name: License
- description: To change the description use /examples/TagsDescriptions.json
  name: Macros
- description: To change the description use /examples/TagsDescriptions.json
  name: Vendor Invoices
- description: To change the description use /examples/TagsDescriptions.json
  name: Vendors
- description: To change the description use /examples/TagsDescriptions.json
  name: Reports
- description: To change the description use /examples/TagsDescriptions.json
  name: Subscription
- description: To change the description use /examples/TagsDescriptions.json
  name: Users
- description: To change the description use /examples/TagsDescriptions.json
  name: Jobs (Classic)
- description: To change the description use /examples/TagsDescriptions.json
  name: Projects (Classic)
- description: To change the description use /examples/TagsDescriptions.json
  name: Quotes (Classic)
- description: To change the description use /examples/TagsDescriptions.json
  name: Tasks (Classic)
- description: To change the description use /examples/TagsDescriptions.json
  name: Jobs (Smart)(v2)
- description: To change the description use /examples/TagsDescriptions.json
  name: Projects (Smart)(v2)
- description: To change the description use /examples/TagsDescriptions.json
  name: Quotes (Smart)(v2)
paths:
  /accounting/customers/invoices:
    get:
      description: Lists all client invoices in all statuses (including not ready
        and drafts) that have been updated since a specific date.
      operationId: get_all
      parameters:
      - description: only client invoices modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getAll.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/CustomerInvoiceDTO'
                type: array
          description: client invoices
      summary: Lists all client invoices in all statuses (including not ready and
        drafts) that have been updated since a specific date.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
    post:
      description: "Creates a new invoice from tasks. Tasks are grouped by client\
        \ and currency, therefore multiple invoices can be created.If any of the tasks\
        \ cannot be invoiced (ie. it is already invoiced, not invoiceable, not associated\
        \ with a project) then an error is reported."
      operationId: create1
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/customers/invoices/createMultipleFromTasks.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomerInvoiceCreateDTO'
        description: Created new invoice.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/createMultipleFromTasks.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerInvoiceCreateResultDTO'
          description: Success
      summary: Creates a new invoice.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
      x-codegen-request-body-name: body
  /accounting/customers/invoices/documents:
    post:
      description: Generates client invoices' documents.
      operationId: download_documents
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/customers/invoices/downloadDocuments.json#requestBody
            schema:
              $ref: '#/components/schemas/DownloadDocumentsRequestDTO'
        description: Generated client invoices documents.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/downloadDocuments.json#responseBody
              schema:
                $ref: '#/components/schemas/UrlResultDTO'
          description: Success
      summary: Generates client invoices' documents.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
      x-codegen-request-body-name: body
  /accounting/customers/invoices/ids:
    get:
      description: Returns client invoices' internal identifiers.
      operationId: get_all_ids
      parameters:
      - description: only client invoices modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: client invoices' internal identifiers
      summary: Returns client invoices' internal identifiers.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/customers/invoices/sendReminders:
    post:
      description: Sends reminders. Returns number of sent e-mails.
      operationId: send_reminders
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/customers/invoices/sendReminders.json#requestBody
            schema:
              $ref: '#/components/schemas/SendRemindersRequestDTO'
        description: Number of sent e-mails.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/sendReminders.json#responseBody
              schema:
                $ref: '#/components/schemas/SendRemindersResponseDTO'
          description: Success
      summary: Sends reminders. Returns number of sent e-mails.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
      x-codegen-request-body-name: body
  /accounting/customers/invoices/{invoiceId}:
    delete:
      description: Removes a client invoice.
      operationId: delete1
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a client invoice.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
    get:
      description: Returns client invoice details.
      operationId: get_by_id
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: list of adittional fields which should be embedded in the response
          (ie. tasks)
        explode: true
        in: query
        name: embed
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerInvoiceDTO'
          description: Success
      summary: Returns client invoice details.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/customers/invoices/{invoiceId}/dates:
    get:
      description: Returns dates of a given client invoice.
      operationId: get_dates
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getDates.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerInvoiceDatesDTO'
          description: Success
      summary: Returns dates of a given client invoice.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/customers/invoices/{invoiceId}/document:
    get:
      description: Generates client invoice document (PDF).
      operationId: get_document
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getDocument.json#responseBody
              schema:
                $ref: '#/components/schemas/UrlResultDTO'
          description: Success
      summary: Generates client invoice document (PDF).
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/customers/invoices/{invoiceId}/duplicate:
    post:
      description: Duplicate client invoice.
      operationId: duplicate
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/duplicate.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerInvoiceDTO'
          description: Success
      summary: Duplicate client invoice.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/customers/invoices/{invoiceId}/duplicate/proForma:
    post:
      description: Duplicate client invoice as pro forma.
      operationId: duplicate_as_pro_forma
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/duplicateAsProForma.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerInvoiceDTO'
          description: Success
      summary: Duplicate client invoice as pro forma.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/customers/invoices/{invoiceId}/paymentTerms:
    get:
      description: Returns payment terms of a given client invoice.
      operationId: get_payment_terms
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getPaymentTerms.json#responseBody
              schema:
                $ref: '#/components/schemas/PaymentTermsDTO'
          description: Success
      summary: Returns payment terms of a given client invoice.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/customers/invoices/{invoiceId}/payments:
    get:
      description: Returns all payments for the client invoice.
      operationId: get_payments
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getPayments.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/PaymentDTO'
                type: array
          description: client invoice's payments
      summary: Returns all payments for the client invoice.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
    post:
      description: "Adds a new payment to the client invoice. The invoice payment\
        \ status (Not Paid, Partially Paid, Fully Paid) is automatically recalculated."
      operationId: create_payment
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/customers/invoices/createPayment.json#requestBody
            schema:
              $ref: '#/components/schemas/PaymentDTO'
        description: New payment.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: "Adds a new payment to the client invoice. The invoice payment status\
        \ (Not Paid, Partially Paid, Fully Paid) is automatically recalculated."
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
      x-codegen-request-body-name: body
  /accounting/customers/invoices/{invoiceId}/sendReminder:
    post:
      description: Sends reminder.
      operationId: send_reminder
      parameters:
      - description: client invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Sends reminder.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/customers/payments/{paymentId}:
    delete:
      description: Removes a customer payment.
      operationId: delete2
      parameters:
      - description: customer payment's internal identifier
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a customer payment.
      tags:
      - Client Invoices
      x-openapi-router-controller: openapi_server.controllers.client_invoices_controller
  /accounting/providers/invoices:
    get:
      description: Lists all vendor invoices in all statuses (including not ready
        and drafts) that have been updated since a specific date.
      operationId: get_all2
      parameters:
      - description: only vendor invoices modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getAll.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ProviderInvoiceDTO'
                type: array
          description: vendor invoices
      summary: Lists all vendor invoices in all statuses (including not ready and
        drafts) that have been updated since a specific date.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
    post:
      description: "Creates a new invoice from jobs. Jobs are grouped by provider\
        \ and currency, therefore multiple invoices can be created.If any of the jobs\
        \ cannot be invoiced (ie. it is already invoiced) then an error is reported."
      operationId: create4
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/providers/invoices/createSingleFromJobs.json#requestBody
            schema:
              $ref: '#/components/schemas/ProviderInvoiceCreateDTO'
        description: Created new invoice.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/createSingleFromJobs.json#responseBody
              schema:
                $ref: '#/components/schemas/ProviderInvoiceCreateResultDTO'
          description: Success
      summary: Creates a new invoice.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
      x-codegen-request-body-name: body
  /accounting/providers/invoices/ids:
    get:
      description: Returns vendor invoices' internal identifiers.
      operationId: get_all_ids3
      parameters:
      - description: only vendor invoices modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: vendor invoices' internal identifiers
      summary: Returns vendor invoices' internal identifiers.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
  /accounting/providers/invoices/{invoiceId}:
    delete:
      description: Removes a provider invoice.
      operationId: delete6
      parameters:
      - description: provider invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a provider invoice.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
    get:
      description: Returns provider invoice details.
      operationId: get_by_id3
      parameters:
      - description: provider invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProviderInvoiceDTO'
          description: Success
      summary: Returns provider invoice details.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
  /accounting/providers/invoices/{invoiceId}/document:
    get:
      description: Generates provider invoice document (PDF).
      operationId: get_document1
      parameters:
      - description: provider invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getDocument.json#responseBody
              schema:
                $ref: '#/components/schemas/UrlResultDTO'
          description: Success
      summary: Generates provider invoice document (PDF).
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
  /accounting/providers/invoices/{invoiceId}/payments:
    get:
      description: Returns all payments for the vendor invoice.
      operationId: get_payments1
      parameters:
      - description: vendor invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getPayments.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/PaymentDTO'
                type: array
          description: vendor invoice's payments
      summary: Returns all payments for the vendor invoice.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
    post:
      description: Creates a new payment on the vendor account and assigns the payment
        to the invoice.
      operationId: create_payment1
      parameters:
      - description: vendor invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/providers/invoices/createPayment.json#requestBody
            schema:
              $ref: '#/components/schemas/PaymentDTO'
        description: New payment.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Creates a new payment on the vendor account and assigns the payment
        to the invoice.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
      x-codegen-request-body-name: body
  /accounting/providers/invoices/{invoiceId}/send:
    post:
      description: Sends a provider invoice.
      operationId: send
      parameters:
      - description: provider invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Sends a provider invoice.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
  /accounting/providers/invoices/{invoiceId}/status:
    post:
      description: Changes invoice status to given status.
      operationId: set_status
      parameters:
      - description: provider invoice's internal identifier
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/providers/invoices/setStatus.json#requestBody
            schema:
              $ref: '#/components/schemas/StatusRequestDTO'
        description: Changed invoice status to given status.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Changes invoice status to given status.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
      x-codegen-request-body-name: body
  /accounting/providers/payments/{paymentId}:
    delete:
      description: Removes a provider payment.
      operationId: delete7
      parameters:
      - description: provider payment's internal identifier
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a provider payment.
      tags:
      - Vendor Invoices
      x-openapi-router-controller: openapi_server.controllers.vendor_invoices_controller
  /browser:
    get:
      description: "Searches for data (ie. customer, task, etc) and returns it in\
        \ a tabular form."
      operationId: browse_json
      parameters:
      - description: view's identifier
        explode: true
        in: query
        name: viewId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: additionalOrder
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: useDeferredColumns
        required: false
        schema:
          type: string
        style: form
      - description: "overrides view's default rows limit, supported values 10 to\
          \ 1000"
        explode: true
        in: query
        name: maxRows
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/browseProjects.json#responseBody
              schema:
                type: object
          description: Success
      summary: "Searches for data (ie. customer, task, etc) and returns it in a tabular\
        \ form."
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
  /browser/csv:
    get:
      description: "Searches for data (ie. customer, task, etc) and returns it in\
        \ a CSV form."
      operationId: browse_csv
      parameters:
      - description: view's identifier
        explode: true
        in: query
        name: viewId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: csv field separator
        explode: true
        in: query
        name: separator
        required: false
        schema:
          type: string
        style: form
      - description: secondary csv field separator
        explode: true
        in: query
        name: secondarySeparator
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: additionalOrder
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/exportToCSV.json#responseBody
              schema:
                type: object
          description: Success
      summary: "Searches for data (ie. customer, task, etc) and returns it in a CSV\
        \ form."
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
  /browser/views/details/for/{className}:
    get:
      description: "Returns current view's detailed information, suitable for browser."
      operationId: get_current_view_details
      parameters:
      - description: views' class name
        explode: false
        in: path
        name: className
        required: true
        schema:
          type: string
        style: simple
      - description: place name (denotes specific place in system with the table)
        explode: true
        in: query
        name: placeName
        required: false
        schema:
          default: default
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getCurrentDetails.json#responseBody
              schema:
                $ref: '#/components/schemas/ViewDetailsDTO'
          description: Success
      summary: "Returns current view's detailed information, suitable for browser."
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
  /browser/views/details/for/{className}/{viewId}:
    get:
      description: "Returns view's detailed information, suitable for browser."
      operationId: get_view_details
      parameters:
      - description: views' class name
        explode: false
        in: path
        name: className
        required: true
        schema:
          type: string
        style: simple
      - description: place name (denotes specific place in system with the table)
        explode: true
        in: query
        name: placeName
        required: false
        schema:
          default: default
          type: string
        style: form
      - explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getDetails.json#responseBody
              schema:
                $ref: '#/components/schemas/ViewDetailsDTO'
          description: Success
      summary: "Returns view's detailed information, suitable for browser."
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    post:
      description: "Selects given view as current and returns its detailed information,\
        \ suitable for browser."
      operationId: select_view_and_get_its_details
      parameters:
      - description: views' class name
        explode: false
        in: path
        name: className
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: place name (denotes specific place in system with the table)
        required: false
        schema:
          default: default
          type: string
        style: form
      - explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/selectViewAndGetItsDetails.json#responseBody
              schema:
                $ref: '#/components/schemas/ViewDetailsDTO'
          description: Success
      summary: "Selects given view as current and returns its detailed information,\
        \ suitable for browser."
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
  /browser/views/for/{className}:
    get:
      description: Returns views' brief.
      operationId: get_views_brief
      parameters:
      - description: views' class name
        explode: false
        in: path
        name: className
        required: true
        schema:
          type: string
        style: simple
      - description: place name (denotes specific place in system with the table)
        explode: true
        in: query
        name: placeName
        required: false
        schema:
          default: default
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getViewsBrief.json#responseBody
              schema:
                $ref: '#/components/schemas/ViewsBriefDTO'
          description: Success
      summary: Returns views' brief.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    post:
      description: Creates view for given class.
      operationId: create
      parameters:
      - description: view's class name
        explode: false
        in: path
        name: className
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/ViewDTO'
        description: Created view for given class.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/create.json#responseBody
              schema:
                $ref: '#/components/schemas/ViewWithIdDTO'
          description: Success
      summary: Creates view for given class.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}:
    delete:
      description: Removes a view. No content is returned upon success (204).
      operationId: delete
      parameters:
      - description: view's internal identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a view.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    get:
      description: "Returns all view's information (ie. name, columns, filters, etc)."
      operationId: get
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/get.json#responseBody
              schema:
                $ref: '#/components/schemas/ViewDTO'
          description: Success
      summary: Returns all view's information.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    put:
      description: "Updates all view's information (ie. name, columns, filters, etc)."
      operationId: update
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/ViewDTO'
        description: Updated all view's information.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/update.json#responseBody
              schema:
                $ref: '#/components/schemas/ViewDTO'
          description: Success
      summary: Updates all view's information.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}/columns:
    get:
      description: Returns columns defined in view.
      operationId: get_columns
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getColumns.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ColumnDTO'
                type: array
          description: Success
      summary: Returns columns defined in view.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    put:
      description: Updates columns in view.
      operationId: update_columns
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateColumns.json#requestBody
            schema:
              items:
                $ref: '#/components/schemas/ColumnDTO'
              type: array
        description: Updated columns in view.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateColumns.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ColumnDTO'
                type: array
          description: Success
      summary: Updates columns in view.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}/columns/{columnName}:
    delete:
      description: Deletes a single column from view.
      operationId: delete_column
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: column's name
        explode: false
        in: path
        name: columnName
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/deleteColumn.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ColumnDTO'
                type: array
          description: Success
      summary: Deletes a single column from view.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
  /browser/views/{viewId}/columns/{columnName}/settings:
    get:
      description: Returns column's specific settings. For example when column describes
        money amount we can decide whether it should display currency or not.
      operationId: get_column_settings
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: column's name
        explode: false
        in: path
        name: columnName
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getColumnSettings.json#responseBody
              schema:
                type: object
          description: Success
      summary: Returns column's specific settings.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    put:
      description: Updates column's specific settings. For example when column describes
        money amount we can decide whether it should display currency or not.
      operationId: update_column_settings
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: column's name
        explode: false
        in: path
        name: columnName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateColumnSettings.json#requestBody
            schema:
              type: object
        description: Updated column's specific settings.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateColumnSettings.json#responseBody
              schema:
                type: object
          description: Success
      summary: Updates column's specific settings.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}/filter:
    get:
      description: Returns view's filter.
      operationId: get_filter
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/filter/getTextProperty.json#responseBody
              schema:
                $ref: '#/components/schemas/FilterDTO'
          description: Success
      summary: Returns view's filter.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    put:
      description: Updates view's filter.
      operationId: update_filter
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateFilter.json#requestBody
            schema:
              items:
                $ref: '#/components/schemas/FilterPropertyDTO'
              type: array
        description: Updated view's filter.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateFilter.json#responseBody
              schema:
                $ref: '#/components/schemas/FilterDTO'
          description: Success
      summary: Updates view's filter.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}/filter/{filterProperty}:
    put:
      description: Updates view's filter property.
      operationId: update_filter_property
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: view's filter property name
        explode: false
        in: path
        name: filterProperty
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateFilterProperty.json#requestBody
            schema:
              $ref: '#/components/schemas/FilterPropertyDTO'
        description: Updated view's filter property.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateFilterProperty.json#responseBody
              schema:
                type: object
          description: Success
      summary: Updates view's filter property.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}/order:
    get:
      description: Returns view's order settings.
      operationId: get_order
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getOrder.json#responseBody
              schema:
                $ref: '#/components/schemas/OrderDTO'
          description: Success
      summary: Returns view's order settings.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    put:
      description: Updates view's order settings.
      operationId: update_order
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateOrder.json#requestBody
            schema:
              $ref: '#/components/schemas/OrderDTO'
        description: Updated view's order settings.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateOrder.json#responseBody
              schema:
                $ref: '#/components/schemas/OrderDTO'
          description: Success
      summary: Updates view's order settings.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}/permissions:
    get:
      description: Returns view's permissions.
      operationId: get_permissions
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getPermissions.json#responseBody
              schema:
                $ref: '#/components/schemas/PermissionsDTO'
          description: Success
      summary: Returns view's permissions.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    put:
      description: Updates view's permissions.
      operationId: update_permissions
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updatePermissions.json#requestBody
            schema:
              $ref: '#/components/schemas/PermissionsDTO'
        description: Updated view's permissions.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updatePermissions.json#responseBody
              schema:
                $ref: '#/components/schemas/PermissionsDTO'
          description: Success
      summary: Updates view's permissions.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}/settings:
    get:
      description: Returns view's settings (ie. name).
      operationId: get_settings
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getSettings.json#responseBody
              schema:
                $ref: '#/components/schemas/SettingsDTO'
          description: Success
      summary: Returns view's settings.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    put:
      description: Updates view's settings.
      operationId: update_settings
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateSettings.json#requestBody
            schema:
              $ref: '#/components/schemas/SettingsDTO'
        description: Updated view's settings.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateSettings.json#responseBody
              schema:
                $ref: '#/components/schemas/SettingsDTO'
          description: Success
      summary: Updates view's settings.
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /browser/views/{viewId}/settings/local:
    get:
      description: Returns view's local settings (for current user).
      operationId: get_local_settings
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getLocalSettings.json#responseBody
              schema:
                $ref: '#/components/schemas/LocalSettingsDTO'
          description: Success
      summary: Returns view's local settings (for current user).
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
    put:
      description: Updates view's local settings (for current user).
      operationId: update_local_settings
      parameters:
      - description: view's identifier
        explode: false
        in: path
        name: viewId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateLocalSettings.json#requestBody
            schema:
              $ref: '#/components/schemas/LocalSettingsDTO'
        description: Updated view's local settings (for current user).
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateLocalSettings.json#responseBody
              schema:
                $ref: '#/components/schemas/LocalSettingsDTO'
          description: Success
      summary: Updates view's local settings (for current user).
      tags:
      - Browser
      x-openapi-router-controller: openapi_server.controllers.browser_controller
      x-codegen-request-body-name: body
  /customers:
    get:
      description: Returns list of simple clients representations
      operationId: get_all_names_with_ids
      parameters:
      - description: only clients modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getAllNamesWithIds.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/EntityWithNameDTO'
                type: array
          description: Success
      summary: Returns list of simple clients representations
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    post:
      description: |
        Creates a new client. All available fields are presented in PUT request.<p>
          Required fields:
          <ul>
            <li>name</li>
            <li>fullName</li>
            <li>contact -> emails -> primary</li>
          </ul>
        </p>
      operationId: create3
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/create.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomerDTO'
        description: Created user object
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/create.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerDTO'
          description: Success
      summary: Creates a new client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/ids:
    get:
      description: Returns clients' internal identifiers.
      operationId: get_all_ids2
      parameters:
      - description: only clients modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: exact name of client
        explode: true
        in: query
        name: nameEquals
        required: false
        schema:
          type: string
        style: form
      - description: exact email of client
        explode: true
        in: query
        name: emailEquals
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns clients' internal identifiers.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /customers/persons:
    post:
      description: Creates a new person. Required fields are presented in the example.
        Other fields (from PUT) may also be specified here.
      operationId: create2
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/create.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomerPersonDTO'
        description: Brand new person.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/create.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerPersonDTO'
          description: Success
      summary: Creates a new person.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/persons/accessToken:
    post:
      description: Generates a single use sign-in token for the customer person found
        for given login or e-mail. Returns 'url' and 'token' which allows to sign-in
        to customer portal as this person. Token is valid for two minutes and can
        be used only once. To sign-in to customer portal you should post 'token' provided
        as the 'accessToken' form param to the 'url' using POST method.Detailed description
        is available in the Customer API <a href="/api-doc/customer-api/authentication">authentication</a>.
      operationId: generate_single_use_sign_in_token
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/generateSingleUseSignInToken.json#requestBody
            schema:
              $ref: '#/components/schemas/AccessTokenRequestDTO'
        description: Generated sign-in token.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/generateSingleUseSignInToken.json#responseBody
              schema:
                $ref: '#/components/schemas/AccessTokenDTO'
          description: Success
      summary: Generates a single use sign-in token.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/persons/ids:
    get:
      description: Returns persons' internal identifiers.
      operationId: get_all_ids1
      parameters:
      - description: only persons modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns persons' internal identifiers.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /customers/persons/{personId}:
    delete:
      description: Removes a person.
      operationId: delete3
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a person.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    get:
      description: Returns person details.
      operationId: get_by_id1
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerPersonDTO'
          description: Success
      summary: Returns person details.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Only specified fields will be changed. One may not specify embeddable
        fields here - use separate API calls for updating them.
      operationId: update1
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/update.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomerPersonDTO'
        description: Updated existing person.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/update.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerPersonDTO'
          description: Success
      summary: Updates an existing person.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/persons/{personId}/contact:
    get:
      description: Returns contact of a given person.
      operationId: get_contact
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/getContact.json#responseBody
              schema:
                $ref: '#/components/schemas/PersonContactDTO'
          description: Success
      summary: Returns contact of a given person.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates contact of a given person. Sets that this person uses specific
        address and contact (not the one from customer).
      operationId: update_contact
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/updateContact.json#requestBody
            schema:
              $ref: '#/components/schemas/PersonContactDTO'
        description: Updated contact of a given person.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/updateContact.json#responseBody
              schema:
                $ref: '#/components/schemas/PersonContactDTO'
          description: Success
      summary: Updates contact of a given person.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/persons/{personId}/customFields:
    get:
      description: Returns custom fields of a given person.
      operationId: get_custom_fields
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns custom fields of a given person.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates custom fields of a given person.
      operationId: update_custom_fields
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/updateCustomFields.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomFieldsDTO'
        description: Updated custom fields of a given person.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/updateCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Updates custom fields of a given person.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/priceLists/{priceListId}:
    delete:
      description: Removes a customer price list.
      operationId: delete4
      parameters:
      - description: customer price list's internal identifier
        explode: false
        in: path
        name: priceListId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a customer price list.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /customers/{customerId}:
    delete:
      description: Removes a client.
      operationId: delete5
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    get:
      description: Returns client details.
      operationId: get_by_id2
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "list of additional fields which should be embedded in the response\
          \ (available options: persons)"
        explode: true
        in: query
        name: embed
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerDTO'
          description: Success
      summary: Returns client details.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Only specified fields will be changed (id is required). One may
        not specify embeddable fields here - use separate API calls for updating them.
      operationId: update2
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/update.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomerDTO'
        description: Updated client
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/update.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomerDTO'
          description: Success
      summary: Updates an existing client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/{customerId}/address:
    get:
      description: Returns address of a given client.
      operationId: get_address
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/address/getAddress.json#responseBody
              schema:
                $ref: '#/components/schemas/AddressDTO'
          description: Success
      summary: Returns address of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates address of a given client.
      operationId: update_address
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/address/updateAddress.json#requestBody
            schema:
              $ref: '#/components/schemas/AddressDTO'
        description: Updated address of a given client.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/address/updateAddress.json#responseBody
              schema:
                $ref: '#/components/schemas/AddressDTO'
          description: Success
      summary: Updates address of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/{customerId}/categories:
    get:
      description: Returns categories of a given client.
      operationId: get_categories
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getCategories.json#responseBody
              schema:
                $ref: '#/components/schemas/CategoriesDTO'
          description: Success
      summary: Returns categories of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates categories of a given client.
      operationId: update_categories
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateCategories.json#requestBody
            schema:
              $ref: '#/components/schemas/CategoriesDTO'
        description: Updated categories of a given client.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateCategories.json#responseBody
              schema:
                $ref: '#/components/schemas/CategoriesDTO'
          description: Success
      summary: Updates categories of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/{customerId}/contact:
    get:
      description: Returns contact of a given client.
      operationId: get_contact1
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getContact.json#responseBody
              schema:
                $ref: '#/components/schemas/ContactDTO'
          description: Success
      summary: Returns contact of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates contact of a given client.
      operationId: update_contact1
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateContact.json#requestBody
            schema:
              $ref: '#/components/schemas/ContactDTO'
        description: Updated contact of a given client.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateContact.json#responseBody
              schema:
                $ref: '#/components/schemas/ContactDTO'
          description: Success
      summary: Updates contact of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/{customerId}/correspondenceAddress:
    get:
      description: Returns correspondence address of a given client.
      operationId: get_correspondence_address
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/address/getCorrespondenceAddress.json#responseBody
              schema:
                $ref: '#/components/schemas/AddressDTO'
          description: Success
      summary: Returns correspondence address of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates correspondence address of a given client.
      operationId: update_correspondence_address
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/address/updateCorrespondenceAddress.json#requestBody
            schema:
              $ref: '#/components/schemas/AddressDTO'
        description: Updated address of a given client.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/address/updateCorrespondenceAddress.json#responseBody
              schema:
                $ref: '#/components/schemas/AddressDTO'
          description: Success
      summary: Updates correspondence address of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/{customerId}/customFields:
    get:
      description: Returns custom fields of a given client.
      operationId: get_custom_fields1
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns custom fields of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates custom fields of a given client.
      operationId: update_custom_fields1
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateCustomFields.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomFieldsDTO'
        description: Updated custom fields of a given client.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Updates custom fields of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/{customerId}/customFields/{customFieldKey}:
    get:
      description: Returns custom field of a given client.
      operationId: get_custom_field
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: custom field's key
        explode: false
        in: path
        name: customFieldKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getCustomField.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldDTO'
          description: Success
      summary: Returns custom field of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates given custom field of a given client.
      operationId: update_custom_field
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: custom field's key
        explode: false
        in: path
        name: customFieldKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateCustomField.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomFieldDTO'
        description: Updated custom field of a given client.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateCustomField.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldDTO'
          description: Success
      summary: Updates given custom field of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /customers/{customerId}/industries:
    get:
      description: Returns industries of a given client.
      operationId: get_industries
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getIndustries.json#responseBody
              schema:
                $ref: '#/components/schemas/IndustriesDTO'
          description: Success
      summary: Returns industries of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      description: Updates industries of a given client.
      operationId: update_industries
      parameters:
      - description: client's internal identifier
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateIndustries.json#requestBody
            schema:
              $ref: '#/components/schemas/CategoriesDTO'
        description: Updated industries of a given client.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateIndustries.json#responseBody
              schema:
                $ref: '#/components/schemas/IndustriesDTO'
          description: Success
      summary: Updates industries of a given client.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /dictionaries/active:
    get:
      description: Returns active dictionary entities for all types.
      operationId: get_active
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/map-active.json#responseBody
              schema:
                $ref: '#/components/schemas/ManyValuesPerTypeDTO'
          description: Success
      summary: Returns active dictionary entities for all types.
      tags:
      - Dictionaries
      x-openapi-router-controller: openapi_server.controllers.dictionaries_controller
  /dictionaries/all:
    get:
      description: |-
        <div>
          <p>
            XTRF holds many user-defined dictionaries (ie. countries).
            Each dictionary contains a set of values (ie. Poland or Germany).
            A default value may be defined for a dictionary.
          </p>
          <p>
            Dictionary values are identified using internal identifier which is constant and unique among other values from the same dictionary.
            Please note that name used in dictionary values is presented in the locale of the current identity.
            The same dictionary value can have different names, ie. "Poland" for one user, "Polska" for another one.
          </p>
          <p>
            Possible dictionary types with short explanation:
            <ul>
              <li>calculationUnit - predefined values of how to calculate the volume of work into the price</li>
              <li>category - labels to organize data on the platform</li>
              <li>country - list of countries used on the platform</li>
              <li>currency - currencies used in financial operations in the system</li>
              <li>industry - industry sectors which clients specialize in</li>
              <li>jobType - services offered by a company used in customized workflows</li>
              <li>language - list of languages and its values used on the platform</li>
              <li>leadSource - lead/recruitment places where new clients and vendors may be found</li>
              <li>personDepartment - departments in which contact person may be assigned to</li>
              <li>personPosition - positions in which user may be associated with</li>
              <li>province - states and provinces used in various documents on the platform</li>
              <li>specialization - list of specific qualifications required to perform a specific job in the task, for ex. medical, military</li>
            </ul>
          </p>
        </div>
      operationId: get_all1
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/map-all.json#responseBody
              schema:
                $ref: '#/components/schemas/ManyValuesPerTypeDTO'
          description: Success
      summary: Returns dictionary entities for all types. Both active and not active
        ones.
      tags:
      - Dictionaries
      x-openapi-router-controller: openapi_server.controllers.dictionaries_controller
  /dictionaries/currency/{isoCode}/exchangeRate:
    get:
      description: Returns currency exchange rates.
      operationId: get_by_iso_code
      parameters:
      - description: "iso code, https://www.xe.com/iso4217.php"
        explode: false
        in: path
        name: isoCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/currency/getByIsoCode.json#responseBody
              schema:
                $ref: '#/components/schemas/CurrencyHistoryDTO'
          description: Success
      summary: Returns currency exchange rates.
      tags:
      - Currency exchange rates
      x-openapi-router-controller: openapi_server.controllers.currency_exchange_rates_controller
    post:
      description: Adding currency exchange rates via API
      operationId: create_exchange_rate
      parameters:
      - description: "iso code, https://www.xe.com/iso4217.php"
        explode: false
        in: path
        name: isoCode
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/dictionaries/currency/createExchangeRate.json#requestBody
            schema:
              $ref: '#/components/schemas/CurrencyHistoryDTO'
        description: Adding new currency exchange rates
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Adding currency exchange rates.
      tags:
      - Currency exchange rates
      x-openapi-router-controller: openapi_server.controllers.currency_exchange_rates_controller
      x-codegen-request-body-name: body
  /dictionaries/{type}/active:
    get:
      description: Returns active values from a given dictionary.
      operationId: get_active_by_type
      parameters:
      - description: dictionary type
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: exact name of entity
        explode: true
        in: query
        name: nameEquals
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/currency-active-v1.json#responseBody
              schema:
                $ref: '#/components/schemas/DictionaryEntity'
          description: Success
      summary: Returns active values from a given dictionary.
      tags:
      - Dictionaries
      x-openapi-router-controller: openapi_server.controllers.dictionaries_controller
  /dictionaries/{type}/all:
    get:
      description: Returns all values (both active and not active) from a given dictionary.
      operationId: get_all_by_type
      parameters:
      - description: dictionary type
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: exact name of entity
        explode: true
        in: query
        name: nameEquals
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/currency-all-v1.json#responseBody
              schema:
                $ref: '#/components/schemas/DictionaryEntity'
          description: Success
      summary: Returns all values (both active and not active) from a given dictionary.
      tags:
      - Dictionaries
      x-openapi-router-controller: openapi_server.controllers.dictionaries_controller
  /dictionaries/{type}/{id}:
    get:
      description: Returns specific value from a given dictionary.
      operationId: get_by_type_and_id
      parameters:
      - description: dictionary type
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: dictionary value identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/currency-v1.json#responseBody
              schema:
                $ref: '#/components/schemas/DictionaryEntity'
          description: Success
      summary: Returns specific value from a given dictionary.
      tags:
      - Dictionaries
      x-openapi-router-controller: openapi_server.controllers.dictionaries_controller
  /files:
    post:
      description: |
        When a file is required by an operation (ie. task creation) it must be uploaded previously to the API.
        Uploading a file will result in a file token, which can be used to reference this file in other API calls.
         Each file must be uploaded separately.
         Keep in mind that file token has limited validity (ie. 10 minutes).
         Therefore files must be uploaded just before issuing API call which reference them.
      operationId: upload_file
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileToUploadDto'
        description: Uploaded file
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json: {}
          description: default response
      summary: Uploads a temporary file (ie. for XML import). Returns token which
        can be used in other API calls.
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
      x-codegen-request-body-name: body
  /jobs/{jobId}:
    get:
      description: Returns job details by jobId.
      operationId: get_job_details
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/jobs/getJobDetails.json#responseBody
              schema:
                $ref: '#/components/schemas/JobDto'
          description: Success
      summary: Returns job details by jobId.
      tags:
      - Jobs (Classic)
      x-openapi-router-controller: openapi_server.controllers.jobs_(classic)controller
  /jobs/{jobId}/dates:
    put:
      description: Updates dates of a given job.
      operationId: update_dates
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/updateDates.json#requestBody
            schema:
              $ref: '#/components/schemas/JobDatesDto'
        description: New job dates.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates dates of a given job.
      tags:
      - Jobs (Classic)
      x-openapi-router-controller: openapi_server.controllers.jobs_(classic)controller
      x-codegen-request-body-name: body
  /jobs/{jobId}/files:
    get:
      description: Returns list of input and output files of a job.
      operationId: get_job_files
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/jobs/getJobFiles.json#responseBody
              schema:
                $ref: '#/components/schemas/JobFilesDTO'
          description: Success
      summary: Returns list of input and output files of a job.
      tags:
      - Jobs (Classic)
      x-openapi-router-controller: openapi_server.controllers.jobs_(classic)controller
  /jobs/{jobId}/files/output:
    post:
      operationId: assign_file_to_job_output
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/assignFileToJobOutput.json#requestBody
            schema:
              $ref: '#/components/schemas/TaskFileDTO'
        description: Assigns file to job output files.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8: {}
          description: default response
      tags:
      - Jobs (Classic)
      x-openapi-router-controller: openapi_server.controllers.jobs_(classic)controller
      x-codegen-request-body-name: body
  /jobs/{jobId}/files/{fileId}:
    get:
      description: Returns file metadata.
      operationId: get_job_files1
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: file's internal identifier
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/jobs/getJobFileMetadata.json#responseBody
              schema:
                $ref: '#/components/schemas/FileMetadataDTO'
          description: Success
      summary: Returns file metadata.
      tags:
      - Jobs (Classic)
      x-openapi-router-controller: openapi_server.controllers.jobs_(classic)controller
  /jobs/{jobId}/instructions:
    put:
      description: Updates instructions for a job.
      operationId: update_instructions
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/updateInstructionsForJob.json#requestBody
            schema:
              $ref: '#/components/schemas/InstructionsDTO'
        description: Updated instructions for a job.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates instructions for a job.
      tags:
      - Jobs (Classic)
      x-openapi-router-controller: openapi_server.controllers.jobs_(classic)controller
      x-codegen-request-body-name: body
  /jobs/{jobId}/status:
    put:
      description: "Changes job status if possible (400 Bad Request is returned otherwise).\
        \ The status has to be specified using one of the following keys:<ul><li>OPEN\
        \ – available when the job has one of the following statuses: ACCEPTED, CANCELED</li><li>ACCEPTED\
        \ – available when the job has one of the following statuses: OPEN (Vendor\
        \ and dates have to be set before calling the operation), STARTED</li><li>STARTED\
        \ – available when the job has one of the following statuses: ACCEPTED, READY</li><li>READY\
        \ – available when the job has one of the following statuses: STARTED</li><li>CANCELLED\
        \ – available when the job has one of the following statuses: OPEN, ACCEPTED,\
        \ STARTED, OFFERS_SENT</li><li>OFFERS_SENT – not available as a target status\
        \ for this operation</li></ul>"
      operationId: change_status
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/changeStatus.json#requestBody
            schema:
              $ref: '#/components/schemas/JobStatusDTO'
        description: Changed job status.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Changes job status if possible (400 Bad Request is returned otherwise).
      tags:
      - Jobs (Classic)
      x-openapi-router-controller: openapi_server.controllers.jobs_(classic)controller
      x-codegen-request-body-name: body
  /jobs/{jobId}/vendor:
    put:
      description: Assigns vendor to a job in a project.
      operationId: assign_vendor
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/assignVendor.json#requestBody
            schema:
              $ref: '#/components/schemas/AssignVendorDTO'
        description: Assigned vendor to a job in a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Assigns vendor to a job in a project.
      tags:
      - Jobs (Classic)
      x-openapi-router-controller: openapi_server.controllers.jobs_(classic)controller
      x-codegen-request-body-name: body
  /license:
    get:
      description: Returns license content.
      operationId: get_license
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/license/getLicense.json#responseBody
              schema:
                $ref: '#/components/schemas/GetLicenseResult'
          description: Success
      summary: Returns license content.
      tags:
      - License
      x-openapi-router-controller: openapi_server.controllers.license_controller
  /license/refresh:
    post:
      description: Refreshes license content. This method returns OK immediately and
        license is refreshed asynchronously. It takes a while (usually a few seconds)
        for the license to be actually refreshed.
      operationId: refresh
      responses:
        "204":
          description: Success
      summary: Refreshes license content.
      tags:
      - License
      x-openapi-router-controller: openapi_server.controllers.license_controller
  /macros/{macroId}/run:
    post:
      description: |-
        Runs a specified macro on a specified list of items ("list" variable in the macro code). The list of items can be empty if the macro doesn't use it. Additional custom parameters can be provided to the macro when necessary ("params" variable in the macro code).

         <BR>Note: Macros that support parameters can be also run from GUI (Views in Home Portal),so they should also handle the empty parameters map (e.g. by defining default values when parameters are not provided).
      operationId: run
      parameters:
      - description: macro internal identifier
        explode: false
        in: path
        name: macroId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/macros/runMacroAsynchronously.json#requestBody
            schema:
              $ref: '#/components/schemas/MacroRequestDTO'
        description: Generated client invoices documents.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/macros/runMacroSynchronouslyWithParametersWithoutIds.json#responseBody
              schema:
                $ref: '#/components/schemas/ActionStartedDTO'
          description: Success
      summary: Executes a macro.
      tags:
      - Macros
      x-openapi-router-controller: openapi_server.controllers.macros_controller
      x-codegen-request-body-name: body
  /projects:
    post:
      description: "Creates a new Classic Project. If the specified service ID refers\
        \ to Smart Project, 400 Bad Request is returned instead."
      operationId: create5
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createProject.json#requestBody
            schema:
              $ref: '#/components/schemas/ClassicProjectCreateDTO'
        description: Created a new Classic Project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createProject.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectDTOv1'
          description: Success
      summary: Creates a new Classic Project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/files/{fileId}/download:
    get:
      description: Downloads a file.
      operationId: get_file_by_id
      parameters:
      - description: file's internal identifier
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            multipart/form-data: {}
          description: Success!
      summary: Downloads a file.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
  /projects/ids:
    get:
      description: Returns projects' internal identifiers.
      operationId: get_all_ids6
      parameters:
      - description: only projects modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns projects' internal identifiers.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
  /projects/{projectId}:
    delete:
      description: Removes a project.
      operationId: delete12
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
    get:
      description: "Returns project details. If the specified project ID refers to\
        \ Smart Project, 400 Bad Request is returned instead."
      operationId: get_by_id7
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: "list of additional fields which should be embedded in the response\
          \ (available options: tasks)"
        explode: true
        in: query
        name: embed
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectDTOv1'
          description: Success
      summary: Returns project details.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
  /projects/{projectId}/contacts:
    get:
      description: Returns contacts of a given project.
      operationId: get_contacts
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getContacts.json#responseBody
              schema:
                $ref: '#/components/schemas/ContactsDTO'
          description: Success
      summary: Returns contacts of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
    put:
      description: Updates contacts of a given project.
      operationId: update_contacts
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateContacts.json#requestBody
            schema:
              $ref: '#/components/schemas/ContactsDTO'
        description: Updated contacts of a given project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateContacts.json#responseBody
              schema:
                $ref: '#/components/schemas/ContactsDTO'
          description: Success
      summary: Updates contacts of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/customFields:
    get:
      description: Returns custom fields of a given project.
      operationId: get_custom_fields5
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns custom fields of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
    put:
      description: Updates custom fields of a given project.
      operationId: update_custom_fields3
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateCustomFields.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomFieldsDTO'
        description: Updated custom fields of a given project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Updates custom fields of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/dates:
    get:
      description: Returns dates of a given project.
      operationId: get_dates1
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getDates.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectDatesDTO'
          description: Success
      summary: Returns dates of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
    put:
      description: Updates dates of a given project.
      operationId: update_dates1
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateDates.json#requestBody
            schema:
              $ref: '#/components/schemas/ProjectDatesDTO'
        description: Updated dates of a given project..
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateDates.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectDatesDTO'
          description: Success
      summary: Updates dates of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/finance:
    get:
      description: Returns finance of a given project.
      operationId: get_finance
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getFinance.json#responseBody
              schema:
                $ref: '#/components/schemas/FinanceDTO'
          description: Success
      summary: Returns finance of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
  /projects/{projectId}/finance/payables:
    post:
      description: Adds a payable to a project.
      operationId: create_payable
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createPayable.json#requestBody
            schema:
              $ref: '#/components/schemas/PayableCreateDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createPayable.json#responseBody
              schema:
                $ref: '#/components/schemas/PayableDTO'
          description: Success
      summary: Adds a payable to a project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/finance/payables/{payableId}:
    delete:
      description: Deletes a payable.
      operationId: delete_payable
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: payable's internal identifier
        explode: false
        in: path
        name: payableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Deletes a payable.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
    put:
      description: Updates a payable.
      operationId: update_payable
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: payable's internal identifier
        explode: false
        in: path
        name: payableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updatePayable.json#requestBody
            schema:
              $ref: '#/components/schemas/PayableDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updatePayable.json#responseBody
              schema:
                $ref: '#/components/schemas/PayableDTO'
          description: Success
      summary: Updates a payable.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/finance/receivables:
    post:
      description: Adds a receivable to a project.
      operationId: create_receivable
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createReceivable.json#requestBody
            schema:
              $ref: '#/components/schemas/ReceivableCreateDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createReceivable.json#responseBody
              schema:
                $ref: '#/components/schemas/ReceivableDTO'
          description: Success
      summary: Adds a receivable to a project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/finance/receivables/{receivableId}:
    delete:
      description: Deletes a receivable.
      operationId: delete_receivable
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: receivable's internal identifier
        explode: false
        in: path
        name: receivableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Deletes a receivable.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
    put:
      description: Updates a receivable.
      operationId: update_receivable
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: receivable's internal identifier
        explode: false
        in: path
        name: receivableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateReceivable.json#requestBody
            schema:
              $ref: '#/components/schemas/ReceivableDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateReceivable.json#responseBody
              schema:
                $ref: '#/components/schemas/ReceivableDTO'
          description: Success
      summary: Updates a receivable.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/instructions:
    get:
      description: Returns instructions of a given project.
      operationId: get_instructions
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getInstructions.json#responseBody
              schema:
                $ref: '#/components/schemas/InstructionsDTO'
          description: Success
      summary: Returns instructions of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
    put:
      description: Updates instructions of a given project.
      operationId: update_instructions1
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateInstructions.json#requestBody
            schema:
              $ref: '#/components/schemas/InstructionsDTO'
        description: Updated instructions of a given project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateInstructions.json#responseBody
              schema:
                $ref: '#/components/schemas/InstructionsDTO'
          description: Success
      summary: Updates instructions of a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/languageCombinations:
    post:
      description: Creates a new language combination for a given project without
        creating a task.
      operationId: create_language_combination
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createLanguageCombination.json#requestBody
            schema:
              $ref: '#/components/schemas/CommonLanguageCombinationDTO'
        description: Created language combination for a given project without creating
          a task.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createLanguageCombination.json#responseBody
              schema:
                $ref: '#/components/schemas/CommonLanguageCombinationDTO'
          description: Success
      summary: Creates a new language combination for a given project without creating
        a task.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /projects/{projectId}/tasks:
    post:
      description: |
        Creates a new task for a given project.<p>
          Required fields:
          <ul>
            <li>languageCombination</li>
            <li>specializationId</li>
            <li>workflowId</li>
          </ul>
        </p>
      operationId: create_task
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createTask.json#requestBody
            schema:
              $ref: '#/components/schemas/TaskCreateDTO'
        description: Created new task for a given project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createTask.json#responseBody
              schema:
                $ref: '#/components/schemas/TaskDTO'
          description: Success
      summary: Creates a new task for a given project.
      tags:
      - Projects (Classic)
      x-openapi-router-controller: openapi_server.controllers.projects_(classic)controller
      x-codegen-request-body-name: body
  /providers/ids:
    get:
      description: Returns providers' internal identifiers.
      operationId: get_all_ids5
      parameters:
      - description: only providers modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns providers' internal identifiers.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/persons/ids:
    get:
      description: Returns persons' internal identifiers.
      operationId: get_all_ids4
      parameters:
      - description: only persons modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns persons' internal identifiers.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/persons/{personId}:
    delete:
      description: Removes a person.
      operationId: delete8
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8: {}
          description: Success
      summary: Removes a person.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
    get:
      description: Returns person details.
      operationId: get_by_id4
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProviderPersonDTO'
          description: Success
      summary: Returns person details.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/persons/{personId}/contact:
    get:
      description: Returns contact of a given person.
      operationId: get_contact2
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/getContact.json#responseBody
              schema:
                $ref: '#/components/schemas/PersonContactDTO'
          description: Success
      summary: Returns contact of a given person.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/persons/{personId}/customFields:
    get:
      description: Returns custom fields of a given person.
      operationId: get_custom_fields2
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns custom fields of a given person.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/persons/{personId}/notification/invitation:
    post:
      description: Sends invitation to Vendor Portal.
      operationId: send_invitations
      parameters:
      - description: person's internal identifier
        explode: false
        in: path
        name: personId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/sendInvitations.json#responseBody
              schema:
                $ref: '#/components/schemas/InvitationStatisticsDTO'
          description: Success
      summary: Sends invitation to Vendor Portal.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/priceLists/{priceListId}:
    delete:
      description: Removes a provider price list.
      operationId: delete9
      parameters:
      - description: provider price list's internal identifier
        explode: false
        in: path
        name: priceListId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a provider price list.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/{providerId}:
    delete:
      description: Removes a provider.
      operationId: delete10
      parameters:
      - description: provider's internal identifier
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a provider.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
    get:
      description: Returns provider details.
      operationId: get_by_id5
      parameters:
      - description: provider's internal identifier
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: list of adittional fields which should be embedded in the response
          (ie. persons)
        explode: true
        in: query
        name: embed
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProviderDTO'
          description: Success
      summary: Returns provider details.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/{providerId}/address:
    get:
      description: Returns address of a given provider.
      operationId: get_address1
      parameters:
      - description: provider's internal identifier
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/address/getAddress.json#responseBody
              schema:
                $ref: '#/components/schemas/AddressDTO'
          description: Success
      summary: Returns address of a given provider.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/{providerId}/competencies:
    get:
      description: Returns competencies of a given provider.
      operationId: get_competencies
      parameters:
      - description: provider's internal identifier
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getCompetencies.json#responseBody
              schema:
                $ref: '#/components/schemas/CompetenciesDTO'
          description: Success
      summary: Returns competencies of a given provider.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/{providerId}/contact:
    get:
      description: Returns contact of a given provider.
      operationId: get_contact3
      parameters:
      - description: provider's internal identifier
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getContact.json#responseBody
              schema:
                $ref: '#/components/schemas/ContactDTO'
          description: Success
      summary: Returns contact of a given provider.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/{providerId}/correspondenceAddress:
    get:
      description: Returns correspondence address of a given provider.
      operationId: get_correspondence_address1
      parameters:
      - description: provider's internal identifier
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/address/getCorrespondenceAddress.json#responseBody
              schema:
                $ref: '#/components/schemas/AddressDTO'
          description: Success
      summary: Returns correspondence address of a given provider.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/{providerId}/customFields:
    get:
      description: Returns custom fields of a given provider.
      operationId: get_custom_fields3
      parameters:
      - description: provider's internal identifier
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns custom fields of a given provider.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /providers/{providerId}/notification/invitation:
    post:
      description: Sends invitations to Vendor Portal.
      operationId: send_invitations1
      parameters:
      - description: provider's internal identifier
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/sendInvitations.json#responseBody
              schema:
                $ref: '#/components/schemas/InvitationStatisticsDTO'
          description: Success
      summary: Sends invitations to Vendor Portal.
      tags:
      - Vendors
      x-openapi-router-controller: openapi_server.controllers.vendors_controller
  /quotes/ids:
    get:
      description: Returns quotes' internal identifiers.
      operationId: get_all_ids7
      parameters:
      - description: only quotes modified since this timestamp
        explode: true
        in: query
        name: updatedSince
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns quotes' internal identifiers.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
  /quotes/{quoteId}:
    delete:
      description: Removes a quote.
      operationId: delete13
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
    get:
      description: "Returns quote details. If the specified quote ID refers to Smart\
        \ Quote, 400 Bad Request is returned instead."
      operationId: get_by_id8
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: list of adittional fields which should be embedded in the response
          (ie. tasks)
        explode: true
        in: query
        name: embed
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/QuoteDTOv1'
          description: Success
      summary: Returns quote details.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
  /quotes/{quoteId}/confirmation/send:
    post:
      description: Sends a quote for customer confirmation. Quote status is changed
        to SENT and a document is sent to the customer.
      operationId: send1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      summary: Sends a quote for customer confirmation.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
  /quotes/{quoteId}/customFields:
    get:
      description: Returns custom fields of a given quote.
      operationId: get_custom_fields6
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns custom fields of a given quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
    put:
      description: Updates custom fields of a given quote.
      operationId: update_custom_fields4
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/updateCustomFields.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomFieldsDTO'
        description: Updated custom fields of a given quote.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/updateCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Updates custom fields of a given quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
      x-codegen-request-body-name: body
  /quotes/{quoteId}/dates:
    get:
      description: Returns dates of a given quote.
      operationId: get_dates2
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getDates.json#responseBody
              schema:
                $ref: '#/components/schemas/QuoteDatesDTO'
          description: Success
      summary: Returns dates of a given quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
  /quotes/{quoteId}/finance:
    get:
      description: Returns finance of a given quote.
      operationId: get_finance1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getFinance.json#responseBody
              schema:
                $ref: '#/components/schemas/FinanceDTO'
          description: Success
      summary: Returns finance of a given quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
  /quotes/{quoteId}/finance/payables:
    post:
      description: Adds a payable.
      operationId: create_payable1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/createCATPayable.json#requestBody
            schema:
              $ref: '#/components/schemas/PayableCreateDTO'
        description: Adds a payable.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/createCATPayable.json#responseBody
              schema:
                $ref: '#/components/schemas/PayableDTO'
          description: Success
      summary: Adds a payable.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
      x-codegen-request-body-name: body
  /quotes/{quoteId}/finance/payables/{payableId}:
    delete:
      description: Deletes a payable.
      operationId: delete_payable1
      parameters:
      - description: quoteId's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: payable's internal identifier
        explode: false
        in: path
        name: payableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Deletes a payable.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
    put:
      description: Updates a payable.
      operationId: update_payable1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: payable's internal identifier
        explode: false
        in: path
        name: payableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/updatePayable.json#requestBody
            schema:
              $ref: '#/components/schemas/PayableDTO'
        description: Updates a payable.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/updatePayable.json#responseBody
              schema:
                $ref: '#/components/schemas/PayableDTO'
          description: Success
      summary: Updates a payable.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
      x-codegen-request-body-name: body
  /quotes/{quoteId}/finance/receivables:
    post:
      description: Adds a receivable.
      operationId: create_receivable1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/createReceivable.json#requestBody
            schema:
              $ref: '#/components/schemas/ReceivableCreateDTO'
        description: Adds a receivable.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/createReceivable.json#responseBody
              schema:
                $ref: '#/components/schemas/ReceivableDTO'
          description: Success
      summary: Adds a receivable.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
      x-codegen-request-body-name: body
  /quotes/{quoteId}/finance/receivables/{receivableId}:
    delete:
      description: Deletes a receivable.
      operationId: delete_receivable1
      parameters:
      - description: quoteId's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: receivable's internal identifier
        explode: false
        in: path
        name: receivableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Deletes a receivable.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
    put:
      description: Updates a receivable.
      operationId: update_receivable1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: receivable's internal identifier
        explode: false
        in: path
        name: receivableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/updateReceivable.json#requestBody
            schema:
              $ref: '#/components/schemas/ReceivableDTO'
        description: Updates a receivable.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/updateReceivable.json#responseBody
              schema:
                $ref: '#/components/schemas/ReceivableDTO'
          description: Success
      summary: Updates a receivable.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
      x-codegen-request-body-name: body
  /quotes/{quoteId}/instructions:
    get:
      description: Returns instructions of a given quote.
      operationId: get_instructions1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getInstructions.json#responseBody
              schema:
                $ref: '#/components/schemas/InstructionsDTO'
          description: Success
      summary: Returns instructions of a given quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
    put:
      description: Updates instructions of a given quote.
      operationId: update_instructions2
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/updateInstructions.json#requestBody
            schema:
              $ref: '#/components/schemas/InstructionsDTO'
        description: Updated instructions of a given project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/updateInstructions.json#responseBody
              schema:
                $ref: '#/components/schemas/InstructionsDTO'
          description: Success
      summary: Updates instructions of a given quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
      x-codegen-request-body-name: body
  /quotes/{quoteId}/languageCombinations:
    post:
      description: Creates a new language combination for a given quote without creating
        a task.
      operationId: create_language_combination1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/createLanguageCombination.json#requestBody
            schema:
              $ref: '#/components/schemas/CommonLanguageCombinationDTO'
        description: Created a new language combination for a given quote without
          creating a task.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/createLanguageCombination.json#responseBody
              schema:
                $ref: '#/components/schemas/CommonLanguageCombinationDTO'
          description: Success
      summary: Creates a new language combination for a given quote without creating
        a task.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
      x-codegen-request-body-name: body
  /quotes/{quoteId}/start:
    post:
      description: Starts a quote.
      operationId: start
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      summary: Starts a quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
  /quotes/{quoteId}/tasks:
    post:
      description: Creates a new task for a given quote. Required fields are presented
        in the example.
      operationId: create_task1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/createTask.json#requestBody
            schema:
              $ref: '#/components/schemas/TaskDTO'
        description: Updated custom fields of a given quote.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/createTask.json#responseBody
              schema:
                $ref: '#/components/schemas/TaskDTO'
          description: Success
      summary: Creates a new task for a given quote.
      tags:
      - Quotes (Classic)
      x-openapi-router-controller: openapi_server.controllers.quotes_(classic)controller
      x-codegen-request-body-name: body
  /reports/export/xml:
    post:
      description: Exports reports definition to XML.
      operationId: export_to_xml
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/reports/exportToXML.json#requestBody
            schema:
              $ref: '#/components/schemas/ExportRequestDTO'
        description: Exported reports definition to XML.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/reports/exportToXML.json#responseBody
              schema:
                $ref: '#/components/schemas/ReportResultDTO'
          description: Success
      summary: Exports reports definition to XML.
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
      x-codegen-request-body-name: body
  /reports/import/xml:
    post:
      description: "Imports a report definition from an XML using a file token. To\
        \ obtain the token, you first need to upload a temporary XML file, as specified\
        \ in the Files section. Note that the name of the imported report must be\
        \ unique."
      operationId: import_from_xml
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/reports/importFromXML.json#requestBody
            schema:
              $ref: '#/components/schemas/ImportRequestDTO'
        description: Imported reports definition from XML.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/reports/importFromXML.json#responseBody
              schema:
                $ref: '#/components/schemas/ImportResultDTO'
          description: Success
      summary: Imports reports definition from XML.
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
      x-codegen-request-body-name: body
  /reports/{reportId}:
    delete:
      description: Removes a report.
      operationId: delete11
      parameters:
      - description: report's internal identifier
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Removes a report.
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /reports/{reportId}/duplicate:
    post:
      description: Duplicates a report.
      operationId: duplicate1
      parameters:
      - description: report's internal identifier
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Duplicates a report.
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /reports/{reportId}/preferred:
    put:
      description: Marks report as preferred or not.
      operationId: set_preferred
      parameters:
      - description: report's internal identifier
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/PreferredRequestDTO'
        description: Marked report as preferred or not.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Marks report as preferred or not.
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
      x-codegen-request-body-name: body
  /reports/{reportId}/result/csv:
    get:
      description: Generates CSV content for a report.
      operationId: generate_csv
      parameters:
      - description: report's internal identifier
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/reports//generateCSV.json#responseBody
              schema:
                $ref: '#/components/schemas/ReportResultDTO'
          description: Success
      summary: Generates CSV content for a report.
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /reports/{reportId}/result/printerFriendly:
    get:
      description: Generates printer friendly content for a report.
      operationId: generate_printer_friendly
      parameters:
      - description: report's internal identifier
        explode: false
        in: path
        name: reportId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/reports//generatePrinterFriendly.json#responseBody
              schema:
                $ref: '#/components/schemas/ReportResultDTO'
          description: Success
      summary: Generates printer friendly content for a report.
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /services/active:
    get:
      description: Returns active workflows list
      operationId: get_all_active
      parameters:
      - description: exact name of entity
        explode: true
        in: query
        name: nameEquals
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/services/active-v1.json#responseBody
              schema:
                $ref: '#/components/schemas/ServiceDTO'
          description: Success
      summary: Returns active services list
      tags:
      - Dictionaries
      x-openapi-router-controller: openapi_server.controllers.dictionaries_controller
  /services/all:
    get:
      description: Returns workflows list. Both active and not active ones.
      operationId: get_all3
      parameters:
      - description: exact name of entity
        explode: true
        in: query
        name: nameEquals
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/services/all-v1.json#responseBody
              schema:
                $ref: '#/components/schemas/ServiceDTO'
          description: Success
      summary: Returns services list
      tags:
      - Dictionaries
      x-openapi-router-controller: openapi_server.controllers.dictionaries_controller
  /subscription:
    get:
      description: Returns all subscriptions. Subscriptions are automatically removed
        if they do not work (ie. if 404 status is returned). To improve notification
        reliability one can use this method to check if subscription is still active
        and re-subscribe if necessary.
      operationId: get_all4
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/subscription/getAll.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ActiveSubscriptionDTO'
                type: array
          description: Success
      summary: Returns all subscriptions
      tags:
      - Subscription
      x-openapi-router-controller: openapi_server.controllers.subscription_controller
    post:
      description: Subscribe to event. Returns subscription Id.
      operationId: subscribe
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/SubscriptionDTO'
        description: Returns subscription Id.
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/subscription/subscribe_created.json#responseBody
              schema:
                type: string
          description: Success
        "409":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/subscription/subscribe_conflict.json#responseBody
              schema:
                type: string
          description: Success
      summary: Subscribe to event
      tags:
      - Subscription
      x-openapi-router-controller: openapi_server.controllers.subscription_controller
      x-codegen-request-body-name: body
  /subscription/supports:
    get:
      description: This method can be used to determine if hooks are supported.
      operationId: are_hooks_supported
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              schema:
                type: boolean
          description: Success
      summary: This method can be used to determine if hooks are supported.
      tags:
      - Subscription
      x-openapi-router-controller: openapi_server.controllers.subscription_controller
  /subscription/{subscriptionId}:
    delete:
      description: Unsubscribe from job status changed event
      operationId: unsubscribe
      parameters:
      - explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      summary: Unsubscribe from event
      tags:
      - Subscription
      x-openapi-router-controller: openapi_server.controllers.subscription_controller
  /tasks/{taskId}:
    delete:
      description: Removes a task.
      operationId: delete14
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: remove files from disc
        explode: true
        in: query
        name: removeFilesFromDisc
        required: false
        schema:
          type: boolean
        style: form
      - description: remove external projects (ie. from CAT Tool)
        explode: true
        in: query
        name: removeExternalProjects
        required: false
        schema:
          type: boolean
        style: form
      - description: force jobs removal (ie. started or ready)
        explode: true
        in: query
        name: forceJobsRemoval
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Success
      summary: Removes a task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
  /tasks/{taskId}/clientTaskPONumber:
    put:
      description: Updates Client Task PO Number of a given task.
      operationId: update_client_task_po_number
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateClientTaskPONumber.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated Client Task PO Number of a given task.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/updateClientTaskPONumber.json#responseBody
              schema:
                $ref: '#/components/schemas/StringDTO'
          description: Success
      summary: Updates Client Task PO Number of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
      x-codegen-request-body-name: body
  /tasks/{taskId}/contacts:
    get:
      description: Returns contacts of a given task.
      operationId: get_contacts1
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getContacts.json#responseBody
              schema:
                $ref: '#/components/schemas/ContactsDTO'
          description: Success
      summary: Returns contacts of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
    put:
      description: Updates contacts of a given task.
      operationId: update_contacts1
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateContacts.json#requestBody
            schema:
              $ref: '#/components/schemas/ContactsDTO'
        description: Updated contacts of given task.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ContactsDTO'
          description: Success
      summary: Updates contacts of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
      x-codegen-request-body-name: body
  /tasks/{taskId}/customFields:
    get:
      description: Returns custom fields of a given task.
      operationId: get_custom_fields7
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns custom fields of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
    put:
      description: Updates custom fields of a given task.
      operationId: update_custom_fields5
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateCustomFields.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomFieldsDTO'
        description: Updated custom fields
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/updateCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Updates custom fields of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
      x-codegen-request-body-name: body
  /tasks/{taskId}/dates:
    get:
      description: Returns dates of a given task.
      operationId: get_dates3
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getDates.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectDatesDTO'
          description: Success
      summary: Returns dates of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
    put:
      description: Updates dates of a given task.
      operationId: update_dates2
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateDates.json#requestBody
            schema:
              $ref: '#/components/schemas/ProjectDatesDTO'
        description: Updated dates of a given task.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProjectDatesDTO'
          description: Success
      summary: Updates dates of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
      x-codegen-request-body-name: body
  /tasks/{taskId}/files:
    get:
      description: "Returns several lists of files for a given task: input files divided\
        \ by type, output files, bundles, files per job, preview files."
      operationId: get_task_files
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getTaskFiles.json#responseBody
              schema:
                $ref: '#/components/schemas/TaskFilesDTO'
          description: Success
      summary: Returns lists of files of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
  /tasks/{taskId}/files/input:
    post:
      description: Adds files to a given task.
      operationId: add_file
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/addFile.json#requestBody
            schema:
              $ref: '#/components/schemas/FileDTO'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Adds files to a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
      x-codegen-request-body-name: body
  /tasks/{taskId}/instructions:
    get:
      description: Returns instructions of a given task.
      operationId: get_instructions2
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getInstructions.json#responseBody
              schema:
                $ref: '#/components/schemas/InstructionsDTO'
          description: Success
      summary: Returns instructions of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
    put:
      description: Updates instructions of a given task.
      operationId: update_instructions3
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateInstructions.json#requestBody
            schema:
              $ref: '#/components/schemas/InstructionsDTO'
        description: Updated instructions of a given task.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/updateInstructions.json#responseBody
              schema:
                $ref: '#/components/schemas/InstructionsDTO'
          description: Success
      summary: Updates instructions of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
      x-codegen-request-body-name: body
  /tasks/{taskId}/name:
    put:
      description: Updates name of a given task.
      operationId: update_name
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateName.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/updateName.json#responseBody
              schema:
                $ref: '#/components/schemas/StringDTO'
          description: Success
      summary: Updates name of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
      x-codegen-request-body-name: body
  /tasks/{taskId}/progress:
    get:
      description: Returns progress of a given task. Progress contains information
        about task's status (ie. opened or ready) and current phase (ie. translation).
        Workflow phase is defined as the first one which contains not ready jobs (ie.
        opened or started). When no such job exists then workflow phase is not included.
      operationId: get_progress
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getProgress.json#responseBody
              schema:
                $ref: '#/components/schemas/TaskProgressDTO'
          description: Success
      summary: Returns progress of a given task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
  /tasks/{taskId}/start:
    post:
      description: Starts a task.
      operationId: start1
      parameters:
      - description: task's internal identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      summary: Starts a task.
      tags:
      - Tasks (Classic)
      x-openapi-router-controller: openapi_server.controllers.tasks_(classic)controller
  /users:
    get:
      description: Returns list of simple users representations
      operationId: get_all_names_with_ids1
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getAllNamesWithIds.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/EntityWithNameDTO'
                type: array
          description: Success
      summary: Returns list of simple users representations
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/me:
    get:
      description: Returns currently signed in user details.
      operationId: get_me
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getMe.json#responseBody
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: Success
      summary: Returns currently signed in user details.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/me/timeZone:
    get:
      description: Returns time zone preferred by user currently signed in.
      operationId: get_time_zone
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getTimeZone.json#responseBody
              schema:
                $ref: '#/components/schemas/TimeZoneDTO'
          description: Success
      summary: Returns time zone preferred by user currently signed in.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{userId}:
    get:
      description: Returns user details.
      operationId: get_by_id6
      parameters:
      - description: user's internal identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: Success
      summary: Returns user details.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    put:
      description: Updates an existing user.
      operationId: update3
      parameters:
      - description: user's internal identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/users/update2.json#requestBody
            schema:
              $ref: '#/components/schemas/UserDTO'
        description: Updated existing user.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/update2.json#responseBody
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: Success
      summary: Updates an existing user.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /users/{userId}/customFields:
    get:
      description: Returns custom fields of a given user.
      operationId: get_custom_fields4
      parameters:
      - description: user's internal identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns custom fields of a given user.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    put:
      description: Updates custom fields of a given user.
      operationId: update_custom_fields2
      parameters:
      - description: user's internal identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/users/updateCustomFields.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomFieldsDTO'
        description: Updated custom fields of a given user.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/updateCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Updates custom fields of a given user.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /users/{userId}/customFields/{customFieldKey}:
    get:
      description: Returns custom field of a given user.
      operationId: get_custom_field1
      parameters:
      - description: user's internal identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: custom field's key
        explode: false
        in: path
        name: customFieldKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getCustomField.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldDTO'
          description: Success
      summary: Returns custom field of a given user.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    put:
      description: Updates given custom field of a given user.
      operationId: update_custom_field1
      parameters:
      - description: user's internal identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: custom field's key
        explode: false
        in: path
        name: customFieldKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/users/updateCustomField.json#requestBody
            schema:
              $ref: '#/components/schemas/CustomFieldDTO'
        description: Updated custom fields of a given user.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/updateCustomField.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldDTO'
          description: Success
      summary: Updates given custom field of a given user.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /users/{userId}/password:
    put:
      description: Sets user's password to a new value.
      operationId: change_password
      parameters:
      - description: user's internal identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/changePassword_request'
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Sets user's password to a new value.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /v2/jobs/for-external-id:
    get:
      operationId: get_by_external_id
      parameters:
      - description: job's externalProjectId
        explode: true
        in: query
        name: externalProjectId
        required: false
        schema:
          type: string
        style: form
      - description: job's external identifier
        explode: true
        in: query
        name: externalId
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json;charset=UTF-8: {}
          description: default response
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
  /v2/jobs/{jobId}:
    get:
      description: Returns details for a job.
      operationId: get_file_by_id1
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectFileDto'
          description: Success
      summary: Returns details for a job.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
  /v2/jobs/{jobId}/dates:
    put:
      description: Updates dates of a given job.
      operationId: change_dates
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/changeDates.json#requestBody
            schema:
              $ref: '#/components/schemas/JobDatesDto'
        description: New job dates.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates dates of a given job.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/files/addExternalLink:
    post:
      operationId: add_external_file_link
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalFileDto'
        description: Added file links to the project as added by PM.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8: {}
          description: default response
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/files/delivered:
    get:
      description: Returns list of files delivered in the job.
      operationId: get_delivered_files
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/getDeliveredFiles.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFileDto'
                type: array
          description: Success
      summary: Returns list of files delivered in the job.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
  /v2/jobs/{jobId}/files/delivered/add:
    put:
      description: "Adds files to the project as delivered in the job. The files have\
        \ to be uploaded beforehand (see \"POST /jobs/{jobId}/files/upload\" operation).\
        \ The following properties can be specified for each file:<ul><li>category\
        \ (required, 400 Bad Request is returned otherwise)</li><li>languageIds –\
        \ when the file category depends on a list of languages</li><li>languageCombinationIds\
        \ – when the file category depends on a list of language combinations</li></ul>"
      operationId: add_files
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/addFiles.json#requestBody
            schema:
              $ref: '#/components/schemas/FileCategorizationsDto'
        description: Added files to the project as delivered in the job.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Adds files to the project as delivered in the job.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/files/delivered/addLink:
    post:
      description: "Adds file link to the project as a link delivered in the job.\
        \ The following properties can be specified for each file link:<ul><li>url\
        \ (required, 400 Bad Request is returned otherwise)</li><li>category (required,\
        \ 400 Bad Request is returned otherwise)</li><li>languageIds – when the file\
        \ category depends on a list of languages</li><li>languageCombinationIds –\
        \ when the file category depends on a list of language combinations</li></ul>"
      operationId: add_file_links
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/addFileLinksToJob.json#requestBody
            schema:
              $ref: '#/components/schemas/FileLinkCategorizationsDto'
        description: Adds file link to the project as a link delivered in the job.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/addFileLinksToJob.json#responseBody
              schema:
                $ref: '#/components/schemas/FilesDto'
          description: Success
      summary: Adds file link to the project as a link delivered in the job.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/files/delivered/upload:
    post:
      description: "Uploads file to the project as a file delivered in the job. Only\
        \ one file can be uploaded at once. When the upload is finished the file has\
        \ to be added by specifying its category and languages (see \"PUT /jobs/{jobId}/files/add\"\
        \ operation)."
      operationId: upload_file1
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileToUploadDto'
        description: Uploaded file to the project as a file delivered in the job.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/uploadFile.json#responseBody
              schema:
                $ref: '#/components/schemas/FileDto'
          description: Success
      summary: Uploads file to the project as a file delivered in the job.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/files/sharedReferenceFiles:
    get:
      description: Returns list of files shared with the job as Reference Files.
      operationId: get_shared_reference_files
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/getSharedReferenceFiles.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFileDto'
                type: array
          description: Success
      summary: Returns list of files shared with the job as Reference Files.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
  /v2/jobs/{jobId}/files/sharedReferenceFiles/share:
    put:
      description: "Shares selected files as Reference Files with a job in a project.\
        \ The files and the job have to be part of the same project. The operation\
        \ is finished successfully even if some of the selected files were already\
        \ shared with the job. If a file was shared with the job as Work File, it\
        \ will now be shared as Reference File (and not as Work File)."
      operationId: share_as_reference_files
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/shareAsReferenceFiles.json#requestBody
            schema:
              $ref: '#/components/schemas/FilesDto'
        description: Shared selected files as Reference Files with a job in a project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/shareAsReferenceFiles.json#responseBody
              schema:
                $ref: '#/components/schemas/FilesShareStatusDto'
          description: Success
      summary: Shares selected files as Reference Files with a job in a project.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/files/sharedWorkFiles:
    get:
      description: Returns list of files shared with the job as Work Files.
      operationId: get_shared_work_files
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/getSharedWorkFiles.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFileDto'
                type: array
          description: Success
      summary: Returns list of files shared with the job as Work Files.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
  /v2/jobs/{jobId}/files/sharedWorkFiles/share:
    put:
      description: "Shares selected files as Work Files with a job in a project. The\
        \ files and the job have to be part of the same project. The operation is\
        \ finished successfully even if some of the selected files were already shared\
        \ with the job. If a file was shared with the job as Reference File, it will\
        \ now be shared as Work File (and not as Reference File)."
      operationId: share_as_work_files
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/shareAsWorkFiles.json#requestBody
            schema:
              $ref: '#/components/schemas/FilesDto'
        description: Shared selected files as Work Files with a job in a project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/shareAsWorkFiles.json#responseBody
              schema:
                $ref: '#/components/schemas/FilesShareStatusDto'
          description: Success
      summary: Shares selected files as Work Files with a job in a project.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/files/stopSharing:
    put:
      description: Stops sharing selected files with a job in a project. The files
        and the job have to be part of the same project. The operation is finished
        successfully even if some of the selected files were not shared with the job.
      operationId: stop_sharing
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/stopSharing.json#requestBody
            schema:
              $ref: '#/components/schemas/FilesDto'
        description: File sharing stopped for a project task.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/stopSharing.json#responseBody
              schema:
                $ref: '#/components/schemas/FilesShareStatusDto'
          description: Success
      summary: Stops sharing selected files with a job in a project.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/instructions:
    put:
      description: "Updates instructions for a job. See also \"PUT /projects/{projectId}/vendorInstructions\"\
        \ and \"PUT /quotes/{quoteId}/vendorInstructions\" for updating instructions\
        \ for all jobs in a project or quote."
      operationId: update_instructions4
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/updateInstructionsForJob.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated instructions for a job.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates instructions for a job.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/status:
    put:
      description: "Changes job status if possible (400 Bad Request is returned otherwise).\
        \ The status has to be specified using one of the following keys:<ul><li>OPEN\
        \ – available when the job has one of the following statuses: ACCEPTED, CANCELED</li><li>ACCEPTED\
        \ – available when the job has one of the following statuses: OPEN (Vendor\
        \ and dates have to be set before calling the operation), STARTED</li><li>STARTED\
        \ – available when the job has one of the following statuses: ACCEPTED, READY</li><li>READY\
        \ – available when the job has one of the following statuses: STARTED</li><li>CANCELLED\
        \ – available when the job has one of the following statuses: OPEN, ACCEPTED,\
        \ STARTED, OFFERS_SENT</li><li>OFFERS_SENT – not available as a target status\
        \ for this operation</li></ul>"
      operationId: change_status1
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/changeStatus.json#requestBody
            schema:
              $ref: '#/components/schemas/JobStatusDTO'
        description: Changed job status.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Changes job status if possible (400 Bad Request is returned otherwise).
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/jobs/{jobId}/vendor:
    put:
      description: Assigns vendor to a job in a project.
      operationId: assign_vendor1
      parameters:
      - description: job's internal identifier
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/assignVendor.json#requestBody
            schema:
              $ref: '#/components/schemas/VendorPriceProfileDTO'
        description: Assigned vendor to a job in a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Assigns vendor to a job in a project.
      tags:
      - Jobs (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.jobs_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects:
    post:
      description: "Creates a new Smart Project. If the specified service ID refers\
        \ to Classic Project, 400 Bad Request is returned instead."
      operationId: create6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateDTO'
        x-body-name: body
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/createProject.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectDTOv2'
          description: Success
      summary: Creates a new Smart Project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/files/archive:
    post:
      description: Prepares a ZIP archive that contains the specified files.
      operationId: archive
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/archive.json#requestBody
            schema:
              $ref: '#/components/schemas/FilesDto'
        description: Prepared ZIP archive that contains the specified files.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/archive.json#responseBody
              schema:
                $ref: '#/components/schemas/FilesArchiveDto'
          description: Success
      summary: Prepares a ZIP archive that contains the specified files.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/files/{fileId}:
    get:
      description: Returns details of a file.
      operationId: get_file_by_id2
      parameters:
      - description: file's internal identifier
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getFileById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectFileDto'
          description: Success
      summary: Returns details of a file.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/files/{fileId}/download/{fileName}:
    get:
      description: Downloads a file content.
      operationId: get_file_content_by_id
      parameters:
      - description: file's internal identifier
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      - description: file's name
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            multipart/form-data: {}
          description: Success
      summary: Downloads a file content.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/for-external-id/{externalProjectId}:
    get:
      description: Returns project details.
      operationId: get_by_external_id1
      parameters:
      - description: project's external identifier
        explode: false
        in: path
        name: externalProjectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectDTOv2'
          description: Success
      summary: Returns project details.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}:
    get:
      description: "Returns project details. If the specified project ID refers to\
        \ Classic Project, 400 Bad Request is returned instead."
      operationId: get_by_id9
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectDTOv2'
          description: Success
      summary: Returns project details.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/addJob:
    post:
      operationId: add_job_to_process
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CATToolProjectDTO'
          description: Success
      summary: Returns process id.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/catToolProject:
    get:
      operationId: get_cat_tool_project_info
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CATToolProjectDTO'
          description: Success
      summary: Returns if cat tool project is created or queued.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/clientContacts:
    get:
      description: Returns Client Contacts information for a project
      operationId: get_contacts2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getClientContacts.json#responseBody
              schema:
                $ref: '#/components/schemas/SmartContactsDTO'
          description: Success
      summary: Returns Client Contacts information for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
    put:
      description: Updates Client Contacts for a project.
      operationId: update_contacts2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateClientContacts.json#requestBody
            schema:
              $ref: '#/components/schemas/SmartContactsDTO'
        description: Updated Client Contacts for a project.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/updateClientContacts.json#responseBody
              schema:
                $ref: '#/components/schemas/SmartContactsDTO'
          description: Success
      summary: Updates Client Contacts for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/clientDeadline:
    put:
      description: Updates Client Deadline for a project.
      operationId: update_client_deadline
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateClientDeadline.json#requestBody
            schema:
              $ref: '#/components/schemas/TimeDTO'
        description: Updated Client Deadline for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Client Deadline for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/clientNotes:
    put:
      description: Updates Client Notes for a project.
      operationId: update_client_notes
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateClientNotes.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated Client Notes for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Client Notes for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/clientReferenceNumber:
    put:
      description: Updates Client Reference Number for a project.
      operationId: update_client_reference_number
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateClientReferenceNumber.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated Client Reference Number for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Client Reference Number for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/customFields:
    get:
      description: Returns a list of custom field keys and values for a project.
      operationId: get_custom_fields8
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns a list of custom field keys and values for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/customFields/{key}:
    put:
      description: Updates a custom field with a specified key in a project
      operationId: update_custom_field2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: custom field's key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateCustomField.json#requestBody
            schema:
              $ref: '#/components/schemas/SmartCustomFieldDTO'
        description: Updated custom field with a specified key in a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates a custom field with a specified key in a project
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/files:
    get:
      description: Returns list of files in a project. Only files added to the project
        (i.e. files that have assigned category and languages) are listed.
      operationId: get_files
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getFiles.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFileDto'
                type: array
          description: Success
      summary: Returns list of files in a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/files/add:
    put:
      description: "Adds files to the project as added by PM. The files have to be\
        \ uploaded beforehand (see \"POST /v2/projects/{projectId}/files/upload\"\
        \ operation). The following properties can be specified for each file:<ul><li>category\
        \ (required, 400 Bad Request is returned otherwise)</li><li>languageIds –\
        \ when the file category depends on a list of languages</li><li>languageCombinationIds\
        \ – when the file category depends on a list of language combinations</li></ul>"
      operationId: add_files1
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/addFiles.json#requestBody
            schema:
              $ref: '#/components/schemas/FileCategorizationsDto'
        description: Added files to the project as added by PM.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Adds files to the project as added by PM.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/files/addExternalLink:
    post:
      operationId: add_external_file_links
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalFileDto'
        description: Added file links to the project as added by PM.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8: {}
          description: default response
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/files/addLink:
    post:
      description: "Adds file links to the project as added by PM. The following properties\
        \ can be specified for each file link:<ul><li>url (required, 400 Bad Request\
        \ is returned otherwise)</li><li>category (required, 400 Bad Request is returned\
        \ otherwise)</li><li>languageIds – when the file category depends on a list\
        \ of languages</li><li>languageCombinationIds – when the file category depends\
        \ on a list of language combinations</li></ul>"
      operationId: add_file_links1
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/addFileLinks.json#requestBody
            schema:
              $ref: '#/components/schemas/FileLinkCategorizationsDto'
        description: Added file links to the project as added by PM.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/addFileLinks.json#responseBody
              schema:
                $ref: '#/components/schemas/FilesDto'
          description: Success
      summary: Adds file links to the project as added by PM.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/files/deliverable:
    get:
      description: "Returns list of files in a project, that are ready to be delivered\
        \ to client. A file is considered deliverable to client when all of the following\
        \ criteria are met:<ul><li>the file was added to a job in the last step in\
        \ the process</li><li>the file is marked as verified (if it was added in a\
        \ verification step and the file is verifiable, according to its category)</li><li>the\
        \ job is finished (has Ready status)</li></ul>"
      operationId: get_deliverable_files
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getDeliverableFiles.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFileDto'
                type: array
          description: Success
      summary: "Returns list of files in a project, that are ready to be delivered\
        \ to client."
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/files/upload:
    post:
      description: "Uploads file to the project as a file uploaded by PM. Only one\
        \ file can be uploaded at once. When the upload is finished the file has to\
        \ be added by specifying its category and languages (see \"PUT /v2/projects/{projectId}/files/add\"\
        \ operation"
      operationId: upload_file2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileToUploadDto'
        description: Uploaded file
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/uploadFile.json#responseBody
              schema:
                $ref: '#/components/schemas/FileDto'
          description: Success
      summary: Uploads file to the project as a file uploaded by PM.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/finance:
    get:
      description: Returns finance information for a project.
      operationId: get_finance2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getFinance.json#responseBody
              schema:
                $ref: '#/components/schemas/FinanceDTO'
          description: Success
      summary: Returns finance information for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/finance/payables:
    post:
      description: Adds a payable to a project.
      operationId: create_payable2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/createPayable.json#requestBody
            schema:
              $ref: '#/components/schemas/PayableCreateDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/createPayable.json#responseBody
              schema:
                $ref: '#/components/schemas/PayableDTO'
          description: Success
      summary: Adds a payable to a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/finance/payables/{payableId}:
    delete:
      description: Deletes a payable.
      operationId: delete_payable2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: payable's internal identifier
        explode: false
        in: path
        name: payableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Deletes a payable.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
    put:
      description: Updates a payable.
      operationId: update_payable2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: payable's internal identifier
        explode: false
        in: path
        name: payableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updatePayable.json#requestBody
            schema:
              $ref: '#/components/schemas/PayableDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/updatePayable.json#responseBody
              schema:
                $ref: '#/components/schemas/PayableDTO'
          description: Success
      summary: Updates a payable.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/finance/receivables:
    post:
      description: Adds a receivable to a project.
      operationId: create_receivable2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/createReceivable.json#requestBody
            schema:
              $ref: '#/components/schemas/ReceivableCreateDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/createReceivable.json#responseBody
              schema:
                $ref: '#/components/schemas/ReceivableDTO'
          description: Success
      summary: Adds a receivable to a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/finance/receivables/{receivableId}:
    delete:
      description: Deletes a receivable.
      operationId: delete_receivable2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: receivable's internal identifier
        explode: false
        in: path
        name: receivableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Deletes a receivable.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
    put:
      description: Updates a receivable.
      operationId: update_receivable2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: receivable's internal identifier
        explode: false
        in: path
        name: receivableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateReceivable.json#requestBody
            schema:
              $ref: '#/components/schemas/ReceivableDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/updateReceivable.json#responseBody
              schema:
                $ref: '#/components/schemas/ReceivableDTO'
          description: Success
      summary: Updates a receivable.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/internalNotes:
    put:
      description: Updates Internal Notes for a project.
      operationId: update_internal_notes
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateInternalNotes.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated Internal Notes for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Internal Notes for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/jobs:
    get:
      description: Returns list of jobs in a project.
      operationId: get_jobs
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getJobs.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/JobDto'
                type: array
          description: Success
      summary: Returns list of jobs in a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/orderDate:
    put:
      description: Updates Order Date for a project.
      operationId: update_ordered_on
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateOrderedOn.json#requestBody
            schema:
              $ref: '#/components/schemas/TimeDTO'
        description: Updated Order Date for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Order Date for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/process:
    get:
      operationId: get_process_id
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CATToolProjectDTO'
          description: Success
      summary: Returns process id.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
  /v2/projects/{projectId}/sourceLanguage:
    put:
      description: Updates source language for a project.
      operationId: update_source_language
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateSourceLanguage.json#requestBody
            schema:
              $ref: '#/components/schemas/SourceLanguageDTO'
        description: Updated source language for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates source language for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/specialization:
    put:
      description: Updates specialization for a project.
      operationId: update_specialization
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateSpecialization.json#requestBody
            schema:
              $ref: '#/components/schemas/SpecializationDTO'
        description: Updated specialization for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates specialization for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/status:
    put:
      description: "Changes project status if possible (400 Bad Request is returned\
        \ otherwise). The status has to be specified using one of the following keys:\
        \ <ul><li>CANCELLED – available when the job has one of the following statuses:\
        \ OPEN, STARTED</li></ul>"
      operationId: change_status2
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/changeStatus.json#requestBody
            schema:
              $ref: '#/components/schemas/ProjectStatusDTO'
        description: Changed project status.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Changes project status if possible (400 Bad Request is returned otherwise).
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/targetLanguages:
    put:
      description: Updates target languages for a project.
      operationId: update_target_languages
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateTargetLanguages.json#requestBody
            schema:
              $ref: '#/components/schemas/TargetLanguagesDTO'
        description: Updated target languages for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates target languages for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/vendorInstructions:
    put:
      description: "Updates instructions for all vendors performing the jobs in a\
        \ project. See also \"PUT /jobs/{jobId}/instructions\" for updating instructions\
        \ for a specific job in a project or quote."
      operationId: update_vendor_instructions
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateSpecialization.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated instructions for all vendors performing the jobs in a
          project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates instructions for all vendors performing the jobs in a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/projects/{projectId}/volume:
    put:
      description: Updates volume for a project.
      operationId: update_volume
      parameters:
      - description: project's internal identifier
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateVolume.json#requestBody
            schema:
              $ref: '#/components/schemas/BigDecimalDTO'
        description: Updated volume for a project.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates volume for a project.
      tags:
      - Projects (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.projects_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes:
    post:
      description: "Creates a new Smart Quote. If the specified service ID refers\
        \ to Classic Quote, 400 Bad Request is returned instead."
      operationId: create7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteCreateDTO'
        description: Project to create
        x-body-name: body
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/createQuote.json#responseBody
              schema:
                $ref: '#/components/schemas/QuoteDTOv2'
          description: Success
      summary: Creates a new Smart Quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/files/archive:
    post:
      description: Prepares a ZIP archive that contains the specified files.
      operationId: archive1
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/archive.json#requestBody
            schema:
              $ref: '#/components/schemas/FilesDto'
        description: Prepared ZIP archive that contains the specified files.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/archive.json#responseBody
              schema:
                $ref: '#/components/schemas/FilesArchiveDto'
          description: Success
      summary: Prepares a ZIP archive that contains the specified files.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/files/{fileId}:
    get:
      description: Returns details of a file.
      operationId: get_file_by_id3
      parameters:
      - description: file's internal identifier
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getFileById.json#responseBody
              schema:
                $ref: '#/components/schemas/ProjectFileDto'
          description: Success
      summary: Returns details of a file.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
  /v2/quotes/files/{fileId}/download/{fileName}:
    get:
      description: Downloads a file content.
      operationId: get_file_content_by_id1
      parameters:
      - description: file's internal identifier
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      - description: file's name
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            multipart/form-data:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getFileContentById.json#responseBody
          description: Success
      summary: Downloads a file content.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
  /v2/quotes/{quoteId}:
    get:
      description: "Returns quote details. If the specified quote ID refers to Classic\
        \ Quote, 400 Bad Request is returned instead."
      operationId: get_by_id10
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getById.json#responseBody
              schema:
                $ref: '#/components/schemas/QuoteDTOv2'
          description: Success
      summary: Returns quote details.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
  /v2/quotes/{quoteId}/businessDays:
    put:
      description: Updates Business Days for a quote.
      operationId: update_business_days
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateBusinessDays.json#requestBody
            schema:
              format: int32
              type: integer
        description: Updated Business Days for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Business Days for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/clientContacts:
    get:
      description: Returns Client Contacts information for a quote.
      operationId: get_contacts3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getClientContacts.json#responseBody
              schema:
                $ref: '#/components/schemas/SmartContactsDTO'
          description: Success
      summary: Returns Client Contacts information for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
    put:
      description: Updates Client Contacts for a quote.
      operationId: update_contacts3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateClientContacts.json#requestBody
            schema:
              $ref: '#/components/schemas/SmartContactsDTO'
        description: Updated Client Contacts for a quote.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/updateClientContacts.json#responseBody
              schema:
                $ref: '#/components/schemas/SmartContactsDTO'
          description: Success
      summary: Updates Client Contacts for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/clientNotes:
    put:
      description: Updates Client Notes for a quote.
      operationId: update_client_notes1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateClientNotes.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated Client Notes for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Client Notes for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/clientReferenceNumber:
    put:
      description: Updates Client Reference Number for a quote.
      operationId: update_client_reference_number1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateClientReferenceNumber.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated Client Reference Number for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Client Reference Number for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/customFields:
    get:
      description: Returns a list of custom field keys and values for a project.
      operationId: get_custom_fields9
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getCustomFields.json#responseBody
              schema:
                $ref: '#/components/schemas/CustomFieldsDTO'
          description: Success
      summary: Returns a list of custom field keys and values for a project.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
  /v2/quotes/{quoteId}/customFields/{key}:
    put:
      description: Updates a custom field with a specified key in a quote.
      operationId: update_custom_field3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: custom field's key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateCustomField.json#requestBody
            schema:
              $ref: '#/components/schemas/SmartCustomFieldDTO'
        description: Updated custom field with a specified key in a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates a custom field with a specified key in a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/expectedDeliveryDate:
    put:
      description: Updates Expected Delivery Date for a quote.
      operationId: update_expected_delivery_date
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateExpectedDeliveryDate.json#requestBody
            schema:
              $ref: '#/components/schemas/TimeDTO'
        description: Updated Expected Delivery Date for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Expected Delivery Date for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/files:
    get:
      description: Returns list of files in a quote. Only files added to the quote
        (i.e. files that have assigned category and languages) are listed.
      operationId: get_files1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getFiles.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFileDto'
                type: array
          description: ok
      summary: Returns list of files in a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
  /v2/quotes/{quoteId}/files/add:
    put:
      description: "Adds files to the quote as added by PM. The files have to be uploaded\
        \ beforehand (see \"POST v2/quotes/{quoteId}/files/upload\" operation). The\
        \ following properties can be specified for each file:<ul><li>category (required,\
        \ 400 Bad Request is returned otherwise)</li><li>languageIds – when the file\
        \ category depends on a list of languages</li><li>languageCombinationIds –\
        \ when the file category depends on a list of language combinations</li></ul>"
      operationId: add_files2
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/addFiles.json#requestBody
            schema:
              $ref: '#/components/schemas/TimeDTO'
        description: Added files to the quote as added by PM.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Adds files to the quote as added by PM.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/files/upload:
    post:
      description: "Uploads file to the quote as a file uploaded by PM. Only one file\
        \ can be uploaded at once. When the upload is finished the file has to be\
        \ added by specifying its category and languages (see \"PUT /v2/quotes/{quoteId}/files/add\"\
        \ operation)."
      operationId: upload_file3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/uploadFile.json#requestBody
            schema:
              $ref: '#/components/schemas/FileToUploadDto'
        description: Uploaded file to the quote as a file uploaded by PM.
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/uploadFile.json#responseBody
              schema:
                $ref: '#/components/schemas/FileDto'
          description: Success
      summary: Uploads file to the quote as a file uploaded by PM.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/finance:
    get:
      description: Returns finance information for a quote.
      operationId: get_finance3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getFinance.json#responseBody
              schema:
                $ref: '#/components/schemas/FinanceDTO'
          description: Success
      summary: Returns finance information for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
  /v2/quotes/{quoteId}/finance/payables:
    post:
      description: Adds a payable to a quote.
      operationId: create_payable3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/createPayable.json#requestBody
            schema:
              $ref: '#/components/schemas/PayableCreateDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/createPayable.json#responseBody
              schema:
                $ref: '#/components/schemas/PayableDTO'
          description: Success
      summary: Adds a payable to a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/finance/payables/{payableId}:
    delete:
      description: Deletes a payable.
      operationId: delete_payable3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: payable's internal identifier
        explode: false
        in: path
        name: payableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Deletes a payable.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
    put:
      description: Updates a payable.
      operationId: update_payable3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: payable's internal identifier
        explode: false
        in: path
        name: payableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updatePayable.json#requestBody
            schema:
              $ref: '#/components/schemas/PayableDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/updatePayable.json#responseBody
              schema:
                $ref: '#/components/schemas/PayableDTO'
          description: Success
      summary: Updates a payable.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/finance/receivables:
    post:
      description: Adds a receivable to a quote.
      operationId: create_receivable3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/createReceivable.json#requestBody
            schema:
              $ref: '#/components/schemas/ReceivableCreateDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/createReceivable.json#responseBody
              schema:
                $ref: '#/components/schemas/ReceivableDTO'
          description: Success
      summary: Adds a receivable to a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/finance/receivables/{receivableId}:
    delete:
      description: Deletes a receivable.
      operationId: delete_receivable3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: receivable's internal identifier
        explode: false
        in: path
        name: receivableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Success
      summary: Deletes a receivable.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
    put:
      description: Updates a receivable.
      operationId: update_receivable3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      - description: receivable's internal identifier
        explode: false
        in: path
        name: receivableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateReceivable.json#requestBody
            schema:
              $ref: '#/components/schemas/ReceivableDTO'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/updateReceivable.json#responseBody
              schema:
                $ref: '#/components/schemas/ReceivableDTO'
          description: Success
      summary: Updates a receivable.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/internalNotes:
    put:
      description: Updates Internal Notes for a quote.
      operationId: update_internal_notes1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateInternalNotes.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated Internal Notes for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Internal Notes for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/jobs:
    get:
      description: Returns list of jobs in a quote.
      operationId: get_jobs1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getJobs.json#responseBody
              schema:
                items:
                  $ref: '#/components/schemas/JobDto'
                type: array
          description: Success
      summary: Returns list of jobs in a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
  /v2/quotes/{quoteId}/quoteExpiry:
    put:
      description: Updates Quote Expiry Date for a quote.
      operationId: update_quote_expiry
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateQuoteExpiry.json#requestBody
            schema:
              $ref: '#/components/schemas/TimeDTO'
        description: Updated Quote Expiry Date for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates Quote Expiry Date for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/sourceLanguage:
    put:
      description: Updates source language for a quote.
      operationId: update_source_language1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateSourceLanguage.json#requestBody
            schema:
              $ref: '#/components/schemas/SourceLanguageDTO'
        description: Updated source language for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates source language for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/specialization:
    put:
      description: Updates specialization for a quote.
      operationId: update_specialization1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateSpecialization.json#requestBody
            schema:
              $ref: '#/components/schemas/SpecializationDTO'
        description: Updated specialization for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates specialization for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/status:
    put:
      description: "Changes quote status if possible (400 Bad Request is returned\
        \ otherwise). The status has to be specified using one of the following keys:\
        \ <ul><li>PENDING – available when the job has one of the following statuses:\
        \ REQUESTED, REJECTED</li><li>SENT – available when the job has one of the\
        \ following statuses: PENDING</li><li>APPROVED – available when the job has\
        \ one of the following statuses: REQUESTED, PENDING, SENT, APPROVED_BY_CLIENT</li><li>REJECTED\
        \ – available when the job has one of the following statuses: REQUESTED, PENDING,\
        \ SENT</li></ul>"
      operationId: change_status3
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/changeStatus.json#requestBody
            schema:
              $ref: '#/components/schemas/ProjectStatusDTO'
        description: Changed Quote status.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Changes quote status if possible (400 Bad Request is returned otherwise).
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/targetLanguages:
    put:
      description: Updates target languages for a quote.
      operationId: update_target_languages1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateTargetLanguages.json#requestBody
            schema:
              $ref: '#/components/schemas/TargetLanguagesDTO'
        description: Updated target languages for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates target languages for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/vendorInstructions:
    put:
      description: "Updates instructions for all vendors performing the jobs in a\
        \ quote. See also \"PUT /jobs/{jobId}/instructions\" for updating instructions\
        \ for a specific job in a project or quote."
      operationId: update_vendor_instructions1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateInstructionsForAllJobs.json#requestBody
            schema:
              $ref: '#/components/schemas/StringDTO'
        description: Updated instructions for all vendors performing the jobs in a
          quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates instructions for all vendors performing the jobs in a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
  /v2/quotes/{quoteId}/volume:
    put:
      description: Updates volume for a quote.
      operationId: update_volume1
      parameters:
      - description: quote's internal identifier
        explode: false
        in: path
        name: quoteId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateVolume.json#requestBody
            schema:
              $ref: '#/components/schemas/BigDecimalDTO'
        description: Updated volume for a quote.
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Updates volume for a quote.
      tags:
      - Quotes (Smart)(v2)
      x-openapi-router-controller: openapi_server.controllers.quotes_(smart)(v2)controller
      x-codegen-request-body-name: body
components:
  schemas:
    AccessDTO:
      properties:
        change:
          title: change
          type: boolean
        delete:
          title: delete
          type: boolean
      title: AccessDTO
      type: object
    AccessTokenDTO:
      properties:
        token:
          title: token
          type: string
        url:
          title: url
          type: string
      title: AccessTokenDTO
      type: object
    AccessTokenRequestDTO:
      example:
        loginOrEmail: loginOrEmail
      properties:
        loginOrEmail:
          title: loginOrEmail
          type: string
      title: AccessTokenRequestDTO
      type: object
    ActionDTO:
      properties:
        header:
          title: header
          type: string
        name:
          title: name
          type: string
      title: ActionDTO
      type: object
    ActionStartedDTO:
      properties:
        actionId:
          title: actionId
          type: string
        resultUrl:
          title: resultUrl
          type: string
        statusUrl:
          title: statusUrl
          type: string
      title: ActionStartedDTO
      type: object
    ActiveSubscriptionDTO:
      properties:
        embed:
          description: additional fields which should be embedded in the event
          title: embed
          type: string
        event:
          description: event to which you want to subscribe
          title: event
          type: string
        filter:
          description: filter expression in the form 'attribute=value'
          title: filter
          type: string
        subscriptionId:
          description: subscription identifier
          title: subscriptionId
          type: string
        url:
          description: url that will be invoked by XTRF on event
          title: url
          type: string
      title: ActiveSubscriptionDTO
      type: object
    AddJobToProcessDTO:
      properties:
        externalInfo:
          $ref: '#/components/schemas/ExternalInfo'
        externalProjectId:
          type: string
        previousStepNumber:
          format: int32
          type: integer
        stepTypeId:
          type: string
      type: object
    AddressDTO:
      example:
        city: city
        sameAsBillingAddress: true
        postalCode: postalCode
        addressLine1: addressLine1
        addressLine2: addressLine2
        provinceId: 6
        countryId: 0
      properties:
        addressLine1:
          description: first line of address
          title: addressLine1
          type: string
        addressLine2:
          description: second line of address
          title: addressLine2
          type: string
        city:
          description: city
          title: city
          type: string
        countryId:
          description: country
          format: int64
          title: countryId
          type: integer
        postalCode:
          description: postal code
          title: postalCode
          type: string
        provinceId:
          description: province
          format: int64
          title: provinceId
          type: integer
        sameAsBillingAddress:
          description: should billing address be used instead of this one
          title: sameAsBillingAddress
          type: boolean
      title: AddressDTO
      type: object
    AssignVendorDTO:
      example:
        recalculateRates: true
        vendorPriceProfileId: 0
      properties:
        recalculateRates:
          title: recalculateRates
          type: boolean
        vendorPriceProfileId:
          format: int64
          title: vendorPriceProfileId
          type: integer
      title: AssignVendorDTO
      type: object
    BigDecimalDTO:
      example:
        value: 0.8008281904610115
      properties:
        value:
          title: value
          type: number
      title: BigDecimalDTO
      type: object
    BodyPart:
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          title: entity
          type: object
        headers:
          $ref: '#/components/schemas/BodyPart_headers'
        mediaType:
          $ref: '#/components/schemas/BodyPart_mediaType'
        messageBodyWorkers:
          title: messageBodyWorkers
          type: object
        parameterizedHeaders:
          $ref: '#/components/schemas/BodyPart_parameterizedHeaders'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          title: providers
          type: object
      title: BodyPart
      type: object
    CATToolProjectDTO:
      example:
        projectCreatedInCatToolOrCreationIsQueued: true
      properties:
        projectCreatedInCatToolOrCreationIsQueued:
          title: projectCreatedInCatToolOrCreationIsQueued
          type: boolean
      title: CATToolProjectDTO
      type: object
    CalculationUnitDTO:
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        canBeUsedInCatAnalysis:
          title: canBeUsedInCatAnalysis
          type: boolean
        catQuantityConversionExpression:
          title: catQuantityConversionExpression
          type: string
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        exchangeRatio:
          title: exchangeRatio
          type: number
        fileStatsConversionExpression:
          title: fileStatsConversionExpression
          type: string
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        jobTypeIds:
          items:
            format: int64
            type: integer
          title: jobTypeIds
          type: array
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
        symbol:
          title: symbol
          type: string
        timeToQuantityConversionExpression:
          title: timeToQuantityConversionExpression
          type: string
        type:
          enum:
          - TIME
          - VOLUME
          - PERCENT
          title: type
          type: string
      title: CalculationUnitDTO
      type: object
    CategoriesDTO:
      items:
        format: int64
        type: integer
      properties:
        empty:
          type: boolean
      type: array
    CategoryDTO:
      description: group of things (ie. customers or projects) similar in some way
        (ie. VIP customers)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
        supportedClasses:
          description: set of types for which this category can be selected
          items:
            description: set of types for which this category can be selected
            enum:
            - PROJECT
            - QUOTE
            - QUOTE_TASK
            - TASK
            - PROVIDER
            - CUSTOMER
            - CUSTOMER_PERSON
            - PROVIDER_PERSON
            - FINANCIAL_REPORT
            - REMINDER
            - PROVIDER_INVOICE
            - CUSTOMER_INVOICE
            - PROJECT_GROUP
            type: string
          title: supportedClasses
          type: array
          uniqueItems: true
      title: CategoryDTO
      type: object
    ChargeDTO:
      example:
        rateOrigin: PRICE_PROFILE
        description: description
        type: SIMPLE
        ignoreMinimumCharge: true
        languageCombinationIdNumber: languageCombinationIdNumber
        total: 3.616076749251911
        calculationUnitId: 5
        minimumCharge: 9.301444243932576
        languageCombination:
          sourceLanguageId: 5
          targetLanguageId: 2
        invoiceId: invoiceId
        id: 2
        currencyId: 5
        jobTypeId: 7
      properties:
        calculationUnitId:
          format: int64
          title: calculationUnitId
          type: integer
        currencyId:
          format: int64
          title: currencyId
          type: integer
        description:
          title: description
          type: string
        id:
          format: int64
          title: id
          type: integer
        ignoreMinimumCharge:
          title: ignoreMinimumCharge
          type: boolean
        invoiceId:
          title: invoiceId
          type: string
        jobTypeId:
          format: int64
          title: jobTypeId
          type: integer
        languageCombination:
          $ref: '#/components/schemas/ChargeLanguageCombinationDTO'
        languageCombinationIdNumber:
          title: languageCombinationIdNumber
          type: string
        minimumCharge:
          title: minimumCharge
          type: number
        rateOrigin:
          enum:
          - PRICE_PROFILE
          - PRICE_LIST
          - FILLED_MANUALLY
          - AUTOCALCULATED
          title: rateOrigin
          type: string
        total:
          title: total
          type: number
        type:
          enum:
          - SIMPLE
          - CAT
          title: type
          type: string
      title: ChargeDTO
      type: object
    ChargeLanguageCombinationDTO:
      example:
        sourceLanguageId: 5
        targetLanguageId: 2
      properties:
        sourceLanguageId:
          format: int64
          title: sourceLanguageId
          type: integer
        targetLanguageId:
          format: int64
          title: targetLanguageId
          type: integer
      title: ChargeLanguageCombinationDTO
      type: object
    ClassicPeopleDTO:
      description: people
      example:
        customerContacts:
          sendBackToId: 5
          primaryId: 5
          additionalIds:
          - 1
          - 1
        responsiblePersons:
          projectCoordinatorId: 2
          projectManagerId: 7
      properties:
        customerContacts:
          $ref: '#/components/schemas/ContactsDTO'
        responsiblePersons:
          $ref: '#/components/schemas/ResponsiblePersonsDTO'
      title: ClassicPeopleDTO
      type: object
    ClassicProjectCreateDTO:
      example:
        instructions:
          internal: internal
          notes: notes
          forProvider: forProvider
          paymentNoteForCustomer: paymentNoteForCustomer
          fromCustomer: fromCustomer
          paymentNoteForVendor: paymentNoteForVendor
        targetLanguagesIds:
        - 4
        - 4
        categoriesIds:
        - 0
        - 0
        sourceLanguageId: 3
        customerId: 6
        name: name
        dates:
          actualDeliveryDate:
            value: 6
          actualStartDate:
            value: 6
          deadline:
            value: 6
          startDate:
            value: 6
        specializationId: 2
        inputFiles:
        - name: name
          category: WORKFILE
          content: content
          url: url
          token: token
        - name: name
          category: WORKFILE
          content: content
          url: url
          token: token
        serviceId: 9
        people:
          customerContacts:
            sendBackToId: 5
            primaryId: 5
            additionalIds:
            - 1
            - 1
          responsiblePersons:
            projectCoordinatorId: 2
            projectManagerId: 7
      properties:
        categoriesIds:
          description: list of language categories
          items:
            description: list of language categories
            format: int64
            type: integer
          title: categoriesIds
          type: array
        customerId:
          format: int64
          title: customerId
          type: integer
        dates:
          $ref: '#/components/schemas/ProjectDatesDTO'
        inputFiles:
          description: input files
          items:
            $ref: '#/components/schemas/TaskFileDTO'
          title: inputFiles
          type: array
        instructions:
          $ref: '#/components/schemas/InstructionsDTO'
        name:
          title: name
          type: string
        people:
          $ref: '#/components/schemas/ClassicPeopleDTO'
        serviceId:
          format: int64
          title: serviceId
          type: integer
        sourceLanguageId:
          format: int64
          title: sourceLanguageId
          type: integer
        specializationId:
          format: int64
          title: specializationId
          type: integer
        targetLanguagesIds:
          items:
            format: int64
            type: integer
          title: targetLanguagesIds
          type: array
      required:
      - customerId
      - serviceId
      - specializationId
      title: ClassicProjectCreateDTO
      type: object
    ColumnDTO:
      example:
        settings: "{}"
        name: name
      properties:
        name:
          title: name
          type: string
        settings:
          title: settings
          type: object
      title: ColumnDTO
      type: object
    CommonLanguageCombinationDTO:
      description: language combination (ie. PL -> EN)
      example:
        sourceLanguageId: 0
        targetLanguageId: 6
      properties:
        sourceLanguageId:
          format: int64
          title: sourceLanguageId
          type: integer
        targetLanguageId:
          format: int64
          title: targetLanguageId
          type: integer
      title: CommonLanguageCombinationDTO
      type: object
    CompetenciesDTO:
      properties:
        languageCombinations:
          items:
            $ref: '#/components/schemas/CommonLanguageCombinationDTO'
          title: languageCombinations
          type: array
      title: CompetenciesDTO
      type: object
    ContactDTO:
      example:
        emails:
          cc:
          - cc
          - cc
          additional:
          - additional
          - additional
          primary: primary
        sms: sms
        phones:
        - phones
        - phones
        websites:
        - websites
        - websites
        fax: fax
      properties:
        emails:
          $ref: '#/components/schemas/CustomerContactEmailsDTO'
        fax:
          description: fax number
          title: fax
          type: string
        phones:
          description: phones' numbers
          items:
            description: phones' numbers
            type: string
          title: phones
          type: array
        sms:
          description: mobile phone for which SMS notifications will be sent (if configured)
          title: sms
          type: string
        websites:
          description: websites
          items:
            description: websites
            type: string
          title: websites
          type: array
      title: ContactDTO
      type: object
    ContactsDTO:
      example:
        sendBackToId: 5
        primaryId: 5
        additionalIds:
        - 1
        - 1
      properties:
        additionalIds:
          items:
            format: int64
            type: integer
          title: additionalIds
          type: array
          uniqueItems: true
        primaryId:
          format: int64
          title: primaryId
          type: integer
        sendBackToId:
          format: int64
          title: sendBackToId
          type: integer
      title: ContactsDTO
      type: object
    ContentDisposition:
      properties:
        creationDate:
          format: date-time
          title: creationDate
          type: string
        fileName:
          title: fileName
          type: string
        modificationDate:
          format: date-time
          title: modificationDate
          type: string
        parameters:
          additionalProperties:
            type: string
          title: parameters
          type: object
        readDate:
          format: date-time
          title: readDate
          type: string
        size:
          format: int64
          title: size
          type: integer
        type:
          title: type
          type: string
      title: ContentDisposition
      type: object
    CountryDTO:
      description: distinct entity in political geography (ie. Poland)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
        symbol:
          description: specific symbol or abbreviation
          title: symbol
          type: string
      title: CountryDTO
      type: object
    CurrencyDTO:
      description: medium of money exchange (ie. euro or dollar)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        isoCode:
          description: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 code</a>
          title: isoCode
          type: string
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
        symbol:
          description: specific symbol or abbreviation
          title: symbol
          type: string
      title: CurrencyDTO
      type: object
    CurrencyHistoryDTO:
      example:
        exchangeRate: exchangeRate
        originDetails: originDetails
        lastModification:
          value: 6
        dateFrom:
          value: 6
        publicationDate:
          value: 6
      properties:
        dateFrom:
          $ref: '#/components/schemas/TimeDTO'
        exchangeRate:
          title: exchangeRate
          type: string
        lastModification:
          $ref: '#/components/schemas/TimeDTO'
        originDetails:
          title: originDetails
          type: string
        publicationDate:
          $ref: '#/components/schemas/TimeDTO'
      title: CurrencyHistoryDTO
      type: object
    CustomFieldDTO:
      example:
        name: name
        type: TEXT
        value: "{}"
        key: key
      properties:
        key:
          title: key
          type: string
        name:
          title: name
          type: string
        type:
          enum:
          - TEXT
          - DATE
          - DATE_AND_TIME
          - NUMBER
          - CHECKBOX
          - SELECTION
          - MULTI_SELECTION
          title: type
          type: string
        value:
          title: value
          type: object
      title: CustomFieldDTO
      type: object
      xml:
        name: customField
    CustomFieldsDTO:
      items:
        $ref: '#/components/schemas/CustomFieldDTO'
      properties:
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          type: array
          xml:
            name: customField
        empty:
          type: boolean
      type: array
      xml:
        name: customFields
    CustomerAccountingDTO:
      example:
        taxNumbers:
        - number: number
          type: type
        - number: number
          type: type
      properties:
        taxNumbers:
          items:
            $ref: '#/components/schemas/CustomerTaxNoDTO'
          title: taxNumbers
          type: array
      title: CustomerAccountingDTO
      type: object
    CustomerContactEmailsDTO:
      description: emails
      example:
        cc:
        - cc
        - cc
        additional:
        - additional
        - additional
        primary: primary
      properties:
        additional:
          description: additional e-mails addresses
          items:
            description: additional e-mails addresses
            type: string
          title: additional
          type: array
        cc:
          description: e-mails which will be included in the CC list
          items:
            description: e-mails which will be included in the CC list
            type: string
          title: cc
          type: array
        primary:
          description: primary e-mail
          title: primary
          type: string
      required:
      - primary
      title: CustomerContactEmailsDTO
      type: object
    CustomerDTO:
      example:
        limitAccessToPeopleResponsible: true
        notes: notes
        categoriesIds:
        - 5
        - 5
        responsiblePersons:
          projectCoordinatorId: 7
          projectManagerId: 1
          accountManagerId: 6
          salesPersonId: 4
        customFields:
        - name: name
          type: TEXT
          value: "{}"
          key: key
        - name: name
          type: TEXT
          value: "{}"
          key: key
        accounting:
          taxNumbers:
          - number: number
            type: type
          - number: number
            type: type
        idNumber: idNumber
        accountOnCustomerServer: accountOnCustomerServer
        correspondenceAddress:
          city: city
          sameAsBillingAddress: true
          postalCode: postalCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          provinceId: 6
          countryId: 0
        clientFirstQuoteDate: 2000-01-23T04:56:07.000+00:00
        contact:
          emails:
            cc:
            - cc
            - cc
            additional:
            - additional
            - additional
            primary: primary
          sms: sms
          phones:
          - phones
          - phones
          websites:
          - websites
          - websites
          fax: fax
        clientNumberOfQuotes: 2
        id: 7
        clientFirstProjectDate: 2000-01-23T04:56:07.000+00:00
        branchId: 1
        clientLastQuoteDate: 2000-01-23T04:56:07.000+00:00
        contractNumber: contractNumber
        fullName: fullName
        salesNotes: salesNotes
        industriesIds:
        - 9
        - 9
        persons:
        - lastName: lastName
          numberOfProjects: 1
          lastProjectDate: 2000-01-23T04:56:07.000+00:00
          gender: FEMALE
          customFields:
          - name: name
            type: TEXT
            value: "{}"
            key: key
          - name: name
            type: TEXT
            value: "{}"
            key: key
          active: true
          firstProjectDate: 2000-01-23T04:56:07.000+00:00
          numberOfQuotes: 1
          lastQuoteDate: 2000-01-23T04:56:07.000+00:00
          positionId: 1
          motherTonguesIds:
          - 7
          - 7
          contact:
            emails:
              additional:
              - additional
              - additional
              primary: primary
            sms: sms
            phones:
            - phones
            - phones
            fax: fax
          customerId: 2
          name: name
          firstQuoteDate: 2000-01-23T04:56:07.000+00:00
          id: 4
        - lastName: lastName
          numberOfProjects: 1
          lastProjectDate: 2000-01-23T04:56:07.000+00:00
          gender: FEMALE
          customFields:
          - name: name
            type: TEXT
            value: "{}"
            key: key
          - name: name
            type: TEXT
            value: "{}"
            key: key
          active: true
          firstProjectDate: 2000-01-23T04:56:07.000+00:00
          numberOfQuotes: 1
          lastQuoteDate: 2000-01-23T04:56:07.000+00:00
          positionId: 1
          motherTonguesIds:
          - 7
          - 7
          contact:
            emails:
              additional:
              - additional
              - additional
              primary: primary
            sms: sms
            phones:
            - phones
            - phones
            fax: fax
          customerId: 2
          name: name
          firstQuoteDate: 2000-01-23T04:56:07.000+00:00
          id: 4
        name: name
        clientNumberOfProjects: 5
        billingAddress:
          city: city
          sameAsBillingAddress: true
          postalCode: postalCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          provinceId: 6
          countryId: 0
        clientLastProjectDate: 2000-01-23T04:56:07.000+00:00
        leadSourceId: 3
        status: ACTIVE
      properties:
        accountOnCustomerServer:
          title: accountOnCustomerServer
          type: string
        accounting:
          $ref: '#/components/schemas/CustomerAccountingDTO'
        billingAddress:
          $ref: '#/components/schemas/AddressDTO'
        branchId:
          format: int64
          title: branchId
          type: integer
        categoriesIds:
          items:
            format: int64
            type: integer
          properties:
            empty:
              type: boolean
          title: categoriesIds
          type: array
        clientFirstProjectDate:
          format: date-time
          title: clientFirstProjectDate
          type: string
        clientFirstQuoteDate:
          format: date-time
          title: clientFirstQuoteDate
          type: string
        clientLastProjectDate:
          format: date-time
          title: clientLastProjectDate
          type: string
        clientLastQuoteDate:
          format: date-time
          title: clientLastQuoteDate
          type: string
        clientNumberOfProjects:
          format: int32
          title: clientNumberOfProjects
          type: integer
        clientNumberOfQuotes:
          format: int32
          title: clientNumberOfQuotes
          type: integer
        contact:
          $ref: '#/components/schemas/ContactDTO'
        contractNumber:
          title: contractNumber
          type: string
        correspondenceAddress:
          $ref: '#/components/schemas/AddressDTO'
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          properties:
            customFields:
              items:
                $ref: '#/components/schemas/CustomFieldDTO'
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          title: customFields
          type: array
          xml:
            name: customFields
        fullName:
          title: fullName
          type: string
        id:
          format: int64
          title: id
          type: integer
        idNumber:
          title: idNumber
          type: string
        industriesIds:
          items:
            format: int64
            type: integer
          properties:
            empty:
              type: boolean
          title: industriesIds
          type: array
        leadSourceId:
          format: int64
          title: leadSourceId
          type: integer
        limitAccessToPeopleResponsible:
          title: limitAccessToPeopleResponsible
          type: boolean
        name:
          title: name
          type: string
        notes:
          title: notes
          type: string
        persons:
          items:
            $ref: '#/components/schemas/CustomerPersonDTO'
          title: persons
          type: array
        responsiblePersons:
          $ref: '#/components/schemas/CustomerResponsiblePersonsDTO'
        salesNotes:
          title: salesNotes
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - POTENTIAL
          title: status
          type: string
      title: CustomerDTO
      type: object
    CustomerDetailsDTO:
      properties:
        addressLine:
          title: addressLine
          type: string
        city:
          title: city
          type: string
        country:
          title: country
          type: string
        countryId:
          format: int64
          title: countryId
          type: integer
        name:
          title: name
          type: string
        postalCode:
          title: postalCode
          type: string
        vatUE:
          title: vatUE
          type: string
      title: CustomerDetailsDTO
      type: object
    CustomerInvoiceCreateDTO:
      example:
        tasksIds:
        - 6
        - 6
        prepaymentsIds:
        - 0
        - 0
        type: FINAL
      properties:
        prepaymentsIds:
          items:
            format: int64
            type: integer
          title: prepaymentsIds
          type: array
        tasksIds:
          items:
            format: int64
            type: integer
          title: tasksIds
          type: array
        type:
          enum:
          - FINAL
          - DRAFT
          - CREDIT_NOTE
          title: type
          type: string
      title: CustomerInvoiceCreateDTO
      type: object
    CustomerInvoiceCreateResultDTO:
      properties:
        invoiceUrl:
          title: invoiceUrl
          type: string
        invoicesIds:
          items:
            format: int64
            type: integer
          title: invoicesIds
          type: array
      title: CustomerInvoiceCreateResultDTO
      type: object
    CustomerInvoiceDTO:
      properties:
        currencyId:
          format: int64
          title: currencyId
          type: integer
        customerDetails:
          $ref: '#/components/schemas/CustomerDetailsDTO'
        customerId:
          format: int64
          title: customerId
          type: integer
        dates:
          $ref: '#/components/schemas/CustomerInvoiceDatesDTO'
        id:
          format: int64
          title: id
          type: integer
        invoiceNumber:
          title: invoiceNumber
          type: string
        paymentMethodId:
          format: int64
          title: paymentMethodId
          type: integer
        paymentTerms:
          $ref: '#/components/schemas/PaymentTermsDTO'
        status:
          enum:
          - NOT_READY
          - READY
          - SENT
          title: status
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskDTO'
          title: tasks
          type: array
        tasksValue:
          title: tasksValue
          type: number
        totalGross:
          title: totalGross
          type: number
        totalInWords:
          title: totalInWords
          type: string
        totalNetto:
          title: totalNetto
          type: number
        type:
          enum:
          - FINAL
          - DRAFT
          - CREDIT_NOTE
          title: type
          type: string
        vatCalculationRule:
          enum:
          - SUM_ITEMS
          - BY_NET_TOTAL
          title: vatCalculationRule
          type: string
      title: CustomerInvoiceDTO
      type: object
    CustomerInvoiceDatesDTO:
      properties:
        draftDate:
          $ref: '#/components/schemas/TimeDTO'
        finalDate:
          $ref: '#/components/schemas/TimeDTO'
        invoiceDate:
          $ref: '#/components/schemas/TimeDTO'
        paymentDueDate:
          $ref: '#/components/schemas/TimeDTO'
      title: CustomerInvoiceDatesDTO
      type: object
    CustomerPersonDTO:
      description: CustomerPerson
      example:
        lastName: lastName
        numberOfProjects: 1
        lastProjectDate: 2000-01-23T04:56:07.000+00:00
        gender: FEMALE
        customFields:
        - name: name
          type: TEXT
          value: "{}"
          key: key
        - name: name
          type: TEXT
          value: "{}"
          key: key
        active: true
        firstProjectDate: 2000-01-23T04:56:07.000+00:00
        numberOfQuotes: 1
        lastQuoteDate: 2000-01-23T04:56:07.000+00:00
        positionId: 1
        motherTonguesIds:
        - 7
        - 7
        contact:
          emails:
            additional:
            - additional
            - additional
            primary: primary
          sms: sms
          phones:
          - phones
          - phones
          fax: fax
        customerId: 2
        name: name
        firstQuoteDate: 2000-01-23T04:56:07.000+00:00
        id: 4
      properties:
        active:
          title: active
          type: boolean
        contact:
          $ref: '#/components/schemas/PersonContactDTO'
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          properties:
            customFields:
              items:
                $ref: '#/components/schemas/CustomFieldDTO'
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          title: customFields
          type: array
          xml:
            name: customFields
        customerId:
          format: int64
          title: customerId
          type: integer
        firstProjectDate:
          format: date-time
          title: firstProjectDate
          type: string
        firstQuoteDate:
          format: date-time
          title: firstQuoteDate
          type: string
        gender:
          enum:
          - FEMALE
          - MALE
          title: gender
          type: string
        id:
          format: int64
          title: id
          type: integer
        lastName:
          title: lastName
          type: string
        lastProjectDate:
          format: date-time
          title: lastProjectDate
          type: string
        lastQuoteDate:
          format: date-time
          title: lastQuoteDate
          type: string
        motherTonguesIds:
          items:
            format: int64
            type: integer
          title: motherTonguesIds
          type: array
          uniqueItems: true
        name:
          title: name
          type: string
        numberOfProjects:
          format: int32
          title: numberOfProjects
          type: integer
        numberOfQuotes:
          format: int32
          title: numberOfQuotes
          type: integer
        positionId:
          format: int64
          title: positionId
          type: integer
      title: CustomerPersonDTO
      type: object
    CustomerResponsiblePersonsDTO:
      example:
        projectCoordinatorId: 7
        projectManagerId: 1
        accountManagerId: 6
        salesPersonId: 4
      properties:
        accountManagerId:
          description: account manager
          format: int64
          title: accountManagerId
          type: integer
        projectCoordinatorId:
          description: project coordinator
          format: int64
          title: projectCoordinatorId
          type: integer
        projectManagerId:
          description: project manager
          format: int64
          title: projectManagerId
          type: integer
        salesPersonId:
          description: sales person
          format: int64
          title: salesPersonId
          type: integer
      required:
      - projectManagerId
      - salesPersonId
      title: CustomerResponsiblePersonsDTO
      type: object
    CustomerTaxNoDTO:
      example:
        number: number
        type: type
      properties:
        number:
          description: tax number
          title: number
          type: string
        type:
          description: "type (ie. NIP, VAT Reg No, P.IVA) or empty value if unknown"
          title: type
          type: string
      title: CustomerTaxNoDTO
      type: object
    DictionaryEntity:
      properties:
        active:
          title: active
          type: boolean
        andClearEventsQueue:
          $ref: '#/components/schemas/EventsQueue'
        auditDisplayName:
          title: auditDisplayName
          type: string
        auditPath:
          title: auditPath
          type: string
        classNameKey:
          title: classNameKey
          type: string
        classSimpleName:
          title: classSimpleName
          type: string
        compoundId:
          title: compoundId
          type: string
        defaultEntity:
          title: defaultEntity
          type: boolean
        displayName:
          title: displayName
          type: string
        entityMarkedAsNotSupposedToBePersisted:
          title: entityMarkedAsNotSupposedToBePersisted
          type: boolean
        eventsQueueReadyToBeDispatched:
          title: eventsQueueReadyToBeDispatched
          type: boolean
        id:
          format: int64
          title: id
          type: integer
        identifier:
          $ref: '#/components/schemas/Identifier'
        internalDescription:
          title: internalDescription
          type: string
        lastModificationDate:
          format: date-time
          title: lastModificationDate
          type: string
        name:
          title: name
          type: string
        packedCompoundId:
          title: packedCompoundId
          type: string
        preferedEntity:
          title: preferedEntity
          type: boolean
        preferred:
          title: preferred
          type: boolean
        version:
          format: int32
          title: version
          type: integer
      required:
      - name
      - preferedEntity
      title: DictionaryEntity
      type: object
    DocumentsDTO:
      example:
        projectConfirmationStatus: projectConfirmationStatus
      properties:
        projectConfirmationStatus:
          title: projectConfirmationStatus
          type: string
      title: DocumentsDTO
      type: object
    DownloadDocumentsRequestDTO:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int64
            type: integer
          title: ids
          type: array
      title: DownloadDocumentsRequestDTO
      type: object
    EntityWithNameDTO:
      properties:
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
      title: EntityWithNameDTO
      type: object
    Event:
      properties:
        raiseTime:
          format: int64
          title: raiseTime
          type: integer
          writeOnly: true
      title: Event
      type: object
    EventsQueue:
      properties:
        all:
          items:
            $ref: '#/components/schemas/Event'
          title: all
          type: array
        empty:
          title: empty
          type: boolean
        readyToBeDispatched:
          title: readyToBeDispatched
          type: boolean
      title: EventsQueue
      type: object
    ExportRequestDTO:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int64
            type: integer
          title: ids
          type: array
      title: ExportRequestDTO
      type: object
    ExternalFileDto:
      example:
        filename: filename
        languageCombinationIds:
        - sourceLanguageId: 1
          targetLanguageId: 5
        - sourceLanguageId: 1
          targetLanguageId: 5
        externalInfo:
          key: externalInfo
        languageIds:
        - 0
        - 0
        category: category
      properties:
        category:
          title: category
          type: string
        externalInfo:
          additionalProperties:
            type: string
          title: externalInfo
          type: object
        filename:
          title: filename
          type: string
        languageCombinationIds:
          items:
            $ref: '#/components/schemas/LanguageCombinationDto'
          title: languageCombinationIds
          type: array
        languageIds:
          items:
            format: int64
            type: integer
          title: languageIds
          type: array
      title: ExternalFileDto
      type: object
    ExternalInfo:
      properties:
        steps:
          items:
            additionalProperties:
              type: string
            type: object
          title: steps
          type: array
      title: ExternalInfo
      type: object
    FileCategorizationDto:
      example:
        languageCombinationIds:
        - sourceLanguageId: 1
          targetLanguageId: 5
        - sourceLanguageId: 1
          targetLanguageId: 5
        languageIds:
        - 0
        - 0
        category: category
        fileId: fileId
      properties:
        category:
          title: category
          type: string
        fileId:
          title: fileId
          type: string
        languageCombinationIds:
          items:
            $ref: '#/components/schemas/LanguageCombinationDto'
          title: languageCombinationIds
          type: array
        languageIds:
          items:
            format: int64
            type: integer
          title: languageIds
          type: array
      title: FileCategorizationDto
      type: object
    FileCategorizationsDto:
      example:
        files:
        - languageCombinationIds:
          - sourceLanguageId: 1
            targetLanguageId: 5
          - sourceLanguageId: 1
            targetLanguageId: 5
          languageIds:
          - 0
          - 0
          category: category
          fileId: fileId
        - languageCombinationIds:
          - sourceLanguageId: 1
            targetLanguageId: 5
          - sourceLanguageId: 1
            targetLanguageId: 5
          languageIds:
          - 0
          - 0
          category: category
          fileId: fileId
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileCategorizationDto'
          title: files
          type: array
      title: FileCategorizationsDto
      type: object
    FileDTO:
      example:
        name: name
        content: content
        url: url
        token: token
      properties:
        content:
          title: content
          type: string
        name:
          title: name
          type: string
        token:
          title: token
          type: string
        url:
          title: url
          type: string
      title: FileDTO
      type: object
    FileDto:
      example:
        fileId: fileId
      properties:
        fileId:
          title: fileId
          type: string
      title: FileDto
      type: object
    FileLinkCategorizationDto:
      example:
        filename: filename
        toBeGenerated: true
        languageCombinationIds:
        - sourceLanguageId: 1
          targetLanguageId: 5
        - sourceLanguageId: 1
          targetLanguageId: 5
        externalInfo:
          key: externalInfo
        languageIds:
        - 0
        - 0
        category: category
        url: url
      properties:
        category:
          title: category
          type: string
        externalInfo:
          additionalProperties:
            type: string
          title: externalInfo
          type: object
        filename:
          title: filename
          type: string
        languageCombinationIds:
          items:
            $ref: '#/components/schemas/LanguageCombinationDto'
          title: languageCombinationIds
          type: array
        languageIds:
          items:
            format: int64
            type: integer
          title: languageIds
          type: array
        toBeGenerated:
          title: toBeGenerated
          type: boolean
        url:
          title: url
          type: string
      title: FileLinkCategorizationDto
      type: object
    FileLinkCategorizationsDto:
      example:
        fileLinks:
        - filename: filename
          toBeGenerated: true
          languageCombinationIds:
          - sourceLanguageId: 1
            targetLanguageId: 5
          - sourceLanguageId: 1
            targetLanguageId: 5
          externalInfo:
            key: externalInfo
          languageIds:
          - 0
          - 0
          category: category
          url: url
        - filename: filename
          toBeGenerated: true
          languageCombinationIds:
          - sourceLanguageId: 1
            targetLanguageId: 5
          - sourceLanguageId: 1
            targetLanguageId: 5
          externalInfo:
            key: externalInfo
          languageIds:
          - 0
          - 0
          category: category
          url: url
      properties:
        fileLinks:
          items:
            $ref: '#/components/schemas/FileLinkCategorizationDto'
          title: fileLinks
          type: array
      title: FileLinkCategorizationsDto
      type: object
    FileMetadataDTO:
      properties:
        categoryKey:
          title: categoryKey
          type: string
        id:
          format: int64
          title: id
          type: integer
        lastModifiedOn:
          format: int64
          title: lastModifiedOn
          type: integer
        name:
          title: name
          type: string
        size:
          format: int64
          title: size
          type: integer
      title: FileMetadataDTO
      type: object
    FileShareStatusDto:
      example:
        message: message
        fileId: fileId
        successful: true
      properties:
        fileId:
          title: fileId
          type: string
        message:
          title: message
          type: string
        successful:
          title: successful
          type: boolean
      title: FileShareStatusDto
      type: object
    FileToUploadDto:
      properties:
        file:
          format: binary
          type: string
      type: object
    FilesArchiveDto:
      example:
        archiveUrl: archiveUrl
      properties:
        archiveUrl:
          title: archiveUrl
          type: string
      title: FilesArchiveDto
      type: object
    FilesDto:
      example:
        files:
        - files
        - files
      properties:
        files:
          items:
            type: string
          title: files
          type: array
          uniqueItems: true
      title: FilesDto
      type: object
    FilesShareStatusDto:
      example:
        statuses:
        - message: message
          fileId: fileId
          successful: true
        - message: message
          fileId: fileId
          successful: true
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/FileShareStatusDto'
          title: statuses
          type: array
          uniqueItems: true
      title: FilesShareStatusDto
      type: object
    FilterDTO:
      properties:
        properties:
          items:
            type: object
          title: properties
          type: array
      title: FilterDTO
      type: object
    FilterPropertyDTO:
      example:
        settings: "{}"
        settingsPresent: true
        name: name
        type: type
      properties:
        name:
          title: name
          type: string
        settings:
          title: settings
          type: object
        settingsPresent:
          title: settingsPresent
          type: boolean
        type:
          title: type
          type: string
      title: FilterPropertyDTO
      type: object
    FinanceDTO:
      example:
        margin: 1.4658129805029452
        totalAgreed: 4.145608029883936
        receivables:
        - rateOrigin: PRICE_PROFILE
          description: description
          type: SIMPLE
          ignoreMinimumCharge: true
          languageCombinationIdNumber: languageCombinationIdNumber
          total: 3.616076749251911
          calculationUnitId: 5
          minimumCharge: 9.301444243932576
          languageCombination:
            sourceLanguageId: 5
            targetLanguageId: 2
          invoiceId: invoiceId
          id: 2
          currencyId: 5
          jobTypeId: 7
        - rateOrigin: PRICE_PROFILE
          description: description
          type: SIMPLE
          ignoreMinimumCharge: true
          languageCombinationIdNumber: languageCombinationIdNumber
          total: 3.616076749251911
          calculationUnitId: 5
          minimumCharge: 9.301444243932576
          languageCombination:
            sourceLanguageId: 5
            targetLanguageId: 2
          invoiceId: invoiceId
          id: 2
          currencyId: 5
          jobTypeId: 7
        currencyId: 6
        ROI: 0.8008281904610115
        profit: 2.027123023002322
        payables:
        - rateOrigin: PRICE_PROFILE
          description: description
          type: SIMPLE
          ignoreMinimumCharge: true
          languageCombinationIdNumber: languageCombinationIdNumber
          total: 3.616076749251911
          calculationUnitId: 5
          minimumCharge: 9.301444243932576
          languageCombination:
            sourceLanguageId: 5
            targetLanguageId: 2
          invoiceId: invoiceId
          id: 2
          currencyId: 5
          jobTypeId: 7
        - rateOrigin: PRICE_PROFILE
          description: description
          type: SIMPLE
          ignoreMinimumCharge: true
          languageCombinationIdNumber: languageCombinationIdNumber
          total: 3.616076749251911
          calculationUnitId: 5
          minimumCharge: 9.301444243932576
          languageCombination:
            sourceLanguageId: 5
            targetLanguageId: 2
          invoiceId: invoiceId
          id: 2
          currencyId: 5
          jobTypeId: 7
        totalCost: 7.386281948385884
      properties:
        ROI:
          title: ROI
          type: number
        currencyId:
          format: int64
          title: currencyId
          type: integer
        margin:
          title: margin
          type: number
        payables:
          items:
            $ref: '#/components/schemas/ChargeDTO'
          title: payables
          type: array
        profit:
          title: profit
          type: number
        receivables:
          items:
            $ref: '#/components/schemas/ChargeDTO'
          title: receivables
          type: array
        totalAgreed:
          title: totalAgreed
          type: number
        totalCost:
          title: totalCost
          type: number
      title: FinanceDTO
      type: object
    FormDataBodyPart:
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          title: entity
          type: object
        formDataContentDisposition:
          $ref: '#/components/schemas/FormDataContentDisposition'
        headers:
          $ref: '#/components/schemas/BodyPart_headers'
        mediaType:
          $ref: '#/components/schemas/BodyPart_mediaType'
        messageBodyWorkers:
          title: messageBodyWorkers
          type: object
        name:
          title: name
          type: string
        parameterizedHeaders:
          $ref: '#/components/schemas/BodyPart_parameterizedHeaders'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          title: providers
          type: object
        simple:
          title: simple
          type: boolean
        value:
          title: value
          type: string
      title: FormDataBodyPart
      type: object
    FormDataContentDisposition:
      properties:
        creationDate:
          format: date-time
          title: creationDate
          type: string
        fileName:
          title: fileName
          type: string
        modificationDate:
          format: date-time
          title: modificationDate
          type: string
        name:
          title: name
          type: string
        parameters:
          additionalProperties:
            type: string
          title: parameters
          type: object
        readDate:
          format: date-time
          title: readDate
          type: string
        size:
          format: int64
          title: size
          type: integer
        type:
          title: type
          type: string
      title: FormDataContentDisposition
      type: object
    FormDataMultiPart:
      properties:
        bodyParts:
          items:
            $ref: '#/components/schemas/BodyPart'
          type: array
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        fields:
          additionalProperties:
            items:
              $ref: '#/components/schemas/FormDataBodyPart'
            type: array
          type: object
        headers:
          $ref: '#/components/schemas/BodyPart_headers'
        mediaType:
          $ref: '#/components/schemas/BodyPart_mediaType'
        messageBodyWorkers:
          title: messageBodyWorkers
          type: object
        parameterizedHeaders:
          $ref: '#/components/schemas/BodyPart_parameterizedHeaders'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
      type: object
    GetLicenseResult:
      properties:
        clientId:
          title: clientId
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/Parameter'
          title: parameters
          type: object
      title: GetLicenseResult
      type: object
    Identifier:
      properties:
        compoundId:
          title: compoundId
          type: string
        id:
          format: int64
          title: id
          type: integer
      title: Identifier
      type: object
    ImportRequestDTO:
      example:
        fileToken: fileToken
      properties:
        fileToken:
          title: fileToken
          type: string
      title: ImportRequestDTO
      type: object
    ImportResultDTO:
      properties:
        currentSystemVersion:
          title: currentSystemVersion
          type: string
        importedReportsNames:
          items:
            type: string
          title: importedReportsNames
          type: array
        invalidReportsNames:
          items:
            type: string
          title: invalidReportsNames
          type: array
        targetSystemVersion:
          title: targetSystemVersion
          type: string
      title: ImportResultDTO
      type: object
    IndustriesDTO:
      items:
        format: int64
        type: integer
      properties:
        empty:
          type: boolean
      type: array
    IndustryDTO:
      description: industry related with translation (ie. biotechnology)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
      title: IndustryDTO
      type: object
    InputFilesDTO:
      properties:
        logFiles:
          items:
            $ref: '#/components/schemas/FileDTO'
          title: logFiles
          type: array
        referenceFiles:
          items:
            $ref: '#/components/schemas/FileDTO'
          title: referenceFiles
          type: array
        terminology:
          items:
            $ref: '#/components/schemas/FileDTO'
          title: terminology
          type: array
        tm:
          items:
            $ref: '#/components/schemas/FileDTO'
          title: tm
          type: array
        workFiles:
          items:
            $ref: '#/components/schemas/FileDTO'
          title: workFiles
          type: array
      title: InputFilesDTO
      type: object
    InstructionsDTO:
      example:
        internal: internal
        notes: notes
        forProvider: forProvider
        paymentNoteForCustomer: paymentNoteForCustomer
        fromCustomer: fromCustomer
        paymentNoteForVendor: paymentNoteForVendor
      properties:
        forProvider:
          title: forProvider
          type: string
        fromCustomer:
          title: fromCustomer
          type: string
        internal:
          title: internal
          type: string
        notes:
          title: notes
          type: string
        paymentNoteForCustomer:
          title: paymentNoteForCustomer
          type: string
        paymentNoteForVendor:
          title: paymentNoteForVendor
          type: string
      title: InstructionsDTO
      type: object
    InvitationStatisticsDTO:
      properties:
        alreadyRegisteredPersonsCount:
          format: int32
          title: alreadyRegisteredPersonsCount
          type: integer
        invitedPersonsCount:
          format: int32
          title: invitedPersonsCount
          type: integer
        providersWithAlreadyRegisteredPersonCount:
          format: int32
          title: providersWithAlreadyRegisteredPersonCount
          type: integer
        providersWithInvitedPersonCount:
          format: int32
          title: providersWithInvitedPersonCount
          type: integer
        providersWithoutPersonCount:
          format: int32
          title: providersWithoutPersonCount
          type: integer
      title: InvitationStatisticsDTO
      type: object
    JobCommunicationDto:
      example:
        instructionsForJob: instructionsForJob
        noteFromVendor: noteFromVendor
        instructionsForAllJobs: instructionsForAllJobs
      properties:
        instructionsForAllJobs:
          title: instructionsForAllJobs
          type: string
        instructionsForJob:
          title: instructionsForJob
          type: string
        noteFromVendor:
          title: noteFromVendor
          type: string
      title: JobCommunicationDto
      type: object
    JobDTO:
      properties:
        files:
          $ref: '#/components/schemas/JobFilesDTO'
        id:
          format: int64
          title: id
          type: integer
        idNumber:
          title: idNumber
          type: string
        name:
          title: name
          type: string
      title: JobDTO
      type: object
    JobDatesDto:
      example:
        actualEndDate: 0
        actualStartDate: 6
        deadline: 1
        startDate: 5
      properties:
        actualEndDate:
          format: int64
          title: actualEndDate
          type: integer
        actualStartDate:
          format: int64
          title: actualStartDate
          type: integer
        deadline:
          format: int64
          title: deadline
          type: integer
        startDate:
          format: int64
          title: startDate
          type: integer
      title: JobDatesDto
      type: object
    JobDocumentsDto:
      example:
        purchaseOrderStatus: purchaseOrderStatus
      properties:
        purchaseOrderStatus:
          title: purchaseOrderStatus
          type: string
      title: JobDocumentsDto
      type: object
    JobDto:
      example:
        stepType:
          name: name
          id: id
          semantics:
            isScripted: true
            canVerifyFiles: true
          jobTypeId: 5
        languages:
        - sourceLanguageId: 0
          specializationId: 6
          targetLanguageId: 1
        - sourceLanguageId: 0
          specializationId: 6
          targetLanguageId: 1
        documents:
          purchaseOrderStatus: purchaseOrderStatus
        vendorPriceProfileId: 7
        vendorId: 2
        dates:
          actualEndDate: 0
          actualStartDate: 6
          deadline: 1
          startDate: 5
        idNumber: idNumber
        name: name
        files:
          sharedWorkFiles:
          - sharedWorkFiles
          - sharedWorkFiles
          sharedReferenceFiles:
          - sharedReferenceFiles
          - sharedReferenceFiles
          deliveredInJobFiles:
          - deliveredInJobFiles
          - deliveredInJobFiles
        id: id
        stepNumber: 5
        communication:
          instructionsForJob: instructionsForJob
          noteFromVendor: noteFromVendor
          instructionsForAllJobs: instructionsForAllJobs
        status: status
      properties:
        communication:
          $ref: '#/components/schemas/JobCommunicationDto'
        dates:
          $ref: '#/components/schemas/JobDatesDto'
        documents:
          $ref: '#/components/schemas/JobDocumentsDto'
        files:
          $ref: '#/components/schemas/JobFilesDto'
        id:
          title: id
          type: string
        idNumber:
          title: idNumber
          type: string
        languages:
          items:
            $ref: '#/components/schemas/JobLanguageCombinationDto'
          title: languages
          type: array
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        stepNumber:
          format: int32
          title: stepNumber
          type: integer
        stepType:
          $ref: '#/components/schemas/StepTypeDto'
        vendorId:
          format: int64
          title: vendorId
          type: integer
        vendorPriceProfileId:
          format: int64
          title: vendorPriceProfileId
          type: integer
      title: JobDto
      type: object
    JobFilesDTO:
      properties:
        inputFiles:
          items:
            $ref: '#/components/schemas/FileDTO'
          title: inputFiles
          type: array
        outputFiles:
          items:
            $ref: '#/components/schemas/FileDTO'
          title: outputFiles
          type: array
      title: JobFilesDTO
      type: object
    JobFilesDto:
      example:
        sharedWorkFiles:
        - sharedWorkFiles
        - sharedWorkFiles
        sharedReferenceFiles:
        - sharedReferenceFiles
        - sharedReferenceFiles
        deliveredInJobFiles:
        - deliveredInJobFiles
        - deliveredInJobFiles
      properties:
        deliveredInJobFiles:
          items:
            type: string
          title: deliveredInJobFiles
          type: array
          uniqueItems: true
        sharedReferenceFiles:
          items:
            type: string
          title: sharedReferenceFiles
          type: array
          uniqueItems: true
        sharedWorkFiles:
          items:
            type: string
          title: sharedWorkFiles
          type: array
          uniqueItems: true
      title: JobFilesDto
      type: object
    JobLanguageCombinationDto:
      example:
        sourceLanguageId: 0
        specializationId: 6
        targetLanguageId: 1
      properties:
        sourceLanguageId:
          format: int64
          title: sourceLanguageId
          type: integer
        specializationId:
          format: int64
          title: specializationId
          type: integer
        targetLanguageId:
          format: int64
          title: targetLanguageId
          type: integer
      title: JobLanguageCombinationDto
      type: object
    JobStatusDTO:
      example:
        externalId: externalId
        status: status
      properties:
        externalId:
          title: externalId
          type: string
        status:
          title: status
          type: string
      title: JobStatusDTO
      type: object
    JobTypeDTO:
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        calculationUnitIds:
          items:
            format: int64
            type: integer
          title: calculationUnitIds
          type: array
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        filesNeeded:
          title: filesNeeded
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
        providedByClient:
          title: providedByClient
          type: boolean
        relationToLanguage:
          enum:
          - LANGUAGE_COMBINATION_RELATED
          - SOURCE_LANGUAGE_RELATED_ONLY
          - TARGET_LANGUAGE_RELATED_ONLY
          - LANGUAGE_INDEPENDENT
          title: relationToLanguage
          type: string
        vendorProductivity:
          title: vendorProductivity
          type: number
        vendorProductivityCalculationUnitId:
          format: int64
          title: vendorProductivityCalculationUnitId
          type: integer
      title: JobTypeDTO
      type: object
    JsonNode:
      title: settings
      type: object
    LanguageCombinationDTO:
      example:
        sourceLanguageId: 5
        specializationId: 5
        targetLanguageId: 2
      properties:
        sourceLanguageId:
          format: int64
          title: sourceLanguageId
          type: integer
        specializationId:
          format: int64
          title: specializationId
          type: integer
        targetLanguageId:
          format: int64
          title: targetLanguageId
          type: integer
      title: LanguageCombinationDTO
      type: object
    LanguageCombinationDto:
      example:
        sourceLanguageId: 1
        targetLanguageId: 5
      properties:
        sourceLanguageId:
          format: int64
          title: sourceLanguageId
          type: integer
        targetLanguageId:
          format: int64
          title: targetLanguageId
          type: integer
      title: LanguageCombinationDto
      type: object
    LanguageDTO:
      description: language (ie. Polish)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        iso6391:
          description: <a href="http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO
            639-1 code</a>
          title: iso6391
          type: string
        iso6392:
          description: <a href="http://en.wikipedia.org/wiki/List_of_ISO_639-2_codes">ISO
            639-2 code</a>
          title: iso6392
          type: string
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
        symbol:
          description: specific symbol or abbreviation
          title: symbol
          type: string
      title: LanguageDTO
      type: object
    LanguageRelationDto:
      example:
        languages:
        - 5
        - 5
        languageCombinations:
        - sourceLanguageId: 1
          targetLanguageId: 5
        - sourceLanguageId: 1
          targetLanguageId: 5
      properties:
        languageCombinations:
          items:
            $ref: '#/components/schemas/LanguageCombinationDto'
          title: languageCombinations
          type: array
        languages:
          items:
            format: int64
            type: integer
          title: languages
          type: array
          uniqueItems: true
      title: LanguageRelationDto
      type: object
    LanguageSpecializationDTO:
      description: language specialization (ie. railways)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
      title: LanguageSpecializationDTO
      type: object
    LastModificationDTO:
      properties:
        date:
          title: date
          type: string
        modifier:
          title: modifier
          type: string
      title: LastModificationDTO
      type: object
    LeadSourceDTO:
      description: origin of a customer (ie. recomendation from another customer)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        availableForCustomer:
          description: should be available for customer
          title: availableForCustomer
          type: boolean
        availableForProvider:
          description: should be available for provider
          title: availableForProvider
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
      title: LeadSourceDTO
      type: object
    LocalSettingsDTO:
      example:
        maxLinesInRow: 6
        maxRows: 1
      properties:
        maxLinesInRow:
          format: int32
          title: maxLinesInRow
          type: integer
        maxRows:
          format: int32
          title: maxRows
          type: integer
      title: LocalSettingsDTO
      type: object
    LongDTO:
      properties:
        value:
          format: int64
          type: integer
      type: object
    MacroRequestDTO:
      example:
        async: true
        ids:
        - 0
        - 0
        params:
          key: "{}"
      properties:
        async:
          description: "indicates whether the macro should be executed asynchronously\
            \ or synchronously (default: false)"
          title: async
          type: boolean
        ids:
          description: "list of internal identifiers of elements to be processed by\
            \ the macro, can be empty for certain macros"
          items:
            description: "list of internal identifiers of elements to be processed\
              \ by the macro, can be empty for certain macros"
            format: int64
            type: integer
          title: ids
          type: array
        params:
          additionalProperties:
            description: map of custom key-value pairs that can optionally parametrize
              the macro execution
            type: object
          description: map of custom key-value pairs that can optionally parametrize
            the macro execution
          title: params
          type: object
      title: MacroRequestDTO
      type: object
    ManyValuesPerTypeDTO:
      properties:
        calculationUnit:
          items:
            $ref: '#/components/schemas/CalculationUnitDTO'
          title: calculationUnit
          type: array
        category:
          items:
            $ref: '#/components/schemas/CategoryDTO'
          title: category
          type: array
        country:
          items:
            $ref: '#/components/schemas/CountryDTO'
          title: country
          type: array
        currency:
          items:
            $ref: '#/components/schemas/CurrencyDTO'
          title: currency
          type: array
        industry:
          items:
            $ref: '#/components/schemas/IndustryDTO'
          title: industry
          type: array
        jobType:
          items:
            $ref: '#/components/schemas/JobTypeDTO'
          title: jobType
          type: array
        language:
          items:
            $ref: '#/components/schemas/LanguageDTO'
          title: language
          type: array
        leadSource:
          items:
            $ref: '#/components/schemas/LeadSourceDTO'
          title: leadSource
          type: array
        personDepartment:
          items:
            $ref: '#/components/schemas/PersonDepartmentDTO'
          title: personDepartment
          type: array
        personPosition:
          items:
            $ref: '#/components/schemas/PersonPositionDTO'
          title: personPosition
          type: array
        province:
          items:
            $ref: '#/components/schemas/ProvinceDTO'
          title: province
          type: array
        specialization:
          items:
            $ref: '#/components/schemas/LanguageSpecializationDTO'
          title: specialization
          type: array
      title: ManyValuesPerTypeDTO
      type: object
    MessageBodyWorkers:
      title: messageBodyWorkers
      type: object
    MultiPart:
      properties:
        bodyParts:
          items:
            $ref: '#/components/schemas/BodyPart'
          title: bodyParts
          type: array
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          title: entity
          type: object
        headers:
          $ref: '#/components/schemas/BodyPart_headers'
        mediaType:
          $ref: '#/components/schemas/BodyPart_mediaType'
        messageBodyWorkers:
          title: messageBodyWorkers
          type: object
        parameterizedHeaders:
          $ref: '#/components/schemas/BodyPart_parameterizedHeaders'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          title: providers
          type: object
      title: MultiPart
      type: object
    OrderDTO:
      example:
        column: column
        type: type
      properties:
        column:
          title: column
          type: string
        type:
          title: type
          type: string
      title: OrderDTO
      type: object
    Parameter:
      properties:
        type:
          title: type
          type: string
        value:
          title: value
          type: string
      title: Parameter
      type: object
    ParameterizedHeader:
      properties:
        parameters:
          additionalProperties:
            type: string
          title: parameters
          type: object
        value:
          title: value
          type: string
      title: ParameterizedHeader
      type: object
    PayableCreateDTO:
      example:
        rateOrigin: PRICE_PROFILE
        quantity: 2.3021358869347655
        catLogFile:
          name: name
          content: content
          url: url
          token: token
        description: description
        type: SIMPLE
        ignoreMinimumCharge: true
        jobId: "{}"
        languageCombinationIdNumber: languageCombinationIdNumber
        total: 9.301444243932576
        calculationUnitId: 0
        rate: 7.061401241503109
        minimumCharge: 5.637376656633329
        languageCombination:
          sourceLanguageId: 5
          targetLanguageId: 2
        invoiceId: invoiceId
        id: 1
        currencyId: 6
        jobTypeId: 5
      properties:
        calculationUnitId:
          format: int64
          title: calculationUnitId
          type: integer
        catLogFile:
          $ref: '#/components/schemas/FileDTO'
        currencyId:
          format: int64
          title: currencyId
          type: integer
        description:
          title: description
          type: string
        id:
          format: int64
          title: id
          type: integer
        ignoreMinimumCharge:
          title: ignoreMinimumCharge
          type: boolean
        invoiceId:
          title: invoiceId
          type: string
        jobId:
          title: jobId
          type: object
        jobTypeId:
          format: int64
          title: jobTypeId
          type: integer
        languageCombination:
          $ref: '#/components/schemas/ChargeLanguageCombinationDTO'
        languageCombinationIdNumber:
          title: languageCombinationIdNumber
          type: string
        minimumCharge:
          title: minimumCharge
          type: number
        quantity:
          title: quantity
          type: number
        rate:
          title: rate
          type: number
        rateOrigin:
          enum:
          - PRICE_PROFILE
          - PRICE_LIST
          - FILLED_MANUALLY
          - AUTOCALCULATED
          title: rateOrigin
          type: string
        total:
          title: total
          type: number
        type:
          enum:
          - SIMPLE
          - CAT
          title: type
          type: string
      title: PayableCreateDTO
      type: object
    PayableDTO:
      example:
        rateOrigin: PRICE_PROFILE
        quantity: 9.301444243932576
        description: description
        type: SIMPLE
        ignoreMinimumCharge: true
        jobId: "{}"
        languageCombinationIdNumber: languageCombinationIdNumber
        total: 2.027123023002322
        calculationUnitId: 0
        rate: 3.616076749251911
        minimumCharge: 7.061401241503109
        languageCombination:
          sourceLanguageId: 5
          targetLanguageId: 2
        invoiceId: invoiceId
        id: 1
        currencyId: 6
        jobTypeId: 5
      properties:
        calculationUnitId:
          format: int64
          title: calculationUnitId
          type: integer
        currencyId:
          format: int64
          title: currencyId
          type: integer
        description:
          title: description
          type: string
        id:
          format: int64
          title: id
          type: integer
        ignoreMinimumCharge:
          title: ignoreMinimumCharge
          type: boolean
        invoiceId:
          title: invoiceId
          type: string
        jobId:
          title: jobId
          type: object
        jobTypeId:
          format: int64
          title: jobTypeId
          type: integer
        languageCombination:
          $ref: '#/components/schemas/ChargeLanguageCombinationDTO'
        languageCombinationIdNumber:
          title: languageCombinationIdNumber
          type: string
        minimumCharge:
          title: minimumCharge
          type: number
        quantity:
          title: quantity
          type: number
        rate:
          title: rate
          type: number
        rateOrigin:
          enum:
          - PRICE_PROFILE
          - PRICE_LIST
          - FILLED_MANUALLY
          - AUTOCALCULATED
          title: rateOrigin
          type: string
        total:
          title: total
          type: number
        type:
          enum:
          - SIMPLE
          - CAT
          title: type
          type: string
      title: PayableDTO
      type: object
    PaymentDTO:
      example:
        amount: 0.8008281904610115
        notes: notes
        paymentMethodId: 1
        paymentDate:
          value: 6
      properties:
        amount:
          title: amount
          type: number
        notes:
          title: notes
          type: string
        paymentDate:
          $ref: '#/components/schemas/TimeDTO'
        paymentMethodId:
          format: int64
          title: paymentMethodId
          type: integer
      title: PaymentDTO
      type: object
    PaymentTermsDTO:
      properties:
        description:
          title: description
          type: string
        name:
          title: name
          type: string
      title: PaymentTermsDTO
      type: object
    PeopleDTO:
      example:
        projectManagerId: 4
      properties:
        projectManagerId:
          format: int64
          title: projectManagerId
          type: integer
      title: PeopleDTO
      type: object
    PermissionsDTO:
      example:
        sharedGroups:
        - 0
        - 0
      properties:
        sharedGroups:
          items:
            format: int64
            type: integer
          title: sharedGroups
          type: array
          uniqueItems: true
      title: PermissionsDTO
      type: object
    PersonContactDTO:
      example:
        emails:
          additional:
          - additional
          - additional
          primary: primary
        sms: sms
        phones:
        - phones
        - phones
        fax: fax
      properties:
        emails:
          $ref: '#/components/schemas/PersonContactEmailsDTO'
        fax:
          description: fax number
          title: fax
          type: string
        phones:
          description: phones' numbers
          items:
            description: phones' numbers
            type: string
          title: phones
          type: array
        sms:
          description: mobile phone for which SMS notifications will be sent (if configured)
          title: sms
          type: string
      title: PersonContactDTO
      type: object
    PersonContactEmailsDTO:
      description: emails
      example:
        additional:
        - additional
        - additional
        primary: primary
      properties:
        additional:
          description: additional e-mails addresses
          items:
            description: additional e-mails addresses
            type: string
          title: additional
          type: array
        primary:
          description: primary e-mail
          title: primary
          type: string
      required:
      - primary
      title: PersonContactEmailsDTO
      type: object
    PersonDepartmentDTO:
      description: person's department (ie. human resources)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
      title: PersonDepartmentDTO
      type: object
    PersonPositionDTO:
      description: person's position (ie. proofreader)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
      title: PersonPositionDTO
      type: object
    PreferredRequestDTO:
      example:
        preferred: true
      properties:
        preferred:
          title: preferred
          type: boolean
      title: PreferredRequestDTO
      type: object
    ProjectCreateDTO:
      example:
        clientId: 0
        name: name
        externalId: externalId
        serviceId: 6
      properties:
        clientId:
          format: int64
          title: clientId
          type: integer
        externalId:
          title: externalId
          type: string
        name:
          title: name
          type: string
        serviceId:
          format: int64
          title: serviceId
          type: integer
      title: ProjectCreateDTO
      type: object
    ProjectDTOv1:
      properties:
        categoriesIds:
          items:
            format: int64
            type: integer
          title: categoriesIds
          type: array
          uniqueItems: true
        contactPersonId:
          format: int64
          title: contactPersonId
          type: integer
        contacts:
          $ref: '#/components/schemas/ContactsDTO'
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          properties:
            customFields:
              items:
                $ref: '#/components/schemas/CustomFieldDTO'
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          title: customFields
          type: array
          xml:
            name: customFields
        customerId:
          format: int64
          title: customerId
          type: integer
        dates:
          $ref: '#/components/schemas/ProjectDatesDTO'
        finance:
          $ref: '#/components/schemas/FinanceDTO'
        id:
          format: int64
          title: id
          type: integer
        idNumber:
          title: idNumber
          type: string
        instructions:
          $ref: '#/components/schemas/InstructionsDTO'
        isClassicProject:
          title: isClassicProject
          type: boolean
        name:
          title: name
          type: string
        projectId:
          title: projectId
          type: string
        projectManagerId:
          format: int64
          title: projectManagerId
          type: integer
        specializationId:
          format: int64
          title: specializationId
          type: integer
        status:
          enum:
          - REQUESTED_PROJECT
          - OPENED
          - CLOSED
          - CANCELLED
          - CLAIM
          title: status
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskDTO'
          title: tasks
          type: array
      title: ProjectDTOv1
      type: object
    ProjectDTOv2:
      example:
        clientNotes: clientNotes
        clientId: 1
        languages:
          sourceLanguageId: 7
          languageCombinations:
          - sourceLanguageId: 5
            specializationId: 5
            targetLanguageId: 2
          - sourceLanguageId: 5
            specializationId: 5
            targetLanguageId: 2
          specializationId: 9
          targetLanguageIds:
          - 3
          - 3
        budgetCode: budgetCode
        documents:
          projectConfirmationStatus: projectConfirmationStatus
        origin: origin
        internalNotes: internalNotes
        instructionsForAllJobs: instructionsForAllJobs
        people:
          projectManagerId: 4
        clientReferenceNumber: clientReferenceNumber
        clientDeadline: 6
        volume:
          unitId: 1
          value: 1.0246457001441578
        categoryIds:
        - 0
        - 0
        name: name
        quoteIdNumber: quoteIdNumber
        id: id
        projectIdNumber: projectIdNumber
        orderedOn: 2
        serviceId: 7
        projectId: projectId
        isClassicProject: true
        status: status
      properties:
        budgetCode:
          title: budgetCode
          type: string
        categoryIds:
          items:
            format: int64
            type: integer
          title: categoryIds
          type: array
          uniqueItems: true
        clientDeadline:
          format: int64
          title: clientDeadline
          type: integer
        clientId:
          format: int64
          title: clientId
          type: integer
        clientNotes:
          title: clientNotes
          type: string
        clientReferenceNumber:
          title: clientReferenceNumber
          type: string
        documents:
          $ref: '#/components/schemas/DocumentsDTO'
        id:
          title: id
          type: string
        instructionsForAllJobs:
          title: instructionsForAllJobs
          type: string
        internalNotes:
          title: internalNotes
          type: string
        isClassicProject:
          title: isClassicProject
          type: boolean
        languages:
          $ref: '#/components/schemas/ProjectLanguagesDTO'
        name:
          title: name
          type: string
        orderedOn:
          format: int64
          title: orderedOn
          type: integer
        origin:
          title: origin
          type: string
        people:
          $ref: '#/components/schemas/PeopleDTO'
        projectId:
          title: projectId
          type: string
        projectIdNumber:
          title: projectIdNumber
          type: string
        quoteIdNumber:
          title: quoteIdNumber
          type: string
        serviceId:
          format: int64
          title: serviceId
          type: integer
        status:
          title: status
          type: string
        volume:
          $ref: '#/components/schemas/VolumeDTO'
      title: ProjectDTOv2
      type: object
    ProjectDatesDTO:
      example:
        actualDeliveryDate:
          value: 6
        actualStartDate:
          value: 6
        deadline:
          value: 6
        startDate:
          value: 6
      properties:
        actualDeliveryDate:
          $ref: '#/components/schemas/TimeDTO'
        actualStartDate:
          $ref: '#/components/schemas/TimeDTO'
        deadline:
          $ref: '#/components/schemas/TimeDTO'
        startDate:
          $ref: '#/components/schemas/TimeDTO'
      title: ProjectDatesDTO
      type: object
    ProjectFileAddedByDto:
      example:
        vendorId: 0
        userType: userType
      properties:
        userType:
          title: userType
          type: string
        vendorId:
          format: int64
          title: vendorId
          type: integer
      title: ProjectFileAddedByDto
      type: object
    ProjectFileDto:
      example:
        isLink: true
        addedBy:
          vendorId: 0
          userType: userType
        isRemote: true
        categoryKey: categoryKey
        remoteCATToolReferences:
          editorUrl: editorUrl
          catResourceId: catResourceId
          catToolDocumentId: catToolDocumentId
        addedInJob: addedInJob
        url: url
        lastModifiedOn: 2
        languageRelation:
          languages:
          - 5
          - 5
          languageCombinations:
          - sourceLanguageId: 1
            targetLanguageId: 5
          - sourceLanguageId: 1
            targetLanguageId: 5
        addedInLastStep: true
        addedInStep: 6
        size: 7
        isAccepted: true
        name: name
        id: id
        sharedWithJobs:
        - sharedWithJobs
        - sharedWithJobs
      properties:
        addedBy:
          $ref: '#/components/schemas/ProjectFileAddedByDto'
        addedInJob:
          title: addedInJob
          type: string
        addedInLastStep:
          title: addedInLastStep
          type: boolean
        addedInStep:
          format: int64
          title: addedInStep
          type: integer
        categoryKey:
          title: categoryKey
          type: string
        id:
          title: id
          type: string
        isAccepted:
          title: isAccepted
          type: boolean
        isLink:
          title: isLink
          type: boolean
        isRemote:
          title: isRemote
          type: boolean
        languageRelation:
          $ref: '#/components/schemas/LanguageRelationDto'
        lastModifiedOn:
          format: int64
          title: lastModifiedOn
          type: integer
        name:
          title: name
          type: string
        remoteCATToolReferences:
          $ref: '#/components/schemas/RemoteCATToolReferencesDto'
        sharedWithJobs:
          items:
            type: string
          title: sharedWithJobs
          type: array
          uniqueItems: true
        size:
          format: int64
          title: size
          type: integer
        url:
          title: url
          type: string
      title: ProjectFileDto
      type: object
    ProjectLanguagesDTO:
      example:
        sourceLanguageId: 7
        languageCombinations:
        - sourceLanguageId: 5
          specializationId: 5
          targetLanguageId: 2
        - sourceLanguageId: 5
          specializationId: 5
          targetLanguageId: 2
        specializationId: 9
        targetLanguageIds:
        - 3
        - 3
      properties:
        languageCombinations:
          items:
            $ref: '#/components/schemas/LanguageCombinationDTO'
          title: languageCombinations
          type: array
        sourceLanguageId:
          format: int64
          title: sourceLanguageId
          type: integer
        specializationId:
          format: int64
          title: specializationId
          type: integer
        targetLanguageIds:
          items:
            format: int64
            type: integer
          title: targetLanguageIds
          type: array
      title: ProjectLanguagesDTO
      type: object
    ProjectStatusDTO:
      example:
        status: status
      properties:
        status:
          title: status
          type: string
      title: ProjectStatusDTO
      type: object
    ProviderDTO:
      properties:
        billingAddress:
          $ref: '#/components/schemas/AddressDTO'
        branchId:
          format: int64
          title: branchId
          type: integer
        competencies:
          $ref: '#/components/schemas/CompetenciesDTO'
        contact:
          $ref: '#/components/schemas/ContactDTO'
        correspondenceAddress:
          $ref: '#/components/schemas/AddressDTO'
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          properties:
            customFields:
              items:
                $ref: '#/components/schemas/CustomFieldDTO'
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          title: customFields
          type: array
          xml:
            name: customFields
        fullName:
          title: fullName
          type: string
        id:
          format: int64
          title: id
          type: integer
        idNumber:
          title: idNumber
          type: string
        leadSourceId:
          format: int64
          title: leadSourceId
          type: integer
        name:
          title: name
          type: string
        notes:
          title: notes
          type: string
        persons:
          items:
            $ref: '#/components/schemas/ProviderPersonDTO'
          title: persons
          type: array
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - WAITING_FOR_APPROVAL
          - REJECTED
          - TOO_EXPENSIVE
          - INCOMPLETE_DATA
          - POTENTIAL
          - NOT_CONFIRMED
          title: status
          type: string
      title: ProviderDTO
      type: object
    ProviderInvoiceCreateDTO:
      example:
        jobsIds:
        - 0
        - 0
      properties:
        jobsIds:
          items:
            format: int64
            type: integer
          title: jobsIds
          type: array
      title: ProviderInvoiceCreateDTO
      type: object
    ProviderInvoiceCreateResultDTO:
      properties:
        invoiceUrl:
          title: invoiceUrl
          type: string
        invoicesIds:
          items:
            format: int64
            type: integer
          title: invoicesIds
          type: array
      title: ProviderInvoiceCreateResultDTO
      type: object
    ProviderInvoiceDTO:
      properties:
        currencyId:
          format: int64
          title: currencyId
          type: integer
        dates:
          $ref: '#/components/schemas/ProviderInvoiceDatesDTO'
        draftNumber:
          title: draftNumber
          type: string
        finalNumber:
          title: finalNumber
          type: string
        id:
          format: int64
          title: id
          type: integer
        internalNumber:
          title: internalNumber
          type: string
        jobsNetValue:
          title: jobsNetValue
          type: number
        notesFromProvider:
          title: notesFromProvider
          type: string
        paymentStatus:
          enum:
          - NOT_PAID
          - FULLY_PAID
          - IRRECOVERABLE
          - PARTIALLY_PAID
          title: paymentStatus
          type: string
        providerId:
          format: int64
          title: providerId
          type: integer
        status:
          enum:
          - POSTPONED
          - TO_BE_SENT
          - SENT
          - CONFIRMED
          - BILL_CREATED
          title: status
          type: string
        totalGross:
          title: totalGross
          type: number
        totalGrossInWords:
          title: totalGrossInWords
          type: string
        totalNetto:
          title: totalNetto
          type: number
      title: ProviderInvoiceDTO
      type: object
    ProviderInvoiceDatesDTO:
      properties:
        draftDate:
          $ref: '#/components/schemas/TimeDTO'
        finalDate:
          $ref: '#/components/schemas/TimeDTO'
        invoiceUploadedDate:
          $ref: '#/components/schemas/TimeDTO'
        paymentDueDate:
          $ref: '#/components/schemas/TimeDTO'
      title: ProviderInvoiceDatesDTO
      type: object
    ProviderPersonDTO:
      properties:
        active:
          title: active
          type: boolean
        contact:
          $ref: '#/components/schemas/PersonContactDTO'
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          properties:
            customFields:
              items:
                $ref: '#/components/schemas/CustomFieldDTO'
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          title: customFields
          type: array
          xml:
            name: customFields
        gender:
          enum:
          - FEMALE
          - MALE
          title: gender
          type: string
        id:
          format: int64
          title: id
          type: integer
        lastName:
          title: lastName
          type: string
        motherTonguesIds:
          items:
            format: int64
            type: integer
          title: motherTonguesIds
          type: array
          uniqueItems: true
        name:
          title: name
          type: string
        positionId:
          format: int64
          title: positionId
          type: integer
        providerId:
          format: int64
          title: providerId
          type: integer
      title: ProviderPersonDTO
      type: object
    ProvinceDTO:
      description: territorial unit within a country (ie. Nebraska)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        countryId:
          description: country's identifier
          format: int64
          title: countryId
          type: integer
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
      title: ProvinceDTO
      type: object
    QuoteCreateDTO:
      example:
        opportunityOfferId: 6
        clientId: 0
        name: name
        serviceId: 1
      properties:
        clientId:
          format: int64
          title: clientId
          type: integer
        name:
          title: name
          type: string
        opportunityOfferId:
          format: int64
          title: opportunityOfferId
          type: integer
        serviceId:
          format: int64
          title: serviceId
          type: integer
      title: QuoteCreateDTO
      type: object
    QuoteDTOv1:
      properties:
        automaticallyAcceptSentQuote:
          title: automaticallyAcceptSentQuote
          type: boolean
        categoriesIds:
          items:
            format: int64
            type: integer
          title: categoriesIds
          type: array
          uniqueItems: true
        contactPersonId:
          format: int64
          title: contactPersonId
          type: integer
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          properties:
            customFields:
              items:
                $ref: '#/components/schemas/CustomFieldDTO'
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          title: customFields
          type: array
          xml:
            name: customFields
        customerId:
          format: int64
          title: customerId
          type: integer
        dates:
          $ref: '#/components/schemas/QuoteDatesDTO'
        finance:
          $ref: '#/components/schemas/FinanceDTO'
        id:
          format: int64
          title: id
          type: integer
        idNumber:
          title: idNumber
          type: string
        instructions:
          $ref: '#/components/schemas/InstructionsDTO'
        isClassicQuote:
          title: isClassicQuote
          type: boolean
        name:
          title: name
          type: string
        quoteId:
          title: quoteId
          type: string
        salesPersonId:
          format: int64
          title: salesPersonId
          type: integer
        status:
          title: status
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskDTO'
          title: tasks
          type: array
      title: QuoteDTOv1
      type: object
    QuoteDTOv2:
      example:
        clientNotes: clientNotes
        clientId: 5
        isClassicQuote: true
        languages:
          sourceLanguageId: 7
          languageCombinations:
          - sourceLanguageId: 5
            specializationId: 5
            targetLanguageId: 2
          - sourceLanguageId: 5
            specializationId: 5
            targetLanguageId: 2
          specializationId: 9
          targetLanguageIds:
          - 3
          - 3
        budgetCode: budgetCode
        documents:
          projectConfirmationStatus: projectConfirmationStatus
        expectedDeliveryDate: 2
        origin: origin
        businessDays: 0
        internalNotes: internalNotes
        createdOn: 5
        instructionsForAllJobs: instructionsForAllJobs
        people:
          projectManagerId: 4
        clientReferenceNumber: clientReferenceNumber
        quoteId: quoteId
        clientDeadline: 1
        volume:
          unitId: 1
          value: 1.0246457001441578
        categoryIds:
        - 6
        - 6
        quoteExpiry: 7
        name: name
        quoteIdNumber: quoteIdNumber
        id: id
        serviceId: 9
        status: status
      properties:
        budgetCode:
          title: budgetCode
          type: string
        businessDays:
          format: int64
          title: businessDays
          type: integer
        categoryIds:
          items:
            format: int64
            type: integer
          title: categoryIds
          type: array
          uniqueItems: true
        clientDeadline:
          format: int64
          title: clientDeadline
          type: integer
        clientId:
          format: int64
          title: clientId
          type: integer
        clientNotes:
          title: clientNotes
          type: string
        clientReferenceNumber:
          title: clientReferenceNumber
          type: string
        createdOn:
          format: int64
          title: createdOn
          type: integer
        documents:
          $ref: '#/components/schemas/DocumentsDTO'
        expectedDeliveryDate:
          format: int64
          title: expectedDeliveryDate
          type: integer
        id:
          title: id
          type: string
        instructionsForAllJobs:
          title: instructionsForAllJobs
          type: string
        internalNotes:
          title: internalNotes
          type: string
        isClassicQuote:
          title: isClassicQuote
          type: boolean
        languages:
          $ref: '#/components/schemas/ProjectLanguagesDTO'
        name:
          title: name
          type: string
        origin:
          title: origin
          type: string
        people:
          $ref: '#/components/schemas/PeopleDTO'
        quoteExpiry:
          format: int64
          title: quoteExpiry
          type: integer
        quoteId:
          title: quoteId
          type: string
        quoteIdNumber:
          title: quoteIdNumber
          type: string
        serviceId:
          format: int64
          title: serviceId
          type: integer
        status:
          title: status
          type: string
        volume:
          $ref: '#/components/schemas/VolumeDTO'
      title: QuoteDTOv2
      type: object
    QuoteDatesDTO:
      properties:
        createdOn:
          $ref: '#/components/schemas/TimeDTO'
        deadline:
          $ref: '#/components/schemas/TimeDTO'
        offerExpiry:
          $ref: '#/components/schemas/TimeDTO'
        startDate:
          $ref: '#/components/schemas/TimeDTO'
      title: QuoteDatesDTO
      type: object
    ReceivableCreateDTO:
      example:
        rateOrigin: PRICE_PROFILE
        quantity: 2.3021358869347655
        catLogFile:
          name: name
          content: content
          url: url
          token: token
        description: description
        type: SIMPLE
        ignoreMinimumCharge: true
        languageCombinationIdNumber: languageCombinationIdNumber
        total: 3.616076749251911
        calculationUnitId: 0
        rate: 7.061401241503109
        minimumCharge: 5.637376656633329
        languageCombination:
          sourceLanguageId: 5
          targetLanguageId: 2
        invoiceId: invoiceId
        id: 1
        currencyId: 6
        jobTypeId: 5
        taskId: 9
      properties:
        calculationUnitId:
          format: int64
          title: calculationUnitId
          type: integer
        catLogFile:
          $ref: '#/components/schemas/FileDTO'
        currencyId:
          format: int64
          title: currencyId
          type: integer
        description:
          title: description
          type: string
        id:
          format: int64
          title: id
          type: integer
        ignoreMinimumCharge:
          title: ignoreMinimumCharge
          type: boolean
        invoiceId:
          title: invoiceId
          type: string
        jobTypeId:
          format: int64
          title: jobTypeId
          type: integer
        languageCombination:
          $ref: '#/components/schemas/ChargeLanguageCombinationDTO'
        languageCombinationIdNumber:
          title: languageCombinationIdNumber
          type: string
        minimumCharge:
          title: minimumCharge
          type: number
        quantity:
          title: quantity
          type: number
        rate:
          title: rate
          type: number
        rateOrigin:
          enum:
          - PRICE_PROFILE
          - PRICE_LIST
          - FILLED_MANUALLY
          - AUTOCALCULATED
          title: rateOrigin
          type: string
        taskId:
          format: int64
          title: taskId
          type: integer
        total:
          title: total
          type: number
        type:
          enum:
          - SIMPLE
          - CAT
          title: type
          type: string
      title: ReceivableCreateDTO
      type: object
    ReceivableDTO:
      example:
        rateOrigin: PRICE_PROFILE
        quantity: 2.3021358869347655
        description: description
        type: SIMPLE
        ignoreMinimumCharge: true
        languageCombinationIdNumber: languageCombinationIdNumber
        total: 3.616076749251911
        calculationUnitId: 0
        rate: 7.061401241503109
        minimumCharge: 5.637376656633329
        languageCombination:
          sourceLanguageId: 5
          targetLanguageId: 2
        invoiceId: invoiceId
        id: 1
        currencyId: 6
        jobTypeId: 5
        taskId: 9
      properties:
        calculationUnitId:
          format: int64
          title: calculationUnitId
          type: integer
        currencyId:
          format: int64
          title: currencyId
          type: integer
        description:
          title: description
          type: string
        id:
          format: int64
          title: id
          type: integer
        ignoreMinimumCharge:
          title: ignoreMinimumCharge
          type: boolean
        invoiceId:
          title: invoiceId
          type: string
        jobTypeId:
          format: int64
          title: jobTypeId
          type: integer
        languageCombination:
          $ref: '#/components/schemas/ChargeLanguageCombinationDTO'
        languageCombinationIdNumber:
          title: languageCombinationIdNumber
          type: string
        minimumCharge:
          title: minimumCharge
          type: number
        quantity:
          title: quantity
          type: number
        rate:
          title: rate
          type: number
        rateOrigin:
          enum:
          - PRICE_PROFILE
          - PRICE_LIST
          - FILLED_MANUALLY
          - AUTOCALCULATED
          title: rateOrigin
          type: string
        taskId:
          format: int64
          title: taskId
          type: integer
        total:
          title: total
          type: number
        type:
          enum:
          - SIMPLE
          - CAT
          title: type
          type: string
      title: ReceivableDTO
      type: object
    RemoteCATToolReferencesDto:
      example:
        editorUrl: editorUrl
        catResourceId: catResourceId
        catToolDocumentId: catToolDocumentId
      properties:
        catResourceId:
          title: catResourceId
          type: string
        catToolDocumentId:
          title: catToolDocumentId
          type: string
        editorUrl:
          title: editorUrl
          type: string
      title: RemoteCATToolReferencesDto
      type: object
    ReportResultDTO:
      properties:
        url:
          title: url
          type: string
      title: ReportResultDTO
      type: object
    ResponsiblePersonsDTO:
      example:
        projectCoordinatorId: 2
        projectManagerId: 7
      properties:
        projectCoordinatorId:
          format: int64
          title: projectCoordinatorId
          type: integer
        projectManagerId:
          format: int64
          title: projectManagerId
          type: integer
      title: ResponsiblePersonsDTO
      type: object
    SendRemindersRequestDTO:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int64
            type: integer
          title: ids
          type: array
      title: SendRemindersRequestDTO
      type: object
    SendRemindersResponseDTO:
      properties:
        numberOfSentEmails:
          format: int32
          title: numberOfSentEmails
          type: integer
      title: SendRemindersResponseDTO
      type: object
    ServiceDTO:
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          title: active
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          title: default
          type: boolean
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          title: name
          type: string
        preferred:
          description: "should this value be available on the top of XTRF selection\
            \ lists, in the Preferred section"
          title: preferred
          type: boolean
      title: ServiceDTO
      type: object
    SettingsDTO:
      example:
        name: name
        local:
          maxLinesInRow: 6
          maxRows: 1
      properties:
        local:
          $ref: '#/components/schemas/LocalSettingsDTO'
        name:
          title: name
          type: string
      title: SettingsDTO
      type: object
    SmartContactsDTO:
      example:
        primaryId: 6
        additionalIds:
        - 0
        - 0
      properties:
        additionalIds:
          items:
            format: int64
            type: integer
          title: additionalIds
          type: array
          uniqueItems: true
        primaryId:
          format: int64
          title: primaryId
          type: integer
      title: SmartContactsDTO
      type: object
    SmartCustomFieldDTO:
      example:
        value: "{}"
      properties:
        value:
          title: value
          type: object
      title: SmartCustomFieldDTO
      type: object
    SourceLanguageDTO:
      example:
        sourceLanguageId: 0
      properties:
        sourceLanguageId:
          format: int64
          title: sourceLanguageId
          type: integer
      title: SourceLanguageDTO
      type: object
    SpecializationDTO:
      example:
        specializationId: 0
      properties:
        specializationId:
          format: int64
          title: specializationId
          type: integer
      title: SpecializationDTO
      type: object
    StatusRequestDTO:
      example:
        status: POSTPONED
      properties:
        status:
          enum:
          - POSTPONED
          - TO_BE_SENT
          - SENT
          - CONFIRMED
          - BILL_CREATED
          title: status
          type: string
      title: StatusRequestDTO
      type: object
    StepTypeDto:
      example:
        name: name
        id: id
        semantics:
          isScripted: true
          canVerifyFiles: true
        jobTypeId: 5
      properties:
        id:
          title: id
          type: string
        jobTypeId:
          format: int64
          title: jobTypeId
          type: integer
        name:
          title: name
          type: string
        semantics:
          $ref: '#/components/schemas/StepTypeSemanticsDto'
      title: StepTypeDto
      type: object
    StepTypeSemanticsDto:
      example:
        isScripted: true
        canVerifyFiles: true
      properties:
        canVerifyFiles:
          title: canVerifyFiles
          type: boolean
        isScripted:
          title: isScripted
          type: boolean
      title: StepTypeSemanticsDto
      type: object
    StringDTO:
      example:
        value: value
      properties:
        value:
          title: value
          type: string
      title: StringDTO
      type: object
    SubscriptionDTO:
      example:
        filter: filter
        embed: embed
        event: event
        url: url
      properties:
        embed:
          description: additional fields which should be embedded in the event
          title: embed
          type: string
        event:
          description: event to which you want to subscribe
          title: event
          type: string
        filter:
          description: filter expression in the form 'attribute=value'
          title: filter
          type: string
        url:
          description: url that will be invoked by XTRF on event
          title: url
          type: string
      title: SubscriptionDTO
      type: object
    TargetLanguagesDTO:
      example:
        targetLanguageIds:
        - 0
        - 0
      properties:
        targetLanguageIds:
          items:
            format: int64
            type: integer
          title: targetLanguageIds
          type: array
      title: TargetLanguagesDTO
      type: object
    TaskCreateDTO:
      example:
        instructions:
          internal: internal
          notes: notes
          forProvider: forProvider
          paymentNoteForCustomer: paymentNoteForCustomer
          fromCustomer: fromCustomer
          paymentNoteForVendor: paymentNoteForVendor
        name: name
        files:
        - name: name
          category: WORKFILE
          content: content
          url: url
          token: token
        - name: name
          category: WORKFILE
          content: content
          url: url
          token: token
        languageCombination:
          sourceLanguageId: 0
          targetLanguageId: 6
        dates:
          actualDeliveryDate:
            value: 6
          actualStartDate:
            value: 6
          deadline:
            value: 6
          startDate:
            value: 6
        specializationId: 0
        people:
          customerContacts:
            sendBackToId: 5
            primaryId: 5
            additionalIds:
            - 1
            - 1
          responsiblePersons:
            projectCoordinatorId: 2
            projectManagerId: 7
        clientTaskPONumber: clientTaskPONumber
        workflowId: 6
      properties:
        clientTaskPONumber:
          description: client task PO number
          title: clientTaskPONumber
          type: string
        dates:
          $ref: '#/components/schemas/ProjectDatesDTO'
        files:
          description: files
          items:
            $ref: '#/components/schemas/TaskFileDTO'
          title: files
          type: array
        instructions:
          $ref: '#/components/schemas/InstructionsDTO'
        languageCombination:
          $ref: '#/components/schemas/CommonLanguageCombinationDTO'
        name:
          description: name
          title: name
          type: string
        people:
          $ref: '#/components/schemas/ClassicPeopleDTO'
        specializationId:
          description: specialization
          format: int64
          title: specializationId
          type: integer
        workflowId:
          description: workflow
          format: int64
          title: workflowId
          type: integer
      title: TaskCreateDTO
      type: object
    TaskDTO:
      example:
        instructions:
          internal: internal
          notes: notes
          forProvider: forProvider
          paymentNoteForCustomer: paymentNoteForCustomer
          fromCustomer: fromCustomer
          paymentNoteForVendor: paymentNoteForVendor
        customFields:
        - name: name
          type: TEXT
          value: "{}"
          key: key
        - name: name
          type: TEXT
          value: "{}"
          key: key
        jobs:
          jobIds:
          - 1
          - 1
          jobCount: 6
        dates:
          actualDeliveryDate:
            value: 6
          actualStartDate:
            value: 6
          deadline:
            value: 6
          startDate:
            value: 6
        idNumber: idNumber
        people:
          customerContacts:
            sendBackToId: 5
            primaryId: 5
            additionalIds:
            - 1
            - 1
          responsiblePersons:
            projectCoordinatorId: 2
            projectManagerId: 7
        clientTaskPONumber: clientTaskPONumber
        quoteId: 5
        name: name
        languageCombination:
          sourceLanguageId: 0
          targetLanguageId: 6
        id: 0
        projectId: 5
        finance:
          invoiceable: true
      properties:
        clientTaskPONumber:
          description: client task PO number
          title: clientTaskPONumber
          type: string
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          properties:
            customFields:
              items:
                $ref: '#/components/schemas/CustomFieldDTO'
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          title: customFields
          type: array
          xml:
            name: customFields
        dates:
          $ref: '#/components/schemas/ProjectDatesDTO'
        finance:
          $ref: '#/components/schemas/TaskFinanceDTO'
        id:
          description: internal identifier
          format: int64
          title: id
          type: integer
        idNumber:
          description: identifier
          title: idNumber
          type: string
        instructions:
          $ref: '#/components/schemas/InstructionsDTO'
        jobs:
          $ref: '#/components/schemas/TaskJobsDTO'
        languageCombination:
          $ref: '#/components/schemas/CommonLanguageCombinationDTO'
        name:
          description: name
          title: name
          type: string
        people:
          $ref: '#/components/schemas/ClassicPeopleDTO'
        projectId:
          description: project's internal identifier
          format: int64
          title: projectId
          type: integer
        quoteId:
          description: quote's internal identifier
          format: int64
          title: quoteId
          type: integer
      title: TaskDTO
      type: object
    TaskFileDTO:
      description: "describes files; remember that either url, content or token should\
        \ be filled"
      example:
        name: name
        category: WORKFILE
        content: content
        url: url
        token: token
      properties:
        category:
          description: file category
          enum:
          - WORKFILE
          - TM
          - DICTIONARY
          - REF
          - LOG_FILE
          title: category
          type: string
        content:
          title: content
          type: string
        name:
          title: name
          type: string
        token:
          title: token
          type: string
        url:
          title: url
          type: string
      title: TaskFileDTO
      type: object
    TaskFilesDTO:
      properties:
        bundles:
          additionalProperties:
            items:
              $ref: '#/components/schemas/FileDTO'
            type: array
          title: bundles
          type: object
        inputFiles:
          $ref: '#/components/schemas/InputFilesDTO'
        jobs:
          items:
            $ref: '#/components/schemas/JobDTO'
          title: jobs
          type: array
        outputFiles:
          items:
            $ref: '#/components/schemas/FileDTO'
          title: outputFiles
          type: array
      title: TaskFilesDTO
      type: object
    TaskFinanceDTO:
      description: finance
      example:
        invoiceable: true
      properties:
        invoiceable:
          description: is this task invoiceable or not
          title: invoiceable
          type: boolean
      title: TaskFinanceDTO
      type: object
    TaskJobsDTO:
      example:
        jobIds:
        - 1
        - 1
        jobCount: 6
      properties:
        jobCount:
          format: int32
          title: jobCount
          type: integer
        jobIds:
          items:
            format: int64
            type: integer
          title: jobIds
          type: array
      title: TaskJobsDTO
      type: object
    TaskProgressDTO:
      properties:
        phase:
          title: phase
          type: string
        status:
          title: status
          type: string
      title: TaskProgressDTO
      type: object
    TimeDTO:
      example:
        value: 6
      properties:
        value:
          format: int64
          title: value
          type: integer
      title: TimeDTO
      type: object
    TimeZoneDTO:
      properties:
        displayName:
          title: displayName
          type: string
        id:
          title: id
          type: string
        offset:
          format: int32
          title: offset
          type: integer
      title: TimeZoneDTO
      type: object
    UrlResultDTO:
      properties:
        url:
          title: url
          type: string
      title: UrlResultDTO
      type: object
    UserDTO:
      example:
        positionName: positionName
        firstName: firstName
        lastName: lastName
        gender: gender
        mobilePhone: mobilePhone
        phone: phone
        customFields:
        - name: name
          type: TEXT
          value: "{}"
          key: key
        - name: name
          type: TEXT
          value: "{}"
          key: key
        timeZoneId: timeZoneId
        userGroupName: userGroupName
        id: 0
        login: login
        email: email
      properties:
        customFields:
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
          properties:
            customFields:
              items:
                $ref: '#/components/schemas/CustomFieldDTO'
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          title: customFields
          type: array
          xml:
            name: customFields
        email:
          title: email
          type: string
        firstName:
          title: firstName
          type: string
        gender:
          title: gender
          type: string
        id:
          format: int64
          title: id
          type: integer
        lastName:
          title: lastName
          type: string
        login:
          title: login
          type: string
        mobilePhone:
          title: mobilePhone
          type: string
        phone:
          title: phone
          type: string
        positionName:
          title: positionName
          type: string
        timeZoneId:
          title: timeZoneId
          type: string
        userGroupName:
          title: userGroupName
          type: string
      title: UserDTO
      type: object
    VendorPriceProfileDTO:
      example:
        vendorPriceProfileId: 0
      properties:
        vendorPriceProfileId:
          format: int64
          title: vendorPriceProfileId
          type: integer
      title: VendorPriceProfileDTO
      type: object
    ViewBriefDTO:
      properties:
        access:
          $ref: '#/components/schemas/AccessDTO'
        current:
          title: current
          type: boolean
        id:
          format: int64
          title: id
          type: integer
        lastModification:
          $ref: '#/components/schemas/LastModificationDTO'
        mine:
          title: mine
          type: boolean
        name:
          title: name
          type: string
        owner:
          title: owner
          type: string
      title: ViewBriefDTO
      type: object
    ViewDTO:
      example:
        settings:
          name: name
          local:
            maxLinesInRow: 6
            maxRows: 1
        columns:
        - settings: "{}"
          name: name
        - settings: "{}"
          name: name
        permissions:
          sharedGroups:
          - 0
          - 0
        order:
          column: column
          type: type
      properties:
        columns:
          items:
            $ref: '#/components/schemas/ColumnDTO'
          title: columns
          type: array
        order:
          $ref: '#/components/schemas/OrderDTO'
        permissions:
          $ref: '#/components/schemas/PermissionsDTO'
        settings:
          $ref: '#/components/schemas/SettingsDTO'
      title: ViewDTO
      type: object
    ViewDetailsDTO:
      properties:
        access:
          $ref: '#/components/schemas/AccessDTO'
        actions:
          items:
            $ref: '#/components/schemas/ActionDTO'
          title: actions
          type: array
        filter:
          $ref: '#/components/schemas/FilterDTO'
        view:
          $ref: '#/components/schemas/ViewDTO'
        viewId:
          format: int64
          title: viewId
          type: integer
      title: ViewDetailsDTO
      type: object
    ViewWithIdDTO:
      properties:
        columns:
          items:
            $ref: '#/components/schemas/ColumnDTO'
          title: columns
          type: array
        order:
          $ref: '#/components/schemas/OrderDTO'
        permissions:
          $ref: '#/components/schemas/PermissionsDTO'
        settings:
          $ref: '#/components/schemas/SettingsDTO'
        viewId:
          format: int64
          title: viewId
          type: integer
      title: ViewWithIdDTO
      type: object
    ViewsBriefDTO:
      properties:
        access:
          $ref: '#/components/schemas/AccessDTO'
        list:
          items:
            $ref: '#/components/schemas/ViewBriefDTO'
          title: list
          type: array
      title: ViewsBriefDTO
      type: object
    VolumeDTO:
      example:
        unitId: 1
        value: 1.0246457001441578
      properties:
        unitId:
          format: int64
          title: unitId
          type: integer
        value:
          title: value
          type: number
      title: VolumeDTO
      type: object
    changePassword_request:
      properties:
        newPassword:
          description: new password
          type: string
        oldPassword:
          description: old password
          type: string
      type: object
    BodyPart_headers:
      additionalProperties:
        items:
          type: string
        type: array
      properties:
        empty:
          type: boolean
      title: BodyPart_headers
      type: object
    BodyPart_mediaType:
      properties:
        parameters:
          additionalProperties:
            type: string
          title: parameters
          type: object
        subtype:
          title: subtype
          type: string
        type:
          title: type
          type: string
        wildcardSubtype:
          title: wildcardSubtype
          type: boolean
        wildcardType:
          title: wildcardType
          type: boolean
      title: BodyPart_mediaType
      type: object
    BodyPart_parameterizedHeaders:
      additionalProperties:
        items:
          $ref: '#/components/schemas/ParameterizedHeader'
        type: array
      properties:
        empty:
          type: boolean
      title: BodyPart_parameterizedHeaders
      type: object
  securitySchemes:
    X-AUTH-ACCESS-TOKEN:
      in: header
      name: X-AUTH-ACCESS-TOKEN
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_X-AUTH-ACCESS-TOKEN
