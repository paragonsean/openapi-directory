/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XtrfHomePortalApi);
  }
}(this, function(expect, XtrfHomePortalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XtrfHomePortalApi.QuotesSmartV2Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QuotesSmartV2Api', function() {
    describe('addFiles2', function() {
      it('should call addFiles2 successfully', function(done) {
        //uncomment below and update the code to test addFiles2
        //instance.addFiles2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('archive1', function() {
      it('should call archive1 successfully', function(done) {
        //uncomment below and update the code to test archive1
        //instance.archive1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changeStatus3', function() {
      it('should call changeStatus3 successfully', function(done) {
        //uncomment below and update the code to test changeStatus3
        //instance.changeStatus3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('create7', function() {
      it('should call create7 successfully', function(done) {
        //uncomment below and update the code to test create7
        //instance.create7(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPayable3', function() {
      it('should call createPayable3 successfully', function(done) {
        //uncomment below and update the code to test createPayable3
        //instance.createPayable3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createReceivable3', function() {
      it('should call createReceivable3 successfully', function(done) {
        //uncomment below and update the code to test createReceivable3
        //instance.createReceivable3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePayable3', function() {
      it('should call deletePayable3 successfully', function(done) {
        //uncomment below and update the code to test deletePayable3
        //instance.deletePayable3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteReceivable3', function() {
      it('should call deleteReceivable3 successfully', function(done) {
        //uncomment below and update the code to test deleteReceivable3
        //instance.deleteReceivable3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getById10', function() {
      it('should call getById10 successfully', function(done) {
        //uncomment below and update the code to test getById10
        //instance.getById10(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContacts3', function() {
      it('should call getContacts3 successfully', function(done) {
        //uncomment below and update the code to test getContacts3
        //instance.getContacts3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomFields9', function() {
      it('should call getCustomFields9 successfully', function(done) {
        //uncomment below and update the code to test getCustomFields9
        //instance.getCustomFields9(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFileById3', function() {
      it('should call getFileById3 successfully', function(done) {
        //uncomment below and update the code to test getFileById3
        //instance.getFileById3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFileContentById1', function() {
      it('should call getFileContentById1 successfully', function(done) {
        //uncomment below and update the code to test getFileContentById1
        //instance.getFileContentById1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFiles1', function() {
      it('should call getFiles1 successfully', function(done) {
        //uncomment below and update the code to test getFiles1
        //instance.getFiles1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFinance3', function() {
      it('should call getFinance3 successfully', function(done) {
        //uncomment below and update the code to test getFinance3
        //instance.getFinance3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobs1', function() {
      it('should call getJobs1 successfully', function(done) {
        //uncomment below and update the code to test getJobs1
        //instance.getJobs1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBusinessDays', function() {
      it('should call updateBusinessDays successfully', function(done) {
        //uncomment below and update the code to test updateBusinessDays
        //instance.updateBusinessDays(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClientNotes1', function() {
      it('should call updateClientNotes1 successfully', function(done) {
        //uncomment below and update the code to test updateClientNotes1
        //instance.updateClientNotes1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClientReferenceNumber1', function() {
      it('should call updateClientReferenceNumber1 successfully', function(done) {
        //uncomment below and update the code to test updateClientReferenceNumber1
        //instance.updateClientReferenceNumber1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContacts3', function() {
      it('should call updateContacts3 successfully', function(done) {
        //uncomment below and update the code to test updateContacts3
        //instance.updateContacts3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCustomField3', function() {
      it('should call updateCustomField3 successfully', function(done) {
        //uncomment below and update the code to test updateCustomField3
        //instance.updateCustomField3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExpectedDeliveryDate', function() {
      it('should call updateExpectedDeliveryDate successfully', function(done) {
        //uncomment below and update the code to test updateExpectedDeliveryDate
        //instance.updateExpectedDeliveryDate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInternalNotes1', function() {
      it('should call updateInternalNotes1 successfully', function(done) {
        //uncomment below and update the code to test updateInternalNotes1
        //instance.updateInternalNotes1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePayable3', function() {
      it('should call updatePayable3 successfully', function(done) {
        //uncomment below and update the code to test updatePayable3
        //instance.updatePayable3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQuoteExpiry', function() {
      it('should call updateQuoteExpiry successfully', function(done) {
        //uncomment below and update the code to test updateQuoteExpiry
        //instance.updateQuoteExpiry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateReceivable3', function() {
      it('should call updateReceivable3 successfully', function(done) {
        //uncomment below and update the code to test updateReceivable3
        //instance.updateReceivable3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSourceLanguage1', function() {
      it('should call updateSourceLanguage1 successfully', function(done) {
        //uncomment below and update the code to test updateSourceLanguage1
        //instance.updateSourceLanguage1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSpecialization1', function() {
      it('should call updateSpecialization1 successfully', function(done) {
        //uncomment below and update the code to test updateSpecialization1
        //instance.updateSpecialization1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTargetLanguages1', function() {
      it('should call updateTargetLanguages1 successfully', function(done) {
        //uncomment below and update the code to test updateTargetLanguages1
        //instance.updateTargetLanguages1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVendorInstructions1', function() {
      it('should call updateVendorInstructions1 successfully', function(done) {
        //uncomment below and update the code to test updateVendorInstructions1
        //instance.updateVendorInstructions1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVolume1', function() {
      it('should call updateVolume1 successfully', function(done) {
        //uncomment below and update the code to test updateVolume1
        //instance.updateVolume1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadFile3', function() {
      it('should call uploadFile3 successfully', function(done) {
        //uncomment below and update the code to test uploadFile3
        //instance.uploadFile3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
