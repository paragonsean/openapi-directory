/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XtrfHomePortalApi);
  }
}(this, function(expect, XtrfHomePortalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XtrfHomePortalApi.BrowserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BrowserApi', function() {
    describe('browseCSV', function() {
      it('should call browseCSV successfully', function(done) {
        //uncomment below and update the code to test browseCSV
        //instance.browseCSV(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('browseJSON', function() {
      it('should call browseJSON successfully', function(done) {
        //uncomment below and update the code to test browseJSON
        //instance.browseJSON(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('callDelete', function() {
      it('should call callDelete successfully', function(done) {
        //uncomment below and update the code to test callDelete
        //instance.callDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('create', function() {
      it('should call create successfully', function(done) {
        //uncomment below and update the code to test create
        //instance.create(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteColumn', function() {
      it('should call deleteColumn successfully', function(done) {
        //uncomment below and update the code to test deleteColumn
        //instance.deleteColumn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('get', function() {
      it('should call get successfully', function(done) {
        //uncomment below and update the code to test get
        //instance.get(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getColumnSettings', function() {
      it('should call getColumnSettings successfully', function(done) {
        //uncomment below and update the code to test getColumnSettings
        //instance.getColumnSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getColumns', function() {
      it('should call getColumns successfully', function(done) {
        //uncomment below and update the code to test getColumns
        //instance.getColumns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCurrentViewDetails', function() {
      it('should call getCurrentViewDetails successfully', function(done) {
        //uncomment below and update the code to test getCurrentViewDetails
        //instance.getCurrentViewDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFilter', function() {
      it('should call getFilter successfully', function(done) {
        //uncomment below and update the code to test getFilter
        //instance.getFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalSettings', function() {
      it('should call getLocalSettings successfully', function(done) {
        //uncomment below and update the code to test getLocalSettings
        //instance.getLocalSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrder', function() {
      it('should call getOrder successfully', function(done) {
        //uncomment below and update the code to test getOrder
        //instance.getOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPermissions', function() {
      it('should call getPermissions successfully', function(done) {
        //uncomment below and update the code to test getPermissions
        //instance.getPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSettings', function() {
      it('should call getSettings successfully', function(done) {
        //uncomment below and update the code to test getSettings
        //instance.getSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getViewDetails', function() {
      it('should call getViewDetails successfully', function(done) {
        //uncomment below and update the code to test getViewDetails
        //instance.getViewDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getViewsBrief', function() {
      it('should call getViewsBrief successfully', function(done) {
        //uncomment below and update the code to test getViewsBrief
        //instance.getViewsBrief(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('selectViewAndGetItsDetails', function() {
      it('should call selectViewAndGetItsDetails successfully', function(done) {
        //uncomment below and update the code to test selectViewAndGetItsDetails
        //instance.selectViewAndGetItsDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('update', function() {
      it('should call update successfully', function(done) {
        //uncomment below and update the code to test update
        //instance.update(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateColumnSettings', function() {
      it('should call updateColumnSettings successfully', function(done) {
        //uncomment below and update the code to test updateColumnSettings
        //instance.updateColumnSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateColumns', function() {
      it('should call updateColumns successfully', function(done) {
        //uncomment below and update the code to test updateColumns
        //instance.updateColumns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFilter', function() {
      it('should call updateFilter successfully', function(done) {
        //uncomment below and update the code to test updateFilter
        //instance.updateFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFilterProperty', function() {
      it('should call updateFilterProperty successfully', function(done) {
        //uncomment below and update the code to test updateFilterProperty
        //instance.updateFilterProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocalSettings', function() {
      it('should call updateLocalSettings successfully', function(done) {
        //uncomment below and update the code to test updateLocalSettings
        //instance.updateLocalSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrder', function() {
      it('should call updateOrder successfully', function(done) {
        //uncomment below and update the code to test updateOrder
        //instance.updateOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePermissions', function() {
      it('should call updatePermissions successfully', function(done) {
        //uncomment below and update the code to test updatePermissions
        //instance.updatePermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSettings', function() {
      it('should call updateSettings successfully', function(done) {
        //uncomment below and update the code to test updateSettings
        //instance.updateSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
