/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XtrfHomePortalApi);
  }
}(this, function(expect, XtrfHomePortalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XtrfHomePortalApi.ProjectDTOv2();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectDTOv2', function() {
    it('should create an instance of ProjectDTOv2', function() {
      // uncomment below and update the code to test ProjectDTOv2
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be.a(XtrfHomePortalApi.ProjectDTOv2);
    });

    it('should have the property budgetCode (base name: "budgetCode")', function() {
      // uncomment below and update the code to test the property budgetCode
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property categoryIds (base name: "categoryIds")', function() {
      // uncomment below and update the code to test the property categoryIds
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property clientDeadline (base name: "clientDeadline")', function() {
      // uncomment below and update the code to test the property clientDeadline
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property clientNotes (base name: "clientNotes")', function() {
      // uncomment below and update the code to test the property clientNotes
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property clientReferenceNumber (base name: "clientReferenceNumber")', function() {
      // uncomment below and update the code to test the property clientReferenceNumber
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property documents (base name: "documents")', function() {
      // uncomment below and update the code to test the property documents
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property instructionsForAllJobs (base name: "instructionsForAllJobs")', function() {
      // uncomment below and update the code to test the property instructionsForAllJobs
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property internalNotes (base name: "internalNotes")', function() {
      // uncomment below and update the code to test the property internalNotes
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property isClassicProject (base name: "isClassicProject")', function() {
      // uncomment below and update the code to test the property isClassicProject
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property languages (base name: "languages")', function() {
      // uncomment below and update the code to test the property languages
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property orderedOn (base name: "orderedOn")', function() {
      // uncomment below and update the code to test the property orderedOn
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property people (base name: "people")', function() {
      // uncomment below and update the code to test the property people
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property projectId (base name: "projectId")', function() {
      // uncomment below and update the code to test the property projectId
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property projectIdNumber (base name: "projectIdNumber")', function() {
      // uncomment below and update the code to test the property projectIdNumber
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property quoteIdNumber (base name: "quoteIdNumber")', function() {
      // uncomment below and update the code to test the property quoteIdNumber
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property serviceId (base name: "serviceId")', function() {
      // uncomment below and update the code to test the property serviceId
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

    it('should have the property volume (base name: "volume")', function() {
      // uncomment below and update the code to test the property volume
      //var instance = new XtrfHomePortalApi.ProjectDTOv2();
      //expect(instance).to.be();
    });

  });

}));
