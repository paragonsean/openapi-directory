/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XtrfHomePortalApi);
  }
}(this, function(expect, XtrfHomePortalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XtrfHomePortalApi.CustomerPersonDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CustomerPersonDTO', function() {
    it('should create an instance of CustomerPersonDTO', function() {
      // uncomment below and update the code to test CustomerPersonDTO
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be.a(XtrfHomePortalApi.CustomerPersonDTO);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customerId")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property firstProjectDate (base name: "firstProjectDate")', function() {
      // uncomment below and update the code to test the property firstProjectDate
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property firstQuoteDate (base name: "firstQuoteDate")', function() {
      // uncomment below and update the code to test the property firstQuoteDate
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property lastProjectDate (base name: "lastProjectDate")', function() {
      // uncomment below and update the code to test the property lastProjectDate
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property lastQuoteDate (base name: "lastQuoteDate")', function() {
      // uncomment below and update the code to test the property lastQuoteDate
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property motherTonguesIds (base name: "motherTonguesIds")', function() {
      // uncomment below and update the code to test the property motherTonguesIds
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property numberOfProjects (base name: "numberOfProjects")', function() {
      // uncomment below and update the code to test the property numberOfProjects
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property numberOfQuotes (base name: "numberOfQuotes")', function() {
      // uncomment below and update the code to test the property numberOfQuotes
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

    it('should have the property positionId (base name: "positionId")', function() {
      // uncomment below and update the code to test the property positionId
      //var instance = new XtrfHomePortalApi.CustomerPersonDTO();
      //expect(instance).to.be();
    });

  });

}));
