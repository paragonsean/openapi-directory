/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XtrfHomePortalApi);
  }
}(this, function(expect, XtrfHomePortalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XtrfHomePortalApi.CustomerDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CustomerDTO', function() {
    it('should create an instance of CustomerDTO', function() {
      // uncomment below and update the code to test CustomerDTO
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be.a(XtrfHomePortalApi.CustomerDTO);
    });

    it('should have the property accountOnCustomerServer (base name: "accountOnCustomerServer")', function() {
      // uncomment below and update the code to test the property accountOnCustomerServer
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property accounting (base name: "accounting")', function() {
      // uncomment below and update the code to test the property accounting
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress (base name: "billingAddress")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property branchId (base name: "branchId")', function() {
      // uncomment below and update the code to test the property branchId
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property categoriesIds (base name: "categoriesIds")', function() {
      // uncomment below and update the code to test the property categoriesIds
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property clientFirstProjectDate (base name: "clientFirstProjectDate")', function() {
      // uncomment below and update the code to test the property clientFirstProjectDate
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property clientFirstQuoteDate (base name: "clientFirstQuoteDate")', function() {
      // uncomment below and update the code to test the property clientFirstQuoteDate
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property clientLastProjectDate (base name: "clientLastProjectDate")', function() {
      // uncomment below and update the code to test the property clientLastProjectDate
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property clientLastQuoteDate (base name: "clientLastQuoteDate")', function() {
      // uncomment below and update the code to test the property clientLastQuoteDate
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property clientNumberOfProjects (base name: "clientNumberOfProjects")', function() {
      // uncomment below and update the code to test the property clientNumberOfProjects
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property clientNumberOfQuotes (base name: "clientNumberOfQuotes")', function() {
      // uncomment below and update the code to test the property clientNumberOfQuotes
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property contractNumber (base name: "contractNumber")', function() {
      // uncomment below and update the code to test the property contractNumber
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property correspondenceAddress (base name: "correspondenceAddress")', function() {
      // uncomment below and update the code to test the property correspondenceAddress
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "customFields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "fullName")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property idNumber (base name: "idNumber")', function() {
      // uncomment below and update the code to test the property idNumber
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property industriesIds (base name: "industriesIds")', function() {
      // uncomment below and update the code to test the property industriesIds
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property leadSourceId (base name: "leadSourceId")', function() {
      // uncomment below and update the code to test the property leadSourceId
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property limitAccessToPeopleResponsible (base name: "limitAccessToPeopleResponsible")', function() {
      // uncomment below and update the code to test the property limitAccessToPeopleResponsible
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property persons (base name: "persons")', function() {
      // uncomment below and update the code to test the property persons
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property responsiblePersons (base name: "responsiblePersons")', function() {
      // uncomment below and update the code to test the property responsiblePersons
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property salesNotes (base name: "salesNotes")', function() {
      // uncomment below and update the code to test the property salesNotes
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new XtrfHomePortalApi.CustomerDTO();
      //expect(instance).to.be();
    });

  });

}));
