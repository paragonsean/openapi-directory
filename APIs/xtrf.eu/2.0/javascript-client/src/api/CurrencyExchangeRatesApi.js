/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CurrencyHistoryDTO from '../model/CurrencyHistoryDTO';

/**
* CurrencyExchangeRates service.
* @module api/CurrencyExchangeRatesApi
* @version 2.0
*/
export default class CurrencyExchangeRatesApi {

    /**
    * Constructs a new CurrencyExchangeRatesApi. 
    * @alias module:api/CurrencyExchangeRatesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createExchangeRate operation.
     * @callback module:api/CurrencyExchangeRatesApi~createExchangeRateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adding currency exchange rates.
     * Adding currency exchange rates via API
     * @param {String} isoCode iso code, https://www.xe.com/iso4217.php
     * @param {module:model/CurrencyHistoryDTO} currencyHistoryDTO Adding new currency exchange rates
     * @param {module:api/CurrencyExchangeRatesApi~createExchangeRateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    createExchangeRate(isoCode, currencyHistoryDTO, callback) {
      let postBody = currencyHistoryDTO;
      // verify the required parameter 'isoCode' is set
      if (isoCode === undefined || isoCode === null) {
        throw new Error("Missing the required parameter 'isoCode' when calling createExchangeRate");
      }
      // verify the required parameter 'currencyHistoryDTO' is set
      if (currencyHistoryDTO === undefined || currencyHistoryDTO === null) {
        throw new Error("Missing the required parameter 'currencyHistoryDTO' when calling createExchangeRate");
      }

      let pathParams = {
        'isoCode': isoCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-AUTH-ACCESS-TOKEN'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dictionaries/currency/{isoCode}/exchangeRate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getByIsoCode operation.
     * @callback module:api/CurrencyExchangeRatesApi~getByIsoCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CurrencyHistoryDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns currency exchange rates.
     * Returns currency exchange rates.
     * @param {String} isoCode iso code, https://www.xe.com/iso4217.php
     * @param {module:api/CurrencyExchangeRatesApi~getByIsoCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CurrencyHistoryDTO}
     */
    getByIsoCode(isoCode, callback) {
      let postBody = null;
      // verify the required parameter 'isoCode' is set
      if (isoCode === undefined || isoCode === null) {
        throw new Error("Missing the required parameter 'isoCode' when calling getByIsoCode");
      }

      let pathParams = {
        'isoCode': isoCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-AUTH-ACCESS-TOKEN'];
      let contentTypes = [];
      let accepts = ['application/vnd.xtrf-v1+json;charset=UTF-8'];
      let returnType = CurrencyHistoryDTO;
      return this.apiClient.callApi(
        '/dictionaries/currency/{isoCode}/exchangeRate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
