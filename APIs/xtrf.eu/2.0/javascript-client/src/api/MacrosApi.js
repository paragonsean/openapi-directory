/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActionStartedDTO from '../model/ActionStartedDTO';
import MacroRequestDTO from '../model/MacroRequestDTO';

/**
* Macros service.
* @module api/MacrosApi
* @version 2.0
*/
export default class MacrosApi {

    /**
    * Constructs a new MacrosApi. 
    * @alias module:api/MacrosApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the run operation.
     * @callback module:api/MacrosApi~runCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActionStartedDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Executes a macro.
     * Runs a specified macro on a specified list of items (\"list\" variable in the macro code). The list of items can be empty if the macro doesn't use it. Additional custom parameters can be provided to the macro when necessary (\"params\" variable in the macro code).   <BR>Note: Macros that support parameters can be also run from GUI (Views in Home Portal),so they should also handle the empty parameters map (e.g. by defining default values when parameters are not provided).
     * @param {Number} macroId macro internal identifier
     * @param {module:model/MacroRequestDTO} macroRequestDTO Generated client invoices documents.
     * @param {module:api/MacrosApi~runCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActionStartedDTO}
     */
    run(macroId, macroRequestDTO, callback) {
      let postBody = macroRequestDTO;
      // verify the required parameter 'macroId' is set
      if (macroId === undefined || macroId === null) {
        throw new Error("Missing the required parameter 'macroId' when calling run");
      }
      // verify the required parameter 'macroRequestDTO' is set
      if (macroRequestDTO === undefined || macroRequestDTO === null) {
        throw new Error("Missing the required parameter 'macroRequestDTO' when calling run");
      }

      let pathParams = {
        'macroId': macroId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-AUTH-ACCESS-TOKEN'];
      let contentTypes = ['application/json;charset=UTF-8'];
      let accepts = ['application/vnd.xtrf-v1+json;charset=UTF-8'];
      let returnType = ActionStartedDTO;
      return this.apiClient.callApi(
        '/macros/{macroId}/run', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
