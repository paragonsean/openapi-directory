/**
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobTypeDTO model module.
 * @module model/JobTypeDTO
 * @version 2.0
 */
class JobTypeDTO {
    /**
     * Constructs a new <code>JobTypeDTO</code>.
     * @alias module:model/JobTypeDTO
     */
    constructor() { 
        
        JobTypeDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobTypeDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobTypeDTO} obj Optional instance to populate.
     * @return {module:model/JobTypeDTO} The populated <code>JobTypeDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobTypeDTO();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('calculationUnitIds')) {
                obj['calculationUnitIds'] = ApiClient.convertToType(data['calculationUnitIds'], ['Number']);
            }
            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
            }
            if (data.hasOwnProperty('filesNeeded')) {
                obj['filesNeeded'] = ApiClient.convertToType(data['filesNeeded'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('preferred')) {
                obj['preferred'] = ApiClient.convertToType(data['preferred'], 'Boolean');
            }
            if (data.hasOwnProperty('providedByClient')) {
                obj['providedByClient'] = ApiClient.convertToType(data['providedByClient'], 'Boolean');
            }
            if (data.hasOwnProperty('relationToLanguage')) {
                obj['relationToLanguage'] = ApiClient.convertToType(data['relationToLanguage'], 'String');
            }
            if (data.hasOwnProperty('vendorProductivity')) {
                obj['vendorProductivity'] = ApiClient.convertToType(data['vendorProductivity'], 'Number');
            }
            if (data.hasOwnProperty('vendorProductivityCalculationUnitId')) {
                obj['vendorProductivityCalculationUnitId'] = ApiClient.convertToType(data['vendorProductivityCalculationUnitId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobTypeDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobTypeDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['calculationUnitIds'])) {
            throw new Error("Expected the field `calculationUnitIds` to be an array in the JSON data but got " + data['calculationUnitIds']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['relationToLanguage'] && !(typeof data['relationToLanguage'] === 'string' || data['relationToLanguage'] instanceof String)) {
            throw new Error("Expected the field `relationToLanguage` to be a primitive type in the JSON string but got " + data['relationToLanguage']);
        }

        return true;
    }


}



/**
 * should this value be available on the XTRF selection lists
 * @member {Boolean} active
 */
JobTypeDTO.prototype['active'] = undefined;

/**
 * @member {Array.<Number>} calculationUnitIds
 */
JobTypeDTO.prototype['calculationUnitIds'] = undefined;

/**
 * should this value be set by default in XTRF selection lists
 * @member {Boolean} default
 */
JobTypeDTO.prototype['default'] = undefined;

/**
 * @member {Boolean} filesNeeded
 */
JobTypeDTO.prototype['filesNeeded'] = undefined;

/**
 * internal identifier
 * @member {Number} id
 */
JobTypeDTO.prototype['id'] = undefined;

/**
 * localised name (formatted in the current user's locale)
 * @member {String} name
 */
JobTypeDTO.prototype['name'] = undefined;

/**
 * should this value be available on the top of XTRF selection lists, in the Preferred section
 * @member {Boolean} preferred
 */
JobTypeDTO.prototype['preferred'] = undefined;

/**
 * @member {Boolean} providedByClient
 */
JobTypeDTO.prototype['providedByClient'] = undefined;

/**
 * @member {module:model/JobTypeDTO.RelationToLanguageEnum} relationToLanguage
 */
JobTypeDTO.prototype['relationToLanguage'] = undefined;

/**
 * @member {Number} vendorProductivity
 */
JobTypeDTO.prototype['vendorProductivity'] = undefined;

/**
 * @member {Number} vendorProductivityCalculationUnitId
 */
JobTypeDTO.prototype['vendorProductivityCalculationUnitId'] = undefined;





/**
 * Allowed values for the <code>relationToLanguage</code> property.
 * @enum {String}
 * @readonly
 */
JobTypeDTO['RelationToLanguageEnum'] = {

    /**
     * value: "LANGUAGE_COMBINATION_RELATED"
     * @const
     */
    "LANGUAGE_COMBINATION_RELATED": "LANGUAGE_COMBINATION_RELATED",

    /**
     * value: "SOURCE_LANGUAGE_RELATED_ONLY"
     * @const
     */
    "SOURCE_LANGUAGE_RELATED_ONLY": "SOURCE_LANGUAGE_RELATED_ONLY",

    /**
     * value: "TARGET_LANGUAGE_RELATED_ONLY"
     * @const
     */
    "TARGET_LANGUAGE_RELATED_ONLY": "TARGET_LANGUAGE_RELATED_ONLY",

    /**
     * value: "LANGUAGE_INDEPENDENT"
     * @const
     */
    "LANGUAGE_INDEPENDENT": "LANGUAGE_INDEPENDENT"
};



export default JobTypeDTO;

