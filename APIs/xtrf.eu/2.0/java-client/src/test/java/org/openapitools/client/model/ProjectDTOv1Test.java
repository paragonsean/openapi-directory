/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.ContactsDTO;
import org.openapitools.client.model.CustomFieldDTO;
import org.openapitools.client.model.FinanceDTO;
import org.openapitools.client.model.InstructionsDTO;
import org.openapitools.client.model.ProjectDatesDTO;
import org.openapitools.client.model.TaskDTO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProjectDTOv1
 */
public class ProjectDTOv1Test {
    private final ProjectDTOv1 model = new ProjectDTOv1();

    /**
     * Model tests for ProjectDTOv1
     */
    @Test
    public void testProjectDTOv1() {
        // TODO: test ProjectDTOv1
    }

    /**
     * Test the property 'categoriesIds'
     */
    @Test
    public void categoriesIdsTest() {
        // TODO: test categoriesIds
    }

    /**
     * Test the property 'contactPersonId'
     */
    @Test
    public void contactPersonIdTest() {
        // TODO: test contactPersonId
    }

    /**
     * Test the property 'contacts'
     */
    @Test
    public void contactsTest() {
        // TODO: test contacts
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'customerId'
     */
    @Test
    public void customerIdTest() {
        // TODO: test customerId
    }

    /**
     * Test the property 'dates'
     */
    @Test
    public void datesTest() {
        // TODO: test dates
    }

    /**
     * Test the property 'finance'
     */
    @Test
    public void financeTest() {
        // TODO: test finance
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'idNumber'
     */
    @Test
    public void idNumberTest() {
        // TODO: test idNumber
    }

    /**
     * Test the property 'instructions'
     */
    @Test
    public void instructionsTest() {
        // TODO: test instructions
    }

    /**
     * Test the property 'isClassicProject'
     */
    @Test
    public void isClassicProjectTest() {
        // TODO: test isClassicProject
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

    /**
     * Test the property 'projectManagerId'
     */
    @Test
    public void projectManagerIdTest() {
        // TODO: test projectManagerId
    }

    /**
     * Test the property 'specializationId'
     */
    @Test
    public void specializationIdTest() {
        // TODO: test specializationId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'tasks'
     */
    @Test
    public void tasksTest() {
        // TODO: test tasks
    }

}
