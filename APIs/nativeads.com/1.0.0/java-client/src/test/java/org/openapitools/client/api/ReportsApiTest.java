/*
 * Native Ads Publisher API
 * This is a Native Ads Publisher API it provides same functionality as Native Ads Publisher Account GUI. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.LocalDate;
import org.openapitools.client.model.ModelError;
import org.openapitools.client.model.ReportsDailyResponse;
import org.openapitools.client.model.ReportsWebsiteResponse;
import org.openapitools.client.model.ReportsWidgetResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportsApi
 */
@Disabled
public class ReportsApiTest {

    private final ReportsApi api = new ReportsApi();

    /**
     * Returns publisher statistics split by date
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publisherReportsDailyGetTest() throws ApiException {
        String token = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        Integer limit = null;
        Integer page = null;
        ReportsDailyResponse response = api.publisherReportsDailyGet(token, startDate, endDate, limit, page);
        // TODO: test validations
    }

    /**
     * Returns publisher statistics split by website
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publisherReportsWebsiteGetTest() throws ApiException {
        String token = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        Integer limit = null;
        Integer page = null;
        ReportsWebsiteResponse response = api.publisherReportsWebsiteGet(token, startDate, endDate, limit, page);
        // TODO: test validations
    }

    /**
     * Returns publisher statistics split by widget
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publisherReportsWidgetGetTest() throws ApiException {
        String token = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        Integer limit = null;
        Integer page = null;
        ReportsWidgetResponse response = api.publisherReportsWidgetGet(token, startDate, endDate, limit, page);
        // TODO: test validations
    }

}
