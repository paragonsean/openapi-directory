/**
 * Marketing Events
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MarketingEvents);
  }
}(this, function(expect, MarketingEvents) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MarketingEvents.BasicApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BasicApi', function() {
    describe('deleteMarketingV3MarketingEventsEventsExternalEventIdArchive', function() {
      it('should call deleteMarketingV3MarketingEventsEventsExternalEventIdArchive successfully', function(done) {
        //uncomment below and update the code to test deleteMarketingV3MarketingEventsEventsExternalEventIdArchive
        //instance.deleteMarketingV3MarketingEventsEventsExternalEventIdArchive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMarketingV3MarketingEventsEventsExternalEventIdGetById', function() {
      it('should call getMarketingV3MarketingEventsEventsExternalEventIdGetById successfully', function(done) {
        //uncomment below and update the code to test getMarketingV3MarketingEventsEventsExternalEventIdGetById
        //instance.getMarketingV3MarketingEventsEventsExternalEventIdGetById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchMarketingV3MarketingEventsEventsExternalEventIdUpdate', function() {
      it('should call patchMarketingV3MarketingEventsEventsExternalEventIdUpdate successfully', function(done) {
        //uncomment below and update the code to test patchMarketingV3MarketingEventsEventsExternalEventIdUpdate
        //instance.patchMarketingV3MarketingEventsEventsExternalEventIdUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postMarketingV3MarketingEventsEventsCreate', function() {
      it('should call postMarketingV3MarketingEventsEventsCreate successfully', function(done) {
        //uncomment below and update the code to test postMarketingV3MarketingEventsEventsCreate
        //instance.postMarketingV3MarketingEventsEventsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postMarketingV3MarketingEventsEventsExternalEventIdCancelDoCancel', function() {
      it('should call postMarketingV3MarketingEventsEventsExternalEventIdCancelDoCancel successfully', function(done) {
        //uncomment below and update the code to test postMarketingV3MarketingEventsEventsExternalEventIdCancelDoCancel
        //instance.postMarketingV3MarketingEventsEventsExternalEventIdCancelDoCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putMarketingV3MarketingEventsEventsExternalEventIdReplace', function() {
      it('should call putMarketingV3MarketingEventsEventsExternalEventIdReplace successfully', function(done) {
        //uncomment below and update the code to test putMarketingV3MarketingEventsEventsExternalEventIdReplace
        //instance.putMarketingV3MarketingEventsEventsExternalEventIdReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
