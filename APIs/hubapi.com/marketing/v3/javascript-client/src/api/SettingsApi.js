/**
 * Marketing Events
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import EventDetailSettings from '../model/EventDetailSettings';
import EventDetailSettingsUrl from '../model/EventDetailSettingsUrl';

/**
* Settings service.
* @module api/SettingsApi
* @version v3
*/
export default class SettingsApi {

    /**
    * Constructs a new SettingsApi. 
    * @alias module:api/SettingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getMarketingV3MarketingEventsAppIdSettingsGetAll operation.
     * @callback module:api/SettingsApi~getMarketingV3MarketingEventsAppIdSettingsGetAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EventDetailSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the application settings
     * Retrieve the current settings for the application.
     * @param {Number} appId The id of the application to retrieve the settings for.
     * @param {module:api/SettingsApi~getMarketingV3MarketingEventsAppIdSettingsGetAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EventDetailSettings}
     */
    getMarketingV3MarketingEventsAppIdSettingsGetAll(appId, callback) {
      let postBody = null;
      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling getMarketingV3MarketingEventsAppIdSettingsGetAll");
      }

      let pathParams = {
        'appId': appId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['developer_hapikey'];
      let contentTypes = [];
      let accepts = ['application/json', '*/*'];
      let returnType = EventDetailSettings;
      return this.apiClient.callApi(
        '/marketing/v3/marketing-events/{appId}/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMarketingV3MarketingEventsAppIdSettingsCreate operation.
     * @callback module:api/SettingsApi~postMarketingV3MarketingEventsAppIdSettingsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EventDetailSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the application settings
     * Create or update the current settings for the application.
     * @param {Number} appId The id of the application to update the settings for.
     * @param {module:model/EventDetailSettingsUrl} eventDetailSettingsUrl The new application settings
     * @param {module:api/SettingsApi~postMarketingV3MarketingEventsAppIdSettingsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EventDetailSettings}
     */
    postMarketingV3MarketingEventsAppIdSettingsCreate(appId, eventDetailSettingsUrl, callback) {
      let postBody = eventDetailSettingsUrl;
      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling postMarketingV3MarketingEventsAppIdSettingsCreate");
      }
      // verify the required parameter 'eventDetailSettingsUrl' is set
      if (eventDetailSettingsUrl === undefined || eventDetailSettingsUrl === null) {
        throw new Error("Missing the required parameter 'eventDetailSettingsUrl' when calling postMarketingV3MarketingEventsAppIdSettingsCreate");
      }

      let pathParams = {
        'appId': appId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['developer_hapikey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', '*/*'];
      let returnType = EventDetailSettings;
      return this.apiClient.callApi(
        '/marketing/v3/marketing-events/{appId}/settings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
