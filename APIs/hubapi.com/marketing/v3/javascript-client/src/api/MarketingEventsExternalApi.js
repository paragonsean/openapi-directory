/**
 * Marketing Events
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import MarketingEventCompleteRequestParams from '../model/MarketingEventCompleteRequestParams';
import MarketingEventDefaultResponse from '../model/MarketingEventDefaultResponse';

/**
* MarketingEventsExternal service.
* @module api/MarketingEventsExternalApi
* @version v3
*/
export default class MarketingEventsExternalApi {

    /**
    * Constructs a new MarketingEventsExternalApi. 
    * @alias module:api/MarketingEventsExternalApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postMarketingV3MarketingEventsEventsExternalEventIdCompleteComplete operation.
     * @callback module:api/MarketingEventsExternalApi~postMarketingV3MarketingEventsEventsExternalEventIdCompleteCompleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketingEventDefaultResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} externalEventId 
     * @param {String} externalAccountId 
     * @param {module:model/MarketingEventCompleteRequestParams} marketingEventCompleteRequestParams 
     * @param {module:api/MarketingEventsExternalApi~postMarketingV3MarketingEventsEventsExternalEventIdCompleteCompleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketingEventDefaultResponse}
     */
    postMarketingV3MarketingEventsEventsExternalEventIdCompleteComplete(externalEventId, externalAccountId, marketingEventCompleteRequestParams, callback) {
      let postBody = marketingEventCompleteRequestParams;
      // verify the required parameter 'externalEventId' is set
      if (externalEventId === undefined || externalEventId === null) {
        throw new Error("Missing the required parameter 'externalEventId' when calling postMarketingV3MarketingEventsEventsExternalEventIdCompleteComplete");
      }
      // verify the required parameter 'externalAccountId' is set
      if (externalAccountId === undefined || externalAccountId === null) {
        throw new Error("Missing the required parameter 'externalAccountId' when calling postMarketingV3MarketingEventsEventsExternalEventIdCompleteComplete");
      }
      // verify the required parameter 'marketingEventCompleteRequestParams' is set
      if (marketingEventCompleteRequestParams === undefined || marketingEventCompleteRequestParams === null) {
        throw new Error("Missing the required parameter 'marketingEventCompleteRequestParams' when calling postMarketingV3MarketingEventsEventsExternalEventIdCompleteComplete");
      }

      let pathParams = {
        'externalEventId': externalEventId
      };
      let queryParams = {
        'externalAccountId': externalAccountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_legacy', 'private_apps_legacy'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', '*/*'];
      let returnType = MarketingEventDefaultResponse;
      return this.apiClient.callApi(
        '/marketing/v3/marketing-events/events/{externalEventId}/complete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
