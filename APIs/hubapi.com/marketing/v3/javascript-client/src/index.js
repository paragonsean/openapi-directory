/**
 * Marketing Events
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BatchInputMarketingEventCreateRequestParams from './model/BatchInputMarketingEventCreateRequestParams';
import BatchInputMarketingEventEmailSubscriber from './model/BatchInputMarketingEventEmailSubscriber';
import BatchInputMarketingEventExternalUniqueIdentifier from './model/BatchInputMarketingEventExternalUniqueIdentifier';
import BatchInputMarketingEventSubscriber from './model/BatchInputMarketingEventSubscriber';
import BatchResponseMarketingEventPublicDefaultResponse from './model/BatchResponseMarketingEventPublicDefaultResponse';
import BatchResponseSubscriberEmailResponse from './model/BatchResponseSubscriberEmailResponse';
import BatchResponseSubscriberVidResponse from './model/BatchResponseSubscriberVidResponse';
import CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging from './model/CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging';
import Error from './model/Error';
import ErrorDetail from './model/ErrorDetail';
import EventDetailSettings from './model/EventDetailSettings';
import EventDetailSettingsUrl from './model/EventDetailSettingsUrl';
import MarketingEventCompleteRequestParams from './model/MarketingEventCompleteRequestParams';
import MarketingEventCreateRequestParams from './model/MarketingEventCreateRequestParams';
import MarketingEventDefaultResponse from './model/MarketingEventDefaultResponse';
import MarketingEventEmailSubscriber from './model/MarketingEventEmailSubscriber';
import MarketingEventExternalUniqueIdentifier from './model/MarketingEventExternalUniqueIdentifier';
import MarketingEventPublicDefaultResponse from './model/MarketingEventPublicDefaultResponse';
import MarketingEventPublicReadResponse from './model/MarketingEventPublicReadResponse';
import MarketingEventSubscriber from './model/MarketingEventSubscriber';
import MarketingEventUpdateRequestParams from './model/MarketingEventUpdateRequestParams';
import PropertyValue from './model/PropertyValue';
import StandardError from './model/StandardError';
import SubscriberEmailResponse from './model/SubscriberEmailResponse';
import SubscriberVidResponse from './model/SubscriberVidResponse';
import AttendanceSubscriberStateChangesApi from './api/AttendanceSubscriberStateChangesApi';
import BasicApi from './api/BasicApi';
import BatchApi from './api/BatchApi';
import MarketingEventsExternalApi from './api/MarketingEventsExternalApi';
import SearchApi from './api/SearchApi';
import SettingsApi from './api/SettingsApi';
import SubscriberStateChangesApi from './api/SubscriberStateChangesApi';


/**
* These APIs allow you to interact with HubSpot&#39;s Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MarketingEvents = require('index'); // See note below*.
* var xxxSvc = new MarketingEvents.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MarketingEvents.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MarketingEvents.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MarketingEvents.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BatchInputMarketingEventCreateRequestParams model constructor.
     * @property {module:model/BatchInputMarketingEventCreateRequestParams}
     */
    BatchInputMarketingEventCreateRequestParams,

    /**
     * The BatchInputMarketingEventEmailSubscriber model constructor.
     * @property {module:model/BatchInputMarketingEventEmailSubscriber}
     */
    BatchInputMarketingEventEmailSubscriber,

    /**
     * The BatchInputMarketingEventExternalUniqueIdentifier model constructor.
     * @property {module:model/BatchInputMarketingEventExternalUniqueIdentifier}
     */
    BatchInputMarketingEventExternalUniqueIdentifier,

    /**
     * The BatchInputMarketingEventSubscriber model constructor.
     * @property {module:model/BatchInputMarketingEventSubscriber}
     */
    BatchInputMarketingEventSubscriber,

    /**
     * The BatchResponseMarketingEventPublicDefaultResponse model constructor.
     * @property {module:model/BatchResponseMarketingEventPublicDefaultResponse}
     */
    BatchResponseMarketingEventPublicDefaultResponse,

    /**
     * The BatchResponseSubscriberEmailResponse model constructor.
     * @property {module:model/BatchResponseSubscriberEmailResponse}
     */
    BatchResponseSubscriberEmailResponse,

    /**
     * The BatchResponseSubscriberVidResponse model constructor.
     * @property {module:model/BatchResponseSubscriberVidResponse}
     */
    BatchResponseSubscriberVidResponse,

    /**
     * The CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging model constructor.
     * @property {module:model/CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging}
     */
    CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The EventDetailSettings model constructor.
     * @property {module:model/EventDetailSettings}
     */
    EventDetailSettings,

    /**
     * The EventDetailSettingsUrl model constructor.
     * @property {module:model/EventDetailSettingsUrl}
     */
    EventDetailSettingsUrl,

    /**
     * The MarketingEventCompleteRequestParams model constructor.
     * @property {module:model/MarketingEventCompleteRequestParams}
     */
    MarketingEventCompleteRequestParams,

    /**
     * The MarketingEventCreateRequestParams model constructor.
     * @property {module:model/MarketingEventCreateRequestParams}
     */
    MarketingEventCreateRequestParams,

    /**
     * The MarketingEventDefaultResponse model constructor.
     * @property {module:model/MarketingEventDefaultResponse}
     */
    MarketingEventDefaultResponse,

    /**
     * The MarketingEventEmailSubscriber model constructor.
     * @property {module:model/MarketingEventEmailSubscriber}
     */
    MarketingEventEmailSubscriber,

    /**
     * The MarketingEventExternalUniqueIdentifier model constructor.
     * @property {module:model/MarketingEventExternalUniqueIdentifier}
     */
    MarketingEventExternalUniqueIdentifier,

    /**
     * The MarketingEventPublicDefaultResponse model constructor.
     * @property {module:model/MarketingEventPublicDefaultResponse}
     */
    MarketingEventPublicDefaultResponse,

    /**
     * The MarketingEventPublicReadResponse model constructor.
     * @property {module:model/MarketingEventPublicReadResponse}
     */
    MarketingEventPublicReadResponse,

    /**
     * The MarketingEventSubscriber model constructor.
     * @property {module:model/MarketingEventSubscriber}
     */
    MarketingEventSubscriber,

    /**
     * The MarketingEventUpdateRequestParams model constructor.
     * @property {module:model/MarketingEventUpdateRequestParams}
     */
    MarketingEventUpdateRequestParams,

    /**
     * The PropertyValue model constructor.
     * @property {module:model/PropertyValue}
     */
    PropertyValue,

    /**
     * The StandardError model constructor.
     * @property {module:model/StandardError}
     */
    StandardError,

    /**
     * The SubscriberEmailResponse model constructor.
     * @property {module:model/SubscriberEmailResponse}
     */
    SubscriberEmailResponse,

    /**
     * The SubscriberVidResponse model constructor.
     * @property {module:model/SubscriberVidResponse}
     */
    SubscriberVidResponse,

    /**
    * The AttendanceSubscriberStateChangesApi service constructor.
    * @property {module:api/AttendanceSubscriberStateChangesApi}
    */
    AttendanceSubscriberStateChangesApi,

    /**
    * The BasicApi service constructor.
    * @property {module:api/BasicApi}
    */
    BasicApi,

    /**
    * The BatchApi service constructor.
    * @property {module:api/BatchApi}
    */
    BatchApi,

    /**
    * The MarketingEventsExternalApi service constructor.
    * @property {module:api/MarketingEventsExternalApi}
    */
    MarketingEventsExternalApi,

    /**
    * The SearchApi service constructor.
    * @property {module:api/SearchApi}
    */
    SearchApi,

    /**
    * The SettingsApi service constructor.
    * @property {module:api/SettingsApi}
    */
    SettingsApi,

    /**
    * The SubscriberStateChangesApi service constructor.
    * @property {module:api/SubscriberStateChangesApi}
    */
    SubscriberStateChangesApi
};
