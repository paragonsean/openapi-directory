/**
 * Marketing Events
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PropertyValue model module.
 * @module model/PropertyValue
 * @version v3
 */
class PropertyValue {
    /**
     * Constructs a new <code>PropertyValue</code>.
     * @alias module:model/PropertyValue
     * @param name {String} 
     * @param requestId {String} 
     * @param selectedByUser {Boolean} 
     * @param selectedByUserTimestamp {Number} 
     * @param source {module:model/PropertyValue.SourceEnum} 
     * @param sourceId {String} 
     * @param sourceLabel {String} 
     * @param sourceMetadata {String} Source metadata encoded as a base64 string. For example: `ZXhhbXBsZSBzdHJpbmc=`
     * @param sourceVid {Array.<Number>} 
     * @param timestamp {Number} 
     * @param value {String} 
     */
    constructor(name, requestId, selectedByUser, selectedByUserTimestamp, source, sourceId, sourceLabel, sourceMetadata, sourceVid, timestamp, value) { 
        
        PropertyValue.initialize(this, name, requestId, selectedByUser, selectedByUserTimestamp, source, sourceId, sourceLabel, sourceMetadata, sourceVid, timestamp, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, requestId, selectedByUser, selectedByUserTimestamp, source, sourceId, sourceLabel, sourceMetadata, sourceVid, timestamp, value) { 
        obj['name'] = name;
        obj['requestId'] = requestId;
        obj['selectedByUser'] = selectedByUser;
        obj['selectedByUserTimestamp'] = selectedByUserTimestamp;
        obj['source'] = source;
        obj['sourceId'] = sourceId;
        obj['sourceLabel'] = sourceLabel;
        obj['sourceMetadata'] = sourceMetadata;
        obj['sourceVid'] = sourceVid;
        obj['timestamp'] = timestamp;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>PropertyValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PropertyValue} obj Optional instance to populate.
     * @return {module:model/PropertyValue} The populated <code>PropertyValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertyValue();

            if (data.hasOwnProperty('isLargeValue')) {
                obj['isLargeValue'] = ApiClient.convertToType(data['isLargeValue'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('persistenceTimestamp')) {
                obj['persistenceTimestamp'] = ApiClient.convertToType(data['persistenceTimestamp'], 'Number');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('selectedByUser')) {
                obj['selectedByUser'] = ApiClient.convertToType(data['selectedByUser'], 'Boolean');
            }
            if (data.hasOwnProperty('selectedByUserTimestamp')) {
                obj['selectedByUserTimestamp'] = ApiClient.convertToType(data['selectedByUserTimestamp'], 'Number');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('sourceId')) {
                obj['sourceId'] = ApiClient.convertToType(data['sourceId'], 'String');
            }
            if (data.hasOwnProperty('sourceLabel')) {
                obj['sourceLabel'] = ApiClient.convertToType(data['sourceLabel'], 'String');
            }
            if (data.hasOwnProperty('sourceMetadata')) {
                obj['sourceMetadata'] = ApiClient.convertToType(data['sourceMetadata'], 'String');
            }
            if (data.hasOwnProperty('sourceVid')) {
                obj['sourceVid'] = ApiClient.convertToType(data['sourceVid'], ['Number']);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('updatedByUserId')) {
                obj['updatedByUserId'] = ApiClient.convertToType(data['updatedByUserId'], 'Number');
            }
            if (data.hasOwnProperty('useTimestampAsPersistenceTimestamp')) {
                obj['useTimestampAsPersistenceTimestamp'] = ApiClient.convertToType(data['useTimestampAsPersistenceTimestamp'], 'Boolean');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PropertyValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PropertyValue</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PropertyValue.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['sourceId'] && !(typeof data['sourceId'] === 'string' || data['sourceId'] instanceof String)) {
            throw new Error("Expected the field `sourceId` to be a primitive type in the JSON string but got " + data['sourceId']);
        }
        // ensure the json data is a string
        if (data['sourceLabel'] && !(typeof data['sourceLabel'] === 'string' || data['sourceLabel'] instanceof String)) {
            throw new Error("Expected the field `sourceLabel` to be a primitive type in the JSON string but got " + data['sourceLabel']);
        }
        // ensure the json data is a string
        if (data['sourceMetadata'] && !(typeof data['sourceMetadata'] === 'string' || data['sourceMetadata'] instanceof String)) {
            throw new Error("Expected the field `sourceMetadata` to be a primitive type in the JSON string but got " + data['sourceMetadata']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sourceVid'])) {
            throw new Error("Expected the field `sourceVid` to be an array in the JSON data but got " + data['sourceVid']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

PropertyValue.RequiredProperties = ["name", "requestId", "selectedByUser", "selectedByUserTimestamp", "source", "sourceId", "sourceLabel", "sourceMetadata", "sourceVid", "timestamp", "value"];

/**
 * @member {Boolean} isLargeValue
 */
PropertyValue.prototype['isLargeValue'] = undefined;

/**
 * 
 * @member {String} name
 */
PropertyValue.prototype['name'] = undefined;

/**
 * @member {Number} persistenceTimestamp
 */
PropertyValue.prototype['persistenceTimestamp'] = undefined;

/**
 * 
 * @member {String} requestId
 */
PropertyValue.prototype['requestId'] = undefined;

/**
 * 
 * @member {Boolean} selectedByUser
 */
PropertyValue.prototype['selectedByUser'] = undefined;

/**
 * 
 * @member {Number} selectedByUserTimestamp
 */
PropertyValue.prototype['selectedByUserTimestamp'] = undefined;

/**
 * 
 * @member {module:model/PropertyValue.SourceEnum} source
 */
PropertyValue.prototype['source'] = undefined;

/**
 * 
 * @member {String} sourceId
 */
PropertyValue.prototype['sourceId'] = undefined;

/**
 * 
 * @member {String} sourceLabel
 */
PropertyValue.prototype['sourceLabel'] = undefined;

/**
 * Source metadata encoded as a base64 string. For example: `ZXhhbXBsZSBzdHJpbmc=`
 * @member {String} sourceMetadata
 */
PropertyValue.prototype['sourceMetadata'] = undefined;

/**
 * 
 * @member {Array.<Number>} sourceVid
 */
PropertyValue.prototype['sourceVid'] = undefined;

/**
 * 
 * @member {Number} timestamp
 */
PropertyValue.prototype['timestamp'] = undefined;

/**
 * @member {Number} updatedByUserId
 */
PropertyValue.prototype['updatedByUserId'] = undefined;

/**
 * @member {Boolean} useTimestampAsPersistenceTimestamp
 */
PropertyValue.prototype['useTimestampAsPersistenceTimestamp'] = undefined;

/**
 * 
 * @member {String} value
 */
PropertyValue.prototype['value'] = undefined;





/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
PropertyValue['SourceEnum'] = {

    /**
     * value: "IMPORT"
     * @const
     */
    "IMPORT": "IMPORT",

    /**
     * value: "API"
     * @const
     */
    "API": "API",

    /**
     * value: "FORM"
     * @const
     */
    "FORM": "FORM",

    /**
     * value: "ANALYTICS"
     * @const
     */
    "ANALYTICS": "ANALYTICS",

    /**
     * value: "MIGRATION"
     * @const
     */
    "MIGRATION": "MIGRATION",

    /**
     * value: "SALESFORCE"
     * @const
     */
    "SALESFORCE": "SALESFORCE",

    /**
     * value: "INTEGRATION"
     * @const
     */
    "INTEGRATION": "INTEGRATION",

    /**
     * value: "CONTACTS_WEB"
     * @const
     */
    "CONTACTS_WEB": "CONTACTS_WEB",

    /**
     * value: "WAL_INCREMENTAL"
     * @const
     */
    "WAL_INCREMENTAL": "WAL_INCREMENTAL",

    /**
     * value: "TASK"
     * @const
     */
    "TASK": "TASK",

    /**
     * value: "EMAIL"
     * @const
     */
    "EMAIL": "EMAIL",

    /**
     * value: "WORKFLOWS"
     * @const
     */
    "WORKFLOWS": "WORKFLOWS",

    /**
     * value: "CALCULATED"
     * @const
     */
    "CALCULATED": "CALCULATED",

    /**
     * value: "SOCIAL"
     * @const
     */
    "SOCIAL": "SOCIAL",

    /**
     * value: "BATCH_UPDATE"
     * @const
     */
    "BATCH_UPDATE": "BATCH_UPDATE",

    /**
     * value: "SIGNALS"
     * @const
     */
    "SIGNALS": "SIGNALS",

    /**
     * value: "BIDEN"
     * @const
     */
    "BIDEN": "BIDEN",

    /**
     * value: "DEFAULT"
     * @const
     */
    "DEFAULT": "DEFAULT",

    /**
     * value: "COMPANIES"
     * @const
     */
    "COMPANIES": "COMPANIES",

    /**
     * value: "DEALS"
     * @const
     */
    "DEALS": "DEALS",

    /**
     * value: "ASSISTS"
     * @const
     */
    "ASSISTS": "ASSISTS",

    /**
     * value: "PRESENTATIONS"
     * @const
     */
    "PRESENTATIONS": "PRESENTATIONS",

    /**
     * value: "TALLY"
     * @const
     */
    "TALLY": "TALLY",

    /**
     * value: "SIDEKICK"
     * @const
     */
    "SIDEKICK": "SIDEKICK",

    /**
     * value: "CRM_UI"
     * @const
     */
    "CRM_UI": "CRM_UI",

    /**
     * value: "MERGE_CONTACTS"
     * @const
     */
    "MERGE_CONTACTS": "MERGE_CONTACTS",

    /**
     * value: "PORTAL_USER_ASSOCIATOR"
     * @const
     */
    "PORTAL_USER_ASSOCIATOR": "PORTAL_USER_ASSOCIATOR",

    /**
     * value: "INTEGRATIONS_PLATFORM"
     * @const
     */
    "INTEGRATIONS_PLATFORM": "INTEGRATIONS_PLATFORM",

    /**
     * value: "BCC_TO_CRM"
     * @const
     */
    "BCC_TO_CRM": "BCC_TO_CRM",

    /**
     * value: "FORWARD_TO_CRM"
     * @const
     */
    "FORWARD_TO_CRM": "FORWARD_TO_CRM",

    /**
     * value: "ENGAGEMENTS"
     * @const
     */
    "ENGAGEMENTS": "ENGAGEMENTS",

    /**
     * value: "SALES"
     * @const
     */
    "SALES": "SALES",

    /**
     * value: "HEISENBERG"
     * @const
     */
    "HEISENBERG": "HEISENBERG",

    /**
     * value: "LEADIN"
     * @const
     */
    "LEADIN": "LEADIN",

    /**
     * value: "GMAIL_INTEGRATION"
     * @const
     */
    "GMAIL_INTEGRATION": "GMAIL_INTEGRATION",

    /**
     * value: "ACADEMY"
     * @const
     */
    "ACADEMY": "ACADEMY",

    /**
     * value: "SALES_MESSAGES"
     * @const
     */
    "SALES_MESSAGES": "SALES_MESSAGES",

    /**
     * value: "AVATARS_SERVICE"
     * @const
     */
    "AVATARS_SERVICE": "AVATARS_SERVICE",

    /**
     * value: "MERGE_COMPANIES"
     * @const
     */
    "MERGE_COMPANIES": "MERGE_COMPANIES",

    /**
     * value: "SEQUENCES"
     * @const
     */
    "SEQUENCES": "SEQUENCES",

    /**
     * value: "COMPANY_FAMILIES"
     * @const
     */
    "COMPANY_FAMILIES": "COMPANY_FAMILIES",

    /**
     * value: "MOBILE_IOS"
     * @const
     */
    "MOBILE_IOS": "MOBILE_IOS",

    /**
     * value: "MOBILE_ANDROID"
     * @const
     */
    "MOBILE_ANDROID": "MOBILE_ANDROID",

    /**
     * value: "CONTACTS"
     * @const
     */
    "CONTACTS": "CONTACTS",

    /**
     * value: "ASSOCIATIONS"
     * @const
     */
    "ASSOCIATIONS": "ASSOCIATIONS",

    /**
     * value: "EXTENSION"
     * @const
     */
    "EXTENSION": "EXTENSION",

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS",

    /**
     * value: "BOT"
     * @const
     */
    "BOT": "BOT",

    /**
     * value: "INTEGRATIONS_SYNC"
     * @const
     */
    "INTEGRATIONS_SYNC": "INTEGRATIONS_SYNC",

    /**
     * value: "AUTOMATION_PLATFORM"
     * @const
     */
    "AUTOMATION_PLATFORM": "AUTOMATION_PLATFORM",

    /**
     * value: "CONVERSATIONS"
     * @const
     */
    "CONVERSATIONS": "CONVERSATIONS",

    /**
     * value: "EMAIL_INTEGRATION"
     * @const
     */
    "EMAIL_INTEGRATION": "EMAIL_INTEGRATION",

    /**
     * value: "CONTENT_MEMBERSHIP"
     * @const
     */
    "CONTENT_MEMBERSHIP": "CONTENT_MEMBERSHIP",

    /**
     * value: "QUOTES"
     * @const
     */
    "QUOTES": "QUOTES",

    /**
     * value: "BET_ASSIGNMENT"
     * @const
     */
    "BET_ASSIGNMENT": "BET_ASSIGNMENT",

    /**
     * value: "QUOTAS"
     * @const
     */
    "QUOTAS": "QUOTAS",

    /**
     * value: "BET_CRM_CONNECTOR"
     * @const
     */
    "BET_CRM_CONNECTOR": "BET_CRM_CONNECTOR",

    /**
     * value: "MEETINGS"
     * @const
     */
    "MEETINGS": "MEETINGS",

    /**
     * value: "MERGE_OBJECTS"
     * @const
     */
    "MERGE_OBJECTS": "MERGE_OBJECTS",

    /**
     * value: "RECYCLING_BIN"
     * @const
     */
    "RECYCLING_BIN": "RECYCLING_BIN",

    /**
     * value: "ADS"
     * @const
     */
    "ADS": "ADS",

    /**
     * value: "AI_GROUP"
     * @const
     */
    "AI_GROUP": "AI_GROUP",

    /**
     * value: "COMMUNICATOR"
     * @const
     */
    "COMMUNICATOR": "COMMUNICATOR",

    /**
     * value: "SETTINGS"
     * @const
     */
    "SETTINGS": "SETTINGS",

    /**
     * value: "PROPERTY_SETTINGS"
     * @const
     */
    "PROPERTY_SETTINGS": "PROPERTY_SETTINGS",

    /**
     * value: "PIPELINE_SETTINGS"
     * @const
     */
    "PIPELINE_SETTINGS": "PIPELINE_SETTINGS",

    /**
     * value: "COMPANY_INSIGHTS"
     * @const
     */
    "COMPANY_INSIGHTS": "COMPANY_INSIGHTS",

    /**
     * value: "BEHAVIORAL_EVENTS"
     * @const
     */
    "BEHAVIORAL_EVENTS": "BEHAVIORAL_EVENTS",

    /**
     * value: "PAYMENTS"
     * @const
     */
    "PAYMENTS": "PAYMENTS",

    /**
     * value: "GOALS"
     * @const
     */
    "GOALS": "GOALS",

    /**
     * value: "PORTAL_OBJECT_SYNC"
     * @const
     */
    "PORTAL_OBJECT_SYNC": "PORTAL_OBJECT_SYNC",

    /**
     * value: "APPROVALS"
     * @const
     */
    "APPROVALS": "APPROVALS",

    /**
     * value: "FILE_MANAGER"
     * @const
     */
    "FILE_MANAGER": "FILE_MANAGER",

    /**
     * value: "MARKETPLACE"
     * @const
     */
    "MARKETPLACE": "MARKETPLACE",

    /**
     * value: "INTERNAL_PROCESSING"
     * @const
     */
    "INTERNAL_PROCESSING": "INTERNAL_PROCESSING",

    /**
     * value: "FORECASTING"
     * @const
     */
    "FORECASTING": "FORECASTING",

    /**
     * value: "SLACK_INTEGRATION"
     * @const
     */
    "SLACK_INTEGRATION": "SLACK_INTEGRATION",

    /**
     * value: "CRM_UI_BULK_ACTION"
     * @const
     */
    "CRM_UI_BULK_ACTION": "CRM_UI_BULK_ACTION",

    /**
     * value: "WORKFLOW_CONTACT_DELETE_ACTION"
     * @const
     */
    "WORKFLOW_CONTACT_DELETE_ACTION": "WORKFLOW_CONTACT_DELETE_ACTION"
};



export default PropertyValue;

