/**
 * Marketing Events
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMarketingEventPublicReadResponse.h
 *
 * 
 */

#ifndef OAIMarketingEventPublicReadResponse_H
#define OAIMarketingEventPublicReadResponse_H

#include <QJsonObject>

#include "OAIPropertyValue.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPropertyValue;

class OAIMarketingEventPublicReadResponse : public OAIObject {
public:
    OAIMarketingEventPublicReadResponse();
    OAIMarketingEventPublicReadResponse(QString json);
    ~OAIMarketingEventPublicReadResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAttendees() const;
    void setAttendees(const qint32 &attendees);
    bool is_attendees_Set() const;
    bool is_attendees_Valid() const;

    qint32 getCancellations() const;
    void setCancellations(const qint32 &cancellations);
    bool is_cancellations_Set() const;
    bool is_cancellations_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<OAIPropertyValue> getCustomProperties() const;
    void setCustomProperties(const QList<OAIPropertyValue> &custom_properties);
    bool is_custom_properties_Set() const;
    bool is_custom_properties_Valid() const;

    QDateTime getEndDateTime() const;
    void setEndDateTime(const QDateTime &end_date_time);
    bool is_end_date_time_Set() const;
    bool is_end_date_time_Valid() const;

    bool isEventCancelled() const;
    void setEventCancelled(const bool &event_cancelled);
    bool is_event_cancelled_Set() const;
    bool is_event_cancelled_Valid() const;

    QString getEventDescription() const;
    void setEventDescription(const QString &event_description);
    bool is_event_description_Set() const;
    bool is_event_description_Valid() const;

    QString getEventName() const;
    void setEventName(const QString &event_name);
    bool is_event_name_Set() const;
    bool is_event_name_Valid() const;

    QString getEventOrganizer() const;
    void setEventOrganizer(const QString &event_organizer);
    bool is_event_organizer_Set() const;
    bool is_event_organizer_Valid() const;

    QString getEventType() const;
    void setEventType(const QString &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QString getEventUrl() const;
    void setEventUrl(const QString &event_url);
    bool is_event_url_Set() const;
    bool is_event_url_Valid() const;

    QString getExternalEventId() const;
    void setExternalEventId(const QString &external_event_id);
    bool is_external_event_id_Set() const;
    bool is_external_event_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getNoShows() const;
    void setNoShows(const qint32 &no_shows);
    bool is_no_shows_Set() const;
    bool is_no_shows_Valid() const;

    qint32 getRegistrants() const;
    void setRegistrants(const qint32 &registrants);
    bool is_registrants_Set() const;
    bool is_registrants_Valid() const;

    QDateTime getStartDateTime() const;
    void setStartDateTime(const QDateTime &start_date_time);
    bool is_start_date_time_Set() const;
    bool is_start_date_time_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_attendees;
    bool m_attendees_isSet;
    bool m_attendees_isValid;

    qint32 m_cancellations;
    bool m_cancellations_isSet;
    bool m_cancellations_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<OAIPropertyValue> m_custom_properties;
    bool m_custom_properties_isSet;
    bool m_custom_properties_isValid;

    QDateTime m_end_date_time;
    bool m_end_date_time_isSet;
    bool m_end_date_time_isValid;

    bool m_event_cancelled;
    bool m_event_cancelled_isSet;
    bool m_event_cancelled_isValid;

    QString m_event_description;
    bool m_event_description_isSet;
    bool m_event_description_isValid;

    QString m_event_name;
    bool m_event_name_isSet;
    bool m_event_name_isValid;

    QString m_event_organizer;
    bool m_event_organizer_isSet;
    bool m_event_organizer_isValid;

    QString m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QString m_event_url;
    bool m_event_url_isSet;
    bool m_event_url_isValid;

    QString m_external_event_id;
    bool m_external_event_id_isSet;
    bool m_external_event_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_no_shows;
    bool m_no_shows_isSet;
    bool m_no_shows_isValid;

    qint32 m_registrants;
    bool m_registrants_isSet;
    bool m_registrants_isValid;

    QDateTime m_start_date_time;
    bool m_start_date_time_isSet;
    bool m_start_date_time_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMarketingEventPublicReadResponse)

#endif // OAIMarketingEventPublicReadResponse_H
