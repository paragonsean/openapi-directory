/**
 * Marketing Events
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventDetailSettingsUrl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventDetailSettingsUrl::OAIEventDetailSettingsUrl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventDetailSettingsUrl::OAIEventDetailSettingsUrl() {
    this->initializeModel();
}

OAIEventDetailSettingsUrl::~OAIEventDetailSettingsUrl() {}

void OAIEventDetailSettingsUrl::initializeModel() {

    m_event_details_url_isSet = false;
    m_event_details_url_isValid = false;
}

void OAIEventDetailSettingsUrl::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEventDetailSettingsUrl::fromJsonObject(QJsonObject json) {

    m_event_details_url_isValid = ::OpenAPI::fromJsonValue(m_event_details_url, json[QString("eventDetailsUrl")]);
    m_event_details_url_isSet = !json[QString("eventDetailsUrl")].isNull() && m_event_details_url_isValid;
}

QString OAIEventDetailSettingsUrl::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEventDetailSettingsUrl::asJsonObject() const {
    QJsonObject obj;
    if (m_event_details_url_isSet) {
        obj.insert(QString("eventDetailsUrl"), ::OpenAPI::toJsonValue(m_event_details_url));
    }
    return obj;
}

QString OAIEventDetailSettingsUrl::getEventDetailsUrl() const {
    return m_event_details_url;
}
void OAIEventDetailSettingsUrl::setEventDetailsUrl(const QString &event_details_url) {
    m_event_details_url = event_details_url;
    m_event_details_url_isSet = true;
}

bool OAIEventDetailSettingsUrl::is_event_details_url_Set() const{
    return m_event_details_url_isSet;
}

bool OAIEventDetailSettingsUrl::is_event_details_url_Valid() const{
    return m_event_details_url_isValid;
}

bool OAIEventDetailSettingsUrl::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_details_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEventDetailSettingsUrl::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_event_details_url_isValid && true;
}

} // namespace OpenAPI
