/*
 * Marketing Events
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchInputMarketingEventEmailSubscriber;
import org.openapitools.client.model.BatchInputMarketingEventSubscriber;
import org.openapitools.client.model.BatchResponseSubscriberEmailResponse;
import org.openapitools.client.model.BatchResponseSubscriberVidResponse;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttendanceSubscriberStateChangesApi
 */
@Disabled
public class AttendanceSubscriberStateChangesApiTest {

    private final AttendanceSubscriberStateChangesApi api = new AttendanceSubscriberStateChangesApi();

    /**
     * Record
     *
     * Record a subscription state between multiple HubSpot contacts and a marketing event, using HubSpot contact ids.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postMarketingV3MarketingEventsAttendanceExternalEventIdSubscriberStateCreateCreateTest() throws ApiException {
        String externalEventId = null;
        String subscriberState = null;
        BatchInputMarketingEventSubscriber batchInputMarketingEventSubscriber = null;
        String externalAccountId = null;
        BatchResponseSubscriberVidResponse response = api.postMarketingV3MarketingEventsAttendanceExternalEventIdSubscriberStateCreateCreate(externalEventId, subscriberState, batchInputMarketingEventSubscriber, externalAccountId);
        // TODO: test validations
    }

    /**
     * Record
     *
     * Record a subscription state between multiple HubSpot contacts and a marketing event, using contact email addresses. If contact is not present it will be automatically created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postMarketingV3MarketingEventsAttendanceExternalEventIdSubscriberStateEmailCreateCreateByEmailTest() throws ApiException {
        String externalEventId = null;
        String subscriberState = null;
        BatchInputMarketingEventEmailSubscriber batchInputMarketingEventEmailSubscriber = null;
        String externalAccountId = null;
        BatchResponseSubscriberEmailResponse response = api.postMarketingV3MarketingEventsAttendanceExternalEventIdSubscriberStateEmailCreateCreateByEmail(externalEventId, subscriberState, batchInputMarketingEventEmailSubscriber, externalAccountId);
        // TODO: test validations
    }

}
