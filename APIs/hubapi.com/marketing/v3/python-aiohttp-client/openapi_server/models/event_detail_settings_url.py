# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventDetailSettingsUrl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_details_url: str=None):
        """EventDetailSettingsUrl - a model defined in OpenAPI

        :param event_details_url: The event_details_url of this EventDetailSettingsUrl.
        """
        self.openapi_types = {
            'event_details_url': str
        }

        self.attribute_map = {
            'event_details_url': 'eventDetailsUrl'
        }

        self._event_details_url = event_details_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventDetailSettingsUrl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventDetailSettingsUrl of this EventDetailSettingsUrl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_details_url(self):
        """Gets the event_details_url of this EventDetailSettingsUrl.

        The url that will be used to fetch marketing event details by id. Must contain a `%s` character sequence that will be substituted with the event id. For example: `https://my.event.app/events/%s`

        :return: The event_details_url of this EventDetailSettingsUrl.
        :rtype: str
        """
        return self._event_details_url

    @event_details_url.setter
    def event_details_url(self, event_details_url):
        """Sets the event_details_url of this EventDetailSettingsUrl.

        The url that will be used to fetch marketing event details by id. Must contain a `%s` character sequence that will be substituted with the event id. For example: `https://my.event.app/events/%s`

        :param event_details_url: The event_details_url of this EventDetailSettingsUrl.
        :type event_details_url: str
        """
        if event_details_url is None:
            raise ValueError("Invalid value for `event_details_url`, must not be `None`")

        self._event_details_url = event_details_url
