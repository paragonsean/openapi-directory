# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MarketingEventExternalUniqueIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: int=None, external_account_id: str=None, external_event_id: str=None):
        """MarketingEventExternalUniqueIdentifier - a model defined in OpenAPI

        :param app_id: The app_id of this MarketingEventExternalUniqueIdentifier.
        :param external_account_id: The external_account_id of this MarketingEventExternalUniqueIdentifier.
        :param external_event_id: The external_event_id of this MarketingEventExternalUniqueIdentifier.
        """
        self.openapi_types = {
            'app_id': int,
            'external_account_id': str,
            'external_event_id': str
        }

        self.attribute_map = {
            'app_id': 'appId',
            'external_account_id': 'externalAccountId',
            'external_event_id': 'externalEventId'
        }

        self._app_id = app_id
        self._external_account_id = external_account_id
        self._external_event_id = external_event_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketingEventExternalUniqueIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MarketingEventExternalUniqueIdentifier of this MarketingEventExternalUniqueIdentifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this MarketingEventExternalUniqueIdentifier.

        The id of the application that created the marketing event in HubSpot.

        :return: The app_id of this MarketingEventExternalUniqueIdentifier.
        :rtype: int
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this MarketingEventExternalUniqueIdentifier.

        The id of the application that created the marketing event in HubSpot.

        :param app_id: The app_id of this MarketingEventExternalUniqueIdentifier.
        :type app_id: int
        """
        if app_id is None:
            raise ValueError("Invalid value for `app_id`, must not be `None`")

        self._app_id = app_id

    @property
    def external_account_id(self):
        """Gets the external_account_id of this MarketingEventExternalUniqueIdentifier.

        The accountId that is associated with this marketing event in the external event application.

        :return: The external_account_id of this MarketingEventExternalUniqueIdentifier.
        :rtype: str
        """
        return self._external_account_id

    @external_account_id.setter
    def external_account_id(self, external_account_id):
        """Sets the external_account_id of this MarketingEventExternalUniqueIdentifier.

        The accountId that is associated with this marketing event in the external event application.

        :param external_account_id: The external_account_id of this MarketingEventExternalUniqueIdentifier.
        :type external_account_id: str
        """
        if external_account_id is None:
            raise ValueError("Invalid value for `external_account_id`, must not be `None`")

        self._external_account_id = external_account_id

    @property
    def external_event_id(self):
        """Gets the external_event_id of this MarketingEventExternalUniqueIdentifier.

        The id of the marketing event in the external event application.

        :return: The external_event_id of this MarketingEventExternalUniqueIdentifier.
        :rtype: str
        """
        return self._external_event_id

    @external_event_id.setter
    def external_event_id(self, external_event_id):
        """Sets the external_event_id of this MarketingEventExternalUniqueIdentifier.

        The id of the marketing event in the external event application.

        :param external_event_id: The external_event_id of this MarketingEventExternalUniqueIdentifier.
        :type external_event_id: str
        """
        if external_event_id is None:
            raise ValueError("Invalid value for `external_event_id`, must not be `None`")

        self._external_event_id = external_event_id
