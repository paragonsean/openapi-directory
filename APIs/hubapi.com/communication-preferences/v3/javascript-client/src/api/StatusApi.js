/**
 * Subscriptions
 * Subscriptions allow contacts to control what forms of communications they receive. Contacts can decide whether they want to receive communication pertaining to a specific topic, brand, or an entire HubSpot account.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import PublicSubscriptionStatus from '../model/PublicSubscriptionStatus';
import PublicSubscriptionStatusesResponse from '../model/PublicSubscriptionStatusesResponse';
import PublicUpdateSubscriptionStatusRequest from '../model/PublicUpdateSubscriptionStatusRequest';

/**
* Status service.
* @module api/StatusApi
* @version v3
*/
export default class StatusApi {

    /**
    * Constructs a new StatusApi. 
    * @alias module:api/StatusApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCommunicationPreferencesV3StatusEmailEmailAddressGetEmailStatus operation.
     * @callback module:api/StatusApi~getCommunicationPreferencesV3StatusEmailEmailAddressGetEmailStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublicSubscriptionStatusesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get subscription statuses for a contact
     * Returns a list of subscriptions and their status for a given contact.
     * @param {String} emailAddress 
     * @param {module:api/StatusApi~getCommunicationPreferencesV3StatusEmailEmailAddressGetEmailStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublicSubscriptionStatusesResponse}
     */
    getCommunicationPreferencesV3StatusEmailEmailAddressGetEmailStatus(emailAddress, callback) {
      let postBody = null;
      // verify the required parameter 'emailAddress' is set
      if (emailAddress === undefined || emailAddress === null) {
        throw new Error("Missing the required parameter 'emailAddress' when calling getCommunicationPreferencesV3StatusEmailEmailAddressGetEmailStatus");
      }

      let pathParams = {
        'emailAddress': emailAddress
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_legacy', 'private_apps_legacy'];
      let contentTypes = [];
      let accepts = ['application/json', '*/*'];
      let returnType = PublicSubscriptionStatusesResponse;
      return this.apiClient.callApi(
        '/communication-preferences/v3/status/email/{emailAddress}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCommunicationPreferencesV3SubscribeSubscribe operation.
     * @callback module:api/StatusApi~postCommunicationPreferencesV3SubscribeSubscribeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublicSubscriptionStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Subscribe a contact
     * Subscribes a contact to the given subscription type. This API is not valid to use for subscribing a contact at a brand or portal level and will return an error.
     * @param {module:model/PublicUpdateSubscriptionStatusRequest} publicUpdateSubscriptionStatusRequest 
     * @param {module:api/StatusApi~postCommunicationPreferencesV3SubscribeSubscribeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublicSubscriptionStatus}
     */
    postCommunicationPreferencesV3SubscribeSubscribe(publicUpdateSubscriptionStatusRequest, callback) {
      let postBody = publicUpdateSubscriptionStatusRequest;
      // verify the required parameter 'publicUpdateSubscriptionStatusRequest' is set
      if (publicUpdateSubscriptionStatusRequest === undefined || publicUpdateSubscriptionStatusRequest === null) {
        throw new Error("Missing the required parameter 'publicUpdateSubscriptionStatusRequest' when calling postCommunicationPreferencesV3SubscribeSubscribe");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_legacy', 'private_apps_legacy'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', '*/*'];
      let returnType = PublicSubscriptionStatus;
      return this.apiClient.callApi(
        '/communication-preferences/v3/subscribe', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCommunicationPreferencesV3UnsubscribeUnsubscribe operation.
     * @callback module:api/StatusApi~postCommunicationPreferencesV3UnsubscribeUnsubscribeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublicSubscriptionStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Unsubscribe a contact
     * Unsubscribes a contact from the given subscription type. This API is not valid to use for unsubscribing a contact at a brand or portal level and will return an error.
     * @param {module:model/PublicUpdateSubscriptionStatusRequest} publicUpdateSubscriptionStatusRequest 
     * @param {module:api/StatusApi~postCommunicationPreferencesV3UnsubscribeUnsubscribeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublicSubscriptionStatus}
     */
    postCommunicationPreferencesV3UnsubscribeUnsubscribe(publicUpdateSubscriptionStatusRequest, callback) {
      let postBody = publicUpdateSubscriptionStatusRequest;
      // verify the required parameter 'publicUpdateSubscriptionStatusRequest' is set
      if (publicUpdateSubscriptionStatusRequest === undefined || publicUpdateSubscriptionStatusRequest === null) {
        throw new Error("Missing the required parameter 'publicUpdateSubscriptionStatusRequest' when calling postCommunicationPreferencesV3UnsubscribeUnsubscribe");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_legacy', 'private_apps_legacy'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', '*/*'];
      let returnType = PublicSubscriptionStatus;
      return this.apiClient.callApi(
        '/communication-preferences/v3/unsubscribe', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
