/**
 * Subscriptions
 * Subscriptions allow contacts to control what forms of communications they receive. Contacts can decide whether they want to receive communication pertaining to a specific topic, brand, or an entire HubSpot account.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicSubscriptionStatusesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicSubscriptionStatusesResponse::OAIPublicSubscriptionStatusesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicSubscriptionStatusesResponse::OAIPublicSubscriptionStatusesResponse() {
    this->initializeModel();
}

OAIPublicSubscriptionStatusesResponse::~OAIPublicSubscriptionStatusesResponse() {}

void OAIPublicSubscriptionStatusesResponse::initializeModel() {

    m_recipient_isSet = false;
    m_recipient_isValid = false;

    m_subscription_statuses_isSet = false;
    m_subscription_statuses_isValid = false;
}

void OAIPublicSubscriptionStatusesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicSubscriptionStatusesResponse::fromJsonObject(QJsonObject json) {

    m_recipient_isValid = ::OpenAPI::fromJsonValue(m_recipient, json[QString("recipient")]);
    m_recipient_isSet = !json[QString("recipient")].isNull() && m_recipient_isValid;

    m_subscription_statuses_isValid = ::OpenAPI::fromJsonValue(m_subscription_statuses, json[QString("subscriptionStatuses")]);
    m_subscription_statuses_isSet = !json[QString("subscriptionStatuses")].isNull() && m_subscription_statuses_isValid;
}

QString OAIPublicSubscriptionStatusesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicSubscriptionStatusesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_recipient_isSet) {
        obj.insert(QString("recipient"), ::OpenAPI::toJsonValue(m_recipient));
    }
    if (m_subscription_statuses.size() > 0) {
        obj.insert(QString("subscriptionStatuses"), ::OpenAPI::toJsonValue(m_subscription_statuses));
    }
    return obj;
}

QString OAIPublicSubscriptionStatusesResponse::getRecipient() const {
    return m_recipient;
}
void OAIPublicSubscriptionStatusesResponse::setRecipient(const QString &recipient) {
    m_recipient = recipient;
    m_recipient_isSet = true;
}

bool OAIPublicSubscriptionStatusesResponse::is_recipient_Set() const{
    return m_recipient_isSet;
}

bool OAIPublicSubscriptionStatusesResponse::is_recipient_Valid() const{
    return m_recipient_isValid;
}

QList<OAIPublicSubscriptionStatus> OAIPublicSubscriptionStatusesResponse::getSubscriptionStatuses() const {
    return m_subscription_statuses;
}
void OAIPublicSubscriptionStatusesResponse::setSubscriptionStatuses(const QList<OAIPublicSubscriptionStatus> &subscription_statuses) {
    m_subscription_statuses = subscription_statuses;
    m_subscription_statuses_isSet = true;
}

bool OAIPublicSubscriptionStatusesResponse::is_subscription_statuses_Set() const{
    return m_subscription_statuses_isSet;
}

bool OAIPublicSubscriptionStatusesResponse::is_subscription_statuses_Valid() const{
    return m_subscription_statuses_isValid;
}

bool OAIPublicSubscriptionStatusesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_statuses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicSubscriptionStatusesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_recipient_isValid && m_subscription_statuses_isValid && true;
}

} // namespace OpenAPI
