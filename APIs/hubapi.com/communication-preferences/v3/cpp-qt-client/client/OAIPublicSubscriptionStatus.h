/**
 * Subscriptions
 * Subscriptions allow contacts to control what forms of communications they receive. Contacts can decide whether they want to receive communication pertaining to a specific topic, brand, or an entire HubSpot account.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPublicSubscriptionStatus.h
 *
 * The status of a subscription for a contact.
 */

#ifndef OAIPublicSubscriptionStatus_H
#define OAIPublicSubscriptionStatus_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPublicSubscriptionStatus : public OAIObject {
public:
    OAIPublicSubscriptionStatus();
    OAIPublicSubscriptionStatus(QString json);
    ~OAIPublicSubscriptionStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBrandId() const;
    void setBrandId(const qint64 &brand_id);
    bool is_brand_id_Set() const;
    bool is_brand_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLegalBasis() const;
    void setLegalBasis(const QString &legal_basis);
    bool is_legal_basis_Set() const;
    bool is_legal_basis_Valid() const;

    QString getLegalBasisExplanation() const;
    void setLegalBasisExplanation(const QString &legal_basis_explanation);
    bool is_legal_basis_explanation_Set() const;
    bool is_legal_basis_explanation_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPreferenceGroupName() const;
    void setPreferenceGroupName(const QString &preference_group_name);
    bool is_preference_group_name_Set() const;
    bool is_preference_group_name_Valid() const;

    QString getSourceOfStatus() const;
    void setSourceOfStatus(const QString &source_of_status);
    bool is_source_of_status_Set() const;
    bool is_source_of_status_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_brand_id;
    bool m_brand_id_isSet;
    bool m_brand_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_legal_basis;
    bool m_legal_basis_isSet;
    bool m_legal_basis_isValid;

    QString m_legal_basis_explanation;
    bool m_legal_basis_explanation_isSet;
    bool m_legal_basis_explanation_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_preference_group_name;
    bool m_preference_group_name_isSet;
    bool m_preference_group_name_isValid;

    QString m_source_of_status;
    bool m_source_of_status_isSet;
    bool m_source_of_status_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPublicSubscriptionStatus)

#endif // OAIPublicSubscriptionStatus_H
