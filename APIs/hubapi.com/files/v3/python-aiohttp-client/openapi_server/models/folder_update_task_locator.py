# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FolderUpdateTaskLocator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, links: Dict[str, str]=None):
        """FolderUpdateTaskLocator - a model defined in OpenAPI

        :param id: The id of this FolderUpdateTaskLocator.
        :param links: The links of this FolderUpdateTaskLocator.
        """
        self.openapi_types = {
            'id': str,
            'links': Dict[str, str]
        }

        self.attribute_map = {
            'id': 'id',
            'links': 'links'
        }

        self._id = id
        self._links = links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FolderUpdateTaskLocator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FolderUpdateTaskLocator of this FolderUpdateTaskLocator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this FolderUpdateTaskLocator.

        ID of the task

        :return: The id of this FolderUpdateTaskLocator.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FolderUpdateTaskLocator.

        ID of the task

        :param id: The id of this FolderUpdateTaskLocator.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def links(self):
        """Gets the links of this FolderUpdateTaskLocator.

        Links for where to check information related to the task. The `status` link gives the URL for where to check the status of the task.

        :return: The links of this FolderUpdateTaskLocator.
        :rtype: Dict[str, str]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this FolderUpdateTaskLocator.

        Links for where to check information related to the task. The `status` link gives the URL for where to check the status of the task.

        :param links: The links of this FolderUpdateTaskLocator.
        :type links: Dict[str, str]
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")

        self._links = links
