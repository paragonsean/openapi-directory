/**
 * Files Files
 * Upload and manage files.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImportFromUrlTaskLocator model module.
 * @module model/ImportFromUrlTaskLocator
 * @version v3
 */
class ImportFromUrlTaskLocator {
    /**
     * Constructs a new <code>ImportFromUrlTaskLocator</code>.
     * Information on the task that has been started, and where to check it&#39;s status.
     * @alias module:model/ImportFromUrlTaskLocator
     * @param id {String} ID of the task
     * @param links {Object.<String, String>} Links for where to check information related to the task. The `status` link gives the URL for where to check the status of the task.
     */
    constructor(id, links) { 
        
        ImportFromUrlTaskLocator.initialize(this, id, links);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, links) { 
        obj['id'] = id;
        obj['links'] = links;
    }

    /**
     * Constructs a <code>ImportFromUrlTaskLocator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportFromUrlTaskLocator} obj Optional instance to populate.
     * @return {module:model/ImportFromUrlTaskLocator} The populated <code>ImportFromUrlTaskLocator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportFromUrlTaskLocator();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportFromUrlTaskLocator</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportFromUrlTaskLocator</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImportFromUrlTaskLocator.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

ImportFromUrlTaskLocator.RequiredProperties = ["id", "links"];

/**
 * ID of the task
 * @member {String} id
 */
ImportFromUrlTaskLocator.prototype['id'] = undefined;

/**
 * Links for where to check information related to the task. The `status` link gives the URL for where to check the status of the task.
 * @member {Object.<String, String>} links
 */
ImportFromUrlTaskLocator.prototype['links'] = undefined;






export default ImportFromUrlTaskLocator;

