/**
 * Files Files
 * Upload and manage files.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FilesFiles);
  }
}(this, function(expect, FilesFiles) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FilesFiles.FoldersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FoldersApi', function() {
    describe('deleteFilesV3FoldersFolderIdArchive', function() {
      it('should call deleteFilesV3FoldersFolderIdArchive successfully', function(done) {
        //uncomment below and update the code to test deleteFilesV3FoldersFolderIdArchive
        //instance.deleteFilesV3FoldersFolderIdArchive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFilesV3FoldersFolderPathArchiveByPath', function() {
      it('should call deleteFilesV3FoldersFolderPathArchiveByPath successfully', function(done) {
        //uncomment below and update the code to test deleteFilesV3FoldersFolderPathArchiveByPath
        //instance.deleteFilesV3FoldersFolderPathArchiveByPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFilesV3FoldersFolderIdGetById', function() {
      it('should call getFilesV3FoldersFolderIdGetById successfully', function(done) {
        //uncomment below and update the code to test getFilesV3FoldersFolderIdGetById
        //instance.getFilesV3FoldersFolderIdGetById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFilesV3FoldersFolderPathGetByPath', function() {
      it('should call getFilesV3FoldersFolderPathGetByPath successfully', function(done) {
        //uncomment below and update the code to test getFilesV3FoldersFolderPathGetByPath
        //instance.getFilesV3FoldersFolderPathGetByPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFilesV3FoldersSearchDoSearch', function() {
      it('should call getFilesV3FoldersSearchDoSearch successfully', function(done) {
        //uncomment below and update the code to test getFilesV3FoldersSearchDoSearch
        //instance.getFilesV3FoldersSearchDoSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFilesV3FoldersUpdateAsyncTasksTaskIdStatusCheckUpdateStatus', function() {
      it('should call getFilesV3FoldersUpdateAsyncTasksTaskIdStatusCheckUpdateStatus successfully', function(done) {
        //uncomment below and update the code to test getFilesV3FoldersUpdateAsyncTasksTaskIdStatusCheckUpdateStatus
        //instance.getFilesV3FoldersUpdateAsyncTasksTaskIdStatusCheckUpdateStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postFilesV3FoldersCreate', function() {
      it('should call postFilesV3FoldersCreate successfully', function(done) {
        //uncomment below and update the code to test postFilesV3FoldersCreate
        //instance.postFilesV3FoldersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postFilesV3FoldersUpdateAsyncUpdateProperties', function() {
      it('should call postFilesV3FoldersUpdateAsyncUpdateProperties successfully', function(done) {
        //uncomment below and update the code to test postFilesV3FoldersUpdateAsyncUpdateProperties
        //instance.postFilesV3FoldersUpdateAsyncUpdateProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
