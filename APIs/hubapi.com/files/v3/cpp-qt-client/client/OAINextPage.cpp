/**
 * Files Files
 * Upload and manage files.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINextPage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINextPage::OAINextPage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINextPage::OAINextPage() {
    this->initializeModel();
}

OAINextPage::~OAINextPage() {}

void OAINextPage::initializeModel() {

    m_after_isSet = false;
    m_after_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;
}

void OAINextPage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINextPage::fromJsonObject(QJsonObject json) {

    m_after_isValid = ::OpenAPI::fromJsonValue(m_after, json[QString("after")]);
    m_after_isSet = !json[QString("after")].isNull() && m_after_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;
}

QString OAINextPage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINextPage::asJsonObject() const {
    QJsonObject obj;
    if (m_after_isSet) {
        obj.insert(QString("after"), ::OpenAPI::toJsonValue(m_after));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    return obj;
}

QString OAINextPage::getAfter() const {
    return m_after;
}
void OAINextPage::setAfter(const QString &after) {
    m_after = after;
    m_after_isSet = true;
}

bool OAINextPage::is_after_Set() const{
    return m_after_isSet;
}

bool OAINextPage::is_after_Valid() const{
    return m_after_isValid;
}

QString OAINextPage::getLink() const {
    return m_link;
}
void OAINextPage::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAINextPage::is_link_Set() const{
    return m_link_isSet;
}

bool OAINextPage::is_link_Valid() const{
    return m_link_isValid;
}

bool OAINextPage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINextPage::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_after_isValid && true;
}

} // namespace OpenAPI
