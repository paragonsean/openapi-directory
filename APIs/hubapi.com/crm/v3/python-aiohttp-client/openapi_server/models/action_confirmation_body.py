# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActionConfirmationBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancel_button_label: str=None, confirm_button_label: str=None, prompt: str=None):
        """ActionConfirmationBody - a model defined in OpenAPI

        :param cancel_button_label: The cancel_button_label of this ActionConfirmationBody.
        :param confirm_button_label: The confirm_button_label of this ActionConfirmationBody.
        :param prompt: The prompt of this ActionConfirmationBody.
        """
        self.openapi_types = {
            'cancel_button_label': str,
            'confirm_button_label': str,
            'prompt': str
        }

        self.attribute_map = {
            'cancel_button_label': 'cancelButtonLabel',
            'confirm_button_label': 'confirmButtonLabel',
            'prompt': 'prompt'
        }

        self._cancel_button_label = cancel_button_label
        self._confirm_button_label = confirm_button_label
        self._prompt = prompt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionConfirmationBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionConfirmationBody of this ActionConfirmationBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancel_button_label(self):
        """Gets the cancel_button_label of this ActionConfirmationBody.


        :return: The cancel_button_label of this ActionConfirmationBody.
        :rtype: str
        """
        return self._cancel_button_label

    @cancel_button_label.setter
    def cancel_button_label(self, cancel_button_label):
        """Sets the cancel_button_label of this ActionConfirmationBody.


        :param cancel_button_label: The cancel_button_label of this ActionConfirmationBody.
        :type cancel_button_label: str
        """
        if cancel_button_label is None:
            raise ValueError("Invalid value for `cancel_button_label`, must not be `None`")

        self._cancel_button_label = cancel_button_label

    @property
    def confirm_button_label(self):
        """Gets the confirm_button_label of this ActionConfirmationBody.


        :return: The confirm_button_label of this ActionConfirmationBody.
        :rtype: str
        """
        return self._confirm_button_label

    @confirm_button_label.setter
    def confirm_button_label(self, confirm_button_label):
        """Sets the confirm_button_label of this ActionConfirmationBody.


        :param confirm_button_label: The confirm_button_label of this ActionConfirmationBody.
        :type confirm_button_label: str
        """
        if confirm_button_label is None:
            raise ValueError("Invalid value for `confirm_button_label`, must not be `None`")

        self._confirm_button_label = confirm_button_label

    @property
    def prompt(self):
        """Gets the prompt of this ActionConfirmationBody.


        :return: The prompt of this ActionConfirmationBody.
        :rtype: str
        """
        return self._prompt

    @prompt.setter
    def prompt(self, prompt):
        """Sets the prompt of this ActionConfirmationBody.


        :param prompt: The prompt of this ActionConfirmationBody.
        :type prompt: str
        """
        if prompt is None:
            raise ValueError("Invalid value for `prompt`, must not be `None`")

        self._prompt = prompt
