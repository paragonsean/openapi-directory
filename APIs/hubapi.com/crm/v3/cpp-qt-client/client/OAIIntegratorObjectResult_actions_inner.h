/**
 * CRM cards
 * Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntegratorObjectResult_actions_inner.h
 *
 * 
 */

#ifndef OAIIntegratorObjectResult_actions_inner_H
#define OAIIntegratorObjectResult_actions_inner_H

#include <QJsonObject>

#include "OAIActionConfirmationBody.h"
#include "OAIActionHookActionBody.h"
#include "OAIIFrameActionBody.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActionConfirmationBody;

class OAIIntegratorObjectResult_actions_inner : public OAIObject {
public:
    OAIIntegratorObjectResult_actions_inner();
    OAIIntegratorObjectResult_actions_inner(QString json);
    ~OAIIntegratorObjectResult_actions_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIActionConfirmationBody getConfirmation() const;
    void setConfirmation(const OAIActionConfirmationBody &confirmation);
    bool is_confirmation_Set() const;
    bool is_confirmation_Valid() const;

    QString getHttpMethod() const;
    void setHttpMethod(const QString &http_method);
    bool is_http_method_Set() const;
    bool is_http_method_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QList<QString> getPropertyNamesIncluded() const;
    void setPropertyNamesIncluded(const QList<QString> &property_names_included);
    bool is_property_names_included_Set() const;
    bool is_property_names_included_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIActionConfirmationBody m_confirmation;
    bool m_confirmation_isSet;
    bool m_confirmation_isValid;

    QString m_http_method;
    bool m_http_method_isSet;
    bool m_http_method_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QList<QString> m_property_names_included;
    bool m_property_names_included_isSet;
    bool m_property_names_included_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntegratorObjectResult_actions_inner)

#endif // OAIIntegratorObjectResult_actions_inner_H
