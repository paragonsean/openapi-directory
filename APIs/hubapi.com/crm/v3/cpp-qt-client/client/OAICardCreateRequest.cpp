/**
 * CRM cards
 * Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardCreateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardCreateRequest::OAICardCreateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardCreateRequest::OAICardCreateRequest() {
    this->initializeModel();
}

OAICardCreateRequest::~OAICardCreateRequest() {}

void OAICardCreateRequest::initializeModel() {

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_display_isSet = false;
    m_display_isValid = false;

    m_fetch_isSet = false;
    m_fetch_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAICardCreateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardCreateRequest::fromJsonObject(QJsonObject json) {

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("actions")]);
    m_actions_isSet = !json[QString("actions")].isNull() && m_actions_isValid;

    m_display_isValid = ::OpenAPI::fromJsonValue(m_display, json[QString("display")]);
    m_display_isSet = !json[QString("display")].isNull() && m_display_isValid;

    m_fetch_isValid = ::OpenAPI::fromJsonValue(m_fetch, json[QString("fetch")]);
    m_fetch_isSet = !json[QString("fetch")].isNull() && m_fetch_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAICardCreateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardCreateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_actions.isSet()) {
        obj.insert(QString("actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_display.isSet()) {
        obj.insert(QString("display"), ::OpenAPI::toJsonValue(m_display));
    }
    if (m_fetch.isSet()) {
        obj.insert(QString("fetch"), ::OpenAPI::toJsonValue(m_fetch));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

OAICardActions OAICardCreateRequest::getActions() const {
    return m_actions;
}
void OAICardCreateRequest::setActions(const OAICardActions &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAICardCreateRequest::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAICardCreateRequest::is_actions_Valid() const{
    return m_actions_isValid;
}

OAICardDisplayBody OAICardCreateRequest::getDisplay() const {
    return m_display;
}
void OAICardCreateRequest::setDisplay(const OAICardDisplayBody &display) {
    m_display = display;
    m_display_isSet = true;
}

bool OAICardCreateRequest::is_display_Set() const{
    return m_display_isSet;
}

bool OAICardCreateRequest::is_display_Valid() const{
    return m_display_isValid;
}

OAICardFetchBody OAICardCreateRequest::getFetch() const {
    return m_fetch;
}
void OAICardCreateRequest::setFetch(const OAICardFetchBody &fetch) {
    m_fetch = fetch;
    m_fetch_isSet = true;
}

bool OAICardCreateRequest::is_fetch_Set() const{
    return m_fetch_isSet;
}

bool OAICardCreateRequest::is_fetch_Valid() const{
    return m_fetch_isValid;
}

QString OAICardCreateRequest::getTitle() const {
    return m_title;
}
void OAICardCreateRequest::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICardCreateRequest::is_title_Set() const{
    return m_title_isSet;
}

bool OAICardCreateRequest::is_title_Valid() const{
    return m_title_isValid;
}

bool OAICardCreateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fetch.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardCreateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_actions_isValid && m_display_isValid && m_fetch_isValid && m_title_isValid && true;
}

} // namespace OpenAPI
