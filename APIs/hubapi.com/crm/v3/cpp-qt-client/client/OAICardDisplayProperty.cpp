/**
 * CRM cards
 * Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardDisplayProperty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardDisplayProperty::OAICardDisplayProperty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardDisplayProperty::OAICardDisplayProperty() {
    this->initializeModel();
}

OAICardDisplayProperty::~OAICardDisplayProperty() {}

void OAICardDisplayProperty::initializeModel() {

    m_data_type_isSet = false;
    m_data_type_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;
}

void OAICardDisplayProperty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardDisplayProperty::fromJsonObject(QJsonObject json) {

    m_data_type_isValid = ::OpenAPI::fromJsonValue(m_data_type, json[QString("dataType")]);
    m_data_type_isSet = !json[QString("dataType")].isNull() && m_data_type_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;
}

QString OAICardDisplayProperty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardDisplayProperty::asJsonObject() const {
    QJsonObject obj;
    if (m_data_type_isSet) {
        obj.insert(QString("dataType"), ::OpenAPI::toJsonValue(m_data_type));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_options.size() > 0) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    return obj;
}

QString OAICardDisplayProperty::getDataType() const {
    return m_data_type;
}
void OAICardDisplayProperty::setDataType(const QString &data_type) {
    m_data_type = data_type;
    m_data_type_isSet = true;
}

bool OAICardDisplayProperty::is_data_type_Set() const{
    return m_data_type_isSet;
}

bool OAICardDisplayProperty::is_data_type_Valid() const{
    return m_data_type_isValid;
}

QString OAICardDisplayProperty::getLabel() const {
    return m_label;
}
void OAICardDisplayProperty::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAICardDisplayProperty::is_label_Set() const{
    return m_label_isSet;
}

bool OAICardDisplayProperty::is_label_Valid() const{
    return m_label_isValid;
}

QString OAICardDisplayProperty::getName() const {
    return m_name;
}
void OAICardDisplayProperty::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICardDisplayProperty::is_name_Set() const{
    return m_name_isSet;
}

bool OAICardDisplayProperty::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIDisplayOption> OAICardDisplayProperty::getOptions() const {
    return m_options;
}
void OAICardDisplayProperty::setOptions(const QList<OAIDisplayOption> &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAICardDisplayProperty::is_options_Set() const{
    return m_options_isSet;
}

bool OAICardDisplayProperty::is_options_Valid() const{
    return m_options_isValid;
}

bool OAICardDisplayProperty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardDisplayProperty::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_type_isValid && m_label_isValid && m_name_isValid && m_options_isValid && true;
}

} // namespace OpenAPI
