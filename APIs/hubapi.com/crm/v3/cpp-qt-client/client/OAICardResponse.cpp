/**
 * CRM cards
 * Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardResponse::OAICardResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardResponse::OAICardResponse() {
    this->initializeModel();
}

OAICardResponse::~OAICardResponse() {}

void OAICardResponse::initializeModel() {

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_display_isSet = false;
    m_display_isValid = false;

    m_fetch_isSet = false;
    m_fetch_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAICardResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardResponse::fromJsonObject(QJsonObject json) {

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("actions")]);
    m_actions_isSet = !json[QString("actions")].isNull() && m_actions_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_display_isValid = ::OpenAPI::fromJsonValue(m_display, json[QString("display")]);
    m_display_isSet = !json[QString("display")].isNull() && m_display_isValid;

    m_fetch_isValid = ::OpenAPI::fromJsonValue(m_fetch, json[QString("fetch")]);
    m_fetch_isSet = !json[QString("fetch")].isNull() && m_fetch_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updatedAt")]);
    m_updated_at_isSet = !json[QString("updatedAt")].isNull() && m_updated_at_isValid;
}

QString OAICardResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_actions.isSet()) {
        obj.insert(QString("actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_display.isSet()) {
        obj.insert(QString("display"), ::OpenAPI::toJsonValue(m_display));
    }
    if (m_fetch.isSet()) {
        obj.insert(QString("fetch"), ::OpenAPI::toJsonValue(m_fetch));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

OAICardActions OAICardResponse::getActions() const {
    return m_actions;
}
void OAICardResponse::setActions(const OAICardActions &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAICardResponse::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAICardResponse::is_actions_Valid() const{
    return m_actions_isValid;
}

QDateTime OAICardResponse::getCreatedAt() const {
    return m_created_at;
}
void OAICardResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICardResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICardResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAICardDisplayBody OAICardResponse::getDisplay() const {
    return m_display;
}
void OAICardResponse::setDisplay(const OAICardDisplayBody &display) {
    m_display = display;
    m_display_isSet = true;
}

bool OAICardResponse::is_display_Set() const{
    return m_display_isSet;
}

bool OAICardResponse::is_display_Valid() const{
    return m_display_isValid;
}

OAICardFetchBody OAICardResponse::getFetch() const {
    return m_fetch;
}
void OAICardResponse::setFetch(const OAICardFetchBody &fetch) {
    m_fetch = fetch;
    m_fetch_isSet = true;
}

bool OAICardResponse::is_fetch_Set() const{
    return m_fetch_isSet;
}

bool OAICardResponse::is_fetch_Valid() const{
    return m_fetch_isValid;
}

QString OAICardResponse::getId() const {
    return m_id;
}
void OAICardResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICardResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAICardResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICardResponse::getTitle() const {
    return m_title;
}
void OAICardResponse::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICardResponse::is_title_Set() const{
    return m_title_isSet;
}

bool OAICardResponse::is_title_Valid() const{
    return m_title_isValid;
}

QDateTime OAICardResponse::getUpdatedAt() const {
    return m_updated_at;
}
void OAICardResponse::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAICardResponse::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAICardResponse::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAICardResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fetch.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_actions_isValid && m_display_isValid && m_fetch_isValid && m_id_isValid && m_title_isValid && true;
}

} // namespace OpenAPI
