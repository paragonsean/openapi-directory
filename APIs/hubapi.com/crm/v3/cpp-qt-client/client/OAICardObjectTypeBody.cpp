/**
 * CRM cards
 * Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardObjectTypeBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardObjectTypeBody::OAICardObjectTypeBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardObjectTypeBody::OAICardObjectTypeBody() {
    this->initializeModel();
}

OAICardObjectTypeBody::~OAICardObjectTypeBody() {}

void OAICardObjectTypeBody::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_properties_to_send_isSet = false;
    m_properties_to_send_isValid = false;
}

void OAICardObjectTypeBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardObjectTypeBody::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_properties_to_send_isValid = ::OpenAPI::fromJsonValue(m_properties_to_send, json[QString("propertiesToSend")]);
    m_properties_to_send_isSet = !json[QString("propertiesToSend")].isNull() && m_properties_to_send_isValid;
}

QString OAICardObjectTypeBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardObjectTypeBody::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_properties_to_send.size() > 0) {
        obj.insert(QString("propertiesToSend"), ::OpenAPI::toJsonValue(m_properties_to_send));
    }
    return obj;
}

QString OAICardObjectTypeBody::getName() const {
    return m_name;
}
void OAICardObjectTypeBody::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICardObjectTypeBody::is_name_Set() const{
    return m_name_isSet;
}

bool OAICardObjectTypeBody::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAICardObjectTypeBody::getPropertiesToSend() const {
    return m_properties_to_send;
}
void OAICardObjectTypeBody::setPropertiesToSend(const QList<QString> &properties_to_send) {
    m_properties_to_send = properties_to_send;
    m_properties_to_send_isSet = true;
}

bool OAICardObjectTypeBody::is_properties_to_send_Set() const{
    return m_properties_to_send_isSet;
}

bool OAICardObjectTypeBody::is_properties_to_send_Valid() const{
    return m_properties_to_send_isValid;
}

bool OAICardObjectTypeBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties_to_send.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardObjectTypeBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_properties_to_send_isValid && true;
}

} // namespace OpenAPI
