/*
 * CRM cards
 * Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CardCreateRequest;
import org.openapitools.client.model.CardListResponse;
import org.openapitools.client.model.CardPatchRequest;
import org.openapitools.client.model.CardResponse;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardsApi
 */
@Disabled
public class CardsApiTest {

    private final CardsApi api = new CardsApi();

    /**
     * Delete a card
     *
     * Permanently deletes a card definition with the given ID. Once deleted, data fetch requests for this card will no longer be sent to your service. This can&#39;t be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCrmV3ExtensionsCardsAppIdCardIdTest() throws ApiException {
        Integer appId = null;
        String cardId = null;
        api.deleteCrmV3ExtensionsCardsAppIdCardId(appId, cardId);
        // TODO: test validations
    }

    /**
     * Get all cards
     *
     * Returns a list of cards for a given app.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCrmV3ExtensionsCardsAppIdTest() throws ApiException {
        Integer appId = null;
        CardListResponse response = api.getCrmV3ExtensionsCardsAppId(appId);
        // TODO: test validations
    }

    /**
     * Get a card.
     *
     * Returns the definition for a card with the given ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCrmV3ExtensionsCardsAppIdCardIdTest() throws ApiException {
        Integer appId = null;
        String cardId = null;
        CardResponse response = api.getCrmV3ExtensionsCardsAppIdCardId(appId, cardId);
        // TODO: test validations
    }

    /**
     * Update a card
     *
     * Update a card definition with new details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchCrmV3ExtensionsCardsAppIdCardIdTest() throws ApiException {
        Integer appId = null;
        String cardId = null;
        CardPatchRequest cardPatchRequest = null;
        CardResponse response = api.patchCrmV3ExtensionsCardsAppIdCardId(appId, cardId, cardPatchRequest);
        // TODO: test validations
    }

    /**
     * Create a new card
     *
     * Defines a new card that will become active on an account when this app is installed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCrmV3ExtensionsCardsAppIdTest() throws ApiException {
        Integer appId = null;
        CardCreateRequest cardCreateRequest = null;
        CardResponse response = api.postCrmV3ExtensionsCardsAppId(appId, cardCreateRequest);
        // TODO: test validations
    }

}
