/**
 * CRM cards
 * Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CardObjectTypeBody from './CardObjectTypeBody';

/**
 * The CardFetchBodyPatch model module.
 * @module model/CardFetchBodyPatch
 * @version v3
 */
class CardFetchBodyPatch {
    /**
     * Constructs a new <code>CardFetchBodyPatch</code>.
     * Variant of CardFetchBody with fields as optional for patches
     * @alias module:model/CardFetchBodyPatch
     * @param objectTypes {Array.<module:model/CardObjectTypeBody>} An array of CRM object types where this card should be displayed. HubSpot will call your target URL whenever a user visits a record page of the types defined here.
     */
    constructor(objectTypes) { 
        
        CardFetchBodyPatch.initialize(this, objectTypes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objectTypes) { 
        obj['objectTypes'] = objectTypes;
    }

    /**
     * Constructs a <code>CardFetchBodyPatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CardFetchBodyPatch} obj Optional instance to populate.
     * @return {module:model/CardFetchBodyPatch} The populated <code>CardFetchBodyPatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CardFetchBodyPatch();

            if (data.hasOwnProperty('objectTypes')) {
                obj['objectTypes'] = ApiClient.convertToType(data['objectTypes'], [CardObjectTypeBody]);
            }
            if (data.hasOwnProperty('targetUrl')) {
                obj['targetUrl'] = ApiClient.convertToType(data['targetUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CardFetchBodyPatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CardFetchBodyPatch</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CardFetchBodyPatch.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['objectTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['objectTypes'])) {
                throw new Error("Expected the field `objectTypes` to be an array in the JSON data but got " + data['objectTypes']);
            }
            // validate the optional field `objectTypes` (array)
            for (const item of data['objectTypes']) {
                CardObjectTypeBody.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['targetUrl'] && !(typeof data['targetUrl'] === 'string' || data['targetUrl'] instanceof String)) {
            throw new Error("Expected the field `targetUrl` to be a primitive type in the JSON string but got " + data['targetUrl']);
        }

        return true;
    }


}

CardFetchBodyPatch.RequiredProperties = ["objectTypes"];

/**
 * An array of CRM object types where this card should be displayed. HubSpot will call your target URL whenever a user visits a record page of the types defined here.
 * @member {Array.<module:model/CardObjectTypeBody>} objectTypes
 */
CardFetchBodyPatch.prototype['objectTypes'] = undefined;

/**
 * URL to a service endpoint that will respond with details for this card. HubSpot will call this endpoint each time a user visits a CRM record page where this card should be displayed.
 * @member {String} targetUrl
 */
CardFetchBodyPatch.prototype['targetUrl'] = undefined;






export default CardFetchBodyPatch;

