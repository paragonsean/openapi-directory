# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.public_action_definition import PublicActionDefinition
from openapi_server import util


class PublicActionRevision(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, definition: PublicActionDefinition=None, id: str=None, revision_id: str=None):
        """PublicActionRevision - a model defined in OpenAPI

        :param created_at: The created_at of this PublicActionRevision.
        :param definition: The definition of this PublicActionRevision.
        :param id: The id of this PublicActionRevision.
        :param revision_id: The revision_id of this PublicActionRevision.
        """
        self.openapi_types = {
            'created_at': datetime,
            'definition': PublicActionDefinition,
            'id': str,
            'revision_id': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'definition': 'definition',
            'id': 'id',
            'revision_id': 'revisionId'
        }

        self._created_at = created_at
        self._definition = definition
        self._id = id
        self._revision_id = revision_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicActionRevision':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicActionRevision of this PublicActionRevision.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this PublicActionRevision.


        :return: The created_at of this PublicActionRevision.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PublicActionRevision.


        :param created_at: The created_at of this PublicActionRevision.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def definition(self):
        """Gets the definition of this PublicActionRevision.


        :return: The definition of this PublicActionRevision.
        :rtype: PublicActionDefinition
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this PublicActionRevision.


        :param definition: The definition of this PublicActionRevision.
        :type definition: PublicActionDefinition
        """
        if definition is None:
            raise ValueError("Invalid value for `definition`, must not be `None`")

        self._definition = definition

    @property
    def id(self):
        """Gets the id of this PublicActionRevision.


        :return: The id of this PublicActionRevision.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PublicActionRevision.


        :param id: The id of this PublicActionRevision.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def revision_id(self):
        """Gets the revision_id of this PublicActionRevision.


        :return: The revision_id of this PublicActionRevision.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this PublicActionRevision.


        :param revision_id: The revision_id of this PublicActionRevision.
        :type revision_id: str
        """
        if revision_id is None:
            raise ValueError("Invalid value for `revision_id`, must not be `None`")

        self._revision_id = revision_id
