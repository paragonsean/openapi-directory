/*
 * Automation Actions V4
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CollectionResponsePublicActionFunctionIdentifierNoPaging;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.PublicActionFunction;
import org.openapitools.client.model.PublicActionFunctionIdentifier;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FunctionsApi
 */
@Disabled
public class FunctionsApiTest {

    private final FunctionsApi api = new FunctionsApi();

    /**
     * Delete a function for a definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeArchiveByFunctionTypeTest() throws ApiException {
        String definitionId = null;
        String functionType = null;
        Integer appId = null;
        api.deleteAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeArchiveByFunctionType(definitionId, functionType, appId);
        // TODO: test validations
    }

    /**
     * Archive a function for a definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdArchiveTest() throws ApiException {
        String definitionId = null;
        String functionType = null;
        String functionId = null;
        Integer appId = null;
        api.deleteAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdArchive(definitionId, functionType, functionId, appId);
        // TODO: test validations
    }

    /**
     * Get a function for a given definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdGetByIdTest() throws ApiException {
        String definitionId = null;
        String functionType = null;
        String functionId = null;
        Integer appId = null;
        PublicActionFunction response = api.getAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdGetById(definitionId, functionType, functionId, appId);
        // TODO: test validations
    }

    /**
     * Get all functions by a type for a given definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeGetByFunctionTypeTest() throws ApiException {
        String definitionId = null;
        String functionType = null;
        Integer appId = null;
        PublicActionFunction response = api.getAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeGetByFunctionType(definitionId, functionType, appId);
        // TODO: test validations
    }

    /**
     * Get all functions for a given definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAutomationV4ActionsAppIdDefinitionIdFunctionsGetPageTest() throws ApiException {
        String definitionId = null;
        Integer appId = null;
        CollectionResponsePublicActionFunctionIdentifierNoPaging response = api.getAutomationV4ActionsAppIdDefinitionIdFunctionsGetPage(definitionId, appId);
        // TODO: test validations
    }

    /**
     * Insert a function for a definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeCreateOrReplaceByFunctionTypeTest() throws ApiException {
        String definitionId = null;
        String functionType = null;
        Integer appId = null;
        String body = null;
        PublicActionFunctionIdentifier response = api.putAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeCreateOrReplaceByFunctionType(definitionId, functionType, appId, body);
        // TODO: test validations
    }

    /**
     * Insert a function for a definition
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceTest() throws ApiException {
        String definitionId = null;
        String functionType = null;
        String functionId = null;
        Integer appId = null;
        String body = null;
        PublicActionFunctionIdentifier response = api.putAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplace(definitionId, functionType, functionId, appId, body);
        // TODO: test validations
    }

}
