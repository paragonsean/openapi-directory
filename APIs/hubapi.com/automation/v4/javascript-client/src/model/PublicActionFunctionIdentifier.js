/**
 * Automation Actions V4
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublicActionFunctionIdentifier model module.
 * @module model/PublicActionFunctionIdentifier
 * @version v4
 */
class PublicActionFunctionIdentifier {
    /**
     * Constructs a new <code>PublicActionFunctionIdentifier</code>.
     * @alias module:model/PublicActionFunctionIdentifier
     * @param functionType {module:model/PublicActionFunctionIdentifier.FunctionTypeEnum} 
     */
    constructor(functionType) { 
        
        PublicActionFunctionIdentifier.initialize(this, functionType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, functionType) { 
        obj['functionType'] = functionType;
    }

    /**
     * Constructs a <code>PublicActionFunctionIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublicActionFunctionIdentifier} obj Optional instance to populate.
     * @return {module:model/PublicActionFunctionIdentifier} The populated <code>PublicActionFunctionIdentifier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublicActionFunctionIdentifier();

            if (data.hasOwnProperty('functionType')) {
                obj['functionType'] = ApiClient.convertToType(data['functionType'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublicActionFunctionIdentifier</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublicActionFunctionIdentifier</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PublicActionFunctionIdentifier.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['functionType'] && !(typeof data['functionType'] === 'string' || data['functionType'] instanceof String)) {
            throw new Error("Expected the field `functionType` to be a primitive type in the JSON string but got " + data['functionType']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

PublicActionFunctionIdentifier.RequiredProperties = ["functionType"];

/**
 * @member {module:model/PublicActionFunctionIdentifier.FunctionTypeEnum} functionType
 */
PublicActionFunctionIdentifier.prototype['functionType'] = undefined;

/**
 * @member {String} id
 */
PublicActionFunctionIdentifier.prototype['id'] = undefined;





/**
 * Allowed values for the <code>functionType</code> property.
 * @enum {String}
 * @readonly
 */
PublicActionFunctionIdentifier['FunctionTypeEnum'] = {

    /**
     * value: "PRE_ACTION_EXECUTION"
     * @const
     */
    "PRE_ACTION_EXECUTION": "PRE_ACTION_EXECUTION",

    /**
     * value: "PRE_FETCH_OPTIONS"
     * @const
     */
    "PRE_FETCH_OPTIONS": "PRE_FETCH_OPTIONS",

    /**
     * value: "POST_FETCH_OPTIONS"
     * @const
     */
    "POST_FETCH_OPTIONS": "POST_FETCH_OPTIONS",

    /**
     * value: "POST_ACTION_EXECUTION"
     * @const
     */
    "POST_ACTION_EXECUTION": "POST_ACTION_EXECUTION"
};



export default PublicActionFunctionIdentifier;

