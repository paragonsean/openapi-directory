/**
 * Automation Actions V4
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CallbackCompletionBatchRequest model module.
 * @module model/CallbackCompletionBatchRequest
 * @version v4
 */
class CallbackCompletionBatchRequest {
    /**
     * Constructs a new <code>CallbackCompletionBatchRequest</code>.
     * @alias module:model/CallbackCompletionBatchRequest
     * @param callbackId {String} 
     * @param outputFields {Object.<String, String>} 
     */
    constructor(callbackId, outputFields) { 
        
        CallbackCompletionBatchRequest.initialize(this, callbackId, outputFields);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, callbackId, outputFields) { 
        obj['callbackId'] = callbackId;
        obj['outputFields'] = outputFields;
    }

    /**
     * Constructs a <code>CallbackCompletionBatchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CallbackCompletionBatchRequest} obj Optional instance to populate.
     * @return {module:model/CallbackCompletionBatchRequest} The populated <code>CallbackCompletionBatchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CallbackCompletionBatchRequest();

            if (data.hasOwnProperty('callbackId')) {
                obj['callbackId'] = ApiClient.convertToType(data['callbackId'], 'String');
            }
            if (data.hasOwnProperty('outputFields')) {
                obj['outputFields'] = ApiClient.convertToType(data['outputFields'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CallbackCompletionBatchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CallbackCompletionBatchRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CallbackCompletionBatchRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['callbackId'] && !(typeof data['callbackId'] === 'string' || data['callbackId'] instanceof String)) {
            throw new Error("Expected the field `callbackId` to be a primitive type in the JSON string but got " + data['callbackId']);
        }

        return true;
    }


}

CallbackCompletionBatchRequest.RequiredProperties = ["callbackId", "outputFields"];

/**
 * @member {String} callbackId
 */
CallbackCompletionBatchRequest.prototype['callbackId'] = undefined;

/**
 * @member {Object.<String, String>} outputFields
 */
CallbackCompletionBatchRequest.prototype['outputFields'] = undefined;






export default CallbackCompletionBatchRequest;

