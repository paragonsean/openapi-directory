/**
 * Automation Actions V4
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICallbackCompletionBatchRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICallbackCompletionBatchRequest::OAICallbackCompletionBatchRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICallbackCompletionBatchRequest::OAICallbackCompletionBatchRequest() {
    this->initializeModel();
}

OAICallbackCompletionBatchRequest::~OAICallbackCompletionBatchRequest() {}

void OAICallbackCompletionBatchRequest::initializeModel() {

    m_callback_id_isSet = false;
    m_callback_id_isValid = false;

    m_output_fields_isSet = false;
    m_output_fields_isValid = false;
}

void OAICallbackCompletionBatchRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICallbackCompletionBatchRequest::fromJsonObject(QJsonObject json) {

    m_callback_id_isValid = ::OpenAPI::fromJsonValue(m_callback_id, json[QString("callbackId")]);
    m_callback_id_isSet = !json[QString("callbackId")].isNull() && m_callback_id_isValid;

    m_output_fields_isValid = ::OpenAPI::fromJsonValue(m_output_fields, json[QString("outputFields")]);
    m_output_fields_isSet = !json[QString("outputFields")].isNull() && m_output_fields_isValid;
}

QString OAICallbackCompletionBatchRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICallbackCompletionBatchRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_callback_id_isSet) {
        obj.insert(QString("callbackId"), ::OpenAPI::toJsonValue(m_callback_id));
    }
    if (m_output_fields.size() > 0) {
        obj.insert(QString("outputFields"), ::OpenAPI::toJsonValue(m_output_fields));
    }
    return obj;
}

QString OAICallbackCompletionBatchRequest::getCallbackId() const {
    return m_callback_id;
}
void OAICallbackCompletionBatchRequest::setCallbackId(const QString &callback_id) {
    m_callback_id = callback_id;
    m_callback_id_isSet = true;
}

bool OAICallbackCompletionBatchRequest::is_callback_id_Set() const{
    return m_callback_id_isSet;
}

bool OAICallbackCompletionBatchRequest::is_callback_id_Valid() const{
    return m_callback_id_isValid;
}

QMap<QString, QString> OAICallbackCompletionBatchRequest::getOutputFields() const {
    return m_output_fields;
}
void OAICallbackCompletionBatchRequest::setOutputFields(const QMap<QString, QString> &output_fields) {
    m_output_fields = output_fields;
    m_output_fields_isSet = true;
}

bool OAICallbackCompletionBatchRequest::is_output_fields_Set() const{
    return m_output_fields_isSet;
}

bool OAICallbackCompletionBatchRequest::is_output_fields_Valid() const{
    return m_output_fields_isValid;
}

bool OAICallbackCompletionBatchRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_callback_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICallbackCompletionBatchRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_callback_id_isValid && m_output_fields_isValid && true;
}

} // namespace OpenAPI
