/**
 * Automation Actions V4
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFieldTypeDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFieldTypeDefinition::OAIFieldTypeDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFieldTypeDefinition::OAIFieldTypeDefinition() {
    this->initializeModel();
}

OAIFieldTypeDefinition::~OAIFieldTypeDefinition() {}

void OAIFieldTypeDefinition::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_external_options_isSet = false;
    m_external_options_isValid = false;

    m_external_options_reference_type_isSet = false;
    m_external_options_reference_type_isValid = false;

    m_field_type_isSet = false;
    m_field_type_isValid = false;

    m_help_text_isSet = false;
    m_help_text_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;

    m_options_url_isSet = false;
    m_options_url_isValid = false;

    m_referenced_object_type_isSet = false;
    m_referenced_object_type_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIFieldTypeDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFieldTypeDefinition::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_external_options_isValid = ::OpenAPI::fromJsonValue(m_external_options, json[QString("externalOptions")]);
    m_external_options_isSet = !json[QString("externalOptions")].isNull() && m_external_options_isValid;

    m_external_options_reference_type_isValid = ::OpenAPI::fromJsonValue(m_external_options_reference_type, json[QString("externalOptionsReferenceType")]);
    m_external_options_reference_type_isSet = !json[QString("externalOptionsReferenceType")].isNull() && m_external_options_reference_type_isValid;

    m_field_type_isValid = ::OpenAPI::fromJsonValue(m_field_type, json[QString("fieldType")]);
    m_field_type_isSet = !json[QString("fieldType")].isNull() && m_field_type_isValid;

    m_help_text_isValid = ::OpenAPI::fromJsonValue(m_help_text, json[QString("helpText")]);
    m_help_text_isSet = !json[QString("helpText")].isNull() && m_help_text_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;

    m_options_url_isValid = ::OpenAPI::fromJsonValue(m_options_url, json[QString("optionsUrl")]);
    m_options_url_isSet = !json[QString("optionsUrl")].isNull() && m_options_url_isValid;

    m_referenced_object_type_isValid = ::OpenAPI::fromJsonValue(m_referenced_object_type, json[QString("referencedObjectType")]);
    m_referenced_object_type_isSet = !json[QString("referencedObjectType")].isNull() && m_referenced_object_type_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIFieldTypeDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFieldTypeDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_external_options_isSet) {
        obj.insert(QString("externalOptions"), ::OpenAPI::toJsonValue(m_external_options));
    }
    if (m_external_options_reference_type_isSet) {
        obj.insert(QString("externalOptionsReferenceType"), ::OpenAPI::toJsonValue(m_external_options_reference_type));
    }
    if (m_field_type_isSet) {
        obj.insert(QString("fieldType"), ::OpenAPI::toJsonValue(m_field_type));
    }
    if (m_help_text_isSet) {
        obj.insert(QString("helpText"), ::OpenAPI::toJsonValue(m_help_text));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_options.size() > 0) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_options_url_isSet) {
        obj.insert(QString("optionsUrl"), ::OpenAPI::toJsonValue(m_options_url));
    }
    if (m_referenced_object_type_isSet) {
        obj.insert(QString("referencedObjectType"), ::OpenAPI::toJsonValue(m_referenced_object_type));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIFieldTypeDefinition::getDescription() const {
    return m_description;
}
void OAIFieldTypeDefinition::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIFieldTypeDefinition::is_description_Set() const{
    return m_description_isSet;
}

bool OAIFieldTypeDefinition::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIFieldTypeDefinition::isExternalOptions() const {
    return m_external_options;
}
void OAIFieldTypeDefinition::setExternalOptions(const bool &external_options) {
    m_external_options = external_options;
    m_external_options_isSet = true;
}

bool OAIFieldTypeDefinition::is_external_options_Set() const{
    return m_external_options_isSet;
}

bool OAIFieldTypeDefinition::is_external_options_Valid() const{
    return m_external_options_isValid;
}

QString OAIFieldTypeDefinition::getExternalOptionsReferenceType() const {
    return m_external_options_reference_type;
}
void OAIFieldTypeDefinition::setExternalOptionsReferenceType(const QString &external_options_reference_type) {
    m_external_options_reference_type = external_options_reference_type;
    m_external_options_reference_type_isSet = true;
}

bool OAIFieldTypeDefinition::is_external_options_reference_type_Set() const{
    return m_external_options_reference_type_isSet;
}

bool OAIFieldTypeDefinition::is_external_options_reference_type_Valid() const{
    return m_external_options_reference_type_isValid;
}

QString OAIFieldTypeDefinition::getFieldType() const {
    return m_field_type;
}
void OAIFieldTypeDefinition::setFieldType(const QString &field_type) {
    m_field_type = field_type;
    m_field_type_isSet = true;
}

bool OAIFieldTypeDefinition::is_field_type_Set() const{
    return m_field_type_isSet;
}

bool OAIFieldTypeDefinition::is_field_type_Valid() const{
    return m_field_type_isValid;
}

QString OAIFieldTypeDefinition::getHelpText() const {
    return m_help_text;
}
void OAIFieldTypeDefinition::setHelpText(const QString &help_text) {
    m_help_text = help_text;
    m_help_text_isSet = true;
}

bool OAIFieldTypeDefinition::is_help_text_Set() const{
    return m_help_text_isSet;
}

bool OAIFieldTypeDefinition::is_help_text_Valid() const{
    return m_help_text_isValid;
}

QString OAIFieldTypeDefinition::getLabel() const {
    return m_label;
}
void OAIFieldTypeDefinition::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIFieldTypeDefinition::is_label_Set() const{
    return m_label_isSet;
}

bool OAIFieldTypeDefinition::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIFieldTypeDefinition::getName() const {
    return m_name;
}
void OAIFieldTypeDefinition::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFieldTypeDefinition::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFieldTypeDefinition::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIOption> OAIFieldTypeDefinition::getOptions() const {
    return m_options;
}
void OAIFieldTypeDefinition::setOptions(const QList<OAIOption> &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAIFieldTypeDefinition::is_options_Set() const{
    return m_options_isSet;
}

bool OAIFieldTypeDefinition::is_options_Valid() const{
    return m_options_isValid;
}

QString OAIFieldTypeDefinition::getOptionsUrl() const {
    return m_options_url;
}
void OAIFieldTypeDefinition::setOptionsUrl(const QString &options_url) {
    m_options_url = options_url;
    m_options_url_isSet = true;
}

bool OAIFieldTypeDefinition::is_options_url_Set() const{
    return m_options_url_isSet;
}

bool OAIFieldTypeDefinition::is_options_url_Valid() const{
    return m_options_url_isValid;
}

QString OAIFieldTypeDefinition::getReferencedObjectType() const {
    return m_referenced_object_type;
}
void OAIFieldTypeDefinition::setReferencedObjectType(const QString &referenced_object_type) {
    m_referenced_object_type = referenced_object_type;
    m_referenced_object_type_isSet = true;
}

bool OAIFieldTypeDefinition::is_referenced_object_type_Set() const{
    return m_referenced_object_type_isSet;
}

bool OAIFieldTypeDefinition::is_referenced_object_type_Valid() const{
    return m_referenced_object_type_isValid;
}

QString OAIFieldTypeDefinition::getType() const {
    return m_type;
}
void OAIFieldTypeDefinition::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIFieldTypeDefinition::is_type_Set() const{
    return m_type_isSet;
}

bool OAIFieldTypeDefinition::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIFieldTypeDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_options_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_options_reference_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_options_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_referenced_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFieldTypeDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_external_options_isValid && m_name_isValid && m_options_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
