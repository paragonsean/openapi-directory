/**
 * Automation Actions V4
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicActionDefinition_inputFieldDependencies_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicActionDefinition_inputFieldDependencies_inner::OAIPublicActionDefinition_inputFieldDependencies_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicActionDefinition_inputFieldDependencies_inner::OAIPublicActionDefinition_inputFieldDependencies_inner() {
    this->initializeModel();
}

OAIPublicActionDefinition_inputFieldDependencies_inner::~OAIPublicActionDefinition_inputFieldDependencies_inner() {}

void OAIPublicActionDefinition_inputFieldDependencies_inner::initializeModel() {

    m_controlling_field_name_isSet = false;
    m_controlling_field_name_isValid = false;

    m_dependency_type_isSet = false;
    m_dependency_type_isValid = false;

    m_dependent_field_names_isSet = false;
    m_dependent_field_names_isValid = false;

    m_controlling_field_value_isSet = false;
    m_controlling_field_value_isValid = false;
}

void OAIPublicActionDefinition_inputFieldDependencies_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicActionDefinition_inputFieldDependencies_inner::fromJsonObject(QJsonObject json) {

    m_controlling_field_name_isValid = ::OpenAPI::fromJsonValue(m_controlling_field_name, json[QString("controllingFieldName")]);
    m_controlling_field_name_isSet = !json[QString("controllingFieldName")].isNull() && m_controlling_field_name_isValid;

    m_dependency_type_isValid = ::OpenAPI::fromJsonValue(m_dependency_type, json[QString("dependencyType")]);
    m_dependency_type_isSet = !json[QString("dependencyType")].isNull() && m_dependency_type_isValid;

    m_dependent_field_names_isValid = ::OpenAPI::fromJsonValue(m_dependent_field_names, json[QString("dependentFieldNames")]);
    m_dependent_field_names_isSet = !json[QString("dependentFieldNames")].isNull() && m_dependent_field_names_isValid;

    m_controlling_field_value_isValid = ::OpenAPI::fromJsonValue(m_controlling_field_value, json[QString("controllingFieldValue")]);
    m_controlling_field_value_isSet = !json[QString("controllingFieldValue")].isNull() && m_controlling_field_value_isValid;
}

QString OAIPublicActionDefinition_inputFieldDependencies_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicActionDefinition_inputFieldDependencies_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_controlling_field_name_isSet) {
        obj.insert(QString("controllingFieldName"), ::OpenAPI::toJsonValue(m_controlling_field_name));
    }
    if (m_dependency_type_isSet) {
        obj.insert(QString("dependencyType"), ::OpenAPI::toJsonValue(m_dependency_type));
    }
    if (m_dependent_field_names.size() > 0) {
        obj.insert(QString("dependentFieldNames"), ::OpenAPI::toJsonValue(m_dependent_field_names));
    }
    if (m_controlling_field_value_isSet) {
        obj.insert(QString("controllingFieldValue"), ::OpenAPI::toJsonValue(m_controlling_field_value));
    }
    return obj;
}

QString OAIPublicActionDefinition_inputFieldDependencies_inner::getControllingFieldName() const {
    return m_controlling_field_name;
}
void OAIPublicActionDefinition_inputFieldDependencies_inner::setControllingFieldName(const QString &controlling_field_name) {
    m_controlling_field_name = controlling_field_name;
    m_controlling_field_name_isSet = true;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::is_controlling_field_name_Set() const{
    return m_controlling_field_name_isSet;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::is_controlling_field_name_Valid() const{
    return m_controlling_field_name_isValid;
}

QString OAIPublicActionDefinition_inputFieldDependencies_inner::getDependencyType() const {
    return m_dependency_type;
}
void OAIPublicActionDefinition_inputFieldDependencies_inner::setDependencyType(const QString &dependency_type) {
    m_dependency_type = dependency_type;
    m_dependency_type_isSet = true;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::is_dependency_type_Set() const{
    return m_dependency_type_isSet;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::is_dependency_type_Valid() const{
    return m_dependency_type_isValid;
}

QList<QString> OAIPublicActionDefinition_inputFieldDependencies_inner::getDependentFieldNames() const {
    return m_dependent_field_names;
}
void OAIPublicActionDefinition_inputFieldDependencies_inner::setDependentFieldNames(const QList<QString> &dependent_field_names) {
    m_dependent_field_names = dependent_field_names;
    m_dependent_field_names_isSet = true;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::is_dependent_field_names_Set() const{
    return m_dependent_field_names_isSet;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::is_dependent_field_names_Valid() const{
    return m_dependent_field_names_isValid;
}

QString OAIPublicActionDefinition_inputFieldDependencies_inner::getControllingFieldValue() const {
    return m_controlling_field_value;
}
void OAIPublicActionDefinition_inputFieldDependencies_inner::setControllingFieldValue(const QString &controlling_field_value) {
    m_controlling_field_value = controlling_field_value;
    m_controlling_field_value_isSet = true;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::is_controlling_field_value_Set() const{
    return m_controlling_field_value_isSet;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::is_controlling_field_value_Valid() const{
    return m_controlling_field_value_isValid;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_controlling_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dependency_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dependent_field_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_controlling_field_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicActionDefinition_inputFieldDependencies_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_controlling_field_name_isValid && m_dependency_type_isValid && m_dependent_field_names_isValid && m_controlling_field_value_isValid && true;
}

} // namespace OpenAPI
