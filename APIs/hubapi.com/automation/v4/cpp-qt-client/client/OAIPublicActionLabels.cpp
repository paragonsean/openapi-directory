/**
 * Automation Actions V4
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicActionLabels.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicActionLabels::OAIPublicActionLabels(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicActionLabels::OAIPublicActionLabels() {
    this->initializeModel();
}

OAIPublicActionLabels::~OAIPublicActionLabels() {}

void OAIPublicActionLabels::initializeModel() {

    m_action_card_content_isSet = false;
    m_action_card_content_isValid = false;

    m_action_description_isSet = false;
    m_action_description_isValid = false;

    m_action_name_isSet = false;
    m_action_name_isValid = false;

    m_app_display_name_isSet = false;
    m_app_display_name_isValid = false;

    m_execution_rules_isSet = false;
    m_execution_rules_isValid = false;

    m_input_field_descriptions_isSet = false;
    m_input_field_descriptions_isValid = false;

    m_input_field_labels_isSet = false;
    m_input_field_labels_isValid = false;

    m_input_field_option_labels_isSet = false;
    m_input_field_option_labels_isValid = false;

    m_output_field_labels_isSet = false;
    m_output_field_labels_isValid = false;
}

void OAIPublicActionLabels::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicActionLabels::fromJsonObject(QJsonObject json) {

    m_action_card_content_isValid = ::OpenAPI::fromJsonValue(m_action_card_content, json[QString("actionCardContent")]);
    m_action_card_content_isSet = !json[QString("actionCardContent")].isNull() && m_action_card_content_isValid;

    m_action_description_isValid = ::OpenAPI::fromJsonValue(m_action_description, json[QString("actionDescription")]);
    m_action_description_isSet = !json[QString("actionDescription")].isNull() && m_action_description_isValid;

    m_action_name_isValid = ::OpenAPI::fromJsonValue(m_action_name, json[QString("actionName")]);
    m_action_name_isSet = !json[QString("actionName")].isNull() && m_action_name_isValid;

    m_app_display_name_isValid = ::OpenAPI::fromJsonValue(m_app_display_name, json[QString("appDisplayName")]);
    m_app_display_name_isSet = !json[QString("appDisplayName")].isNull() && m_app_display_name_isValid;

    m_execution_rules_isValid = ::OpenAPI::fromJsonValue(m_execution_rules, json[QString("executionRules")]);
    m_execution_rules_isSet = !json[QString("executionRules")].isNull() && m_execution_rules_isValid;

    m_input_field_descriptions_isValid = ::OpenAPI::fromJsonValue(m_input_field_descriptions, json[QString("inputFieldDescriptions")]);
    m_input_field_descriptions_isSet = !json[QString("inputFieldDescriptions")].isNull() && m_input_field_descriptions_isValid;

    m_input_field_labels_isValid = ::OpenAPI::fromJsonValue(m_input_field_labels, json[QString("inputFieldLabels")]);
    m_input_field_labels_isSet = !json[QString("inputFieldLabels")].isNull() && m_input_field_labels_isValid;

    if(json["inputFieldOptionLabels"].isObject()){
        auto varmap = json["inputFieldOptionLabels"].toObject().toVariantMap();
        m_input_field_option_labels_isValid = true;
        if(varmap.count() > 0){
            for(auto val : varmap.keys()){
                QMap<QString, QString> item;
                auto jval = QJsonValue::fromVariant(varmap.value(val));
                m_input_field_option_labels_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_input_field_option_labels_isSet &= !jval.isNull() && m_input_field_option_labels_isValid;
                m_input_field_option_labels.insert(m_input_field_option_labels.end(), val, item);
            }
        }
    }

    m_output_field_labels_isValid = ::OpenAPI::fromJsonValue(m_output_field_labels, json[QString("outputFieldLabels")]);
    m_output_field_labels_isSet = !json[QString("outputFieldLabels")].isNull() && m_output_field_labels_isValid;
}

QString OAIPublicActionLabels::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicActionLabels::asJsonObject() const {
    QJsonObject obj;
    if (m_action_card_content_isSet) {
        obj.insert(QString("actionCardContent"), ::OpenAPI::toJsonValue(m_action_card_content));
    }
    if (m_action_description_isSet) {
        obj.insert(QString("actionDescription"), ::OpenAPI::toJsonValue(m_action_description));
    }
    if (m_action_name_isSet) {
        obj.insert(QString("actionName"), ::OpenAPI::toJsonValue(m_action_name));
    }
    if (m_app_display_name_isSet) {
        obj.insert(QString("appDisplayName"), ::OpenAPI::toJsonValue(m_app_display_name));
    }
    if (m_execution_rules.size() > 0) {
        obj.insert(QString("executionRules"), ::OpenAPI::toJsonValue(m_execution_rules));
    }
    if (m_input_field_descriptions.size() > 0) {
        obj.insert(QString("inputFieldDescriptions"), ::OpenAPI::toJsonValue(m_input_field_descriptions));
    }
    if (m_input_field_labels.size() > 0) {
        obj.insert(QString("inputFieldLabels"), ::OpenAPI::toJsonValue(m_input_field_labels));
    }
    if (m_input_field_option_labels.size() > 0) {
        
        obj.insert(QString("inputFieldOptionLabels"), toJsonValue(m_input_field_option_labels));
    }
    if (m_output_field_labels.size() > 0) {
        obj.insert(QString("outputFieldLabels"), ::OpenAPI::toJsonValue(m_output_field_labels));
    }
    return obj;
}

QString OAIPublicActionLabels::getActionCardContent() const {
    return m_action_card_content;
}
void OAIPublicActionLabels::setActionCardContent(const QString &action_card_content) {
    m_action_card_content = action_card_content;
    m_action_card_content_isSet = true;
}

bool OAIPublicActionLabels::is_action_card_content_Set() const{
    return m_action_card_content_isSet;
}

bool OAIPublicActionLabels::is_action_card_content_Valid() const{
    return m_action_card_content_isValid;
}

QString OAIPublicActionLabels::getActionDescription() const {
    return m_action_description;
}
void OAIPublicActionLabels::setActionDescription(const QString &action_description) {
    m_action_description = action_description;
    m_action_description_isSet = true;
}

bool OAIPublicActionLabels::is_action_description_Set() const{
    return m_action_description_isSet;
}

bool OAIPublicActionLabels::is_action_description_Valid() const{
    return m_action_description_isValid;
}

QString OAIPublicActionLabels::getActionName() const {
    return m_action_name;
}
void OAIPublicActionLabels::setActionName(const QString &action_name) {
    m_action_name = action_name;
    m_action_name_isSet = true;
}

bool OAIPublicActionLabels::is_action_name_Set() const{
    return m_action_name_isSet;
}

bool OAIPublicActionLabels::is_action_name_Valid() const{
    return m_action_name_isValid;
}

QString OAIPublicActionLabels::getAppDisplayName() const {
    return m_app_display_name;
}
void OAIPublicActionLabels::setAppDisplayName(const QString &app_display_name) {
    m_app_display_name = app_display_name;
    m_app_display_name_isSet = true;
}

bool OAIPublicActionLabels::is_app_display_name_Set() const{
    return m_app_display_name_isSet;
}

bool OAIPublicActionLabels::is_app_display_name_Valid() const{
    return m_app_display_name_isValid;
}

QMap<QString, QString> OAIPublicActionLabels::getExecutionRules() const {
    return m_execution_rules;
}
void OAIPublicActionLabels::setExecutionRules(const QMap<QString, QString> &execution_rules) {
    m_execution_rules = execution_rules;
    m_execution_rules_isSet = true;
}

bool OAIPublicActionLabels::is_execution_rules_Set() const{
    return m_execution_rules_isSet;
}

bool OAIPublicActionLabels::is_execution_rules_Valid() const{
    return m_execution_rules_isValid;
}

QMap<QString, QString> OAIPublicActionLabels::getInputFieldDescriptions() const {
    return m_input_field_descriptions;
}
void OAIPublicActionLabels::setInputFieldDescriptions(const QMap<QString, QString> &input_field_descriptions) {
    m_input_field_descriptions = input_field_descriptions;
    m_input_field_descriptions_isSet = true;
}

bool OAIPublicActionLabels::is_input_field_descriptions_Set() const{
    return m_input_field_descriptions_isSet;
}

bool OAIPublicActionLabels::is_input_field_descriptions_Valid() const{
    return m_input_field_descriptions_isValid;
}

QMap<QString, QString> OAIPublicActionLabels::getInputFieldLabels() const {
    return m_input_field_labels;
}
void OAIPublicActionLabels::setInputFieldLabels(const QMap<QString, QString> &input_field_labels) {
    m_input_field_labels = input_field_labels;
    m_input_field_labels_isSet = true;
}

bool OAIPublicActionLabels::is_input_field_labels_Set() const{
    return m_input_field_labels_isSet;
}

bool OAIPublicActionLabels::is_input_field_labels_Valid() const{
    return m_input_field_labels_isValid;
}

QMap<QString, QMap<QString, QString>> OAIPublicActionLabels::getInputFieldOptionLabels() const {
    return m_input_field_option_labels;
}
void OAIPublicActionLabels::setInputFieldOptionLabels(const QMap<QString, QMap<QString, QString>> &input_field_option_labels) {
    m_input_field_option_labels = input_field_option_labels;
    m_input_field_option_labels_isSet = true;
}

bool OAIPublicActionLabels::is_input_field_option_labels_Set() const{
    return m_input_field_option_labels_isSet;
}

bool OAIPublicActionLabels::is_input_field_option_labels_Valid() const{
    return m_input_field_option_labels_isValid;
}

QMap<QString, QString> OAIPublicActionLabels::getOutputFieldLabels() const {
    return m_output_field_labels;
}
void OAIPublicActionLabels::setOutputFieldLabels(const QMap<QString, QString> &output_field_labels) {
    m_output_field_labels = output_field_labels;
    m_output_field_labels_isSet = true;
}

bool OAIPublicActionLabels::is_output_field_labels_Set() const{
    return m_output_field_labels_isSet;
}

bool OAIPublicActionLabels::is_output_field_labels_Valid() const{
    return m_output_field_labels_isValid;
}

bool OAIPublicActionLabels::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_card_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_field_descriptions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_field_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_field_option_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_field_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicActionLabels::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_name_isValid && true;
}

} // namespace OpenAPI
