/**
 * Automation Actions V4
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublicActionRevision.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublicActionRevision::OAIPublicActionRevision(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublicActionRevision::OAIPublicActionRevision() {
    this->initializeModel();
}

OAIPublicActionRevision::~OAIPublicActionRevision() {}

void OAIPublicActionRevision::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;
}

void OAIPublicActionRevision::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublicActionRevision::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;
}

QString OAIPublicActionRevision::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublicActionRevision::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_definition.isSet()) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    return obj;
}

QDateTime OAIPublicActionRevision::getCreatedAt() const {
    return m_created_at;
}
void OAIPublicActionRevision::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIPublicActionRevision::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIPublicActionRevision::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIPublicActionDefinition OAIPublicActionRevision::getDefinition() const {
    return m_definition;
}
void OAIPublicActionRevision::setDefinition(const OAIPublicActionDefinition &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAIPublicActionRevision::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIPublicActionRevision::is_definition_Valid() const{
    return m_definition_isValid;
}

QString OAIPublicActionRevision::getId() const {
    return m_id;
}
void OAIPublicActionRevision::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPublicActionRevision::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPublicActionRevision::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPublicActionRevision::getRevisionId() const {
    return m_revision_id;
}
void OAIPublicActionRevision::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIPublicActionRevision::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIPublicActionRevision::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

bool OAIPublicActionRevision::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublicActionRevision::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_definition_isValid && m_id_isValid && m_revision_id_isValid && true;
}

} // namespace OpenAPI
