/*
 * Events
 * API for accessing CRM object events.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CollectionResponseExternalUnifiedEvent;
import org.openapitools.client.model.Error;
import java.time.OffsetDateTime;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EventsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public EventsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EventsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getEventsV3EventsGetPage
     * @param objectType  (optional)
     * @param eventType  (optional)
     * @param occurredAfter  (optional)
     * @param occurredBefore  (optional)
     * @param objectId  (optional)
     * @param indexTableName  (optional)
     * @param indexSpecificMetadata  (optional)
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)
     * @param before  (optional)
     * @param limit The maximum number of results to display per page. (optional)
     * @param sort  (optional)
     * @param objectPropertyLeftCurlyBracketPropnameRightCurlyBracket  (optional)
     * @param propertyLeftCurlyBracketPropnameRightCurlyBracket  (optional)
     * @param id  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventsV3EventsGetPageCall(String objectType, String eventType, OffsetDateTime occurredAfter, OffsetDateTime occurredBefore, Long objectId, String indexTableName, String indexSpecificMetadata, String after, String before, Integer limit, List<String> sort, Object objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, Object propertyLeftCurlyBracketPropnameRightCurlyBracket, List<String> id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/events/v3/events/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (objectType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("objectType", objectType));
        }

        if (eventType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventType", eventType));
        }

        if (occurredAfter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("occurredAfter", occurredAfter));
        }

        if (occurredBefore != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("occurredBefore", occurredBefore));
        }

        if (objectId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("objectId", objectId));
        }

        if (indexTableName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("indexTableName", indexTableName));
        }

        if (indexSpecificMetadata != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("indexSpecificMetadata", indexSpecificMetadata));
        }

        if (after != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("after", after));
        }

        if (before != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("before", before));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (sort != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "sort", sort));
        }

        if (objectPropertyLeftCurlyBracketPropnameRightCurlyBracket != null) {
            localVarQueryParams.addAll(localVarApiClient.freeFormParameterToPairs(objectPropertyLeftCurlyBracketPropnameRightCurlyBracket));
        }

        if (propertyLeftCurlyBracketPropnameRightCurlyBracket != null) {
            localVarQueryParams.addAll(localVarApiClient.freeFormParameterToPairs(propertyLeftCurlyBracketPropnameRightCurlyBracket));
        }

        if (id != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "id", id));
        }

        final String[] localVarAccepts = {
            "application/json",
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2_legacy", "private_apps_legacy" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getEventsV3EventsGetPageValidateBeforeCall(String objectType, String eventType, OffsetDateTime occurredAfter, OffsetDateTime occurredBefore, Long objectId, String indexTableName, String indexSpecificMetadata, String after, String before, Integer limit, List<String> sort, Object objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, Object propertyLeftCurlyBracketPropnameRightCurlyBracket, List<String> id, final ApiCallback _callback) throws ApiException {
        return getEventsV3EventsGetPageCall(objectType, eventType, occurredAfter, occurredBefore, objectId, indexTableName, indexSpecificMetadata, after, before, limit, sort, objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, propertyLeftCurlyBracketPropnameRightCurlyBracket, id, _callback);

    }

    /**
     * 
     * 
     * @param objectType  (optional)
     * @param eventType  (optional)
     * @param occurredAfter  (optional)
     * @param occurredBefore  (optional)
     * @param objectId  (optional)
     * @param indexTableName  (optional)
     * @param indexSpecificMetadata  (optional)
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)
     * @param before  (optional)
     * @param limit The maximum number of results to display per page. (optional)
     * @param sort  (optional)
     * @param objectPropertyLeftCurlyBracketPropnameRightCurlyBracket  (optional)
     * @param propertyLeftCurlyBracketPropnameRightCurlyBracket  (optional)
     * @param id  (optional)
     * @return CollectionResponseExternalUnifiedEvent
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public CollectionResponseExternalUnifiedEvent getEventsV3EventsGetPage(String objectType, String eventType, OffsetDateTime occurredAfter, OffsetDateTime occurredBefore, Long objectId, String indexTableName, String indexSpecificMetadata, String after, String before, Integer limit, List<String> sort, Object objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, Object propertyLeftCurlyBracketPropnameRightCurlyBracket, List<String> id) throws ApiException {
        ApiResponse<CollectionResponseExternalUnifiedEvent> localVarResp = getEventsV3EventsGetPageWithHttpInfo(objectType, eventType, occurredAfter, occurredBefore, objectId, indexTableName, indexSpecificMetadata, after, before, limit, sort, objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, propertyLeftCurlyBracketPropnameRightCurlyBracket, id);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param objectType  (optional)
     * @param eventType  (optional)
     * @param occurredAfter  (optional)
     * @param occurredBefore  (optional)
     * @param objectId  (optional)
     * @param indexTableName  (optional)
     * @param indexSpecificMetadata  (optional)
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)
     * @param before  (optional)
     * @param limit The maximum number of results to display per page. (optional)
     * @param sort  (optional)
     * @param objectPropertyLeftCurlyBracketPropnameRightCurlyBracket  (optional)
     * @param propertyLeftCurlyBracketPropnameRightCurlyBracket  (optional)
     * @param id  (optional)
     * @return ApiResponse&lt;CollectionResponseExternalUnifiedEvent&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CollectionResponseExternalUnifiedEvent> getEventsV3EventsGetPageWithHttpInfo(String objectType, String eventType, OffsetDateTime occurredAfter, OffsetDateTime occurredBefore, Long objectId, String indexTableName, String indexSpecificMetadata, String after, String before, Integer limit, List<String> sort, Object objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, Object propertyLeftCurlyBracketPropnameRightCurlyBracket, List<String> id) throws ApiException {
        okhttp3.Call localVarCall = getEventsV3EventsGetPageValidateBeforeCall(objectType, eventType, occurredAfter, occurredBefore, objectId, indexTableName, indexSpecificMetadata, after, before, limit, sort, objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, propertyLeftCurlyBracketPropnameRightCurlyBracket, id, null);
        Type localVarReturnType = new TypeToken<CollectionResponseExternalUnifiedEvent>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param objectType  (optional)
     * @param eventType  (optional)
     * @param occurredAfter  (optional)
     * @param occurredBefore  (optional)
     * @param objectId  (optional)
     * @param indexTableName  (optional)
     * @param indexSpecificMetadata  (optional)
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)
     * @param before  (optional)
     * @param limit The maximum number of results to display per page. (optional)
     * @param sort  (optional)
     * @param objectPropertyLeftCurlyBracketPropnameRightCurlyBracket  (optional)
     * @param propertyLeftCurlyBracketPropnameRightCurlyBracket  (optional)
     * @param id  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventsV3EventsGetPageAsync(String objectType, String eventType, OffsetDateTime occurredAfter, OffsetDateTime occurredBefore, Long objectId, String indexTableName, String indexSpecificMetadata, String after, String before, Integer limit, List<String> sort, Object objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, Object propertyLeftCurlyBracketPropnameRightCurlyBracket, List<String> id, final ApiCallback<CollectionResponseExternalUnifiedEvent> _callback) throws ApiException {

        okhttp3.Call localVarCall = getEventsV3EventsGetPageValidateBeforeCall(objectType, eventType, occurredAfter, occurredBefore, objectId, indexTableName, indexSpecificMetadata, after, before, limit, sort, objectPropertyLeftCurlyBracketPropnameRightCurlyBracket, propertyLeftCurlyBracketPropnameRightCurlyBracket, id, _callback);
        Type localVarReturnType = new TypeToken<CollectionResponseExternalUnifiedEvent>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
