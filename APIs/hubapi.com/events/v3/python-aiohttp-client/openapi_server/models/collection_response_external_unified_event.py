# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.external_unified_event import ExternalUnifiedEvent
from openapi_server.models.paging import Paging
from openapi_server import util


class CollectionResponseExternalUnifiedEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, paging: Paging=None, results: List[ExternalUnifiedEvent]=None):
        """CollectionResponseExternalUnifiedEvent - a model defined in OpenAPI

        :param paging: The paging of this CollectionResponseExternalUnifiedEvent.
        :param results: The results of this CollectionResponseExternalUnifiedEvent.
        """
        self.openapi_types = {
            'paging': Paging,
            'results': List[ExternalUnifiedEvent]
        }

        self.attribute_map = {
            'paging': 'paging',
            'results': 'results'
        }

        self._paging = paging
        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CollectionResponseExternalUnifiedEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CollectionResponseExternalUnifiedEvent of this CollectionResponseExternalUnifiedEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paging(self):
        """Gets the paging of this CollectionResponseExternalUnifiedEvent.


        :return: The paging of this CollectionResponseExternalUnifiedEvent.
        :rtype: Paging
        """
        return self._paging

    @paging.setter
    def paging(self, paging):
        """Sets the paging of this CollectionResponseExternalUnifiedEvent.


        :param paging: The paging of this CollectionResponseExternalUnifiedEvent.
        :type paging: Paging
        """

        self._paging = paging

    @property
    def results(self):
        """Gets the results of this CollectionResponseExternalUnifiedEvent.

        

        :return: The results of this CollectionResponseExternalUnifiedEvent.
        :rtype: List[ExternalUnifiedEvent]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this CollectionResponseExternalUnifiedEvent.

        

        :param results: The results of this CollectionResponseExternalUnifiedEvent.
        :type results: List[ExternalUnifiedEvent]
        """
        if results is None:
            raise ValueError("Invalid value for `results`, must not be `None`")

        self._results = results
