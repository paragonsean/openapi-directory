# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NextPage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, after: str=None, link: str=None):
        """NextPage - a model defined in OpenAPI

        :param after: The after of this NextPage.
        :param link: The link of this NextPage.
        """
        self.openapi_types = {
            'after': str,
            'link': str
        }

        self.attribute_map = {
            'after': 'after',
            'link': 'link'
        }

        self._after = after
        self._link = link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NextPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NextPage of this NextPage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def after(self):
        """Gets the after of this NextPage.

        

        :return: The after of this NextPage.
        :rtype: str
        """
        return self._after

    @after.setter
    def after(self, after):
        """Sets the after of this NextPage.

        

        :param after: The after of this NextPage.
        :type after: str
        """
        if after is None:
            raise ValueError("Invalid value for `after`, must not be `None`")

        self._after = after

    @property
    def link(self):
        """Gets the link of this NextPage.

        

        :return: The link of this NextPage.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this NextPage.

        

        :param link: The link of this NextPage.
        :type link: str
        """

        self._link = link
