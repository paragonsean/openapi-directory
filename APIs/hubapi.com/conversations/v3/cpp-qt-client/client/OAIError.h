/**
 * Visitor Identification
 * The Visitor Identification API allows you to pass identification information to the HubSpot chat widget for otherwise unknown visitors that were verified by your own authentication system.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIError.h
 *
 * 
 */

#ifndef OAIError_H
#define OAIError_H

#include <QJsonObject>

#include "OAIErrorDetail.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrorDetail;

class OAIError : public OAIObject {
public:
    OAIError();
    OAIError(QString json);
    ~OAIError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QMap<QString, QList<QString>> getContext() const;
    void setContext(const QMap<QString, QList<QString>> &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QString getCorrelationId() const;
    void setCorrelationId(const QString &correlation_id);
    bool is_correlation_id_Set() const;
    bool is_correlation_id_Valid() const;

    QList<OAIErrorDetail> getErrors() const;
    void setErrors(const QList<OAIErrorDetail> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QMap<QString, QString> getLinks() const;
    void setLinks(const QMap<QString, QString> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getSubCategory() const;
    void setSubCategory(const QString &sub_category);
    bool is_sub_category_Set() const;
    bool is_sub_category_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QMap<QString, QList<QString>> m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QString m_correlation_id;
    bool m_correlation_id_isSet;
    bool m_correlation_id_isValid;

    QList<OAIErrorDetail> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QMap<QString, QString> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_sub_category;
    bool m_sub_category_isSet;
    bool m_sub_category_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIError)

#endif // OAIError_H
