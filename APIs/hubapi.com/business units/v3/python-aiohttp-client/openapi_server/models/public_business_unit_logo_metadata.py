# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicBusinessUnitLogoMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, logo_alt_text: str=None, logo_url: str=None, resized_url: str=None):
        """PublicBusinessUnitLogoMetadata - a model defined in OpenAPI

        :param logo_alt_text: The logo_alt_text of this PublicBusinessUnitLogoMetadata.
        :param logo_url: The logo_url of this PublicBusinessUnitLogoMetadata.
        :param resized_url: The resized_url of this PublicBusinessUnitLogoMetadata.
        """
        self.openapi_types = {
            'logo_alt_text': str,
            'logo_url': str,
            'resized_url': str
        }

        self.attribute_map = {
            'logo_alt_text': 'logoAltText',
            'logo_url': 'logoUrl',
            'resized_url': 'resizedUrl'
        }

        self._logo_alt_text = logo_alt_text
        self._logo_url = logo_url
        self._resized_url = resized_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicBusinessUnitLogoMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicBusinessUnitLogoMetadata of this PublicBusinessUnitLogoMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def logo_alt_text(self):
        """Gets the logo_alt_text of this PublicBusinessUnitLogoMetadata.

        The logo's alt text

        :return: The logo_alt_text of this PublicBusinessUnitLogoMetadata.
        :rtype: str
        """
        return self._logo_alt_text

    @logo_alt_text.setter
    def logo_alt_text(self, logo_alt_text):
        """Sets the logo_alt_text of this PublicBusinessUnitLogoMetadata.

        The logo's alt text

        :param logo_alt_text: The logo_alt_text of this PublicBusinessUnitLogoMetadata.
        :type logo_alt_text: str
        """

        self._logo_alt_text = logo_alt_text

    @property
    def logo_url(self):
        """Gets the logo_url of this PublicBusinessUnitLogoMetadata.

        The logo's url

        :return: The logo_url of this PublicBusinessUnitLogoMetadata.
        :rtype: str
        """
        return self._logo_url

    @logo_url.setter
    def logo_url(self, logo_url):
        """Sets the logo_url of this PublicBusinessUnitLogoMetadata.

        The logo's url

        :param logo_url: The logo_url of this PublicBusinessUnitLogoMetadata.
        :type logo_url: str
        """

        self._logo_url = logo_url

    @property
    def resized_url(self):
        """Gets the resized_url of this PublicBusinessUnitLogoMetadata.

        The logo's resized url

        :return: The resized_url of this PublicBusinessUnitLogoMetadata.
        :rtype: str
        """
        return self._resized_url

    @resized_url.setter
    def resized_url(self, resized_url):
        """Sets the resized_url of this PublicBusinessUnitLogoMetadata.

        The logo's resized url

        :param resized_url: The resized_url of this PublicBusinessUnitLogoMetadata.
        :type resized_url: str
        """

        self._resized_url = resized_url
