/**
 * Business Units
 * Retrieve Business Unit information.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PublicBusinessUnitLogoMetadata from './PublicBusinessUnitLogoMetadata';

/**
 * The PublicBusinessUnit model module.
 * @module model/PublicBusinessUnit
 * @version v3
 */
class PublicBusinessUnit {
    /**
     * Constructs a new <code>PublicBusinessUnit</code>.
     * A Business Unit
     * @alias module:model/PublicBusinessUnit
     * @param id {String} The Business Unit's unique ID
     * @param name {String} The Business Unit's name
     */
    constructor(id, name) { 
        
        PublicBusinessUnit.initialize(this, id, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name) { 
        obj['id'] = id;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>PublicBusinessUnit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublicBusinessUnit} obj Optional instance to populate.
     * @return {module:model/PublicBusinessUnit} The populated <code>PublicBusinessUnit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublicBusinessUnit();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('logoMetadata')) {
                obj['logoMetadata'] = PublicBusinessUnitLogoMetadata.constructFromObject(data['logoMetadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublicBusinessUnit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublicBusinessUnit</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PublicBusinessUnit.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `logoMetadata`
        if (data['logoMetadata']) { // data not null
          PublicBusinessUnitLogoMetadata.validateJSON(data['logoMetadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

PublicBusinessUnit.RequiredProperties = ["id", "name"];

/**
 * The Business Unit's unique ID
 * @member {String} id
 */
PublicBusinessUnit.prototype['id'] = undefined;

/**
 * @member {module:model/PublicBusinessUnitLogoMetadata} logoMetadata
 */
PublicBusinessUnit.prototype['logoMetadata'] = undefined;

/**
 * The Business Unit's name
 * @member {String} name
 */
PublicBusinessUnit.prototype['name'] = undefined;






export default PublicBusinessUnit;

