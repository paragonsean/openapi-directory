/**
 * Business Units
 * Retrieve Business Unit information.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublicBusinessUnitLogoMetadata model module.
 * @module model/PublicBusinessUnitLogoMetadata
 * @version v3
 */
class PublicBusinessUnitLogoMetadata {
    /**
     * Constructs a new <code>PublicBusinessUnitLogoMetadata</code>.
     * A Business Unit&#39;s logo metadata
     * @alias module:model/PublicBusinessUnitLogoMetadata
     */
    constructor() { 
        
        PublicBusinessUnitLogoMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PublicBusinessUnitLogoMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublicBusinessUnitLogoMetadata} obj Optional instance to populate.
     * @return {module:model/PublicBusinessUnitLogoMetadata} The populated <code>PublicBusinessUnitLogoMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublicBusinessUnitLogoMetadata();

            if (data.hasOwnProperty('logoAltText')) {
                obj['logoAltText'] = ApiClient.convertToType(data['logoAltText'], 'String');
            }
            if (data.hasOwnProperty('logoUrl')) {
                obj['logoUrl'] = ApiClient.convertToType(data['logoUrl'], 'String');
            }
            if (data.hasOwnProperty('resizedUrl')) {
                obj['resizedUrl'] = ApiClient.convertToType(data['resizedUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublicBusinessUnitLogoMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublicBusinessUnitLogoMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['logoAltText'] && !(typeof data['logoAltText'] === 'string' || data['logoAltText'] instanceof String)) {
            throw new Error("Expected the field `logoAltText` to be a primitive type in the JSON string but got " + data['logoAltText']);
        }
        // ensure the json data is a string
        if (data['logoUrl'] && !(typeof data['logoUrl'] === 'string' || data['logoUrl'] instanceof String)) {
            throw new Error("Expected the field `logoUrl` to be a primitive type in the JSON string but got " + data['logoUrl']);
        }
        // ensure the json data is a string
        if (data['resizedUrl'] && !(typeof data['resizedUrl'] === 'string' || data['resizedUrl'] instanceof String)) {
            throw new Error("Expected the field `resizedUrl` to be a primitive type in the JSON string but got " + data['resizedUrl']);
        }

        return true;
    }


}



/**
 * The logo's alt text
 * @member {String} logoAltText
 */
PublicBusinessUnitLogoMetadata.prototype['logoAltText'] = undefined;

/**
 * The logo's url
 * @member {String} logoUrl
 */
PublicBusinessUnitLogoMetadata.prototype['logoUrl'] = undefined;

/**
 * The logo's resized url
 * @member {String} resizedUrl
 */
PublicBusinessUnitLogoMetadata.prototype['resizedUrl'] = undefined;






export default PublicBusinessUnitLogoMetadata;

