/*
 * CMS Domains
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CollectionResponseWithTotalDomainForwardPaging;
import org.openapitools.client.model.Domain;
import org.openapitools.client.model.Error;
import java.time.OffsetDateTime;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DomainsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DomainsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DomainsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getCmsV3DomainsDomainIdGetById
     * @param domainId The unique ID of the domain. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCmsV3DomainsDomainIdGetByIdCall(String domainId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/cms/v3/domains/{domainId}"
            .replace("{" + "domainId" + "}", localVarApiClient.escapeString(domainId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2_legacy", "private_apps_legacy", "oauth2", "private_apps" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCmsV3DomainsDomainIdGetByIdValidateBeforeCall(String domainId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'domainId' is set
        if (domainId == null) {
            throw new ApiException("Missing the required parameter 'domainId' when calling getCmsV3DomainsDomainIdGetById(Async)");
        }

        return getCmsV3DomainsDomainIdGetByIdCall(domainId, _callback);

    }

    /**
     * Get a single domain
     * Returns a single domains with the id specified.
     * @param domainId The unique ID of the domain. (required)
     * @return Domain
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public Domain getCmsV3DomainsDomainIdGetById(String domainId) throws ApiException {
        ApiResponse<Domain> localVarResp = getCmsV3DomainsDomainIdGetByIdWithHttpInfo(domainId);
        return localVarResp.getData();
    }

    /**
     * Get a single domain
     * Returns a single domains with the id specified.
     * @param domainId The unique ID of the domain. (required)
     * @return ApiResponse&lt;Domain&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Domain> getCmsV3DomainsDomainIdGetByIdWithHttpInfo(String domainId) throws ApiException {
        okhttp3.Call localVarCall = getCmsV3DomainsDomainIdGetByIdValidateBeforeCall(domainId, null);
        Type localVarReturnType = new TypeToken<Domain>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a single domain (asynchronously)
     * Returns a single domains with the id specified.
     * @param domainId The unique ID of the domain. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCmsV3DomainsDomainIdGetByIdAsync(String domainId, final ApiCallback<Domain> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCmsV3DomainsDomainIdGetByIdValidateBeforeCall(domainId, _callback);
        Type localVarReturnType = new TypeToken<Domain>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getCmsV3DomainsGetPage
     * @param createdAt Only return domains created at this date. (optional)
     * @param createdAfter Only return domains created after this date. (optional)
     * @param createdBefore Only return domains created before this date. (optional)
     * @param updatedAt Only return domains updated at this date. (optional)
     * @param updatedAfter Only return domains updated after this date. (optional)
     * @param updatedBefore Only return domains updated before this date. (optional)
     * @param sort  (optional)
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)
     * @param limit Maximum number of results per page. (optional)
     * @param archived Whether to return only results that have been archived. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCmsV3DomainsGetPageCall(OffsetDateTime createdAt, OffsetDateTime createdAfter, OffsetDateTime createdBefore, OffsetDateTime updatedAt, OffsetDateTime updatedAfter, OffsetDateTime updatedBefore, List<String> sort, String after, Integer limit, Boolean archived, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/cms/v3/domains/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (createdAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("createdAt", createdAt));
        }

        if (createdAfter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("createdAfter", createdAfter));
        }

        if (createdBefore != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("createdBefore", createdBefore));
        }

        if (updatedAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedAt", updatedAt));
        }

        if (updatedAfter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedAfter", updatedAfter));
        }

        if (updatedBefore != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedBefore", updatedBefore));
        }

        if (sort != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "sort", sort));
        }

        if (after != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("after", after));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (archived != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("archived", archived));
        }

        final String[] localVarAccepts = {
            "application/json",
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2_legacy", "private_apps_legacy", "oauth2", "private_apps" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCmsV3DomainsGetPageValidateBeforeCall(OffsetDateTime createdAt, OffsetDateTime createdAfter, OffsetDateTime createdBefore, OffsetDateTime updatedAt, OffsetDateTime updatedAfter, OffsetDateTime updatedBefore, List<String> sort, String after, Integer limit, Boolean archived, final ApiCallback _callback) throws ApiException {
        return getCmsV3DomainsGetPageCall(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, after, limit, archived, _callback);

    }

    /**
     * Get current domains
     * Returns all existing domains that have been created. Results can be limited and filtered by creation or updated date.
     * @param createdAt Only return domains created at this date. (optional)
     * @param createdAfter Only return domains created after this date. (optional)
     * @param createdBefore Only return domains created before this date. (optional)
     * @param updatedAt Only return domains updated at this date. (optional)
     * @param updatedAfter Only return domains updated after this date. (optional)
     * @param updatedBefore Only return domains updated before this date. (optional)
     * @param sort  (optional)
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)
     * @param limit Maximum number of results per page. (optional)
     * @param archived Whether to return only results that have been archived. (optional)
     * @return CollectionResponseWithTotalDomainForwardPaging
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public CollectionResponseWithTotalDomainForwardPaging getCmsV3DomainsGetPage(OffsetDateTime createdAt, OffsetDateTime createdAfter, OffsetDateTime createdBefore, OffsetDateTime updatedAt, OffsetDateTime updatedAfter, OffsetDateTime updatedBefore, List<String> sort, String after, Integer limit, Boolean archived) throws ApiException {
        ApiResponse<CollectionResponseWithTotalDomainForwardPaging> localVarResp = getCmsV3DomainsGetPageWithHttpInfo(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, after, limit, archived);
        return localVarResp.getData();
    }

    /**
     * Get current domains
     * Returns all existing domains that have been created. Results can be limited and filtered by creation or updated date.
     * @param createdAt Only return domains created at this date. (optional)
     * @param createdAfter Only return domains created after this date. (optional)
     * @param createdBefore Only return domains created before this date. (optional)
     * @param updatedAt Only return domains updated at this date. (optional)
     * @param updatedAfter Only return domains updated after this date. (optional)
     * @param updatedBefore Only return domains updated before this date. (optional)
     * @param sort  (optional)
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)
     * @param limit Maximum number of results per page. (optional)
     * @param archived Whether to return only results that have been archived. (optional)
     * @return ApiResponse&lt;CollectionResponseWithTotalDomainForwardPaging&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CollectionResponseWithTotalDomainForwardPaging> getCmsV3DomainsGetPageWithHttpInfo(OffsetDateTime createdAt, OffsetDateTime createdAfter, OffsetDateTime createdBefore, OffsetDateTime updatedAt, OffsetDateTime updatedAfter, OffsetDateTime updatedBefore, List<String> sort, String after, Integer limit, Boolean archived) throws ApiException {
        okhttp3.Call localVarCall = getCmsV3DomainsGetPageValidateBeforeCall(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, after, limit, archived, null);
        Type localVarReturnType = new TypeToken<CollectionResponseWithTotalDomainForwardPaging>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get current domains (asynchronously)
     * Returns all existing domains that have been created. Results can be limited and filtered by creation or updated date.
     * @param createdAt Only return domains created at this date. (optional)
     * @param createdAfter Only return domains created after this date. (optional)
     * @param createdBefore Only return domains created before this date. (optional)
     * @param updatedAt Only return domains updated at this date. (optional)
     * @param updatedAfter Only return domains updated after this date. (optional)
     * @param updatedBefore Only return domains updated before this date. (optional)
     * @param sort  (optional)
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)
     * @param limit Maximum number of results per page. (optional)
     * @param archived Whether to return only results that have been archived. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCmsV3DomainsGetPageAsync(OffsetDateTime createdAt, OffsetDateTime createdAfter, OffsetDateTime createdBefore, OffsetDateTime updatedAt, OffsetDateTime updatedAfter, OffsetDateTime updatedBefore, List<String> sort, String after, Integer limit, Boolean archived, final ApiCallback<CollectionResponseWithTotalDomainForwardPaging> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCmsV3DomainsGetPageValidateBeforeCall(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, after, limit, archived, _callback);
        Type localVarReturnType = new TypeToken<CollectionResponseWithTotalDomainForwardPaging>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
