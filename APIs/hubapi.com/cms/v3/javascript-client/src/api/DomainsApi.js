/**
 * CMS Domains
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CollectionResponseWithTotalDomainForwardPaging from '../model/CollectionResponseWithTotalDomainForwardPaging';
import Domain from '../model/Domain';
import Error from '../model/Error';

/**
* Domains service.
* @module api/DomainsApi
* @version v3
*/
export default class DomainsApi {

    /**
    * Constructs a new DomainsApi. 
    * @alias module:api/DomainsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCmsV3DomainsDomainIdGetById operation.
     * @callback module:api/DomainsApi~getCmsV3DomainsDomainIdGetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Domain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single domain
     * Returns a single domains with the id specified.
     * @param {String} domainId The unique ID of the domain.
     * @param {module:api/DomainsApi~getCmsV3DomainsDomainIdGetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Domain}
     */
    getCmsV3DomainsDomainIdGetById(domainId, callback) {
      let postBody = null;
      // verify the required parameter 'domainId' is set
      if (domainId === undefined || domainId === null) {
        throw new Error("Missing the required parameter 'domainId' when calling getCmsV3DomainsDomainIdGetById");
      }

      let pathParams = {
        'domainId': domainId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_legacy', 'private_apps_legacy', 'oauth2', 'private_apps'];
      let contentTypes = [];
      let accepts = ['application/json', '*/*'];
      let returnType = Domain;
      return this.apiClient.callApi(
        '/cms/v3/domains/{domainId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCmsV3DomainsGetPage operation.
     * @callback module:api/DomainsApi~getCmsV3DomainsGetPageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CollectionResponseWithTotalDomainForwardPaging} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get current domains
     * Returns all existing domains that have been created. Results can be limited and filtered by creation or updated date.
     * @param {Object} opts Optional parameters
     * @param {Date} [createdAt] Only return domains created at this date.
     * @param {Date} [createdAfter] Only return domains created after this date.
     * @param {Date} [createdBefore] Only return domains created before this date.
     * @param {Date} [updatedAt] Only return domains updated at this date.
     * @param {Date} [updatedAfter] Only return domains updated after this date.
     * @param {Date} [updatedBefore] Only return domains updated before this date.
     * @param {Array.<String>} [sort] 
     * @param {String} [after] The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.
     * @param {Number} [limit] Maximum number of results per page.
     * @param {Boolean} [archived] Whether to return only results that have been archived.
     * @param {module:api/DomainsApi~getCmsV3DomainsGetPageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CollectionResponseWithTotalDomainForwardPaging}
     */
    getCmsV3DomainsGetPage(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'createdAt': opts['createdAt'],
        'createdAfter': opts['createdAfter'],
        'createdBefore': opts['createdBefore'],
        'updatedAt': opts['updatedAt'],
        'updatedAfter': opts['updatedAfter'],
        'updatedBefore': opts['updatedBefore'],
        'sort': this.apiClient.buildCollectionParam(opts['sort'], 'multi'),
        'after': opts['after'],
        'limit': opts['limit'],
        'archived': opts['archived']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_legacy', 'private_apps_legacy', 'oauth2', 'private_apps'];
      let contentTypes = [];
      let accepts = ['application/json', '*/*'];
      let returnType = CollectionResponseWithTotalDomainForwardPaging;
      return this.apiClient.callApi(
        '/cms/v3/domains/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
