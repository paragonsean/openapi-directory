/**
 * CMS Domains
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomain.h
 *
 * 
 */

#ifndef OAIDomain_H
#define OAIDomain_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDomain : public OAIObject {
public:
    OAIDomain();
    OAIDomain(QString json);
    ~OAIDomain() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCorrectCname() const;
    void setCorrectCname(const QString &correct_cname);
    bool is_correct_cname_Set() const;
    bool is_correct_cname_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsResolving() const;
    void setIsResolving(const bool &is_resolving);
    bool is_is_resolving_Set() const;
    bool is_is_resolving_Valid() const;

    bool isIsSslEnabled() const;
    void setIsSslEnabled(const bool &is_ssl_enabled);
    bool is_is_ssl_enabled_Set() const;
    bool is_is_ssl_enabled_Valid() const;

    bool isIsSslOnly() const;
    void setIsSslOnly(const bool &is_ssl_only);
    bool is_is_ssl_only_Set() const;
    bool is_is_ssl_only_Valid() const;

    bool isIsUsedForBlogPost() const;
    void setIsUsedForBlogPost(const bool &is_used_for_blog_post);
    bool is_is_used_for_blog_post_Set() const;
    bool is_is_used_for_blog_post_Valid() const;

    bool isIsUsedForEmail() const;
    void setIsUsedForEmail(const bool &is_used_for_email);
    bool is_is_used_for_email_Set() const;
    bool is_is_used_for_email_Valid() const;

    bool isIsUsedForKnowledge() const;
    void setIsUsedForKnowledge(const bool &is_used_for_knowledge);
    bool is_is_used_for_knowledge_Set() const;
    bool is_is_used_for_knowledge_Valid() const;

    bool isIsUsedForLandingPage() const;
    void setIsUsedForLandingPage(const bool &is_used_for_landing_page);
    bool is_is_used_for_landing_page_Set() const;
    bool is_is_used_for_landing_page_Valid() const;

    bool isIsUsedForSitePage() const;
    void setIsUsedForSitePage(const bool &is_used_for_site_page);
    bool is_is_used_for_site_page_Set() const;
    bool is_is_used_for_site_page_Valid() const;

    bool isManuallyMarkedAsResolving() const;
    void setManuallyMarkedAsResolving(const bool &manually_marked_as_resolving);
    bool is_manually_marked_as_resolving_Set() const;
    bool is_manually_marked_as_resolving_Valid() const;

    bool isPrimaryBlogPost() const;
    void setPrimaryBlogPost(const bool &primary_blog_post);
    bool is_primary_blog_post_Set() const;
    bool is_primary_blog_post_Valid() const;

    bool isPrimaryEmail() const;
    void setPrimaryEmail(const bool &primary_email);
    bool is_primary_email_Set() const;
    bool is_primary_email_Valid() const;

    bool isPrimaryKnowledge() const;
    void setPrimaryKnowledge(const bool &primary_knowledge);
    bool is_primary_knowledge_Set() const;
    bool is_primary_knowledge_Valid() const;

    bool isPrimaryLandingPage() const;
    void setPrimaryLandingPage(const bool &primary_landing_page);
    bool is_primary_landing_page_Set() const;
    bool is_primary_landing_page_Valid() const;

    bool isPrimarySitePage() const;
    void setPrimarySitePage(const bool &primary_site_page);
    bool is_primary_site_page_Set() const;
    bool is_primary_site_page_Valid() const;

    QString getSecondaryToDomain() const;
    void setSecondaryToDomain(const QString &secondary_to_domain);
    bool is_secondary_to_domain_Set() const;
    bool is_secondary_to_domain_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_correct_cname;
    bool m_correct_cname_isSet;
    bool m_correct_cname_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_resolving;
    bool m_is_resolving_isSet;
    bool m_is_resolving_isValid;

    bool m_is_ssl_enabled;
    bool m_is_ssl_enabled_isSet;
    bool m_is_ssl_enabled_isValid;

    bool m_is_ssl_only;
    bool m_is_ssl_only_isSet;
    bool m_is_ssl_only_isValid;

    bool m_is_used_for_blog_post;
    bool m_is_used_for_blog_post_isSet;
    bool m_is_used_for_blog_post_isValid;

    bool m_is_used_for_email;
    bool m_is_used_for_email_isSet;
    bool m_is_used_for_email_isValid;

    bool m_is_used_for_knowledge;
    bool m_is_used_for_knowledge_isSet;
    bool m_is_used_for_knowledge_isValid;

    bool m_is_used_for_landing_page;
    bool m_is_used_for_landing_page_isSet;
    bool m_is_used_for_landing_page_isValid;

    bool m_is_used_for_site_page;
    bool m_is_used_for_site_page_isSet;
    bool m_is_used_for_site_page_isValid;

    bool m_manually_marked_as_resolving;
    bool m_manually_marked_as_resolving_isSet;
    bool m_manually_marked_as_resolving_isValid;

    bool m_primary_blog_post;
    bool m_primary_blog_post_isSet;
    bool m_primary_blog_post_isValid;

    bool m_primary_email;
    bool m_primary_email_isSet;
    bool m_primary_email_isValid;

    bool m_primary_knowledge;
    bool m_primary_knowledge_isSet;
    bool m_primary_knowledge_isValid;

    bool m_primary_landing_page;
    bool m_primary_landing_page_isSet;
    bool m_primary_landing_page_isValid;

    bool m_primary_site_page;
    bool m_primary_site_page_isSet;
    bool m_primary_site_page_isValid;

    QString m_secondary_to_domain;
    bool m_secondary_to_domain_isSet;
    bool m_secondary_to_domain_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomain)

#endif // OAIDomain_H
