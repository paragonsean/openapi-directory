/**
 * Events Send Event Completions
 * HTTP API for triggering instances of custom behavioral events
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBehavioralEventHttpCompletionRequest.h
 *
 * 
 */

#ifndef OAIBehavioralEventHttpCompletionRequest_H
#define OAIBehavioralEventHttpCompletionRequest_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBehavioralEventHttpCompletionRequest : public OAIObject {
public:
    OAIBehavioralEventHttpCompletionRequest();
    OAIBehavioralEventHttpCompletionRequest(QString json);
    ~OAIBehavioralEventHttpCompletionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getEventName() const;
    void setEventName(const QString &event_name);
    bool is_event_name_Set() const;
    bool is_event_name_Valid() const;

    QString getObjectId() const;
    void setObjectId(const QString &object_id);
    bool is_object_id_Set() const;
    bool is_object_id_Valid() const;

    QDateTime getOccurredAt() const;
    void setOccurredAt(const QDateTime &occurred_at);
    bool is_occurred_at_Set() const;
    bool is_occurred_at_Valid() const;

    QMap<QString, QString> getProperties() const;
    void setProperties(const QMap<QString, QString> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getUtk() const;
    void setUtk(const QString &utk);
    bool is_utk_Set() const;
    bool is_utk_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_event_name;
    bool m_event_name_isSet;
    bool m_event_name_isValid;

    QString m_object_id;
    bool m_object_id_isSet;
    bool m_object_id_isValid;

    QDateTime m_occurred_at;
    bool m_occurred_at_isSet;
    bool m_occurred_at_isValid;

    QMap<QString, QString> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_utk;
    bool m_utk_isSet;
    bool m_utk_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBehavioralEventHttpCompletionRequest)

#endif // OAIBehavioralEventHttpCompletionRequest_H
