/**
 * Webhooks Webhooks
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BatchInputSubscriptionBatchUpdateRequest from './model/BatchInputSubscriptionBatchUpdateRequest';
import BatchResponseSubscriptionResponse from './model/BatchResponseSubscriptionResponse';
import BatchResponseSubscriptionResponseWithErrors from './model/BatchResponseSubscriptionResponseWithErrors';
import Error from './model/Error';
import ErrorDetail from './model/ErrorDetail';
import SettingsChangeRequest from './model/SettingsChangeRequest';
import SettingsResponse from './model/SettingsResponse';
import StandardError from './model/StandardError';
import SubscriptionBatchUpdateRequest from './model/SubscriptionBatchUpdateRequest';
import SubscriptionCreateRequest from './model/SubscriptionCreateRequest';
import SubscriptionListResponse from './model/SubscriptionListResponse';
import SubscriptionPatchRequest from './model/SubscriptionPatchRequest';
import SubscriptionResponse from './model/SubscriptionResponse';
import ThrottlingSettings from './model/ThrottlingSettings';
import SettingsApi from './api/SettingsApi';
import SubscriptionsApi from './api/SubscriptionsApi';


/**
* Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var WebhooksWebhooks = require('index'); // See note below*.
* var xxxSvc = new WebhooksWebhooks.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new WebhooksWebhooks.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new WebhooksWebhooks.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new WebhooksWebhooks.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BatchInputSubscriptionBatchUpdateRequest model constructor.
     * @property {module:model/BatchInputSubscriptionBatchUpdateRequest}
     */
    BatchInputSubscriptionBatchUpdateRequest,

    /**
     * The BatchResponseSubscriptionResponse model constructor.
     * @property {module:model/BatchResponseSubscriptionResponse}
     */
    BatchResponseSubscriptionResponse,

    /**
     * The BatchResponseSubscriptionResponseWithErrors model constructor.
     * @property {module:model/BatchResponseSubscriptionResponseWithErrors}
     */
    BatchResponseSubscriptionResponseWithErrors,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The SettingsChangeRequest model constructor.
     * @property {module:model/SettingsChangeRequest}
     */
    SettingsChangeRequest,

    /**
     * The SettingsResponse model constructor.
     * @property {module:model/SettingsResponse}
     */
    SettingsResponse,

    /**
     * The StandardError model constructor.
     * @property {module:model/StandardError}
     */
    StandardError,

    /**
     * The SubscriptionBatchUpdateRequest model constructor.
     * @property {module:model/SubscriptionBatchUpdateRequest}
     */
    SubscriptionBatchUpdateRequest,

    /**
     * The SubscriptionCreateRequest model constructor.
     * @property {module:model/SubscriptionCreateRequest}
     */
    SubscriptionCreateRequest,

    /**
     * The SubscriptionListResponse model constructor.
     * @property {module:model/SubscriptionListResponse}
     */
    SubscriptionListResponse,

    /**
     * The SubscriptionPatchRequest model constructor.
     * @property {module:model/SubscriptionPatchRequest}
     */
    SubscriptionPatchRequest,

    /**
     * The SubscriptionResponse model constructor.
     * @property {module:model/SubscriptionResponse}
     */
    SubscriptionResponse,

    /**
     * The ThrottlingSettings model constructor.
     * @property {module:model/ThrottlingSettings}
     */
    ThrottlingSettings,

    /**
    * The SettingsApi service constructor.
    * @property {module:api/SettingsApi}
    */
    SettingsApi,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi
};
