/**
 * Webhooks Webhooks
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ThrottlingSettings from './ThrottlingSettings';

/**
 * The SettingsResponse model module.
 * @module model/SettingsResponse
 * @version v3
 */
class SettingsResponse {
    /**
     * Constructs a new <code>SettingsResponse</code>.
     * Webhook settings for an app.
     * @alias module:model/SettingsResponse
     * @param createdAt {Date} When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).
     * @param targetUrl {String} A publicly available URL for HubSpot to call where event payloads will be delivered. See [link-so-some-doc](#) for details about the format of these event payloads.
     * @param throttling {module:model/ThrottlingSettings} 
     */
    constructor(createdAt, targetUrl, throttling) { 
        
        SettingsResponse.initialize(this, createdAt, targetUrl, throttling);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, targetUrl, throttling) { 
        obj['createdAt'] = createdAt;
        obj['targetUrl'] = targetUrl;
        obj['throttling'] = throttling;
    }

    /**
     * Constructs a <code>SettingsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SettingsResponse} obj Optional instance to populate.
     * @return {module:model/SettingsResponse} The populated <code>SettingsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SettingsResponse();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('targetUrl')) {
                obj['targetUrl'] = ApiClient.convertToType(data['targetUrl'], 'String');
            }
            if (data.hasOwnProperty('throttling')) {
                obj['throttling'] = ThrottlingSettings.constructFromObject(data['throttling']);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SettingsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SettingsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SettingsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['targetUrl'] && !(typeof data['targetUrl'] === 'string' || data['targetUrl'] instanceof String)) {
            throw new Error("Expected the field `targetUrl` to be a primitive type in the JSON string but got " + data['targetUrl']);
        }
        // validate the optional field `throttling`
        if (data['throttling']) { // data not null
          ThrottlingSettings.validateJSON(data['throttling']);
        }

        return true;
    }


}

SettingsResponse.RequiredProperties = ["createdAt", "targetUrl", "throttling"];

/**
 * When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).
 * @member {Date} createdAt
 */
SettingsResponse.prototype['createdAt'] = undefined;

/**
 * A publicly available URL for HubSpot to call where event payloads will be delivered. See [link-so-some-doc](#) for details about the format of these event payloads.
 * @member {String} targetUrl
 */
SettingsResponse.prototype['targetUrl'] = undefined;

/**
 * @member {module:model/ThrottlingSettings} throttling
 */
SettingsResponse.prototype['throttling'] = undefined;

/**
 * When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).
 * @member {Date} updatedAt
 */
SettingsResponse.prototype['updatedAt'] = undefined;






export default SettingsResponse;

