/**
 * Webhooks Webhooks
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ThrottlingSettings model module.
 * @module model/ThrottlingSettings
 * @version v3
 */
class ThrottlingSettings {
    /**
     * Constructs a new <code>ThrottlingSettings</code>.
     * Configuration details for webhook throttling.
     * @alias module:model/ThrottlingSettings
     * @param maxConcurrentRequests {Number} The maximum number of concurrent HTTP requests HubSpot will attempt to make to your app.
     * @param period {module:model/ThrottlingSettings.PeriodEnum} Time scale for this setting. Can be either `SECONDLY` (per second) or `ROLLING_MINUTE` (per minute).
     */
    constructor(maxConcurrentRequests, period) { 
        
        ThrottlingSettings.initialize(this, maxConcurrentRequests, period);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, maxConcurrentRequests, period) { 
        obj['maxConcurrentRequests'] = maxConcurrentRequests;
        obj['period'] = period;
    }

    /**
     * Constructs a <code>ThrottlingSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ThrottlingSettings} obj Optional instance to populate.
     * @return {module:model/ThrottlingSettings} The populated <code>ThrottlingSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThrottlingSettings();

            if (data.hasOwnProperty('maxConcurrentRequests')) {
                obj['maxConcurrentRequests'] = ApiClient.convertToType(data['maxConcurrentRequests'], 'Number');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ThrottlingSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ThrottlingSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ThrottlingSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['period'] && !(typeof data['period'] === 'string' || data['period'] instanceof String)) {
            throw new Error("Expected the field `period` to be a primitive type in the JSON string but got " + data['period']);
        }

        return true;
    }


}

ThrottlingSettings.RequiredProperties = ["maxConcurrentRequests", "period"];

/**
 * The maximum number of concurrent HTTP requests HubSpot will attempt to make to your app.
 * @member {Number} maxConcurrentRequests
 */
ThrottlingSettings.prototype['maxConcurrentRequests'] = undefined;

/**
 * Time scale for this setting. Can be either `SECONDLY` (per second) or `ROLLING_MINUTE` (per minute).
 * @member {module:model/ThrottlingSettings.PeriodEnum} period
 */
ThrottlingSettings.prototype['period'] = undefined;





/**
 * Allowed values for the <code>period</code> property.
 * @enum {String}
 * @readonly
 */
ThrottlingSettings['PeriodEnum'] = {

    /**
     * value: "SECONDLY"
     * @const
     */
    "SECONDLY": "SECONDLY",

    /**
     * value: "ROLLING_MINUTE"
     * @const
     */
    "ROLLING_MINUTE": "ROLLING_MINUTE"
};



export default ThrottlingSettings;

