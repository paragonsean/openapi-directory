/**
 * Auth Oauth
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import RefreshTokenInfoResponse from '../model/RefreshTokenInfoResponse';

/**
* RefreshTokens service.
* @module api/RefreshTokensApi
* @version v1
*/
export default class RefreshTokensApi {

    /**
    * Constructs a new RefreshTokensApi. 
    * @alias module:api/RefreshTokensApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteOauthV1RefreshTokensTokenArchive operation.
     * @callback module:api/RefreshTokensApi~deleteOauthV1RefreshTokensTokenArchiveCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} token 
     * @param {module:api/RefreshTokensApi~deleteOauthV1RefreshTokensTokenArchiveCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOauthV1RefreshTokensTokenArchive(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling deleteOauthV1RefreshTokensTokenArchive");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/v1/refresh-tokens/{token}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOauthV1RefreshTokensTokenGet operation.
     * @callback module:api/RefreshTokensApi~getOauthV1RefreshTokensTokenGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RefreshTokenInfoResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} token 
     * @param {module:api/RefreshTokensApi~getOauthV1RefreshTokensTokenGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RefreshTokenInfoResponse}
     */
    getOauthV1RefreshTokensTokenGet(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getOauthV1RefreshTokensTokenGet");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', '*/*'];
      let returnType = RefreshTokenInfoResponse;
      return this.apiClient.callApi(
        '/oauth/v1/refresh-tokens/{token}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
