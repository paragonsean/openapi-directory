/**
 * Auth Oauth
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRefreshTokenInfoResponse.h
 *
 * 
 */

#ifndef OAIRefreshTokenInfoResponse_H
#define OAIRefreshTokenInfoResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRefreshTokenInfoResponse : public OAIObject {
public:
    OAIRefreshTokenInfoResponse();
    OAIRefreshTokenInfoResponse(QString json);
    ~OAIRefreshTokenInfoResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getHubDomain() const;
    void setHubDomain(const QString &hub_domain);
    bool is_hub_domain_Set() const;
    bool is_hub_domain_Valid() const;

    qint32 getHubId() const;
    void setHubId(const qint32 &hub_id);
    bool is_hub_id_Set() const;
    bool is_hub_id_Valid() const;

    QList<QString> getScopes() const;
    void setScopes(const QList<QString> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getTokenType() const;
    void setTokenType(const QString &token_type);
    bool is_token_type_Set() const;
    bool is_token_type_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_hub_domain;
    bool m_hub_domain_isSet;
    bool m_hub_domain_isValid;

    qint32 m_hub_id;
    bool m_hub_id_isSet;
    bool m_hub_id_isValid;

    QList<QString> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_token_type;
    bool m_token_type_isSet;
    bool m_token_type_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRefreshTokenInfoResponse)

#endif // OAIRefreshTokenInfoResponse_H
