/*
 * geodesystems.com:443
 * Search for data in lots of places - manage your documents, photos and critical business knowledge - communicate and coordinate with blogs, interactive wikis, and data integration dashboards.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.time.OffsetDateTime;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TypeBolderRentalHousingApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public TypeBolderRentalHousingApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TypeBolderRentalHousingApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for searchBolderRentalHousing
     * @param text Search text (optional)
     * @param name Search name (optional)
     * @param description Search description (optional)
     * @param fromdate From date (optional)
     * @param todate To date (optional)
     * @param createdateFrom Archive create date from (optional)
     * @param createdateTo Archive create date to (optional)
     * @param changedateFrom Archive change date from (optional)
     * @param changedateTo Archive change date to (optional)
     * @param group Parent entry (optional)
     * @param filesuffix File suffix (optional)
     * @param maxlatitude Northern bounds of search (optional)
     * @param minlongitude Western bounds of search (optional)
     * @param minlatitude Southern bounds of search (optional)
     * @param maxlongitude Eastern bounds of search (optional)
     * @param max Max number of results (optional)
     * @param skip Number to skip (optional)
     * @param searchDbBolderRentalHousingPropaddr1 Property Address (optional)
     * @param searchDbBolderRentalHousingRentaltype Rental Type (optional)
     * @param searchDbBolderRentalHousingBldgtype Building Type (optional)
     * @param searchDbBolderRentalHousingDwellunits Dwelling Units (optional)
     * @param searchDbBolderRentalHousingRoomunits Room Units (optional)
     * @param searchDbBolderRentalHousingNeighbrhd Neighborhood (optional)
     * @param searchDbBolderRentalHousingComplexnm Complex Name (optional)
     * @param searchDbBolderRentalHousingName Name (optional)
     * @param searchDbBolderRentalHousingPersontype Person Type (optional)
     * @param searchDbBolderRentalHousingCompany Company (optional)
     * @param searchDbBolderRentalHousingEngcompl Engcompl (optional)
     * @param searchDbBolderRentalHousingLicenseexp Expiration Date (optional)
     * @param searchDbBolderRentalHousingLicensenum Licensenum (optional)
     * @param searchDbBolderRentalHousingPpl1Coname Ppl1 Coname (optional)
     * @param searchDbBolderRentalHousingPerson1 Person 1 (optional)
     * @param searchDbBolderRentalHousingPpl1Role Ppl1 Role (optional)
     * @param searchDbBolderRentalHousingPpl2Coname Ppl2 Coname (optional)
     * @param searchDbBolderRentalHousingPerson2 Person 2 (optional)
     * @param searchDbBolderRentalHousingPpl2Role Ppl2 Role (optional)
     * @param searchDbBolderRentalHousingLocation Location (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchBolderRentalHousingCall(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbBolderRentalHousingPropaddr1, String searchDbBolderRentalHousingRentaltype, String searchDbBolderRentalHousingBldgtype, Integer searchDbBolderRentalHousingDwellunits, Integer searchDbBolderRentalHousingRoomunits, String searchDbBolderRentalHousingNeighbrhd, String searchDbBolderRentalHousingComplexnm, String searchDbBolderRentalHousingName, String searchDbBolderRentalHousingPersontype, String searchDbBolderRentalHousingCompany, String searchDbBolderRentalHousingEngcompl, String searchDbBolderRentalHousingLicenseexp, String searchDbBolderRentalHousingLicensenum, String searchDbBolderRentalHousingPpl1Coname, String searchDbBolderRentalHousingPerson1, String searchDbBolderRentalHousingPpl1Role, String searchDbBolderRentalHousingPpl2Coname, String searchDbBolderRentalHousingPerson2, String searchDbBolderRentalHousingPpl2Role, String searchDbBolderRentalHousingLocation, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/repository/search/type/bolder_rental_housing";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (text != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("text", text));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (description != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("description", description));
        }

        if (fromdate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromdate", fromdate));
        }

        if (todate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("todate", todate));
        }

        if (createdateFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("createdate.from", createdateFrom));
        }

        if (createdateTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("createdate.to", createdateTo));
        }

        if (changedateFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("changedate.from", changedateFrom));
        }

        if (changedateTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("changedate.to", changedateTo));
        }

        if (group != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("group", group));
        }

        if (filesuffix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filesuffix", filesuffix));
        }

        if (maxlatitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlatitude", maxlatitude));
        }

        if (minlongitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlongitude", minlongitude));
        }

        if (minlatitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlatitude", minlatitude));
        }

        if (maxlongitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlongitude", maxlongitude));
        }

        if (max != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max", max));
        }

        if (skip != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("skip", skip));
        }

        if (searchDbBolderRentalHousingPropaddr1 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.propaddr1", searchDbBolderRentalHousingPropaddr1));
        }

        if (searchDbBolderRentalHousingRentaltype != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.rentaltype", searchDbBolderRentalHousingRentaltype));
        }

        if (searchDbBolderRentalHousingBldgtype != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.bldgtype", searchDbBolderRentalHousingBldgtype));
        }

        if (searchDbBolderRentalHousingDwellunits != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.dwellunits", searchDbBolderRentalHousingDwellunits));
        }

        if (searchDbBolderRentalHousingRoomunits != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.roomunits", searchDbBolderRentalHousingRoomunits));
        }

        if (searchDbBolderRentalHousingNeighbrhd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.neighbrhd", searchDbBolderRentalHousingNeighbrhd));
        }

        if (searchDbBolderRentalHousingComplexnm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.complexnm", searchDbBolderRentalHousingComplexnm));
        }

        if (searchDbBolderRentalHousingName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.name", searchDbBolderRentalHousingName));
        }

        if (searchDbBolderRentalHousingPersontype != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.persontype", searchDbBolderRentalHousingPersontype));
        }

        if (searchDbBolderRentalHousingCompany != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.company", searchDbBolderRentalHousingCompany));
        }

        if (searchDbBolderRentalHousingEngcompl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.engcompl", searchDbBolderRentalHousingEngcompl));
        }

        if (searchDbBolderRentalHousingLicenseexp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.licenseexp", searchDbBolderRentalHousingLicenseexp));
        }

        if (searchDbBolderRentalHousingLicensenum != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.licensenum", searchDbBolderRentalHousingLicensenum));
        }

        if (searchDbBolderRentalHousingPpl1Coname != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.ppl1_coname", searchDbBolderRentalHousingPpl1Coname));
        }

        if (searchDbBolderRentalHousingPerson1 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.person_1", searchDbBolderRentalHousingPerson1));
        }

        if (searchDbBolderRentalHousingPpl1Role != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.ppl1_role", searchDbBolderRentalHousingPpl1Role));
        }

        if (searchDbBolderRentalHousingPpl2Coname != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.ppl2_coname", searchDbBolderRentalHousingPpl2Coname));
        }

        if (searchDbBolderRentalHousingPerson2 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.person_2", searchDbBolderRentalHousingPerson2));
        }

        if (searchDbBolderRentalHousingPpl2Role != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.ppl2_role", searchDbBolderRentalHousingPpl2Role));
        }

        if (searchDbBolderRentalHousingLocation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_bolder_rental_housing.location", searchDbBolderRentalHousingLocation));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchBolderRentalHousingValidateBeforeCall(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbBolderRentalHousingPropaddr1, String searchDbBolderRentalHousingRentaltype, String searchDbBolderRentalHousingBldgtype, Integer searchDbBolderRentalHousingDwellunits, Integer searchDbBolderRentalHousingRoomunits, String searchDbBolderRentalHousingNeighbrhd, String searchDbBolderRentalHousingComplexnm, String searchDbBolderRentalHousingName, String searchDbBolderRentalHousingPersontype, String searchDbBolderRentalHousingCompany, String searchDbBolderRentalHousingEngcompl, String searchDbBolderRentalHousingLicenseexp, String searchDbBolderRentalHousingLicensenum, String searchDbBolderRentalHousingPpl1Coname, String searchDbBolderRentalHousingPerson1, String searchDbBolderRentalHousingPpl1Role, String searchDbBolderRentalHousingPpl2Coname, String searchDbBolderRentalHousingPerson2, String searchDbBolderRentalHousingPpl2Role, String searchDbBolderRentalHousingLocation, final ApiCallback _callback) throws ApiException {
        return searchBolderRentalHousingCall(text, name, description, fromdate, todate, createdateFrom, createdateTo, changedateFrom, changedateTo, group, filesuffix, maxlatitude, minlongitude, minlatitude, maxlongitude, max, skip, searchDbBolderRentalHousingPropaddr1, searchDbBolderRentalHousingRentaltype, searchDbBolderRentalHousingBldgtype, searchDbBolderRentalHousingDwellunits, searchDbBolderRentalHousingRoomunits, searchDbBolderRentalHousingNeighbrhd, searchDbBolderRentalHousingComplexnm, searchDbBolderRentalHousingName, searchDbBolderRentalHousingPersontype, searchDbBolderRentalHousingCompany, searchDbBolderRentalHousingEngcompl, searchDbBolderRentalHousingLicenseexp, searchDbBolderRentalHousingLicensenum, searchDbBolderRentalHousingPpl1Coname, searchDbBolderRentalHousingPerson1, searchDbBolderRentalHousingPpl1Role, searchDbBolderRentalHousingPpl2Coname, searchDbBolderRentalHousingPerson2, searchDbBolderRentalHousingPpl2Role, searchDbBolderRentalHousingLocation, _callback);

    }

    /**
     * Search API for &#39;Boulder Rental Housing&#39; entry type
     * API to search for entries of type Boulder Rental Housing
     * @param text Search text (optional)
     * @param name Search name (optional)
     * @param description Search description (optional)
     * @param fromdate From date (optional)
     * @param todate To date (optional)
     * @param createdateFrom Archive create date from (optional)
     * @param createdateTo Archive create date to (optional)
     * @param changedateFrom Archive change date from (optional)
     * @param changedateTo Archive change date to (optional)
     * @param group Parent entry (optional)
     * @param filesuffix File suffix (optional)
     * @param maxlatitude Northern bounds of search (optional)
     * @param minlongitude Western bounds of search (optional)
     * @param minlatitude Southern bounds of search (optional)
     * @param maxlongitude Eastern bounds of search (optional)
     * @param max Max number of results (optional)
     * @param skip Number to skip (optional)
     * @param searchDbBolderRentalHousingPropaddr1 Property Address (optional)
     * @param searchDbBolderRentalHousingRentaltype Rental Type (optional)
     * @param searchDbBolderRentalHousingBldgtype Building Type (optional)
     * @param searchDbBolderRentalHousingDwellunits Dwelling Units (optional)
     * @param searchDbBolderRentalHousingRoomunits Room Units (optional)
     * @param searchDbBolderRentalHousingNeighbrhd Neighborhood (optional)
     * @param searchDbBolderRentalHousingComplexnm Complex Name (optional)
     * @param searchDbBolderRentalHousingName Name (optional)
     * @param searchDbBolderRentalHousingPersontype Person Type (optional)
     * @param searchDbBolderRentalHousingCompany Company (optional)
     * @param searchDbBolderRentalHousingEngcompl Engcompl (optional)
     * @param searchDbBolderRentalHousingLicenseexp Expiration Date (optional)
     * @param searchDbBolderRentalHousingLicensenum Licensenum (optional)
     * @param searchDbBolderRentalHousingPpl1Coname Ppl1 Coname (optional)
     * @param searchDbBolderRentalHousingPerson1 Person 1 (optional)
     * @param searchDbBolderRentalHousingPpl1Role Ppl1 Role (optional)
     * @param searchDbBolderRentalHousingPpl2Coname Ppl2 Coname (optional)
     * @param searchDbBolderRentalHousingPerson2 Person 2 (optional)
     * @param searchDbBolderRentalHousingPpl2Role Ppl2 Role (optional)
     * @param searchDbBolderRentalHousingLocation Location (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public void searchBolderRentalHousing(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbBolderRentalHousingPropaddr1, String searchDbBolderRentalHousingRentaltype, String searchDbBolderRentalHousingBldgtype, Integer searchDbBolderRentalHousingDwellunits, Integer searchDbBolderRentalHousingRoomunits, String searchDbBolderRentalHousingNeighbrhd, String searchDbBolderRentalHousingComplexnm, String searchDbBolderRentalHousingName, String searchDbBolderRentalHousingPersontype, String searchDbBolderRentalHousingCompany, String searchDbBolderRentalHousingEngcompl, String searchDbBolderRentalHousingLicenseexp, String searchDbBolderRentalHousingLicensenum, String searchDbBolderRentalHousingPpl1Coname, String searchDbBolderRentalHousingPerson1, String searchDbBolderRentalHousingPpl1Role, String searchDbBolderRentalHousingPpl2Coname, String searchDbBolderRentalHousingPerson2, String searchDbBolderRentalHousingPpl2Role, String searchDbBolderRentalHousingLocation) throws ApiException {
        searchBolderRentalHousingWithHttpInfo(text, name, description, fromdate, todate, createdateFrom, createdateTo, changedateFrom, changedateTo, group, filesuffix, maxlatitude, minlongitude, minlatitude, maxlongitude, max, skip, searchDbBolderRentalHousingPropaddr1, searchDbBolderRentalHousingRentaltype, searchDbBolderRentalHousingBldgtype, searchDbBolderRentalHousingDwellunits, searchDbBolderRentalHousingRoomunits, searchDbBolderRentalHousingNeighbrhd, searchDbBolderRentalHousingComplexnm, searchDbBolderRentalHousingName, searchDbBolderRentalHousingPersontype, searchDbBolderRentalHousingCompany, searchDbBolderRentalHousingEngcompl, searchDbBolderRentalHousingLicenseexp, searchDbBolderRentalHousingLicensenum, searchDbBolderRentalHousingPpl1Coname, searchDbBolderRentalHousingPerson1, searchDbBolderRentalHousingPpl1Role, searchDbBolderRentalHousingPpl2Coname, searchDbBolderRentalHousingPerson2, searchDbBolderRentalHousingPpl2Role, searchDbBolderRentalHousingLocation);
    }

    /**
     * Search API for &#39;Boulder Rental Housing&#39; entry type
     * API to search for entries of type Boulder Rental Housing
     * @param text Search text (optional)
     * @param name Search name (optional)
     * @param description Search description (optional)
     * @param fromdate From date (optional)
     * @param todate To date (optional)
     * @param createdateFrom Archive create date from (optional)
     * @param createdateTo Archive create date to (optional)
     * @param changedateFrom Archive change date from (optional)
     * @param changedateTo Archive change date to (optional)
     * @param group Parent entry (optional)
     * @param filesuffix File suffix (optional)
     * @param maxlatitude Northern bounds of search (optional)
     * @param minlongitude Western bounds of search (optional)
     * @param minlatitude Southern bounds of search (optional)
     * @param maxlongitude Eastern bounds of search (optional)
     * @param max Max number of results (optional)
     * @param skip Number to skip (optional)
     * @param searchDbBolderRentalHousingPropaddr1 Property Address (optional)
     * @param searchDbBolderRentalHousingRentaltype Rental Type (optional)
     * @param searchDbBolderRentalHousingBldgtype Building Type (optional)
     * @param searchDbBolderRentalHousingDwellunits Dwelling Units (optional)
     * @param searchDbBolderRentalHousingRoomunits Room Units (optional)
     * @param searchDbBolderRentalHousingNeighbrhd Neighborhood (optional)
     * @param searchDbBolderRentalHousingComplexnm Complex Name (optional)
     * @param searchDbBolderRentalHousingName Name (optional)
     * @param searchDbBolderRentalHousingPersontype Person Type (optional)
     * @param searchDbBolderRentalHousingCompany Company (optional)
     * @param searchDbBolderRentalHousingEngcompl Engcompl (optional)
     * @param searchDbBolderRentalHousingLicenseexp Expiration Date (optional)
     * @param searchDbBolderRentalHousingLicensenum Licensenum (optional)
     * @param searchDbBolderRentalHousingPpl1Coname Ppl1 Coname (optional)
     * @param searchDbBolderRentalHousingPerson1 Person 1 (optional)
     * @param searchDbBolderRentalHousingPpl1Role Ppl1 Role (optional)
     * @param searchDbBolderRentalHousingPpl2Coname Ppl2 Coname (optional)
     * @param searchDbBolderRentalHousingPerson2 Person 2 (optional)
     * @param searchDbBolderRentalHousingPpl2Role Ppl2 Role (optional)
     * @param searchDbBolderRentalHousingLocation Location (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> searchBolderRentalHousingWithHttpInfo(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbBolderRentalHousingPropaddr1, String searchDbBolderRentalHousingRentaltype, String searchDbBolderRentalHousingBldgtype, Integer searchDbBolderRentalHousingDwellunits, Integer searchDbBolderRentalHousingRoomunits, String searchDbBolderRentalHousingNeighbrhd, String searchDbBolderRentalHousingComplexnm, String searchDbBolderRentalHousingName, String searchDbBolderRentalHousingPersontype, String searchDbBolderRentalHousingCompany, String searchDbBolderRentalHousingEngcompl, String searchDbBolderRentalHousingLicenseexp, String searchDbBolderRentalHousingLicensenum, String searchDbBolderRentalHousingPpl1Coname, String searchDbBolderRentalHousingPerson1, String searchDbBolderRentalHousingPpl1Role, String searchDbBolderRentalHousingPpl2Coname, String searchDbBolderRentalHousingPerson2, String searchDbBolderRentalHousingPpl2Role, String searchDbBolderRentalHousingLocation) throws ApiException {
        okhttp3.Call localVarCall = searchBolderRentalHousingValidateBeforeCall(text, name, description, fromdate, todate, createdateFrom, createdateTo, changedateFrom, changedateTo, group, filesuffix, maxlatitude, minlongitude, minlatitude, maxlongitude, max, skip, searchDbBolderRentalHousingPropaddr1, searchDbBolderRentalHousingRentaltype, searchDbBolderRentalHousingBldgtype, searchDbBolderRentalHousingDwellunits, searchDbBolderRentalHousingRoomunits, searchDbBolderRentalHousingNeighbrhd, searchDbBolderRentalHousingComplexnm, searchDbBolderRentalHousingName, searchDbBolderRentalHousingPersontype, searchDbBolderRentalHousingCompany, searchDbBolderRentalHousingEngcompl, searchDbBolderRentalHousingLicenseexp, searchDbBolderRentalHousingLicensenum, searchDbBolderRentalHousingPpl1Coname, searchDbBolderRentalHousingPerson1, searchDbBolderRentalHousingPpl1Role, searchDbBolderRentalHousingPpl2Coname, searchDbBolderRentalHousingPerson2, searchDbBolderRentalHousingPpl2Role, searchDbBolderRentalHousingLocation, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search API for &#39;Boulder Rental Housing&#39; entry type (asynchronously)
     * API to search for entries of type Boulder Rental Housing
     * @param text Search text (optional)
     * @param name Search name (optional)
     * @param description Search description (optional)
     * @param fromdate From date (optional)
     * @param todate To date (optional)
     * @param createdateFrom Archive create date from (optional)
     * @param createdateTo Archive create date to (optional)
     * @param changedateFrom Archive change date from (optional)
     * @param changedateTo Archive change date to (optional)
     * @param group Parent entry (optional)
     * @param filesuffix File suffix (optional)
     * @param maxlatitude Northern bounds of search (optional)
     * @param minlongitude Western bounds of search (optional)
     * @param minlatitude Southern bounds of search (optional)
     * @param maxlongitude Eastern bounds of search (optional)
     * @param max Max number of results (optional)
     * @param skip Number to skip (optional)
     * @param searchDbBolderRentalHousingPropaddr1 Property Address (optional)
     * @param searchDbBolderRentalHousingRentaltype Rental Type (optional)
     * @param searchDbBolderRentalHousingBldgtype Building Type (optional)
     * @param searchDbBolderRentalHousingDwellunits Dwelling Units (optional)
     * @param searchDbBolderRentalHousingRoomunits Room Units (optional)
     * @param searchDbBolderRentalHousingNeighbrhd Neighborhood (optional)
     * @param searchDbBolderRentalHousingComplexnm Complex Name (optional)
     * @param searchDbBolderRentalHousingName Name (optional)
     * @param searchDbBolderRentalHousingPersontype Person Type (optional)
     * @param searchDbBolderRentalHousingCompany Company (optional)
     * @param searchDbBolderRentalHousingEngcompl Engcompl (optional)
     * @param searchDbBolderRentalHousingLicenseexp Expiration Date (optional)
     * @param searchDbBolderRentalHousingLicensenum Licensenum (optional)
     * @param searchDbBolderRentalHousingPpl1Coname Ppl1 Coname (optional)
     * @param searchDbBolderRentalHousingPerson1 Person 1 (optional)
     * @param searchDbBolderRentalHousingPpl1Role Ppl1 Role (optional)
     * @param searchDbBolderRentalHousingPpl2Coname Ppl2 Coname (optional)
     * @param searchDbBolderRentalHousingPerson2 Person 2 (optional)
     * @param searchDbBolderRentalHousingPpl2Role Ppl2 Role (optional)
     * @param searchDbBolderRentalHousingLocation Location (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchBolderRentalHousingAsync(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbBolderRentalHousingPropaddr1, String searchDbBolderRentalHousingRentaltype, String searchDbBolderRentalHousingBldgtype, Integer searchDbBolderRentalHousingDwellunits, Integer searchDbBolderRentalHousingRoomunits, String searchDbBolderRentalHousingNeighbrhd, String searchDbBolderRentalHousingComplexnm, String searchDbBolderRentalHousingName, String searchDbBolderRentalHousingPersontype, String searchDbBolderRentalHousingCompany, String searchDbBolderRentalHousingEngcompl, String searchDbBolderRentalHousingLicenseexp, String searchDbBolderRentalHousingLicensenum, String searchDbBolderRentalHousingPpl1Coname, String searchDbBolderRentalHousingPerson1, String searchDbBolderRentalHousingPpl1Role, String searchDbBolderRentalHousingPpl2Coname, String searchDbBolderRentalHousingPerson2, String searchDbBolderRentalHousingPpl2Role, String searchDbBolderRentalHousingLocation, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchBolderRentalHousingValidateBeforeCall(text, name, description, fromdate, todate, createdateFrom, createdateTo, changedateFrom, changedateTo, group, filesuffix, maxlatitude, minlongitude, minlatitude, maxlongitude, max, skip, searchDbBolderRentalHousingPropaddr1, searchDbBolderRentalHousingRentaltype, searchDbBolderRentalHousingBldgtype, searchDbBolderRentalHousingDwellunits, searchDbBolderRentalHousingRoomunits, searchDbBolderRentalHousingNeighbrhd, searchDbBolderRentalHousingComplexnm, searchDbBolderRentalHousingName, searchDbBolderRentalHousingPersontype, searchDbBolderRentalHousingCompany, searchDbBolderRentalHousingEngcompl, searchDbBolderRentalHousingLicenseexp, searchDbBolderRentalHousingLicensenum, searchDbBolderRentalHousingPpl1Coname, searchDbBolderRentalHousingPerson1, searchDbBolderRentalHousingPpl1Role, searchDbBolderRentalHousingPpl2Coname, searchDbBolderRentalHousingPerson2, searchDbBolderRentalHousingPpl2Role, searchDbBolderRentalHousingLocation, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
