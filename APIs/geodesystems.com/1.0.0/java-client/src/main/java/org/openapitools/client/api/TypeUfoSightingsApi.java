/*
 * geodesystems.com:443
 * Search for data in lots of places - manage your documents, photos and critical business knowledge - communicate and coordinate with blogs, interactive wikis, and data integration dashboards.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.time.OffsetDateTime;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TypeUfoSightingsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public TypeUfoSightingsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TypeUfoSightingsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for searchUfoSightings
     * @param text Search text (optional)
     * @param name Search name (optional)
     * @param description Search description (optional)
     * @param fromdate From date (optional)
     * @param todate To date (optional)
     * @param createdateFrom Archive create date from (optional)
     * @param createdateTo Archive create date to (optional)
     * @param changedateFrom Archive change date from (optional)
     * @param changedateTo Archive change date to (optional)
     * @param group Parent entry (optional)
     * @param filesuffix File suffix (optional)
     * @param maxlatitude Northern bounds of search (optional)
     * @param minlongitude Western bounds of search (optional)
     * @param minlatitude Southern bounds of search (optional)
     * @param maxlongitude Eastern bounds of search (optional)
     * @param max Max number of results (optional)
     * @param skip Number to skip (optional)
     * @param searchDbUfoSightingsDatetime Datetime (optional)
     * @param searchDbUfoSightingsCity City (optional)
     * @param searchDbUfoSightingsState State (optional)
     * @param searchDbUfoSightingsCountry Country (optional)
     * @param searchDbUfoSightingsShape Shape (optional)
     * @param searchDbUfoSightingsDurationSeconds Duration (seconds) (optional)
     * @param searchDbUfoSightingsDurationHoursMin Duration (hours/min) (optional)
     * @param searchDbUfoSightingsComments Comments (optional)
     * @param searchDbUfoSightingsDatePosted Date Posted (optional)
     * @param searchDbUfoSightingsLatitude Latitude (optional)
     * @param searchDbUfoSightingsLongitude Longitude (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchUfoSightingsCall(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbUfoSightingsDatetime, String searchDbUfoSightingsCity, String searchDbUfoSightingsState, String searchDbUfoSightingsCountry, String searchDbUfoSightingsShape, Double searchDbUfoSightingsDurationSeconds, String searchDbUfoSightingsDurationHoursMin, String searchDbUfoSightingsComments, String searchDbUfoSightingsDatePosted, Double searchDbUfoSightingsLatitude, Double searchDbUfoSightingsLongitude, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/repository/search/type/ufo_sightings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (text != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("text", text));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (description != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("description", description));
        }

        if (fromdate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromdate", fromdate));
        }

        if (todate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("todate", todate));
        }

        if (createdateFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("createdate.from", createdateFrom));
        }

        if (createdateTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("createdate.to", createdateTo));
        }

        if (changedateFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("changedate.from", changedateFrom));
        }

        if (changedateTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("changedate.to", changedateTo));
        }

        if (group != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("group", group));
        }

        if (filesuffix != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filesuffix", filesuffix));
        }

        if (maxlatitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlatitude", maxlatitude));
        }

        if (minlongitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlongitude", minlongitude));
        }

        if (minlatitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlatitude", minlatitude));
        }

        if (maxlongitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlongitude", maxlongitude));
        }

        if (max != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max", max));
        }

        if (skip != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("skip", skip));
        }

        if (searchDbUfoSightingsDatetime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.datetime", searchDbUfoSightingsDatetime));
        }

        if (searchDbUfoSightingsCity != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.city", searchDbUfoSightingsCity));
        }

        if (searchDbUfoSightingsState != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.state", searchDbUfoSightingsState));
        }

        if (searchDbUfoSightingsCountry != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.country", searchDbUfoSightingsCountry));
        }

        if (searchDbUfoSightingsShape != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.shape", searchDbUfoSightingsShape));
        }

        if (searchDbUfoSightingsDurationSeconds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.duration_seconds", searchDbUfoSightingsDurationSeconds));
        }

        if (searchDbUfoSightingsDurationHoursMin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.duration_hours_min", searchDbUfoSightingsDurationHoursMin));
        }

        if (searchDbUfoSightingsComments != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.comments", searchDbUfoSightingsComments));
        }

        if (searchDbUfoSightingsDatePosted != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.date_posted", searchDbUfoSightingsDatePosted));
        }

        if (searchDbUfoSightingsLatitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.latitude", searchDbUfoSightingsLatitude));
        }

        if (searchDbUfoSightingsLongitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search.db_ufo_sightings.longitude", searchDbUfoSightingsLongitude));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchUfoSightingsValidateBeforeCall(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbUfoSightingsDatetime, String searchDbUfoSightingsCity, String searchDbUfoSightingsState, String searchDbUfoSightingsCountry, String searchDbUfoSightingsShape, Double searchDbUfoSightingsDurationSeconds, String searchDbUfoSightingsDurationHoursMin, String searchDbUfoSightingsComments, String searchDbUfoSightingsDatePosted, Double searchDbUfoSightingsLatitude, Double searchDbUfoSightingsLongitude, final ApiCallback _callback) throws ApiException {
        return searchUfoSightingsCall(text, name, description, fromdate, todate, createdateFrom, createdateTo, changedateFrom, changedateTo, group, filesuffix, maxlatitude, minlongitude, minlatitude, maxlongitude, max, skip, searchDbUfoSightingsDatetime, searchDbUfoSightingsCity, searchDbUfoSightingsState, searchDbUfoSightingsCountry, searchDbUfoSightingsShape, searchDbUfoSightingsDurationSeconds, searchDbUfoSightingsDurationHoursMin, searchDbUfoSightingsComments, searchDbUfoSightingsDatePosted, searchDbUfoSightingsLatitude, searchDbUfoSightingsLongitude, _callback);

    }

    /**
     * Search API for &#39;Ufo Sightings&#39; entry type
     * API to search for entries of type Ufo Sightings
     * @param text Search text (optional)
     * @param name Search name (optional)
     * @param description Search description (optional)
     * @param fromdate From date (optional)
     * @param todate To date (optional)
     * @param createdateFrom Archive create date from (optional)
     * @param createdateTo Archive create date to (optional)
     * @param changedateFrom Archive change date from (optional)
     * @param changedateTo Archive change date to (optional)
     * @param group Parent entry (optional)
     * @param filesuffix File suffix (optional)
     * @param maxlatitude Northern bounds of search (optional)
     * @param minlongitude Western bounds of search (optional)
     * @param minlatitude Southern bounds of search (optional)
     * @param maxlongitude Eastern bounds of search (optional)
     * @param max Max number of results (optional)
     * @param skip Number to skip (optional)
     * @param searchDbUfoSightingsDatetime Datetime (optional)
     * @param searchDbUfoSightingsCity City (optional)
     * @param searchDbUfoSightingsState State (optional)
     * @param searchDbUfoSightingsCountry Country (optional)
     * @param searchDbUfoSightingsShape Shape (optional)
     * @param searchDbUfoSightingsDurationSeconds Duration (seconds) (optional)
     * @param searchDbUfoSightingsDurationHoursMin Duration (hours/min) (optional)
     * @param searchDbUfoSightingsComments Comments (optional)
     * @param searchDbUfoSightingsDatePosted Date Posted (optional)
     * @param searchDbUfoSightingsLatitude Latitude (optional)
     * @param searchDbUfoSightingsLongitude Longitude (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public void searchUfoSightings(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbUfoSightingsDatetime, String searchDbUfoSightingsCity, String searchDbUfoSightingsState, String searchDbUfoSightingsCountry, String searchDbUfoSightingsShape, Double searchDbUfoSightingsDurationSeconds, String searchDbUfoSightingsDurationHoursMin, String searchDbUfoSightingsComments, String searchDbUfoSightingsDatePosted, Double searchDbUfoSightingsLatitude, Double searchDbUfoSightingsLongitude) throws ApiException {
        searchUfoSightingsWithHttpInfo(text, name, description, fromdate, todate, createdateFrom, createdateTo, changedateFrom, changedateTo, group, filesuffix, maxlatitude, minlongitude, minlatitude, maxlongitude, max, skip, searchDbUfoSightingsDatetime, searchDbUfoSightingsCity, searchDbUfoSightingsState, searchDbUfoSightingsCountry, searchDbUfoSightingsShape, searchDbUfoSightingsDurationSeconds, searchDbUfoSightingsDurationHoursMin, searchDbUfoSightingsComments, searchDbUfoSightingsDatePosted, searchDbUfoSightingsLatitude, searchDbUfoSightingsLongitude);
    }

    /**
     * Search API for &#39;Ufo Sightings&#39; entry type
     * API to search for entries of type Ufo Sightings
     * @param text Search text (optional)
     * @param name Search name (optional)
     * @param description Search description (optional)
     * @param fromdate From date (optional)
     * @param todate To date (optional)
     * @param createdateFrom Archive create date from (optional)
     * @param createdateTo Archive create date to (optional)
     * @param changedateFrom Archive change date from (optional)
     * @param changedateTo Archive change date to (optional)
     * @param group Parent entry (optional)
     * @param filesuffix File suffix (optional)
     * @param maxlatitude Northern bounds of search (optional)
     * @param minlongitude Western bounds of search (optional)
     * @param minlatitude Southern bounds of search (optional)
     * @param maxlongitude Eastern bounds of search (optional)
     * @param max Max number of results (optional)
     * @param skip Number to skip (optional)
     * @param searchDbUfoSightingsDatetime Datetime (optional)
     * @param searchDbUfoSightingsCity City (optional)
     * @param searchDbUfoSightingsState State (optional)
     * @param searchDbUfoSightingsCountry Country (optional)
     * @param searchDbUfoSightingsShape Shape (optional)
     * @param searchDbUfoSightingsDurationSeconds Duration (seconds) (optional)
     * @param searchDbUfoSightingsDurationHoursMin Duration (hours/min) (optional)
     * @param searchDbUfoSightingsComments Comments (optional)
     * @param searchDbUfoSightingsDatePosted Date Posted (optional)
     * @param searchDbUfoSightingsLatitude Latitude (optional)
     * @param searchDbUfoSightingsLongitude Longitude (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> searchUfoSightingsWithHttpInfo(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbUfoSightingsDatetime, String searchDbUfoSightingsCity, String searchDbUfoSightingsState, String searchDbUfoSightingsCountry, String searchDbUfoSightingsShape, Double searchDbUfoSightingsDurationSeconds, String searchDbUfoSightingsDurationHoursMin, String searchDbUfoSightingsComments, String searchDbUfoSightingsDatePosted, Double searchDbUfoSightingsLatitude, Double searchDbUfoSightingsLongitude) throws ApiException {
        okhttp3.Call localVarCall = searchUfoSightingsValidateBeforeCall(text, name, description, fromdate, todate, createdateFrom, createdateTo, changedateFrom, changedateTo, group, filesuffix, maxlatitude, minlongitude, minlatitude, maxlongitude, max, skip, searchDbUfoSightingsDatetime, searchDbUfoSightingsCity, searchDbUfoSightingsState, searchDbUfoSightingsCountry, searchDbUfoSightingsShape, searchDbUfoSightingsDurationSeconds, searchDbUfoSightingsDurationHoursMin, searchDbUfoSightingsComments, searchDbUfoSightingsDatePosted, searchDbUfoSightingsLatitude, searchDbUfoSightingsLongitude, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search API for &#39;Ufo Sightings&#39; entry type (asynchronously)
     * API to search for entries of type Ufo Sightings
     * @param text Search text (optional)
     * @param name Search name (optional)
     * @param description Search description (optional)
     * @param fromdate From date (optional)
     * @param todate To date (optional)
     * @param createdateFrom Archive create date from (optional)
     * @param createdateTo Archive create date to (optional)
     * @param changedateFrom Archive change date from (optional)
     * @param changedateTo Archive change date to (optional)
     * @param group Parent entry (optional)
     * @param filesuffix File suffix (optional)
     * @param maxlatitude Northern bounds of search (optional)
     * @param minlongitude Western bounds of search (optional)
     * @param minlatitude Southern bounds of search (optional)
     * @param maxlongitude Eastern bounds of search (optional)
     * @param max Max number of results (optional)
     * @param skip Number to skip (optional)
     * @param searchDbUfoSightingsDatetime Datetime (optional)
     * @param searchDbUfoSightingsCity City (optional)
     * @param searchDbUfoSightingsState State (optional)
     * @param searchDbUfoSightingsCountry Country (optional)
     * @param searchDbUfoSightingsShape Shape (optional)
     * @param searchDbUfoSightingsDurationSeconds Duration (seconds) (optional)
     * @param searchDbUfoSightingsDurationHoursMin Duration (hours/min) (optional)
     * @param searchDbUfoSightingsComments Comments (optional)
     * @param searchDbUfoSightingsDatePosted Date Posted (optional)
     * @param searchDbUfoSightingsLatitude Latitude (optional)
     * @param searchDbUfoSightingsLongitude Longitude (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchUfoSightingsAsync(String text, String name, String description, OffsetDateTime fromdate, OffsetDateTime todate, OffsetDateTime createdateFrom, OffsetDateTime createdateTo, OffsetDateTime changedateFrom, OffsetDateTime changedateTo, String group, String filesuffix, Float maxlatitude, Float minlongitude, Float minlatitude, Float maxlongitude, Integer max, Integer skip, String searchDbUfoSightingsDatetime, String searchDbUfoSightingsCity, String searchDbUfoSightingsState, String searchDbUfoSightingsCountry, String searchDbUfoSightingsShape, Double searchDbUfoSightingsDurationSeconds, String searchDbUfoSightingsDurationHoursMin, String searchDbUfoSightingsComments, String searchDbUfoSightingsDatePosted, Double searchDbUfoSightingsLatitude, Double searchDbUfoSightingsLongitude, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchUfoSightingsValidateBeforeCall(text, name, description, fromdate, todate, createdateFrom, createdateTo, changedateFrom, changedateTo, group, filesuffix, maxlatitude, minlongitude, minlatitude, maxlongitude, max, skip, searchDbUfoSightingsDatetime, searchDbUfoSightingsCity, searchDbUfoSightingsState, searchDbUfoSightingsCountry, searchDbUfoSightingsShape, searchDbUfoSightingsDurationSeconds, searchDbUfoSightingsDurationHoursMin, searchDbUfoSightingsComments, searchDbUfoSightingsDatePosted, searchDbUfoSightingsLatitude, searchDbUfoSightingsLongitude, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
