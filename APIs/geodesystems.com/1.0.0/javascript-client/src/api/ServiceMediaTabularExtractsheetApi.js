/**
 * geodesystems.com:443
 * Search for data in lots of places - manage your documents, photos and critical business knowledge - communicate and coordinate with blogs, interactive wikis, and data integration dashboards.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* ServiceMediaTabularExtractsheet service.
* @module api/ServiceMediaTabularExtractsheetApi
* @version 1.0.0
*/
export default class ServiceMediaTabularExtractsheetApi {

    /**
    * Constructs a new ServiceMediaTabularExtractsheetApi. 
    * @alias module:api/ServiceMediaTabularExtractsheetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mediaTabularExtractsheet operation.
     * @callback module:api/ServiceMediaTabularExtractsheetApi~mediaTabularExtractsheetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * API for Extract sheets
     * API to call: Extract sheets
     * @param {String} output Output type  -don't change
     * @param {String} entryid Entry ID
     * @param {Object} opts Optional parameters
     * @param {String} [arg1] Sheets
     * @param {module:api/ServiceMediaTabularExtractsheetApi~mediaTabularExtractsheetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    mediaTabularExtractsheet(output, entryid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'output' is set
      if (output === undefined || output === null) {
        throw new Error("Missing the required parameter 'output' when calling mediaTabularExtractsheet");
      }
      // verify the required parameter 'entryid' is set
      if (entryid === undefined || entryid === null) {
        throw new Error("Missing the required parameter 'entryid' when calling mediaTabularExtractsheet");
      }

      let pathParams = {
      };
      let queryParams = {
        'output': output,
        'entryid': entryid,
        'arg1': opts['arg1']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/repository/entry/show', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
