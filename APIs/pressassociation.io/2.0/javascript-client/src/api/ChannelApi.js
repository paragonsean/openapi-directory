/**
 * TV API
 * Welcome to the API Reference Docs page for the Press Association TV API (v2).
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Channel service.
* @module api/ChannelApi
* @version 2.0
*/
export default class ChannelApi {

    /**
    * Constructs a new ChannelApi. 
    * @alias module:api/ChannelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getChannel operation.
     * @callback module:api/ChannelApi~getChannelCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Channel Detail
     * Return the content of the selected channel.
     * @param {String} channelId The identifier for the selected channel.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [aliases = true)] Flag to display Legacy and Provider Ids.
     * @param {module:api/ChannelApi~getChannelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getChannel(channelId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelId' is set
      if (channelId === undefined || channelId === null) {
        throw new Error("Missing the required parameter 'channelId' when calling getChannel");
      }

      let pathParams = {
        'channelId': channelId
      };
      let queryParams = {
        'aliases': opts['aliases']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/channel/{channelId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listChannels operation.
     * @callback module:api/ChannelApi~listChannelsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Channel Collection
     * If you are interested in a list of channels that have had there schedule updated you can filter by the following query params.  - scheduleStart  - scheduleEnd  - scheduleUpdatedSince  adding these query params will filter the channel collection to only return channels that have been updated within the given range, updatedSince stores the state of your previous call.  Example Usage: Every 10 minutes get me the channels that have updated schedules for the next 2 weeks.  /channel?platform={uuid}&scheduleStart={today}&scheduleEnd={today + 2 weeks}&updatedSince={10 minutes ago}  Also please note epg numbers are only exposed when a platform and region are passed to the query.
     * @param {Object} opts Optional parameters
     * @param {String} [platformId = 'd3b26caa-8c7d-5f97-9eff-40fcf1a6f8d3')] The identifier for the selected platform. Multiple platforms can be passed to the API without a region Id. Passing multiple platforms without a region will not return epg numbers as these are linked to a platform and region.
     * @param {String} [regionId = 'afa4f624-da9b-54ce-b514-570345dbbdce')] The platform region ID for the channel selection.
     * @param {Boolean} [aliases = true)] Flag to display Legacy and Provider Ids.
     * @param {String} [date = '2018-09-15')] Date of the Channel State to select, this will display channel names and attributes in the future or past.
     * @param {String} [scheduleStart = '2015-05-05T00:00:00')] The Start Date for the schedule.
     * @param {String} [scheduleEnd = '2015-05-06T00:00:00')] The End Date for the schedule.
     * @param {String} [scheduleUpdatedSince = '2015-05-05T00:00:00')] Schedule Updated Since
     * @param {module:api/ChannelApi~listChannelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listChannels(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'platformId': opts['platformId'],
        'regionId': opts['regionId'],
        'aliases': opts['aliases'],
        'date': opts['date'],
        'scheduleStart': opts['scheduleStart'],
        'scheduleEnd': opts['scheduleEnd'],
        'scheduleUpdatedSince': opts['scheduleUpdatedSince']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/channel', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
