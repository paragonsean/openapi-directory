/**
 * TV API
 * Welcome to the API Reference Docs page for the Press Association TV API (v2).
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Feature service.
* @module api/FeatureApi
* @version 2.0
*/
export default class FeatureApi {

    /**
    * Constructs a new FeatureApi. 
    * @alias module:api/FeatureApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getFeature operation.
     * @callback module:api/FeatureApi~getFeatureCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Feature Detail
     * Return the content of the selected feature.
     * @param {String} featureId The identifier for the selected feature.
     * @param {module:api/FeatureApi~getFeatureCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getFeature(featureId, callback) {
      let postBody = null;
      // verify the required parameter 'featureId' is set
      if (featureId === undefined || featureId === null) {
        throw new Error("Missing the required parameter 'featureId' when calling getFeature");
      }

      let pathParams = {
        'featureId': featureId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/feature/{featureId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listFeatureTypes operation.
     * @callback module:api/FeatureApi~listFeatureTypesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Feature Type Collection
     * Return a collection of Feature Types.
     * @param {module:api/FeatureApi~listFeatureTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listFeatureTypes(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/feature-type', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listFeatures operation.
     * @callback module:api/FeatureApi~listFeaturesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Feature Collection
     * Return a collection of Feature.
     * @param {Object} opts Optional parameters
     * @param {String} [type = 'netflix-monthly')] The namespace of the feature type.
     * @param {String} [date = '2018-09-15')] Date of the collection of feature items.
     * @param {String} [start = '2018-09-15')] Start date for a range of features.
     * @param {String} [end = '2018-10-15')] End date for a range of features.
     * @param {module:api/FeatureApi~listFeaturesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listFeatures(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'type': opts['type'],
        'date': opts['date'],
        'start': opts['start'],
        'end': opts['end']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/feature', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
