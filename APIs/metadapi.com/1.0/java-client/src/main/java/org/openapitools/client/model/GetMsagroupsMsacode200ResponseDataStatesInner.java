/*
 * Zip Code Data API
 * The Zip Code API provides United States zip code data with a comprehensive data model in JSON format. Using REST design, this API can help you build zip validations, city searches, distance calculations, radius searches and many other key functions for your applications.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@metadapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.client.model.GetMsagroupsMsacode200ResponseDataStatesInnerCountiesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMsagroupsMsacode200ResponseDataStatesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:06.826870-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMsagroupsMsacode200ResponseDataStatesInner {
  public static final String SERIALIZED_NAME_COUNTIES = "counties";
  @SerializedName(SERIALIZED_NAME_COUNTIES)
  private Set<GetMsagroupsMsacode200ResponseDataStatesInnerCountiesInner> counties = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_STATE_CODE = "stateCode";
  @SerializedName(SERIALIZED_NAME_STATE_CODE)
  private String stateCode;

  public static final String SERIALIZED_NAME_STATE_FIPS_CODE = "stateFipsCode";
  @SerializedName(SERIALIZED_NAME_STATE_FIPS_CODE)
  private String stateFipsCode;

  public static final String SERIALIZED_NAME_STATE_NAME = "stateName";
  @SerializedName(SERIALIZED_NAME_STATE_NAME)
  private String stateName;

  public GetMsagroupsMsacode200ResponseDataStatesInner() {
  }

  public GetMsagroupsMsacode200ResponseDataStatesInner counties(Set<GetMsagroupsMsacode200ResponseDataStatesInnerCountiesInner> counties) {
    this.counties = counties;
    return this;
  }

  public GetMsagroupsMsacode200ResponseDataStatesInner addCountiesItem(GetMsagroupsMsacode200ResponseDataStatesInnerCountiesInner countiesItem) {
    if (this.counties == null) {
      this.counties = new LinkedHashSet<>();
    }
    this.counties.add(countiesItem);
    return this;
  }

  /**
   * Array with counties related to MSA group in the state.
   * @return counties
   */
  @javax.annotation.Nullable
  public Set<GetMsagroupsMsacode200ResponseDataStatesInnerCountiesInner> getCounties() {
    return counties;
  }

  public void setCounties(Set<GetMsagroupsMsacode200ResponseDataStatesInnerCountiesInner> counties) {
    this.counties = counties;
  }


  public GetMsagroupsMsacode200ResponseDataStatesInner stateCode(String stateCode) {
    this.stateCode = stateCode;
    return this;
  }

  /**
   * Standard 2 character state code.
   * @return stateCode
   */
  @javax.annotation.Nonnull
  public String getStateCode() {
    return stateCode;
  }

  public void setStateCode(String stateCode) {
    this.stateCode = stateCode;
  }


  public GetMsagroupsMsacode200ResponseDataStatesInner stateFipsCode(String stateFipsCode) {
    this.stateFipsCode = stateFipsCode;
    return this;
  }

  /**
   * Federal Information Processing Standards 2 digit assigned code.
   * @return stateFipsCode
   */
  @javax.annotation.Nonnull
  public String getStateFipsCode() {
    return stateFipsCode;
  }

  public void setStateFipsCode(String stateFipsCode) {
    this.stateFipsCode = stateFipsCode;
  }


  public GetMsagroupsMsacode200ResponseDataStatesInner stateName(String stateName) {
    this.stateName = stateName;
    return this;
  }

  /**
   * State Name
   * @return stateName
   */
  @javax.annotation.Nonnull
  public String getStateName() {
    return stateName;
  }

  public void setStateName(String stateName) {
    this.stateName = stateName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMsagroupsMsacode200ResponseDataStatesInner getMsagroupsMsacode200ResponseDataStatesInner = (GetMsagroupsMsacode200ResponseDataStatesInner) o;
    return Objects.equals(this.counties, getMsagroupsMsacode200ResponseDataStatesInner.counties) &&
        Objects.equals(this.stateCode, getMsagroupsMsacode200ResponseDataStatesInner.stateCode) &&
        Objects.equals(this.stateFipsCode, getMsagroupsMsacode200ResponseDataStatesInner.stateFipsCode) &&
        Objects.equals(this.stateName, getMsagroupsMsacode200ResponseDataStatesInner.stateName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(counties, stateCode, stateFipsCode, stateName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMsagroupsMsacode200ResponseDataStatesInner {\n");
    sb.append("    counties: ").append(toIndentedString(counties)).append("\n");
    sb.append("    stateCode: ").append(toIndentedString(stateCode)).append("\n");
    sb.append("    stateFipsCode: ").append(toIndentedString(stateFipsCode)).append("\n");
    sb.append("    stateName: ").append(toIndentedString(stateName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("counties");
    openapiFields.add("stateCode");
    openapiFields.add("stateFipsCode");
    openapiFields.add("stateName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("stateCode");
    openapiRequiredFields.add("stateFipsCode");
    openapiRequiredFields.add("stateName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMsagroupsMsacode200ResponseDataStatesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMsagroupsMsacode200ResponseDataStatesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMsagroupsMsacode200ResponseDataStatesInner is not found in the empty JSON string", GetMsagroupsMsacode200ResponseDataStatesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMsagroupsMsacode200ResponseDataStatesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMsagroupsMsacode200ResponseDataStatesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetMsagroupsMsacode200ResponseDataStatesInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("counties") != null && !jsonObj.get("counties").isJsonNull()) {
        JsonArray jsonArraycounties = jsonObj.getAsJsonArray("counties");
        if (jsonArraycounties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("counties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `counties` to be an array in the JSON string but got `%s`", jsonObj.get("counties").toString()));
          }

          // validate the optional field `counties` (array)
          for (int i = 0; i < jsonArraycounties.size(); i++) {
            GetMsagroupsMsacode200ResponseDataStatesInnerCountiesInner.validateJsonElement(jsonArraycounties.get(i));
          };
        }
      }
      if (!jsonObj.get("stateCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateCode").toString()));
      }
      if (!jsonObj.get("stateFipsCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateFipsCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateFipsCode").toString()));
      }
      if (!jsonObj.get("stateName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMsagroupsMsacode200ResponseDataStatesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMsagroupsMsacode200ResponseDataStatesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMsagroupsMsacode200ResponseDataStatesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMsagroupsMsacode200ResponseDataStatesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMsagroupsMsacode200ResponseDataStatesInner>() {
           @Override
           public void write(JsonWriter out, GetMsagroupsMsacode200ResponseDataStatesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMsagroupsMsacode200ResponseDataStatesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMsagroupsMsacode200ResponseDataStatesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMsagroupsMsacode200ResponseDataStatesInner
   * @throws IOException if the JSON string is invalid with respect to GetMsagroupsMsacode200ResponseDataStatesInner
   */
  public static GetMsagroupsMsacode200ResponseDataStatesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMsagroupsMsacode200ResponseDataStatesInner.class);
  }

  /**
   * Convert an instance of GetMsagroupsMsacode200ResponseDataStatesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

