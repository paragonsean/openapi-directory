/*
 * Zip Code Data API
 * The Zip Code API provides United States zip code data with a comprehensive data model in JSON format. Using REST design, this API can help you build zip validations, city searches, distance calculations, radius searches and many other key functions for your applications.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@metadapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * County Information
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:06.826870-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMsagroups200ResponseDataInnerStatesInnerCountiesInner {
  public static final String SERIALIZED_NAME_COUNTY_FIPS_CODE = "countyFipsCode";
  @SerializedName(SERIALIZED_NAME_COUNTY_FIPS_CODE)
  private String countyFipsCode;

  public static final String SERIALIZED_NAME_TITLE_CASE_COUNTY_NAME = "titleCaseCountyName";
  @SerializedName(SERIALIZED_NAME_TITLE_CASE_COUNTY_NAME)
  private String titleCaseCountyName;

  public static final String SERIALIZED_NAME_USPS_COUNTY_NAME = "uspsCountyName";
  @SerializedName(SERIALIZED_NAME_USPS_COUNTY_NAME)
  private String uspsCountyName;

  public GetMsagroups200ResponseDataInnerStatesInnerCountiesInner() {
  }

  public GetMsagroups200ResponseDataInnerStatesInnerCountiesInner countyFipsCode(String countyFipsCode) {
    this.countyFipsCode = countyFipsCode;
    return this;
  }

  /**
   * FIPS code assigned to the county of the main city of the zip code.
   * @return countyFipsCode
   */
  @javax.annotation.Nonnull
  public String getCountyFipsCode() {
    return countyFipsCode;
  }

  public void setCountyFipsCode(String countyFipsCode) {
    this.countyFipsCode = countyFipsCode;
  }


  public GetMsagroups200ResponseDataInnerStatesInnerCountiesInner titleCaseCountyName(String titleCaseCountyName) {
    this.titleCaseCountyName = titleCaseCountyName;
    return this;
  }

  /**
   * County Name in Title Case
   * @return titleCaseCountyName
   */
  @javax.annotation.Nonnull
  public String getTitleCaseCountyName() {
    return titleCaseCountyName;
  }

  public void setTitleCaseCountyName(String titleCaseCountyName) {
    this.titleCaseCountyName = titleCaseCountyName;
  }


  public GetMsagroups200ResponseDataInnerStatesInnerCountiesInner uspsCountyName(String uspsCountyName) {
    this.uspsCountyName = uspsCountyName;
    return this;
  }

  /**
   * Name of the county of the main city for the zip code. USPS Standard.
   * @return uspsCountyName
   */
  @javax.annotation.Nonnull
  public String getUspsCountyName() {
    return uspsCountyName;
  }

  public void setUspsCountyName(String uspsCountyName) {
    this.uspsCountyName = uspsCountyName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMsagroups200ResponseDataInnerStatesInnerCountiesInner getMsagroups200ResponseDataInnerStatesInnerCountiesInner = (GetMsagroups200ResponseDataInnerStatesInnerCountiesInner) o;
    return Objects.equals(this.countyFipsCode, getMsagroups200ResponseDataInnerStatesInnerCountiesInner.countyFipsCode) &&
        Objects.equals(this.titleCaseCountyName, getMsagroups200ResponseDataInnerStatesInnerCountiesInner.titleCaseCountyName) &&
        Objects.equals(this.uspsCountyName, getMsagroups200ResponseDataInnerStatesInnerCountiesInner.uspsCountyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countyFipsCode, titleCaseCountyName, uspsCountyName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMsagroups200ResponseDataInnerStatesInnerCountiesInner {\n");
    sb.append("    countyFipsCode: ").append(toIndentedString(countyFipsCode)).append("\n");
    sb.append("    titleCaseCountyName: ").append(toIndentedString(titleCaseCountyName)).append("\n");
    sb.append("    uspsCountyName: ").append(toIndentedString(uspsCountyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("countyFipsCode");
    openapiFields.add("titleCaseCountyName");
    openapiFields.add("uspsCountyName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("countyFipsCode");
    openapiRequiredFields.add("titleCaseCountyName");
    openapiRequiredFields.add("uspsCountyName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMsagroups200ResponseDataInnerStatesInnerCountiesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMsagroups200ResponseDataInnerStatesInnerCountiesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMsagroups200ResponseDataInnerStatesInnerCountiesInner is not found in the empty JSON string", GetMsagroups200ResponseDataInnerStatesInnerCountiesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMsagroups200ResponseDataInnerStatesInnerCountiesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMsagroups200ResponseDataInnerStatesInnerCountiesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetMsagroups200ResponseDataInnerStatesInnerCountiesInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("countyFipsCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countyFipsCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countyFipsCode").toString()));
      }
      if (!jsonObj.get("titleCaseCountyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `titleCaseCountyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("titleCaseCountyName").toString()));
      }
      if (!jsonObj.get("uspsCountyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uspsCountyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uspsCountyName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMsagroups200ResponseDataInnerStatesInnerCountiesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMsagroups200ResponseDataInnerStatesInnerCountiesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMsagroups200ResponseDataInnerStatesInnerCountiesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMsagroups200ResponseDataInnerStatesInnerCountiesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMsagroups200ResponseDataInnerStatesInnerCountiesInner>() {
           @Override
           public void write(JsonWriter out, GetMsagroups200ResponseDataInnerStatesInnerCountiesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMsagroups200ResponseDataInnerStatesInnerCountiesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMsagroups200ResponseDataInnerStatesInnerCountiesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMsagroups200ResponseDataInnerStatesInnerCountiesInner
   * @throws IOException if the JSON string is invalid with respect to GetMsagroups200ResponseDataInnerStatesInnerCountiesInner
   */
  public static GetMsagroups200ResponseDataInnerStatesInnerCountiesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMsagroups200ResponseDataInnerStatesInnerCountiesInner.class);
  }

  /**
   * Convert an instance of GetMsagroups200ResponseDataInnerStatesInnerCountiesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

