/**
 * Zip Code Data API
 * The Zip Code API provides United States zip code data with a comprehensive data model in JSON format. Using REST design, this API can help you build zip validations, city searches, distance calculations, radius searches and many other key functions for your applications.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@metadapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIZipcode_cityAliases_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIZipcode_cityAliases_inner::OAIZipcode_cityAliases_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIZipcode_cityAliases_inner::OAIZipcode_cityAliases_inner() {
    this->initializeModel();
}

OAIZipcode_cityAliases_inner::~OAIZipcode_cityAliases_inner() {}

void OAIZipcode_cityAliases_inner::initializeModel() {

    m_title_case_city_name_isSet = false;
    m_title_case_city_name_isValid = false;

    m_usps_city_abbr_isSet = false;
    m_usps_city_abbr_isValid = false;

    m_usps_city_key_isSet = false;
    m_usps_city_key_isValid = false;

    m_usps_city_mailing_ind_isSet = false;
    m_usps_city_mailing_ind_isValid = false;

    m_usps_city_name_isSet = false;
    m_usps_city_name_isValid = false;

    m_usps_main_city_ind_isSet = false;
    m_usps_main_city_ind_isValid = false;
}

void OAIZipcode_cityAliases_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIZipcode_cityAliases_inner::fromJsonObject(QJsonObject json) {

    m_title_case_city_name_isValid = ::OpenAPI::fromJsonValue(m_title_case_city_name, json[QString("titleCaseCityName")]);
    m_title_case_city_name_isSet = !json[QString("titleCaseCityName")].isNull() && m_title_case_city_name_isValid;

    m_usps_city_abbr_isValid = ::OpenAPI::fromJsonValue(m_usps_city_abbr, json[QString("uspsCityAbbr")]);
    m_usps_city_abbr_isSet = !json[QString("uspsCityAbbr")].isNull() && m_usps_city_abbr_isValid;

    m_usps_city_key_isValid = ::OpenAPI::fromJsonValue(m_usps_city_key, json[QString("uspsCityKey")]);
    m_usps_city_key_isSet = !json[QString("uspsCityKey")].isNull() && m_usps_city_key_isValid;

    m_usps_city_mailing_ind_isValid = ::OpenAPI::fromJsonValue(m_usps_city_mailing_ind, json[QString("uspsCityMailingInd")]);
    m_usps_city_mailing_ind_isSet = !json[QString("uspsCityMailingInd")].isNull() && m_usps_city_mailing_ind_isValid;

    m_usps_city_name_isValid = ::OpenAPI::fromJsonValue(m_usps_city_name, json[QString("uspsCityName")]);
    m_usps_city_name_isSet = !json[QString("uspsCityName")].isNull() && m_usps_city_name_isValid;

    m_usps_main_city_ind_isValid = ::OpenAPI::fromJsonValue(m_usps_main_city_ind, json[QString("uspsMainCityInd")]);
    m_usps_main_city_ind_isSet = !json[QString("uspsMainCityInd")].isNull() && m_usps_main_city_ind_isValid;
}

QString OAIZipcode_cityAliases_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIZipcode_cityAliases_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_title_case_city_name_isSet) {
        obj.insert(QString("titleCaseCityName"), ::OpenAPI::toJsonValue(m_title_case_city_name));
    }
    if (m_usps_city_abbr_isSet) {
        obj.insert(QString("uspsCityAbbr"), ::OpenAPI::toJsonValue(m_usps_city_abbr));
    }
    if (m_usps_city_key_isSet) {
        obj.insert(QString("uspsCityKey"), ::OpenAPI::toJsonValue(m_usps_city_key));
    }
    if (m_usps_city_mailing_ind_isSet) {
        obj.insert(QString("uspsCityMailingInd"), ::OpenAPI::toJsonValue(m_usps_city_mailing_ind));
    }
    if (m_usps_city_name_isSet) {
        obj.insert(QString("uspsCityName"), ::OpenAPI::toJsonValue(m_usps_city_name));
    }
    if (m_usps_main_city_ind_isSet) {
        obj.insert(QString("uspsMainCityInd"), ::OpenAPI::toJsonValue(m_usps_main_city_ind));
    }
    return obj;
}

QString OAIZipcode_cityAliases_inner::getTitleCaseCityName() const {
    return m_title_case_city_name;
}
void OAIZipcode_cityAliases_inner::setTitleCaseCityName(const QString &title_case_city_name) {
    m_title_case_city_name = title_case_city_name;
    m_title_case_city_name_isSet = true;
}

bool OAIZipcode_cityAliases_inner::is_title_case_city_name_Set() const{
    return m_title_case_city_name_isSet;
}

bool OAIZipcode_cityAliases_inner::is_title_case_city_name_Valid() const{
    return m_title_case_city_name_isValid;
}

QString OAIZipcode_cityAliases_inner::getUspsCityAbbr() const {
    return m_usps_city_abbr;
}
void OAIZipcode_cityAliases_inner::setUspsCityAbbr(const QString &usps_city_abbr) {
    m_usps_city_abbr = usps_city_abbr;
    m_usps_city_abbr_isSet = true;
}

bool OAIZipcode_cityAliases_inner::is_usps_city_abbr_Set() const{
    return m_usps_city_abbr_isSet;
}

bool OAIZipcode_cityAliases_inner::is_usps_city_abbr_Valid() const{
    return m_usps_city_abbr_isValid;
}

QString OAIZipcode_cityAliases_inner::getUspsCityKey() const {
    return m_usps_city_key;
}
void OAIZipcode_cityAliases_inner::setUspsCityKey(const QString &usps_city_key) {
    m_usps_city_key = usps_city_key;
    m_usps_city_key_isSet = true;
}

bool OAIZipcode_cityAliases_inner::is_usps_city_key_Set() const{
    return m_usps_city_key_isSet;
}

bool OAIZipcode_cityAliases_inner::is_usps_city_key_Valid() const{
    return m_usps_city_key_isValid;
}

bool OAIZipcode_cityAliases_inner::isUspsCityMailingInd() const {
    return m_usps_city_mailing_ind;
}
void OAIZipcode_cityAliases_inner::setUspsCityMailingInd(const bool &usps_city_mailing_ind) {
    m_usps_city_mailing_ind = usps_city_mailing_ind;
    m_usps_city_mailing_ind_isSet = true;
}

bool OAIZipcode_cityAliases_inner::is_usps_city_mailing_ind_Set() const{
    return m_usps_city_mailing_ind_isSet;
}

bool OAIZipcode_cityAliases_inner::is_usps_city_mailing_ind_Valid() const{
    return m_usps_city_mailing_ind_isValid;
}

QString OAIZipcode_cityAliases_inner::getUspsCityName() const {
    return m_usps_city_name;
}
void OAIZipcode_cityAliases_inner::setUspsCityName(const QString &usps_city_name) {
    m_usps_city_name = usps_city_name;
    m_usps_city_name_isSet = true;
}

bool OAIZipcode_cityAliases_inner::is_usps_city_name_Set() const{
    return m_usps_city_name_isSet;
}

bool OAIZipcode_cityAliases_inner::is_usps_city_name_Valid() const{
    return m_usps_city_name_isValid;
}

bool OAIZipcode_cityAliases_inner::isUspsMainCityInd() const {
    return m_usps_main_city_ind;
}
void OAIZipcode_cityAliases_inner::setUspsMainCityInd(const bool &usps_main_city_ind) {
    m_usps_main_city_ind = usps_main_city_ind;
    m_usps_main_city_ind_isSet = true;
}

bool OAIZipcode_cityAliases_inner::is_usps_main_city_ind_Set() const{
    return m_usps_main_city_ind_isSet;
}

bool OAIZipcode_cityAliases_inner::is_usps_main_city_ind_Valid() const{
    return m_usps_main_city_ind_isValid;
}

bool OAIZipcode_cityAliases_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_title_case_city_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usps_city_abbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usps_city_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usps_city_mailing_ind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usps_city_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usps_main_city_ind_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIZipcode_cityAliases_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_title_case_city_name_isValid && m_usps_city_abbr_isValid && m_usps_city_key_isValid && m_usps_city_mailing_ind_isValid && m_usps_city_name_isValid && m_usps_main_city_ind_isValid && true;
}

} // namespace OpenAPI
