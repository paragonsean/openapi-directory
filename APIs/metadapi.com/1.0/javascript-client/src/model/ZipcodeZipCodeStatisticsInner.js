/**
 * Zip Code Data API
 * The Zip Code API provides United States zip code data with a comprehensive data model in JSON format. Using REST design, this API can help you build zip validations, city searches, distance calculations, radius searches and many other key functions for your applications.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@metadapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ZipcodeZipCodeStatisticsInner model module.
 * @module model/ZipcodeZipCodeStatisticsInner
 * @version 1.0
 */
class ZipcodeZipCodeStatisticsInner {
    /**
     * Constructs a new <code>ZipcodeZipCodeStatisticsInner</code>.
     * @alias module:model/ZipcodeZipCodeStatisticsInner
     * @param femalePopulation {Number} Total female population of the zip code.
     * @param malePopulation {Number} Total Male population of the zip code.
     * @param totalPopulation {Number} Total population of the zip code
     * @param year {Number} Year for the captured statistic
     */
    constructor(femalePopulation, malePopulation, totalPopulation, year) { 
        
        ZipcodeZipCodeStatisticsInner.initialize(this, femalePopulation, malePopulation, totalPopulation, year);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, femalePopulation, malePopulation, totalPopulation, year) { 
        obj['femalePopulation'] = femalePopulation;
        obj['malePopulation'] = malePopulation;
        obj['totalPopulation'] = totalPopulation;
        obj['year'] = year;
    }

    /**
     * Constructs a <code>ZipcodeZipCodeStatisticsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ZipcodeZipCodeStatisticsInner} obj Optional instance to populate.
     * @return {module:model/ZipcodeZipCodeStatisticsInner} The populated <code>ZipcodeZipCodeStatisticsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ZipcodeZipCodeStatisticsInner();

            if (data.hasOwnProperty('femalePopulation')) {
                obj['femalePopulation'] = ApiClient.convertToType(data['femalePopulation'], 'Number');
            }
            if (data.hasOwnProperty('malePopulation')) {
                obj['malePopulation'] = ApiClient.convertToType(data['malePopulation'], 'Number');
            }
            if (data.hasOwnProperty('totalPopulation')) {
                obj['totalPopulation'] = ApiClient.convertToType(data['totalPopulation'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ZipcodeZipCodeStatisticsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ZipcodeZipCodeStatisticsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ZipcodeZipCodeStatisticsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ZipcodeZipCodeStatisticsInner.RequiredProperties = ["femalePopulation", "malePopulation", "totalPopulation", "year"];

/**
 * Total female population of the zip code.
 * @member {Number} femalePopulation
 */
ZipcodeZipCodeStatisticsInner.prototype['femalePopulation'] = undefined;

/**
 * Total Male population of the zip code.
 * @member {Number} malePopulation
 */
ZipcodeZipCodeStatisticsInner.prototype['malePopulation'] = undefined;

/**
 * Total population of the zip code
 * @member {Number} totalPopulation
 */
ZipcodeZipCodeStatisticsInner.prototype['totalPopulation'] = undefined;

/**
 * Year for the captured statistic
 * @member {Number} year
 */
ZipcodeZipCodeStatisticsInner.prototype['year'] = undefined;






export default ZipcodeZipCodeStatisticsInner;

