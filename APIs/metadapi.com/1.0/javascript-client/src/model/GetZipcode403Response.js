/**
 * Zip Code Data API
 * The Zip Code API provides United States zip code data with a comprehensive data model in JSON format. Using REST design, this API can help you build zip validations, city searches, distance calculations, radius searches and many other key functions for your applications.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@metadapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetZipcode403Response model module.
 * @module model/GetZipcode403Response
 * @version 1.0
 */
class GetZipcode403Response {
    /**
     * Constructs a new <code>GetZipcode403Response</code>.
     * 
     * @alias module:model/GetZipcode403Response
     * @param message {String} 
     * @param statusCode {Number} 
     */
    constructor(message, statusCode) { 
        
        GetZipcode403Response.initialize(this, message, statusCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, message, statusCode) { 
        obj['message'] = message;
        obj['statusCode'] = statusCode;
    }

    /**
     * Constructs a <code>GetZipcode403Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetZipcode403Response} obj Optional instance to populate.
     * @return {module:model/GetZipcode403Response} The populated <code>GetZipcode403Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetZipcode403Response();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetZipcode403Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetZipcode403Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetZipcode403Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}

GetZipcode403Response.RequiredProperties = ["message", "statusCode"];

/**
 * @member {String} message
 */
GetZipcode403Response.prototype['message'] = undefined;

/**
 * @member {Number} statusCode
 */
GetZipcode403Response.prototype['statusCode'] = undefined;






export default GetZipcode403Response;

