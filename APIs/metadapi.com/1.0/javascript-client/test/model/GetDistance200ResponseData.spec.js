/**
 * Zip Code Data API
 * The Zip Code API provides United States zip code data with a comprehensive data model in JSON format. Using REST design, this API can help you build zip validations, city searches, distance calculations, radius searches and many other key functions for your applications.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@metadapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ZipCodeDataApi);
  }
}(this, function(expect, ZipCodeDataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ZipCodeDataApi.GetDistance200ResponseData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetDistance200ResponseData', function() {
    it('should create an instance of GetDistance200ResponseData', function() {
      // uncomment below and update the code to test GetDistance200ResponseData
      //var instance = new ZipCodeDataApi.GetDistance200ResponseData();
      //expect(instance).to.be.a(ZipCodeDataApi.GetDistance200ResponseData);
    });

    it('should have the property distanceKm (base name: "distanceKm")', function() {
      // uncomment below and update the code to test the property distanceKm
      //var instance = new ZipCodeDataApi.GetDistance200ResponseData();
      //expect(instance).to.be();
    });

    it('should have the property distanceMi (base name: "distanceMi")', function() {
      // uncomment below and update the code to test the property distanceMi
      //var instance = new ZipCodeDataApi.GetDistance200ResponseData();
      //expect(instance).to.be();
    });

    it('should have the property zipCode1 (base name: "zipCode1")', function() {
      // uncomment below and update the code to test the property zipCode1
      //var instance = new ZipCodeDataApi.GetDistance200ResponseData();
      //expect(instance).to.be();
    });

    it('should have the property zipCode2 (base name: "zipCode2")', function() {
      // uncomment below and update the code to test the property zipCode2
      //var instance = new ZipCodeDataApi.GetDistance200ResponseData();
      //expect(instance).to.be();
    });

  });

}));
