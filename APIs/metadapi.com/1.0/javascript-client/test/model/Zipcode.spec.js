/**
 * Zip Code Data API
 * The Zip Code API provides United States zip code data with a comprehensive data model in JSON format. Using REST design, this API can help you build zip validations, city searches, distance calculations, radius searches and many other key functions for your applications.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@metadapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ZipCodeDataApi);
  }
}(this, function(expect, ZipCodeDataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ZipCodeDataApi.Zipcode();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Zipcode', function() {
    it('should create an instance of Zipcode', function() {
      // uncomment below and update the code to test Zipcode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be.a(ZipCodeDataApi.Zipcode);
    });

    it('should have the property cityAliases (base name: "cityAliases")', function() {
      // uncomment below and update the code to test the property cityAliases
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property countyFipsCode (base name: "countyFipsCode")', function() {
      // uncomment below and update the code to test the property countyFipsCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property divisionCode (base name: "divisionCode")', function() {
      // uncomment below and update the code to test the property divisionCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property divisionName (base name: "divisionName")', function() {
      // uncomment below and update the code to test the property divisionName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property landAreaKm2 (base name: "landAreaKm2")', function() {
      // uncomment below and update the code to test the property landAreaKm2
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property landAreaMi2 (base name: "landAreaMi2")', function() {
      // uncomment below and update the code to test the property landAreaMi2
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property msaCode (base name: "msaCode")', function() {
      // uncomment below and update the code to test the property msaCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property msaName (base name: "msaName")', function() {
      // uncomment below and update the code to test the property msaName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property regionCode (base name: "regionCode")', function() {
      // uncomment below and update the code to test the property regionCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property regionName (base name: "regionName")', function() {
      // uncomment below and update the code to test the property regionName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property stateAbbr (base name: "stateAbbr")', function() {
      // uncomment below and update the code to test the property stateAbbr
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property stateCode (base name: "stateCode")', function() {
      // uncomment below and update the code to test the property stateCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property stateFipsCode (base name: "stateFipsCode")', function() {
      // uncomment below and update the code to test the property stateFipsCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property stateName (base name: "stateName")', function() {
      // uncomment below and update the code to test the property stateName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property titleCaseCityName (base name: "titleCaseCityName")', function() {
      // uncomment below and update the code to test the property titleCaseCityName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property titleCaseCountyName (base name: "titleCaseCountyName")', function() {
      // uncomment below and update the code to test the property titleCaseCountyName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uniqueZipNameInd (base name: "uniqueZipNameInd")', function() {
      // uncomment below and update the code to test the property uniqueZipNameInd
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsCarrierRouteRateSortDesc (base name: "uspsCarrierRouteRateSortDesc")', function() {
      // uncomment below and update the code to test the property uspsCarrierRouteRateSortDesc
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsCarrierRouteSortCode (base name: "uspsCarrierRouteSortCode")', function() {
      // uncomment below and update the code to test the property uspsCarrierRouteSortCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsCityMailingInd (base name: "uspsCityMailingInd")', function() {
      // uncomment below and update the code to test the property uspsCityMailingInd
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsCountyName (base name: "uspsCountyName")', function() {
      // uncomment below and update the code to test the property uspsCountyName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsDeliveryCode (base name: "uspsDeliveryCode")', function() {
      // uncomment below and update the code to test the property uspsDeliveryCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsDeliveryDesc (base name: "uspsDeliveryDesc")', function() {
      // uncomment below and update the code to test the property uspsDeliveryDesc
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsFacilityCode (base name: "uspsFacilityCode")', function() {
      // uncomment below and update the code to test the property uspsFacilityCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsFacilityName (base name: "uspsFacilityName")', function() {
      // uncomment below and update the code to test the property uspsFacilityName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsFinanceNumber (base name: "uspsFinanceNumber")', function() {
      // uncomment below and update the code to test the property uspsFinanceNumber
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsMainCityKey (base name: "uspsMainCityKey")', function() {
      // uncomment below and update the code to test the property uspsMainCityKey
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property uspsMainCityName (base name: "uspsMainCityName")', function() {
      // uncomment below and update the code to test the property uspsMainCityName
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property waterAreaKm2 (base name: "waterAreaKm2")', function() {
      // uncomment below and update the code to test the property waterAreaKm2
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property waterAreaMi2 (base name: "waterAreaMi2")', function() {
      // uncomment below and update the code to test the property waterAreaMi2
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property zipClassificationCode (base name: "zipClassificationCode")', function() {
      // uncomment below and update the code to test the property zipClassificationCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property zipClassificationDesc (base name: "zipClassificationDesc")', function() {
      // uncomment below and update the code to test the property zipClassificationDesc
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "zipCode")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

    it('should have the property zipCodeStatistics (base name: "zipCodeStatistics")', function() {
      // uncomment below and update the code to test the property zipCodeStatistics
      //var instance = new ZipCodeDataApi.Zipcode();
      //expect(instance).to.be();
    });

  });

}));
