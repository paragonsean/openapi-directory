/*
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.WebServiceAccount;
import org.openapitools.client.model.WebServiceAccountStatistics;
import org.openapitools.client.model.WebServiceTransferCreditsRequest;
import org.openapitools.client.model.WebServiceUser;
import org.openapitools.client.model.WebServiceUsers;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountApi
 */
@Disabled
public class AccountApiTest {

    private final AccountApi api = new AccountApi();

    /**
     * create
     *
     * Creates a new sub-account in your team. The following fields are required &lt;i&gt;firstname, lastname, email address, contact number&lt;/i&gt; and &lt;i&gt;password.&lt;/i&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1AccountUserPutTest() throws ApiException {
        WebServiceUser body = null;
        WebServiceUser response = api.apiRestV1AccountUserPut(body);
        // TODO: test validations
    }

    /**
     * update
     *
     * Updates a sub-account in your team. The following fields can be updated &lt;i&gt;firstname, lastname, contact number&lt;/i&gt; and &lt;i&gt;password.&lt;/i&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1AccountUserUserIdPostTest() throws ApiException {
        Long userId = null;
        WebServiceUser body = null;
        WebServiceUser response = api.apiRestV1AccountUserUserIdPost(userId, body);
        // TODO: test validations
    }

    /**
     * balance
     *
     * Returns your account&#39;s credit balance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBalanceTest() throws ApiException {
        WebServiceAccount response = api.getBalance();
        // TODO: test validations
    }

    /**
     * statistics
     *
     * Returns data from the statistics report. Note that by default the statistics shown are based on the number of messages, use the calculateCreditValue should you wish to calculate the statistics based on credit value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatisticsTest() throws ApiException {
        OffsetDateTime from = null;
        OffsetDateTime to = null;
        String userEmailAddress = null;
        String campaign = null;
        Boolean includeRefundedAndOptout = null;
        Boolean calculateCreditValue = null;
        WebServiceAccountStatistics response = api.getStatistics(from, to, userEmailAddress, campaign, includeRefundedAndOptout, calculateCreditValue);
        // TODO: test validations
    }

    /**
     * getUser
     *
     * Gets a user from a given user id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        Long userId = null;
        WebServiceUser response = api.getUser(userId);
        // TODO: test validations
    }

    /**
     * search
     *
     * Find a user for a particular email address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTest() throws ApiException {
        String searchEmail = null;
        WebServiceUsers response = api.search(searchEmail);
        // TODO: test validations
    }

    /**
     * transfer
     *
     * Transfers credits between two users in the same team. The &lt;i&gt;account email address&lt;/i&gt; fields as well as the &lt;i&gt;number of credits to transfer&lt;/i&gt; are required. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transferTest() throws ApiException {
        WebServiceTransferCreditsRequest body = null;
        WebServiceUser response = api.transfer(body);
        // TODO: test validations
    }

}
