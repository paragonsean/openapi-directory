/*
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.WebServiceGroup;
import org.openapitools.client.model.WebServiceGroups;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupsApi
 */
@Disabled
public class GroupsApiTest {

    private final GroupsApi api = new GroupsApi();

    /**
     * all
     *
     * Returns all groups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsAllGetTest() throws ApiException {
        WebServiceGroups response = api.apiRestV1GroupsAllGet();
        // TODO: test validations
    }

    /**
     * create
     *
     * Create a  group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsCreatePostTest() throws ApiException {
        WebServiceGroup body = null;
        WebServiceGroup response = api.apiRestV1GroupsCreatePost(body);
        // TODO: test validations
    }

    /**
     * addContact
     *
     * Add a contact to a group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsGroupIdAddContactContactIdGetTest() throws ApiException {
        String groupId = null;
        String contactId = null;
        api.apiRestV1GroupsGroupIdAddContactContactIdGet(groupId, contactId);
        // TODO: test validations
    }

    /**
     * addContact
     *
     * Add a contact to a group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsGroupIdAddContactContactIdPostTest() throws ApiException {
        String groupId = null;
        String contactId = null;
        api.apiRestV1GroupsGroupIdAddContactContactIdPost(groupId, contactId);
        // TODO: test validations
    }

    /**
     * delete
     *
     * Deletes a  group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsGroupIdDeleteTest() throws ApiException {
        String groupId = null;
        api.apiRestV1GroupsGroupIdDelete(groupId);
        // TODO: test validations
    }

    /**
     * get
     *
     * Returns details for a single group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsGroupIdGetTest() throws ApiException {
        String groupId = null;
        WebServiceGroup response = api.apiRestV1GroupsGroupIdGet(groupId);
        // TODO: test validations
    }

    /**
     * update
     *
     * Update a  group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsGroupIdPostTest() throws ApiException {
        String groupId = null;
        WebServiceGroup body = null;
        WebServiceGroup response = api.apiRestV1GroupsGroupIdPost(groupId, body);
        // TODO: test validations
    }

    /**
     * removeContact
     *
     * Remove a contact from a group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsGroupIdRemoveContactContactIdGetTest() throws ApiException {
        String groupId = null;
        String contactId = null;
        api.apiRestV1GroupsGroupIdRemoveContactContactIdGet(groupId, contactId);
        // TODO: test validations
    }

    /**
     * removeContact
     *
     * Remove a contact from a group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiRestV1GroupsGroupIdRemoveContactContactIdPostTest() throws ApiException {
        String groupId = null;
        String contactId = null;
        api.apiRestV1GroupsGroupIdRemoveContactContactIdPost(groupId, contactId);
        // TODO: test validations
    }

}
