/*
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WebServiceStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:22.444535-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WebServiceStatistics {
  public static final String SERIALIZED_NAME_DELIVERED = "delivered";
  @SerializedName(SERIALIZED_NAME_DELIVERED)
  private Double delivered;

  public static final String SERIALIZED_NAME_FAILED = "failed";
  @SerializedName(SERIALIZED_NAME_FAILED)
  private Double failed;

  public static final String SERIALIZED_NAME_FAILED_OPTOUT = "failedOptout";
  @SerializedName(SERIALIZED_NAME_FAILED_OPTOUT)
  private Double failedOptout;

  public static final String SERIALIZED_NAME_FAILED_REFUNDED = "failedRefunded";
  @SerializedName(SERIALIZED_NAME_FAILED_REFUNDED)
  private Double failedRefunded;

  public static final String SERIALIZED_NAME_SENT = "sent";
  @SerializedName(SERIALIZED_NAME_SENT)
  private Double sent;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  public WebServiceStatistics() {
  }

  public WebServiceStatistics delivered(Double delivered) {
    this.delivered = delivered;
    return this;
  }

  /**
   * Get delivered
   * @return delivered
   */
  @javax.annotation.Nullable
  public Double getDelivered() {
    return delivered;
  }

  public void setDelivered(Double delivered) {
    this.delivered = delivered;
  }


  public WebServiceStatistics failed(Double failed) {
    this.failed = failed;
    return this;
  }

  /**
   * Get failed
   * @return failed
   */
  @javax.annotation.Nullable
  public Double getFailed() {
    return failed;
  }

  public void setFailed(Double failed) {
    this.failed = failed;
  }


  public WebServiceStatistics failedOptout(Double failedOptout) {
    this.failedOptout = failedOptout;
    return this;
  }

  /**
   * Get failedOptout
   * @return failedOptout
   */
  @javax.annotation.Nullable
  public Double getFailedOptout() {
    return failedOptout;
  }

  public void setFailedOptout(Double failedOptout) {
    this.failedOptout = failedOptout;
  }


  public WebServiceStatistics failedRefunded(Double failedRefunded) {
    this.failedRefunded = failedRefunded;
    return this;
  }

  /**
   * Get failedRefunded
   * @return failedRefunded
   */
  @javax.annotation.Nullable
  public Double getFailedRefunded() {
    return failedRefunded;
  }

  public void setFailedRefunded(Double failedRefunded) {
    this.failedRefunded = failedRefunded;
  }


  public WebServiceStatistics sent(Double sent) {
    this.sent = sent;
    return this;
  }

  /**
   * Get sent
   * @return sent
   */
  @javax.annotation.Nullable
  public Double getSent() {
    return sent;
  }

  public void setSent(Double sent) {
    this.sent = sent;
  }


  public WebServiceStatistics total(Double total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  public Double getTotal() {
    return total;
  }

  public void setTotal(Double total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebServiceStatistics webServiceStatistics = (WebServiceStatistics) o;
    return Objects.equals(this.delivered, webServiceStatistics.delivered) &&
        Objects.equals(this.failed, webServiceStatistics.failed) &&
        Objects.equals(this.failedOptout, webServiceStatistics.failedOptout) &&
        Objects.equals(this.failedRefunded, webServiceStatistics.failedRefunded) &&
        Objects.equals(this.sent, webServiceStatistics.sent) &&
        Objects.equals(this.total, webServiceStatistics.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(delivered, failed, failedOptout, failedRefunded, sent, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebServiceStatistics {\n");
    sb.append("    delivered: ").append(toIndentedString(delivered)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("    failedOptout: ").append(toIndentedString(failedOptout)).append("\n");
    sb.append("    failedRefunded: ").append(toIndentedString(failedRefunded)).append("\n");
    sb.append("    sent: ").append(toIndentedString(sent)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("delivered");
    openapiFields.add("failed");
    openapiFields.add("failedOptout");
    openapiFields.add("failedRefunded");
    openapiFields.add("sent");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WebServiceStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WebServiceStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebServiceStatistics is not found in the empty JSON string", WebServiceStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WebServiceStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebServiceStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebServiceStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebServiceStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebServiceStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebServiceStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<WebServiceStatistics>() {
           @Override
           public void write(JsonWriter out, WebServiceStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebServiceStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WebServiceStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WebServiceStatistics
   * @throws IOException if the JSON string is invalid with respect to WebServiceStatistics
   */
  public static WebServiceStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebServiceStatistics.class);
  }

  /**
   * Convert an instance of WebServiceStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

