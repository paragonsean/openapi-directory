# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link import Link
from openapi_server import util


class WebServiceTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: str=None, links: List[Link]=None, name: str=None, template_id: int=None):
        """WebServiceTemplate - a model defined in OpenAPI

        :param data: The data of this WebServiceTemplate.
        :param links: The links of this WebServiceTemplate.
        :param name: The name of this WebServiceTemplate.
        :param template_id: The template_id of this WebServiceTemplate.
        """
        self.openapi_types = {
            'data': str,
            'links': List[Link],
            'name': str,
            'template_id': int
        }

        self.attribute_map = {
            'data': 'data',
            'links': 'links',
            'name': 'name',
            'template_id': 'templateId'
        }

        self._data = data
        self._links = links
        self._name = name
        self._template_id = template_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebServiceTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebServiceTemplate of this WebServiceTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this WebServiceTemplate.


        :return: The data of this WebServiceTemplate.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this WebServiceTemplate.


        :param data: The data of this WebServiceTemplate.
        :type data: str
        """

        self._data = data

    @property
    def links(self):
        """Gets the links of this WebServiceTemplate.


        :return: The links of this WebServiceTemplate.
        :rtype: List[Link]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this WebServiceTemplate.


        :param links: The links of this WebServiceTemplate.
        :type links: List[Link]
        """

        self._links = links

    @property
    def name(self):
        """Gets the name of this WebServiceTemplate.


        :return: The name of this WebServiceTemplate.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WebServiceTemplate.


        :param name: The name of this WebServiceTemplate.
        :type name: str
        """

        self._name = name

    @property
    def template_id(self):
        """Gets the template_id of this WebServiceTemplate.


        :return: The template_id of this WebServiceTemplate.
        :rtype: int
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id):
        """Sets the template_id of this WebServiceTemplate.


        :param template_id: The template_id of this WebServiceTemplate.
        :type template_id: int
        """

        self._template_id = template_id
