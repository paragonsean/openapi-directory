# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_service_statistics import WebServiceStatistics
from openapi_server.models.web_service_user_statistics import WebServiceUserStatistics
from openapi_server import util


class WebServiceAccountStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _from: datetime=None, grand_total: WebServiceStatistics=None, showing_credit_value: bool=None, to: datetime=None, users: List[WebServiceUserStatistics]=None):
        """WebServiceAccountStatistics - a model defined in OpenAPI

        :param _from: The _from of this WebServiceAccountStatistics.
        :param grand_total: The grand_total of this WebServiceAccountStatistics.
        :param showing_credit_value: The showing_credit_value of this WebServiceAccountStatistics.
        :param to: The to of this WebServiceAccountStatistics.
        :param users: The users of this WebServiceAccountStatistics.
        """
        self.openapi_types = {
            '_from': datetime,
            'grand_total': WebServiceStatistics,
            'showing_credit_value': bool,
            'to': datetime,
            'users': List[WebServiceUserStatistics]
        }

        self.attribute_map = {
            '_from': 'from',
            'grand_total': 'grandTotal',
            'showing_credit_value': 'showingCreditValue',
            'to': 'to',
            'users': 'users'
        }

        self.__from = _from
        self._grand_total = grand_total
        self._showing_credit_value = showing_credit_value
        self._to = to
        self._users = users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebServiceAccountStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebServiceAccountStatistics of this WebServiceAccountStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _from(self):
        """Gets the _from of this WebServiceAccountStatistics.


        :return: The _from of this WebServiceAccountStatistics.
        :rtype: datetime
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this WebServiceAccountStatistics.


        :param _from: The _from of this WebServiceAccountStatistics.
        :type _from: datetime
        """

        self.__from = _from

    @property
    def grand_total(self):
        """Gets the grand_total of this WebServiceAccountStatistics.


        :return: The grand_total of this WebServiceAccountStatistics.
        :rtype: WebServiceStatistics
        """
        return self._grand_total

    @grand_total.setter
    def grand_total(self, grand_total):
        """Sets the grand_total of this WebServiceAccountStatistics.


        :param grand_total: The grand_total of this WebServiceAccountStatistics.
        :type grand_total: WebServiceStatistics
        """

        self._grand_total = grand_total

    @property
    def showing_credit_value(self):
        """Gets the showing_credit_value of this WebServiceAccountStatistics.


        :return: The showing_credit_value of this WebServiceAccountStatistics.
        :rtype: bool
        """
        return self._showing_credit_value

    @showing_credit_value.setter
    def showing_credit_value(self, showing_credit_value):
        """Sets the showing_credit_value of this WebServiceAccountStatistics.


        :param showing_credit_value: The showing_credit_value of this WebServiceAccountStatistics.
        :type showing_credit_value: bool
        """

        self._showing_credit_value = showing_credit_value

    @property
    def to(self):
        """Gets the to of this WebServiceAccountStatistics.


        :return: The to of this WebServiceAccountStatistics.
        :rtype: datetime
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this WebServiceAccountStatistics.


        :param to: The to of this WebServiceAccountStatistics.
        :type to: datetime
        """

        self._to = to

    @property
    def users(self):
        """Gets the users of this WebServiceAccountStatistics.


        :return: The users of this WebServiceAccountStatistics.
        :rtype: List[WebServiceUserStatistics]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this WebServiceAccountStatistics.


        :param users: The users of this WebServiceAccountStatistics.
        :type users: List[WebServiceUserStatistics]
        """

        self._users = users
