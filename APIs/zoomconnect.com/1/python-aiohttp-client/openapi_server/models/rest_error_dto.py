# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RestErrorDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: int=None, developer_message: str=None, message: str=None, more_info_url: str=None, status: str=None):
        """RestErrorDTO - a model defined in OpenAPI

        :param code: The code of this RestErrorDTO.
        :param developer_message: The developer_message of this RestErrorDTO.
        :param message: The message of this RestErrorDTO.
        :param more_info_url: The more_info_url of this RestErrorDTO.
        :param status: The status of this RestErrorDTO.
        """
        self.openapi_types = {
            'code': int,
            'developer_message': str,
            'message': str,
            'more_info_url': str,
            'status': str
        }

        self.attribute_map = {
            'code': 'code',
            'developer_message': 'developerMessage',
            'message': 'message',
            'more_info_url': 'moreInfoUrl',
            'status': 'status'
        }

        self._code = code
        self._developer_message = developer_message
        self._message = message
        self._more_info_url = more_info_url
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RestErrorDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RestErrorDTO of this RestErrorDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this RestErrorDTO.


        :return: The code of this RestErrorDTO.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this RestErrorDTO.


        :param code: The code of this RestErrorDTO.
        :type code: int
        """

        self._code = code

    @property
    def developer_message(self):
        """Gets the developer_message of this RestErrorDTO.


        :return: The developer_message of this RestErrorDTO.
        :rtype: str
        """
        return self._developer_message

    @developer_message.setter
    def developer_message(self, developer_message):
        """Sets the developer_message of this RestErrorDTO.


        :param developer_message: The developer_message of this RestErrorDTO.
        :type developer_message: str
        """

        self._developer_message = developer_message

    @property
    def message(self):
        """Gets the message of this RestErrorDTO.


        :return: The message of this RestErrorDTO.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this RestErrorDTO.


        :param message: The message of this RestErrorDTO.
        :type message: str
        """

        self._message = message

    @property
    def more_info_url(self):
        """Gets the more_info_url of this RestErrorDTO.


        :return: The more_info_url of this RestErrorDTO.
        :rtype: str
        """
        return self._more_info_url

    @more_info_url.setter
    def more_info_url(self, more_info_url):
        """Sets the more_info_url of this RestErrorDTO.


        :param more_info_url: The more_info_url of this RestErrorDTO.
        :type more_info_url: str
        """

        self._more_info_url = more_info_url

    @property
    def status(self):
        """Gets the status of this RestErrorDTO.


        :return: The status of this RestErrorDTO.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RestErrorDTO.


        :param status: The status of this RestErrorDTO.
        :type status: str
        """

        self._status = status
