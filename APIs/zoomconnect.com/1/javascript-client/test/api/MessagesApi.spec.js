/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WwwZoomconnectCom);
  }
}(this, function(expect, WwwZoomconnectCom) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WwwZoomconnectCom.MessagesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MessagesApi', function() {
    describe('analyse', function() {
      it('should call analyse successfully', function(done) {
        //uncomment below and update the code to test analyse
        //instance.analyse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyseFull', function() {
      it('should call analyseFull successfully', function(done) {
        //uncomment below and update the code to test analyseFull
        //instance.analyseFull(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyseMessageCreditCost', function() {
      it('should call analyseMessageCreditCost successfully', function(done) {
        //uncomment below and update the code to test analyseMessageCreditCost
        //instance.analyseMessageCreditCost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyseMessageEncoding', function() {
      it('should call analyseMessageEncoding successfully', function(done) {
        //uncomment below and update the code to test analyseMessageEncoding
        //instance.analyseMessageEncoding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyseMessageLength', function() {
      it('should call analyseMessageLength successfully', function(done) {
        //uncomment below and update the code to test analyseMessageLength
        //instance.analyseMessageLength(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('analyseNumberOfMessages', function() {
      it('should call analyseNumberOfMessages successfully', function(done) {
        //uncomment below and update the code to test analyseNumberOfMessages
        //instance.analyseNumberOfMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestV1MessagesAllGet', function() {
      it('should call apiRestV1MessagesAllGet successfully', function(done) {
        //uncomment below and update the code to test apiRestV1MessagesAllGet
        //instance.apiRestV1MessagesAllGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestV1MessagesMessageIdDelete', function() {
      it('should call apiRestV1MessagesMessageIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiRestV1MessagesMessageIdDelete
        //instance.apiRestV1MessagesMessageIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestV1MessagesMessageIdGet', function() {
      it('should call apiRestV1MessagesMessageIdGet successfully', function(done) {
        //uncomment below and update the code to test apiRestV1MessagesMessageIdGet
        //instance.apiRestV1MessagesMessageIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestV1MessagesMessageIdMarkReadPost', function() {
      it('should call apiRestV1MessagesMessageIdMarkReadPost successfully', function(done) {
        //uncomment below and update the code to test apiRestV1MessagesMessageIdMarkReadPost
        //instance.apiRestV1MessagesMessageIdMarkReadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestV1MessagesMessageIdMarkReadPut', function() {
      it('should call apiRestV1MessagesMessageIdMarkReadPut successfully', function(done) {
        //uncomment below and update the code to test apiRestV1MessagesMessageIdMarkReadPut
        //instance.apiRestV1MessagesMessageIdMarkReadPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestV1MessagesMessageIdMarkUnreadPost', function() {
      it('should call apiRestV1MessagesMessageIdMarkUnreadPost successfully', function(done) {
        //uncomment below and update the code to test apiRestV1MessagesMessageIdMarkUnreadPost
        //instance.apiRestV1MessagesMessageIdMarkUnreadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestV1MessagesMessageIdMarkUnreadPut', function() {
      it('should call apiRestV1MessagesMessageIdMarkUnreadPut successfully', function(done) {
        //uncomment below and update the code to test apiRestV1MessagesMessageIdMarkUnreadPut
        //instance.apiRestV1MessagesMessageIdMarkUnreadPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
