/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Link from './Link';
import WebServiceVoiceMessage from './WebServiceVoiceMessage';

/**
 * The WebServiceVoiceMessages model module.
 * @module model/WebServiceVoiceMessages
 * @version 1
 */
class WebServiceVoiceMessages {
    /**
     * Constructs a new <code>WebServiceVoiceMessages</code>.
     * WebServiceVoiceMessages
     * @alias module:model/WebServiceVoiceMessages
     */
    constructor() { 
        
        WebServiceVoiceMessages.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebServiceVoiceMessages</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebServiceVoiceMessages} obj Optional instance to populate.
     * @return {module:model/WebServiceVoiceMessages} The populated <code>WebServiceVoiceMessages</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebServiceVoiceMessages();

            if (data.hasOwnProperty('elements')) {
                obj['elements'] = ApiClient.convertToType(data['elements'], 'Number');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [Link]);
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [WebServiceVoiceMessage]);
            }
            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'Number');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('totalElements')) {
                obj['totalElements'] = ApiClient.convertToType(data['totalElements'], 'Number');
            }
            if (data.hasOwnProperty('totalPages')) {
                obj['totalPages'] = ApiClient.convertToType(data['totalPages'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebServiceVoiceMessages</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebServiceVoiceMessages</code>.
     */
    static validateJSON(data) {
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                Link.validateJSON(item);
            };
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                WebServiceVoiceMessage.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} elements
 */
WebServiceVoiceMessages.prototype['elements'] = undefined;

/**
 * @member {Array.<module:model/Link>} links
 */
WebServiceVoiceMessages.prototype['links'] = undefined;

/**
 * @member {Array.<module:model/WebServiceVoiceMessage>} messages
 */
WebServiceVoiceMessages.prototype['messages'] = undefined;

/**
 * @member {Number} page
 */
WebServiceVoiceMessages.prototype['page'] = undefined;

/**
 * @member {Number} pageSize
 */
WebServiceVoiceMessages.prototype['pageSize'] = undefined;

/**
 * @member {Number} totalElements
 */
WebServiceVoiceMessages.prototype['totalElements'] = undefined;

/**
 * @member {Number} totalPages
 */
WebServiceVoiceMessages.prototype['totalPages'] = undefined;






export default WebServiceVoiceMessages;

