/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Link from './Link';

/**
 * The WebServiceVoiceMessage model module.
 * @module model/WebServiceVoiceMessage
 * @version 1
 */
class WebServiceVoiceMessage {
    /**
     * Constructs a new <code>WebServiceVoiceMessage</code>.
     * WebServiceVoiceMessage
     * @alias module:model/WebServiceVoiceMessage
     */
    constructor() { 
        
        WebServiceVoiceMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebServiceVoiceMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebServiceVoiceMessage} obj Optional instance to populate.
     * @return {module:model/WebServiceVoiceMessage} The populated <code>WebServiceVoiceMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebServiceVoiceMessage();

            if (data.hasOwnProperty('audioFileUrl')) {
                obj['audioFileUrl'] = ApiClient.convertToType(data['audioFileUrl'], 'String');
            }
            if (data.hasOwnProperty('campaign')) {
                obj['campaign'] = ApiClient.convertToType(data['campaign'], 'String');
            }
            if (data.hasOwnProperty('dateTimeSent')) {
                obj['dateTimeSent'] = ApiClient.convertToType(data['dateTimeSent'], 'Date');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [Link]);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('messageStatus')) {
                obj['messageStatus'] = ApiClient.convertToType(data['messageStatus'], 'String');
            }
            if (data.hasOwnProperty('toNumber')) {
                obj['toNumber'] = ApiClient.convertToType(data['toNumber'], 'String');
            }
            if (data.hasOwnProperty('userDataField')) {
                obj['userDataField'] = ApiClient.convertToType(data['userDataField'], 'String');
            }
            if (data.hasOwnProperty('voiceMessageId')) {
                obj['voiceMessageId'] = ApiClient.convertToType(data['voiceMessageId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebServiceVoiceMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebServiceVoiceMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['audioFileUrl'] && !(typeof data['audioFileUrl'] === 'string' || data['audioFileUrl'] instanceof String)) {
            throw new Error("Expected the field `audioFileUrl` to be a primitive type in the JSON string but got " + data['audioFileUrl']);
        }
        // ensure the json data is a string
        if (data['campaign'] && !(typeof data['campaign'] === 'string' || data['campaign'] instanceof String)) {
            throw new Error("Expected the field `campaign` to be a primitive type in the JSON string but got " + data['campaign']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                Link.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['messageStatus'] && !(typeof data['messageStatus'] === 'string' || data['messageStatus'] instanceof String)) {
            throw new Error("Expected the field `messageStatus` to be a primitive type in the JSON string but got " + data['messageStatus']);
        }
        // ensure the json data is a string
        if (data['toNumber'] && !(typeof data['toNumber'] === 'string' || data['toNumber'] instanceof String)) {
            throw new Error("Expected the field `toNumber` to be a primitive type in the JSON string but got " + data['toNumber']);
        }
        // ensure the json data is a string
        if (data['userDataField'] && !(typeof data['userDataField'] === 'string' || data['userDataField'] instanceof String)) {
            throw new Error("Expected the field `userDataField` to be a primitive type in the JSON string but got " + data['userDataField']);
        }
        // ensure the json data is a string
        if (data['voiceMessageId'] && !(typeof data['voiceMessageId'] === 'string' || data['voiceMessageId'] instanceof String)) {
            throw new Error("Expected the field `voiceMessageId` to be a primitive type in the JSON string but got " + data['voiceMessageId']);
        }

        return true;
    }


}



/**
 * @member {String} audioFileUrl
 */
WebServiceVoiceMessage.prototype['audioFileUrl'] = undefined;

/**
 * @member {String} campaign
 */
WebServiceVoiceMessage.prototype['campaign'] = undefined;

/**
 * @member {Date} dateTimeSent
 */
WebServiceVoiceMessage.prototype['dateTimeSent'] = undefined;

/**
 * @member {Boolean} deleted
 */
WebServiceVoiceMessage.prototype['deleted'] = undefined;

/**
 * @member {String} language
 */
WebServiceVoiceMessage.prototype['language'] = undefined;

/**
 * @member {Array.<module:model/Link>} links
 */
WebServiceVoiceMessage.prototype['links'] = undefined;

/**
 * @member {String} message
 */
WebServiceVoiceMessage.prototype['message'] = undefined;

/**
 * @member {String} messageStatus
 */
WebServiceVoiceMessage.prototype['messageStatus'] = undefined;

/**
 * @member {String} toNumber
 */
WebServiceVoiceMessage.prototype['toNumber'] = undefined;

/**
 * @member {String} userDataField
 */
WebServiceVoiceMessage.prototype['userDataField'] = undefined;

/**
 * @member {String} voiceMessageId
 */
WebServiceVoiceMessage.prototype['voiceMessageId'] = undefined;






export default WebServiceVoiceMessage;

