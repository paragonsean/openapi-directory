/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebServiceTransferCreditsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebServiceTransferCreditsRequest::OAIWebServiceTransferCreditsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebServiceTransferCreditsRequest::OAIWebServiceTransferCreditsRequest() {
    this->initializeModel();
}

OAIWebServiceTransferCreditsRequest::~OAIWebServiceTransferCreditsRequest() {}

void OAIWebServiceTransferCreditsRequest::initializeModel() {

    m_number_of_credits_to_transfer_isSet = false;
    m_number_of_credits_to_transfer_isValid = false;

    m_transfer_from_email_address_isSet = false;
    m_transfer_from_email_address_isValid = false;

    m_transfer_to_email_address_isSet = false;
    m_transfer_to_email_address_isValid = false;
}

void OAIWebServiceTransferCreditsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebServiceTransferCreditsRequest::fromJsonObject(QJsonObject json) {

    m_number_of_credits_to_transfer_isValid = ::OpenAPI::fromJsonValue(m_number_of_credits_to_transfer, json[QString("numberOfCreditsToTransfer")]);
    m_number_of_credits_to_transfer_isSet = !json[QString("numberOfCreditsToTransfer")].isNull() && m_number_of_credits_to_transfer_isValid;

    m_transfer_from_email_address_isValid = ::OpenAPI::fromJsonValue(m_transfer_from_email_address, json[QString("transferFromEmailAddress")]);
    m_transfer_from_email_address_isSet = !json[QString("transferFromEmailAddress")].isNull() && m_transfer_from_email_address_isValid;

    m_transfer_to_email_address_isValid = ::OpenAPI::fromJsonValue(m_transfer_to_email_address, json[QString("transferToEmailAddress")]);
    m_transfer_to_email_address_isSet = !json[QString("transferToEmailAddress")].isNull() && m_transfer_to_email_address_isValid;
}

QString OAIWebServiceTransferCreditsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebServiceTransferCreditsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_number_of_credits_to_transfer_isSet) {
        obj.insert(QString("numberOfCreditsToTransfer"), ::OpenAPI::toJsonValue(m_number_of_credits_to_transfer));
    }
    if (m_transfer_from_email_address_isSet) {
        obj.insert(QString("transferFromEmailAddress"), ::OpenAPI::toJsonValue(m_transfer_from_email_address));
    }
    if (m_transfer_to_email_address_isSet) {
        obj.insert(QString("transferToEmailAddress"), ::OpenAPI::toJsonValue(m_transfer_to_email_address));
    }
    return obj;
}

qint32 OAIWebServiceTransferCreditsRequest::getNumberOfCreditsToTransfer() const {
    return m_number_of_credits_to_transfer;
}
void OAIWebServiceTransferCreditsRequest::setNumberOfCreditsToTransfer(const qint32 &number_of_credits_to_transfer) {
    m_number_of_credits_to_transfer = number_of_credits_to_transfer;
    m_number_of_credits_to_transfer_isSet = true;
}

bool OAIWebServiceTransferCreditsRequest::is_number_of_credits_to_transfer_Set() const{
    return m_number_of_credits_to_transfer_isSet;
}

bool OAIWebServiceTransferCreditsRequest::is_number_of_credits_to_transfer_Valid() const{
    return m_number_of_credits_to_transfer_isValid;
}

QString OAIWebServiceTransferCreditsRequest::getTransferFromEmailAddress() const {
    return m_transfer_from_email_address;
}
void OAIWebServiceTransferCreditsRequest::setTransferFromEmailAddress(const QString &transfer_from_email_address) {
    m_transfer_from_email_address = transfer_from_email_address;
    m_transfer_from_email_address_isSet = true;
}

bool OAIWebServiceTransferCreditsRequest::is_transfer_from_email_address_Set() const{
    return m_transfer_from_email_address_isSet;
}

bool OAIWebServiceTransferCreditsRequest::is_transfer_from_email_address_Valid() const{
    return m_transfer_from_email_address_isValid;
}

QString OAIWebServiceTransferCreditsRequest::getTransferToEmailAddress() const {
    return m_transfer_to_email_address;
}
void OAIWebServiceTransferCreditsRequest::setTransferToEmailAddress(const QString &transfer_to_email_address) {
    m_transfer_to_email_address = transfer_to_email_address;
    m_transfer_to_email_address_isSet = true;
}

bool OAIWebServiceTransferCreditsRequest::is_transfer_to_email_address_Set() const{
    return m_transfer_to_email_address_isSet;
}

bool OAIWebServiceTransferCreditsRequest::is_transfer_to_email_address_Valid() const{
    return m_transfer_to_email_address_isValid;
}

bool OAIWebServiceTransferCreditsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_number_of_credits_to_transfer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_from_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_to_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebServiceTransferCreditsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
