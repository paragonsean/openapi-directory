/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebServiceAnalyseMessageRequestMessageOnly.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebServiceAnalyseMessageRequestMessageOnly::OAIWebServiceAnalyseMessageRequestMessageOnly(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebServiceAnalyseMessageRequestMessageOnly::OAIWebServiceAnalyseMessageRequestMessageOnly() {
    this->initializeModel();
}

OAIWebServiceAnalyseMessageRequestMessageOnly::~OAIWebServiceAnalyseMessageRequestMessageOnly() {}

void OAIWebServiceAnalyseMessageRequestMessageOnly::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_recipient_number_isSet = false;
    m_recipient_number_isValid = false;
}

void OAIWebServiceAnalyseMessageRequestMessageOnly::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebServiceAnalyseMessageRequestMessageOnly::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_recipient_number_isValid = ::OpenAPI::fromJsonValue(m_recipient_number, json[QString("recipientNumber")]);
    m_recipient_number_isSet = !json[QString("recipientNumber")].isNull() && m_recipient_number_isValid;
}

QString OAIWebServiceAnalyseMessageRequestMessageOnly::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebServiceAnalyseMessageRequestMessageOnly::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_recipient_number_isSet) {
        obj.insert(QString("recipientNumber"), ::OpenAPI::toJsonValue(m_recipient_number));
    }
    return obj;
}

QString OAIWebServiceAnalyseMessageRequestMessageOnly::getMessage() const {
    return m_message;
}
void OAIWebServiceAnalyseMessageRequestMessageOnly::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIWebServiceAnalyseMessageRequestMessageOnly::is_message_Set() const{
    return m_message_isSet;
}

bool OAIWebServiceAnalyseMessageRequestMessageOnly::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIWebServiceAnalyseMessageRequestMessageOnly::getRecipientNumber() const {
    return m_recipient_number;
}
void OAIWebServiceAnalyseMessageRequestMessageOnly::setRecipientNumber(const QString &recipient_number) {
    m_recipient_number = recipient_number;
    m_recipient_number_isSet = true;
}

bool OAIWebServiceAnalyseMessageRequestMessageOnly::is_recipient_number_Set() const{
    return m_recipient_number_isSet;
}

bool OAIWebServiceAnalyseMessageRequestMessageOnly::is_recipient_number_Valid() const{
    return m_recipient_number_isValid;
}

bool OAIWebServiceAnalyseMessageRequestMessageOnly::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebServiceAnalyseMessageRequestMessageOnly::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
