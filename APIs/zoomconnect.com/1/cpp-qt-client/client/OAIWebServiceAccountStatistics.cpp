/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebServiceAccountStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebServiceAccountStatistics::OAIWebServiceAccountStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebServiceAccountStatistics::OAIWebServiceAccountStatistics() {
    this->initializeModel();
}

OAIWebServiceAccountStatistics::~OAIWebServiceAccountStatistics() {}

void OAIWebServiceAccountStatistics::initializeModel() {

    m_from_isSet = false;
    m_from_isValid = false;

    m_grand_total_isSet = false;
    m_grand_total_isValid = false;

    m_showing_credit_value_isSet = false;
    m_showing_credit_value_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;

    m_users_isSet = false;
    m_users_isValid = false;
}

void OAIWebServiceAccountStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebServiceAccountStatistics::fromJsonObject(QJsonObject json) {

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_grand_total_isValid = ::OpenAPI::fromJsonValue(m_grand_total, json[QString("grandTotal")]);
    m_grand_total_isSet = !json[QString("grandTotal")].isNull() && m_grand_total_isValid;

    m_showing_credit_value_isValid = ::OpenAPI::fromJsonValue(m_showing_credit_value, json[QString("showingCreditValue")]);
    m_showing_credit_value_isSet = !json[QString("showingCreditValue")].isNull() && m_showing_credit_value_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;

    m_users_isValid = ::OpenAPI::fromJsonValue(m_users, json[QString("users")]);
    m_users_isSet = !json[QString("users")].isNull() && m_users_isValid;
}

QString OAIWebServiceAccountStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebServiceAccountStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_grand_total.isSet()) {
        obj.insert(QString("grandTotal"), ::OpenAPI::toJsonValue(m_grand_total));
    }
    if (m_showing_credit_value_isSet) {
        obj.insert(QString("showingCreditValue"), ::OpenAPI::toJsonValue(m_showing_credit_value));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    if (m_users.size() > 0) {
        obj.insert(QString("users"), ::OpenAPI::toJsonValue(m_users));
    }
    return obj;
}

QDateTime OAIWebServiceAccountStatistics::getFrom() const {
    return m_from;
}
void OAIWebServiceAccountStatistics::setFrom(const QDateTime &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIWebServiceAccountStatistics::is_from_Set() const{
    return m_from_isSet;
}

bool OAIWebServiceAccountStatistics::is_from_Valid() const{
    return m_from_isValid;
}

OAIWebServiceStatistics OAIWebServiceAccountStatistics::getGrandTotal() const {
    return m_grand_total;
}
void OAIWebServiceAccountStatistics::setGrandTotal(const OAIWebServiceStatistics &grand_total) {
    m_grand_total = grand_total;
    m_grand_total_isSet = true;
}

bool OAIWebServiceAccountStatistics::is_grand_total_Set() const{
    return m_grand_total_isSet;
}

bool OAIWebServiceAccountStatistics::is_grand_total_Valid() const{
    return m_grand_total_isValid;
}

bool OAIWebServiceAccountStatistics::isShowingCreditValue() const {
    return m_showing_credit_value;
}
void OAIWebServiceAccountStatistics::setShowingCreditValue(const bool &showing_credit_value) {
    m_showing_credit_value = showing_credit_value;
    m_showing_credit_value_isSet = true;
}

bool OAIWebServiceAccountStatistics::is_showing_credit_value_Set() const{
    return m_showing_credit_value_isSet;
}

bool OAIWebServiceAccountStatistics::is_showing_credit_value_Valid() const{
    return m_showing_credit_value_isValid;
}

QDateTime OAIWebServiceAccountStatistics::getTo() const {
    return m_to;
}
void OAIWebServiceAccountStatistics::setTo(const QDateTime &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIWebServiceAccountStatistics::is_to_Set() const{
    return m_to_isSet;
}

bool OAIWebServiceAccountStatistics::is_to_Valid() const{
    return m_to_isValid;
}

QList<OAIWebServiceUserStatistics> OAIWebServiceAccountStatistics::getUsers() const {
    return m_users;
}
void OAIWebServiceAccountStatistics::setUsers(const QList<OAIWebServiceUserStatistics> &users) {
    m_users = users;
    m_users_isSet = true;
}

bool OAIWebServiceAccountStatistics::is_users_Set() const{
    return m_users_isSet;
}

bool OAIWebServiceAccountStatistics::is_users_Valid() const{
    return m_users_isValid;
}

bool OAIWebServiceAccountStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grand_total.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_showing_credit_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_users.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebServiceAccountStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
