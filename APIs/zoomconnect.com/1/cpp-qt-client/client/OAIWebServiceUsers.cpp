/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebServiceUsers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebServiceUsers::OAIWebServiceUsers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebServiceUsers::OAIWebServiceUsers() {
    this->initializeModel();
}

OAIWebServiceUsers::~OAIWebServiceUsers() {}

void OAIWebServiceUsers::initializeModel() {

    m_web_service_user_list_isSet = false;
    m_web_service_user_list_isValid = false;
}

void OAIWebServiceUsers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebServiceUsers::fromJsonObject(QJsonObject json) {

    m_web_service_user_list_isValid = ::OpenAPI::fromJsonValue(m_web_service_user_list, json[QString("webServiceUserList")]);
    m_web_service_user_list_isSet = !json[QString("webServiceUserList")].isNull() && m_web_service_user_list_isValid;
}

QString OAIWebServiceUsers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebServiceUsers::asJsonObject() const {
    QJsonObject obj;
    if (m_web_service_user_list.size() > 0) {
        obj.insert(QString("webServiceUserList"), ::OpenAPI::toJsonValue(m_web_service_user_list));
    }
    return obj;
}

QList<OAIWebServiceUser> OAIWebServiceUsers::getWebServiceUserList() const {
    return m_web_service_user_list;
}
void OAIWebServiceUsers::setWebServiceUserList(const QList<OAIWebServiceUser> &web_service_user_list) {
    m_web_service_user_list = web_service_user_list;
    m_web_service_user_list_isSet = true;
}

bool OAIWebServiceUsers::is_web_service_user_list_Set() const{
    return m_web_service_user_list_isSet;
}

bool OAIWebServiceUsers::is_web_service_user_list_Valid() const{
    return m_web_service_user_list_isValid;
}

bool OAIWebServiceUsers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_web_service_user_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebServiceUsers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
