/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebServiceSendSmsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebServiceSendSmsRequest::OAIWebServiceSendSmsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebServiceSendSmsRequest::OAIWebServiceSendSmsRequest() {
    this->initializeModel();
}

OAIWebServiceSendSmsRequest::~OAIWebServiceSendSmsRequest() {}

void OAIWebServiceSendSmsRequest::initializeModel() {

    m_campaign_isSet = false;
    m_campaign_isValid = false;

    m_data_field_isSet = false;
    m_data_field_isValid = false;

    m_date_to_send_isSet = false;
    m_date_to_send_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_recipient_number_isSet = false;
    m_recipient_number_isValid = false;
}

void OAIWebServiceSendSmsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebServiceSendSmsRequest::fromJsonObject(QJsonObject json) {

    m_campaign_isValid = ::OpenAPI::fromJsonValue(m_campaign, json[QString("campaign")]);
    m_campaign_isSet = !json[QString("campaign")].isNull() && m_campaign_isValid;

    m_data_field_isValid = ::OpenAPI::fromJsonValue(m_data_field, json[QString("dataField")]);
    m_data_field_isSet = !json[QString("dataField")].isNull() && m_data_field_isValid;

    m_date_to_send_isValid = ::OpenAPI::fromJsonValue(m_date_to_send, json[QString("dateToSend")]);
    m_date_to_send_isSet = !json[QString("dateToSend")].isNull() && m_date_to_send_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_recipient_number_isValid = ::OpenAPI::fromJsonValue(m_recipient_number, json[QString("recipientNumber")]);
    m_recipient_number_isSet = !json[QString("recipientNumber")].isNull() && m_recipient_number_isValid;
}

QString OAIWebServiceSendSmsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebServiceSendSmsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_campaign_isSet) {
        obj.insert(QString("campaign"), ::OpenAPI::toJsonValue(m_campaign));
    }
    if (m_data_field_isSet) {
        obj.insert(QString("dataField"), ::OpenAPI::toJsonValue(m_data_field));
    }
    if (m_date_to_send_isSet) {
        obj.insert(QString("dateToSend"), ::OpenAPI::toJsonValue(m_date_to_send));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_recipient_number_isSet) {
        obj.insert(QString("recipientNumber"), ::OpenAPI::toJsonValue(m_recipient_number));
    }
    return obj;
}

QString OAIWebServiceSendSmsRequest::getCampaign() const {
    return m_campaign;
}
void OAIWebServiceSendSmsRequest::setCampaign(const QString &campaign) {
    m_campaign = campaign;
    m_campaign_isSet = true;
}

bool OAIWebServiceSendSmsRequest::is_campaign_Set() const{
    return m_campaign_isSet;
}

bool OAIWebServiceSendSmsRequest::is_campaign_Valid() const{
    return m_campaign_isValid;
}

QString OAIWebServiceSendSmsRequest::getDataField() const {
    return m_data_field;
}
void OAIWebServiceSendSmsRequest::setDataField(const QString &data_field) {
    m_data_field = data_field;
    m_data_field_isSet = true;
}

bool OAIWebServiceSendSmsRequest::is_data_field_Set() const{
    return m_data_field_isSet;
}

bool OAIWebServiceSendSmsRequest::is_data_field_Valid() const{
    return m_data_field_isValid;
}

QDateTime OAIWebServiceSendSmsRequest::getDateToSend() const {
    return m_date_to_send;
}
void OAIWebServiceSendSmsRequest::setDateToSend(const QDateTime &date_to_send) {
    m_date_to_send = date_to_send;
    m_date_to_send_isSet = true;
}

bool OAIWebServiceSendSmsRequest::is_date_to_send_Set() const{
    return m_date_to_send_isSet;
}

bool OAIWebServiceSendSmsRequest::is_date_to_send_Valid() const{
    return m_date_to_send_isValid;
}

QString OAIWebServiceSendSmsRequest::getMessage() const {
    return m_message;
}
void OAIWebServiceSendSmsRequest::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIWebServiceSendSmsRequest::is_message_Set() const{
    return m_message_isSet;
}

bool OAIWebServiceSendSmsRequest::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIWebServiceSendSmsRequest::getRecipientNumber() const {
    return m_recipient_number;
}
void OAIWebServiceSendSmsRequest::setRecipientNumber(const QString &recipient_number) {
    m_recipient_number = recipient_number;
    m_recipient_number_isSet = true;
}

bool OAIWebServiceSendSmsRequest::is_recipient_number_Set() const{
    return m_recipient_number_isSet;
}

bool OAIWebServiceSendSmsRequest::is_recipient_number_Valid() const{
    return m_recipient_number_isValid;
}

bool OAIWebServiceSendSmsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_campaign_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_to_send_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebServiceSendSmsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
