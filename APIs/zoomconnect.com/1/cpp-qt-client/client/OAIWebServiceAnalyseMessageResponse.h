/**
 * www.zoomconnect.com
 * The world's greatest SMS API
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebServiceAnalyseMessageResponse.h
 *
 * WebServiceAnalyseMessageResponse
 */

#ifndef OAIWebServiceAnalyseMessageResponse_H
#define OAIWebServiceAnalyseMessageResponse_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebServiceAnalyseMessageResponse : public OAIObject {
public:
    OAIWebServiceAnalyseMessageResponse();
    OAIWebServiceAnalyseMessageResponse(QString json);
    ~OAIWebServiceAnalyseMessageResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QList<OAIObject>> getCharacterAnalysis() const;
    void setCharacterAnalysis(const QList<QList<OAIObject>> &character_analysis);
    bool is_character_analysis_Set() const;
    bool is_character_analysis_Valid() const;

    double getMessageCreditCost() const;
    void setMessageCreditCost(const double &message_credit_cost);
    bool is_message_credit_cost_Set() const;
    bool is_message_credit_cost_Valid() const;

    QString getMessageEncoding() const;
    void setMessageEncoding(const QString &message_encoding);
    bool is_message_encoding_Set() const;
    bool is_message_encoding_Valid() const;

    qint32 getMessageLength() const;
    void setMessageLength(const qint32 &message_length);
    bool is_message_length_Set() const;
    bool is_message_length_Valid() const;

    bool isMessageLengthWithinMaximumAllowed() const;
    void setMessageLengthWithinMaximumAllowed(const bool &message_length_within_maximum_allowed);
    bool is_message_length_within_maximum_allowed_Set() const;
    bool is_message_length_within_maximum_allowed_Valid() const;

    qint32 getNumberOfMessages() const;
    void setNumberOfMessages(const qint32 &number_of_messages);
    bool is_number_of_messages_Set() const;
    bool is_number_of_messages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QList<OAIObject>> m_character_analysis;
    bool m_character_analysis_isSet;
    bool m_character_analysis_isValid;

    double m_message_credit_cost;
    bool m_message_credit_cost_isSet;
    bool m_message_credit_cost_isValid;

    QString m_message_encoding;
    bool m_message_encoding_isSet;
    bool m_message_encoding_isValid;

    qint32 m_message_length;
    bool m_message_length_isSet;
    bool m_message_length_isValid;

    bool m_message_length_within_maximum_allowed;
    bool m_message_length_within_maximum_allowed_isSet;
    bool m_message_length_within_maximum_allowed_isValid;

    qint32 m_number_of_messages;
    bool m_number_of_messages_isSet;
    bool m_number_of_messages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebServiceAnalyseMessageResponse)

#endif // OAIWebServiceAnalyseMessageResponse_H
