# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labels: List[str]=None, logo: str=None, merchant: str=None, transaction_id: str=None, website: str=None):
        """GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner - a model defined in OpenAPI

        :param labels: The labels of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :param logo: The logo of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :param merchant: The merchant of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :param transaction_id: The transaction_id of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :param website: The website of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        """
        self.openapi_types = {
            'labels': List[str],
            'logo': str,
            'merchant': str,
            'transaction_id': str,
            'website': str
        }

        self.attribute_map = {
            'labels': 'labels',
            'logo': 'logo',
            'merchant': 'merchant',
            'transaction_id': 'transaction_id',
            'website': 'website'
        }

        self._labels = labels
        self._logo = logo
        self._merchant = merchant
        self._transaction_id = transaction_id
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getABatchOfBusinessTransactionClassificationResults_200_response_results_inner of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labels(self):
        """Gets the labels of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :return: The labels of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :param labels: The labels of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :type labels: List[str]
        """

        self._labels = labels

    @property
    def logo(self):
        """Gets the logo of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :return: The logo of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :param logo: The logo of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :type logo: str
        """

        self._logo = logo

    @property
    def merchant(self):
        """Gets the merchant of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :return: The merchant of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :rtype: str
        """
        return self._merchant

    @merchant.setter
    def merchant(self, merchant):
        """Sets the merchant of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :param merchant: The merchant of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :type merchant: str
        """

        self._merchant = merchant

    @property
    def transaction_id(self):
        """Gets the transaction_id of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :return: The transaction_id of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :param transaction_id: The transaction_id of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :type transaction_id: str
        """

        self._transaction_id = transaction_id

    @property
    def website(self):
        """Gets the website of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :return: The website of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.


        :param website: The website of this GetABatchOfBusinessTransactionClassificationResults200ResponseResultsInner.
        :type website: str
        """

        self._website = website
