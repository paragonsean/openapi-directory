/**
 * Ntropy Transaction API v1
 * Ntropy Transaction API for transaction classification & management  Contact Support:  Name: API Support  Email: api@ntropy.network
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner from './GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner';

/**
 * The GetABatchOfConsumerTransactionClassificationResults200Response model module.
 * @module model/GetABatchOfConsumerTransactionClassificationResults200Response
 * @version 1.0.0
 */
class GetABatchOfConsumerTransactionClassificationResults200Response {
    /**
     * Constructs a new <code>GetABatchOfConsumerTransactionClassificationResults200Response</code>.
     * @alias module:model/GetABatchOfConsumerTransactionClassificationResults200Response
     */
    constructor() { 
        
        GetABatchOfConsumerTransactionClassificationResults200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetABatchOfConsumerTransactionClassificationResults200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetABatchOfConsumerTransactionClassificationResults200Response} obj Optional instance to populate.
     * @return {module:model/GetABatchOfConsumerTransactionClassificationResults200Response} The populated <code>GetABatchOfConsumerTransactionClassificationResults200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetABatchOfConsumerTransactionClassificationResults200Response();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = ApiClient.convertToType(data['progress'], 'Number');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetABatchOfConsumerTransactionClassificationResults200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetABatchOfConsumerTransactionClassificationResults200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
GetABatchOfConsumerTransactionClassificationResults200Response.prototype['id'] = undefined;

/**
 * @member {Number} progress
 */
GetABatchOfConsumerTransactionClassificationResults200Response.prototype['progress'] = undefined;

/**
 * @member {Array.<module:model/GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner>} results
 */
GetABatchOfConsumerTransactionClassificationResults200Response.prototype['results'] = undefined;

/**
 * @member {String} status
 */
GetABatchOfConsumerTransactionClassificationResults200Response.prototype['status'] = undefined;

/**
 * @member {String} updated_at
 */
GetABatchOfConsumerTransactionClassificationResults200Response.prototype['updated_at'] = undefined;






export default GetABatchOfConsumerTransactionClassificationResults200Response;

