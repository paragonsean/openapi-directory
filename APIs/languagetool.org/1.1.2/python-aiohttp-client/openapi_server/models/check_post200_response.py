# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.check_post200_response_language import CheckPost200ResponseLanguage
from openapi_server.models.check_post200_response_matches_inner import CheckPost200ResponseMatchesInner
from openapi_server.models.check_post200_response_software import CheckPost200ResponseSoftware
from openapi_server import util


class CheckPost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language: CheckPost200ResponseLanguage=None, matches: List[CheckPost200ResponseMatchesInner]=None, software: CheckPost200ResponseSoftware=None):
        """CheckPost200Response - a model defined in OpenAPI

        :param language: The language of this CheckPost200Response.
        :param matches: The matches of this CheckPost200Response.
        :param software: The software of this CheckPost200Response.
        """
        self.openapi_types = {
            'language': CheckPost200ResponseLanguage,
            'matches': List[CheckPost200ResponseMatchesInner],
            'software': CheckPost200ResponseSoftware
        }

        self.attribute_map = {
            'language': 'language',
            'matches': 'matches',
            'software': 'software'
        }

        self._language = language
        self._matches = matches
        self._software = software

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckPost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _check_post_200_response of this CheckPost200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language(self):
        """Gets the language of this CheckPost200Response.


        :return: The language of this CheckPost200Response.
        :rtype: CheckPost200ResponseLanguage
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this CheckPost200Response.


        :param language: The language of this CheckPost200Response.
        :type language: CheckPost200ResponseLanguage
        """

        self._language = language

    @property
    def matches(self):
        """Gets the matches of this CheckPost200Response.


        :return: The matches of this CheckPost200Response.
        :rtype: List[CheckPost200ResponseMatchesInner]
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this CheckPost200Response.


        :param matches: The matches of this CheckPost200Response.
        :type matches: List[CheckPost200ResponseMatchesInner]
        """

        self._matches = matches

    @property
    def software(self):
        """Gets the software of this CheckPost200Response.


        :return: The software of this CheckPost200Response.
        :rtype: CheckPost200ResponseSoftware
        """
        return self._software

    @software.setter
    def software(self, software):
        """Sets the software of this CheckPost200Response.


        :param software: The software of this CheckPost200Response.
        :type software: CheckPost200ResponseSoftware
        """

        self._software = software
