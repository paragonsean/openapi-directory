/**
 * LanguageTool API
 * Check texts for style and grammar issues with <a href='https://languagetool.org'>LanguageTool</a>. Please consider the following default limitations:<ul><li>your daily request limit depending on <a href='https://languagetool.org/editor/settings/access-tokens'>your plan</a> <li>maximum number of requests per minute: 20 (free) / 80 (Premium) <li>maximum number of characters per minute: 75,000 (free) / 300,000 (Premium) <li>maximum number of characters per request: 20,000 (free) / 60,000 (Premium) <li>for the free version, also consider the <a href='https://dev.languagetool.org/public-http-api'>limitations documented here</a> <li><b>Note:</b> any parameters or outputs not part of this documentation are internal and must not be relied on</ul> Need more generous limits? Just <a href='https://languagetool.org/proofreading-api'>contact us</a>.
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CheckPost200Response from './model/CheckPost200Response';
import CheckPost200ResponseLanguage from './model/CheckPost200ResponseLanguage';
import CheckPost200ResponseLanguageDetectedLanguage from './model/CheckPost200ResponseLanguageDetectedLanguage';
import CheckPost200ResponseMatchesInner from './model/CheckPost200ResponseMatchesInner';
import CheckPost200ResponseMatchesInnerContext from './model/CheckPost200ResponseMatchesInnerContext';
import CheckPost200ResponseMatchesInnerReplacementsInner from './model/CheckPost200ResponseMatchesInnerReplacementsInner';
import CheckPost200ResponseMatchesInnerRule from './model/CheckPost200ResponseMatchesInnerRule';
import CheckPost200ResponseMatchesInnerRuleCategory from './model/CheckPost200ResponseMatchesInnerRuleCategory';
import CheckPost200ResponseMatchesInnerRuleUrlsInner from './model/CheckPost200ResponseMatchesInnerRuleUrlsInner';
import CheckPost200ResponseSoftware from './model/CheckPost200ResponseSoftware';
import LanguagesGet200ResponseInner from './model/LanguagesGet200ResponseInner';
import WordsAddPost200Response from './model/WordsAddPost200Response';
import WordsDeletePost200Response from './model/WordsDeletePost200Response';
import WordsGet200Response from './model/WordsGet200Response';
import DefaultApi from './api/DefaultApi';


/**
* Check texts for style and grammar issues with &lt;a href&#x3D;&#39;https://languagetool.org&#39;&gt;LanguageTool&lt;/a&gt;. Please consider the following default limitations:&lt;ul&gt;&lt;li&gt;your daily request limit depending on &lt;a href&#x3D;&#39;https://languagetool.org/editor/settings/access-tokens&#39;&gt;your plan&lt;/a&gt; &lt;li&gt;maximum number of requests per minute: 20 (free) / 80 (Premium) &lt;li&gt;maximum number of characters per minute: 75,000 (free) / 300,000 (Premium) &lt;li&gt;maximum number of characters per request: 20,000 (free) / 60,000 (Premium) &lt;li&gt;for the free version, also consider the &lt;a href&#x3D;&#39;https://dev.languagetool.org/public-http-api&#39;&gt;limitations documented here&lt;/a&gt; &lt;li&gt;&lt;b&gt;Note:&lt;/b&gt; any parameters or outputs not part of this documentation are internal and must not be relied on&lt;/ul&gt; Need more generous limits? Just &lt;a href&#x3D;&#39;https://languagetool.org/proofreading-api&#39;&gt;contact us&lt;/a&gt;..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var LanguageToolApi = require('index'); // See note below*.
* var xxxSvc = new LanguageToolApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new LanguageToolApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new LanguageToolApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new LanguageToolApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.1.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CheckPost200Response model constructor.
     * @property {module:model/CheckPost200Response}
     */
    CheckPost200Response,

    /**
     * The CheckPost200ResponseLanguage model constructor.
     * @property {module:model/CheckPost200ResponseLanguage}
     */
    CheckPost200ResponseLanguage,

    /**
     * The CheckPost200ResponseLanguageDetectedLanguage model constructor.
     * @property {module:model/CheckPost200ResponseLanguageDetectedLanguage}
     */
    CheckPost200ResponseLanguageDetectedLanguage,

    /**
     * The CheckPost200ResponseMatchesInner model constructor.
     * @property {module:model/CheckPost200ResponseMatchesInner}
     */
    CheckPost200ResponseMatchesInner,

    /**
     * The CheckPost200ResponseMatchesInnerContext model constructor.
     * @property {module:model/CheckPost200ResponseMatchesInnerContext}
     */
    CheckPost200ResponseMatchesInnerContext,

    /**
     * The CheckPost200ResponseMatchesInnerReplacementsInner model constructor.
     * @property {module:model/CheckPost200ResponseMatchesInnerReplacementsInner}
     */
    CheckPost200ResponseMatchesInnerReplacementsInner,

    /**
     * The CheckPost200ResponseMatchesInnerRule model constructor.
     * @property {module:model/CheckPost200ResponseMatchesInnerRule}
     */
    CheckPost200ResponseMatchesInnerRule,

    /**
     * The CheckPost200ResponseMatchesInnerRuleCategory model constructor.
     * @property {module:model/CheckPost200ResponseMatchesInnerRuleCategory}
     */
    CheckPost200ResponseMatchesInnerRuleCategory,

    /**
     * The CheckPost200ResponseMatchesInnerRuleUrlsInner model constructor.
     * @property {module:model/CheckPost200ResponseMatchesInnerRuleUrlsInner}
     */
    CheckPost200ResponseMatchesInnerRuleUrlsInner,

    /**
     * The CheckPost200ResponseSoftware model constructor.
     * @property {module:model/CheckPost200ResponseSoftware}
     */
    CheckPost200ResponseSoftware,

    /**
     * The LanguagesGet200ResponseInner model constructor.
     * @property {module:model/LanguagesGet200ResponseInner}
     */
    LanguagesGet200ResponseInner,

    /**
     * The WordsAddPost200Response model constructor.
     * @property {module:model/WordsAddPost200Response}
     */
    WordsAddPost200Response,

    /**
     * The WordsDeletePost200Response model constructor.
     * @property {module:model/WordsDeletePost200Response}
     */
    WordsDeletePost200Response,

    /**
     * The WordsGet200Response model constructor.
     * @property {module:model/WordsGet200Response}
     */
    WordsGet200Response,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
