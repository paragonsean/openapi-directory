/*
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.PaymentError;
import org.openapitools.client.model.PaymentRefundRequest;
import org.openapitools.client.model.Refund;
import org.openapitools.client.model.RefundError;
import org.openapitools.client.model.RefundForSearchResult;
import org.openapitools.client.model.RefundSearchResults;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RefundingCardPaymentsApi
 */
@Disabled
public class RefundingCardPaymentsApiTest {

    private final RefundingCardPaymentsApi api = new RefundingCardPaymentsApi();

    /**
     * Find payment refund by ID
     *
     * Return payment refund information by Refund ID The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAPaymentRefundTest() throws ApiException {
        String paymentId = null;
        String refundId = null;
        Refund response = api.getAPaymentRefund(paymentId, refundId);
        // TODO: test validations
    }

    /**
     * Get all refunds for a payment
     *
     * Return refunds for a payment. The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllRefundsForAPaymentTest() throws ApiException {
        String paymentId = null;
        RefundForSearchResult response = api.getAllRefundsForAPayment(paymentId);
        // TODO: test validations
    }

    /**
     * Search refunds
     *
     * Search refunds by &#39;from&#39; and &#39;to&#39; date. The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchRefundsTest() throws ApiException {
        String fromDate = null;
        String toDate = null;
        String fromSettledDate = null;
        String toSettledDate = null;
        String page = null;
        String displaySize = null;
        RefundSearchResults response = api.searchRefunds(fromDate, toDate, fromSettledDate, toSettledDate, page, displaySize);
        // TODO: test validations
    }

    /**
     * Submit a refund for a payment
     *
     * Return issued refund information. The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitARefundForAPaymentTest() throws ApiException {
        String paymentId = null;
        PaymentRefundRequest body = null;
        Refund response = api.submitARefundForAPayment(paymentId, body);
        // TODO: test validations
    }

}
