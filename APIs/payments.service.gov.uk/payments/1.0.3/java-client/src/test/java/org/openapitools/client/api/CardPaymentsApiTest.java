/*
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateCardPaymentRequest;
import org.openapitools.client.model.CreatePaymentResult;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.GetPaymentResult;
import org.openapitools.client.model.PaymentError;
import org.openapitools.client.model.PaymentEvents;
import org.openapitools.client.model.PaymentSearchResults;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardPaymentsApi
 */
@Disabled
public class CardPaymentsApiTest {

    private final CardPaymentsApi api = new CardPaymentsApi();

    /**
     * Cancel payment
     *
     * Cancel a payment based on the provided payment ID and the Authorisation token. The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;. A payment can only be cancelled if it&#39;s in a state that isn&#39;t finished.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelAPaymentTest() throws ApiException {
        String paymentId = null;
        api.cancelAPayment(paymentId);
        // TODO: test validations
    }

    /**
     * Capture payment
     *
     * Capture a payment based on the provided payment ID and the Authorisation token. The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;. A payment can only be captured if it&#39;s in &#39;submitted&#39; state
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void captureAPaymentTest() throws ApiException {
        String paymentId = null;
        api.captureAPayment(paymentId);
        // TODO: test validations
    }

    /**
     * Create new payment
     *
     * Create a new payment for the account associated to the Authorisation token. The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAPaymentTest() throws ApiException {
        CreateCardPaymentRequest body = null;
        CreatePaymentResult response = api.createAPayment(body);
        // TODO: test validations
    }

    /**
     * Find payment by ID
     *
     * Return information about the payment The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAPaymentTest() throws ApiException {
        String paymentId = null;
        GetPaymentResult response = api.getAPayment(paymentId);
        // TODO: test validations
    }

    /**
     * Return payment events by ID
     *
     * Return payment events information about a certain payment The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventsForAPaymentTest() throws ApiException {
        String paymentId = null;
        PaymentEvents response = api.getEventsForAPayment(paymentId);
        // TODO: test validations
    }

    /**
     * Search payments
     *
     * Search payments by reference, state, &#39;from&#39; and &#39;to&#39; date. The Authorisation token needs to be specified in the &#39;authorization&#39; header as &#39;authorization: Bearer YOUR_API_KEY_HERE&#39;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchPaymentsTest() throws ApiException {
        String reference = null;
        String email = null;
        String state = null;
        String cardBrand = null;
        String fromDate = null;
        String toDate = null;
        String page = null;
        String displaySize = null;
        String cardholderName = null;
        String firstDigitsCardNumber = null;
        String lastDigitsCardNumber = null;
        String fromSettledDate = null;
        String toSettledDate = null;
        PaymentSearchResults response = api.searchPayments(reference, email, state, cardBrand, fromDate, toDate, page, displaySize, cardholderName, firstDigitsCardNumber, lastDigitsCardNumber, fromSettledDate, toSettledDate);
        // TODO: test validations
    }

}
