/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostLink::OAIPostLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostLink::OAIPostLink() {
    this->initializeModel();
}

OAIPostLink::~OAIPostLink() {}

void OAIPostLink::initializeModel() {

    m_href_isSet = false;
    m_href_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_params_isSet = false;
    m_params_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIPostLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostLink::fromJsonObject(QJsonObject json) {

    m_href_isValid = ::OpenAPI::fromJsonValue(m_href, json[QString("href")]);
    m_href_isSet = !json[QString("href")].isNull() && m_href_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_params_isValid = ::OpenAPI::fromJsonValue(m_params, json[QString("params")]);
    m_params_isSet = !json[QString("params")].isNull() && m_params_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIPostLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostLink::asJsonObject() const {
    QJsonObject obj;
    if (m_href_isSet) {
        obj.insert(QString("href"), ::OpenAPI::toJsonValue(m_href));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_params.size() > 0) {
        obj.insert(QString("params"), ::OpenAPI::toJsonValue(m_params));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIPostLink::getHref() const {
    return m_href;
}
void OAIPostLink::setHref(const QString &href) {
    m_href = href;
    m_href_isSet = true;
}

bool OAIPostLink::is_href_Set() const{
    return m_href_isSet;
}

bool OAIPostLink::is_href_Valid() const{
    return m_href_isValid;
}

QString OAIPostLink::getMethod() const {
    return m_method;
}
void OAIPostLink::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIPostLink::is_method_Set() const{
    return m_method_isSet;
}

bool OAIPostLink::is_method_Valid() const{
    return m_method_isValid;
}

QMap<QString, OAIObject> OAIPostLink::getParams() const {
    return m_params;
}
void OAIPostLink::setParams(const QMap<QString, OAIObject> &params) {
    m_params = params;
    m_params_isSet = true;
}

bool OAIPostLink::is_params_Set() const{
    return m_params_isSet;
}

bool OAIPostLink::is_params_Valid() const{
    return m_params_isValid;
}

QString OAIPostLink::getType() const {
    return m_type;
}
void OAIPostLink::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIPostLink::is_type_Set() const{
    return m_type_isSet;
}

bool OAIPostLink::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIPostLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_href_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_params.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
