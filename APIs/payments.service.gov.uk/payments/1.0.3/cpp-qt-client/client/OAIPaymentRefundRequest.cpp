/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentRefundRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentRefundRequest::OAIPaymentRefundRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentRefundRequest::OAIPaymentRefundRequest() {
    this->initializeModel();
}

OAIPaymentRefundRequest::~OAIPaymentRefundRequest() {}

void OAIPaymentRefundRequest::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_refund_amount_available_isSet = false;
    m_refund_amount_available_isValid = false;
}

void OAIPaymentRefundRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentRefundRequest::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_refund_amount_available_isValid = ::OpenAPI::fromJsonValue(m_refund_amount_available, json[QString("refund_amount_available")]);
    m_refund_amount_available_isSet = !json[QString("refund_amount_available")].isNull() && m_refund_amount_available_isValid;
}

QString OAIPaymentRefundRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentRefundRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_refund_amount_available_isSet) {
        obj.insert(QString("refund_amount_available"), ::OpenAPI::toJsonValue(m_refund_amount_available));
    }
    return obj;
}

qint32 OAIPaymentRefundRequest::getAmount() const {
    return m_amount;
}
void OAIPaymentRefundRequest::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIPaymentRefundRequest::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIPaymentRefundRequest::is_amount_Valid() const{
    return m_amount_isValid;
}

qint32 OAIPaymentRefundRequest::getRefundAmountAvailable() const {
    return m_refund_amount_available;
}
void OAIPaymentRefundRequest::setRefundAmountAvailable(const qint32 &refund_amount_available) {
    m_refund_amount_available = refund_amount_available;
    m_refund_amount_available_isSet = true;
}

bool OAIPaymentRefundRequest::is_refund_amount_available_Set() const{
    return m_refund_amount_available_isSet;
}

bool OAIPaymentRefundRequest::is_refund_amount_available_Valid() const{
    return m_refund_amount_available_isValid;
}

bool OAIPaymentRefundRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_amount_available_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentRefundRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && true;
}

} // namespace OpenAPI
