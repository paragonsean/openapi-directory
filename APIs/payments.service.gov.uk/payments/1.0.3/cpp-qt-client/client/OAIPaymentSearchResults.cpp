/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentSearchResults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentSearchResults::OAIPaymentSearchResults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentSearchResults::OAIPaymentSearchResults() {
    this->initializeModel();
}

OAIPaymentSearchResults::~OAIPaymentSearchResults() {}

void OAIPaymentSearchResults::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_count_isSet = false;
    m_count_isValid = false;

    m_page_isSet = false;
    m_page_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAIPaymentSearchResults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentSearchResults::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_page_isValid = ::OpenAPI::fromJsonValue(m_page, json[QString("page")]);
    m_page_isSet = !json[QString("page")].isNull() && m_page_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAIPaymentSearchResults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentSearchResults::asJsonObject() const {
    QJsonObject obj;
    if (m__links.isSet()) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_page_isSet) {
        obj.insert(QString("page"), ::OpenAPI::toJsonValue(m_page));
    }
    if (m_results.size() > 0) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

OAISearchNavigationLinks OAIPaymentSearchResults::getLinks() const {
    return m__links;
}
void OAIPaymentSearchResults::setLinks(const OAISearchNavigationLinks &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIPaymentSearchResults::is__links_Set() const{
    return m__links_isSet;
}

bool OAIPaymentSearchResults::is__links_Valid() const{
    return m__links_isValid;
}

qint32 OAIPaymentSearchResults::getCount() const {
    return m_count;
}
void OAIPaymentSearchResults::setCount(const qint32 &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIPaymentSearchResults::is_count_Set() const{
    return m_count_isSet;
}

bool OAIPaymentSearchResults::is_count_Valid() const{
    return m_count_isValid;
}

qint32 OAIPaymentSearchResults::getPage() const {
    return m_page;
}
void OAIPaymentSearchResults::setPage(const qint32 &page) {
    m_page = page;
    m_page_isSet = true;
}

bool OAIPaymentSearchResults::is_page_Set() const{
    return m_page_isSet;
}

bool OAIPaymentSearchResults::is_page_Valid() const{
    return m_page_isValid;
}

QList<OAIPaymentDetailForSearch> OAIPaymentSearchResults::getResults() const {
    return m_results;
}
void OAIPaymentSearchResults::setResults(const QList<OAIPaymentDetailForSearch> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIPaymentSearchResults::is_results_Set() const{
    return m_results_isSet;
}

bool OAIPaymentSearchResults::is_results_Valid() const{
    return m_results_isValid;
}

qint32 OAIPaymentSearchResults::getTotal() const {
    return m_total;
}
void OAIPaymentSearchResults::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIPaymentSearchResults::is_total_Set() const{
    return m_total_isSet;
}

bool OAIPaymentSearchResults::is_total_Valid() const{
    return m_total_isValid;
}

bool OAIPaymentSearchResults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentSearchResults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
