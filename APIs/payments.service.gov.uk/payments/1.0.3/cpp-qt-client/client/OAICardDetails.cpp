/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardDetails::OAICardDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardDetails::OAICardDetails() {
    this->initializeModel();
}

OAICardDetails::~OAICardDetails() {}

void OAICardDetails::initializeModel() {

    m_billing_address_isSet = false;
    m_billing_address_isValid = false;

    m_card_brand_isSet = false;
    m_card_brand_isValid = false;

    m_card_type_isSet = false;
    m_card_type_isValid = false;

    m_cardholder_name_isSet = false;
    m_cardholder_name_isValid = false;

    m_expiry_date_isSet = false;
    m_expiry_date_isValid = false;

    m_first_digits_card_number_isSet = false;
    m_first_digits_card_number_isValid = false;

    m_last_digits_card_number_isSet = false;
    m_last_digits_card_number_isValid = false;
}

void OAICardDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardDetails::fromJsonObject(QJsonObject json) {

    m_billing_address_isValid = ::OpenAPI::fromJsonValue(m_billing_address, json[QString("billing_address")]);
    m_billing_address_isSet = !json[QString("billing_address")].isNull() && m_billing_address_isValid;

    m_card_brand_isValid = ::OpenAPI::fromJsonValue(m_card_brand, json[QString("card_brand")]);
    m_card_brand_isSet = !json[QString("card_brand")].isNull() && m_card_brand_isValid;

    m_card_type_isValid = ::OpenAPI::fromJsonValue(m_card_type, json[QString("card_type")]);
    m_card_type_isSet = !json[QString("card_type")].isNull() && m_card_type_isValid;

    m_cardholder_name_isValid = ::OpenAPI::fromJsonValue(m_cardholder_name, json[QString("cardholder_name")]);
    m_cardholder_name_isSet = !json[QString("cardholder_name")].isNull() && m_cardholder_name_isValid;

    m_expiry_date_isValid = ::OpenAPI::fromJsonValue(m_expiry_date, json[QString("expiry_date")]);
    m_expiry_date_isSet = !json[QString("expiry_date")].isNull() && m_expiry_date_isValid;

    m_first_digits_card_number_isValid = ::OpenAPI::fromJsonValue(m_first_digits_card_number, json[QString("first_digits_card_number")]);
    m_first_digits_card_number_isSet = !json[QString("first_digits_card_number")].isNull() && m_first_digits_card_number_isValid;

    m_last_digits_card_number_isValid = ::OpenAPI::fromJsonValue(m_last_digits_card_number, json[QString("last_digits_card_number")]);
    m_last_digits_card_number_isSet = !json[QString("last_digits_card_number")].isNull() && m_last_digits_card_number_isValid;
}

QString OAICardDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_address.isSet()) {
        obj.insert(QString("billing_address"), ::OpenAPI::toJsonValue(m_billing_address));
    }
    if (m_card_brand_isSet) {
        obj.insert(QString("card_brand"), ::OpenAPI::toJsonValue(m_card_brand));
    }
    if (m_card_type_isSet) {
        obj.insert(QString("card_type"), ::OpenAPI::toJsonValue(m_card_type));
    }
    if (m_cardholder_name_isSet) {
        obj.insert(QString("cardholder_name"), ::OpenAPI::toJsonValue(m_cardholder_name));
    }
    if (m_expiry_date_isSet) {
        obj.insert(QString("expiry_date"), ::OpenAPI::toJsonValue(m_expiry_date));
    }
    if (m_first_digits_card_number_isSet) {
        obj.insert(QString("first_digits_card_number"), ::OpenAPI::toJsonValue(m_first_digits_card_number));
    }
    if (m_last_digits_card_number_isSet) {
        obj.insert(QString("last_digits_card_number"), ::OpenAPI::toJsonValue(m_last_digits_card_number));
    }
    return obj;
}

OAIAddress OAICardDetails::getBillingAddress() const {
    return m_billing_address;
}
void OAICardDetails::setBillingAddress(const OAIAddress &billing_address) {
    m_billing_address = billing_address;
    m_billing_address_isSet = true;
}

bool OAICardDetails::is_billing_address_Set() const{
    return m_billing_address_isSet;
}

bool OAICardDetails::is_billing_address_Valid() const{
    return m_billing_address_isValid;
}

QString OAICardDetails::getCardBrand() const {
    return m_card_brand;
}
void OAICardDetails::setCardBrand(const QString &card_brand) {
    m_card_brand = card_brand;
    m_card_brand_isSet = true;
}

bool OAICardDetails::is_card_brand_Set() const{
    return m_card_brand_isSet;
}

bool OAICardDetails::is_card_brand_Valid() const{
    return m_card_brand_isValid;
}

QString OAICardDetails::getCardType() const {
    return m_card_type;
}
void OAICardDetails::setCardType(const QString &card_type) {
    m_card_type = card_type;
    m_card_type_isSet = true;
}

bool OAICardDetails::is_card_type_Set() const{
    return m_card_type_isSet;
}

bool OAICardDetails::is_card_type_Valid() const{
    return m_card_type_isValid;
}

QString OAICardDetails::getCardholderName() const {
    return m_cardholder_name;
}
void OAICardDetails::setCardholderName(const QString &cardholder_name) {
    m_cardholder_name = cardholder_name;
    m_cardholder_name_isSet = true;
}

bool OAICardDetails::is_cardholder_name_Set() const{
    return m_cardholder_name_isSet;
}

bool OAICardDetails::is_cardholder_name_Valid() const{
    return m_cardholder_name_isValid;
}

QString OAICardDetails::getExpiryDate() const {
    return m_expiry_date;
}
void OAICardDetails::setExpiryDate(const QString &expiry_date) {
    m_expiry_date = expiry_date;
    m_expiry_date_isSet = true;
}

bool OAICardDetails::is_expiry_date_Set() const{
    return m_expiry_date_isSet;
}

bool OAICardDetails::is_expiry_date_Valid() const{
    return m_expiry_date_isValid;
}

QString OAICardDetails::getFirstDigitsCardNumber() const {
    return m_first_digits_card_number;
}
void OAICardDetails::setFirstDigitsCardNumber(const QString &first_digits_card_number) {
    m_first_digits_card_number = first_digits_card_number;
    m_first_digits_card_number_isSet = true;
}

bool OAICardDetails::is_first_digits_card_number_Set() const{
    return m_first_digits_card_number_isSet;
}

bool OAICardDetails::is_first_digits_card_number_Valid() const{
    return m_first_digits_card_number_isValid;
}

QString OAICardDetails::getLastDigitsCardNumber() const {
    return m_last_digits_card_number;
}
void OAICardDetails::setLastDigitsCardNumber(const QString &last_digits_card_number) {
    m_last_digits_card_number = last_digits_card_number;
    m_last_digits_card_number_isSet = true;
}

bool OAICardDetails::is_last_digits_card_number_Set() const{
    return m_last_digits_card_number_isSet;
}

bool OAICardDetails::is_last_digits_card_number_Valid() const{
    return m_last_digits_card_number_isValid;
}

bool OAICardDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cardholder_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiry_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_digits_card_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_digits_card_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
