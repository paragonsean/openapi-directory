/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentSettlementSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentSettlementSummary::OAIPaymentSettlementSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentSettlementSummary::OAIPaymentSettlementSummary() {
    this->initializeModel();
}

OAIPaymentSettlementSummary::~OAIPaymentSettlementSummary() {}

void OAIPaymentSettlementSummary::initializeModel() {

    m_capture_submit_time_isSet = false;
    m_capture_submit_time_isValid = false;

    m_captured_date_isSet = false;
    m_captured_date_isValid = false;

    m_settled_date_isSet = false;
    m_settled_date_isValid = false;
}

void OAIPaymentSettlementSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentSettlementSummary::fromJsonObject(QJsonObject json) {

    m_capture_submit_time_isValid = ::OpenAPI::fromJsonValue(m_capture_submit_time, json[QString("capture_submit_time")]);
    m_capture_submit_time_isSet = !json[QString("capture_submit_time")].isNull() && m_capture_submit_time_isValid;

    m_captured_date_isValid = ::OpenAPI::fromJsonValue(m_captured_date, json[QString("captured_date")]);
    m_captured_date_isSet = !json[QString("captured_date")].isNull() && m_captured_date_isValid;

    m_settled_date_isValid = ::OpenAPI::fromJsonValue(m_settled_date, json[QString("settled_date")]);
    m_settled_date_isSet = !json[QString("settled_date")].isNull() && m_settled_date_isValid;
}

QString OAIPaymentSettlementSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentSettlementSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_capture_submit_time_isSet) {
        obj.insert(QString("capture_submit_time"), ::OpenAPI::toJsonValue(m_capture_submit_time));
    }
    if (m_captured_date_isSet) {
        obj.insert(QString("captured_date"), ::OpenAPI::toJsonValue(m_captured_date));
    }
    if (m_settled_date_isSet) {
        obj.insert(QString("settled_date"), ::OpenAPI::toJsonValue(m_settled_date));
    }
    return obj;
}

QString OAIPaymentSettlementSummary::getCaptureSubmitTime() const {
    return m_capture_submit_time;
}
void OAIPaymentSettlementSummary::setCaptureSubmitTime(const QString &capture_submit_time) {
    m_capture_submit_time = capture_submit_time;
    m_capture_submit_time_isSet = true;
}

bool OAIPaymentSettlementSummary::is_capture_submit_time_Set() const{
    return m_capture_submit_time_isSet;
}

bool OAIPaymentSettlementSummary::is_capture_submit_time_Valid() const{
    return m_capture_submit_time_isValid;
}

QString OAIPaymentSettlementSummary::getCapturedDate() const {
    return m_captured_date;
}
void OAIPaymentSettlementSummary::setCapturedDate(const QString &captured_date) {
    m_captured_date = captured_date;
    m_captured_date_isSet = true;
}

bool OAIPaymentSettlementSummary::is_captured_date_Set() const{
    return m_captured_date_isSet;
}

bool OAIPaymentSettlementSummary::is_captured_date_Valid() const{
    return m_captured_date_isValid;
}

QString OAIPaymentSettlementSummary::getSettledDate() const {
    return m_settled_date;
}
void OAIPaymentSettlementSummary::setSettledDate(const QString &settled_date) {
    m_settled_date = settled_date;
    m_settled_date_isSet = true;
}

bool OAIPaymentSettlementSummary::is_settled_date_Set() const{
    return m_settled_date_isSet;
}

bool OAIPaymentSettlementSummary::is_settled_date_Valid() const{
    return m_settled_date_isValid;
}

bool OAIPaymentSettlementSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capture_submit_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_captured_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settled_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentSettlementSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
