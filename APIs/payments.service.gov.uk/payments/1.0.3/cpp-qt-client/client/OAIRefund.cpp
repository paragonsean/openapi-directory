/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefund.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefund::OAIRefund(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefund::OAIRefund() {
    this->initializeModel();
}

OAIRefund::~OAIRefund() {}

void OAIRefund::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_refund_id_isSet = false;
    m_refund_id_isValid = false;

    m_settlement_summary_isSet = false;
    m_settlement_summary_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIRefund::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRefund::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("created_date")]);
    m_created_date_isSet = !json[QString("created_date")].isNull() && m_created_date_isValid;

    m_refund_id_isValid = ::OpenAPI::fromJsonValue(m_refund_id, json[QString("refund_id")]);
    m_refund_id_isSet = !json[QString("refund_id")].isNull() && m_refund_id_isValid;

    m_settlement_summary_isValid = ::OpenAPI::fromJsonValue(m_settlement_summary, json[QString("settlement_summary")]);
    m_settlement_summary_isSet = !json[QString("settlement_summary")].isNull() && m_settlement_summary_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIRefund::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRefund::asJsonObject() const {
    QJsonObject obj;
    if (m__links.isSet()) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("created_date"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_refund_id_isSet) {
        obj.insert(QString("refund_id"), ::OpenAPI::toJsonValue(m_refund_id));
    }
    if (m_settlement_summary.isSet()) {
        obj.insert(QString("settlement_summary"), ::OpenAPI::toJsonValue(m_settlement_summary));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIRefundLinksForSearch OAIRefund::getLinks() const {
    return m__links;
}
void OAIRefund::setLinks(const OAIRefundLinksForSearch &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIRefund::is__links_Set() const{
    return m__links_isSet;
}

bool OAIRefund::is__links_Valid() const{
    return m__links_isValid;
}

qint64 OAIRefund::getAmount() const {
    return m_amount;
}
void OAIRefund::setAmount(const qint64 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIRefund::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIRefund::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIRefund::getCreatedDate() const {
    return m_created_date;
}
void OAIRefund::setCreatedDate(const QString &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIRefund::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIRefund::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIRefund::getRefundId() const {
    return m_refund_id;
}
void OAIRefund::setRefundId(const QString &refund_id) {
    m_refund_id = refund_id;
    m_refund_id_isSet = true;
}

bool OAIRefund::is_refund_id_Set() const{
    return m_refund_id_isSet;
}

bool OAIRefund::is_refund_id_Valid() const{
    return m_refund_id_isValid;
}

OAIRefundSettlementSummary OAIRefund::getSettlementSummary() const {
    return m_settlement_summary;
}
void OAIRefund::setSettlementSummary(const OAIRefundSettlementSummary &settlement_summary) {
    m_settlement_summary = settlement_summary;
    m_settlement_summary_isSet = true;
}

bool OAIRefund::is_settlement_summary_Set() const{
    return m_settlement_summary_isSet;
}

bool OAIRefund::is_settlement_summary_Valid() const{
    return m_settlement_summary_isValid;
}

QString OAIRefund::getStatus() const {
    return m_status;
}
void OAIRefund::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIRefund::is_status_Set() const{
    return m_status_isSet;
}

bool OAIRefund::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIRefund::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settlement_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRefund::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
