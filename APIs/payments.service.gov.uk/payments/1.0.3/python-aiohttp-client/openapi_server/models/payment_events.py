# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment_event import PaymentEvent
from openapi_server.models.payment_links_for_events import PaymentLinksForEvents
from openapi_server import util


class PaymentEvents(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: PaymentLinksForEvents=None, events: List[PaymentEvent]=None, payment_id: str=None):
        """PaymentEvents - a model defined in OpenAPI

        :param links: The links of this PaymentEvents.
        :param events: The events of this PaymentEvents.
        :param payment_id: The payment_id of this PaymentEvents.
        """
        self.openapi_types = {
            'links': PaymentLinksForEvents,
            'events': List[PaymentEvent],
            'payment_id': str
        }

        self.attribute_map = {
            'links': '_links',
            'events': 'events',
            'payment_id': 'payment_id'
        }

        self._links = links
        self._events = events
        self._payment_id = payment_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaymentEvents':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PaymentEvents of this PaymentEvents.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this PaymentEvents.


        :return: The links of this PaymentEvents.
        :rtype: PaymentLinksForEvents
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this PaymentEvents.


        :param links: The links of this PaymentEvents.
        :type links: PaymentLinksForEvents
        """

        self._links = links

    @property
    def events(self):
        """Gets the events of this PaymentEvents.


        :return: The events of this PaymentEvents.
        :rtype: List[PaymentEvent]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this PaymentEvents.


        :param events: The events of this PaymentEvents.
        :type events: List[PaymentEvent]
        """

        self._events = events

    @property
    def payment_id(self):
        """Gets the payment_id of this PaymentEvents.


        :return: The payment_id of this PaymentEvents.
        :rtype: str
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """Sets the payment_id of this PaymentEvents.


        :param payment_id: The payment_id of this PaymentEvents.
        :type payment_id: str
        """

        self._payment_id = payment_id
