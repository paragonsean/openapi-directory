# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RefundSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_available: int=None, amount_submitted: int=None, status: str=None):
        """RefundSummary - a model defined in OpenAPI

        :param amount_available: The amount_available of this RefundSummary.
        :param amount_submitted: The amount_submitted of this RefundSummary.
        :param status: The status of this RefundSummary.
        """
        self.openapi_types = {
            'amount_available': int,
            'amount_submitted': int,
            'status': str
        }

        self.attribute_map = {
            'amount_available': 'amount_available',
            'amount_submitted': 'amount_submitted',
            'status': 'status'
        }

        self._amount_available = amount_available
        self._amount_submitted = amount_submitted
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RefundSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RefundSummary of this RefundSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_available(self):
        """Gets the amount_available of this RefundSummary.

        Amount available for refund in pence

        :return: The amount_available of this RefundSummary.
        :rtype: int
        """
        return self._amount_available

    @amount_available.setter
    def amount_available(self, amount_available):
        """Sets the amount_available of this RefundSummary.

        Amount available for refund in pence

        :param amount_available: The amount_available of this RefundSummary.
        :type amount_available: int
        """

        self._amount_available = amount_available

    @property
    def amount_submitted(self):
        """Gets the amount_submitted of this RefundSummary.

        Amount submitted for refunds on this Payment in pence

        :return: The amount_submitted of this RefundSummary.
        :rtype: int
        """
        return self._amount_submitted

    @amount_submitted.setter
    def amount_submitted(self, amount_submitted):
        """Sets the amount_submitted of this RefundSummary.

        Amount submitted for refunds on this Payment in pence

        :param amount_submitted: The amount_submitted of this RefundSummary.
        :type amount_submitted: int
        """

        self._amount_submitted = amount_submitted

    @property
    def status(self):
        """Gets the status of this RefundSummary.

        Availability status of the refund

        :return: The status of this RefundSummary.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RefundSummary.

        Availability status of the refund

        :param status: The status of this RefundSummary.
        :type status: str
        """

        self._status = status
