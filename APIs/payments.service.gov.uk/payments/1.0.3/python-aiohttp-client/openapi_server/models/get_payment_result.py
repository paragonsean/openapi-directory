# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.card_details import CardDetails
from openapi_server.models.payment_links import PaymentLinks
from openapi_server.models.payment_settlement_summary import PaymentSettlementSummary
from openapi_server.models.payment_state import PaymentState
from openapi_server.models.refund_summary import RefundSummary
from openapi_server import util


class GetPaymentResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: PaymentLinks=None, amount: int=None, card_brand: str=None, card_details: CardDetails=None, corporate_card_surcharge: int=None, created_date: str=None, delayed_capture: bool=None, description: str=None, email: str=None, fee: int=None, language: str=None, metadata: Dict[str, str]=None, moto: bool=None, net_amount: int=None, payment_id: str=None, payment_provider: str=None, provider_id: str=None, reference: str=None, refund_summary: RefundSummary=None, return_url: str=None, settlement_summary: PaymentSettlementSummary=None, state: PaymentState=None, total_amount: int=None):
        """GetPaymentResult - a model defined in OpenAPI

        :param links: The links of this GetPaymentResult.
        :param amount: The amount of this GetPaymentResult.
        :param card_brand: The card_brand of this GetPaymentResult.
        :param card_details: The card_details of this GetPaymentResult.
        :param corporate_card_surcharge: The corporate_card_surcharge of this GetPaymentResult.
        :param created_date: The created_date of this GetPaymentResult.
        :param delayed_capture: The delayed_capture of this GetPaymentResult.
        :param description: The description of this GetPaymentResult.
        :param email: The email of this GetPaymentResult.
        :param fee: The fee of this GetPaymentResult.
        :param language: The language of this GetPaymentResult.
        :param metadata: The metadata of this GetPaymentResult.
        :param moto: The moto of this GetPaymentResult.
        :param net_amount: The net_amount of this GetPaymentResult.
        :param payment_id: The payment_id of this GetPaymentResult.
        :param payment_provider: The payment_provider of this GetPaymentResult.
        :param provider_id: The provider_id of this GetPaymentResult.
        :param reference: The reference of this GetPaymentResult.
        :param refund_summary: The refund_summary of this GetPaymentResult.
        :param return_url: The return_url of this GetPaymentResult.
        :param settlement_summary: The settlement_summary of this GetPaymentResult.
        :param state: The state of this GetPaymentResult.
        :param total_amount: The total_amount of this GetPaymentResult.
        """
        self.openapi_types = {
            'links': PaymentLinks,
            'amount': int,
            'card_brand': str,
            'card_details': CardDetails,
            'corporate_card_surcharge': int,
            'created_date': str,
            'delayed_capture': bool,
            'description': str,
            'email': str,
            'fee': int,
            'language': str,
            'metadata': Dict[str, str],
            'moto': bool,
            'net_amount': int,
            'payment_id': str,
            'payment_provider': str,
            'provider_id': str,
            'reference': str,
            'refund_summary': RefundSummary,
            'return_url': str,
            'settlement_summary': PaymentSettlementSummary,
            'state': PaymentState,
            'total_amount': int
        }

        self.attribute_map = {
            'links': '_links',
            'amount': 'amount',
            'card_brand': 'card_brand',
            'card_details': 'card_details',
            'corporate_card_surcharge': 'corporate_card_surcharge',
            'created_date': 'created_date',
            'delayed_capture': 'delayed_capture',
            'description': 'description',
            'email': 'email',
            'fee': 'fee',
            'language': 'language',
            'metadata': 'metadata',
            'moto': 'moto',
            'net_amount': 'net_amount',
            'payment_id': 'payment_id',
            'payment_provider': 'payment_provider',
            'provider_id': 'provider_id',
            'reference': 'reference',
            'refund_summary': 'refund_summary',
            'return_url': 'return_url',
            'settlement_summary': 'settlement_summary',
            'state': 'state',
            'total_amount': 'total_amount'
        }

        self._links = links
        self._amount = amount
        self._card_brand = card_brand
        self._card_details = card_details
        self._corporate_card_surcharge = corporate_card_surcharge
        self._created_date = created_date
        self._delayed_capture = delayed_capture
        self._description = description
        self._email = email
        self._fee = fee
        self._language = language
        self._metadata = metadata
        self._moto = moto
        self._net_amount = net_amount
        self._payment_id = payment_id
        self._payment_provider = payment_provider
        self._provider_id = provider_id
        self._reference = reference
        self._refund_summary = refund_summary
        self._return_url = return_url
        self._settlement_summary = settlement_summary
        self._state = state
        self._total_amount = total_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPaymentResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPaymentResult of this GetPaymentResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this GetPaymentResult.


        :return: The links of this GetPaymentResult.
        :rtype: PaymentLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this GetPaymentResult.


        :param links: The links of this GetPaymentResult.
        :type links: PaymentLinks
        """

        self._links = links

    @property
    def amount(self):
        """Gets the amount of this GetPaymentResult.


        :return: The amount of this GetPaymentResult.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this GetPaymentResult.


        :param amount: The amount of this GetPaymentResult.
        :type amount: int
        """

        self._amount = amount

    @property
    def card_brand(self):
        """Gets the card_brand of this GetPaymentResult.

        Card Brand

        :return: The card_brand of this GetPaymentResult.
        :rtype: str
        """
        return self._card_brand

    @card_brand.setter
    def card_brand(self, card_brand):
        """Sets the card_brand of this GetPaymentResult.

        Card Brand

        :param card_brand: The card_brand of this GetPaymentResult.
        :type card_brand: str
        """

        self._card_brand = card_brand

    @property
    def card_details(self):
        """Gets the card_details of this GetPaymentResult.


        :return: The card_details of this GetPaymentResult.
        :rtype: CardDetails
        """
        return self._card_details

    @card_details.setter
    def card_details(self, card_details):
        """Sets the card_details of this GetPaymentResult.


        :param card_details: The card_details of this GetPaymentResult.
        :type card_details: CardDetails
        """

        self._card_details = card_details

    @property
    def corporate_card_surcharge(self):
        """Gets the corporate_card_surcharge of this GetPaymentResult.


        :return: The corporate_card_surcharge of this GetPaymentResult.
        :rtype: int
        """
        return self._corporate_card_surcharge

    @corporate_card_surcharge.setter
    def corporate_card_surcharge(self, corporate_card_surcharge):
        """Sets the corporate_card_surcharge of this GetPaymentResult.


        :param corporate_card_surcharge: The corporate_card_surcharge of this GetPaymentResult.
        :type corporate_card_surcharge: int
        """

        self._corporate_card_surcharge = corporate_card_surcharge

    @property
    def created_date(self):
        """Gets the created_date of this GetPaymentResult.


        :return: The created_date of this GetPaymentResult.
        :rtype: str
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this GetPaymentResult.


        :param created_date: The created_date of this GetPaymentResult.
        :type created_date: str
        """

        self._created_date = created_date

    @property
    def delayed_capture(self):
        """Gets the delayed_capture of this GetPaymentResult.

        delayed capture flag

        :return: The delayed_capture of this GetPaymentResult.
        :rtype: bool
        """
        return self._delayed_capture

    @delayed_capture.setter
    def delayed_capture(self, delayed_capture):
        """Sets the delayed_capture of this GetPaymentResult.

        delayed capture flag

        :param delayed_capture: The delayed_capture of this GetPaymentResult.
        :type delayed_capture: bool
        """

        self._delayed_capture = delayed_capture

    @property
    def description(self):
        """Gets the description of this GetPaymentResult.


        :return: The description of this GetPaymentResult.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetPaymentResult.


        :param description: The description of this GetPaymentResult.
        :type description: str
        """

        self._description = description

    @property
    def email(self):
        """Gets the email of this GetPaymentResult.


        :return: The email of this GetPaymentResult.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GetPaymentResult.


        :param email: The email of this GetPaymentResult.
        :type email: str
        """

        self._email = email

    @property
    def fee(self):
        """Gets the fee of this GetPaymentResult.

        processing fee taken by the GOV.UK Pay platform, in pence. Only available depending on payment service provider

        :return: The fee of this GetPaymentResult.
        :rtype: int
        """
        return self._fee

    @fee.setter
    def fee(self, fee):
        """Sets the fee of this GetPaymentResult.

        processing fee taken by the GOV.UK Pay platform, in pence. Only available depending on payment service provider

        :param fee: The fee of this GetPaymentResult.
        :type fee: int
        """

        self._fee = fee

    @property
    def language(self):
        """Gets the language of this GetPaymentResult.


        :return: The language of this GetPaymentResult.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this GetPaymentResult.


        :param language: The language of this GetPaymentResult.
        :type language: str
        """
        allowed_values = ["en", "cy"]  # noqa: E501
        if language not in allowed_values:
            raise ValueError(
                "Invalid value for `language` ({0}), must be one of {1}"
                .format(language, allowed_values)
            )

        self._language = language

    @property
    def metadata(self):
        """Gets the metadata of this GetPaymentResult.


        :return: The metadata of this GetPaymentResult.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GetPaymentResult.


        :param metadata: The metadata of this GetPaymentResult.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def moto(self):
        """Gets the moto of this GetPaymentResult.

        Mail Order / Telephone Order (MOTO) payment flag

        :return: The moto of this GetPaymentResult.
        :rtype: bool
        """
        return self._moto

    @moto.setter
    def moto(self, moto):
        """Sets the moto of this GetPaymentResult.

        Mail Order / Telephone Order (MOTO) payment flag

        :param moto: The moto of this GetPaymentResult.
        :type moto: bool
        """

        self._moto = moto

    @property
    def net_amount(self):
        """Gets the net_amount of this GetPaymentResult.

        amount including all surcharges and less all fees, in pence. Only available depending on payment service provider

        :return: The net_amount of this GetPaymentResult.
        :rtype: int
        """
        return self._net_amount

    @net_amount.setter
    def net_amount(self, net_amount):
        """Sets the net_amount of this GetPaymentResult.

        amount including all surcharges and less all fees, in pence. Only available depending on payment service provider

        :param net_amount: The net_amount of this GetPaymentResult.
        :type net_amount: int
        """

        self._net_amount = net_amount

    @property
    def payment_id(self):
        """Gets the payment_id of this GetPaymentResult.


        :return: The payment_id of this GetPaymentResult.
        :rtype: str
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """Sets the payment_id of this GetPaymentResult.


        :param payment_id: The payment_id of this GetPaymentResult.
        :type payment_id: str
        """

        self._payment_id = payment_id

    @property
    def payment_provider(self):
        """Gets the payment_provider of this GetPaymentResult.


        :return: The payment_provider of this GetPaymentResult.
        :rtype: str
        """
        return self._payment_provider

    @payment_provider.setter
    def payment_provider(self, payment_provider):
        """Sets the payment_provider of this GetPaymentResult.


        :param payment_provider: The payment_provider of this GetPaymentResult.
        :type payment_provider: str
        """

        self._payment_provider = payment_provider

    @property
    def provider_id(self):
        """Gets the provider_id of this GetPaymentResult.


        :return: The provider_id of this GetPaymentResult.
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this GetPaymentResult.


        :param provider_id: The provider_id of this GetPaymentResult.
        :type provider_id: str
        """

        self._provider_id = provider_id

    @property
    def reference(self):
        """Gets the reference of this GetPaymentResult.


        :return: The reference of this GetPaymentResult.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this GetPaymentResult.


        :param reference: The reference of this GetPaymentResult.
        :type reference: str
        """

        self._reference = reference

    @property
    def refund_summary(self):
        """Gets the refund_summary of this GetPaymentResult.


        :return: The refund_summary of this GetPaymentResult.
        :rtype: RefundSummary
        """
        return self._refund_summary

    @refund_summary.setter
    def refund_summary(self, refund_summary):
        """Sets the refund_summary of this GetPaymentResult.


        :param refund_summary: The refund_summary of this GetPaymentResult.
        :type refund_summary: RefundSummary
        """

        self._refund_summary = refund_summary

    @property
    def return_url(self):
        """Gets the return_url of this GetPaymentResult.


        :return: The return_url of this GetPaymentResult.
        :rtype: str
        """
        return self._return_url

    @return_url.setter
    def return_url(self, return_url):
        """Sets the return_url of this GetPaymentResult.


        :param return_url: The return_url of this GetPaymentResult.
        :type return_url: str
        """

        self._return_url = return_url

    @property
    def settlement_summary(self):
        """Gets the settlement_summary of this GetPaymentResult.


        :return: The settlement_summary of this GetPaymentResult.
        :rtype: PaymentSettlementSummary
        """
        return self._settlement_summary

    @settlement_summary.setter
    def settlement_summary(self, settlement_summary):
        """Sets the settlement_summary of this GetPaymentResult.


        :param settlement_summary: The settlement_summary of this GetPaymentResult.
        :type settlement_summary: PaymentSettlementSummary
        """

        self._settlement_summary = settlement_summary

    @property
    def state(self):
        """Gets the state of this GetPaymentResult.


        :return: The state of this GetPaymentResult.
        :rtype: PaymentState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GetPaymentResult.


        :param state: The state of this GetPaymentResult.
        :type state: PaymentState
        """

        self._state = state

    @property
    def total_amount(self):
        """Gets the total_amount of this GetPaymentResult.


        :return: The total_amount of this GetPaymentResult.
        :rtype: int
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this GetPaymentResult.


        :param total_amount: The total_amount of this GetPaymentResult.
        :type total_amount: int
        """

        self._total_amount = total_amount
