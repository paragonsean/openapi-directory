# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.card_details import CardDetails
from openapi_server.models.payment_links import PaymentLinks
from openapi_server.models.payment_settlement_summary import PaymentSettlementSummary
from openapi_server.models.payment_state import PaymentState
from openapi_server.models.refund_summary import RefundSummary
from openapi_server import util


class CreatePaymentResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: PaymentLinks=None, amount: int=None, card_details: CardDetails=None, created_date: str=None, delayed_capture: bool=None, description: str=None, email: str=None, language: str=None, metadata: Dict[str, str]=None, moto: bool=None, payment_id: str=None, payment_provider: str=None, provider_id: str=None, reference: str=None, refund_summary: RefundSummary=None, return_url: str=None, settlement_summary: PaymentSettlementSummary=None, state: PaymentState=None):
        """CreatePaymentResult - a model defined in OpenAPI

        :param links: The links of this CreatePaymentResult.
        :param amount: The amount of this CreatePaymentResult.
        :param card_details: The card_details of this CreatePaymentResult.
        :param created_date: The created_date of this CreatePaymentResult.
        :param delayed_capture: The delayed_capture of this CreatePaymentResult.
        :param description: The description of this CreatePaymentResult.
        :param email: The email of this CreatePaymentResult.
        :param language: The language of this CreatePaymentResult.
        :param metadata: The metadata of this CreatePaymentResult.
        :param moto: The moto of this CreatePaymentResult.
        :param payment_id: The payment_id of this CreatePaymentResult.
        :param payment_provider: The payment_provider of this CreatePaymentResult.
        :param provider_id: The provider_id of this CreatePaymentResult.
        :param reference: The reference of this CreatePaymentResult.
        :param refund_summary: The refund_summary of this CreatePaymentResult.
        :param return_url: The return_url of this CreatePaymentResult.
        :param settlement_summary: The settlement_summary of this CreatePaymentResult.
        :param state: The state of this CreatePaymentResult.
        """
        self.openapi_types = {
            'links': PaymentLinks,
            'amount': int,
            'card_details': CardDetails,
            'created_date': str,
            'delayed_capture': bool,
            'description': str,
            'email': str,
            'language': str,
            'metadata': Dict[str, str],
            'moto': bool,
            'payment_id': str,
            'payment_provider': str,
            'provider_id': str,
            'reference': str,
            'refund_summary': RefundSummary,
            'return_url': str,
            'settlement_summary': PaymentSettlementSummary,
            'state': PaymentState
        }

        self.attribute_map = {
            'links': '_links',
            'amount': 'amount',
            'card_details': 'card_details',
            'created_date': 'created_date',
            'delayed_capture': 'delayed_capture',
            'description': 'description',
            'email': 'email',
            'language': 'language',
            'metadata': 'metadata',
            'moto': 'moto',
            'payment_id': 'payment_id',
            'payment_provider': 'payment_provider',
            'provider_id': 'provider_id',
            'reference': 'reference',
            'refund_summary': 'refund_summary',
            'return_url': 'return_url',
            'settlement_summary': 'settlement_summary',
            'state': 'state'
        }

        self._links = links
        self._amount = amount
        self._card_details = card_details
        self._created_date = created_date
        self._delayed_capture = delayed_capture
        self._description = description
        self._email = email
        self._language = language
        self._metadata = metadata
        self._moto = moto
        self._payment_id = payment_id
        self._payment_provider = payment_provider
        self._provider_id = provider_id
        self._reference = reference
        self._refund_summary = refund_summary
        self._return_url = return_url
        self._settlement_summary = settlement_summary
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePaymentResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePaymentResult of this CreatePaymentResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this CreatePaymentResult.


        :return: The links of this CreatePaymentResult.
        :rtype: PaymentLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this CreatePaymentResult.


        :param links: The links of this CreatePaymentResult.
        :type links: PaymentLinks
        """

        self._links = links

    @property
    def amount(self):
        """Gets the amount of this CreatePaymentResult.

        The amount in pence.

        :return: The amount of this CreatePaymentResult.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this CreatePaymentResult.

        The amount in pence.

        :param amount: The amount of this CreatePaymentResult.
        :type amount: int
        """

        self._amount = amount

    @property
    def card_details(self):
        """Gets the card_details of this CreatePaymentResult.


        :return: The card_details of this CreatePaymentResult.
        :rtype: CardDetails
        """
        return self._card_details

    @card_details.setter
    def card_details(self, card_details):
        """Sets the card_details of this CreatePaymentResult.


        :param card_details: The card_details of this CreatePaymentResult.
        :type card_details: CardDetails
        """

        self._card_details = card_details

    @property
    def created_date(self):
        """Gets the created_date of this CreatePaymentResult.

        The date you created the payment.

        :return: The created_date of this CreatePaymentResult.
        :rtype: str
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this CreatePaymentResult.

        The date you created the payment.

        :param created_date: The created_date of this CreatePaymentResult.
        :type created_date: str
        """

        self._created_date = created_date

    @property
    def delayed_capture(self):
        """Gets the delayed_capture of this CreatePaymentResult.

        Whether to [delay capturing](https://docs.payments.service.gov.uk/optional_features/delayed_capture/) this payment.

        :return: The delayed_capture of this CreatePaymentResult.
        :rtype: bool
        """
        return self._delayed_capture

    @delayed_capture.setter
    def delayed_capture(self, delayed_capture):
        """Sets the delayed_capture of this CreatePaymentResult.

        Whether to [delay capturing](https://docs.payments.service.gov.uk/optional_features/delayed_capture/) this payment.

        :param delayed_capture: The delayed_capture of this CreatePaymentResult.
        :type delayed_capture: bool
        """

        self._delayed_capture = delayed_capture

    @property
    def description(self):
        """Gets the description of this CreatePaymentResult.

        The human-readable description you gave the payment.

        :return: The description of this CreatePaymentResult.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreatePaymentResult.

        The human-readable description you gave the payment.

        :param description: The description of this CreatePaymentResult.
        :type description: str
        """

        self._description = description

    @property
    def email(self):
        """Gets the email of this CreatePaymentResult.

        The email address of your user.

        :return: The email of this CreatePaymentResult.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this CreatePaymentResult.

        The email address of your user.

        :param email: The email of this CreatePaymentResult.
        :type email: str
        """

        self._email = email

    @property
    def language(self):
        """Gets the language of this CreatePaymentResult.

        Which language your users will see on the payment pages when they make a payment.

        :return: The language of this CreatePaymentResult.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this CreatePaymentResult.

        Which language your users will see on the payment pages when they make a payment.

        :param language: The language of this CreatePaymentResult.
        :type language: str
        """
        allowed_values = ["en", "cy"]  # noqa: E501
        if language not in allowed_values:
            raise ValueError(
                "Invalid value for `language` ({0}), must be one of {1}"
                .format(language, allowed_values)
            )

        self._language = language

    @property
    def metadata(self):
        """Gets the metadata of this CreatePaymentResult.

        [Custom metadata](https://docs.payments.service.gov.uk/optional_features/custom_metadata/) you added to the payment.

        :return: The metadata of this CreatePaymentResult.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this CreatePaymentResult.

        [Custom metadata](https://docs.payments.service.gov.uk/optional_features/custom_metadata/) you added to the payment.

        :param metadata: The metadata of this CreatePaymentResult.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def moto(self):
        """Gets the moto of this CreatePaymentResult.

        Mail Order / Telephone Order (MOTO) payment flag.

        :return: The moto of this CreatePaymentResult.
        :rtype: bool
        """
        return self._moto

    @moto.setter
    def moto(self, moto):
        """Sets the moto of this CreatePaymentResult.

        Mail Order / Telephone Order (MOTO) payment flag.

        :param moto: The moto of this CreatePaymentResult.
        :type moto: bool
        """

        self._moto = moto

    @property
    def payment_id(self):
        """Gets the payment_id of this CreatePaymentResult.

        The unique identifier of the payment.

        :return: The payment_id of this CreatePaymentResult.
        :rtype: str
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """Sets the payment_id of this CreatePaymentResult.

        The unique identifier of the payment.

        :param payment_id: The payment_id of this CreatePaymentResult.
        :type payment_id: str
        """

        self._payment_id = payment_id

    @property
    def payment_provider(self):
        """Gets the payment_provider of this CreatePaymentResult.


        :return: The payment_provider of this CreatePaymentResult.
        :rtype: str
        """
        return self._payment_provider

    @payment_provider.setter
    def payment_provider(self, payment_provider):
        """Sets the payment_provider of this CreatePaymentResult.


        :param payment_provider: The payment_provider of this CreatePaymentResult.
        :type payment_provider: str
        """

        self._payment_provider = payment_provider

    @property
    def provider_id(self):
        """Gets the provider_id of this CreatePaymentResult.

        The reference number the payment gateway associated with the payment.

        :return: The provider_id of this CreatePaymentResult.
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this CreatePaymentResult.

        The reference number the payment gateway associated with the payment.

        :param provider_id: The provider_id of this CreatePaymentResult.
        :type provider_id: str
        """

        self._provider_id = provider_id

    @property
    def reference(self):
        """Gets the reference of this CreatePaymentResult.

        The reference number you associated with this payment.

        :return: The reference of this CreatePaymentResult.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this CreatePaymentResult.

        The reference number you associated with this payment.

        :param reference: The reference of this CreatePaymentResult.
        :type reference: str
        """

        self._reference = reference

    @property
    def refund_summary(self):
        """Gets the refund_summary of this CreatePaymentResult.


        :return: The refund_summary of this CreatePaymentResult.
        :rtype: RefundSummary
        """
        return self._refund_summary

    @refund_summary.setter
    def refund_summary(self, refund_summary):
        """Sets the refund_summary of this CreatePaymentResult.


        :param refund_summary: The refund_summary of this CreatePaymentResult.
        :type refund_summary: RefundSummary
        """

        self._refund_summary = refund_summary

    @property
    def return_url(self):
        """Gets the return_url of this CreatePaymentResult.

        An HTTPS URL on your site that your user will be sent back to once they have completed their payment attempt on GOV.UK Pay.

        :return: The return_url of this CreatePaymentResult.
        :rtype: str
        """
        return self._return_url

    @return_url.setter
    def return_url(self, return_url):
        """Sets the return_url of this CreatePaymentResult.

        An HTTPS URL on your site that your user will be sent back to once they have completed their payment attempt on GOV.UK Pay.

        :param return_url: The return_url of this CreatePaymentResult.
        :type return_url: str
        """

        self._return_url = return_url

    @property
    def settlement_summary(self):
        """Gets the settlement_summary of this CreatePaymentResult.


        :return: The settlement_summary of this CreatePaymentResult.
        :rtype: PaymentSettlementSummary
        """
        return self._settlement_summary

    @settlement_summary.setter
    def settlement_summary(self, settlement_summary):
        """Sets the settlement_summary of this CreatePaymentResult.


        :param settlement_summary: The settlement_summary of this CreatePaymentResult.
        :type settlement_summary: PaymentSettlementSummary
        """

        self._settlement_summary = settlement_summary

    @property
    def state(self):
        """Gets the state of this CreatePaymentResult.


        :return: The state of this CreatePaymentResult.
        :rtype: PaymentState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CreatePaymentResult.


        :param state: The state of this CreatePaymentResult.
        :type state: PaymentState
        """

        self._state = state
