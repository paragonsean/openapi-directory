# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server import util


class CardDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_address: Address=None, card_brand: str=None, card_type: str=None, cardholder_name: str=None, expiry_date: str=None, first_digits_card_number: str=None, last_digits_card_number: str=None):
        """CardDetails - a model defined in OpenAPI

        :param billing_address: The billing_address of this CardDetails.
        :param card_brand: The card_brand of this CardDetails.
        :param card_type: The card_type of this CardDetails.
        :param cardholder_name: The cardholder_name of this CardDetails.
        :param expiry_date: The expiry_date of this CardDetails.
        :param first_digits_card_number: The first_digits_card_number of this CardDetails.
        :param last_digits_card_number: The last_digits_card_number of this CardDetails.
        """
        self.openapi_types = {
            'billing_address': Address,
            'card_brand': str,
            'card_type': str,
            'cardholder_name': str,
            'expiry_date': str,
            'first_digits_card_number': str,
            'last_digits_card_number': str
        }

        self.attribute_map = {
            'billing_address': 'billing_address',
            'card_brand': 'card_brand',
            'card_type': 'card_type',
            'cardholder_name': 'cardholder_name',
            'expiry_date': 'expiry_date',
            'first_digits_card_number': 'first_digits_card_number',
            'last_digits_card_number': 'last_digits_card_number'
        }

        self._billing_address = billing_address
        self._card_brand = card_brand
        self._card_type = card_type
        self._cardholder_name = cardholder_name
        self._expiry_date = expiry_date
        self._first_digits_card_number = first_digits_card_number
        self._last_digits_card_number = last_digits_card_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CardDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CardDetails of this CardDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_address(self):
        """Gets the billing_address of this CardDetails.


        :return: The billing_address of this CardDetails.
        :rtype: Address
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this CardDetails.


        :param billing_address: The billing_address of this CardDetails.
        :type billing_address: Address
        """

        self._billing_address = billing_address

    @property
    def card_brand(self):
        """Gets the card_brand of this CardDetails.


        :return: The card_brand of this CardDetails.
        :rtype: str
        """
        return self._card_brand

    @card_brand.setter
    def card_brand(self, card_brand):
        """Sets the card_brand of this CardDetails.


        :param card_brand: The card_brand of this CardDetails.
        :type card_brand: str
        """

        self._card_brand = card_brand

    @property
    def card_type(self):
        """Gets the card_type of this CardDetails.

        The card type, `debit` or `credit` or `null` if not able to determine

        :return: The card_type of this CardDetails.
        :rtype: str
        """
        return self._card_type

    @card_type.setter
    def card_type(self, card_type):
        """Sets the card_type of this CardDetails.

        The card type, `debit` or `credit` or `null` if not able to determine

        :param card_type: The card_type of this CardDetails.
        :type card_type: str
        """
        allowed_values = ["debit", "credit", "null"]  # noqa: E501
        if card_type not in allowed_values:
            raise ValueError(
                "Invalid value for `card_type` ({0}), must be one of {1}"
                .format(card_type, allowed_values)
            )

        self._card_type = card_type

    @property
    def cardholder_name(self):
        """Gets the cardholder_name of this CardDetails.


        :return: The cardholder_name of this CardDetails.
        :rtype: str
        """
        return self._cardholder_name

    @cardholder_name.setter
    def cardholder_name(self, cardholder_name):
        """Sets the cardholder_name of this CardDetails.


        :param cardholder_name: The cardholder_name of this CardDetails.
        :type cardholder_name: str
        """

        self._cardholder_name = cardholder_name

    @property
    def expiry_date(self):
        """Gets the expiry_date of this CardDetails.

        The expiry date of the card in MM/yy format

        :return: The expiry_date of this CardDetails.
        :rtype: str
        """
        return self._expiry_date

    @expiry_date.setter
    def expiry_date(self, expiry_date):
        """Sets the expiry_date of this CardDetails.

        The expiry date of the card in MM/yy format

        :param expiry_date: The expiry_date of this CardDetails.
        :type expiry_date: str
        """

        self._expiry_date = expiry_date

    @property
    def first_digits_card_number(self):
        """Gets the first_digits_card_number of this CardDetails.


        :return: The first_digits_card_number of this CardDetails.
        :rtype: str
        """
        return self._first_digits_card_number

    @first_digits_card_number.setter
    def first_digits_card_number(self, first_digits_card_number):
        """Sets the first_digits_card_number of this CardDetails.


        :param first_digits_card_number: The first_digits_card_number of this CardDetails.
        :type first_digits_card_number: str
        """

        self._first_digits_card_number = first_digits_card_number

    @property
    def last_digits_card_number(self):
        """Gets the last_digits_card_number of this CardDetails.


        :return: The last_digits_card_number of this CardDetails.
        :rtype: str
        """
        return self._last_digits_card_number

    @last_digits_card_number.setter
    def last_digits_card_number(self, last_digits_card_number):
        """Sets the last_digits_card_number of this CardDetails.


        :param last_digits_card_number: The last_digits_card_number of this CardDetails.
        :type last_digits_card_number: str
        """

        self._last_digits_card_number = last_digits_card_number
