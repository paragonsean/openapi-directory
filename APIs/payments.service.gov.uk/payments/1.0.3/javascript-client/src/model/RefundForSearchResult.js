/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmbeddedRefunds from './EmbeddedRefunds';
import RefundLinksForSearch from './RefundLinksForSearch';

/**
 * The RefundForSearchResult model module.
 * @module model/RefundForSearchResult
 * @version 1.0.3
 */
class RefundForSearchResult {
    /**
     * Constructs a new <code>RefundForSearchResult</code>.
     * @alias module:model/RefundForSearchResult
     */
    constructor() { 
        
        RefundForSearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RefundForSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RefundForSearchResult} obj Optional instance to populate.
     * @return {module:model/RefundForSearchResult} The populated <code>RefundForSearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RefundForSearchResult();

            if (data.hasOwnProperty('_embedded')) {
                obj['_embedded'] = EmbeddedRefunds.constructFromObject(data['_embedded']);
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = RefundLinksForSearch.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('payment_id')) {
                obj['payment_id'] = ApiClient.convertToType(data['payment_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RefundForSearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RefundForSearchResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `_embedded`
        if (data['_embedded']) { // data not null
          EmbeddedRefunds.validateJSON(data['_embedded']);
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          RefundLinksForSearch.validateJSON(data['_links']);
        }
        // ensure the json data is a string
        if (data['payment_id'] && !(typeof data['payment_id'] === 'string' || data['payment_id'] instanceof String)) {
            throw new Error("Expected the field `payment_id` to be a primitive type in the JSON string but got " + data['payment_id']);
        }

        return true;
    }


}



/**
 * @member {module:model/EmbeddedRefunds} _embedded
 */
RefundForSearchResult.prototype['_embedded'] = undefined;

/**
 * @member {module:model/RefundLinksForSearch} _links
 */
RefundForSearchResult.prototype['_links'] = undefined;

/**
 * @member {String} payment_id
 */
RefundForSearchResult.prototype['payment_id'] = undefined;






export default RefundForSearchResult;

