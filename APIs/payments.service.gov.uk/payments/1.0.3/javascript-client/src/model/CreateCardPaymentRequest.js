/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PrefilledCardholderDetails from './PrefilledCardholderDetails';

/**
 * The CreateCardPaymentRequest model module.
 * @module model/CreateCardPaymentRequest
 * @version 1.0.3
 */
class CreateCardPaymentRequest {
    /**
     * Constructs a new <code>CreateCardPaymentRequest</code>.
     * The Payment Request Payload
     * @alias module:model/CreateCardPaymentRequest
     * @param amount {Number} amount in pence
     * @param description {String} payment description
     * @param reference {String} payment reference
     * @param returnUrl {String} service return url
     */
    constructor(amount, description, reference, returnUrl) { 
        
        CreateCardPaymentRequest.initialize(this, amount, description, reference, returnUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, description, reference, returnUrl) { 
        obj['amount'] = amount;
        obj['description'] = description;
        obj['reference'] = reference;
        obj['return_url'] = returnUrl;
    }

    /**
     * Constructs a <code>CreateCardPaymentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateCardPaymentRequest} obj Optional instance to populate.
     * @return {module:model/CreateCardPaymentRequest} The populated <code>CreateCardPaymentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateCardPaymentRequest();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('delayed_capture')) {
                obj['delayed_capture'] = ApiClient.convertToType(data['delayed_capture'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': Object});
            }
            if (data.hasOwnProperty('moto')) {
                obj['moto'] = ApiClient.convertToType(data['moto'], 'Boolean');
            }
            if (data.hasOwnProperty('prefilled_cardholder_details')) {
                obj['prefilled_cardholder_details'] = PrefilledCardholderDetails.constructFromObject(data['prefilled_cardholder_details']);
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('return_url')) {
                obj['return_url'] = ApiClient.convertToType(data['return_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateCardPaymentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateCardPaymentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateCardPaymentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // validate the optional field `prefilled_cardholder_details`
        if (data['prefilled_cardholder_details']) { // data not null
          PrefilledCardholderDetails.validateJSON(data['prefilled_cardholder_details']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }
        // ensure the json data is a string
        if (data['return_url'] && !(typeof data['return_url'] === 'string' || data['return_url'] instanceof String)) {
            throw new Error("Expected the field `return_url` to be a primitive type in the JSON string but got " + data['return_url']);
        }

        return true;
    }


}

CreateCardPaymentRequest.RequiredProperties = ["amount", "description", "reference", "return_url"];

/**
 * amount in pence
 * @member {Number} amount
 */
CreateCardPaymentRequest.prototype['amount'] = undefined;

/**
 * delayed capture flag
 * @member {Boolean} delayed_capture
 */
CreateCardPaymentRequest.prototype['delayed_capture'] = undefined;

/**
 * payment description
 * @member {String} description
 */
CreateCardPaymentRequest.prototype['description'] = undefined;

/**
 * email
 * @member {String} email
 */
CreateCardPaymentRequest.prototype['email'] = undefined;

/**
 * ISO-639-1 Alpha-2 code of a supported language to use on the payment pages
 * @member {module:model/CreateCardPaymentRequest.LanguageEnum} language
 */
CreateCardPaymentRequest.prototype['language'] = undefined;

/**
 * Additional metadata - up to 10 name/value pairs - on the payment. Each key must be between 1 and 30 characters long. The value, if a string, must be no greater than 50 characters long. Other permissible value types: boolean, number.
 * @member {Object.<String, Object>} metadata
 */
CreateCardPaymentRequest.prototype['metadata'] = undefined;

/**
 * Mail Order / Telephone Order (MOTO) payment flag
 * @member {Boolean} moto
 */
CreateCardPaymentRequest.prototype['moto'] = undefined;

/**
 * @member {module:model/PrefilledCardholderDetails} prefilled_cardholder_details
 */
CreateCardPaymentRequest.prototype['prefilled_cardholder_details'] = undefined;

/**
 * payment reference
 * @member {String} reference
 */
CreateCardPaymentRequest.prototype['reference'] = undefined;

/**
 * service return url
 * @member {String} return_url
 */
CreateCardPaymentRequest.prototype['return_url'] = undefined;





/**
 * Allowed values for the <code>language</code> property.
 * @enum {String}
 * @readonly
 */
CreateCardPaymentRequest['LanguageEnum'] = {

    /**
     * value: "en"
     * @const
     */
    "en": "en",

    /**
     * value: "cy"
     * @const
     */
    "cy": "cy"
};



export default CreateCardPaymentRequest;

