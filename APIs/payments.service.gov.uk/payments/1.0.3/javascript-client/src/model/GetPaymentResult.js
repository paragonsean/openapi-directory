/**
 * GOV.UK Pay API
 * GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API specification)
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CardDetails from './CardDetails';
import PaymentLinks from './PaymentLinks';
import PaymentSettlementSummary from './PaymentSettlementSummary';
import PaymentState from './PaymentState';
import RefundSummary from './RefundSummary';

/**
 * The GetPaymentResult model module.
 * @module model/GetPaymentResult
 * @version 1.0.3
 */
class GetPaymentResult {
    /**
     * Constructs a new <code>GetPaymentResult</code>.
     * @alias module:model/GetPaymentResult
     */
    constructor() { 
        
        GetPaymentResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetPaymentResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetPaymentResult} obj Optional instance to populate.
     * @return {module:model/GetPaymentResult} The populated <code>GetPaymentResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetPaymentResult();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = PaymentLinks.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('card_brand')) {
                obj['card_brand'] = ApiClient.convertToType(data['card_brand'], 'String');
            }
            if (data.hasOwnProperty('card_details')) {
                obj['card_details'] = CardDetails.constructFromObject(data['card_details']);
            }
            if (data.hasOwnProperty('corporate_card_surcharge')) {
                obj['corporate_card_surcharge'] = ApiClient.convertToType(data['corporate_card_surcharge'], 'Number');
            }
            if (data.hasOwnProperty('created_date')) {
                obj['created_date'] = ApiClient.convertToType(data['created_date'], 'String');
            }
            if (data.hasOwnProperty('delayed_capture')) {
                obj['delayed_capture'] = ApiClient.convertToType(data['delayed_capture'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('moto')) {
                obj['moto'] = ApiClient.convertToType(data['moto'], 'Boolean');
            }
            if (data.hasOwnProperty('net_amount')) {
                obj['net_amount'] = ApiClient.convertToType(data['net_amount'], 'Number');
            }
            if (data.hasOwnProperty('payment_id')) {
                obj['payment_id'] = ApiClient.convertToType(data['payment_id'], 'String');
            }
            if (data.hasOwnProperty('payment_provider')) {
                obj['payment_provider'] = ApiClient.convertToType(data['payment_provider'], 'String');
            }
            if (data.hasOwnProperty('provider_id')) {
                obj['provider_id'] = ApiClient.convertToType(data['provider_id'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('refund_summary')) {
                obj['refund_summary'] = RefundSummary.constructFromObject(data['refund_summary']);
            }
            if (data.hasOwnProperty('return_url')) {
                obj['return_url'] = ApiClient.convertToType(data['return_url'], 'String');
            }
            if (data.hasOwnProperty('settlement_summary')) {
                obj['settlement_summary'] = PaymentSettlementSummary.constructFromObject(data['settlement_summary']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = PaymentState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('total_amount')) {
                obj['total_amount'] = ApiClient.convertToType(data['total_amount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetPaymentResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetPaymentResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          PaymentLinks.validateJSON(data['_links']);
        }
        // ensure the json data is a string
        if (data['card_brand'] && !(typeof data['card_brand'] === 'string' || data['card_brand'] instanceof String)) {
            throw new Error("Expected the field `card_brand` to be a primitive type in the JSON string but got " + data['card_brand']);
        }
        // validate the optional field `card_details`
        if (data['card_details']) { // data not null
          CardDetails.validateJSON(data['card_details']);
        }
        // ensure the json data is a string
        if (data['created_date'] && !(typeof data['created_date'] === 'string' || data['created_date'] instanceof String)) {
            throw new Error("Expected the field `created_date` to be a primitive type in the JSON string but got " + data['created_date']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['payment_id'] && !(typeof data['payment_id'] === 'string' || data['payment_id'] instanceof String)) {
            throw new Error("Expected the field `payment_id` to be a primitive type in the JSON string but got " + data['payment_id']);
        }
        // ensure the json data is a string
        if (data['payment_provider'] && !(typeof data['payment_provider'] === 'string' || data['payment_provider'] instanceof String)) {
            throw new Error("Expected the field `payment_provider` to be a primitive type in the JSON string but got " + data['payment_provider']);
        }
        // ensure the json data is a string
        if (data['provider_id'] && !(typeof data['provider_id'] === 'string' || data['provider_id'] instanceof String)) {
            throw new Error("Expected the field `provider_id` to be a primitive type in the JSON string but got " + data['provider_id']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }
        // validate the optional field `refund_summary`
        if (data['refund_summary']) { // data not null
          RefundSummary.validateJSON(data['refund_summary']);
        }
        // ensure the json data is a string
        if (data['return_url'] && !(typeof data['return_url'] === 'string' || data['return_url'] instanceof String)) {
            throw new Error("Expected the field `return_url` to be a primitive type in the JSON string but got " + data['return_url']);
        }
        // validate the optional field `settlement_summary`
        if (data['settlement_summary']) { // data not null
          PaymentSettlementSummary.validateJSON(data['settlement_summary']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          PaymentState.validateJSON(data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/PaymentLinks} _links
 */
GetPaymentResult.prototype['_links'] = undefined;

/**
 * @member {Number} amount
 */
GetPaymentResult.prototype['amount'] = undefined;

/**
 * Card Brand
 * @member {String} card_brand
 */
GetPaymentResult.prototype['card_brand'] = undefined;

/**
 * @member {module:model/CardDetails} card_details
 */
GetPaymentResult.prototype['card_details'] = undefined;

/**
 * @member {Number} corporate_card_surcharge
 */
GetPaymentResult.prototype['corporate_card_surcharge'] = undefined;

/**
 * @member {String} created_date
 */
GetPaymentResult.prototype['created_date'] = undefined;

/**
 * delayed capture flag
 * @member {Boolean} delayed_capture
 */
GetPaymentResult.prototype['delayed_capture'] = undefined;

/**
 * @member {String} description
 */
GetPaymentResult.prototype['description'] = undefined;

/**
 * @member {String} email
 */
GetPaymentResult.prototype['email'] = undefined;

/**
 * processing fee taken by the GOV.UK Pay platform, in pence. Only available depending on payment service provider
 * @member {Number} fee
 */
GetPaymentResult.prototype['fee'] = undefined;

/**
 * @member {module:model/GetPaymentResult.LanguageEnum} language
 */
GetPaymentResult.prototype['language'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
GetPaymentResult.prototype['metadata'] = undefined;

/**
 * Mail Order / Telephone Order (MOTO) payment flag
 * @member {Boolean} moto
 */
GetPaymentResult.prototype['moto'] = undefined;

/**
 * amount including all surcharges and less all fees, in pence. Only available depending on payment service provider
 * @member {Number} net_amount
 */
GetPaymentResult.prototype['net_amount'] = undefined;

/**
 * @member {String} payment_id
 */
GetPaymentResult.prototype['payment_id'] = undefined;

/**
 * @member {String} payment_provider
 */
GetPaymentResult.prototype['payment_provider'] = undefined;

/**
 * @member {String} provider_id
 */
GetPaymentResult.prototype['provider_id'] = undefined;

/**
 * @member {String} reference
 */
GetPaymentResult.prototype['reference'] = undefined;

/**
 * @member {module:model/RefundSummary} refund_summary
 */
GetPaymentResult.prototype['refund_summary'] = undefined;

/**
 * @member {String} return_url
 */
GetPaymentResult.prototype['return_url'] = undefined;

/**
 * @member {module:model/PaymentSettlementSummary} settlement_summary
 */
GetPaymentResult.prototype['settlement_summary'] = undefined;

/**
 * @member {module:model/PaymentState} state
 */
GetPaymentResult.prototype['state'] = undefined;

/**
 * @member {Number} total_amount
 */
GetPaymentResult.prototype['total_amount'] = undefined;





/**
 * Allowed values for the <code>language</code> property.
 * @enum {String}
 * @readonly
 */
GetPaymentResult['LanguageEnum'] = {

    /**
     * value: "en"
     * @const
     */
    "en": "en",

    /**
     * value: "cy"
     * @const
     */
    "cy": "cy"
};



export default GetPaymentResult;

