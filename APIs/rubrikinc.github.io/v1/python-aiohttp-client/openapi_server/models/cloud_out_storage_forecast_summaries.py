# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_out_storage_forecast_summary import CloudOutStorageForecastSummary
from openapi_server import util


class CloudOutStorageForecastSummaries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forecast_with_consolidation: CloudOutStorageForecastSummary=None, forecast_without_consolidation: CloudOutStorageForecastSummary=None):
        """CloudOutStorageForecastSummaries - a model defined in OpenAPI

        :param forecast_with_consolidation: The forecast_with_consolidation of this CloudOutStorageForecastSummaries.
        :param forecast_without_consolidation: The forecast_without_consolidation of this CloudOutStorageForecastSummaries.
        """
        self.openapi_types = {
            'forecast_with_consolidation': CloudOutStorageForecastSummary,
            'forecast_without_consolidation': CloudOutStorageForecastSummary
        }

        self.attribute_map = {
            'forecast_with_consolidation': 'forecastWithConsolidation',
            'forecast_without_consolidation': 'forecastWithoutConsolidation'
        }

        self._forecast_with_consolidation = forecast_with_consolidation
        self._forecast_without_consolidation = forecast_without_consolidation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudOutStorageForecastSummaries':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudOutStorageForecastSummaries of this CloudOutStorageForecastSummaries.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forecast_with_consolidation(self):
        """Gets the forecast_with_consolidation of this CloudOutStorageForecastSummaries.


        :return: The forecast_with_consolidation of this CloudOutStorageForecastSummaries.
        :rtype: CloudOutStorageForecastSummary
        """
        return self._forecast_with_consolidation

    @forecast_with_consolidation.setter
    def forecast_with_consolidation(self, forecast_with_consolidation):
        """Sets the forecast_with_consolidation of this CloudOutStorageForecastSummaries.


        :param forecast_with_consolidation: The forecast_with_consolidation of this CloudOutStorageForecastSummaries.
        :type forecast_with_consolidation: CloudOutStorageForecastSummary
        """

        self._forecast_with_consolidation = forecast_with_consolidation

    @property
    def forecast_without_consolidation(self):
        """Gets the forecast_without_consolidation of this CloudOutStorageForecastSummaries.


        :return: The forecast_without_consolidation of this CloudOutStorageForecastSummaries.
        :rtype: CloudOutStorageForecastSummary
        """
        return self._forecast_without_consolidation

    @forecast_without_consolidation.setter
    def forecast_without_consolidation(self, forecast_without_consolidation):
        """Sets the forecast_without_consolidation of this CloudOutStorageForecastSummaries.


        :param forecast_without_consolidation: The forecast_without_consolidation of this CloudOutStorageForecastSummaries.
        :type forecast_without_consolidation: CloudOutStorageForecastSummary
        """

        self._forecast_without_consolidation = forecast_without_consolidation
