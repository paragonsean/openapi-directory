# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KmipClientDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_certificate_id: str=None, is_password_set: bool=None, username: str=None):
        """KmipClientDetail - a model defined in OpenAPI

        :param client_certificate_id: The client_certificate_id of this KmipClientDetail.
        :param is_password_set: The is_password_set of this KmipClientDetail.
        :param username: The username of this KmipClientDetail.
        """
        self.openapi_types = {
            'client_certificate_id': str,
            'is_password_set': bool,
            'username': str
        }

        self.attribute_map = {
            'client_certificate_id': 'clientCertificateId',
            'is_password_set': 'isPasswordSet',
            'username': 'username'
        }

        self._client_certificate_id = client_certificate_id
        self._is_password_set = is_password_set
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KmipClientDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KmipClientDetail of this KmipClientDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_certificate_id(self):
        """Gets the client_certificate_id of this KmipClientDetail.

        The ID of an imported certificate in the CDM certificate management table.

        :return: The client_certificate_id of this KmipClientDetail.
        :rtype: str
        """
        return self._client_certificate_id

    @client_certificate_id.setter
    def client_certificate_id(self, client_certificate_id):
        """Sets the client_certificate_id of this KmipClientDetail.

        The ID of an imported certificate in the CDM certificate management table.

        :param client_certificate_id: The client_certificate_id of this KmipClientDetail.
        :type client_certificate_id: str
        """

        self._client_certificate_id = client_certificate_id

    @property
    def is_password_set(self):
        """Gets the is_password_set of this KmipClientDetail.

        Specifies whether a password is configured for authentication. When a password is configured, this value is 'true'. When a password is not configured, this value is 'false'.

        :return: The is_password_set of this KmipClientDetail.
        :rtype: bool
        """
        return self._is_password_set

    @is_password_set.setter
    def is_password_set(self, is_password_set):
        """Sets the is_password_set of this KmipClientDetail.

        Specifies whether a password is configured for authentication. When a password is configured, this value is 'true'. When a password is not configured, this value is 'false'.

        :param is_password_set: The is_password_set of this KmipClientDetail.
        :type is_password_set: bool
        """

        self._is_password_set = is_password_set

    @property
    def username(self):
        """Gets the username of this KmipClientDetail.

        The username for the KMIP server.

        :return: The username of this KmipClientDetail.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this KmipClientDetail.

        The username for the KMIP server.

        :param username: The username of this KmipClientDetail.
        :type username: str
        """

        self._username = username
