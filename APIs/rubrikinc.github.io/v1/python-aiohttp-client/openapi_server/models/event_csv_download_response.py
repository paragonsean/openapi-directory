# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_series_status_v1 import EventSeriesStatusV1
from openapi_server.models.event_severity_v1 import EventSeverityV1
from openapi_server.models.event_status_v1 import EventStatusV1
from openapi_server.models.event_type_v1 import EventTypeV1
from openapi_server.models.object_type_v1 import ObjectTypeV1
from openapi_server import util


class EventCsvDownloadResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, after_date: datetime=None, after_id_response: str=None, before_date: datetime=None, download_link: str=None, event_series_status: EventSeriesStatusV1=None, event_severity: EventSeverityV1=None, event_status: EventStatusV1=None, event_type: EventTypeV1=None, object_ids: List[str]=None, object_name: str=None, object_type: ObjectTypeV1=None):
        """EventCsvDownloadResponse - a model defined in OpenAPI

        :param after_date: The after_date of this EventCsvDownloadResponse.
        :param after_id_response: The after_id_response of this EventCsvDownloadResponse.
        :param before_date: The before_date of this EventCsvDownloadResponse.
        :param download_link: The download_link of this EventCsvDownloadResponse.
        :param event_series_status: The event_series_status of this EventCsvDownloadResponse.
        :param event_severity: The event_severity of this EventCsvDownloadResponse.
        :param event_status: The event_status of this EventCsvDownloadResponse.
        :param event_type: The event_type of this EventCsvDownloadResponse.
        :param object_ids: The object_ids of this EventCsvDownloadResponse.
        :param object_name: The object_name of this EventCsvDownloadResponse.
        :param object_type: The object_type of this EventCsvDownloadResponse.
        """
        self.openapi_types = {
            'after_date': datetime,
            'after_id_response': str,
            'before_date': datetime,
            'download_link': str,
            'event_series_status': EventSeriesStatusV1,
            'event_severity': EventSeverityV1,
            'event_status': EventStatusV1,
            'event_type': EventTypeV1,
            'object_ids': List[str],
            'object_name': str,
            'object_type': ObjectTypeV1
        }

        self.attribute_map = {
            'after_date': 'afterDate',
            'after_id_response': 'afterIdResponse',
            'before_date': 'beforeDate',
            'download_link': 'downloadLink',
            'event_series_status': 'eventSeriesStatus',
            'event_severity': 'eventSeverity',
            'event_status': 'eventStatus',
            'event_type': 'eventType',
            'object_ids': 'objectIds',
            'object_name': 'objectName',
            'object_type': 'objectType'
        }

        self._after_date = after_date
        self._after_id_response = after_id_response
        self._before_date = before_date
        self._download_link = download_link
        self._event_series_status = event_series_status
        self._event_severity = event_severity
        self._event_status = event_status
        self._event_type = event_type
        self._object_ids = object_ids
        self._object_name = object_name
        self._object_type = object_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventCsvDownloadResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventCsvDownloadResponse of this EventCsvDownloadResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def after_date(self):
        """Gets the after_date of this EventCsvDownloadResponse.

        The requested after date filter, if applicable.

        :return: The after_date of this EventCsvDownloadResponse.
        :rtype: datetime
        """
        return self._after_date

    @after_date.setter
    def after_date(self, after_date):
        """Sets the after_date of this EventCsvDownloadResponse.

        The requested after date filter, if applicable.

        :param after_date: The after_date of this EventCsvDownloadResponse.
        :type after_date: datetime
        """

        self._after_date = after_date

    @property
    def after_id_response(self):
        """Gets the after_id_response of this EventCsvDownloadResponse.

        The serialized AfterId of the response, if any.

        :return: The after_id_response of this EventCsvDownloadResponse.
        :rtype: str
        """
        return self._after_id_response

    @after_id_response.setter
    def after_id_response(self, after_id_response):
        """Sets the after_id_response of this EventCsvDownloadResponse.

        The serialized AfterId of the response, if any.

        :param after_id_response: The after_id_response of this EventCsvDownloadResponse.
        :type after_id_response: str
        """

        self._after_id_response = after_id_response

    @property
    def before_date(self):
        """Gets the before_date of this EventCsvDownloadResponse.

        The requested before date filter, if applicable.

        :return: The before_date of this EventCsvDownloadResponse.
        :rtype: datetime
        """
        return self._before_date

    @before_date.setter
    def before_date(self, before_date):
        """Sets the before_date of this EventCsvDownloadResponse.

        The requested before date filter, if applicable.

        :param before_date: The before_date of this EventCsvDownloadResponse.
        :type before_date: datetime
        """

        self._before_date = before_date

    @property
    def download_link(self):
        """Gets the download_link of this EventCsvDownloadResponse.

        The download link for the CSV file.

        :return: The download_link of this EventCsvDownloadResponse.
        :rtype: str
        """
        return self._download_link

    @download_link.setter
    def download_link(self, download_link):
        """Sets the download_link of this EventCsvDownloadResponse.

        The download link for the CSV file.

        :param download_link: The download_link of this EventCsvDownloadResponse.
        :type download_link: str
        """
        if download_link is None:
            raise ValueError("Invalid value for `download_link`, must not be `None`")

        self._download_link = download_link

    @property
    def event_series_status(self):
        """Gets the event_series_status of this EventCsvDownloadResponse.


        :return: The event_series_status of this EventCsvDownloadResponse.
        :rtype: EventSeriesStatusV1
        """
        return self._event_series_status

    @event_series_status.setter
    def event_series_status(self, event_series_status):
        """Sets the event_series_status of this EventCsvDownloadResponse.


        :param event_series_status: The event_series_status of this EventCsvDownloadResponse.
        :type event_series_status: EventSeriesStatusV1
        """

        self._event_series_status = event_series_status

    @property
    def event_severity(self):
        """Gets the event_severity of this EventCsvDownloadResponse.


        :return: The event_severity of this EventCsvDownloadResponse.
        :rtype: EventSeverityV1
        """
        return self._event_severity

    @event_severity.setter
    def event_severity(self, event_severity):
        """Sets the event_severity of this EventCsvDownloadResponse.


        :param event_severity: The event_severity of this EventCsvDownloadResponse.
        :type event_severity: EventSeverityV1
        """

        self._event_severity = event_severity

    @property
    def event_status(self):
        """Gets the event_status of this EventCsvDownloadResponse.


        :return: The event_status of this EventCsvDownloadResponse.
        :rtype: EventStatusV1
        """
        return self._event_status

    @event_status.setter
    def event_status(self, event_status):
        """Sets the event_status of this EventCsvDownloadResponse.


        :param event_status: The event_status of this EventCsvDownloadResponse.
        :type event_status: EventStatusV1
        """

        self._event_status = event_status

    @property
    def event_type(self):
        """Gets the event_type of this EventCsvDownloadResponse.


        :return: The event_type of this EventCsvDownloadResponse.
        :rtype: EventTypeV1
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this EventCsvDownloadResponse.


        :param event_type: The event_type of this EventCsvDownloadResponse.
        :type event_type: EventTypeV1
        """

        self._event_type = event_type

    @property
    def object_ids(self):
        """Gets the object_ids of this EventCsvDownloadResponse.

        The requested list of object ID to filter events, if applicable.

        :return: The object_ids of this EventCsvDownloadResponse.
        :rtype: List[str]
        """
        return self._object_ids

    @object_ids.setter
    def object_ids(self, object_ids):
        """Sets the object_ids of this EventCsvDownloadResponse.

        The requested list of object ID to filter events, if applicable.

        :param object_ids: The object_ids of this EventCsvDownloadResponse.
        :type object_ids: List[str]
        """

        self._object_ids = object_ids

    @property
    def object_name(self):
        """Gets the object_name of this EventCsvDownloadResponse.

        The requested object name filter, if applicable.

        :return: The object_name of this EventCsvDownloadResponse.
        :rtype: str
        """
        return self._object_name

    @object_name.setter
    def object_name(self, object_name):
        """Sets the object_name of this EventCsvDownloadResponse.

        The requested object name filter, if applicable.

        :param object_name: The object_name of this EventCsvDownloadResponse.
        :type object_name: str
        """

        self._object_name = object_name

    @property
    def object_type(self):
        """Gets the object_type of this EventCsvDownloadResponse.


        :return: The object_type of this EventCsvDownloadResponse.
        :rtype: ObjectTypeV1
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this EventCsvDownloadResponse.


        :param object_type: The object_type of this EventCsvDownloadResponse.
        :type object_type: ObjectTypeV1
        """

        self._object_type = object_type
