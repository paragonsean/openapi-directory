# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.exclusion_pattern_detail import ExclusionPatternDetail
from openapi_server import util


class ExclusionPatternDetailList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclusion_pattern_details: List[ExclusionPatternDetail]=None):
        """ExclusionPatternDetailList - a model defined in OpenAPI

        :param exclusion_pattern_details: The exclusion_pattern_details of this ExclusionPatternDetailList.
        """
        self.openapi_types = {
            'exclusion_pattern_details': List[ExclusionPatternDetail]
        }

        self.attribute_map = {
            'exclusion_pattern_details': 'exclusionPatternDetails'
        }

        self._exclusion_pattern_details = exclusion_pattern_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExclusionPatternDetailList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExclusionPatternDetailList of this ExclusionPatternDetailList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclusion_pattern_details(self):
        """Gets the exclusion_pattern_details of this ExclusionPatternDetailList.

        A list of exclusion pattern objects.

        :return: The exclusion_pattern_details of this ExclusionPatternDetailList.
        :rtype: List[ExclusionPatternDetail]
        """
        return self._exclusion_pattern_details

    @exclusion_pattern_details.setter
    def exclusion_pattern_details(self, exclusion_pattern_details):
        """Sets the exclusion_pattern_details of this ExclusionPatternDetailList.

        A list of exclusion pattern objects.

        :param exclusion_pattern_details: The exclusion_pattern_details of this ExclusionPatternDetailList.
        :type exclusion_pattern_details: List[ExclusionPatternDetail]
        """
        if exclusion_pattern_details is None:
            raise ValueError("Invalid value for `exclusion_pattern_details`, must not be `None`")

        self._exclusion_pattern_details = exclusion_pattern_details
