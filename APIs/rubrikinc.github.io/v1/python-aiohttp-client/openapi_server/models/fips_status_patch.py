# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FipsStatusPatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_enabled_in_flight: bool=None):
        """FipsStatusPatch - a model defined in OpenAPI

        :param is_enabled_in_flight: The is_enabled_in_flight of this FipsStatusPatch.
        """
        self.openapi_types = {
            'is_enabled_in_flight': bool
        }

        self.attribute_map = {
            'is_enabled_in_flight': 'isEnabledInFlight'
        }

        self._is_enabled_in_flight = is_enabled_in_flight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FipsStatusPatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FipsStatusPatch of this FipsStatusPatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_enabled_in_flight(self):
        """Gets the is_enabled_in_flight of this FipsStatusPatch.

        Boolean that specifies whether FIPS mode is enabled for in-flight encryption. When this value is true, FIPS mode is enabled for in-flight data encryption. 

        :return: The is_enabled_in_flight of this FipsStatusPatch.
        :rtype: bool
        """
        return self._is_enabled_in_flight

    @is_enabled_in_flight.setter
    def is_enabled_in_flight(self, is_enabled_in_flight):
        """Sets the is_enabled_in_flight of this FipsStatusPatch.

        Boolean that specifies whether FIPS mode is enabled for in-flight encryption. When this value is true, FIPS mode is enabled for in-flight data encryption. 

        :param is_enabled_in_flight: The is_enabled_in_flight of this FipsStatusPatch.
        :type is_enabled_in_flight: bool
        """

        self._is_enabled_in_flight = is_enabled_in_flight
