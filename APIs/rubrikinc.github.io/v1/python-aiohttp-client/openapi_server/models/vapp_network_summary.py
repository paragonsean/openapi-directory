# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VappNetworkSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_deployed: bool=None, name: str=None, parent_network_id: str=None):
        """VappNetworkSummary - a model defined in OpenAPI

        :param is_deployed: The is_deployed of this VappNetworkSummary.
        :param name: The name of this VappNetworkSummary.
        :param parent_network_id: The parent_network_id of this VappNetworkSummary.
        """
        self.openapi_types = {
            'is_deployed': bool,
            'name': str,
            'parent_network_id': str
        }

        self.attribute_map = {
            'is_deployed': 'isDeployed',
            'name': 'name',
            'parent_network_id': 'parentNetworkId'
        }

        self._is_deployed = is_deployed
        self._name = name
        self._parent_network_id = parent_network_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VappNetworkSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VappNetworkSummary of this VappNetworkSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_deployed(self):
        """Gets the is_deployed of this VappNetworkSummary.

        Boolean value that indicates whether the specified vApp network object has been deployed. Value is 'true' when the vApp network object has been deployed and 'false' when it has not been deployed.

        :return: The is_deployed of this VappNetworkSummary.
        :rtype: bool
        """
        return self._is_deployed

    @is_deployed.setter
    def is_deployed(self, is_deployed):
        """Sets the is_deployed of this VappNetworkSummary.

        Boolean value that indicates whether the specified vApp network object has been deployed. Value is 'true' when the vApp network object has been deployed and 'false' when it has not been deployed.

        :param is_deployed: The is_deployed of this VappNetworkSummary.
        :type is_deployed: bool
        """
        if is_deployed is None:
            raise ValueError("Invalid value for `is_deployed`, must not be `None`")

        self._is_deployed = is_deployed

    @property
    def name(self):
        """Gets the name of this VappNetworkSummary.

        Name of the specified vApp network object.

        :return: The name of this VappNetworkSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VappNetworkSummary.

        Name of the specified vApp network object.

        :param name: The name of this VappNetworkSummary.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def parent_network_id(self):
        """Gets the parent_network_id of this VappNetworkSummary.

        vCloud Director ID of the associated organization VDC network object. For an Isolated network, the value is empty.

        :return: The parent_network_id of this VappNetworkSummary.
        :rtype: str
        """
        return self._parent_network_id

    @parent_network_id.setter
    def parent_network_id(self, parent_network_id):
        """Sets the parent_network_id of this VappNetworkSummary.

        vCloud Director ID of the associated organization VDC network object. For an Isolated network, the value is empty.

        :param parent_network_id: The parent_network_id of this VappNetworkSummary.
        :type parent_network_id: str
        """

        self._parent_network_id = parent_network_id
