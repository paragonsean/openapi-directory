# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CertificatePatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, pem_file: str=None):
        """CertificatePatchRequest - a model defined in OpenAPI

        :param description: The description of this CertificatePatchRequest.
        :param name: The name of this CertificatePatchRequest.
        :param pem_file: The pem_file of this CertificatePatchRequest.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'pem_file': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'pem_file': 'pemFile'
        }

        self._description = description
        self._name = name
        self._pem_file = pem_file

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificatePatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificatePatchRequest of this CertificatePatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CertificatePatchRequest.

        User-friendly description for the certificate.

        :return: The description of this CertificatePatchRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CertificatePatchRequest.

        User-friendly description for the certificate.

        :param description: The description of this CertificatePatchRequest.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this CertificatePatchRequest.

        Display name for the certificate.

        :return: The name of this CertificatePatchRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CertificatePatchRequest.

        Display name for the certificate.

        :param name: The name of this CertificatePatchRequest.
        :type name: str
        """

        self._name = name

    @property
    def pem_file(self):
        """Gets the pem_file of this CertificatePatchRequest.

        The certificates to be imported, in PEM format.

        :return: The pem_file of this CertificatePatchRequest.
        :rtype: str
        """
        return self._pem_file

    @pem_file.setter
    def pem_file(self, pem_file):
        """Sets the pem_file of this CertificatePatchRequest.

        The certificates to be imported, in PEM format.

        :param pem_file: The pem_file of this CertificatePatchRequest.
        :type pem_file: str
        """

        self._pem_file = pem_file
