# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_version import FileVersion
from openapi_server import util


class AppSearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_versions: List[FileVersion]=None, filename: str=None, path: str=None, child_object_id: str=None, child_object_name: str=None):
        """AppSearchResponse - a model defined in OpenAPI

        :param file_versions: The file_versions of this AppSearchResponse.
        :param filename: The filename of this AppSearchResponse.
        :param path: The path of this AppSearchResponse.
        :param child_object_id: The child_object_id of this AppSearchResponse.
        :param child_object_name: The child_object_name of this AppSearchResponse.
        """
        self.openapi_types = {
            'file_versions': List[FileVersion],
            'filename': str,
            'path': str,
            'child_object_id': str,
            'child_object_name': str
        }

        self.attribute_map = {
            'file_versions': 'fileVersions',
            'filename': 'filename',
            'path': 'path',
            'child_object_id': 'childObjectId',
            'child_object_name': 'childObjectName'
        }

        self._file_versions = file_versions
        self._filename = filename
        self._path = path
        self._child_object_id = child_object_id
        self._child_object_name = child_object_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppSearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppSearchResponse of this AppSearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_versions(self):
        """Gets the file_versions of this AppSearchResponse.


        :return: The file_versions of this AppSearchResponse.
        :rtype: List[FileVersion]
        """
        return self._file_versions

    @file_versions.setter
    def file_versions(self, file_versions):
        """Sets the file_versions of this AppSearchResponse.


        :param file_versions: The file_versions of this AppSearchResponse.
        :type file_versions: List[FileVersion]
        """

        self._file_versions = file_versions

    @property
    def filename(self):
        """Gets the filename of this AppSearchResponse.

        Just the filename without the whole path.

        :return: The filename of this AppSearchResponse.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this AppSearchResponse.

        Just the filename without the whole path.

        :param filename: The filename of this AppSearchResponse.
        :type filename: str
        """

        self._filename = filename

    @property
    def path(self):
        """Gets the path of this AppSearchResponse.


        :return: The path of this AppSearchResponse.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this AppSearchResponse.


        :param path: The path of this AppSearchResponse.
        :type path: str
        """

        self._path = path

    @property
    def child_object_id(self):
        """Gets the child_object_id of this AppSearchResponse.

        ID assigned to the child virtual machine of the vApp where this file was found.

        :return: The child_object_id of this AppSearchResponse.
        :rtype: str
        """
        return self._child_object_id

    @child_object_id.setter
    def child_object_id(self, child_object_id):
        """Sets the child_object_id of this AppSearchResponse.

        ID assigned to the child virtual machine of the vApp where this file was found.

        :param child_object_id: The child_object_id of this AppSearchResponse.
        :type child_object_id: str
        """
        if child_object_id is None:
            raise ValueError("Invalid value for `child_object_id`, must not be `None`")

        self._child_object_id = child_object_id

    @property
    def child_object_name(self):
        """Gets the child_object_name of this AppSearchResponse.

        Name of the child virtual machine of the vApp where this file was found.

        :return: The child_object_name of this AppSearchResponse.
        :rtype: str
        """
        return self._child_object_name

    @child_object_name.setter
    def child_object_name(self, child_object_name):
        """Sets the child_object_name of this AppSearchResponse.

        Name of the child virtual machine of the vApp where this file was found.

        :param child_object_name: The child_object_name of this AppSearchResponse.
        :type child_object_name: str
        """
        if child_object_name is None:
            raise ValueError("Invalid value for `child_object_name`, must not be `None`")

        self._child_object_name = child_object_name
