# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.host_share_parameters import HostShareParameters
from openapi_server import util


class HostSharePatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, export_point: str=None, host_share_parameters: HostShareParameters=None, password: str=None, username: str=None):
        """HostSharePatch - a model defined in OpenAPI

        :param domain: The domain of this HostSharePatch.
        :param export_point: The export_point of this HostSharePatch.
        :param host_share_parameters: The host_share_parameters of this HostSharePatch.
        :param password: The password of this HostSharePatch.
        :param username: The username of this HostSharePatch.
        """
        self.openapi_types = {
            'domain': str,
            'export_point': str,
            'host_share_parameters': HostShareParameters,
            'password': str,
            'username': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'export_point': 'exportPoint',
            'host_share_parameters': 'hostShareParameters',
            'password': 'password',
            'username': 'username'
        }

        self._domain = domain
        self._export_point = export_point
        self._host_share_parameters = host_share_parameters
        self._password = password
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HostSharePatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HostSharePatch of this HostSharePatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this HostSharePatch.


        :return: The domain of this HostSharePatch.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this HostSharePatch.


        :param domain: The domain of this HostSharePatch.
        :type domain: str
        """

        self._domain = domain

    @property
    def export_point(self):
        """Gets the export_point of this HostSharePatch.


        :return: The export_point of this HostSharePatch.
        :rtype: str
        """
        return self._export_point

    @export_point.setter
    def export_point(self, export_point):
        """Sets the export_point of this HostSharePatch.


        :param export_point: The export_point of this HostSharePatch.
        :type export_point: str
        """

        self._export_point = export_point

    @property
    def host_share_parameters(self):
        """Gets the host_share_parameters of this HostSharePatch.


        :return: The host_share_parameters of this HostSharePatch.
        :rtype: HostShareParameters
        """
        return self._host_share_parameters

    @host_share_parameters.setter
    def host_share_parameters(self, host_share_parameters):
        """Sets the host_share_parameters of this HostSharePatch.


        :param host_share_parameters: The host_share_parameters of this HostSharePatch.
        :type host_share_parameters: HostShareParameters
        """

        self._host_share_parameters = host_share_parameters

    @property
    def password(self):
        """Gets the password of this HostSharePatch.


        :return: The password of this HostSharePatch.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this HostSharePatch.


        :param password: The password of this HostSharePatch.
        :type password: str
        """

        self._password = password

    @property
    def username(self):
        """Gets the username of this HostSharePatch.


        :return: The username of this HostSharePatch.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this HostSharePatch.


        :param username: The username of this HostSharePatch.
        :type username: str
        """

        self._username = username
