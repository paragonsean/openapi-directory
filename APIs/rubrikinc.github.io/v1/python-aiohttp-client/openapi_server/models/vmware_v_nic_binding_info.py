# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vmware_network_device_info import VmwareNetworkDeviceInfo
from openapi_server.models.vmware_network_info import VmwareNetworkInfo
from openapi_server import util


class VmwareVNicBindingInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backing_network_info: VmwareNetworkInfo=None, network_device_info: VmwareNetworkDeviceInfo=None):
        """VmwareVNicBindingInfo - a model defined in OpenAPI

        :param backing_network_info: The backing_network_info of this VmwareVNicBindingInfo.
        :param network_device_info: The network_device_info of this VmwareVNicBindingInfo.
        """
        self.openapi_types = {
            'backing_network_info': VmwareNetworkInfo,
            'network_device_info': VmwareNetworkDeviceInfo
        }

        self.attribute_map = {
            'backing_network_info': 'backingNetworkInfo',
            'network_device_info': 'networkDeviceInfo'
        }

        self._backing_network_info = backing_network_info
        self._network_device_info = network_device_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareVNicBindingInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareVNicBindingInfo of this VmwareVNicBindingInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backing_network_info(self):
        """Gets the backing_network_info of this VmwareVNicBindingInfo.


        :return: The backing_network_info of this VmwareVNicBindingInfo.
        :rtype: VmwareNetworkInfo
        """
        return self._backing_network_info

    @backing_network_info.setter
    def backing_network_info(self, backing_network_info):
        """Sets the backing_network_info of this VmwareVNicBindingInfo.


        :param backing_network_info: The backing_network_info of this VmwareVNicBindingInfo.
        :type backing_network_info: VmwareNetworkInfo
        """
        if backing_network_info is None:
            raise ValueError("Invalid value for `backing_network_info`, must not be `None`")

        self._backing_network_info = backing_network_info

    @property
    def network_device_info(self):
        """Gets the network_device_info of this VmwareVNicBindingInfo.


        :return: The network_device_info of this VmwareVNicBindingInfo.
        :rtype: VmwareNetworkDeviceInfo
        """
        return self._network_device_info

    @network_device_info.setter
    def network_device_info(self, network_device_info):
        """Sets the network_device_info of this VmwareVNicBindingInfo.


        :param network_device_info: The network_device_info of this VmwareVNicBindingInfo.
        :type network_device_info: VmwareNetworkDeviceInfo
        """
        if network_device_info is None:
            raise ValueError("Invalid value for `network_device_info`, must not be `None`")

        self._network_device_info = network_device_info
