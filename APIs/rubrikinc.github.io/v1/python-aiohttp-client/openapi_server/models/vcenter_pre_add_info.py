# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_host_group_info import ClusterHostGroupInfo
from openapi_server import util


class VcenterPreAddInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_host_group_info: List[ClusterHostGroupInfo]=None):
        """VcenterPreAddInfo - a model defined in OpenAPI

        :param cluster_host_group_info: The cluster_host_group_info of this VcenterPreAddInfo.
        """
        self.openapi_types = {
            'cluster_host_group_info': List[ClusterHostGroupInfo]
        }

        self.attribute_map = {
            'cluster_host_group_info': 'clusterHostGroupInfo'
        }

        self._cluster_host_group_info = cluster_host_group_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VcenterPreAddInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VcenterPreAddInfo of this VcenterPreAddInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_host_group_info(self):
        """Gets the cluster_host_group_info of this VcenterPreAddInfo.

        List of compute clusters present in the vCenter, including the host groups each cluster contains.

        :return: The cluster_host_group_info of this VcenterPreAddInfo.
        :rtype: List[ClusterHostGroupInfo]
        """
        return self._cluster_host_group_info

    @cluster_host_group_info.setter
    def cluster_host_group_info(self, cluster_host_group_info):
        """Sets the cluster_host_group_info of this VcenterPreAddInfo.

        List of compute clusters present in the vCenter, including the host groups each cluster contains.

        :param cluster_host_group_info: The cluster_host_group_info of this VcenterPreAddInfo.
        :type cluster_host_group_info: List[ClusterHostGroupInfo]
        """
        if cluster_host_group_info is None:
            raise ValueError("Invalid value for `cluster_host_group_info`, must not be `None`")

        self._cluster_host_group_info = cluster_host_group_info
