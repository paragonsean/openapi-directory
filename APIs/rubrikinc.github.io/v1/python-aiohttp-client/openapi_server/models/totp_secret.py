# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TotpSecret(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, secret: str=None, secret_uri: str=None):
        """TotpSecret - a model defined in OpenAPI

        :param secret: The secret of this TotpSecret.
        :param secret_uri: The secret_uri of this TotpSecret.
        """
        self.openapi_types = {
            'secret': str,
            'secret_uri': str
        }

        self.attribute_map = {
            'secret': 'secret',
            'secret_uri': 'secretUri'
        }

        self._secret = secret
        self._secret_uri = secret_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TotpSecret':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TotpSecret of this TotpSecret.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secret(self):
        """Gets the secret of this TotpSecret.

        String containing a generated secret key for the time-based one time password (TOTP) authentication method. 

        :return: The secret of this TotpSecret.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this TotpSecret.

        String containing a generated secret key for the time-based one time password (TOTP) authentication method. 

        :param secret: The secret of this TotpSecret.
        :type secret: str
        """
        if secret is None:
            raise ValueError("Invalid value for `secret`, must not be `None`")

        self._secret = secret

    @property
    def secret_uri(self):
        """Gets the secret_uri of this TotpSecret.

        String containing a generated URI for the time-based one time password (TOTP) authentication method. The URI includes the secret key and configuration information. 

        :return: The secret_uri of this TotpSecret.
        :rtype: str
        """
        return self._secret_uri

    @secret_uri.setter
    def secret_uri(self, secret_uri):
        """Sets the secret_uri of this TotpSecret.

        String containing a generated URI for the time-based one time password (TOTP) authentication method. The URI includes the secret key and configuration information. 

        :param secret_uri: The secret_uri of this TotpSecret.
        :type secret_uri: str
        """
        if secret_uri is None:
            raise ValueError("Invalid value for `secret_uri`, must not be `None`")

        self._secret_uri = secret_uri
