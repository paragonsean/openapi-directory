# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportableObjectType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    APPBLUEPRINT = 'AppBlueprint'
    EC2INSTANCE = 'Ec2Instance'
    HDFS = 'Hdfs'
    HYPERVVIRTUALMACHINE = 'HypervVirtualMachine'
    LINUXFILESET = 'LinuxFileset'
    MANAGEDVOLUME = 'ManagedVolume'
    MSSQL = 'Mssql'
    NUTANIXVIRTUALMACHINE = 'NutanixVirtualMachine'
    ORACLEDATABASE = 'OracleDatabase'
    SAPHANADATABASE = 'SapHanaDatabase'
    SHAREFILESET = 'ShareFileset'
    STORAGEARRAYVOLUMEGROUP = 'StorageArrayVolumeGroup'
    VCDVAPP = 'VcdVapp'
    VMWAREVIRTUALMACHINE = 'VmwareVirtualMachine'
    WINDOWSFILESET = 'WindowsFileset'
    WINDOWSVOLUMEGROUP = 'WindowsVolumeGroup'

    def __init__(self):
        """ReportableObjectType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportableObjectType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportableObjectType of this ReportableObjectType.
        """
        return util.deserialize_model(dikt, cls)
