# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SlaObjectCounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, num_nutanix_vms: int=None, num_ec2_instances: int=None, num_hyperv_vms: int=None, num_managed_volumes: int=None, num_dbs: int=None, num_vcd_vapps: int=None, num_filesets: int=None, num_linux_hosts: int=None, num_oracle_dbs: int=None, num_protected_objects: int=None, num_shares: int=None, num_storage_array_volume_groups: int=None, num_vms: int=None, num_windows_hosts: int=None, num_windows_volume_groups: int=None):
        """SlaObjectCounts - a model defined in OpenAPI

        :param num_nutanix_vms: The num_nutanix_vms of this SlaObjectCounts.
        :param num_ec2_instances: The num_ec2_instances of this SlaObjectCounts.
        :param num_hyperv_vms: The num_hyperv_vms of this SlaObjectCounts.
        :param num_managed_volumes: The num_managed_volumes of this SlaObjectCounts.
        :param num_dbs: The num_dbs of this SlaObjectCounts.
        :param num_vcd_vapps: The num_vcd_vapps of this SlaObjectCounts.
        :param num_filesets: The num_filesets of this SlaObjectCounts.
        :param num_linux_hosts: The num_linux_hosts of this SlaObjectCounts.
        :param num_oracle_dbs: The num_oracle_dbs of this SlaObjectCounts.
        :param num_protected_objects: The num_protected_objects of this SlaObjectCounts.
        :param num_shares: The num_shares of this SlaObjectCounts.
        :param num_storage_array_volume_groups: The num_storage_array_volume_groups of this SlaObjectCounts.
        :param num_vms: The num_vms of this SlaObjectCounts.
        :param num_windows_hosts: The num_windows_hosts of this SlaObjectCounts.
        :param num_windows_volume_groups: The num_windows_volume_groups of this SlaObjectCounts.
        """
        self.openapi_types = {
            'num_nutanix_vms': int,
            'num_ec2_instances': int,
            'num_hyperv_vms': int,
            'num_managed_volumes': int,
            'num_dbs': int,
            'num_vcd_vapps': int,
            'num_filesets': int,
            'num_linux_hosts': int,
            'num_oracle_dbs': int,
            'num_protected_objects': int,
            'num_shares': int,
            'num_storage_array_volume_groups': int,
            'num_vms': int,
            'num_windows_hosts': int,
            'num_windows_volume_groups': int
        }

        self.attribute_map = {
            'num_nutanix_vms': 'numNutanixVms',
            'num_ec2_instances': 'numEc2Instances',
            'num_hyperv_vms': 'numHypervVms',
            'num_managed_volumes': 'numManagedVolumes',
            'num_dbs': 'numDbs',
            'num_vcd_vapps': 'numVcdVapps',
            'num_filesets': 'numFilesets',
            'num_linux_hosts': 'numLinuxHosts',
            'num_oracle_dbs': 'numOracleDbs',
            'num_protected_objects': 'numProtectedObjects',
            'num_shares': 'numShares',
            'num_storage_array_volume_groups': 'numStorageArrayVolumeGroups',
            'num_vms': 'numVms',
            'num_windows_hosts': 'numWindowsHosts',
            'num_windows_volume_groups': 'numWindowsVolumeGroups'
        }

        self._num_nutanix_vms = num_nutanix_vms
        self._num_ec2_instances = num_ec2_instances
        self._num_hyperv_vms = num_hyperv_vms
        self._num_managed_volumes = num_managed_volumes
        self._num_dbs = num_dbs
        self._num_vcd_vapps = num_vcd_vapps
        self._num_filesets = num_filesets
        self._num_linux_hosts = num_linux_hosts
        self._num_oracle_dbs = num_oracle_dbs
        self._num_protected_objects = num_protected_objects
        self._num_shares = num_shares
        self._num_storage_array_volume_groups = num_storage_array_volume_groups
        self._num_vms = num_vms
        self._num_windows_hosts = num_windows_hosts
        self._num_windows_volume_groups = num_windows_volume_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlaObjectCounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SlaObjectCounts of this SlaObjectCounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def num_nutanix_vms(self):
        """Gets the num_nutanix_vms of this SlaObjectCounts.

        The number of Nutanix virtual machines protected under this SLA domain.

        :return: The num_nutanix_vms of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_nutanix_vms

    @num_nutanix_vms.setter
    def num_nutanix_vms(self, num_nutanix_vms):
        """Sets the num_nutanix_vms of this SlaObjectCounts.

        The number of Nutanix virtual machines protected under this SLA domain.

        :param num_nutanix_vms: The num_nutanix_vms of this SlaObjectCounts.
        :type num_nutanix_vms: int
        """

        self._num_nutanix_vms = num_nutanix_vms

    @property
    def num_ec2_instances(self):
        """Gets the num_ec2_instances of this SlaObjectCounts.

        The number of EC2 instances protected under this SLA Domain.

        :return: The num_ec2_instances of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_ec2_instances

    @num_ec2_instances.setter
    def num_ec2_instances(self, num_ec2_instances):
        """Sets the num_ec2_instances of this SlaObjectCounts.

        The number of EC2 instances protected under this SLA Domain.

        :param num_ec2_instances: The num_ec2_instances of this SlaObjectCounts.
        :type num_ec2_instances: int
        """

        self._num_ec2_instances = num_ec2_instances

    @property
    def num_hyperv_vms(self):
        """Gets the num_hyperv_vms of this SlaObjectCounts.

        The number of Hyper-V virtual machines protected under this SLA domain.

        :return: The num_hyperv_vms of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_hyperv_vms

    @num_hyperv_vms.setter
    def num_hyperv_vms(self, num_hyperv_vms):
        """Sets the num_hyperv_vms of this SlaObjectCounts.

        The number of Hyper-V virtual machines protected under this SLA domain.

        :param num_hyperv_vms: The num_hyperv_vms of this SlaObjectCounts.
        :type num_hyperv_vms: int
        """

        self._num_hyperv_vms = num_hyperv_vms

    @property
    def num_managed_volumes(self):
        """Gets the num_managed_volumes of this SlaObjectCounts.

        The number of Managed volumes protected under this SLA Domain.

        :return: The num_managed_volumes of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_managed_volumes

    @num_managed_volumes.setter
    def num_managed_volumes(self, num_managed_volumes):
        """Sets the num_managed_volumes of this SlaObjectCounts.

        The number of Managed volumes protected under this SLA Domain.

        :param num_managed_volumes: The num_managed_volumes of this SlaObjectCounts.
        :type num_managed_volumes: int
        """

        self._num_managed_volumes = num_managed_volumes

    @property
    def num_dbs(self):
        """Gets the num_dbs of this SlaObjectCounts.

        The number of actively protected databases under this SLA domain.

        :return: The num_dbs of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_dbs

    @num_dbs.setter
    def num_dbs(self, num_dbs):
        """Sets the num_dbs of this SlaObjectCounts.

        The number of actively protected databases under this SLA domain.

        :param num_dbs: The num_dbs of this SlaObjectCounts.
        :type num_dbs: int
        """

        self._num_dbs = num_dbs

    @property
    def num_vcd_vapps(self):
        """Gets the num_vcd_vapps of this SlaObjectCounts.

        The number of vApps protected under this SLA Domain.

        :return: The num_vcd_vapps of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_vcd_vapps

    @num_vcd_vapps.setter
    def num_vcd_vapps(self, num_vcd_vapps):
        """Sets the num_vcd_vapps of this SlaObjectCounts.

        The number of vApps protected under this SLA Domain.

        :param num_vcd_vapps: The num_vcd_vapps of this SlaObjectCounts.
        :type num_vcd_vapps: int
        """

        self._num_vcd_vapps = num_vcd_vapps

    @property
    def num_filesets(self):
        """Gets the num_filesets of this SlaObjectCounts.

        The number of filesets protected under this SLA Domain.

        :return: The num_filesets of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_filesets

    @num_filesets.setter
    def num_filesets(self, num_filesets):
        """Sets the num_filesets of this SlaObjectCounts.

        The number of filesets protected under this SLA Domain.

        :param num_filesets: The num_filesets of this SlaObjectCounts.
        :type num_filesets: int
        """

        self._num_filesets = num_filesets

    @property
    def num_linux_hosts(self):
        """Gets the num_linux_hosts of this SlaObjectCounts.

        The number of Linux servers with filesets protected under this SLA Domain.

        :return: The num_linux_hosts of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_linux_hosts

    @num_linux_hosts.setter
    def num_linux_hosts(self, num_linux_hosts):
        """Sets the num_linux_hosts of this SlaObjectCounts.

        The number of Linux servers with filesets protected under this SLA Domain.

        :param num_linux_hosts: The num_linux_hosts of this SlaObjectCounts.
        :type num_linux_hosts: int
        """

        self._num_linux_hosts = num_linux_hosts

    @property
    def num_oracle_dbs(self):
        """Gets the num_oracle_dbs of this SlaObjectCounts.

        The number of actively protected oracle databases under this SLA Domain.

        :return: The num_oracle_dbs of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_oracle_dbs

    @num_oracle_dbs.setter
    def num_oracle_dbs(self, num_oracle_dbs):
        """Sets the num_oracle_dbs of this SlaObjectCounts.

        The number of actively protected oracle databases under this SLA Domain.

        :param num_oracle_dbs: The num_oracle_dbs of this SlaObjectCounts.
        :type num_oracle_dbs: int
        """

        self._num_oracle_dbs = num_oracle_dbs

    @property
    def num_protected_objects(self):
        """Gets the num_protected_objects of this SlaObjectCounts.

        The total number of protected ojects under this SLA Domain.

        :return: The num_protected_objects of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_protected_objects

    @num_protected_objects.setter
    def num_protected_objects(self, num_protected_objects):
        """Sets the num_protected_objects of this SlaObjectCounts.

        The total number of protected ojects under this SLA Domain.

        :param num_protected_objects: The num_protected_objects of this SlaObjectCounts.
        :type num_protected_objects: int
        """

        self._num_protected_objects = num_protected_objects

    @property
    def num_shares(self):
        """Gets the num_shares of this SlaObjectCounts.

        The number of shares protected under this SLA Domain.

        :return: The num_shares of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_shares

    @num_shares.setter
    def num_shares(self, num_shares):
        """Sets the num_shares of this SlaObjectCounts.

        The number of shares protected under this SLA Domain.

        :param num_shares: The num_shares of this SlaObjectCounts.
        :type num_shares: int
        """

        self._num_shares = num_shares

    @property
    def num_storage_array_volume_groups(self):
        """Gets the num_storage_array_volume_groups of this SlaObjectCounts.

        The number of storage array volume groups protected under this SLA Domain.

        :return: The num_storage_array_volume_groups of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_storage_array_volume_groups

    @num_storage_array_volume_groups.setter
    def num_storage_array_volume_groups(self, num_storage_array_volume_groups):
        """Sets the num_storage_array_volume_groups of this SlaObjectCounts.

        The number of storage array volume groups protected under this SLA Domain.

        :param num_storage_array_volume_groups: The num_storage_array_volume_groups of this SlaObjectCounts.
        :type num_storage_array_volume_groups: int
        """

        self._num_storage_array_volume_groups = num_storage_array_volume_groups

    @property
    def num_vms(self):
        """Gets the num_vms of this SlaObjectCounts.


        :return: The num_vms of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_vms

    @num_vms.setter
    def num_vms(self, num_vms):
        """Sets the num_vms of this SlaObjectCounts.


        :param num_vms: The num_vms of this SlaObjectCounts.
        :type num_vms: int
        """

        self._num_vms = num_vms

    @property
    def num_windows_hosts(self):
        """Gets the num_windows_hosts of this SlaObjectCounts.

        The number of Windows servers with filesets protected under this SLA Domain.

        :return: The num_windows_hosts of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_windows_hosts

    @num_windows_hosts.setter
    def num_windows_hosts(self, num_windows_hosts):
        """Sets the num_windows_hosts of this SlaObjectCounts.

        The number of Windows servers with filesets protected under this SLA Domain.

        :param num_windows_hosts: The num_windows_hosts of this SlaObjectCounts.
        :type num_windows_hosts: int
        """

        self._num_windows_hosts = num_windows_hosts

    @property
    def num_windows_volume_groups(self):
        """Gets the num_windows_volume_groups of this SlaObjectCounts.

        The number of Windows volume groups protected under this SLA Domain.

        :return: The num_windows_volume_groups of this SlaObjectCounts.
        :rtype: int
        """
        return self._num_windows_volume_groups

    @num_windows_volume_groups.setter
    def num_windows_volume_groups(self, num_windows_volume_groups):
        """Sets the num_windows_volume_groups of this SlaObjectCounts.

        The number of Windows volume groups protected under this SLA Domain.

        :param num_windows_volume_groups: The num_windows_volume_groups of this SlaObjectCounts.
        :type num_windows_volume_groups: int
        """

        self._num_windows_volume_groups = num_windows_volume_groups
