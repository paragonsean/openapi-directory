# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FilesetRestoreFileJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_dir: str=None, ignore_errors: bool=None, source_dir: str=None):
        """FilesetRestoreFileJobConfig - a model defined in OpenAPI

        :param destination_dir: The destination_dir of this FilesetRestoreFileJobConfig.
        :param ignore_errors: The ignore_errors of this FilesetRestoreFileJobConfig.
        :param source_dir: The source_dir of this FilesetRestoreFileJobConfig.
        """
        self.openapi_types = {
            'destination_dir': str,
            'ignore_errors': bool,
            'source_dir': str
        }

        self.attribute_map = {
            'destination_dir': 'destinationDir',
            'ignore_errors': 'ignoreErrors',
            'source_dir': 'sourceDir'
        }

        self._destination_dir = destination_dir
        self._ignore_errors = ignore_errors
        self._source_dir = source_dir

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FilesetRestoreFileJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FilesetRestoreFileJobConfig of this FilesetRestoreFileJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_dir(self):
        """Gets the destination_dir of this FilesetRestoreFileJobConfig.

        Destination directory.

        :return: The destination_dir of this FilesetRestoreFileJobConfig.
        :rtype: str
        """
        return self._destination_dir

    @destination_dir.setter
    def destination_dir(self, destination_dir):
        """Sets the destination_dir of this FilesetRestoreFileJobConfig.

        Destination directory.

        :param destination_dir: The destination_dir of this FilesetRestoreFileJobConfig.
        :type destination_dir: str
        """
        if destination_dir is None:
            raise ValueError("Invalid value for `destination_dir`, must not be `None`")

        self._destination_dir = destination_dir

    @property
    def ignore_errors(self):
        """Gets the ignore_errors of this FilesetRestoreFileJobConfig.

        Optional field to determine if we should ignore single error during restore. Default value is false.

        :return: The ignore_errors of this FilesetRestoreFileJobConfig.
        :rtype: bool
        """
        return self._ignore_errors

    @ignore_errors.setter
    def ignore_errors(self, ignore_errors):
        """Sets the ignore_errors of this FilesetRestoreFileJobConfig.

        Optional field to determine if we should ignore single error during restore. Default value is false.

        :param ignore_errors: The ignore_errors of this FilesetRestoreFileJobConfig.
        :type ignore_errors: bool
        """

        self._ignore_errors = ignore_errors

    @property
    def source_dir(self):
        """Gets the source_dir of this FilesetRestoreFileJobConfig.

        Source directory to restore from.

        :return: The source_dir of this FilesetRestoreFileJobConfig.
        :rtype: str
        """
        return self._source_dir

    @source_dir.setter
    def source_dir(self, source_dir):
        """Sets the source_dir of this FilesetRestoreFileJobConfig.

        Source directory to restore from.

        :param source_dir: The source_dir of this FilesetRestoreFileJobConfig.
        :type source_dir: str
        """
        if source_dir is None:
            raise ValueError("Invalid value for `source_dir`, must not be `None`")

        self._source_dir = source_dir
