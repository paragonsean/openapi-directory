# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_new_vapp_params import CreateNewVappParams
from openapi_server.models.create_vapp_network_params import CreateVappNetworkParams
from openapi_server.models.vapp_export_mode import VappExportMode
from openapi_server.models.vapp_vm_restore_spec import VappVmRestoreSpec
from openapi_server import util


class VappExportSnapshotJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_mode: VappExportMode=None, networks_to_restore: List[CreateVappNetworkParams]=None, new_vapp_params: CreateNewVappParams=None, should_power_on_vapp_after_export: bool=False, target_vapp_id: str=None, vms_to_export: List[VappVmRestoreSpec]=None):
        """VappExportSnapshotJobConfig - a model defined in OpenAPI

        :param export_mode: The export_mode of this VappExportSnapshotJobConfig.
        :param networks_to_restore: The networks_to_restore of this VappExportSnapshotJobConfig.
        :param new_vapp_params: The new_vapp_params of this VappExportSnapshotJobConfig.
        :param should_power_on_vapp_after_export: The should_power_on_vapp_after_export of this VappExportSnapshotJobConfig.
        :param target_vapp_id: The target_vapp_id of this VappExportSnapshotJobConfig.
        :param vms_to_export: The vms_to_export of this VappExportSnapshotJobConfig.
        """
        self.openapi_types = {
            'export_mode': VappExportMode,
            'networks_to_restore': List[CreateVappNetworkParams],
            'new_vapp_params': CreateNewVappParams,
            'should_power_on_vapp_after_export': bool,
            'target_vapp_id': str,
            'vms_to_export': List[VappVmRestoreSpec]
        }

        self.attribute_map = {
            'export_mode': 'exportMode',
            'networks_to_restore': 'networksToRestore',
            'new_vapp_params': 'newVappParams',
            'should_power_on_vapp_after_export': 'shouldPowerOnVappAfterExport',
            'target_vapp_id': 'targetVappId',
            'vms_to_export': 'vmsToExport'
        }

        self._export_mode = export_mode
        self._networks_to_restore = networks_to_restore
        self._new_vapp_params = new_vapp_params
        self._should_power_on_vapp_after_export = should_power_on_vapp_after_export
        self._target_vapp_id = target_vapp_id
        self._vms_to_export = vms_to_export

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VappExportSnapshotJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VappExportSnapshotJobConfig of this VappExportSnapshotJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_mode(self):
        """Gets the export_mode of this VappExportSnapshotJobConfig.


        :return: The export_mode of this VappExportSnapshotJobConfig.
        :rtype: VappExportMode
        """
        return self._export_mode

    @export_mode.setter
    def export_mode(self, export_mode):
        """Sets the export_mode of this VappExportSnapshotJobConfig.


        :param export_mode: The export_mode of this VappExportSnapshotJobConfig.
        :type export_mode: VappExportMode
        """
        if export_mode is None:
            raise ValueError("Invalid value for `export_mode`, must not be `None`")

        self._export_mode = export_mode

    @property
    def networks_to_restore(self):
        """Gets the networks_to_restore of this VappExportSnapshotJobConfig.

        Array of vApp networks that are in the specified vApp snapshot and should be set up as part of the export operation. A vApp network that is not included in the array will not be set up in the exported vApp.

        :return: The networks_to_restore of this VappExportSnapshotJobConfig.
        :rtype: List[CreateVappNetworkParams]
        """
        return self._networks_to_restore

    @networks_to_restore.setter
    def networks_to_restore(self, networks_to_restore):
        """Sets the networks_to_restore of this VappExportSnapshotJobConfig.

        Array of vApp networks that are in the specified vApp snapshot and should be set up as part of the export operation. A vApp network that is not included in the array will not be set up in the exported vApp.

        :param networks_to_restore: The networks_to_restore of this VappExportSnapshotJobConfig.
        :type networks_to_restore: List[CreateVappNetworkParams]
        """
        if networks_to_restore is None:
            raise ValueError("Invalid value for `networks_to_restore`, must not be `None`")

        self._networks_to_restore = networks_to_restore

    @property
    def new_vapp_params(self):
        """Gets the new_vapp_params of this VappExportSnapshotJobConfig.


        :return: The new_vapp_params of this VappExportSnapshotJobConfig.
        :rtype: CreateNewVappParams
        """
        return self._new_vapp_params

    @new_vapp_params.setter
    def new_vapp_params(self, new_vapp_params):
        """Sets the new_vapp_params of this VappExportSnapshotJobConfig.


        :param new_vapp_params: The new_vapp_params of this VappExportSnapshotJobConfig.
        :type new_vapp_params: CreateNewVappParams
        """

        self._new_vapp_params = new_vapp_params

    @property
    def should_power_on_vapp_after_export(self):
        """Gets the should_power_on_vapp_after_export of this VappExportSnapshotJobConfig.

        Boolean value that indicates whether to power on the exported vApp. Use 'true' to turn the power on for the exported vApp or use 'false' to leave the power off for the exported vApp.

        :return: The should_power_on_vapp_after_export of this VappExportSnapshotJobConfig.
        :rtype: bool
        """
        return self._should_power_on_vapp_after_export

    @should_power_on_vapp_after_export.setter
    def should_power_on_vapp_after_export(self, should_power_on_vapp_after_export):
        """Sets the should_power_on_vapp_after_export of this VappExportSnapshotJobConfig.

        Boolean value that indicates whether to power on the exported vApp. Use 'true' to turn the power on for the exported vApp or use 'false' to leave the power off for the exported vApp.

        :param should_power_on_vapp_after_export: The should_power_on_vapp_after_export of this VappExportSnapshotJobConfig.
        :type should_power_on_vapp_after_export: bool
        """

        self._should_power_on_vapp_after_export = should_power_on_vapp_after_export

    @property
    def target_vapp_id(self):
        """Gets the target_vapp_id of this VappExportSnapshotJobConfig.

        ID assigned to the target vApp object, when the export is into an existing vApp. When the export is not into a target vApp, remove the 'targetVappId' member.

        :return: The target_vapp_id of this VappExportSnapshotJobConfig.
        :rtype: str
        """
        return self._target_vapp_id

    @target_vapp_id.setter
    def target_vapp_id(self, target_vapp_id):
        """Sets the target_vapp_id of this VappExportSnapshotJobConfig.

        ID assigned to the target vApp object, when the export is into an existing vApp. When the export is not into a target vApp, remove the 'targetVappId' member.

        :param target_vapp_id: The target_vapp_id of this VappExportSnapshotJobConfig.
        :type target_vapp_id: str
        """

        self._target_vapp_id = target_vapp_id

    @property
    def vms_to_export(self):
        """Gets the vms_to_export of this VappExportSnapshotJobConfig.

        An array containing summary information for the virtual machines included in the vApp export.

        :return: The vms_to_export of this VappExportSnapshotJobConfig.
        :rtype: List[VappVmRestoreSpec]
        """
        return self._vms_to_export

    @vms_to_export.setter
    def vms_to_export(self, vms_to_export):
        """Sets the vms_to_export of this VappExportSnapshotJobConfig.

        An array containing summary information for the virtual machines included in the vApp export.

        :param vms_to_export: The vms_to_export of this VappExportSnapshotJobConfig.
        :type vms_to_export: List[VappVmRestoreSpec]
        """
        if vms_to_export is None:
            raise ValueError("Invalid value for `vms_to_export`, must not be `None`")

        self._vms_to_export = vms_to_export
