# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HdfsCreate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_id: str=None, template_id: str=None):
        """HdfsCreate - a model defined in OpenAPI

        :param host_id: The host_id of this HdfsCreate.
        :param template_id: The template_id of this HdfsCreate.
        """
        self.openapi_types = {
            'host_id': str,
            'template_id': str
        }

        self.attribute_map = {
            'host_id': 'hostId',
            'template_id': 'templateId'
        }

        self._host_id = host_id
        self._template_id = template_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HdfsCreate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HdfsCreate of this HdfsCreate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_id(self):
        """Gets the host_id of this HdfsCreate.


        :return: The host_id of this HdfsCreate.
        :rtype: str
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id):
        """Sets the host_id of this HdfsCreate.


        :param host_id: The host_id of this HdfsCreate.
        :type host_id: str
        """

        self._host_id = host_id

    @property
    def template_id(self):
        """Gets the template_id of this HdfsCreate.


        :return: The template_id of this HdfsCreate.
        :rtype: str
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id):
        """Sets the template_id of this HdfsCreate.


        :param template_id: The template_id of this HdfsCreate.
        :type template_id: str
        """
        if template_id is None:
            raise ValueError("Invalid value for `template_id`, must not be `None`")

        self._template_id = template_id
