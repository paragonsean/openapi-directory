# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VirtualDiskDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_key: int=None, exclude_from_snapshots: bool=None, file_name: str=None, id: str=None, size: int=None):
        """VirtualDiskDetail - a model defined in OpenAPI

        :param device_key: The device_key of this VirtualDiskDetail.
        :param exclude_from_snapshots: The exclude_from_snapshots of this VirtualDiskDetail.
        :param file_name: The file_name of this VirtualDiskDetail.
        :param id: The id of this VirtualDiskDetail.
        :param size: The size of this VirtualDiskDetail.
        """
        self.openapi_types = {
            'device_key': int,
            'exclude_from_snapshots': bool,
            'file_name': str,
            'id': str,
            'size': int
        }

        self.attribute_map = {
            'device_key': 'deviceKey',
            'exclude_from_snapshots': 'excludeFromSnapshots',
            'file_name': 'fileName',
            'id': 'id',
            'size': 'size'
        }

        self._device_key = device_key
        self._exclude_from_snapshots = exclude_from_snapshots
        self._file_name = file_name
        self._id = id
        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualDiskDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualDiskDetail of this VirtualDiskDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_key(self):
        """Gets the device_key of this VirtualDiskDetail.

        Unique and reusable key that vSphere uses to identify VMDK files and other devices in the hardware of a virtual machine.

        :return: The device_key of this VirtualDiskDetail.
        :rtype: int
        """
        return self._device_key

    @device_key.setter
    def device_key(self, device_key):
        """Sets the device_key of this VirtualDiskDetail.

        Unique and reusable key that vSphere uses to identify VMDK files and other devices in the hardware of a virtual machine.

        :param device_key: The device_key of this VirtualDiskDetail.
        :type device_key: int
        """

        self._device_key = device_key

    @property
    def exclude_from_snapshots(self):
        """Gets the exclude_from_snapshots of this VirtualDiskDetail.


        :return: The exclude_from_snapshots of this VirtualDiskDetail.
        :rtype: bool
        """
        return self._exclude_from_snapshots

    @exclude_from_snapshots.setter
    def exclude_from_snapshots(self, exclude_from_snapshots):
        """Sets the exclude_from_snapshots of this VirtualDiskDetail.


        :param exclude_from_snapshots: The exclude_from_snapshots of this VirtualDiskDetail.
        :type exclude_from_snapshots: bool
        """

        self._exclude_from_snapshots = exclude_from_snapshots

    @property
    def file_name(self):
        """Gets the file_name of this VirtualDiskDetail.


        :return: The file_name of this VirtualDiskDetail.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this VirtualDiskDetail.


        :param file_name: The file_name of this VirtualDiskDetail.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def id(self):
        """Gets the id of this VirtualDiskDetail.


        :return: The id of this VirtualDiskDetail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VirtualDiskDetail.


        :param id: The id of this VirtualDiskDetail.
        :type id: str
        """

        self._id = id

    @property
    def size(self):
        """Gets the size of this VirtualDiskDetail.


        :return: The size of this VirtualDiskDetail.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this VirtualDiskDetail.


        :param size: The size of this VirtualDiskDetail.
        :type size: int
        """

        self._size = size
