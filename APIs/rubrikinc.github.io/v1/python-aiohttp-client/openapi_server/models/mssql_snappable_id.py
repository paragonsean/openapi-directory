# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MssqlSnappableId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snappable_id: str=None):
        """MssqlSnappableId - a model defined in OpenAPI

        :param snappable_id: The snappable_id of this MssqlSnappableId.
        """
        self.openapi_types = {
            'snappable_id': str
        }

        self.attribute_map = {
            'snappable_id': 'snappableId'
        }

        self._snappable_id = snappable_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MssqlSnappableId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MssqlSnappableId of this MssqlSnappableId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snappable_id(self):
        """Gets the snappable_id of this MssqlSnappableId.

        ID of the protected object.

        :return: The snappable_id of this MssqlSnappableId.
        :rtype: str
        """
        return self._snappable_id

    @snappable_id.setter
    def snappable_id(self, snappable_id):
        """Sets the snappable_id of this MssqlSnappableId.

        ID of the protected object.

        :param snappable_id: The snappable_id of this MssqlSnappableId.
        :type snappable_id: str
        """
        if snappable_id is None:
            raise ValueError("Invalid value for `snappable_id`, must not be `None`")

        self._snappable_id = snappable_id
