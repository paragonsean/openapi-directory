# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.preferred_cdp_network_protocol import PreferredCdpNetworkProtocol
from openapi_server import util


class PreferredCdpNetworkProtocolObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, preferred_cdp_network_protocol: PreferredCdpNetworkProtocol=None):
        """PreferredCdpNetworkProtocolObject - a model defined in OpenAPI

        :param preferred_cdp_network_protocol: The preferred_cdp_network_protocol of this PreferredCdpNetworkProtocolObject.
        """
        self.openapi_types = {
            'preferred_cdp_network_protocol': PreferredCdpNetworkProtocol
        }

        self.attribute_map = {
            'preferred_cdp_network_protocol': 'preferredCdpNetworkProtocol'
        }

        self._preferred_cdp_network_protocol = preferred_cdp_network_protocol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreferredCdpNetworkProtocolObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PreferredCdpNetworkProtocolObject of this PreferredCdpNetworkProtocolObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def preferred_cdp_network_protocol(self):
        """Gets the preferred_cdp_network_protocol of this PreferredCdpNetworkProtocolObject.


        :return: The preferred_cdp_network_protocol of this PreferredCdpNetworkProtocolObject.
        :rtype: PreferredCdpNetworkProtocol
        """
        return self._preferred_cdp_network_protocol

    @preferred_cdp_network_protocol.setter
    def preferred_cdp_network_protocol(self, preferred_cdp_network_protocol):
        """Sets the preferred_cdp_network_protocol of this PreferredCdpNetworkProtocolObject.


        :param preferred_cdp_network_protocol: The preferred_cdp_network_protocol of this PreferredCdpNetworkProtocolObject.
        :type preferred_cdp_network_protocol: PreferredCdpNetworkProtocol
        """
        if preferred_cdp_network_protocol is None:
            raise ValueError("Invalid value for `preferred_cdp_network_protocol`, must not be `None`")

        self._preferred_cdp_network_protocol = preferred_cdp_network_protocol
