# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.oracle_aco_parameter_detail import OracleAcoParameterDetail
from openapi_server.models.oracle_aco_value_error_detail import OracleAcoValueErrorDetail
from openapi_server import util


class OracleRecoveryApiValidationErrors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aco_map: List[OracleAcoParameterDetail]=None, aco_parameter_errors: List[str]=None, aco_value_validation_errors: List[OracleAcoValueErrorDetail]=None, other_errors: List[str]=None, post_script_error: str=None, pre_script_error: str=None):
        """OracleRecoveryApiValidationErrors - a model defined in OpenAPI

        :param aco_map: The aco_map of this OracleRecoveryApiValidationErrors.
        :param aco_parameter_errors: The aco_parameter_errors of this OracleRecoveryApiValidationErrors.
        :param aco_value_validation_errors: The aco_value_validation_errors of this OracleRecoveryApiValidationErrors.
        :param other_errors: The other_errors of this OracleRecoveryApiValidationErrors.
        :param post_script_error: The post_script_error of this OracleRecoveryApiValidationErrors.
        :param pre_script_error: The pre_script_error of this OracleRecoveryApiValidationErrors.
        """
        self.openapi_types = {
            'aco_map': List[OracleAcoParameterDetail],
            'aco_parameter_errors': List[str],
            'aco_value_validation_errors': List[OracleAcoValueErrorDetail],
            'other_errors': List[str],
            'post_script_error': str,
            'pre_script_error': str
        }

        self.attribute_map = {
            'aco_map': 'acoMap',
            'aco_parameter_errors': 'acoParameterErrors',
            'aco_value_validation_errors': 'acoValueValidationErrors',
            'other_errors': 'otherErrors',
            'post_script_error': 'postScriptError',
            'pre_script_error': 'preScriptError'
        }

        self._aco_map = aco_map
        self._aco_parameter_errors = aco_parameter_errors
        self._aco_value_validation_errors = aco_value_validation_errors
        self._other_errors = other_errors
        self._post_script_error = post_script_error
        self._pre_script_error = pre_script_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OracleRecoveryApiValidationErrors':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OracleRecoveryApiValidationErrors of this OracleRecoveryApiValidationErrors.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aco_map(self):
        """Gets the aco_map of this OracleRecoveryApiValidationErrors.

        List of Advanced Cloning Options (ACO) parameter values that were parsed.

        :return: The aco_map of this OracleRecoveryApiValidationErrors.
        :rtype: List[OracleAcoParameterDetail]
        """
        return self._aco_map

    @aco_map.setter
    def aco_map(self, aco_map):
        """Sets the aco_map of this OracleRecoveryApiValidationErrors.

        List of Advanced Cloning Options (ACO) parameter values that were parsed.

        :param aco_map: The aco_map of this OracleRecoveryApiValidationErrors.
        :type aco_map: List[OracleAcoParameterDetail]
        """

        self._aco_map = aco_map

    @property
    def aco_parameter_errors(self):
        """Gets the aco_parameter_errors of this OracleRecoveryApiValidationErrors.

        Other generic errors with the Advanced Cloning Options (ACO) parameters.

        :return: The aco_parameter_errors of this OracleRecoveryApiValidationErrors.
        :rtype: List[str]
        """
        return self._aco_parameter_errors

    @aco_parameter_errors.setter
    def aco_parameter_errors(self, aco_parameter_errors):
        """Sets the aco_parameter_errors of this OracleRecoveryApiValidationErrors.

        Other generic errors with the Advanced Cloning Options (ACO) parameters.

        :param aco_parameter_errors: The aco_parameter_errors of this OracleRecoveryApiValidationErrors.
        :type aco_parameter_errors: List[str]
        """

        self._aco_parameter_errors = aco_parameter_errors

    @property
    def aco_value_validation_errors(self):
        """Gets the aco_value_validation_errors of this OracleRecoveryApiValidationErrors.

        List of Advanced Cloning Options (ACO) errors pertaining to the specified values.

        :return: The aco_value_validation_errors of this OracleRecoveryApiValidationErrors.
        :rtype: List[OracleAcoValueErrorDetail]
        """
        return self._aco_value_validation_errors

    @aco_value_validation_errors.setter
    def aco_value_validation_errors(self, aco_value_validation_errors):
        """Sets the aco_value_validation_errors of this OracleRecoveryApiValidationErrors.

        List of Advanced Cloning Options (ACO) errors pertaining to the specified values.

        :param aco_value_validation_errors: The aco_value_validation_errors of this OracleRecoveryApiValidationErrors.
        :type aco_value_validation_errors: List[OracleAcoValueErrorDetail]
        """

        self._aco_value_validation_errors = aco_value_validation_errors

    @property
    def other_errors(self):
        """Gets the other_errors of this OracleRecoveryApiValidationErrors.

        Other generic validation error messages in the API.

        :return: The other_errors of this OracleRecoveryApiValidationErrors.
        :rtype: List[str]
        """
        return self._other_errors

    @other_errors.setter
    def other_errors(self, other_errors):
        """Sets the other_errors of this OracleRecoveryApiValidationErrors.

        Other generic validation error messages in the API.

        :param other_errors: The other_errors of this OracleRecoveryApiValidationErrors.
        :type other_errors: List[str]
        """

        self._other_errors = other_errors

    @property
    def post_script_error(self):
        """Gets the post_script_error of this OracleRecoveryApiValidationErrors.

        Error message when post-script path is invalid.

        :return: The post_script_error of this OracleRecoveryApiValidationErrors.
        :rtype: str
        """
        return self._post_script_error

    @post_script_error.setter
    def post_script_error(self, post_script_error):
        """Sets the post_script_error of this OracleRecoveryApiValidationErrors.

        Error message when post-script path is invalid.

        :param post_script_error: The post_script_error of this OracleRecoveryApiValidationErrors.
        :type post_script_error: str
        """

        self._post_script_error = post_script_error

    @property
    def pre_script_error(self):
        """Gets the pre_script_error of this OracleRecoveryApiValidationErrors.

        Error message when pre-script path is invalid.

        :return: The pre_script_error of this OracleRecoveryApiValidationErrors.
        :rtype: str
        """
        return self._pre_script_error

    @pre_script_error.setter
    def pre_script_error(self, pre_script_error):
        """Sets the pre_script_error of this OracleRecoveryApiValidationErrors.

        Error message when pre-script path is invalid.

        :param pre_script_error: The pre_script_error of this OracleRecoveryApiValidationErrors.
        :type pre_script_error: str
        """

        self._pre_script_error = pre_script_error
