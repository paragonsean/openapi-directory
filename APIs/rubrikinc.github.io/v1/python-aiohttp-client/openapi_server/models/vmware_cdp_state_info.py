# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cdp_local_status import CdpLocalStatus
from openapi_server.models.cdp_replication_status import CdpReplicationStatus
from openapi_server import util


class VmwareCdpStateInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_percentage: float=None, local_status: CdpLocalStatus=None, replication_status: CdpReplicationStatus=None, vm_id: str=None):
        """VmwareCdpStateInfo - a model defined in OpenAPI

        :param health_percentage: The health_percentage of this VmwareCdpStateInfo.
        :param local_status: The local_status of this VmwareCdpStateInfo.
        :param replication_status: The replication_status of this VmwareCdpStateInfo.
        :param vm_id: The vm_id of this VmwareCdpStateInfo.
        """
        self.openapi_types = {
            'health_percentage': float,
            'local_status': CdpLocalStatus,
            'replication_status': CdpReplicationStatus,
            'vm_id': str
        }

        self.attribute_map = {
            'health_percentage': 'healthPercentage',
            'local_status': 'localStatus',
            'replication_status': 'replicationStatus',
            'vm_id': 'vmId'
        }

        self._health_percentage = health_percentage
        self._local_status = local_status
        self._replication_status = replication_status
        self._vm_id = vm_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareCdpStateInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareCdpStateInfo of this VmwareCdpStateInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_percentage(self):
        """Gets the health_percentage of this VmwareCdpStateInfo.

        The percentage of healthy time over all CDP-enabled time over the last 24 hours. Range from 0.0 to 100.0 .

        :return: The health_percentage of this VmwareCdpStateInfo.
        :rtype: float
        """
        return self._health_percentage

    @health_percentage.setter
    def health_percentage(self, health_percentage):
        """Sets the health_percentage of this VmwareCdpStateInfo.

        The percentage of healthy time over all CDP-enabled time over the last 24 hours. Range from 0.0 to 100.0 .

        :param health_percentage: The health_percentage of this VmwareCdpStateInfo.
        :type health_percentage: float
        """

        self._health_percentage = health_percentage

    @property
    def local_status(self):
        """Gets the local_status of this VmwareCdpStateInfo.


        :return: The local_status of this VmwareCdpStateInfo.
        :rtype: CdpLocalStatus
        """
        return self._local_status

    @local_status.setter
    def local_status(self, local_status):
        """Sets the local_status of this VmwareCdpStateInfo.


        :param local_status: The local_status of this VmwareCdpStateInfo.
        :type local_status: CdpLocalStatus
        """

        self._local_status = local_status

    @property
    def replication_status(self):
        """Gets the replication_status of this VmwareCdpStateInfo.


        :return: The replication_status of this VmwareCdpStateInfo.
        :rtype: CdpReplicationStatus
        """
        return self._replication_status

    @replication_status.setter
    def replication_status(self, replication_status):
        """Sets the replication_status of this VmwareCdpStateInfo.


        :param replication_status: The replication_status of this VmwareCdpStateInfo.
        :type replication_status: CdpReplicationStatus
        """

        self._replication_status = replication_status

    @property
    def vm_id(self):
        """Gets the vm_id of this VmwareCdpStateInfo.

        The ID of the virtual machine for which the cluster is retrieving CDP state information.

        :return: The vm_id of this VmwareCdpStateInfo.
        :rtype: str
        """
        return self._vm_id

    @vm_id.setter
    def vm_id(self, vm_id):
        """Sets the vm_id of this VmwareCdpStateInfo.

        The ID of the virtual machine for which the cluster is retrieving CDP state information.

        :param vm_id: The vm_id of this VmwareCdpStateInfo.
        :type vm_id: str
        """
        if vm_id is None:
            raise ValueError("Invalid value for `vm_id`, must not be `None`")

        self._vm_id = vm_id
