# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configured_sla_type import ConfiguredSlaType
from openapi_server.models.failover_cluster_app_connection_status import FailoverClusterAppConnectionStatus
from openapi_server.models.failover_cluster_app_source import FailoverClusterAppSource
from openapi_server.models.failover_cluster_os_type import FailoverClusterOsType
from openapi_server.models.failover_cluster_type import FailoverClusterType
from openapi_server.models.fileset_detail import FilesetDetail
from openapi_server.models.sla_assignment import SlaAssignment
from openapi_server import util


class FailoverClusterAppDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configured_sla_domain_id: str=None, configured_sla_domain_name: str=None, configured_sla_domain_type: ConfiguredSlaType=None, id: str=None, is_configured_sla_domain_retention_locked: bool=None, name: str=None, primary_cluster_id: str=None, sla_last_update_time: datetime=None, effective_sla_domain_id: str=None, effective_sla_domain_name: str=None, effective_sla_domain_polaris_managed_id: str=None, effective_sla_source_object_id: str=None, effective_sla_source_object_name: str=None, is_effective_sla_domain_retention_locked: bool=None, failover_cluster_app_source: FailoverClusterAppSource=None, failover_cluster_id: str=None, failover_cluster_type: FailoverClusterType=None, connection_status: FailoverClusterAppConnectionStatus=None, failover_cluster_name: str=None, operating_system_type: FailoverClusterOsType=None, sla_assignment: SlaAssignment=None, filesets: List[FilesetDetail]=None):
        """FailoverClusterAppDetail - a model defined in OpenAPI

        :param configured_sla_domain_id: The configured_sla_domain_id of this FailoverClusterAppDetail.
        :param configured_sla_domain_name: The configured_sla_domain_name of this FailoverClusterAppDetail.
        :param configured_sla_domain_type: The configured_sla_domain_type of this FailoverClusterAppDetail.
        :param id: The id of this FailoverClusterAppDetail.
        :param is_configured_sla_domain_retention_locked: The is_configured_sla_domain_retention_locked of this FailoverClusterAppDetail.
        :param name: The name of this FailoverClusterAppDetail.
        :param primary_cluster_id: The primary_cluster_id of this FailoverClusterAppDetail.
        :param sla_last_update_time: The sla_last_update_time of this FailoverClusterAppDetail.
        :param effective_sla_domain_id: The effective_sla_domain_id of this FailoverClusterAppDetail.
        :param effective_sla_domain_name: The effective_sla_domain_name of this FailoverClusterAppDetail.
        :param effective_sla_domain_polaris_managed_id: The effective_sla_domain_polaris_managed_id of this FailoverClusterAppDetail.
        :param effective_sla_source_object_id: The effective_sla_source_object_id of this FailoverClusterAppDetail.
        :param effective_sla_source_object_name: The effective_sla_source_object_name of this FailoverClusterAppDetail.
        :param is_effective_sla_domain_retention_locked: The is_effective_sla_domain_retention_locked of this FailoverClusterAppDetail.
        :param failover_cluster_app_source: The failover_cluster_app_source of this FailoverClusterAppDetail.
        :param failover_cluster_id: The failover_cluster_id of this FailoverClusterAppDetail.
        :param failover_cluster_type: The failover_cluster_type of this FailoverClusterAppDetail.
        :param connection_status: The connection_status of this FailoverClusterAppDetail.
        :param failover_cluster_name: The failover_cluster_name of this FailoverClusterAppDetail.
        :param operating_system_type: The operating_system_type of this FailoverClusterAppDetail.
        :param sla_assignment: The sla_assignment of this FailoverClusterAppDetail.
        :param filesets: The filesets of this FailoverClusterAppDetail.
        """
        self.openapi_types = {
            'configured_sla_domain_id': str,
            'configured_sla_domain_name': str,
            'configured_sla_domain_type': ConfiguredSlaType,
            'id': str,
            'is_configured_sla_domain_retention_locked': bool,
            'name': str,
            'primary_cluster_id': str,
            'sla_last_update_time': datetime,
            'effective_sla_domain_id': str,
            'effective_sla_domain_name': str,
            'effective_sla_domain_polaris_managed_id': str,
            'effective_sla_source_object_id': str,
            'effective_sla_source_object_name': str,
            'is_effective_sla_domain_retention_locked': bool,
            'failover_cluster_app_source': FailoverClusterAppSource,
            'failover_cluster_id': str,
            'failover_cluster_type': FailoverClusterType,
            'connection_status': FailoverClusterAppConnectionStatus,
            'failover_cluster_name': str,
            'operating_system_type': FailoverClusterOsType,
            'sla_assignment': SlaAssignment,
            'filesets': List[FilesetDetail]
        }

        self.attribute_map = {
            'configured_sla_domain_id': 'configuredSlaDomainId',
            'configured_sla_domain_name': 'configuredSlaDomainName',
            'configured_sla_domain_type': 'configuredSlaDomainType',
            'id': 'id',
            'is_configured_sla_domain_retention_locked': 'isConfiguredSlaDomainRetentionLocked',
            'name': 'name',
            'primary_cluster_id': 'primaryClusterId',
            'sla_last_update_time': 'slaLastUpdateTime',
            'effective_sla_domain_id': 'effectiveSlaDomainId',
            'effective_sla_domain_name': 'effectiveSlaDomainName',
            'effective_sla_domain_polaris_managed_id': 'effectiveSlaDomainPolarisManagedId',
            'effective_sla_source_object_id': 'effectiveSlaSourceObjectId',
            'effective_sla_source_object_name': 'effectiveSlaSourceObjectName',
            'is_effective_sla_domain_retention_locked': 'isEffectiveSlaDomainRetentionLocked',
            'failover_cluster_app_source': 'failoverClusterAppSource',
            'failover_cluster_id': 'failoverClusterId',
            'failover_cluster_type': 'failoverClusterType',
            'connection_status': 'connectionStatus',
            'failover_cluster_name': 'failoverClusterName',
            'operating_system_type': 'operatingSystemType',
            'sla_assignment': 'slaAssignment',
            'filesets': 'filesets'
        }

        self._configured_sla_domain_id = configured_sla_domain_id
        self._configured_sla_domain_name = configured_sla_domain_name
        self._configured_sla_domain_type = configured_sla_domain_type
        self._id = id
        self._is_configured_sla_domain_retention_locked = is_configured_sla_domain_retention_locked
        self._name = name
        self._primary_cluster_id = primary_cluster_id
        self._sla_last_update_time = sla_last_update_time
        self._effective_sla_domain_id = effective_sla_domain_id
        self._effective_sla_domain_name = effective_sla_domain_name
        self._effective_sla_domain_polaris_managed_id = effective_sla_domain_polaris_managed_id
        self._effective_sla_source_object_id = effective_sla_source_object_id
        self._effective_sla_source_object_name = effective_sla_source_object_name
        self._is_effective_sla_domain_retention_locked = is_effective_sla_domain_retention_locked
        self._failover_cluster_app_source = failover_cluster_app_source
        self._failover_cluster_id = failover_cluster_id
        self._failover_cluster_type = failover_cluster_type
        self._connection_status = connection_status
        self._failover_cluster_name = failover_cluster_name
        self._operating_system_type = operating_system_type
        self._sla_assignment = sla_assignment
        self._filesets = filesets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverClusterAppDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverClusterAppDetail of this FailoverClusterAppDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configured_sla_domain_id(self):
        """Gets the configured_sla_domain_id of this FailoverClusterAppDetail.

        ID of the SLA Domain that is assigned to the specified failover cluster app. Existing snapshots of the object will be retained with the configuration of specified SLA Domain.

        :return: The configured_sla_domain_id of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._configured_sla_domain_id

    @configured_sla_domain_id.setter
    def configured_sla_domain_id(self, configured_sla_domain_id):
        """Sets the configured_sla_domain_id of this FailoverClusterAppDetail.

        ID of the SLA Domain that is assigned to the specified failover cluster app. Existing snapshots of the object will be retained with the configuration of specified SLA Domain.

        :param configured_sla_domain_id: The configured_sla_domain_id of this FailoverClusterAppDetail.
        :type configured_sla_domain_id: str
        """
        if configured_sla_domain_id is None:
            raise ValueError("Invalid value for `configured_sla_domain_id`, must not be `None`")

        self._configured_sla_domain_id = configured_sla_domain_id

    @property
    def configured_sla_domain_name(self):
        """Gets the configured_sla_domain_name of this FailoverClusterAppDetail.

        The name of the SLA Domain configured directly on the Rubrik object.

        :return: The configured_sla_domain_name of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._configured_sla_domain_name

    @configured_sla_domain_name.setter
    def configured_sla_domain_name(self, configured_sla_domain_name):
        """Sets the configured_sla_domain_name of this FailoverClusterAppDetail.

        The name of the SLA Domain configured directly on the Rubrik object.

        :param configured_sla_domain_name: The configured_sla_domain_name of this FailoverClusterAppDetail.
        :type configured_sla_domain_name: str
        """
        if configured_sla_domain_name is None:
            raise ValueError("Invalid value for `configured_sla_domain_name`, must not be `None`")

        self._configured_sla_domain_name = configured_sla_domain_name

    @property
    def configured_sla_domain_type(self):
        """Gets the configured_sla_domain_type of this FailoverClusterAppDetail.


        :return: The configured_sla_domain_type of this FailoverClusterAppDetail.
        :rtype: ConfiguredSlaType
        """
        return self._configured_sla_domain_type

    @configured_sla_domain_type.setter
    def configured_sla_domain_type(self, configured_sla_domain_type):
        """Sets the configured_sla_domain_type of this FailoverClusterAppDetail.


        :param configured_sla_domain_type: The configured_sla_domain_type of this FailoverClusterAppDetail.
        :type configured_sla_domain_type: ConfiguredSlaType
        """

        self._configured_sla_domain_type = configured_sla_domain_type

    @property
    def id(self):
        """Gets the id of this FailoverClusterAppDetail.

        ID assigned to the failover cluster app.

        :return: The id of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FailoverClusterAppDetail.

        ID assigned to the failover cluster app.

        :param id: The id of this FailoverClusterAppDetail.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def is_configured_sla_domain_retention_locked(self):
        """Gets the is_configured_sla_domain_retention_locked of this FailoverClusterAppDetail.

        Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.

        :return: The is_configured_sla_domain_retention_locked of this FailoverClusterAppDetail.
        :rtype: bool
        """
        return self._is_configured_sla_domain_retention_locked

    @is_configured_sla_domain_retention_locked.setter
    def is_configured_sla_domain_retention_locked(self, is_configured_sla_domain_retention_locked):
        """Sets the is_configured_sla_domain_retention_locked of this FailoverClusterAppDetail.

        Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.

        :param is_configured_sla_domain_retention_locked: The is_configured_sla_domain_retention_locked of this FailoverClusterAppDetail.
        :type is_configured_sla_domain_retention_locked: bool
        """

        self._is_configured_sla_domain_retention_locked = is_configured_sla_domain_retention_locked

    @property
    def name(self):
        """Gets the name of this FailoverClusterAppDetail.

        Name of the failover cluster app.

        :return: The name of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FailoverClusterAppDetail.

        Name of the failover cluster app.

        :param name: The name of this FailoverClusterAppDetail.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def primary_cluster_id(self):
        """Gets the primary_cluster_id of this FailoverClusterAppDetail.


        :return: The primary_cluster_id of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._primary_cluster_id

    @primary_cluster_id.setter
    def primary_cluster_id(self, primary_cluster_id):
        """Sets the primary_cluster_id of this FailoverClusterAppDetail.


        :param primary_cluster_id: The primary_cluster_id of this FailoverClusterAppDetail.
        :type primary_cluster_id: str
        """
        if primary_cluster_id is None:
            raise ValueError("Invalid value for `primary_cluster_id`, must not be `None`")

        self._primary_cluster_id = primary_cluster_id

    @property
    def sla_last_update_time(self):
        """Gets the sla_last_update_time of this FailoverClusterAppDetail.

        The UTC time when the SLA Domain was last updated.

        :return: The sla_last_update_time of this FailoverClusterAppDetail.
        :rtype: datetime
        """
        return self._sla_last_update_time

    @sla_last_update_time.setter
    def sla_last_update_time(self, sla_last_update_time):
        """Sets the sla_last_update_time of this FailoverClusterAppDetail.

        The UTC time when the SLA Domain was last updated.

        :param sla_last_update_time: The sla_last_update_time of this FailoverClusterAppDetail.
        :type sla_last_update_time: datetime
        """

        self._sla_last_update_time = sla_last_update_time

    @property
    def effective_sla_domain_id(self):
        """Gets the effective_sla_domain_id of this FailoverClusterAppDetail.

        The ID of the SLA Domain that controls the protection of the Rubrik object.

        :return: The effective_sla_domain_id of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._effective_sla_domain_id

    @effective_sla_domain_id.setter
    def effective_sla_domain_id(self, effective_sla_domain_id):
        """Sets the effective_sla_domain_id of this FailoverClusterAppDetail.

        The ID of the SLA Domain that controls the protection of the Rubrik object.

        :param effective_sla_domain_id: The effective_sla_domain_id of this FailoverClusterAppDetail.
        :type effective_sla_domain_id: str
        """
        if effective_sla_domain_id is None:
            raise ValueError("Invalid value for `effective_sla_domain_id`, must not be `None`")

        self._effective_sla_domain_id = effective_sla_domain_id

    @property
    def effective_sla_domain_name(self):
        """Gets the effective_sla_domain_name of this FailoverClusterAppDetail.

        The name of the SLA Domain that controls the protection of the Rubrik object.

        :return: The effective_sla_domain_name of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._effective_sla_domain_name

    @effective_sla_domain_name.setter
    def effective_sla_domain_name(self, effective_sla_domain_name):
        """Sets the effective_sla_domain_name of this FailoverClusterAppDetail.

        The name of the SLA Domain that controls the protection of the Rubrik object.

        :param effective_sla_domain_name: The effective_sla_domain_name of this FailoverClusterAppDetail.
        :type effective_sla_domain_name: str
        """
        if effective_sla_domain_name is None:
            raise ValueError("Invalid value for `effective_sla_domain_name`, must not be `None`")

        self._effective_sla_domain_name = effective_sla_domain_name

    @property
    def effective_sla_domain_polaris_managed_id(self):
        """Gets the effective_sla_domain_polaris_managed_id of this FailoverClusterAppDetail.

        Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.

        :return: The effective_sla_domain_polaris_managed_id of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._effective_sla_domain_polaris_managed_id

    @effective_sla_domain_polaris_managed_id.setter
    def effective_sla_domain_polaris_managed_id(self, effective_sla_domain_polaris_managed_id):
        """Sets the effective_sla_domain_polaris_managed_id of this FailoverClusterAppDetail.

        Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.

        :param effective_sla_domain_polaris_managed_id: The effective_sla_domain_polaris_managed_id of this FailoverClusterAppDetail.
        :type effective_sla_domain_polaris_managed_id: str
        """

        self._effective_sla_domain_polaris_managed_id = effective_sla_domain_polaris_managed_id

    @property
    def effective_sla_source_object_id(self):
        """Gets the effective_sla_source_object_id of this FailoverClusterAppDetail.

        The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.

        :return: The effective_sla_source_object_id of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._effective_sla_source_object_id

    @effective_sla_source_object_id.setter
    def effective_sla_source_object_id(self, effective_sla_source_object_id):
        """Sets the effective_sla_source_object_id of this FailoverClusterAppDetail.

        The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.

        :param effective_sla_source_object_id: The effective_sla_source_object_id of this FailoverClusterAppDetail.
        :type effective_sla_source_object_id: str
        """

        self._effective_sla_source_object_id = effective_sla_source_object_id

    @property
    def effective_sla_source_object_name(self):
        """Gets the effective_sla_source_object_name of this FailoverClusterAppDetail.

        The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.

        :return: The effective_sla_source_object_name of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._effective_sla_source_object_name

    @effective_sla_source_object_name.setter
    def effective_sla_source_object_name(self, effective_sla_source_object_name):
        """Sets the effective_sla_source_object_name of this FailoverClusterAppDetail.

        The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.

        :param effective_sla_source_object_name: The effective_sla_source_object_name of this FailoverClusterAppDetail.
        :type effective_sla_source_object_name: str
        """

        self._effective_sla_source_object_name = effective_sla_source_object_name

    @property
    def is_effective_sla_domain_retention_locked(self):
        """Gets the is_effective_sla_domain_retention_locked of this FailoverClusterAppDetail.

        Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.

        :return: The is_effective_sla_domain_retention_locked of this FailoverClusterAppDetail.
        :rtype: bool
        """
        return self._is_effective_sla_domain_retention_locked

    @is_effective_sla_domain_retention_locked.setter
    def is_effective_sla_domain_retention_locked(self, is_effective_sla_domain_retention_locked):
        """Sets the is_effective_sla_domain_retention_locked of this FailoverClusterAppDetail.

        Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.

        :param is_effective_sla_domain_retention_locked: The is_effective_sla_domain_retention_locked of this FailoverClusterAppDetail.
        :type is_effective_sla_domain_retention_locked: bool
        """

        self._is_effective_sla_domain_retention_locked = is_effective_sla_domain_retention_locked

    @property
    def failover_cluster_app_source(self):
        """Gets the failover_cluster_app_source of this FailoverClusterAppDetail.


        :return: The failover_cluster_app_source of this FailoverClusterAppDetail.
        :rtype: FailoverClusterAppSource
        """
        return self._failover_cluster_app_source

    @failover_cluster_app_source.setter
    def failover_cluster_app_source(self, failover_cluster_app_source):
        """Sets the failover_cluster_app_source of this FailoverClusterAppDetail.


        :param failover_cluster_app_source: The failover_cluster_app_source of this FailoverClusterAppDetail.
        :type failover_cluster_app_source: FailoverClusterAppSource
        """
        if failover_cluster_app_source is None:
            raise ValueError("Invalid value for `failover_cluster_app_source`, must not be `None`")

        self._failover_cluster_app_source = failover_cluster_app_source

    @property
    def failover_cluster_id(self):
        """Gets the failover_cluster_id of this FailoverClusterAppDetail.

        Cluster ID of the failover cluster app.

        :return: The failover_cluster_id of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._failover_cluster_id

    @failover_cluster_id.setter
    def failover_cluster_id(self, failover_cluster_id):
        """Sets the failover_cluster_id of this FailoverClusterAppDetail.

        Cluster ID of the failover cluster app.

        :param failover_cluster_id: The failover_cluster_id of this FailoverClusterAppDetail.
        :type failover_cluster_id: str
        """
        if failover_cluster_id is None:
            raise ValueError("Invalid value for `failover_cluster_id`, must not be `None`")

        self._failover_cluster_id = failover_cluster_id

    @property
    def failover_cluster_type(self):
        """Gets the failover_cluster_type of this FailoverClusterAppDetail.


        :return: The failover_cluster_type of this FailoverClusterAppDetail.
        :rtype: FailoverClusterType
        """
        return self._failover_cluster_type

    @failover_cluster_type.setter
    def failover_cluster_type(self, failover_cluster_type):
        """Sets the failover_cluster_type of this FailoverClusterAppDetail.


        :param failover_cluster_type: The failover_cluster_type of this FailoverClusterAppDetail.
        :type failover_cluster_type: FailoverClusterType
        """
        if failover_cluster_type is None:
            raise ValueError("Invalid value for `failover_cluster_type`, must not be `None`")

        self._failover_cluster_type = failover_cluster_type

    @property
    def connection_status(self):
        """Gets the connection_status of this FailoverClusterAppDetail.


        :return: The connection_status of this FailoverClusterAppDetail.
        :rtype: FailoverClusterAppConnectionStatus
        """
        return self._connection_status

    @connection_status.setter
    def connection_status(self, connection_status):
        """Sets the connection_status of this FailoverClusterAppDetail.


        :param connection_status: The connection_status of this FailoverClusterAppDetail.
        :type connection_status: FailoverClusterAppConnectionStatus
        """
        if connection_status is None:
            raise ValueError("Invalid value for `connection_status`, must not be `None`")

        self._connection_status = connection_status

    @property
    def failover_cluster_name(self):
        """Gets the failover_cluster_name of this FailoverClusterAppDetail.

        The failover cluster name of the failover cluster app. The failover cluster is a group of hosts that provides high availability for running failover clustered applications.

        :return: The failover_cluster_name of this FailoverClusterAppDetail.
        :rtype: str
        """
        return self._failover_cluster_name

    @failover_cluster_name.setter
    def failover_cluster_name(self, failover_cluster_name):
        """Sets the failover_cluster_name of this FailoverClusterAppDetail.

        The failover cluster name of the failover cluster app. The failover cluster is a group of hosts that provides high availability for running failover clustered applications.

        :param failover_cluster_name: The failover_cluster_name of this FailoverClusterAppDetail.
        :type failover_cluster_name: str
        """
        if failover_cluster_name is None:
            raise ValueError("Invalid value for `failover_cluster_name`, must not be `None`")

        self._failover_cluster_name = failover_cluster_name

    @property
    def operating_system_type(self):
        """Gets the operating_system_type of this FailoverClusterAppDetail.


        :return: The operating_system_type of this FailoverClusterAppDetail.
        :rtype: FailoverClusterOsType
        """
        return self._operating_system_type

    @operating_system_type.setter
    def operating_system_type(self, operating_system_type):
        """Sets the operating_system_type of this FailoverClusterAppDetail.


        :param operating_system_type: The operating_system_type of this FailoverClusterAppDetail.
        :type operating_system_type: FailoverClusterOsType
        """

        self._operating_system_type = operating_system_type

    @property
    def sla_assignment(self):
        """Gets the sla_assignment of this FailoverClusterAppDetail.


        :return: The sla_assignment of this FailoverClusterAppDetail.
        :rtype: SlaAssignment
        """
        return self._sla_assignment

    @sla_assignment.setter
    def sla_assignment(self, sla_assignment):
        """Sets the sla_assignment of this FailoverClusterAppDetail.


        :param sla_assignment: The sla_assignment of this FailoverClusterAppDetail.
        :type sla_assignment: SlaAssignment
        """

        self._sla_assignment = sla_assignment

    @property
    def filesets(self):
        """Gets the filesets of this FailoverClusterAppDetail.

        Fileset detail for the failover cluster app object.

        :return: The filesets of this FailoverClusterAppDetail.
        :rtype: List[FilesetDetail]
        """
        return self._filesets

    @filesets.setter
    def filesets(self, filesets):
        """Sets the filesets of this FailoverClusterAppDetail.

        Fileset detail for the failover cluster app object.

        :param filesets: The filesets of this FailoverClusterAppDetail.
        :type filesets: List[FilesetDetail]
        """
        if filesets is None:
            raise ValueError("Invalid value for `filesets`, must not be `None`")

        self._filesets = filesets
