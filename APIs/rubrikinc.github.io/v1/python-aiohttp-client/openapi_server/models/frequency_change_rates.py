# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FrequencyChangeRates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, daily_change_rate_in_percent: float=None, monthly_change_rate_in_percent: float=None, quarterly_change_rate_in_percent: float=None, weekly_change_rate_in_percent: float=None, yearly_change_rate_in_percent: float=None):
        """FrequencyChangeRates - a model defined in OpenAPI

        :param daily_change_rate_in_percent: The daily_change_rate_in_percent of this FrequencyChangeRates.
        :param monthly_change_rate_in_percent: The monthly_change_rate_in_percent of this FrequencyChangeRates.
        :param quarterly_change_rate_in_percent: The quarterly_change_rate_in_percent of this FrequencyChangeRates.
        :param weekly_change_rate_in_percent: The weekly_change_rate_in_percent of this FrequencyChangeRates.
        :param yearly_change_rate_in_percent: The yearly_change_rate_in_percent of this FrequencyChangeRates.
        """
        self.openapi_types = {
            'daily_change_rate_in_percent': float,
            'monthly_change_rate_in_percent': float,
            'quarterly_change_rate_in_percent': float,
            'weekly_change_rate_in_percent': float,
            'yearly_change_rate_in_percent': float
        }

        self.attribute_map = {
            'daily_change_rate_in_percent': 'dailyChangeRateInPercent',
            'monthly_change_rate_in_percent': 'monthlyChangeRateInPercent',
            'quarterly_change_rate_in_percent': 'quarterlyChangeRateInPercent',
            'weekly_change_rate_in_percent': 'weeklyChangeRateInPercent',
            'yearly_change_rate_in_percent': 'yearlyChangeRateInPercent'
        }

        self._daily_change_rate_in_percent = daily_change_rate_in_percent
        self._monthly_change_rate_in_percent = monthly_change_rate_in_percent
        self._quarterly_change_rate_in_percent = quarterly_change_rate_in_percent
        self._weekly_change_rate_in_percent = weekly_change_rate_in_percent
        self._yearly_change_rate_in_percent = yearly_change_rate_in_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FrequencyChangeRates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FrequencyChangeRates of this FrequencyChangeRates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def daily_change_rate_in_percent(self):
        """Gets the daily_change_rate_in_percent of this FrequencyChangeRates.

        Daily change rate.

        :return: The daily_change_rate_in_percent of this FrequencyChangeRates.
        :rtype: float
        """
        return self._daily_change_rate_in_percent

    @daily_change_rate_in_percent.setter
    def daily_change_rate_in_percent(self, daily_change_rate_in_percent):
        """Sets the daily_change_rate_in_percent of this FrequencyChangeRates.

        Daily change rate.

        :param daily_change_rate_in_percent: The daily_change_rate_in_percent of this FrequencyChangeRates.
        :type daily_change_rate_in_percent: float
        """
        if daily_change_rate_in_percent is not None and daily_change_rate_in_percent < 0:
            raise ValueError("Invalid value for `daily_change_rate_in_percent`, must be a value greater than or equal to `0`")

        self._daily_change_rate_in_percent = daily_change_rate_in_percent

    @property
    def monthly_change_rate_in_percent(self):
        """Gets the monthly_change_rate_in_percent of this FrequencyChangeRates.

        Monthly change rate.

        :return: The monthly_change_rate_in_percent of this FrequencyChangeRates.
        :rtype: float
        """
        return self._monthly_change_rate_in_percent

    @monthly_change_rate_in_percent.setter
    def monthly_change_rate_in_percent(self, monthly_change_rate_in_percent):
        """Sets the monthly_change_rate_in_percent of this FrequencyChangeRates.

        Monthly change rate.

        :param monthly_change_rate_in_percent: The monthly_change_rate_in_percent of this FrequencyChangeRates.
        :type monthly_change_rate_in_percent: float
        """
        if monthly_change_rate_in_percent is not None and monthly_change_rate_in_percent < 0:
            raise ValueError("Invalid value for `monthly_change_rate_in_percent`, must be a value greater than or equal to `0`")

        self._monthly_change_rate_in_percent = monthly_change_rate_in_percent

    @property
    def quarterly_change_rate_in_percent(self):
        """Gets the quarterly_change_rate_in_percent of this FrequencyChangeRates.

        Quarterly change rate.

        :return: The quarterly_change_rate_in_percent of this FrequencyChangeRates.
        :rtype: float
        """
        return self._quarterly_change_rate_in_percent

    @quarterly_change_rate_in_percent.setter
    def quarterly_change_rate_in_percent(self, quarterly_change_rate_in_percent):
        """Sets the quarterly_change_rate_in_percent of this FrequencyChangeRates.

        Quarterly change rate.

        :param quarterly_change_rate_in_percent: The quarterly_change_rate_in_percent of this FrequencyChangeRates.
        :type quarterly_change_rate_in_percent: float
        """
        if quarterly_change_rate_in_percent is not None and quarterly_change_rate_in_percent < 0:
            raise ValueError("Invalid value for `quarterly_change_rate_in_percent`, must be a value greater than or equal to `0`")

        self._quarterly_change_rate_in_percent = quarterly_change_rate_in_percent

    @property
    def weekly_change_rate_in_percent(self):
        """Gets the weekly_change_rate_in_percent of this FrequencyChangeRates.

        Weekly change rate.

        :return: The weekly_change_rate_in_percent of this FrequencyChangeRates.
        :rtype: float
        """
        return self._weekly_change_rate_in_percent

    @weekly_change_rate_in_percent.setter
    def weekly_change_rate_in_percent(self, weekly_change_rate_in_percent):
        """Sets the weekly_change_rate_in_percent of this FrequencyChangeRates.

        Weekly change rate.

        :param weekly_change_rate_in_percent: The weekly_change_rate_in_percent of this FrequencyChangeRates.
        :type weekly_change_rate_in_percent: float
        """
        if weekly_change_rate_in_percent is not None and weekly_change_rate_in_percent < 0:
            raise ValueError("Invalid value for `weekly_change_rate_in_percent`, must be a value greater than or equal to `0`")

        self._weekly_change_rate_in_percent = weekly_change_rate_in_percent

    @property
    def yearly_change_rate_in_percent(self):
        """Gets the yearly_change_rate_in_percent of this FrequencyChangeRates.

        Yearly change rate.

        :return: The yearly_change_rate_in_percent of this FrequencyChangeRates.
        :rtype: float
        """
        return self._yearly_change_rate_in_percent

    @yearly_change_rate_in_percent.setter
    def yearly_change_rate_in_percent(self, yearly_change_rate_in_percent):
        """Sets the yearly_change_rate_in_percent of this FrequencyChangeRates.

        Yearly change rate.

        :param yearly_change_rate_in_percent: The yearly_change_rate_in_percent of this FrequencyChangeRates.
        :type yearly_change_rate_in_percent: float
        """
        if yearly_change_rate_in_percent is not None and yearly_change_rate_in_percent < 0:
            raise ValueError("Invalid value for `yearly_change_rate_in_percent`, must be a value greater than or equal to `0`")

        self._yearly_change_rate_in_percent = yearly_change_rate_in_percent
