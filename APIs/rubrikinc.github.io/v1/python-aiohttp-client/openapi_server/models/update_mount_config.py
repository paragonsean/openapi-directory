# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateMountConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, power_status: bool=None, should_force: bool=None):
        """UpdateMountConfig - a model defined in OpenAPI

        :param power_status: The power_status of this UpdateMountConfig.
        :param should_force: The should_force of this UpdateMountConfig.
        """
        self.openapi_types = {
            'power_status': bool,
            'should_force': bool
        }

        self.attribute_map = {
            'power_status': 'powerStatus',
            'should_force': 'shouldForce'
        }

        self._power_status = power_status
        self._should_force = should_force

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateMountConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateMountConfig of this UpdateMountConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def power_status(self):
        """Gets the power_status of this UpdateMountConfig.

        True to power on, false to power off.

        :return: The power_status of this UpdateMountConfig.
        :rtype: bool
        """
        return self._power_status

    @power_status.setter
    def power_status(self, power_status):
        """Sets the power_status of this UpdateMountConfig.

        True to power on, false to power off.

        :param power_status: The power_status of this UpdateMountConfig.
        :type power_status: bool
        """
        if power_status is None:
            raise ValueError("Invalid value for `power_status`, must not be `None`")

        self._power_status = power_status

    @property
    def should_force(self):
        """Gets the should_force of this UpdateMountConfig.

        A Boolean that specifies whether to forcibly power down a virtual machine that is already mounted with Storage vMotion. When this value is 'true', the virtual machine is forcibly powered down. The default value for this Boolean is 'false'.

        :return: The should_force of this UpdateMountConfig.
        :rtype: bool
        """
        return self._should_force

    @should_force.setter
    def should_force(self, should_force):
        """Sets the should_force of this UpdateMountConfig.

        A Boolean that specifies whether to forcibly power down a virtual machine that is already mounted with Storage vMotion. When this value is 'true', the virtual machine is forcibly powered down. The default value for this Boolean is 'false'.

        :param should_force: The should_force of this UpdateMountConfig.
        :type should_force: bool
        """

        self._should_force = should_force
