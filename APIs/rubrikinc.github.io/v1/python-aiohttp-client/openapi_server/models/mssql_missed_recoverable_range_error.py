# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MssqlMissedRecoverableRangeError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_message: str=None, event_series_id: str=None, time: datetime=None):
        """MssqlMissedRecoverableRangeError - a model defined in OpenAPI

        :param event_message: The event_message of this MssqlMissedRecoverableRangeError.
        :param event_series_id: The event_series_id of this MssqlMissedRecoverableRangeError.
        :param time: The time of this MssqlMissedRecoverableRangeError.
        """
        self.openapi_types = {
            'event_message': str,
            'event_series_id': str,
            'time': datetime
        }

        self.attribute_map = {
            'event_message': 'eventMessage',
            'event_series_id': 'eventSeriesId',
            'time': 'time'
        }

        self._event_message = event_message
        self._event_series_id = event_series_id
        self._time = time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MssqlMissedRecoverableRangeError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MssqlMissedRecoverableRangeError of this MssqlMissedRecoverableRangeError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_message(self):
        """Gets the event_message of this MssqlMissedRecoverableRangeError.


        :return: The event_message of this MssqlMissedRecoverableRangeError.
        :rtype: str
        """
        return self._event_message

    @event_message.setter
    def event_message(self, event_message):
        """Sets the event_message of this MssqlMissedRecoverableRangeError.


        :param event_message: The event_message of this MssqlMissedRecoverableRangeError.
        :type event_message: str
        """

        self._event_message = event_message

    @property
    def event_series_id(self):
        """Gets the event_series_id of this MssqlMissedRecoverableRangeError.


        :return: The event_series_id of this MssqlMissedRecoverableRangeError.
        :rtype: str
        """
        return self._event_series_id

    @event_series_id.setter
    def event_series_id(self, event_series_id):
        """Sets the event_series_id of this MssqlMissedRecoverableRangeError.


        :param event_series_id: The event_series_id of this MssqlMissedRecoverableRangeError.
        :type event_series_id: str
        """

        self._event_series_id = event_series_id

    @property
    def time(self):
        """Gets the time of this MssqlMissedRecoverableRangeError.


        :return: The time of this MssqlMissedRecoverableRangeError.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this MssqlMissedRecoverableRangeError.


        :param time: The time of this MssqlMissedRecoverableRangeError.
        :type time: datetime
        """
        if time is None:
            raise ValueError("Invalid value for `time`, must not be `None`")

        self._time = time
