# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GlobalBlackoutWindowStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_global_blackout_active: bool=None):
        """GlobalBlackoutWindowStatus - a model defined in OpenAPI

        :param is_global_blackout_active: The is_global_blackout_active of this GlobalBlackoutWindowStatus.
        """
        self.openapi_types = {
            'is_global_blackout_active': bool
        }

        self.attribute_map = {
            'is_global_blackout_active': 'isGlobalBlackoutActive'
        }

        self._is_global_blackout_active = is_global_blackout_active

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalBlackoutWindowStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalBlackoutWindowStatus of this GlobalBlackoutWindowStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_global_blackout_active(self):
        """Gets the is_global_blackout_active of this GlobalBlackoutWindowStatus.


        :return: The is_global_blackout_active of this GlobalBlackoutWindowStatus.
        :rtype: bool
        """
        return self._is_global_blackout_active

    @is_global_blackout_active.setter
    def is_global_blackout_active(self, is_global_blackout_active):
        """Sets the is_global_blackout_active of this GlobalBlackoutWindowStatus.


        :param is_global_blackout_active: The is_global_blackout_active of this GlobalBlackoutWindowStatus.
        :type is_global_blackout_active: bool
        """
        if is_global_blackout_active is None:
            raise ValueError("Invalid value for `is_global_blackout_active`, must not be `None`")

        self._is_global_blackout_active = is_global_blackout_active
