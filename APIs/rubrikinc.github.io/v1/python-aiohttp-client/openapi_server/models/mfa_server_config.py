# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MfaServerConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, timeout: int=120):
        """MfaServerConfig - a model defined in OpenAPI

        :param name: The name of this MfaServerConfig.
        :param timeout: The timeout of this MfaServerConfig.
        """
        self.openapi_types = {
            'name': str,
            'timeout': int
        }

        self.attribute_map = {
            'name': 'name',
            'timeout': 'timeout'
        }

        self._name = name
        self._timeout = timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MfaServerConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MfaServerConfig of this MfaServerConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this MfaServerConfig.

        Specifies the name to identify MFA server configuration. 

        :return: The name of this MfaServerConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MfaServerConfig.

        Specifies the name to identify MFA server configuration. 

        :param name: The name of this MfaServerConfig.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def timeout(self):
        """Gets the timeout of this MfaServerConfig.

        Specifies a number of seconds to wait for server response to a given authentication method. 

        :return: The timeout of this MfaServerConfig.
        :rtype: int
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this MfaServerConfig.

        Specifies a number of seconds to wait for server response to a given authentication method. 

        :param timeout: The timeout of this MfaServerConfig.
        :type timeout: int
        """

        self._timeout = timeout
