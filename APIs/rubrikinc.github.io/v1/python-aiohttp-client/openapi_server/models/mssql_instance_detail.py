# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mssql_root_properties import MssqlRootProperties
from openapi_server import util


class MssqlInstanceDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copy_only: bool=None, log_backup_frequency_in_seconds: int=None, log_retention_hours: int=None, cluster_instance_address: str=None, configured_sla_domain_id: str=None, configured_sla_domain_name: str=None, configured_sla_domain_type: str=None, id: str=None, internal_timestamp: int=None, is_retention_locked: bool=None, name: str=None, primary_cluster_id: str=None, protection_date: date=None, root_properties: MssqlRootProperties=None, unprotectable_reasons: List[str]=None, version: str=None):
        """MssqlInstanceDetail - a model defined in OpenAPI

        :param copy_only: The copy_only of this MssqlInstanceDetail.
        :param log_backup_frequency_in_seconds: The log_backup_frequency_in_seconds of this MssqlInstanceDetail.
        :param log_retention_hours: The log_retention_hours of this MssqlInstanceDetail.
        :param cluster_instance_address: The cluster_instance_address of this MssqlInstanceDetail.
        :param configured_sla_domain_id: The configured_sla_domain_id of this MssqlInstanceDetail.
        :param configured_sla_domain_name: The configured_sla_domain_name of this MssqlInstanceDetail.
        :param configured_sla_domain_type: The configured_sla_domain_type of this MssqlInstanceDetail.
        :param id: The id of this MssqlInstanceDetail.
        :param internal_timestamp: The internal_timestamp of this MssqlInstanceDetail.
        :param is_retention_locked: The is_retention_locked of this MssqlInstanceDetail.
        :param name: The name of this MssqlInstanceDetail.
        :param primary_cluster_id: The primary_cluster_id of this MssqlInstanceDetail.
        :param protection_date: The protection_date of this MssqlInstanceDetail.
        :param root_properties: The root_properties of this MssqlInstanceDetail.
        :param unprotectable_reasons: The unprotectable_reasons of this MssqlInstanceDetail.
        :param version: The version of this MssqlInstanceDetail.
        """
        self.openapi_types = {
            'copy_only': bool,
            'log_backup_frequency_in_seconds': int,
            'log_retention_hours': int,
            'cluster_instance_address': str,
            'configured_sla_domain_id': str,
            'configured_sla_domain_name': str,
            'configured_sla_domain_type': str,
            'id': str,
            'internal_timestamp': int,
            'is_retention_locked': bool,
            'name': str,
            'primary_cluster_id': str,
            'protection_date': date,
            'root_properties': MssqlRootProperties,
            'unprotectable_reasons': List[str],
            'version': str
        }

        self.attribute_map = {
            'copy_only': 'copyOnly',
            'log_backup_frequency_in_seconds': 'logBackupFrequencyInSeconds',
            'log_retention_hours': 'logRetentionHours',
            'cluster_instance_address': 'clusterInstanceAddress',
            'configured_sla_domain_id': 'configuredSlaDomainId',
            'configured_sla_domain_name': 'configuredSlaDomainName',
            'configured_sla_domain_type': 'configuredSlaDomainType',
            'id': 'id',
            'internal_timestamp': 'internalTimestamp',
            'is_retention_locked': 'isRetentionLocked',
            'name': 'name',
            'primary_cluster_id': 'primaryClusterId',
            'protection_date': 'protectionDate',
            'root_properties': 'rootProperties',
            'unprotectable_reasons': 'unprotectableReasons',
            'version': 'version'
        }

        self._copy_only = copy_only
        self._log_backup_frequency_in_seconds = log_backup_frequency_in_seconds
        self._log_retention_hours = log_retention_hours
        self._cluster_instance_address = cluster_instance_address
        self._configured_sla_domain_id = configured_sla_domain_id
        self._configured_sla_domain_name = configured_sla_domain_name
        self._configured_sla_domain_type = configured_sla_domain_type
        self._id = id
        self._internal_timestamp = internal_timestamp
        self._is_retention_locked = is_retention_locked
        self._name = name
        self._primary_cluster_id = primary_cluster_id
        self._protection_date = protection_date
        self._root_properties = root_properties
        self._unprotectable_reasons = unprotectable_reasons
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MssqlInstanceDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MssqlInstanceDetail of this MssqlInstanceDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copy_only(self):
        """Gets the copy_only of this MssqlInstanceDetail.

        Boolean value that specifies whether or not to perform copy-only backups of the database. When true, database backups are copy-only backups. When false, database backups are full backups.

        :return: The copy_only of this MssqlInstanceDetail.
        :rtype: bool
        """
        return self._copy_only

    @copy_only.setter
    def copy_only(self, copy_only):
        """Sets the copy_only of this MssqlInstanceDetail.

        Boolean value that specifies whether or not to perform copy-only backups of the database. When true, database backups are copy-only backups. When false, database backups are full backups.

        :param copy_only: The copy_only of this MssqlInstanceDetail.
        :type copy_only: bool
        """

        self._copy_only = copy_only

    @property
    def log_backup_frequency_in_seconds(self):
        """Gets the log_backup_frequency_in_seconds of this MssqlInstanceDetail.

        Seconds between two log backups. A value of 0 disables log backup.

        :return: The log_backup_frequency_in_seconds of this MssqlInstanceDetail.
        :rtype: int
        """
        return self._log_backup_frequency_in_seconds

    @log_backup_frequency_in_seconds.setter
    def log_backup_frequency_in_seconds(self, log_backup_frequency_in_seconds):
        """Sets the log_backup_frequency_in_seconds of this MssqlInstanceDetail.

        Seconds between two log backups. A value of 0 disables log backup.

        :param log_backup_frequency_in_seconds: The log_backup_frequency_in_seconds of this MssqlInstanceDetail.
        :type log_backup_frequency_in_seconds: int
        """

        self._log_backup_frequency_in_seconds = log_backup_frequency_in_seconds

    @property
    def log_retention_hours(self):
        """Gets the log_retention_hours of this MssqlInstanceDetail.

        Number of hours to retain a log backup. When the value is set to -1 the Rubrik cluster retains the log backup until the database snapshots that precede the log backup have expired.

        :return: The log_retention_hours of this MssqlInstanceDetail.
        :rtype: int
        """
        return self._log_retention_hours

    @log_retention_hours.setter
    def log_retention_hours(self, log_retention_hours):
        """Sets the log_retention_hours of this MssqlInstanceDetail.

        Number of hours to retain a log backup. When the value is set to -1 the Rubrik cluster retains the log backup until the database snapshots that precede the log backup have expired.

        :param log_retention_hours: The log_retention_hours of this MssqlInstanceDetail.
        :type log_retention_hours: int
        """

        self._log_retention_hours = log_retention_hours

    @property
    def cluster_instance_address(self):
        """Gets the cluster_instance_address of this MssqlInstanceDetail.

        The address of the instance in a Windows server failover cluster, populated only if it belongs to one.

        :return: The cluster_instance_address of this MssqlInstanceDetail.
        :rtype: str
        """
        return self._cluster_instance_address

    @cluster_instance_address.setter
    def cluster_instance_address(self, cluster_instance_address):
        """Sets the cluster_instance_address of this MssqlInstanceDetail.

        The address of the instance in a Windows server failover cluster, populated only if it belongs to one.

        :param cluster_instance_address: The cluster_instance_address of this MssqlInstanceDetail.
        :type cluster_instance_address: str
        """

        self._cluster_instance_address = cluster_instance_address

    @property
    def configured_sla_domain_id(self):
        """Gets the configured_sla_domain_id of this MssqlInstanceDetail.

        SLA Domain ID assigned to instance.

        :return: The configured_sla_domain_id of this MssqlInstanceDetail.
        :rtype: str
        """
        return self._configured_sla_domain_id

    @configured_sla_domain_id.setter
    def configured_sla_domain_id(self, configured_sla_domain_id):
        """Sets the configured_sla_domain_id of this MssqlInstanceDetail.

        SLA Domain ID assigned to instance.

        :param configured_sla_domain_id: The configured_sla_domain_id of this MssqlInstanceDetail.
        :type configured_sla_domain_id: str
        """

        self._configured_sla_domain_id = configured_sla_domain_id

    @property
    def configured_sla_domain_name(self):
        """Gets the configured_sla_domain_name of this MssqlInstanceDetail.

        SLA Domain name assigned to instance.

        :return: The configured_sla_domain_name of this MssqlInstanceDetail.
        :rtype: str
        """
        return self._configured_sla_domain_name

    @configured_sla_domain_name.setter
    def configured_sla_domain_name(self, configured_sla_domain_name):
        """Sets the configured_sla_domain_name of this MssqlInstanceDetail.

        SLA Domain name assigned to instance.

        :param configured_sla_domain_name: The configured_sla_domain_name of this MssqlInstanceDetail.
        :type configured_sla_domain_name: str
        """

        self._configured_sla_domain_name = configured_sla_domain_name

    @property
    def configured_sla_domain_type(self):
        """Gets the configured_sla_domain_type of this MssqlInstanceDetail.

        Specifies whether the SLA Domain is used for protection or retention.

        :return: The configured_sla_domain_type of this MssqlInstanceDetail.
        :rtype: str
        """
        return self._configured_sla_domain_type

    @configured_sla_domain_type.setter
    def configured_sla_domain_type(self, configured_sla_domain_type):
        """Sets the configured_sla_domain_type of this MssqlInstanceDetail.

        Specifies whether the SLA Domain is used for protection or retention.

        :param configured_sla_domain_type: The configured_sla_domain_type of this MssqlInstanceDetail.
        :type configured_sla_domain_type: str
        """

        self._configured_sla_domain_type = configured_sla_domain_type

    @property
    def id(self):
        """Gets the id of this MssqlInstanceDetail.


        :return: The id of this MssqlInstanceDetail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MssqlInstanceDetail.


        :param id: The id of this MssqlInstanceDetail.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def internal_timestamp(self):
        """Gets the internal_timestamp of this MssqlInstanceDetail.


        :return: The internal_timestamp of this MssqlInstanceDetail.
        :rtype: int
        """
        return self._internal_timestamp

    @internal_timestamp.setter
    def internal_timestamp(self, internal_timestamp):
        """Sets the internal_timestamp of this MssqlInstanceDetail.


        :param internal_timestamp: The internal_timestamp of this MssqlInstanceDetail.
        :type internal_timestamp: int
        """

        self._internal_timestamp = internal_timestamp

    @property
    def is_retention_locked(self):
        """Gets the is_retention_locked of this MssqlInstanceDetail.

        Boolean value that identifies a Retention Lock SLA Domain. Value is true when the SLA Domain assigned to the instance is Retention Locked and false when it is not.

        :return: The is_retention_locked of this MssqlInstanceDetail.
        :rtype: bool
        """
        return self._is_retention_locked

    @is_retention_locked.setter
    def is_retention_locked(self, is_retention_locked):
        """Sets the is_retention_locked of this MssqlInstanceDetail.

        Boolean value that identifies a Retention Lock SLA Domain. Value is true when the SLA Domain assigned to the instance is Retention Locked and false when it is not.

        :param is_retention_locked: The is_retention_locked of this MssqlInstanceDetail.
        :type is_retention_locked: bool
        """

        self._is_retention_locked = is_retention_locked

    @property
    def name(self):
        """Gets the name of this MssqlInstanceDetail.


        :return: The name of this MssqlInstanceDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MssqlInstanceDetail.


        :param name: The name of this MssqlInstanceDetail.
        :type name: str
        """

        self._name = name

    @property
    def primary_cluster_id(self):
        """Gets the primary_cluster_id of this MssqlInstanceDetail.


        :return: The primary_cluster_id of this MssqlInstanceDetail.
        :rtype: str
        """
        return self._primary_cluster_id

    @primary_cluster_id.setter
    def primary_cluster_id(self, primary_cluster_id):
        """Sets the primary_cluster_id of this MssqlInstanceDetail.


        :param primary_cluster_id: The primary_cluster_id of this MssqlInstanceDetail.
        :type primary_cluster_id: str
        """
        if primary_cluster_id is None:
            raise ValueError("Invalid value for `primary_cluster_id`, must not be `None`")

        self._primary_cluster_id = primary_cluster_id

    @property
    def protection_date(self):
        """Gets the protection_date of this MssqlInstanceDetail.


        :return: The protection_date of this MssqlInstanceDetail.
        :rtype: date
        """
        return self._protection_date

    @protection_date.setter
    def protection_date(self, protection_date):
        """Sets the protection_date of this MssqlInstanceDetail.


        :param protection_date: The protection_date of this MssqlInstanceDetail.
        :type protection_date: date
        """

        self._protection_date = protection_date

    @property
    def root_properties(self):
        """Gets the root_properties of this MssqlInstanceDetail.


        :return: The root_properties of this MssqlInstanceDetail.
        :rtype: MssqlRootProperties
        """
        return self._root_properties

    @root_properties.setter
    def root_properties(self, root_properties):
        """Sets the root_properties of this MssqlInstanceDetail.


        :param root_properties: The root_properties of this MssqlInstanceDetail.
        :type root_properties: MssqlRootProperties
        """
        if root_properties is None:
            raise ValueError("Invalid value for `root_properties`, must not be `None`")

        self._root_properties = root_properties

    @property
    def unprotectable_reasons(self):
        """Gets the unprotectable_reasons of this MssqlInstanceDetail.

        A list of reasons that all the SQL Server databases in a SQL Server instance cannot be protected by the Rubrik CDM.

        :return: The unprotectable_reasons of this MssqlInstanceDetail.
        :rtype: List[str]
        """
        return self._unprotectable_reasons

    @unprotectable_reasons.setter
    def unprotectable_reasons(self, unprotectable_reasons):
        """Sets the unprotectable_reasons of this MssqlInstanceDetail.

        A list of reasons that all the SQL Server databases in a SQL Server instance cannot be protected by the Rubrik CDM.

        :param unprotectable_reasons: The unprotectable_reasons of this MssqlInstanceDetail.
        :type unprotectable_reasons: List[str]
        """

        self._unprotectable_reasons = unprotectable_reasons

    @property
    def version(self):
        """Gets the version of this MssqlInstanceDetail.


        :return: The version of this MssqlInstanceDetail.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this MssqlInstanceDetail.


        :param version: The version of this MssqlInstanceDetail.
        :type version: str
        """

        self._version = version
