# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemediationRequestRunConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, run_now: bool=None):
        """RemediationRequestRunConfig - a model defined in OpenAPI

        :param run_now: The run_now of this RemediationRequestRunConfig.
        """
        self.openapi_types = {
            'run_now': bool
        }

        self.attribute_map = {
            'run_now': 'runNow'
        }

        self._run_now = run_now

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemediationRequestRunConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemediationRequestRunConfig of this RemediationRequestRunConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def run_now(self):
        """Gets the run_now of this RemediationRequestRunConfig.

        If false, Rubrik CDM uses the configured SLA domain backup window to reschedule the task. 

        :return: The run_now of this RemediationRequestRunConfig.
        :rtype: bool
        """
        return self._run_now

    @run_now.setter
    def run_now(self, run_now):
        """Sets the run_now of this RemediationRequestRunConfig.

        If false, Rubrik CDM uses the configured SLA domain backup window to reschedule the task. 

        :param run_now: The run_now of this RemediationRequestRunConfig.
        :type run_now: bool
        """
        if run_now is None:
            raise ValueError("Invalid value for `run_now`, must not be `None`")

        self._run_now = run_now
