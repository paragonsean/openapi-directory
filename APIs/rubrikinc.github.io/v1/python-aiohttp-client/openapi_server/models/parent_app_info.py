# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ParentAppInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, is_protected_thru_hierarchy: bool=None):
        """ParentAppInfo - a model defined in OpenAPI

        :param id: The id of this ParentAppInfo.
        :param is_protected_thru_hierarchy: The is_protected_thru_hierarchy of this ParentAppInfo.
        """
        self.openapi_types = {
            'id': str,
            'is_protected_thru_hierarchy': bool
        }

        self.attribute_map = {
            'id': 'id',
            'is_protected_thru_hierarchy': 'isProtectedThruHierarchy'
        }

        self._id = id
        self._is_protected_thru_hierarchy = is_protected_thru_hierarchy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParentAppInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParentAppInfo of this ParentAppInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ParentAppInfo.

        ID assigned to the vApp object that manages a specified virtual machine.

        :return: The id of this ParentAppInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ParentAppInfo.

        ID assigned to the vApp object that manages a specified virtual machine.

        :param id: The id of this ParentAppInfo.
        :type id: str
        """

        self._id = id

    @property
    def is_protected_thru_hierarchy(self):
        """Gets the is_protected_thru_hierarchy of this ParentAppInfo.

        Boolean value that indicates whether a virtual machine is protected through the SLA Domain assigned to the parent vApp. Set to 'true' when the virtual machine is protected through the parent vApp, otherwise set to 'false'. Direct assignment of a virtual machine to an SLA Domain is not possible when this value is 'true'. Also, setting this value to true is not possible when the virtual machine has an existing direct assignment to an SLA Domain.

        :return: The is_protected_thru_hierarchy of this ParentAppInfo.
        :rtype: bool
        """
        return self._is_protected_thru_hierarchy

    @is_protected_thru_hierarchy.setter
    def is_protected_thru_hierarchy(self, is_protected_thru_hierarchy):
        """Sets the is_protected_thru_hierarchy of this ParentAppInfo.

        Boolean value that indicates whether a virtual machine is protected through the SLA Domain assigned to the parent vApp. Set to 'true' when the virtual machine is protected through the parent vApp, otherwise set to 'false'. Direct assignment of a virtual machine to an SLA Domain is not possible when this value is 'true'. Also, setting this value to true is not possible when the virtual machine has an existing direct assignment to an SLA Domain.

        :param is_protected_thru_hierarchy: The is_protected_thru_hierarchy of this ParentAppInfo.
        :type is_protected_thru_hierarchy: bool
        """
        if is_protected_thru_hierarchy is None:
            raise ValueError("Invalid value for `is_protected_thru_hierarchy`, must not be `None`")

        self._is_protected_thru_hierarchy = is_protected_thru_hierarchy
