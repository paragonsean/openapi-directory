# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mssql_missed_recoverable_range_error import MssqlMissedRecoverableRangeError
from openapi_server import util


class MssqlMissedRecoverableRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_time: datetime=None, description: str=None, end_time: datetime=None, error_type: str=None, first_error: MssqlMissedRecoverableRangeError=None, last_error: MssqlMissedRecoverableRangeError=None):
        """MssqlMissedRecoverableRange - a model defined in OpenAPI

        :param begin_time: The begin_time of this MssqlMissedRecoverableRange.
        :param description: The description of this MssqlMissedRecoverableRange.
        :param end_time: The end_time of this MssqlMissedRecoverableRange.
        :param error_type: The error_type of this MssqlMissedRecoverableRange.
        :param first_error: The first_error of this MssqlMissedRecoverableRange.
        :param last_error: The last_error of this MssqlMissedRecoverableRange.
        """
        self.openapi_types = {
            'begin_time': datetime,
            'description': str,
            'end_time': datetime,
            'error_type': str,
            'first_error': MssqlMissedRecoverableRangeError,
            'last_error': MssqlMissedRecoverableRangeError
        }

        self.attribute_map = {
            'begin_time': 'beginTime',
            'description': 'description',
            'end_time': 'endTime',
            'error_type': 'errorType',
            'first_error': 'firstError',
            'last_error': 'lastError'
        }

        self._begin_time = begin_time
        self._description = description
        self._end_time = end_time
        self._error_type = error_type
        self._first_error = first_error
        self._last_error = last_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MssqlMissedRecoverableRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MssqlMissedRecoverableRange of this MssqlMissedRecoverableRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_time(self):
        """Gets the begin_time of this MssqlMissedRecoverableRange.


        :return: The begin_time of this MssqlMissedRecoverableRange.
        :rtype: datetime
        """
        return self._begin_time

    @begin_time.setter
    def begin_time(self, begin_time):
        """Sets the begin_time of this MssqlMissedRecoverableRange.


        :param begin_time: The begin_time of this MssqlMissedRecoverableRange.
        :type begin_time: datetime
        """
        if begin_time is None:
            raise ValueError("Invalid value for `begin_time`, must not be `None`")

        self._begin_time = begin_time

    @property
    def description(self):
        """Gets the description of this MssqlMissedRecoverableRange.


        :return: The description of this MssqlMissedRecoverableRange.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MssqlMissedRecoverableRange.


        :param description: The description of this MssqlMissedRecoverableRange.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def end_time(self):
        """Gets the end_time of this MssqlMissedRecoverableRange.


        :return: The end_time of this MssqlMissedRecoverableRange.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this MssqlMissedRecoverableRange.


        :param end_time: The end_time of this MssqlMissedRecoverableRange.
        :type end_time: datetime
        """
        if end_time is None:
            raise ValueError("Invalid value for `end_time`, must not be `None`")

        self._end_time = end_time

    @property
    def error_type(self):
        """Gets the error_type of this MssqlMissedRecoverableRange.


        :return: The error_type of this MssqlMissedRecoverableRange.
        :rtype: str
        """
        return self._error_type

    @error_type.setter
    def error_type(self, error_type):
        """Sets the error_type of this MssqlMissedRecoverableRange.


        :param error_type: The error_type of this MssqlMissedRecoverableRange.
        :type error_type: str
        """
        if error_type is None:
            raise ValueError("Invalid value for `error_type`, must not be `None`")

        self._error_type = error_type

    @property
    def first_error(self):
        """Gets the first_error of this MssqlMissedRecoverableRange.


        :return: The first_error of this MssqlMissedRecoverableRange.
        :rtype: MssqlMissedRecoverableRangeError
        """
        return self._first_error

    @first_error.setter
    def first_error(self, first_error):
        """Sets the first_error of this MssqlMissedRecoverableRange.


        :param first_error: The first_error of this MssqlMissedRecoverableRange.
        :type first_error: MssqlMissedRecoverableRangeError
        """

        self._first_error = first_error

    @property
    def last_error(self):
        """Gets the last_error of this MssqlMissedRecoverableRange.


        :return: The last_error of this MssqlMissedRecoverableRange.
        :rtype: MssqlMissedRecoverableRangeError
        """
        return self._last_error

    @last_error.setter
    def last_error(self, last_error):
        """Sets the last_error of this MssqlMissedRecoverableRange.


        :param last_error: The last_error of this MssqlMissedRecoverableRange.
        :type last_error: MssqlMissedRecoverableRangeError
        """

        self._last_error = last_error
