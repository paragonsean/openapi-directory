# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RunPolicyArg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_ids: List[str]=None, policy_ids: List[str]=None):
        """RunPolicyArg - a model defined in OpenAPI

        :param node_ids: The node_ids of this RunPolicyArg.
        :param policy_ids: The policy_ids of this RunPolicyArg.
        """
        self.openapi_types = {
            'node_ids': List[str],
            'policy_ids': List[str]
        }

        self.attribute_map = {
            'node_ids': 'nodeIds',
            'policy_ids': 'policyIds'
        }

        self._node_ids = node_ids
        self._policy_ids = policy_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RunPolicyArg':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RunPolicyArg of this RunPolicyArg.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_ids(self):
        """Gets the node_ids of this RunPolicyArg.

        List of node IDs where policies will be enforced.

        :return: The node_ids of this RunPolicyArg.
        :rtype: List[str]
        """
        return self._node_ids

    @node_ids.setter
    def node_ids(self, node_ids):
        """Sets the node_ids of this RunPolicyArg.

        List of node IDs where policies will be enforced.

        :param node_ids: The node_ids of this RunPolicyArg.
        :type node_ids: List[str]
        """

        self._node_ids = node_ids

    @property
    def policy_ids(self):
        """Gets the policy_ids of this RunPolicyArg.

        List of policy IDs.

        :return: The policy_ids of this RunPolicyArg.
        :rtype: List[str]
        """
        return self._policy_ids

    @policy_ids.setter
    def policy_ids(self, policy_ids):
        """Sets the policy_ids of this RunPolicyArg.

        List of policy IDs.

        :param policy_ids: The policy_ids of this RunPolicyArg.
        :type policy_ids: List[str]
        """
        if policy_ids is None:
            raise ValueError("Invalid value for `policy_ids`, must not be `None`")

        self._policy_ids = policy_ids
