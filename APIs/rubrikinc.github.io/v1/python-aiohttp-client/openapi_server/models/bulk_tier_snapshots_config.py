# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkTierSnapshotsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_id: str=None, object_ids: List[str]=None):
        """BulkTierSnapshotsConfig - a model defined in OpenAPI

        :param location_id: The location_id of this BulkTierSnapshotsConfig.
        :param object_ids: The object_ids of this BulkTierSnapshotsConfig.
        """
        self.openapi_types = {
            'location_id': str,
            'object_ids': List[str]
        }

        self.attribute_map = {
            'location_id': 'locationId',
            'object_ids': 'objectIds'
        }

        self._location_id = location_id
        self._object_ids = object_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkTierSnapshotsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkTierSnapshotsConfig of this BulkTierSnapshotsConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_id(self):
        """Gets the location_id of this BulkTierSnapshotsConfig.

        Users can specify the archival location ID in order to tier snapshots in the specified archival location. When an archival location ID is not specified, snapshots in the archival location specified in the SLA Domain policy for protected objects will be tiered. Relic and unprotected object snapshots across all archival locations will be tiered.

        :return: The location_id of this BulkTierSnapshotsConfig.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this BulkTierSnapshotsConfig.

        Users can specify the archival location ID in order to tier snapshots in the specified archival location. When an archival location ID is not specified, snapshots in the archival location specified in the SLA Domain policy for protected objects will be tiered. Relic and unprotected object snapshots across all archival locations will be tiered.

        :param location_id: The location_id of this BulkTierSnapshotsConfig.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def object_ids(self):
        """Gets the object_ids of this BulkTierSnapshotsConfig.

        A list of object IDs to tier.

        :return: The object_ids of this BulkTierSnapshotsConfig.
        :rtype: List[str]
        """
        return self._object_ids

    @object_ids.setter
    def object_ids(self, object_ids):
        """Sets the object_ids of this BulkTierSnapshotsConfig.

        A list of object IDs to tier.

        :param object_ids: The object_ids of this BulkTierSnapshotsConfig.
        :type object_ids: List[str]
        """
        if object_ids is None:
            raise ValueError("Invalid value for `object_ids`, must not be `None`")

        self._object_ids = object_ids
