# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OracleRestoreEstimateResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bytes_to_restore: int=None):
        """OracleRestoreEstimateResult - a model defined in OpenAPI

        :param bytes_to_restore: The bytes_to_restore of this OracleRestoreEstimateResult.
        """
        self.openapi_types = {
            'bytes_to_restore': int
        }

        self.attribute_map = {
            'bytes_to_restore': 'bytesToRestore'
        }

        self._bytes_to_restore = bytes_to_restore

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OracleRestoreEstimateResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OracleRestoreEstimateResult of this OracleRestoreEstimateResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bytes_to_restore(self):
        """Gets the bytes_to_restore of this OracleRestoreEstimateResult.

        The estimated size, in bytes required to restore an Oracle database.

        :return: The bytes_to_restore of this OracleRestoreEstimateResult.
        :rtype: int
        """
        return self._bytes_to_restore

    @bytes_to_restore.setter
    def bytes_to_restore(self, bytes_to_restore):
        """Sets the bytes_to_restore of this OracleRestoreEstimateResult.

        The estimated size, in bytes required to restore an Oracle database.

        :param bytes_to_restore: The bytes_to_restore of this OracleRestoreEstimateResult.
        :type bytes_to_restore: int
        """
        if bytes_to_restore is None:
            raise ValueError("Invalid value for `bytes_to_restore`, must not be `None`")

        self._bytes_to_restore = bytes_to_restore
