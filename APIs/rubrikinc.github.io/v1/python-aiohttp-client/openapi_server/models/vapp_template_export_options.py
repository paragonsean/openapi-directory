# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vcd_org_vdc_storage_profile import VcdOrgVdcStorageProfile
from openapi_server import util


class VappTemplateExportOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_storage_policies: List[VcdOrgVdcStorageProfile]=None, org_vdc_id: str=None):
        """VappTemplateExportOptions - a model defined in OpenAPI

        :param available_storage_policies: The available_storage_policies of this VappTemplateExportOptions.
        :param org_vdc_id: The org_vdc_id of this VappTemplateExportOptions.
        """
        self.openapi_types = {
            'available_storage_policies': List[VcdOrgVdcStorageProfile],
            'org_vdc_id': str
        }

        self.attribute_map = {
            'available_storage_policies': 'availableStoragePolicies',
            'org_vdc_id': 'orgVdcId'
        }

        self._available_storage_policies = available_storage_policies
        self._org_vdc_id = org_vdc_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VappTemplateExportOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VappTemplateExportOptions of this VappTemplateExportOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_storage_policies(self):
        """Gets the available_storage_policies of this VappTemplateExportOptions.

        An array of the available storage profile policies where the vApp snapshot can be exported.

        :return: The available_storage_policies of this VappTemplateExportOptions.
        :rtype: List[VcdOrgVdcStorageProfile]
        """
        return self._available_storage_policies

    @available_storage_policies.setter
    def available_storage_policies(self, available_storage_policies):
        """Sets the available_storage_policies of this VappTemplateExportOptions.

        An array of the available storage profile policies where the vApp snapshot can be exported.

        :param available_storage_policies: The available_storage_policies of this VappTemplateExportOptions.
        :type available_storage_policies: List[VcdOrgVdcStorageProfile]
        """
        if available_storage_policies is None:
            raise ValueError("Invalid value for `available_storage_policies`, must not be `None`")

        self._available_storage_policies = available_storage_policies

    @property
    def org_vdc_id(self):
        """Gets the org_vdc_id of this VappTemplateExportOptions.

        The ID of the organization vDC where the vApp template can be exported.

        :return: The org_vdc_id of this VappTemplateExportOptions.
        :rtype: str
        """
        return self._org_vdc_id

    @org_vdc_id.setter
    def org_vdc_id(self, org_vdc_id):
        """Sets the org_vdc_id of this VappTemplateExportOptions.

        The ID of the organization vDC where the vApp template can be exported.

        :param org_vdc_id: The org_vdc_id of this VappTemplateExportOptions.
        :type org_vdc_id: str
        """
        if org_vdc_id is None:
            raise ValueError("Invalid value for `org_vdc_id`, must not be `None`")

        self._org_vdc_id = org_vdc_id
