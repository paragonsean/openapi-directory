# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedObjectPendingSlaInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_pending_sla_domain_retention_locked: bool=None, object_id: str=None, pending_sla_domain_id: str=None, pending_sla_domain_name: str=None):
        """ManagedObjectPendingSlaInfo - a model defined in OpenAPI

        :param is_pending_sla_domain_retention_locked: The is_pending_sla_domain_retention_locked of this ManagedObjectPendingSlaInfo.
        :param object_id: The object_id of this ManagedObjectPendingSlaInfo.
        :param pending_sla_domain_id: The pending_sla_domain_id of this ManagedObjectPendingSlaInfo.
        :param pending_sla_domain_name: The pending_sla_domain_name of this ManagedObjectPendingSlaInfo.
        """
        self.openapi_types = {
            'is_pending_sla_domain_retention_locked': bool,
            'object_id': str,
            'pending_sla_domain_id': str,
            'pending_sla_domain_name': str
        }

        self.attribute_map = {
            'is_pending_sla_domain_retention_locked': 'isPendingSlaDomainRetentionLocked',
            'object_id': 'objectId',
            'pending_sla_domain_id': 'pendingSlaDomainId',
            'pending_sla_domain_name': 'pendingSlaDomainName'
        }

        self._is_pending_sla_domain_retention_locked = is_pending_sla_domain_retention_locked
        self._object_id = object_id
        self._pending_sla_domain_id = pending_sla_domain_id
        self._pending_sla_domain_name = pending_sla_domain_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedObjectPendingSlaInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedObjectPendingSlaInfo of this ManagedObjectPendingSlaInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_pending_sla_domain_retention_locked(self):
        """Gets the is_pending_sla_domain_retention_locked of this ManagedObjectPendingSlaInfo.


        :return: The is_pending_sla_domain_retention_locked of this ManagedObjectPendingSlaInfo.
        :rtype: bool
        """
        return self._is_pending_sla_domain_retention_locked

    @is_pending_sla_domain_retention_locked.setter
    def is_pending_sla_domain_retention_locked(self, is_pending_sla_domain_retention_locked):
        """Sets the is_pending_sla_domain_retention_locked of this ManagedObjectPendingSlaInfo.


        :param is_pending_sla_domain_retention_locked: The is_pending_sla_domain_retention_locked of this ManagedObjectPendingSlaInfo.
        :type is_pending_sla_domain_retention_locked: bool
        """

        self._is_pending_sla_domain_retention_locked = is_pending_sla_domain_retention_locked

    @property
    def object_id(self):
        """Gets the object_id of this ManagedObjectPendingSlaInfo.

        Managed ID of the object.

        :return: The object_id of this ManagedObjectPendingSlaInfo.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this ManagedObjectPendingSlaInfo.

        Managed ID of the object.

        :param object_id: The object_id of this ManagedObjectPendingSlaInfo.
        :type object_id: str
        """
        if object_id is None:
            raise ValueError("Invalid value for `object_id`, must not be `None`")

        self._object_id = object_id

    @property
    def pending_sla_domain_id(self):
        """Gets the pending_sla_domain_id of this ManagedObjectPendingSlaInfo.


        :return: The pending_sla_domain_id of this ManagedObjectPendingSlaInfo.
        :rtype: str
        """
        return self._pending_sla_domain_id

    @pending_sla_domain_id.setter
    def pending_sla_domain_id(self, pending_sla_domain_id):
        """Sets the pending_sla_domain_id of this ManagedObjectPendingSlaInfo.


        :param pending_sla_domain_id: The pending_sla_domain_id of this ManagedObjectPendingSlaInfo.
        :type pending_sla_domain_id: str
        """
        if pending_sla_domain_id is None:
            raise ValueError("Invalid value for `pending_sla_domain_id`, must not be `None`")

        self._pending_sla_domain_id = pending_sla_domain_id

    @property
    def pending_sla_domain_name(self):
        """Gets the pending_sla_domain_name of this ManagedObjectPendingSlaInfo.


        :return: The pending_sla_domain_name of this ManagedObjectPendingSlaInfo.
        :rtype: str
        """
        return self._pending_sla_domain_name

    @pending_sla_domain_name.setter
    def pending_sla_domain_name(self, pending_sla_domain_name):
        """Sets the pending_sla_domain_name of this ManagedObjectPendingSlaInfo.


        :param pending_sla_domain_name: The pending_sla_domain_name of this ManagedObjectPendingSlaInfo.
        :type pending_sla_domain_name: str
        """
        if pending_sla_domain_name is None:
            raise ValueError("Invalid value for `pending_sla_domain_name`, must not be `None`")

        self._pending_sla_domain_name = pending_sla_domain_name
