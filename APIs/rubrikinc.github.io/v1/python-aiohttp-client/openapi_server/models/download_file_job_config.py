# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.legal_hold_download_config import LegalHoldDownloadConfig
from openapi_server import util


class DownloadFileJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, legal_hold_download_config: LegalHoldDownloadConfig=None, path: str=None):
        """DownloadFileJobConfig - a model defined in OpenAPI

        :param legal_hold_download_config: The legal_hold_download_config of this DownloadFileJobConfig.
        :param path: The path of this DownloadFileJobConfig.
        """
        self.openapi_types = {
            'legal_hold_download_config': LegalHoldDownloadConfig,
            'path': str
        }

        self.attribute_map = {
            'legal_hold_download_config': 'legalHoldDownloadConfig',
            'path': 'path'
        }

        self._legal_hold_download_config = legal_hold_download_config
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DownloadFileJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DownloadFileJobConfig of this DownloadFileJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def legal_hold_download_config(self):
        """Gets the legal_hold_download_config of this DownloadFileJobConfig.


        :return: The legal_hold_download_config of this DownloadFileJobConfig.
        :rtype: LegalHoldDownloadConfig
        """
        return self._legal_hold_download_config

    @legal_hold_download_config.setter
    def legal_hold_download_config(self, legal_hold_download_config):
        """Sets the legal_hold_download_config of this DownloadFileJobConfig.


        :param legal_hold_download_config: The legal_hold_download_config of this DownloadFileJobConfig.
        :type legal_hold_download_config: LegalHoldDownloadConfig
        """

        self._legal_hold_download_config = legal_hold_download_config

    @property
    def path(self):
        """Gets the path of this DownloadFileJobConfig.

        Absolute file path.

        :return: The path of this DownloadFileJobConfig.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this DownloadFileJobConfig.

        Absolute file path.

        :param path: The path of this DownloadFileJobConfig.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")

        self._path = path
