# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionScheduleTimeAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, daily_schedule_hour: int=None, day_of_month: int=None, days_of_week: List[int]=None, monthly_schedule_hour: int=None, weekly_schedule_hour: int=None):
        """SubscriptionScheduleTimeAttributes - a model defined in OpenAPI

        :param daily_schedule_hour: The daily_schedule_hour of this SubscriptionScheduleTimeAttributes.
        :param day_of_month: The day_of_month of this SubscriptionScheduleTimeAttributes.
        :param days_of_week: The days_of_week of this SubscriptionScheduleTimeAttributes.
        :param monthly_schedule_hour: The monthly_schedule_hour of this SubscriptionScheduleTimeAttributes.
        :param weekly_schedule_hour: The weekly_schedule_hour of this SubscriptionScheduleTimeAttributes.
        """
        self.openapi_types = {
            'daily_schedule_hour': int,
            'day_of_month': int,
            'days_of_week': List[int],
            'monthly_schedule_hour': int,
            'weekly_schedule_hour': int
        }

        self.attribute_map = {
            'daily_schedule_hour': 'dailyScheduleHour',
            'day_of_month': 'dayOfMonth',
            'days_of_week': 'daysOfWeek',
            'monthly_schedule_hour': 'monthlyScheduleHour',
            'weekly_schedule_hour': 'weeklyScheduleHour'
        }

        self._daily_schedule_hour = daily_schedule_hour
        self._day_of_month = day_of_month
        self._days_of_week = days_of_week
        self._monthly_schedule_hour = monthly_schedule_hour
        self._weekly_schedule_hour = weekly_schedule_hour

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionScheduleTimeAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionScheduleTimeAttributes of this SubscriptionScheduleTimeAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def daily_schedule_hour(self):
        """Gets the daily_schedule_hour of this SubscriptionScheduleTimeAttributes.

        Hour of the day to send the scheduled email, if the user picks a daily schedule. 0 = 12AM, 23 = 11PM.

        :return: The daily_schedule_hour of this SubscriptionScheduleTimeAttributes.
        :rtype: int
        """
        return self._daily_schedule_hour

    @daily_schedule_hour.setter
    def daily_schedule_hour(self, daily_schedule_hour):
        """Sets the daily_schedule_hour of this SubscriptionScheduleTimeAttributes.

        Hour of the day to send the scheduled email, if the user picks a daily schedule. 0 = 12AM, 23 = 11PM.

        :param daily_schedule_hour: The daily_schedule_hour of this SubscriptionScheduleTimeAttributes.
        :type daily_schedule_hour: int
        """

        self._daily_schedule_hour = daily_schedule_hour

    @property
    def day_of_month(self):
        """Gets the day_of_month of this SubscriptionScheduleTimeAttributes.

        Day of the month to send the scheduled email, if the user picks a monthly schedule.

        :return: The day_of_month of this SubscriptionScheduleTimeAttributes.
        :rtype: int
        """
        return self._day_of_month

    @day_of_month.setter
    def day_of_month(self, day_of_month):
        """Sets the day_of_month of this SubscriptionScheduleTimeAttributes.

        Day of the month to send the scheduled email, if the user picks a monthly schedule.

        :param day_of_month: The day_of_month of this SubscriptionScheduleTimeAttributes.
        :type day_of_month: int
        """

        self._day_of_month = day_of_month

    @property
    def days_of_week(self):
        """Gets the days_of_week of this SubscriptionScheduleTimeAttributes.

        Day of the week, represented by numbers, to send the scheduled email, if the user picks a weekly schedule. 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday.

        :return: The days_of_week of this SubscriptionScheduleTimeAttributes.
        :rtype: List[int]
        """
        return self._days_of_week

    @days_of_week.setter
    def days_of_week(self, days_of_week):
        """Sets the days_of_week of this SubscriptionScheduleTimeAttributes.

        Day of the week, represented by numbers, to send the scheduled email, if the user picks a weekly schedule. 0 = Sunday, 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday.

        :param days_of_week: The days_of_week of this SubscriptionScheduleTimeAttributes.
        :type days_of_week: List[int]
        """

        self._days_of_week = days_of_week

    @property
    def monthly_schedule_hour(self):
        """Gets the monthly_schedule_hour of this SubscriptionScheduleTimeAttributes.

        Hour of the user-specified day to send the scheduled email, if the user picks a monthly schedule. 0 = 12AM, 23 = 11PM.

        :return: The monthly_schedule_hour of this SubscriptionScheduleTimeAttributes.
        :rtype: int
        """
        return self._monthly_schedule_hour

    @monthly_schedule_hour.setter
    def monthly_schedule_hour(self, monthly_schedule_hour):
        """Sets the monthly_schedule_hour of this SubscriptionScheduleTimeAttributes.

        Hour of the user-specified day to send the scheduled email, if the user picks a monthly schedule. 0 = 12AM, 23 = 11PM.

        :param monthly_schedule_hour: The monthly_schedule_hour of this SubscriptionScheduleTimeAttributes.
        :type monthly_schedule_hour: int
        """

        self._monthly_schedule_hour = monthly_schedule_hour

    @property
    def weekly_schedule_hour(self):
        """Gets the weekly_schedule_hour of this SubscriptionScheduleTimeAttributes.

        Hour of the user-specified day to send the scheduled email, if the user picks a weekly schedule. 0 = 12AM, 23 = 11PM.

        :return: The weekly_schedule_hour of this SubscriptionScheduleTimeAttributes.
        :rtype: int
        """
        return self._weekly_schedule_hour

    @weekly_schedule_hour.setter
    def weekly_schedule_hour(self, weekly_schedule_hour):
        """Sets the weekly_schedule_hour of this SubscriptionScheduleTimeAttributes.

        Hour of the user-specified day to send the scheduled email, if the user picks a weekly schedule. 0 = 12AM, 23 = 11PM.

        :param weekly_schedule_hour: The weekly_schedule_hour of this SubscriptionScheduleTimeAttributes.
        :type weekly_schedule_hour: int
        """

        self._weekly_schedule_hour = weekly_schedule_hour
