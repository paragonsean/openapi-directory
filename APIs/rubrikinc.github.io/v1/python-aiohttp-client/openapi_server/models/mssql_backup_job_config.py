# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MssqlBackupJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sla_id: str=None, force_full_snapshot: bool=None):
        """MssqlBackupJobConfig - a model defined in OpenAPI

        :param sla_id: The sla_id of this MssqlBackupJobConfig.
        :param force_full_snapshot: The force_full_snapshot of this MssqlBackupJobConfig.
        """
        self.openapi_types = {
            'sla_id': str,
            'force_full_snapshot': bool
        }

        self.attribute_map = {
            'sla_id': 'slaId',
            'force_full_snapshot': 'forceFullSnapshot'
        }

        self._sla_id = sla_id
        self._force_full_snapshot = force_full_snapshot

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MssqlBackupJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MssqlBackupJobConfig of this MssqlBackupJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sla_id(self):
        """Gets the sla_id of this MssqlBackupJobConfig.


        :return: The sla_id of this MssqlBackupJobConfig.
        :rtype: str
        """
        return self._sla_id

    @sla_id.setter
    def sla_id(self, sla_id):
        """Sets the sla_id of this MssqlBackupJobConfig.


        :param sla_id: The sla_id of this MssqlBackupJobConfig.
        :type sla_id: str
        """

        self._sla_id = sla_id

    @property
    def force_full_snapshot(self):
        """Gets the force_full_snapshot of this MssqlBackupJobConfig.

        Whether to force a full snapshot or an incremental.

        :return: The force_full_snapshot of this MssqlBackupJobConfig.
        :rtype: bool
        """
        return self._force_full_snapshot

    @force_full_snapshot.setter
    def force_full_snapshot(self, force_full_snapshot):
        """Sets the force_full_snapshot of this MssqlBackupJobConfig.

        Whether to force a full snapshot or an incremental.

        :param force_full_snapshot: The force_full_snapshot of this MssqlBackupJobConfig.
        :type force_full_snapshot: bool
        """

        self._force_full_snapshot = force_full_snapshot
