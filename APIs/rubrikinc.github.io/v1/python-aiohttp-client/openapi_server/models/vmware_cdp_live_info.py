# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmwareCdpLiveInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_time: datetime=None, local_recovery_point: datetime=None, remote_recovery_point: datetime=None, vm_id: str=None):
        """VmwareCdpLiveInfo - a model defined in OpenAPI

        :param current_time: The current_time of this VmwareCdpLiveInfo.
        :param local_recovery_point: The local_recovery_point of this VmwareCdpLiveInfo.
        :param remote_recovery_point: The remote_recovery_point of this VmwareCdpLiveInfo.
        :param vm_id: The vm_id of this VmwareCdpLiveInfo.
        """
        self.openapi_types = {
            'current_time': datetime,
            'local_recovery_point': datetime,
            'remote_recovery_point': datetime,
            'vm_id': str
        }

        self.attribute_map = {
            'current_time': 'currentTime',
            'local_recovery_point': 'localRecoveryPoint',
            'remote_recovery_point': 'remoteRecoveryPoint',
            'vm_id': 'vmId'
        }

        self._current_time = current_time
        self._local_recovery_point = local_recovery_point
        self._remote_recovery_point = remote_recovery_point
        self._vm_id = vm_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareCdpLiveInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareCdpLiveInfo of this VmwareCdpLiveInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_time(self):
        """Gets the current_time of this VmwareCdpLiveInfo.

        The time on this node. Computed after computing the live CDP info for the virtual machine.

        :return: The current_time of this VmwareCdpLiveInfo.
        :rtype: datetime
        """
        return self._current_time

    @current_time.setter
    def current_time(self, current_time):
        """Sets the current_time of this VmwareCdpLiveInfo.

        The time on this node. Computed after computing the live CDP info for the virtual machine.

        :param current_time: The current_time of this VmwareCdpLiveInfo.
        :type current_time: datetime
        """

        self._current_time = current_time

    @property
    def local_recovery_point(self):
        """Gets the local_recovery_point of this VmwareCdpLiveInfo.

        The latest time to which this virtual machine can be recovered locally.

        :return: The local_recovery_point of this VmwareCdpLiveInfo.
        :rtype: datetime
        """
        return self._local_recovery_point

    @local_recovery_point.setter
    def local_recovery_point(self, local_recovery_point):
        """Sets the local_recovery_point of this VmwareCdpLiveInfo.

        The latest time to which this virtual machine can be recovered locally.

        :param local_recovery_point: The local_recovery_point of this VmwareCdpLiveInfo.
        :type local_recovery_point: datetime
        """

        self._local_recovery_point = local_recovery_point

    @property
    def remote_recovery_point(self):
        """Gets the remote_recovery_point of this VmwareCdpLiveInfo.

        The latest time to which this virtual machine can be recovered on a remote cluster.

        :return: The remote_recovery_point of this VmwareCdpLiveInfo.
        :rtype: datetime
        """
        return self._remote_recovery_point

    @remote_recovery_point.setter
    def remote_recovery_point(self, remote_recovery_point):
        """Sets the remote_recovery_point of this VmwareCdpLiveInfo.

        The latest time to which this virtual machine can be recovered on a remote cluster.

        :param remote_recovery_point: The remote_recovery_point of this VmwareCdpLiveInfo.
        :type remote_recovery_point: datetime
        """

        self._remote_recovery_point = remote_recovery_point

    @property
    def vm_id(self):
        """Gets the vm_id of this VmwareCdpLiveInfo.

        The ID of the virtual machine that we are getting CDP live fields for.

        :return: The vm_id of this VmwareCdpLiveInfo.
        :rtype: str
        """
        return self._vm_id

    @vm_id.setter
    def vm_id(self, vm_id):
        """Sets the vm_id of this VmwareCdpLiveInfo.

        The ID of the virtual machine that we are getting CDP live fields for.

        :param vm_id: The vm_id of this VmwareCdpLiveInfo.
        :type vm_id: str
        """
        if vm_id is None:
            raise ValueError("Invalid value for `vm_id`, must not be `None`")

        self._vm_id = vm_id
