# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OracleInstanceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_name: str=None, instance_sid: str=None):
        """OracleInstanceProperties - a model defined in OpenAPI

        :param host_name: The host_name of this OracleInstanceProperties.
        :param instance_sid: The instance_sid of this OracleInstanceProperties.
        """
        self.openapi_types = {
            'host_name': str,
            'instance_sid': str
        }

        self.attribute_map = {
            'host_name': 'hostName',
            'instance_sid': 'instanceSid'
        }

        self._host_name = host_name
        self._instance_sid = instance_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OracleInstanceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OracleInstanceProperties of this OracleInstanceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_name(self):
        """Gets the host_name of this OracleInstanceProperties.

        Name of the Oracle host.

        :return: The host_name of this OracleInstanceProperties.
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this OracleInstanceProperties.

        Name of the Oracle host.

        :param host_name: The host_name of this OracleInstanceProperties.
        :type host_name: str
        """
        if host_name is None:
            raise ValueError("Invalid value for `host_name`, must not be `None`")

        self._host_name = host_name

    @property
    def instance_sid(self):
        """Gets the instance_sid of this OracleInstanceProperties.

        System identifier (SID) of the Oracle database instance.

        :return: The instance_sid of this OracleInstanceProperties.
        :rtype: str
        """
        return self._instance_sid

    @instance_sid.setter
    def instance_sid(self, instance_sid):
        """Sets the instance_sid of this OracleInstanceProperties.

        System identifier (SID) of the Oracle database instance.

        :param instance_sid: The instance_sid of this OracleInstanceProperties.
        :type instance_sid: str
        """
        if instance_sid is None:
            raise ValueError("Invalid value for `instance_sid`, must not be `None`")

        self._instance_sid = instance_sid
