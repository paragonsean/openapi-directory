# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ObjectTypeV1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AGGREGATEAHVVM = 'AggregateAhvVm'
    AGGREGATEAWSAZURE = 'AggregateAwsAzure'
    AGGREGATEHYPERVVM = 'AggregateHypervVm'
    AGGREGATELINUXUNIXHOSTS = 'AggregateLinuxUnixHosts'
    AGGREGATENASSHARES = 'AggregateNasShares'
    AGGREGATEORACLEDB = 'AggregateOracleDb'
    AGGREGATESAPHANADB = 'AggregateSapHanaDb'
    AGGREGATESTORAGEARRAYS = 'AggregateStorageArrays'
    AGGREGATEVCDVAPPS = 'AggregateVcdVapps'
    AGGREGATEVSPHEREVM = 'AggregateVsphereVm'
    AGGREGATEWINDOWSHOSTS = 'AggregateWindowsHosts'
    APPBLUEPRINT = 'AppBlueprint'
    APPFLOWS = 'AppFlows'
    AUTHDOMAIN = 'AuthDomain'
    AWSACCOUNT = 'AwsAccount'
    AWSEVENTTYPE = 'AwsEventType'
    CERTIFICATE = 'Certificate'
    CLUSTER = 'Cluster'
    COMPUTEINSTANCE = 'ComputeInstance'
    DATALOCATION = 'DataLocation'
    EC2INSTANCE = 'Ec2Instance'
    ENVOY = 'Envoy'
    HOST = 'Host'
    HYPERVSCVMM = 'HypervScvmm'
    HYPERVSERVER = 'HypervServer'
    HYPERVVM = 'HypervVm'
    JOBINSTANCE = 'JobInstance'
    LDAP = 'Ldap'
    LINUXHOST = 'LinuxHost'
    LINUXFILESET = 'LinuxFileset'
    MANAGEDVOLUME = 'ManagedVolume'
    MSSQL = 'Mssql'
    NASHOST = 'NasHost'
    NUTANIXCLUSTER = 'NutanixCluster'
    NUTANIXVM = 'NutanixVm'
    ORACLEDB = 'OracleDb'
    ORACLEHOST = 'OracleHost'
    ORACLERAC = 'OracleRac'
    PUBLICCLOUDMACHINEINSTANCE = 'PublicCloudMachineInstance'
    SAMLSSO = 'SamlSso'
    SAPHANADB = 'SapHanaDb'
    SAPHANASYSTEM = 'SapHanaSystem'
    SHAREFILESET = 'ShareFileset'
    SLADOMAIN = 'SlaDomain'
    SMBDOMAIN = 'SmbDomain'
    STORAGEARRAY = 'StorageArray'
    STORAGEARRAYVOLUMEGROUP = 'StorageArrayVolumeGroup'
    STORM = 'Storm'
    SUPPORTBUNDLE = 'SupportBundle'
    UNKNOWNOBJECTTYPE = 'UnknownObjectType'
    UPGRADE = 'Upgrade'
    USERACTIONAUDIT = 'UserActionAudit'
    VCD = 'Vcd'
    VCDVAPP = 'VcdVapp'
    VCENTER = 'Vcenter'
    VMWAREVM = 'VmwareVm'
    VOLUMEGROUP = 'VolumeGroup'
    WINDOWSHOST = 'WindowsHost'
    WINDOWSFILESET = 'WindowsFileset'

    def __init__(self):
        """ObjectTypeV1 - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectTypeV1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObjectTypeV1 of this ObjectTypeV1.
        """
        return util.deserialize_model(dikt, cls)
