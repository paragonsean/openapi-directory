# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.async_request_status import AsyncRequestStatus
from openapi_server.models.host_share_detail import HostShareDetail
from openapi_server import util


class BulkShareAddResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, refresh_job_status: AsyncRequestStatus=None, shares_detail: List[HostShareDetail]=None):
        """BulkShareAddResponse - a model defined in OpenAPI

        :param refresh_job_status: The refresh_job_status of this BulkShareAddResponse.
        :param shares_detail: The shares_detail of this BulkShareAddResponse.
        """
        self.openapi_types = {
            'refresh_job_status': AsyncRequestStatus,
            'shares_detail': List[HostShareDetail]
        }

        self.attribute_map = {
            'refresh_job_status': 'refreshJobStatus',
            'shares_detail': 'sharesDetail'
        }

        self._refresh_job_status = refresh_job_status
        self._shares_detail = shares_detail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkShareAddResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkShareAddResponse of this BulkShareAddResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def refresh_job_status(self):
        """Gets the refresh_job_status of this BulkShareAddResponse.


        :return: The refresh_job_status of this BulkShareAddResponse.
        :rtype: AsyncRequestStatus
        """
        return self._refresh_job_status

    @refresh_job_status.setter
    def refresh_job_status(self, refresh_job_status):
        """Sets the refresh_job_status of this BulkShareAddResponse.


        :param refresh_job_status: The refresh_job_status of this BulkShareAddResponse.
        :type refresh_job_status: AsyncRequestStatus
        """
        if refresh_job_status is None:
            raise ValueError("Invalid value for `refresh_job_status`, must not be `None`")

        self._refresh_job_status = refresh_job_status

    @property
    def shares_detail(self):
        """Gets the shares_detail of this BulkShareAddResponse.

        Details of created shares.

        :return: The shares_detail of this BulkShareAddResponse.
        :rtype: List[HostShareDetail]
        """
        return self._shares_detail

    @shares_detail.setter
    def shares_detail(self, shares_detail):
        """Sets the shares_detail of this BulkShareAddResponse.

        Details of created shares.

        :param shares_detail: The shares_detail of this BulkShareAddResponse.
        :type shares_detail: List[HostShareDetail]
        """
        if shares_detail is None:
            raise ValueError("Invalid value for `shares_detail`, must not be `None`")

        self._shares_detail = shares_detail
