# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HostHierarchyObjectDescendantCount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, share: int=None):
        """HostHierarchyObjectDescendantCount - a model defined in OpenAPI

        :param share: The share of this HostHierarchyObjectDescendantCount.
        """
        self.openapi_types = {
            'share': int
        }

        self.attribute_map = {
            'share': 'share'
        }

        self._share = share

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HostHierarchyObjectDescendantCount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HostHierarchyObjectDescendantCount of this HostHierarchyObjectDescendantCount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def share(self):
        """Gets the share of this HostHierarchyObjectDescendantCount.

        Number of descendant share objects in a specified hierarchy.

        :return: The share of this HostHierarchyObjectDescendantCount.
        :rtype: int
        """
        return self._share

    @share.setter
    def share(self, share):
        """Sets the share of this HostHierarchyObjectDescendantCount.

        Number of descendant share objects in a specified hierarchy.

        :param share: The share of this HostHierarchyObjectDescendantCount.
        :type share: int
        """

        self._share = share
