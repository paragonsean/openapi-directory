# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.frequency_config import FrequencyConfig
from openapi_server.models.monthly_config import MonthlyConfig
from openapi_server.models.quarterly_config import QuarterlyConfig
from openapi_server.models.weekly_config import WeeklyConfig
from openapi_server.models.yearly_config import YearlyConfig
from openapi_server import util


class SlaFrequencyV2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, daily: FrequencyConfig=None, hourly: FrequencyConfig=None, minute: FrequencyConfig=None, monthly: MonthlyConfig=None, quarterly: QuarterlyConfig=None, weekly: WeeklyConfig=None, yearly: YearlyConfig=None):
        """SlaFrequencyV2 - a model defined in OpenAPI

        :param daily: The daily of this SlaFrequencyV2.
        :param hourly: The hourly of this SlaFrequencyV2.
        :param minute: The minute of this SlaFrequencyV2.
        :param monthly: The monthly of this SlaFrequencyV2.
        :param quarterly: The quarterly of this SlaFrequencyV2.
        :param weekly: The weekly of this SlaFrequencyV2.
        :param yearly: The yearly of this SlaFrequencyV2.
        """
        self.openapi_types = {
            'daily': FrequencyConfig,
            'hourly': FrequencyConfig,
            'minute': FrequencyConfig,
            'monthly': MonthlyConfig,
            'quarterly': QuarterlyConfig,
            'weekly': WeeklyConfig,
            'yearly': YearlyConfig
        }

        self.attribute_map = {
            'daily': 'daily',
            'hourly': 'hourly',
            'minute': 'minute',
            'monthly': 'monthly',
            'quarterly': 'quarterly',
            'weekly': 'weekly',
            'yearly': 'yearly'
        }

        self._daily = daily
        self._hourly = hourly
        self._minute = minute
        self._monthly = monthly
        self._quarterly = quarterly
        self._weekly = weekly
        self._yearly = yearly

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlaFrequencyV2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SlaFrequencyV2 of this SlaFrequencyV2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def daily(self):
        """Gets the daily of this SlaFrequencyV2.


        :return: The daily of this SlaFrequencyV2.
        :rtype: FrequencyConfig
        """
        return self._daily

    @daily.setter
    def daily(self, daily):
        """Sets the daily of this SlaFrequencyV2.


        :param daily: The daily of this SlaFrequencyV2.
        :type daily: FrequencyConfig
        """

        self._daily = daily

    @property
    def hourly(self):
        """Gets the hourly of this SlaFrequencyV2.


        :return: The hourly of this SlaFrequencyV2.
        :rtype: FrequencyConfig
        """
        return self._hourly

    @hourly.setter
    def hourly(self, hourly):
        """Sets the hourly of this SlaFrequencyV2.


        :param hourly: The hourly of this SlaFrequencyV2.
        :type hourly: FrequencyConfig
        """

        self._hourly = hourly

    @property
    def minute(self):
        """Gets the minute of this SlaFrequencyV2.


        :return: The minute of this SlaFrequencyV2.
        :rtype: FrequencyConfig
        """
        return self._minute

    @minute.setter
    def minute(self, minute):
        """Sets the minute of this SlaFrequencyV2.


        :param minute: The minute of this SlaFrequencyV2.
        :type minute: FrequencyConfig
        """

        self._minute = minute

    @property
    def monthly(self):
        """Gets the monthly of this SlaFrequencyV2.


        :return: The monthly of this SlaFrequencyV2.
        :rtype: MonthlyConfig
        """
        return self._monthly

    @monthly.setter
    def monthly(self, monthly):
        """Sets the monthly of this SlaFrequencyV2.


        :param monthly: The monthly of this SlaFrequencyV2.
        :type monthly: MonthlyConfig
        """

        self._monthly = monthly

    @property
    def quarterly(self):
        """Gets the quarterly of this SlaFrequencyV2.


        :return: The quarterly of this SlaFrequencyV2.
        :rtype: QuarterlyConfig
        """
        return self._quarterly

    @quarterly.setter
    def quarterly(self, quarterly):
        """Sets the quarterly of this SlaFrequencyV2.


        :param quarterly: The quarterly of this SlaFrequencyV2.
        :type quarterly: QuarterlyConfig
        """

        self._quarterly = quarterly

    @property
    def weekly(self):
        """Gets the weekly of this SlaFrequencyV2.


        :return: The weekly of this SlaFrequencyV2.
        :rtype: WeeklyConfig
        """
        return self._weekly

    @weekly.setter
    def weekly(self, weekly):
        """Sets the weekly of this SlaFrequencyV2.


        :param weekly: The weekly of this SlaFrequencyV2.
        :type weekly: WeeklyConfig
        """

        self._weekly = weekly

    @property
    def yearly(self):
        """Gets the yearly of this SlaFrequencyV2.


        :return: The yearly of this SlaFrequencyV2.
        :rtype: YearlyConfig
        """
        return self._yearly

    @yearly.setter
    def yearly(self, yearly):
        """Sets the yearly of this SlaFrequencyV2.


        :param yearly: The yearly of this SlaFrequencyV2.
        :type yearly: YearlyConfig
        """

        self._yearly = yearly
