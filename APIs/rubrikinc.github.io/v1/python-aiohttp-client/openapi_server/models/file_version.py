# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_mode: str=None, last_modified: str=None, size: int=None, snapshot_id: str=None, source: str=None):
        """FileVersion - a model defined in OpenAPI

        :param file_mode: The file_mode of this FileVersion.
        :param last_modified: The last_modified of this FileVersion.
        :param size: The size of this FileVersion.
        :param snapshot_id: The snapshot_id of this FileVersion.
        :param source: The source of this FileVersion.
        """
        self.openapi_types = {
            'file_mode': str,
            'last_modified': str,
            'size': int,
            'snapshot_id': str,
            'source': str
        }

        self.attribute_map = {
            'file_mode': 'fileMode',
            'last_modified': 'lastModified',
            'size': 'size',
            'snapshot_id': 'snapshotId',
            'source': 'source'
        }

        self._file_mode = file_mode
        self._last_modified = last_modified
        self._size = size
        self._snapshot_id = snapshot_id
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileVersion of this FileVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_mode(self):
        """Gets the file_mode of this FileVersion.

        The type of file, either a regular file or a directory.

        :return: The file_mode of this FileVersion.
        :rtype: str
        """
        return self._file_mode

    @file_mode.setter
    def file_mode(self, file_mode):
        """Sets the file_mode of this FileVersion.

        The type of file, either a regular file or a directory.

        :param file_mode: The file_mode of this FileVersion.
        :type file_mode: str
        """

        self._file_mode = file_mode

    @property
    def last_modified(self):
        """Gets the last_modified of this FileVersion.


        :return: The last_modified of this FileVersion.
        :rtype: str
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this FileVersion.


        :param last_modified: The last_modified of this FileVersion.
        :type last_modified: str
        """

        self._last_modified = last_modified

    @property
    def size(self):
        """Gets the size of this FileVersion.


        :return: The size of this FileVersion.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this FileVersion.


        :param size: The size of this FileVersion.
        :type size: int
        """

        self._size = size

    @property
    def snapshot_id(self):
        """Gets the snapshot_id of this FileVersion.

        The snapshot this file belongs to.

        :return: The snapshot_id of this FileVersion.
        :rtype: str
        """
        return self._snapshot_id

    @snapshot_id.setter
    def snapshot_id(self, snapshot_id):
        """Sets the snapshot_id of this FileVersion.

        The snapshot this file belongs to.

        :param snapshot_id: The snapshot_id of this FileVersion.
        :type snapshot_id: str
        """

        self._snapshot_id = snapshot_id

    @property
    def source(self):
        """Gets the source of this FileVersion.

        The location where the file is stored, either in the cloud or locally.

        :return: The source of this FileVersion.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this FileVersion.

        The location where the file is stored, either in the cloud or locally.

        :param source: The source of this FileVersion.
        :type source: str
        """

        self._source = source
