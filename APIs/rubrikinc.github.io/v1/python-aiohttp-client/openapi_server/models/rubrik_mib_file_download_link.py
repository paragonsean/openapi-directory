# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RubrikMibFileDownloadLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, download_link: str=None):
        """RubrikMibFileDownloadLink - a model defined in OpenAPI

        :param download_link: The download_link of this RubrikMibFileDownloadLink.
        """
        self.openapi_types = {
            'download_link': str
        }

        self.attribute_map = {
            'download_link': 'downloadLink'
        }

        self._download_link = download_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RubrikMibFileDownloadLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RubrikMibFileDownloadLink of this RubrikMibFileDownloadLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def download_link(self):
        """Gets the download_link of this RubrikMibFileDownloadLink.

        Rubrik MIB file download link.

        :return: The download_link of this RubrikMibFileDownloadLink.
        :rtype: str
        """
        return self._download_link

    @download_link.setter
    def download_link(self, download_link):
        """Sets the download_link of this RubrikMibFileDownloadLink.

        Rubrik MIB file download link.

        :param download_link: The download_link of this RubrikMibFileDownloadLink.
        :type download_link: str
        """
        if download_link is None:
            raise ValueError("Invalid value for `download_link`, must not be `None`")

        self._download_link = download_link
