# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.host_configuration_property_enabled import HostConfigurationPropertyEnabled
from openapi_server import util


class MssqlHostConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_database_batch_snapshots: HostConfigurationPropertyEnabled=None, enable_group_fetch: HostConfigurationPropertyEnabled=None, enable_vdi: HostConfigurationPropertyEnabled=None, enable_vdi_db: HostConfigurationPropertyEnabled=None, file_restore_read_parallelism: int=None, file_restore_write_parallelism: int=None, file_transfer_parallelism: int=None, mssql_default_max_data_streams_per_database: int=None, physical_host_database_restore_throttle_max_ref_count: int=None, physical_host_log_backup_throttle_max_ref_count: int=None, throttle_physical_host_max_ref_count: int=None):
        """MssqlHostConfiguration - a model defined in OpenAPI

        :param enable_database_batch_snapshots: The enable_database_batch_snapshots of this MssqlHostConfiguration.
        :param enable_group_fetch: The enable_group_fetch of this MssqlHostConfiguration.
        :param enable_vdi: The enable_vdi of this MssqlHostConfiguration.
        :param enable_vdi_db: The enable_vdi_db of this MssqlHostConfiguration.
        :param file_restore_read_parallelism: The file_restore_read_parallelism of this MssqlHostConfiguration.
        :param file_restore_write_parallelism: The file_restore_write_parallelism of this MssqlHostConfiguration.
        :param file_transfer_parallelism: The file_transfer_parallelism of this MssqlHostConfiguration.
        :param mssql_default_max_data_streams_per_database: The mssql_default_max_data_streams_per_database of this MssqlHostConfiguration.
        :param physical_host_database_restore_throttle_max_ref_count: The physical_host_database_restore_throttle_max_ref_count of this MssqlHostConfiguration.
        :param physical_host_log_backup_throttle_max_ref_count: The physical_host_log_backup_throttle_max_ref_count of this MssqlHostConfiguration.
        :param throttle_physical_host_max_ref_count: The throttle_physical_host_max_ref_count of this MssqlHostConfiguration.
        """
        self.openapi_types = {
            'enable_database_batch_snapshots': HostConfigurationPropertyEnabled,
            'enable_group_fetch': HostConfigurationPropertyEnabled,
            'enable_vdi': HostConfigurationPropertyEnabled,
            'enable_vdi_db': HostConfigurationPropertyEnabled,
            'file_restore_read_parallelism': int,
            'file_restore_write_parallelism': int,
            'file_transfer_parallelism': int,
            'mssql_default_max_data_streams_per_database': int,
            'physical_host_database_restore_throttle_max_ref_count': int,
            'physical_host_log_backup_throttle_max_ref_count': int,
            'throttle_physical_host_max_ref_count': int
        }

        self.attribute_map = {
            'enable_database_batch_snapshots': 'enableDatabaseBatchSnapshots',
            'enable_group_fetch': 'enableGroupFetch',
            'enable_vdi': 'enableVdi',
            'enable_vdi_db': 'enableVdiDb',
            'file_restore_read_parallelism': 'fileRestoreReadParallelism',
            'file_restore_write_parallelism': 'fileRestoreWriteParallelism',
            'file_transfer_parallelism': 'fileTransferParallelism',
            'mssql_default_max_data_streams_per_database': 'mssqlDefaultMaxDataStreamsPerDatabase',
            'physical_host_database_restore_throttle_max_ref_count': 'physicalHostDatabaseRestoreThrottleMaxRefCount',
            'physical_host_log_backup_throttle_max_ref_count': 'physicalHostLogBackupThrottleMaxRefCount',
            'throttle_physical_host_max_ref_count': 'throttlePhysicalHostMaxRefCount'
        }

        self._enable_database_batch_snapshots = enable_database_batch_snapshots
        self._enable_group_fetch = enable_group_fetch
        self._enable_vdi = enable_vdi
        self._enable_vdi_db = enable_vdi_db
        self._file_restore_read_parallelism = file_restore_read_parallelism
        self._file_restore_write_parallelism = file_restore_write_parallelism
        self._file_transfer_parallelism = file_transfer_parallelism
        self._mssql_default_max_data_streams_per_database = mssql_default_max_data_streams_per_database
        self._physical_host_database_restore_throttle_max_ref_count = physical_host_database_restore_throttle_max_ref_count
        self._physical_host_log_backup_throttle_max_ref_count = physical_host_log_backup_throttle_max_ref_count
        self._throttle_physical_host_max_ref_count = throttle_physical_host_max_ref_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MssqlHostConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MssqlHostConfiguration of this MssqlHostConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_database_batch_snapshots(self):
        """Gets the enable_database_batch_snapshots of this MssqlHostConfiguration.


        :return: The enable_database_batch_snapshots of this MssqlHostConfiguration.
        :rtype: HostConfigurationPropertyEnabled
        """
        return self._enable_database_batch_snapshots

    @enable_database_batch_snapshots.setter
    def enable_database_batch_snapshots(self, enable_database_batch_snapshots):
        """Sets the enable_database_batch_snapshots of this MssqlHostConfiguration.


        :param enable_database_batch_snapshots: The enable_database_batch_snapshots of this MssqlHostConfiguration.
        :type enable_database_batch_snapshots: HostConfigurationPropertyEnabled
        """

        self._enable_database_batch_snapshots = enable_database_batch_snapshots

    @property
    def enable_group_fetch(self):
        """Gets the enable_group_fetch of this MssqlHostConfiguration.


        :return: The enable_group_fetch of this MssqlHostConfiguration.
        :rtype: HostConfigurationPropertyEnabled
        """
        return self._enable_group_fetch

    @enable_group_fetch.setter
    def enable_group_fetch(self, enable_group_fetch):
        """Sets the enable_group_fetch of this MssqlHostConfiguration.


        :param enable_group_fetch: The enable_group_fetch of this MssqlHostConfiguration.
        :type enable_group_fetch: HostConfigurationPropertyEnabled
        """

        self._enable_group_fetch = enable_group_fetch

    @property
    def enable_vdi(self):
        """Gets the enable_vdi of this MssqlHostConfiguration.


        :return: The enable_vdi of this MssqlHostConfiguration.
        :rtype: HostConfigurationPropertyEnabled
        """
        return self._enable_vdi

    @enable_vdi.setter
    def enable_vdi(self, enable_vdi):
        """Sets the enable_vdi of this MssqlHostConfiguration.


        :param enable_vdi: The enable_vdi of this MssqlHostConfiguration.
        :type enable_vdi: HostConfigurationPropertyEnabled
        """

        self._enable_vdi = enable_vdi

    @property
    def enable_vdi_db(self):
        """Gets the enable_vdi_db of this MssqlHostConfiguration.


        :return: The enable_vdi_db of this MssqlHostConfiguration.
        :rtype: HostConfigurationPropertyEnabled
        """
        return self._enable_vdi_db

    @enable_vdi_db.setter
    def enable_vdi_db(self, enable_vdi_db):
        """Sets the enable_vdi_db of this MssqlHostConfiguration.


        :param enable_vdi_db: The enable_vdi_db of this MssqlHostConfiguration.
        :type enable_vdi_db: HostConfigurationPropertyEnabled
        """

        self._enable_vdi_db = enable_vdi_db

    @property
    def file_restore_read_parallelism(self):
        """Gets the file_restore_read_parallelism of this MssqlHostConfiguration.

        Number of concurrent read requests for restoring a file from the Rubrik cluster to a remote host.

        :return: The file_restore_read_parallelism of this MssqlHostConfiguration.
        :rtype: int
        """
        return self._file_restore_read_parallelism

    @file_restore_read_parallelism.setter
    def file_restore_read_parallelism(self, file_restore_read_parallelism):
        """Sets the file_restore_read_parallelism of this MssqlHostConfiguration.

        Number of concurrent read requests for restoring a file from the Rubrik cluster to a remote host.

        :param file_restore_read_parallelism: The file_restore_read_parallelism of this MssqlHostConfiguration.
        :type file_restore_read_parallelism: int
        """

        self._file_restore_read_parallelism = file_restore_read_parallelism

    @property
    def file_restore_write_parallelism(self):
        """Gets the file_restore_write_parallelism of this MssqlHostConfiguration.

        Number of concurrent write requests for restoring a file from the Rubrik cluster to a remote host.

        :return: The file_restore_write_parallelism of this MssqlHostConfiguration.
        :rtype: int
        """
        return self._file_restore_write_parallelism

    @file_restore_write_parallelism.setter
    def file_restore_write_parallelism(self, file_restore_write_parallelism):
        """Sets the file_restore_write_parallelism of this MssqlHostConfiguration.

        Number of concurrent write requests for restoring a file from the Rubrik cluster to a remote host.

        :param file_restore_write_parallelism: The file_restore_write_parallelism of this MssqlHostConfiguration.
        :type file_restore_write_parallelism: int
        """

        self._file_restore_write_parallelism = file_restore_write_parallelism

    @property
    def file_transfer_parallelism(self):
        """Gets the file_transfer_parallelism of this MssqlHostConfiguration.

        Number of concurrent requests for transferring a file from a remote host to the Rubrik cluster.

        :return: The file_transfer_parallelism of this MssqlHostConfiguration.
        :rtype: int
        """
        return self._file_transfer_parallelism

    @file_transfer_parallelism.setter
    def file_transfer_parallelism(self, file_transfer_parallelism):
        """Sets the file_transfer_parallelism of this MssqlHostConfiguration.

        Number of concurrent requests for transferring a file from a remote host to the Rubrik cluster.

        :param file_transfer_parallelism: The file_transfer_parallelism of this MssqlHostConfiguration.
        :type file_transfer_parallelism: int
        """

        self._file_transfer_parallelism = file_transfer_parallelism

    @property
    def mssql_default_max_data_streams_per_database(self):
        """Gets the mssql_default_max_data_streams_per_database of this MssqlHostConfiguration.

        The default value for maximum number of data streams per database.

        :return: The mssql_default_max_data_streams_per_database of this MssqlHostConfiguration.
        :rtype: int
        """
        return self._mssql_default_max_data_streams_per_database

    @mssql_default_max_data_streams_per_database.setter
    def mssql_default_max_data_streams_per_database(self, mssql_default_max_data_streams_per_database):
        """Sets the mssql_default_max_data_streams_per_database of this MssqlHostConfiguration.

        The default value for maximum number of data streams per database.

        :param mssql_default_max_data_streams_per_database: The mssql_default_max_data_streams_per_database of this MssqlHostConfiguration.
        :type mssql_default_max_data_streams_per_database: int
        """

        self._mssql_default_max_data_streams_per_database = mssql_default_max_data_streams_per_database

    @property
    def physical_host_database_restore_throttle_max_ref_count(self):
        """Gets the physical_host_database_restore_throttle_max_ref_count of this MssqlHostConfiguration.

        The maximum number of concurrent database restore job running on a host.

        :return: The physical_host_database_restore_throttle_max_ref_count of this MssqlHostConfiguration.
        :rtype: int
        """
        return self._physical_host_database_restore_throttle_max_ref_count

    @physical_host_database_restore_throttle_max_ref_count.setter
    def physical_host_database_restore_throttle_max_ref_count(self, physical_host_database_restore_throttle_max_ref_count):
        """Sets the physical_host_database_restore_throttle_max_ref_count of this MssqlHostConfiguration.

        The maximum number of concurrent database restore job running on a host.

        :param physical_host_database_restore_throttle_max_ref_count: The physical_host_database_restore_throttle_max_ref_count of this MssqlHostConfiguration.
        :type physical_host_database_restore_throttle_max_ref_count: int
        """

        self._physical_host_database_restore_throttle_max_ref_count = physical_host_database_restore_throttle_max_ref_count

    @property
    def physical_host_log_backup_throttle_max_ref_count(self):
        """Gets the physical_host_log_backup_throttle_max_ref_count of this MssqlHostConfiguration.

        Maximum number of concurrent SQL Server log backup jobs per physical host.

        :return: The physical_host_log_backup_throttle_max_ref_count of this MssqlHostConfiguration.
        :rtype: int
        """
        return self._physical_host_log_backup_throttle_max_ref_count

    @physical_host_log_backup_throttle_max_ref_count.setter
    def physical_host_log_backup_throttle_max_ref_count(self, physical_host_log_backup_throttle_max_ref_count):
        """Sets the physical_host_log_backup_throttle_max_ref_count of this MssqlHostConfiguration.

        Maximum number of concurrent SQL Server log backup jobs per physical host.

        :param physical_host_log_backup_throttle_max_ref_count: The physical_host_log_backup_throttle_max_ref_count of this MssqlHostConfiguration.
        :type physical_host_log_backup_throttle_max_ref_count: int
        """

        self._physical_host_log_backup_throttle_max_ref_count = physical_host_log_backup_throttle_max_ref_count

    @property
    def throttle_physical_host_max_ref_count(self):
        """Gets the throttle_physical_host_max_ref_count of this MssqlHostConfiguration.

        Maximum number of concurrent snapshots per physical host.

        :return: The throttle_physical_host_max_ref_count of this MssqlHostConfiguration.
        :rtype: int
        """
        return self._throttle_physical_host_max_ref_count

    @throttle_physical_host_max_ref_count.setter
    def throttle_physical_host_max_ref_count(self, throttle_physical_host_max_ref_count):
        """Sets the throttle_physical_host_max_ref_count of this MssqlHostConfiguration.

        Maximum number of concurrent snapshots per physical host.

        :param throttle_physical_host_max_ref_count: The throttle_physical_host_max_ref_count of this MssqlHostConfiguration.
        :type throttle_physical_host_max_ref_count: int
        """

        self._throttle_physical_host_max_ref_count = throttle_physical_host_max_ref_count
