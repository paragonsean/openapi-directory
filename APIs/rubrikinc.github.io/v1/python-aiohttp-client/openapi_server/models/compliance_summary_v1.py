# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComplianceSummaryV1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_awaiting_first_full_snapshot: int=None, number_of_in_compliance_snapshots: int=None, number_of_out_of_compliance_snapshots: int=None, percent_of_in_compliance_snapshots: float=None, percent_of_out_of_compliance_snapshots: float=None, total_protected: int=None, updated_time: datetime=None):
        """ComplianceSummaryV1 - a model defined in OpenAPI

        :param number_of_awaiting_first_full_snapshot: The number_of_awaiting_first_full_snapshot of this ComplianceSummaryV1.
        :param number_of_in_compliance_snapshots: The number_of_in_compliance_snapshots of this ComplianceSummaryV1.
        :param number_of_out_of_compliance_snapshots: The number_of_out_of_compliance_snapshots of this ComplianceSummaryV1.
        :param percent_of_in_compliance_snapshots: The percent_of_in_compliance_snapshots of this ComplianceSummaryV1.
        :param percent_of_out_of_compliance_snapshots: The percent_of_out_of_compliance_snapshots of this ComplianceSummaryV1.
        :param total_protected: The total_protected of this ComplianceSummaryV1.
        :param updated_time: The updated_time of this ComplianceSummaryV1.
        """
        self.openapi_types = {
            'number_of_awaiting_first_full_snapshot': int,
            'number_of_in_compliance_snapshots': int,
            'number_of_out_of_compliance_snapshots': int,
            'percent_of_in_compliance_snapshots': float,
            'percent_of_out_of_compliance_snapshots': float,
            'total_protected': int,
            'updated_time': datetime
        }

        self.attribute_map = {
            'number_of_awaiting_first_full_snapshot': 'numberOfAwaitingFirstFullSnapshot',
            'number_of_in_compliance_snapshots': 'numberOfInComplianceSnapshots',
            'number_of_out_of_compliance_snapshots': 'numberOfOutOfComplianceSnapshots',
            'percent_of_in_compliance_snapshots': 'percentOfInComplianceSnapshots',
            'percent_of_out_of_compliance_snapshots': 'percentOfOutOfComplianceSnapshots',
            'total_protected': 'totalProtected',
            'updated_time': 'updatedTime'
        }

        self._number_of_awaiting_first_full_snapshot = number_of_awaiting_first_full_snapshot
        self._number_of_in_compliance_snapshots = number_of_in_compliance_snapshots
        self._number_of_out_of_compliance_snapshots = number_of_out_of_compliance_snapshots
        self._percent_of_in_compliance_snapshots = percent_of_in_compliance_snapshots
        self._percent_of_out_of_compliance_snapshots = percent_of_out_of_compliance_snapshots
        self._total_protected = total_protected
        self._updated_time = updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceSummaryV1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComplianceSummaryV1 of this ComplianceSummaryV1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_awaiting_first_full_snapshot(self):
        """Gets the number_of_awaiting_first_full_snapshot of this ComplianceSummaryV1.

        Number of objects awaiting first full backup.

        :return: The number_of_awaiting_first_full_snapshot of this ComplianceSummaryV1.
        :rtype: int
        """
        return self._number_of_awaiting_first_full_snapshot

    @number_of_awaiting_first_full_snapshot.setter
    def number_of_awaiting_first_full_snapshot(self, number_of_awaiting_first_full_snapshot):
        """Sets the number_of_awaiting_first_full_snapshot of this ComplianceSummaryV1.

        Number of objects awaiting first full backup.

        :param number_of_awaiting_first_full_snapshot: The number_of_awaiting_first_full_snapshot of this ComplianceSummaryV1.
        :type number_of_awaiting_first_full_snapshot: int
        """
        if number_of_awaiting_first_full_snapshot is None:
            raise ValueError("Invalid value for `number_of_awaiting_first_full_snapshot`, must not be `None`")

        self._number_of_awaiting_first_full_snapshot = number_of_awaiting_first_full_snapshot

    @property
    def number_of_in_compliance_snapshots(self):
        """Gets the number_of_in_compliance_snapshots of this ComplianceSummaryV1.

        Number of objects in compliance.

        :return: The number_of_in_compliance_snapshots of this ComplianceSummaryV1.
        :rtype: int
        """
        return self._number_of_in_compliance_snapshots

    @number_of_in_compliance_snapshots.setter
    def number_of_in_compliance_snapshots(self, number_of_in_compliance_snapshots):
        """Sets the number_of_in_compliance_snapshots of this ComplianceSummaryV1.

        Number of objects in compliance.

        :param number_of_in_compliance_snapshots: The number_of_in_compliance_snapshots of this ComplianceSummaryV1.
        :type number_of_in_compliance_snapshots: int
        """
        if number_of_in_compliance_snapshots is None:
            raise ValueError("Invalid value for `number_of_in_compliance_snapshots`, must not be `None`")

        self._number_of_in_compliance_snapshots = number_of_in_compliance_snapshots

    @property
    def number_of_out_of_compliance_snapshots(self):
        """Gets the number_of_out_of_compliance_snapshots of this ComplianceSummaryV1.

        Number of objects out of compliance.

        :return: The number_of_out_of_compliance_snapshots of this ComplianceSummaryV1.
        :rtype: int
        """
        return self._number_of_out_of_compliance_snapshots

    @number_of_out_of_compliance_snapshots.setter
    def number_of_out_of_compliance_snapshots(self, number_of_out_of_compliance_snapshots):
        """Sets the number_of_out_of_compliance_snapshots of this ComplianceSummaryV1.

        Number of objects out of compliance.

        :param number_of_out_of_compliance_snapshots: The number_of_out_of_compliance_snapshots of this ComplianceSummaryV1.
        :type number_of_out_of_compliance_snapshots: int
        """
        if number_of_out_of_compliance_snapshots is None:
            raise ValueError("Invalid value for `number_of_out_of_compliance_snapshots`, must not be `None`")

        self._number_of_out_of_compliance_snapshots = number_of_out_of_compliance_snapshots

    @property
    def percent_of_in_compliance_snapshots(self):
        """Gets the percent_of_in_compliance_snapshots of this ComplianceSummaryV1.

        Percent of objects in compliance.

        :return: The percent_of_in_compliance_snapshots of this ComplianceSummaryV1.
        :rtype: float
        """
        return self._percent_of_in_compliance_snapshots

    @percent_of_in_compliance_snapshots.setter
    def percent_of_in_compliance_snapshots(self, percent_of_in_compliance_snapshots):
        """Sets the percent_of_in_compliance_snapshots of this ComplianceSummaryV1.

        Percent of objects in compliance.

        :param percent_of_in_compliance_snapshots: The percent_of_in_compliance_snapshots of this ComplianceSummaryV1.
        :type percent_of_in_compliance_snapshots: float
        """
        if percent_of_in_compliance_snapshots is None:
            raise ValueError("Invalid value for `percent_of_in_compliance_snapshots`, must not be `None`")

        self._percent_of_in_compliance_snapshots = percent_of_in_compliance_snapshots

    @property
    def percent_of_out_of_compliance_snapshots(self):
        """Gets the percent_of_out_of_compliance_snapshots of this ComplianceSummaryV1.

        Percent of objects out of compliance.

        :return: The percent_of_out_of_compliance_snapshots of this ComplianceSummaryV1.
        :rtype: float
        """
        return self._percent_of_out_of_compliance_snapshots

    @percent_of_out_of_compliance_snapshots.setter
    def percent_of_out_of_compliance_snapshots(self, percent_of_out_of_compliance_snapshots):
        """Sets the percent_of_out_of_compliance_snapshots of this ComplianceSummaryV1.

        Percent of objects out of compliance.

        :param percent_of_out_of_compliance_snapshots: The percent_of_out_of_compliance_snapshots of this ComplianceSummaryV1.
        :type percent_of_out_of_compliance_snapshots: float
        """
        if percent_of_out_of_compliance_snapshots is None:
            raise ValueError("Invalid value for `percent_of_out_of_compliance_snapshots`, must not be `None`")

        self._percent_of_out_of_compliance_snapshots = percent_of_out_of_compliance_snapshots

    @property
    def total_protected(self):
        """Gets the total_protected of this ComplianceSummaryV1.

        Total number of protected objects.

        :return: The total_protected of this ComplianceSummaryV1.
        :rtype: int
        """
        return self._total_protected

    @total_protected.setter
    def total_protected(self, total_protected):
        """Sets the total_protected of this ComplianceSummaryV1.

        Total number of protected objects.

        :param total_protected: The total_protected of this ComplianceSummaryV1.
        :type total_protected: int
        """
        if total_protected is None:
            raise ValueError("Invalid value for `total_protected`, must not be `None`")

        self._total_protected = total_protected

    @property
    def updated_time(self):
        """Gets the updated_time of this ComplianceSummaryV1.

        Last updated time.

        :return: The updated_time of this ComplianceSummaryV1.
        :rtype: datetime
        """
        return self._updated_time

    @updated_time.setter
    def updated_time(self, updated_time):
        """Sets the updated_time of this ComplianceSummaryV1.

        Last updated time.

        :param updated_time: The updated_time of this ComplianceSummaryV1.
        :type updated_time: datetime
        """

        self._updated_time = updated_time
