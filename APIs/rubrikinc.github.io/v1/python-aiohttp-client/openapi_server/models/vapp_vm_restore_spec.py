# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vapp_vm_network_connection import VappVmNetworkConnection
from openapi_server import util


class VappVmRestoreSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, network_connections: List[VappVmNetworkConnection]=None, storage_policy_id: str=None, vcd_moid: str=None):
        """VappVmRestoreSpec - a model defined in OpenAPI

        :param name: The name of this VappVmRestoreSpec.
        :param network_connections: The network_connections of this VappVmRestoreSpec.
        :param storage_policy_id: The storage_policy_id of this VappVmRestoreSpec.
        :param vcd_moid: The vcd_moid of this VappVmRestoreSpec.
        """
        self.openapi_types = {
            'name': str,
            'network_connections': List[VappVmNetworkConnection],
            'storage_policy_id': str,
            'vcd_moid': str
        }

        self.attribute_map = {
            'name': 'name',
            'network_connections': 'networkConnections',
            'storage_policy_id': 'storagePolicyId',
            'vcd_moid': 'vcdMoid'
        }

        self._name = name
        self._network_connections = network_connections
        self._storage_policy_id = storage_policy_id
        self._vcd_moid = vcd_moid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VappVmRestoreSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VappVmRestoreSpec of this VappVmRestoreSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this VappVmRestoreSpec.

        Name of the specified vApp virtual machine within vCloud.

        :return: The name of this VappVmRestoreSpec.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VappVmRestoreSpec.

        Name of the specified vApp virtual machine within vCloud.

        :param name: The name of this VappVmRestoreSpec.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def network_connections(self):
        """Gets the network_connections of this VappVmRestoreSpec.


        :return: The network_connections of this VappVmRestoreSpec.
        :rtype: List[VappVmNetworkConnection]
        """
        return self._network_connections

    @network_connections.setter
    def network_connections(self, network_connections):
        """Sets the network_connections of this VappVmRestoreSpec.


        :param network_connections: The network_connections of this VappVmRestoreSpec.
        :type network_connections: List[VappVmNetworkConnection]
        """
        if network_connections is None:
            raise ValueError("Invalid value for `network_connections`, must not be `None`")

        self._network_connections = network_connections

    @property
    def storage_policy_id(self):
        """Gets the storage_policy_id of this VappVmRestoreSpec.

        Storage policy where this vApp virtual machine should be restored to. If omitted, the virtual machines will be exported to the default storage policy of the target Organization VDC.

        :return: The storage_policy_id of this VappVmRestoreSpec.
        :rtype: str
        """
        return self._storage_policy_id

    @storage_policy_id.setter
    def storage_policy_id(self, storage_policy_id):
        """Sets the storage_policy_id of this VappVmRestoreSpec.

        Storage policy where this vApp virtual machine should be restored to. If omitted, the virtual machines will be exported to the default storage policy of the target Organization VDC.

        :param storage_policy_id: The storage_policy_id of this VappVmRestoreSpec.
        :type storage_policy_id: str
        """

        self._storage_policy_id = storage_policy_id

    @property
    def vcd_moid(self):
        """Gets the vcd_moid of this VappVmRestoreSpec.

        vCloud managed object ID (moid) of the specified vApp virtual machine.

        :return: The vcd_moid of this VappVmRestoreSpec.
        :rtype: str
        """
        return self._vcd_moid

    @vcd_moid.setter
    def vcd_moid(self, vcd_moid):
        """Sets the vcd_moid of this VappVmRestoreSpec.

        vCloud managed object ID (moid) of the specified vApp virtual machine.

        :param vcd_moid: The vcd_moid of this VappVmRestoreSpec.
        :type vcd_moid: str
        """
        if vcd_moid is None:
            raise ValueError("Invalid value for `vcd_moid`, must not be `None`")

        self._vcd_moid = vcd_moid
