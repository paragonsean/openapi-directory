# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_vapp_network_params import CreateVappNetworkParams
from openapi_server.models.vapp_network_summary import VappNetworkSummary
from openapi_server.models.vapp_vm_restore_spec import VappVmRestoreSpec
from openapi_server.models.vcd_org_vdc_storage_profile import VcdOrgVdcStorageProfile
from openapi_server import util


class VappExportOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_child_vms_with_default_network_connections: List[VappVmRestoreSpec]=None, available_storage_policies: List[VcdOrgVdcStorageProfile]=None, restorable_networks: List[CreateVappNetworkParams]=None, target_vapp_networks: List[VappNetworkSummary]=None):
        """VappExportOptions - a model defined in OpenAPI

        :param all_child_vms_with_default_network_connections: The all_child_vms_with_default_network_connections of this VappExportOptions.
        :param available_storage_policies: The available_storage_policies of this VappExportOptions.
        :param restorable_networks: The restorable_networks of this VappExportOptions.
        :param target_vapp_networks: The target_vapp_networks of this VappExportOptions.
        """
        self.openapi_types = {
            'all_child_vms_with_default_network_connections': List[VappVmRestoreSpec],
            'available_storage_policies': List[VcdOrgVdcStorageProfile],
            'restorable_networks': List[CreateVappNetworkParams],
            'target_vapp_networks': List[VappNetworkSummary]
        }

        self.attribute_map = {
            'all_child_vms_with_default_network_connections': 'allChildVmsWithDefaultNetworkConnections',
            'available_storage_policies': 'availableStoragePolicies',
            'restorable_networks': 'restorableNetworks',
            'target_vapp_networks': 'targetVappNetworks'
        }

        self._all_child_vms_with_default_network_connections = all_child_vms_with_default_network_connections
        self._available_storage_policies = available_storage_policies
        self._restorable_networks = restorable_networks
        self._target_vapp_networks = target_vapp_networks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VappExportOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VappExportOptions of this VappExportOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_child_vms_with_default_network_connections(self):
        """Gets the all_child_vms_with_default_network_connections of this VappExportOptions.

        Array containing summary information for the vApp virtual machines in the specified vApp snapshot, including the default network mappings.

        :return: The all_child_vms_with_default_network_connections of this VappExportOptions.
        :rtype: List[VappVmRestoreSpec]
        """
        return self._all_child_vms_with_default_network_connections

    @all_child_vms_with_default_network_connections.setter
    def all_child_vms_with_default_network_connections(self, all_child_vms_with_default_network_connections):
        """Sets the all_child_vms_with_default_network_connections of this VappExportOptions.

        Array containing summary information for the vApp virtual machines in the specified vApp snapshot, including the default network mappings.

        :param all_child_vms_with_default_network_connections: The all_child_vms_with_default_network_connections of this VappExportOptions.
        :type all_child_vms_with_default_network_connections: List[VappVmRestoreSpec]
        """
        if all_child_vms_with_default_network_connections is None:
            raise ValueError("Invalid value for `all_child_vms_with_default_network_connections`, must not be `None`")

        self._all_child_vms_with_default_network_connections = all_child_vms_with_default_network_connections

    @property
    def available_storage_policies(self):
        """Gets the available_storage_policies of this VappExportOptions.

        Storage policies that can be used as a target for virtual machines being exported.

        :return: The available_storage_policies of this VappExportOptions.
        :rtype: List[VcdOrgVdcStorageProfile]
        """
        return self._available_storage_policies

    @available_storage_policies.setter
    def available_storage_policies(self, available_storage_policies):
        """Sets the available_storage_policies of this VappExportOptions.

        Storage policies that can be used as a target for virtual machines being exported.

        :param available_storage_policies: The available_storage_policies of this VappExportOptions.
        :type available_storage_policies: List[VcdOrgVdcStorageProfile]
        """
        if available_storage_policies is None:
            raise ValueError("Invalid value for `available_storage_policies`, must not be `None`")

        self._available_storage_policies = available_storage_policies

    @property
    def restorable_networks(self):
        """Gets the restorable_networks of this VappExportOptions.

        Array of vApp networks in the vApp snapshot being exported that can be enabled at the export location.

        :return: The restorable_networks of this VappExportOptions.
        :rtype: List[CreateVappNetworkParams]
        """
        return self._restorable_networks

    @restorable_networks.setter
    def restorable_networks(self, restorable_networks):
        """Sets the restorable_networks of this VappExportOptions.

        Array of vApp networks in the vApp snapshot being exported that can be enabled at the export location.

        :param restorable_networks: The restorable_networks of this VappExportOptions.
        :type restorable_networks: List[CreateVappNetworkParams]
        """
        if restorable_networks is None:
            raise ValueError("Invalid value for `restorable_networks`, must not be `None`")

        self._restorable_networks = restorable_networks

    @property
    def target_vapp_networks(self):
        """Gets the target_vapp_networks of this VappExportOptions.

        Array of vApp networks at the export location that can be connected to the vApp virtual machines in the exported vApp snapshot.

        :return: The target_vapp_networks of this VappExportOptions.
        :rtype: List[VappNetworkSummary]
        """
        return self._target_vapp_networks

    @target_vapp_networks.setter
    def target_vapp_networks(self, target_vapp_networks):
        """Sets the target_vapp_networks of this VappExportOptions.

        Array of vApp networks at the export location that can be connected to the vApp virtual machines in the exported vApp snapshot.

        :param target_vapp_networks: The target_vapp_networks of this VappExportOptions.
        :type target_vapp_networks: List[VappNetworkSummary]
        """

        self._target_vapp_networks = target_vapp_networks
