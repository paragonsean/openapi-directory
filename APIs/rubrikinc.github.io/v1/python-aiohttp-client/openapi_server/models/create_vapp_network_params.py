# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateVappNetworkParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_deployed: bool=None, name: str=None, parent_network_id: str=None, new_name: str=None):
        """CreateVappNetworkParams - a model defined in OpenAPI

        :param is_deployed: The is_deployed of this CreateVappNetworkParams.
        :param name: The name of this CreateVappNetworkParams.
        :param parent_network_id: The parent_network_id of this CreateVappNetworkParams.
        :param new_name: The new_name of this CreateVappNetworkParams.
        """
        self.openapi_types = {
            'is_deployed': bool,
            'name': str,
            'parent_network_id': str,
            'new_name': str
        }

        self.attribute_map = {
            'is_deployed': 'isDeployed',
            'name': 'name',
            'parent_network_id': 'parentNetworkId',
            'new_name': 'newName'
        }

        self._is_deployed = is_deployed
        self._name = name
        self._parent_network_id = parent_network_id
        self._new_name = new_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVappNetworkParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVappNetworkParams of this CreateVappNetworkParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_deployed(self):
        """Gets the is_deployed of this CreateVappNetworkParams.

        Boolean value that indicates whether the specified vApp network object has been deployed. Value is 'true' when the vApp network object has been deployed and 'false' when it has not been deployed.

        :return: The is_deployed of this CreateVappNetworkParams.
        :rtype: bool
        """
        return self._is_deployed

    @is_deployed.setter
    def is_deployed(self, is_deployed):
        """Sets the is_deployed of this CreateVappNetworkParams.

        Boolean value that indicates whether the specified vApp network object has been deployed. Value is 'true' when the vApp network object has been deployed and 'false' when it has not been deployed.

        :param is_deployed: The is_deployed of this CreateVappNetworkParams.
        :type is_deployed: bool
        """
        if is_deployed is None:
            raise ValueError("Invalid value for `is_deployed`, must not be `None`")

        self._is_deployed = is_deployed

    @property
    def name(self):
        """Gets the name of this CreateVappNetworkParams.

        Name of the specified vApp network object.

        :return: The name of this CreateVappNetworkParams.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateVappNetworkParams.

        Name of the specified vApp network object.

        :param name: The name of this CreateVappNetworkParams.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def parent_network_id(self):
        """Gets the parent_network_id of this CreateVappNetworkParams.

        vCloud Director ID of the associated organization VDC network object. For an Isolated network, the value is empty.

        :return: The parent_network_id of this CreateVappNetworkParams.
        :rtype: str
        """
        return self._parent_network_id

    @parent_network_id.setter
    def parent_network_id(self, parent_network_id):
        """Sets the parent_network_id of this CreateVappNetworkParams.

        vCloud Director ID of the associated organization VDC network object. For an Isolated network, the value is empty.

        :param parent_network_id: The parent_network_id of this CreateVappNetworkParams.
        :type parent_network_id: str
        """

        self._parent_network_id = parent_network_id

    @property
    def new_name(self):
        """Gets the new_name of this CreateVappNetworkParams.

        Name to assign to the vApp network that is referenced by the specified new vApp network object. If a name is specified, the Rubrik REST API server uses the name to rename the vApp network within the vCloud. If the value is empty, the vApp network is not renamed.

        :return: The new_name of this CreateVappNetworkParams.
        :rtype: str
        """
        return self._new_name

    @new_name.setter
    def new_name(self, new_name):
        """Sets the new_name of this CreateVappNetworkParams.

        Name to assign to the vApp network that is referenced by the specified new vApp network object. If a name is specified, the Rubrik REST API server uses the name to rename the vApp network within the vCloud. If the value is empty, the vApp network is not renamed.

        :param new_name: The new_name of this CreateVappNetworkParams.
        :type new_name: str
        """

        self._new_name = new_name
