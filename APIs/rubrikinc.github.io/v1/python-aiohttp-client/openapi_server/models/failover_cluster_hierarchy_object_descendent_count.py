# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailoverClusterHierarchyObjectDescendentCount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failover_cluster: int=None, failover_cluster_app: int=None, fileset: int=None):
        """FailoverClusterHierarchyObjectDescendentCount - a model defined in OpenAPI

        :param failover_cluster: The failover_cluster of this FailoverClusterHierarchyObjectDescendentCount.
        :param failover_cluster_app: The failover_cluster_app of this FailoverClusterHierarchyObjectDescendentCount.
        :param fileset: The fileset of this FailoverClusterHierarchyObjectDescendentCount.
        """
        self.openapi_types = {
            'failover_cluster': int,
            'failover_cluster_app': int,
            'fileset': int
        }

        self.attribute_map = {
            'failover_cluster': 'failoverCluster',
            'failover_cluster_app': 'failoverClusterApp',
            'fileset': 'fileset'
        }

        self._failover_cluster = failover_cluster
        self._failover_cluster_app = failover_cluster_app
        self._fileset = fileset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverClusterHierarchyObjectDescendentCount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverClusterHierarchyObjectDescendentCount of this FailoverClusterHierarchyObjectDescendentCount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failover_cluster(self):
        """Gets the failover_cluster of this FailoverClusterHierarchyObjectDescendentCount.


        :return: The failover_cluster of this FailoverClusterHierarchyObjectDescendentCount.
        :rtype: int
        """
        return self._failover_cluster

    @failover_cluster.setter
    def failover_cluster(self, failover_cluster):
        """Sets the failover_cluster of this FailoverClusterHierarchyObjectDescendentCount.


        :param failover_cluster: The failover_cluster of this FailoverClusterHierarchyObjectDescendentCount.
        :type failover_cluster: int
        """

        self._failover_cluster = failover_cluster

    @property
    def failover_cluster_app(self):
        """Gets the failover_cluster_app of this FailoverClusterHierarchyObjectDescendentCount.


        :return: The failover_cluster_app of this FailoverClusterHierarchyObjectDescendentCount.
        :rtype: int
        """
        return self._failover_cluster_app

    @failover_cluster_app.setter
    def failover_cluster_app(self, failover_cluster_app):
        """Sets the failover_cluster_app of this FailoverClusterHierarchyObjectDescendentCount.


        :param failover_cluster_app: The failover_cluster_app of this FailoverClusterHierarchyObjectDescendentCount.
        :type failover_cluster_app: int
        """

        self._failover_cluster_app = failover_cluster_app

    @property
    def fileset(self):
        """Gets the fileset of this FailoverClusterHierarchyObjectDescendentCount.


        :return: The fileset of this FailoverClusterHierarchyObjectDescendentCount.
        :rtype: int
        """
        return self._fileset

    @fileset.setter
    def fileset(self, fileset):
        """Sets the fileset of this FailoverClusterHierarchyObjectDescendentCount.


        :param fileset: The fileset of this FailoverClusterHierarchyObjectDescendentCount.
        :type fileset: int
        """

        self._fileset = fileset
