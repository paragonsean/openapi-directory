# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FilesetOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_backup_hidden_folders_in_network_mounts: bool=None, allow_backup_network_mounts: bool=None, use_windows_vss: bool=None):
        """FilesetOptions - a model defined in OpenAPI

        :param allow_backup_hidden_folders_in_network_mounts: The allow_backup_hidden_folders_in_network_mounts of this FilesetOptions.
        :param allow_backup_network_mounts: The allow_backup_network_mounts of this FilesetOptions.
        :param use_windows_vss: The use_windows_vss of this FilesetOptions.
        """
        self.openapi_types = {
            'allow_backup_hidden_folders_in_network_mounts': bool,
            'allow_backup_network_mounts': bool,
            'use_windows_vss': bool
        }

        self.attribute_map = {
            'allow_backup_hidden_folders_in_network_mounts': 'allowBackupHiddenFoldersInNetworkMounts',
            'allow_backup_network_mounts': 'allowBackupNetworkMounts',
            'use_windows_vss': 'useWindowsVss'
        }

        self._allow_backup_hidden_folders_in_network_mounts = allow_backup_hidden_folders_in_network_mounts
        self._allow_backup_network_mounts = allow_backup_network_mounts
        self._use_windows_vss = use_windows_vss

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FilesetOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FilesetOptions of this FilesetOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_backup_hidden_folders_in_network_mounts(self):
        """Gets the allow_backup_hidden_folders_in_network_mounts of this FilesetOptions.

        Include or exclude hidden folders inside locally-mounted remote file systems from backups.

        :return: The allow_backup_hidden_folders_in_network_mounts of this FilesetOptions.
        :rtype: bool
        """
        return self._allow_backup_hidden_folders_in_network_mounts

    @allow_backup_hidden_folders_in_network_mounts.setter
    def allow_backup_hidden_folders_in_network_mounts(self, allow_backup_hidden_folders_in_network_mounts):
        """Sets the allow_backup_hidden_folders_in_network_mounts of this FilesetOptions.

        Include or exclude hidden folders inside locally-mounted remote file systems from backups.

        :param allow_backup_hidden_folders_in_network_mounts: The allow_backup_hidden_folders_in_network_mounts of this FilesetOptions.
        :type allow_backup_hidden_folders_in_network_mounts: bool
        """

        self._allow_backup_hidden_folders_in_network_mounts = allow_backup_hidden_folders_in_network_mounts

    @property
    def allow_backup_network_mounts(self):
        """Gets the allow_backup_network_mounts of this FilesetOptions.

        Include or exclude locally-mounted remote file systems from backups.

        :return: The allow_backup_network_mounts of this FilesetOptions.
        :rtype: bool
        """
        return self._allow_backup_network_mounts

    @allow_backup_network_mounts.setter
    def allow_backup_network_mounts(self, allow_backup_network_mounts):
        """Sets the allow_backup_network_mounts of this FilesetOptions.

        Include or exclude locally-mounted remote file systems from backups.

        :param allow_backup_network_mounts: The allow_backup_network_mounts of this FilesetOptions.
        :type allow_backup_network_mounts: bool
        """

        self._allow_backup_network_mounts = allow_backup_network_mounts

    @property
    def use_windows_vss(self):
        """Gets the use_windows_vss of this FilesetOptions.

        Use VSS during Windows backups.

        :return: The use_windows_vss of this FilesetOptions.
        :rtype: bool
        """
        return self._use_windows_vss

    @use_windows_vss.setter
    def use_windows_vss(self, use_windows_vss):
        """Sets the use_windows_vss of this FilesetOptions.

        Use VSS during Windows backups.

        :param use_windows_vss: The use_windows_vss of this FilesetOptions.
        :type use_windows_vss: bool
        """

        self._use_windows_vss = use_windows_vss
