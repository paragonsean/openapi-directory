# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VappTemplateExportJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catalog_id: str=None, name: str=None, org_vdc_id: str=None, storage_policy_id: str=None):
        """VappTemplateExportJobConfig - a model defined in OpenAPI

        :param catalog_id: The catalog_id of this VappTemplateExportJobConfig.
        :param name: The name of this VappTemplateExportJobConfig.
        :param org_vdc_id: The org_vdc_id of this VappTemplateExportJobConfig.
        :param storage_policy_id: The storage_policy_id of this VappTemplateExportJobConfig.
        """
        self.openapi_types = {
            'catalog_id': str,
            'name': str,
            'org_vdc_id': str,
            'storage_policy_id': str
        }

        self.attribute_map = {
            'catalog_id': 'catalogId',
            'name': 'name',
            'org_vdc_id': 'orgVdcId',
            'storage_policy_id': 'storagePolicyId'
        }

        self._catalog_id = catalog_id
        self._name = name
        self._org_vdc_id = org_vdc_id
        self._storage_policy_id = storage_policy_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VappTemplateExportJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VappTemplateExportJobConfig of this VappTemplateExportJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catalog_id(self):
        """Gets the catalog_id of this VappTemplateExportJobConfig.

        ID of the target catalog.

        :return: The catalog_id of this VappTemplateExportJobConfig.
        :rtype: str
        """
        return self._catalog_id

    @catalog_id.setter
    def catalog_id(self, catalog_id):
        """Sets the catalog_id of this VappTemplateExportJobConfig.

        ID of the target catalog.

        :param catalog_id: The catalog_id of this VappTemplateExportJobConfig.
        :type catalog_id: str
        """
        if catalog_id is None:
            raise ValueError("Invalid value for `catalog_id`, must not be `None`")

        self._catalog_id = catalog_id

    @property
    def name(self):
        """Gets the name of this VappTemplateExportJobConfig.

        Name of vApp template.

        :return: The name of this VappTemplateExportJobConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VappTemplateExportJobConfig.

        Name of vApp template.

        :param name: The name of this VappTemplateExportJobConfig.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def org_vdc_id(self):
        """Gets the org_vdc_id of this VappTemplateExportJobConfig.

        ID of the target organization vDC.

        :return: The org_vdc_id of this VappTemplateExportJobConfig.
        :rtype: str
        """
        return self._org_vdc_id

    @org_vdc_id.setter
    def org_vdc_id(self, org_vdc_id):
        """Sets the org_vdc_id of this VappTemplateExportJobConfig.

        ID of the target organization vDC.

        :param org_vdc_id: The org_vdc_id of this VappTemplateExportJobConfig.
        :type org_vdc_id: str
        """
        if org_vdc_id is None:
            raise ValueError("Invalid value for `org_vdc_id`, must not be `None`")

        self._org_vdc_id = org_vdc_id

    @property
    def storage_policy_id(self):
        """Gets the storage_policy_id of this VappTemplateExportJobConfig.

        ID of the storage policy of the organization VDC used to create the template. When this field is absent, the default from the organization vDC is used.

        :return: The storage_policy_id of this VappTemplateExportJobConfig.
        :rtype: str
        """
        return self._storage_policy_id

    @storage_policy_id.setter
    def storage_policy_id(self, storage_policy_id):
        """Sets the storage_policy_id of this VappTemplateExportJobConfig.

        ID of the storage policy of the organization VDC used to create the template. When this field is absent, the default from the organization vDC is used.

        :param storage_policy_id: The storage_policy_id of this VappTemplateExportJobConfig.
        :type storage_policy_id: str
        """

        self._storage_policy_id = storage_policy_id
