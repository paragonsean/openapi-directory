# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_version import FileVersion
from openapi_server import util


class SearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_versions: List[FileVersion]=None, filename: str=None, path: str=None):
        """SearchResponse - a model defined in OpenAPI

        :param file_versions: The file_versions of this SearchResponse.
        :param filename: The filename of this SearchResponse.
        :param path: The path of this SearchResponse.
        """
        self.openapi_types = {
            'file_versions': List[FileVersion],
            'filename': str,
            'path': str
        }

        self.attribute_map = {
            'file_versions': 'fileVersions',
            'filename': 'filename',
            'path': 'path'
        }

        self._file_versions = file_versions
        self._filename = filename
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchResponse of this SearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_versions(self):
        """Gets the file_versions of this SearchResponse.


        :return: The file_versions of this SearchResponse.
        :rtype: List[FileVersion]
        """
        return self._file_versions

    @file_versions.setter
    def file_versions(self, file_versions):
        """Sets the file_versions of this SearchResponse.


        :param file_versions: The file_versions of this SearchResponse.
        :type file_versions: List[FileVersion]
        """

        self._file_versions = file_versions

    @property
    def filename(self):
        """Gets the filename of this SearchResponse.

        Just the filename without the whole path.

        :return: The filename of this SearchResponse.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this SearchResponse.

        Just the filename without the whole path.

        :param filename: The filename of this SearchResponse.
        :type filename: str
        """

        self._filename = filename

    @property
    def path(self):
        """Gets the path of this SearchResponse.


        :return: The path of this SearchResponse.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this SearchResponse.


        :param path: The path of this SearchResponse.
        :type path: str
        """

        self._path = path
