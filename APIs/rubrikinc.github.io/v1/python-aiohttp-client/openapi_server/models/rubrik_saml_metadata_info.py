# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RubrikSamlMetadataInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_address: str=None):
        """RubrikSamlMetadataInfo - a model defined in OpenAPI

        :param host_address: The host_address of this RubrikSamlMetadataInfo.
        """
        self.openapi_types = {
            'host_address': str
        }

        self.attribute_map = {
            'host_address': 'hostAddress'
        }

        self._host_address = host_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RubrikSamlMetadataInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RubrikSamlMetadataInfo of this RubrikSamlMetadataInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_address(self):
        """Gets the host_address of this RubrikSamlMetadataInfo.

        The IP address or FQDN of the host that consumes the SAML assertions from the ID provider. When hostAddress is blank, an arbitrary floating IP address is assigned as the host.

        :return: The host_address of this RubrikSamlMetadataInfo.
        :rtype: str
        """
        return self._host_address

    @host_address.setter
    def host_address(self, host_address):
        """Sets the host_address of this RubrikSamlMetadataInfo.

        The IP address or FQDN of the host that consumes the SAML assertions from the ID provider. When hostAddress is blank, an arbitrary floating IP address is assigned as the host.

        :param host_address: The host_address of this RubrikSamlMetadataInfo.
        :type host_address: str
        """

        self._host_address = host_address
