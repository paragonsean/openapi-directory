# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkDeleteObjectSnapshotsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_id: str=None, snapshot_ids: List[str]=None):
        """BulkDeleteObjectSnapshotsConfig - a model defined in OpenAPI

        :param location_id: The location_id of this BulkDeleteObjectSnapshotsConfig.
        :param snapshot_ids: The snapshot_ids of this BulkDeleteObjectSnapshotsConfig.
        """
        self.openapi_types = {
            'location_id': str,
            'snapshot_ids': List[str]
        }

        self.attribute_map = {
            'location_id': 'locationId',
            'snapshot_ids': 'snapshotIds'
        }

        self._location_id = location_id
        self._snapshot_ids = snapshot_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkDeleteObjectSnapshotsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkDeleteObjectSnapshotsConfig of this BulkDeleteObjectSnapshotsConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_id(self):
        """Gets the location_id of this BulkDeleteObjectSnapshotsConfig.

        The ID of the location that contains the snapshots to delete. When no location ID is present, this API endpoint deletes snapshots from all locations. 

        :return: The location_id of this BulkDeleteObjectSnapshotsConfig.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this BulkDeleteObjectSnapshotsConfig.

        The ID of the location that contains the snapshots to delete. When no location ID is present, this API endpoint deletes snapshots from all locations. 

        :param location_id: The location_id of this BulkDeleteObjectSnapshotsConfig.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def snapshot_ids(self):
        """Gets the snapshot_ids of this BulkDeleteObjectSnapshotsConfig.

        A list of snapshot IDs for the snapshots to delete.

        :return: The snapshot_ids of this BulkDeleteObjectSnapshotsConfig.
        :rtype: List[str]
        """
        return self._snapshot_ids

    @snapshot_ids.setter
    def snapshot_ids(self, snapshot_ids):
        """Sets the snapshot_ids of this BulkDeleteObjectSnapshotsConfig.

        A list of snapshot IDs for the snapshots to delete.

        :param snapshot_ids: The snapshot_ids of this BulkDeleteObjectSnapshotsConfig.
        :type snapshot_ids: List[str]
        """
        if snapshot_ids is None:
            raise ValueError("Invalid value for `snapshot_ids`, must not be `None`")

        self._snapshot_ids = snapshot_ids
