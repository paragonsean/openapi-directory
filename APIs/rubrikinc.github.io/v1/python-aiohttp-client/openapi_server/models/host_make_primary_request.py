# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HostMakePrimaryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ids: List[str]=None, old_primary_cluster_uuid: str=None):
        """HostMakePrimaryRequest - a model defined in OpenAPI

        :param ids: The ids of this HostMakePrimaryRequest.
        :param old_primary_cluster_uuid: The old_primary_cluster_uuid of this HostMakePrimaryRequest.
        """
        self.openapi_types = {
            'ids': List[str],
            'old_primary_cluster_uuid': str
        }

        self.attribute_map = {
            'ids': 'ids',
            'old_primary_cluster_uuid': 'oldPrimaryClusterUuid'
        }

        self._ids = ids
        self._old_primary_cluster_uuid = old_primary_cluster_uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HostMakePrimaryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HostMakePrimaryRequest of this HostMakePrimaryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ids(self):
        """Gets the ids of this HostMakePrimaryRequest.

        IDs of hosts to migrate.

        :return: The ids of this HostMakePrimaryRequest.
        :rtype: List[str]
        """
        return self._ids

    @ids.setter
    def ids(self, ids):
        """Sets the ids of this HostMakePrimaryRequest.

        IDs of hosts to migrate.

        :param ids: The ids of this HostMakePrimaryRequest.
        :type ids: List[str]
        """

        self._ids = ids

    @property
    def old_primary_cluster_uuid(self):
        """Gets the old_primary_cluster_uuid of this HostMakePrimaryRequest.

        For all hosts and virtual machines registered with this cluster, make itself the primary if the current primary is oldPrimaryClusterUuid.

        :return: The old_primary_cluster_uuid of this HostMakePrimaryRequest.
        :rtype: str
        """
        return self._old_primary_cluster_uuid

    @old_primary_cluster_uuid.setter
    def old_primary_cluster_uuid(self, old_primary_cluster_uuid):
        """Sets the old_primary_cluster_uuid of this HostMakePrimaryRequest.

        For all hosts and virtual machines registered with this cluster, make itself the primary if the current primary is oldPrimaryClusterUuid.

        :param old_primary_cluster_uuid: The old_primary_cluster_uuid of this HostMakePrimaryRequest.
        :type old_primary_cluster_uuid: str
        """

        self._old_primary_cluster_uuid = old_primary_cluster_uuid
