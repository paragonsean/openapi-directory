# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.oracle_recovery_point import OracleRecoveryPoint
from openapi_server import util


class OracleValidateConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, num_channels: int=None, recovery_point: OracleRecoveryPoint=None, sga_max_size_in_mb: int=None, target_mount_path: str=None, target_oracle_home: str=None, target_oracle_host_or_rac_id: str=None):
        """OracleValidateConfig - a model defined in OpenAPI

        :param num_channels: The num_channels of this OracleValidateConfig.
        :param recovery_point: The recovery_point of this OracleValidateConfig.
        :param sga_max_size_in_mb: The sga_max_size_in_mb of this OracleValidateConfig.
        :param target_mount_path: The target_mount_path of this OracleValidateConfig.
        :param target_oracle_home: The target_oracle_home of this OracleValidateConfig.
        :param target_oracle_host_or_rac_id: The target_oracle_host_or_rac_id of this OracleValidateConfig.
        """
        self.openapi_types = {
            'num_channels': int,
            'recovery_point': OracleRecoveryPoint,
            'sga_max_size_in_mb': int,
            'target_mount_path': str,
            'target_oracle_home': str,
            'target_oracle_host_or_rac_id': str
        }

        self.attribute_map = {
            'num_channels': 'numChannels',
            'recovery_point': 'recoveryPoint',
            'sga_max_size_in_mb': 'sgaMaxSizeInMb',
            'target_mount_path': 'targetMountPath',
            'target_oracle_home': 'targetOracleHome',
            'target_oracle_host_or_rac_id': 'targetOracleHostOrRacId'
        }

        self._num_channels = num_channels
        self._recovery_point = recovery_point
        self._sga_max_size_in_mb = sga_max_size_in_mb
        self._target_mount_path = target_mount_path
        self._target_oracle_home = target_oracle_home
        self._target_oracle_host_or_rac_id = target_oracle_host_or_rac_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OracleValidateConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OracleValidateConfig of this OracleValidateConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def num_channels(self):
        """Gets the num_channels of this OracleValidateConfig.

        Number of channels used during backup validation.

        :return: The num_channels of this OracleValidateConfig.
        :rtype: int
        """
        return self._num_channels

    @num_channels.setter
    def num_channels(self, num_channels):
        """Sets the num_channels of this OracleValidateConfig.

        Number of channels used during backup validation.

        :param num_channels: The num_channels of this OracleValidateConfig.
        :type num_channels: int
        """

        self._num_channels = num_channels

    @property
    def recovery_point(self):
        """Gets the recovery_point of this OracleValidateConfig.


        :return: The recovery_point of this OracleValidateConfig.
        :rtype: OracleRecoveryPoint
        """
        return self._recovery_point

    @recovery_point.setter
    def recovery_point(self, recovery_point):
        """Sets the recovery_point of this OracleValidateConfig.


        :param recovery_point: The recovery_point of this OracleValidateConfig.
        :type recovery_point: OracleRecoveryPoint
        """
        if recovery_point is None:
            raise ValueError("Invalid value for `recovery_point`, must not be `None`")

        self._recovery_point = recovery_point

    @property
    def sga_max_size_in_mb(self):
        """Gets the sga_max_size_in_mb of this OracleValidateConfig.

        System Global Area(SGA) size used to create the instance on the target host with unit in MB. SGA is a group of shared memory structures for one Oracle Database instance.

        :return: The sga_max_size_in_mb of this OracleValidateConfig.
        :rtype: int
        """
        return self._sga_max_size_in_mb

    @sga_max_size_in_mb.setter
    def sga_max_size_in_mb(self, sga_max_size_in_mb):
        """Sets the sga_max_size_in_mb of this OracleValidateConfig.

        System Global Area(SGA) size used to create the instance on the target host with unit in MB. SGA is a group of shared memory structures for one Oracle Database instance.

        :param sga_max_size_in_mb: The sga_max_size_in_mb of this OracleValidateConfig.
        :type sga_max_size_in_mb: int
        """

        self._sga_max_size_in_mb = sga_max_size_in_mb

    @property
    def target_mount_path(self):
        """Gets the target_mount_path of this OracleValidateConfig.

        The full path on the target host where the NFS share with the snapshot files will be mounted.

        :return: The target_mount_path of this OracleValidateConfig.
        :rtype: str
        """
        return self._target_mount_path

    @target_mount_path.setter
    def target_mount_path(self, target_mount_path):
        """Sets the target_mount_path of this OracleValidateConfig.

        The full path on the target host where the NFS share with the snapshot files will be mounted.

        :param target_mount_path: The target_mount_path of this OracleValidateConfig.
        :type target_mount_path: str
        """

        self._target_mount_path = target_mount_path

    @property
    def target_oracle_home(self):
        """Gets the target_oracle_home of this OracleValidateConfig.

        The full path on the target host for the Oracle Home which is the directory location where all Oracle software is installed.

        :return: The target_oracle_home of this OracleValidateConfig.
        :rtype: str
        """
        return self._target_oracle_home

    @target_oracle_home.setter
    def target_oracle_home(self, target_oracle_home):
        """Sets the target_oracle_home of this OracleValidateConfig.

        The full path on the target host for the Oracle Home which is the directory location where all Oracle software is installed.

        :param target_oracle_home: The target_oracle_home of this OracleValidateConfig.
        :type target_oracle_home: str
        """

        self._target_oracle_home = target_oracle_home

    @property
    def target_oracle_host_or_rac_id(self):
        """Gets the target_oracle_host_or_rac_id of this OracleValidateConfig.

        ID of the Oracle host or Oracle RAC object that is the target for the validation job. The referenced Oracle host or Oracle RAC must have the Rubrik Backup Service (RBS) installed and connected.

        :return: The target_oracle_host_or_rac_id of this OracleValidateConfig.
        :rtype: str
        """
        return self._target_oracle_host_or_rac_id

    @target_oracle_host_or_rac_id.setter
    def target_oracle_host_or_rac_id(self, target_oracle_host_or_rac_id):
        """Sets the target_oracle_host_or_rac_id of this OracleValidateConfig.

        ID of the Oracle host or Oracle RAC object that is the target for the validation job. The referenced Oracle host or Oracle RAC must have the Rubrik Backup Service (RBS) installed and connected.

        :param target_oracle_host_or_rac_id: The target_oracle_host_or_rac_id of this OracleValidateConfig.
        :type target_oracle_host_or_rac_id: str
        """
        if target_oracle_host_or_rac_id is None:
            raise ValueError("Invalid value for `target_oracle_host_or_rac_id`, must not be `None`")

        self._target_oracle_host_or_rac_id = target_oracle_host_or_rac_id
