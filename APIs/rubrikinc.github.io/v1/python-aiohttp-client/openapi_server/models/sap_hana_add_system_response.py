# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.async_request_status import AsyncRequestStatus
from openapi_server import util


class SapHanaAddSystemResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, async_request_status: AsyncRequestStatus=None, id: str=None):
        """SapHanaAddSystemResponse - a model defined in OpenAPI

        :param async_request_status: The async_request_status of this SapHanaAddSystemResponse.
        :param id: The id of this SapHanaAddSystemResponse.
        """
        self.openapi_types = {
            'async_request_status': AsyncRequestStatus,
            'id': str
        }

        self.attribute_map = {
            'async_request_status': 'asyncRequestStatus',
            'id': 'id'
        }

        self._async_request_status = async_request_status
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SapHanaAddSystemResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SapHanaAddSystemResponse of this SapHanaAddSystemResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def async_request_status(self):
        """Gets the async_request_status of this SapHanaAddSystemResponse.


        :return: The async_request_status of this SapHanaAddSystemResponse.
        :rtype: AsyncRequestStatus
        """
        return self._async_request_status

    @async_request_status.setter
    def async_request_status(self, async_request_status):
        """Sets the async_request_status of this SapHanaAddSystemResponse.


        :param async_request_status: The async_request_status of this SapHanaAddSystemResponse.
        :type async_request_status: AsyncRequestStatus
        """
        if async_request_status is None:
            raise ValueError("Invalid value for `async_request_status`, must not be `None`")

        self._async_request_status = async_request_status

    @property
    def id(self):
        """Gets the id of this SapHanaAddSystemResponse.

        The ID of the added SAP HANA system.

        :return: The id of this SapHanaAddSystemResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SapHanaAddSystemResponse.

        The ID of the added SAP HANA system.

        :param id: The id of this SapHanaAddSystemResponse.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id
