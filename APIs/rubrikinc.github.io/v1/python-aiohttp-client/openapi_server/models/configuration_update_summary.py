# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigurationUpdateSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_user: str=None, config_change_metadata: str=None, modified_date_time: datetime=None, name: str=None, namespace: str=None, new_value: str=None, node_id: str=None, old_value: str=None, source: str=None):
        """ConfigurationUpdateSummary - a model defined in OpenAPI

        :param api_user: The api_user of this ConfigurationUpdateSummary.
        :param config_change_metadata: The config_change_metadata of this ConfigurationUpdateSummary.
        :param modified_date_time: The modified_date_time of this ConfigurationUpdateSummary.
        :param name: The name of this ConfigurationUpdateSummary.
        :param namespace: The namespace of this ConfigurationUpdateSummary.
        :param new_value: The new_value of this ConfigurationUpdateSummary.
        :param node_id: The node_id of this ConfigurationUpdateSummary.
        :param old_value: The old_value of this ConfigurationUpdateSummary.
        :param source: The source of this ConfigurationUpdateSummary.
        """
        self.openapi_types = {
            'api_user': str,
            'config_change_metadata': str,
            'modified_date_time': datetime,
            'name': str,
            'namespace': str,
            'new_value': str,
            'node_id': str,
            'old_value': str,
            'source': str
        }

        self.attribute_map = {
            'api_user': 'apiUser',
            'config_change_metadata': 'configChangeMetadata',
            'modified_date_time': 'modifiedDateTime',
            'name': 'name',
            'namespace': 'namespace',
            'new_value': 'newValue',
            'node_id': 'nodeId',
            'old_value': 'oldValue',
            'source': 'source'
        }

        self._api_user = api_user
        self._config_change_metadata = config_change_metadata
        self._modified_date_time = modified_date_time
        self._name = name
        self._namespace = namespace
        self._new_value = new_value
        self._node_id = node_id
        self._old_value = old_value
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationUpdateSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationUpdateSummary of this ConfigurationUpdateSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_user(self):
        """Gets the api_user of this ConfigurationUpdateSummary.

        The username of the account that changed the value.

        :return: The api_user of this ConfigurationUpdateSummary.
        :rtype: str
        """
        return self._api_user

    @api_user.setter
    def api_user(self, api_user):
        """Sets the api_user of this ConfigurationUpdateSummary.

        The username of the account that changed the value.

        :param api_user: The api_user of this ConfigurationUpdateSummary.
        :type api_user: str
        """

        self._api_user = api_user

    @property
    def config_change_metadata(self):
        """Gets the config_change_metadata of this ConfigurationUpdateSummary.

        JSON-serialized blob of metadata used to fetch information about the configuration update. For example, the upgrade version, previous state, etc. 

        :return: The config_change_metadata of this ConfigurationUpdateSummary.
        :rtype: str
        """
        return self._config_change_metadata

    @config_change_metadata.setter
    def config_change_metadata(self, config_change_metadata):
        """Sets the config_change_metadata of this ConfigurationUpdateSummary.

        JSON-serialized blob of metadata used to fetch information about the configuration update. For example, the upgrade version, previous state, etc. 

        :param config_change_metadata: The config_change_metadata of this ConfigurationUpdateSummary.
        :type config_change_metadata: str
        """

        self._config_change_metadata = config_change_metadata

    @property
    def modified_date_time(self):
        """Gets the modified_date_time of this ConfigurationUpdateSummary.

        The timestamp of the change.

        :return: The modified_date_time of this ConfigurationUpdateSummary.
        :rtype: datetime
        """
        return self._modified_date_time

    @modified_date_time.setter
    def modified_date_time(self, modified_date_time):
        """Sets the modified_date_time of this ConfigurationUpdateSummary.

        The timestamp of the change.

        :param modified_date_time: The modified_date_time of this ConfigurationUpdateSummary.
        :type modified_date_time: datetime
        """

        self._modified_date_time = modified_date_time

    @property
    def name(self):
        """Gets the name of this ConfigurationUpdateSummary.

        The name of the updated configuration option.

        :return: The name of this ConfigurationUpdateSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ConfigurationUpdateSummary.

        The name of the updated configuration option.

        :param name: The name of this ConfigurationUpdateSummary.
        :type name: str
        """

        self._name = name

    @property
    def namespace(self):
        """Gets the namespace of this ConfigurationUpdateSummary.

        The namespace of the updated configuration. Changes that do not begin with the string `local_` are cluster-wide changes.

        :return: The namespace of this ConfigurationUpdateSummary.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this ConfigurationUpdateSummary.

        The namespace of the updated configuration. Changes that do not begin with the string `local_` are cluster-wide changes.

        :param namespace: The namespace of this ConfigurationUpdateSummary.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def new_value(self):
        """Gets the new_value of this ConfigurationUpdateSummary.

        The value of the configuration option after the update.

        :return: The new_value of this ConfigurationUpdateSummary.
        :rtype: str
        """
        return self._new_value

    @new_value.setter
    def new_value(self, new_value):
        """Sets the new_value of this ConfigurationUpdateSummary.

        The value of the configuration option after the update.

        :param new_value: The new_value of this ConfigurationUpdateSummary.
        :type new_value: str
        """

        self._new_value = new_value

    @property
    def node_id(self):
        """Gets the node_id of this ConfigurationUpdateSummary.

        The updated node. For cluster-wide configuration changes, this value is `all`.

        :return: The node_id of this ConfigurationUpdateSummary.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this ConfigurationUpdateSummary.

        The updated node. For cluster-wide configuration changes, this value is `all`.

        :param node_id: The node_id of this ConfigurationUpdateSummary.
        :type node_id: str
        """

        self._node_id = node_id

    @property
    def old_value(self):
        """Gets the old_value of this ConfigurationUpdateSummary.

        The original value of the configuration option.

        :return: The old_value of this ConfigurationUpdateSummary.
        :rtype: str
        """
        return self._old_value

    @old_value.setter
    def old_value(self, old_value):
        """Sets the old_value of this ConfigurationUpdateSummary.

        The original value of the configuration option.

        :param old_value: The old_value of this ConfigurationUpdateSummary.
        :type old_value: str
        """

        self._old_value = old_value

    @property
    def source(self):
        """Gets the source of this ConfigurationUpdateSummary.

        The source of the change.

        :return: The source of this ConfigurationUpdateSummary.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ConfigurationUpdateSummary.

        The source of the change.

        :param source: The source of this ConfigurationUpdateSummary.
        :type source: str
        """

        self._source = source
