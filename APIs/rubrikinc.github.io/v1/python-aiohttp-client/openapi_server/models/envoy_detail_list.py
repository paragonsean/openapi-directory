# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.envoy_detail import EnvoyDetail
from openapi_server import util


class EnvoyDetailList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, envoy_details: List[EnvoyDetail]=None):
        """EnvoyDetailList - a model defined in OpenAPI

        :param envoy_details: The envoy_details of this EnvoyDetailList.
        """
        self.openapi_types = {
            'envoy_details': List[EnvoyDetail]
        }

        self.attribute_map = {
            'envoy_details': 'envoyDetails'
        }

        self._envoy_details = envoy_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvoyDetailList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvoyDetailList of this EnvoyDetailList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def envoy_details(self):
        """Gets the envoy_details of this EnvoyDetailList.

        A list of detailed view of Rubrik Envoy objects.

        :return: The envoy_details of this EnvoyDetailList.
        :rtype: List[EnvoyDetail]
        """
        return self._envoy_details

    @envoy_details.setter
    def envoy_details(self, envoy_details):
        """Sets the envoy_details of this EnvoyDetailList.

        A list of detailed view of Rubrik Envoy objects.

        :param envoy_details: The envoy_details of this EnvoyDetailList.
        :type envoy_details: List[EnvoyDetail]
        """
        if envoy_details is None:
            raise ValueError("Invalid value for `envoy_details`, must not be `None`")

        self._envoy_details = envoy_details
