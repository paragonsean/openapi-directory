# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VerificationParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_id_opt: str=None, object_id: str=None, should_verify_after_opt: datetime=None, snapshot_ids_opt: List[str]=None):
        """VerificationParameters - a model defined in OpenAPI

        :param location_id_opt: The location_id_opt of this VerificationParameters.
        :param object_id: The object_id of this VerificationParameters.
        :param should_verify_after_opt: The should_verify_after_opt of this VerificationParameters.
        :param snapshot_ids_opt: The snapshot_ids_opt of this VerificationParameters.
        """
        self.openapi_types = {
            'location_id_opt': str,
            'object_id': str,
            'should_verify_after_opt': datetime,
            'snapshot_ids_opt': List[str]
        }

        self.attribute_map = {
            'location_id_opt': 'locationIdOpt',
            'object_id': 'objectId',
            'should_verify_after_opt': 'shouldVerifyAfterOpt',
            'snapshot_ids_opt': 'snapshotIdsOpt'
        }

        self._location_id_opt = location_id_opt
        self._object_id = object_id
        self._should_verify_after_opt = should_verify_after_opt
        self._snapshot_ids_opt = snapshot_ids_opt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerificationParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerificationParameters of this VerificationParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_id_opt(self):
        """Gets the location_id_opt of this VerificationParameters.

        Snapshot stored in the provided data location id will be verified. If not provided, we will use Rubrik cluster ID. Currently it only verifies Snapshot present Rubrik cluster. 

        :return: The location_id_opt of this VerificationParameters.
        :rtype: str
        """
        return self._location_id_opt

    @location_id_opt.setter
    def location_id_opt(self, location_id_opt):
        """Sets the location_id_opt of this VerificationParameters.

        Snapshot stored in the provided data location id will be verified. If not provided, we will use Rubrik cluster ID. Currently it only verifies Snapshot present Rubrik cluster. 

        :param location_id_opt: The location_id_opt of this VerificationParameters.
        :type location_id_opt: str
        """

        self._location_id_opt = location_id_opt

    @property
    def object_id(self):
        """Gets the object_id of this VerificationParameters.

        ID assigned to the object. This objectId will be used to fetch the associated object. 

        :return: The object_id of this VerificationParameters.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this VerificationParameters.

        ID assigned to the object. This objectId will be used to fetch the associated object. 

        :param object_id: The object_id of this VerificationParameters.
        :type object_id: str
        """
        if object_id is None:
            raise ValueError("Invalid value for `object_id`, must not be `None`")

        self._object_id = object_id

    @property
    def should_verify_after_opt(self):
        """Gets the should_verify_after_opt of this VerificationParameters.

        The backup should be verified exactly once after the given timestamp. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\". If not provided, it will default to \"1970-01-01T00:00:00.000\". 

        :return: The should_verify_after_opt of this VerificationParameters.
        :rtype: datetime
        """
        return self._should_verify_after_opt

    @should_verify_after_opt.setter
    def should_verify_after_opt(self, should_verify_after_opt):
        """Sets the should_verify_after_opt of this VerificationParameters.

        The backup should be verified exactly once after the given timestamp. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\". If not provided, it will default to \"1970-01-01T00:00:00.000\". 

        :param should_verify_after_opt: The should_verify_after_opt of this VerificationParameters.
        :type should_verify_after_opt: datetime
        """

        self._should_verify_after_opt = should_verify_after_opt

    @property
    def snapshot_ids_opt(self):
        """Gets the snapshot_ids_opt of this VerificationParameters.

        ID assigned to a snapshot. This snapshotId will be used to fetch the associated snapshot. The scheduled job will verify this snapshot. 

        :return: The snapshot_ids_opt of this VerificationParameters.
        :rtype: List[str]
        """
        return self._snapshot_ids_opt

    @snapshot_ids_opt.setter
    def snapshot_ids_opt(self, snapshot_ids_opt):
        """Sets the snapshot_ids_opt of this VerificationParameters.

        ID assigned to a snapshot. This snapshotId will be used to fetch the associated snapshot. The scheduled job will verify this snapshot. 

        :param snapshot_ids_opt: The snapshot_ids_opt of this VerificationParameters.
        :type snapshot_ids_opt: List[str]
        """

        self._snapshot_ids_opt = snapshot_ids_opt
