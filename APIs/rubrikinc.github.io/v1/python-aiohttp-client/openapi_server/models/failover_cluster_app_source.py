# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.failover_cluster_node_order import FailoverClusterNodeOrder
from openapi_server import util


class FailoverClusterAppSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_orders: List[FailoverClusterNodeOrder]=None, virtual_ips: List[str]=None):
        """FailoverClusterAppSource - a model defined in OpenAPI

        :param node_orders: The node_orders of this FailoverClusterAppSource.
        :param virtual_ips: The virtual_ips of this FailoverClusterAppSource.
        """
        self.openapi_types = {
            'node_orders': List[FailoverClusterNodeOrder],
            'virtual_ips': List[str]
        }

        self.attribute_map = {
            'node_orders': 'nodeOrders',
            'virtual_ips': 'virtualIps'
        }

        self._node_orders = node_orders
        self._virtual_ips = virtual_ips

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverClusterAppSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverClusterAppSource of this FailoverClusterAppSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_orders(self):
        """Gets the node_orders of this FailoverClusterAppSource.

        Specifies an order for the failover cluster nodes. Failover cluster app backups use the failover cluster nodes in the specified order.

        :return: The node_orders of this FailoverClusterAppSource.
        :rtype: List[FailoverClusterNodeOrder]
        """
        return self._node_orders

    @node_orders.setter
    def node_orders(self, node_orders):
        """Sets the node_orders of this FailoverClusterAppSource.

        Specifies an order for the failover cluster nodes. Failover cluster app backups use the failover cluster nodes in the specified order.

        :param node_orders: The node_orders of this FailoverClusterAppSource.
        :type node_orders: List[FailoverClusterNodeOrder]
        """

        self._node_orders = node_orders

    @property
    def virtual_ips(self):
        """Gets the virtual_ips of this FailoverClusterAppSource.

        Virtual IP addresses of the failover cluster.

        :return: The virtual_ips of this FailoverClusterAppSource.
        :rtype: List[str]
        """
        return self._virtual_ips

    @virtual_ips.setter
    def virtual_ips(self, virtual_ips):
        """Sets the virtual_ips of this FailoverClusterAppSource.

        Virtual IP addresses of the failover cluster.

        :param virtual_ips: The virtual_ips of this FailoverClusterAppSource.
        :type virtual_ips: List[str]
        """

        self._virtual_ips = virtual_ips
