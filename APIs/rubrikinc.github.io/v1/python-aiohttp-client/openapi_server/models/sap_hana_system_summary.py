# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configured_sla_type import ConfiguredSlaType
from openapi_server.models.sap_hana_host import SapHanaHost
from openapi_server.models.sap_hana_ssl_info import SapHanaSslInfo
from openapi_server.models.sap_hana_system_info import SapHanaSystemInfo
from openapi_server import util


class SapHanaSystemSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configured_sla_domain_id: str=None, configured_sla_domain_name: str=None, configured_sla_domain_type: ConfiguredSlaType=None, id: str=None, is_configured_sla_domain_retention_locked: bool=None, name: str=None, primary_cluster_id: str=None, sla_last_update_time: datetime=None, container_type: str=None, hosts: List[SapHanaHost]=None, instance_number: str=None, last_refresh_time: datetime=None, num_dbs: int=None, sid: str=None, ssl_info: SapHanaSslInfo=None, status: str=None, status_message: str=None, system_info: SapHanaSystemInfo=None, username: str=None):
        """SapHanaSystemSummary - a model defined in OpenAPI

        :param configured_sla_domain_id: The configured_sla_domain_id of this SapHanaSystemSummary.
        :param configured_sla_domain_name: The configured_sla_domain_name of this SapHanaSystemSummary.
        :param configured_sla_domain_type: The configured_sla_domain_type of this SapHanaSystemSummary.
        :param id: The id of this SapHanaSystemSummary.
        :param is_configured_sla_domain_retention_locked: The is_configured_sla_domain_retention_locked of this SapHanaSystemSummary.
        :param name: The name of this SapHanaSystemSummary.
        :param primary_cluster_id: The primary_cluster_id of this SapHanaSystemSummary.
        :param sla_last_update_time: The sla_last_update_time of this SapHanaSystemSummary.
        :param container_type: The container_type of this SapHanaSystemSummary.
        :param hosts: The hosts of this SapHanaSystemSummary.
        :param instance_number: The instance_number of this SapHanaSystemSummary.
        :param last_refresh_time: The last_refresh_time of this SapHanaSystemSummary.
        :param num_dbs: The num_dbs of this SapHanaSystemSummary.
        :param sid: The sid of this SapHanaSystemSummary.
        :param ssl_info: The ssl_info of this SapHanaSystemSummary.
        :param status: The status of this SapHanaSystemSummary.
        :param status_message: The status_message of this SapHanaSystemSummary.
        :param system_info: The system_info of this SapHanaSystemSummary.
        :param username: The username of this SapHanaSystemSummary.
        """
        self.openapi_types = {
            'configured_sla_domain_id': str,
            'configured_sla_domain_name': str,
            'configured_sla_domain_type': ConfiguredSlaType,
            'id': str,
            'is_configured_sla_domain_retention_locked': bool,
            'name': str,
            'primary_cluster_id': str,
            'sla_last_update_time': datetime,
            'container_type': str,
            'hosts': List[SapHanaHost],
            'instance_number': str,
            'last_refresh_time': datetime,
            'num_dbs': int,
            'sid': str,
            'ssl_info': SapHanaSslInfo,
            'status': str,
            'status_message': str,
            'system_info': SapHanaSystemInfo,
            'username': str
        }

        self.attribute_map = {
            'configured_sla_domain_id': 'configuredSlaDomainId',
            'configured_sla_domain_name': 'configuredSlaDomainName',
            'configured_sla_domain_type': 'configuredSlaDomainType',
            'id': 'id',
            'is_configured_sla_domain_retention_locked': 'isConfiguredSlaDomainRetentionLocked',
            'name': 'name',
            'primary_cluster_id': 'primaryClusterId',
            'sla_last_update_time': 'slaLastUpdateTime',
            'container_type': 'containerType',
            'hosts': 'hosts',
            'instance_number': 'instanceNumber',
            'last_refresh_time': 'lastRefreshTime',
            'num_dbs': 'numDbs',
            'sid': 'sid',
            'ssl_info': 'sslInfo',
            'status': 'status',
            'status_message': 'statusMessage',
            'system_info': 'systemInfo',
            'username': 'username'
        }

        self._configured_sla_domain_id = configured_sla_domain_id
        self._configured_sla_domain_name = configured_sla_domain_name
        self._configured_sla_domain_type = configured_sla_domain_type
        self._id = id
        self._is_configured_sla_domain_retention_locked = is_configured_sla_domain_retention_locked
        self._name = name
        self._primary_cluster_id = primary_cluster_id
        self._sla_last_update_time = sla_last_update_time
        self._container_type = container_type
        self._hosts = hosts
        self._instance_number = instance_number
        self._last_refresh_time = last_refresh_time
        self._num_dbs = num_dbs
        self._sid = sid
        self._ssl_info = ssl_info
        self._status = status
        self._status_message = status_message
        self._system_info = system_info
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SapHanaSystemSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SapHanaSystemSummary of this SapHanaSystemSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configured_sla_domain_id(self):
        """Gets the configured_sla_domain_id of this SapHanaSystemSummary.

        The ID of the SLA Domain configured directly on the Rubrik object.

        :return: The configured_sla_domain_id of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._configured_sla_domain_id

    @configured_sla_domain_id.setter
    def configured_sla_domain_id(self, configured_sla_domain_id):
        """Sets the configured_sla_domain_id of this SapHanaSystemSummary.

        The ID of the SLA Domain configured directly on the Rubrik object.

        :param configured_sla_domain_id: The configured_sla_domain_id of this SapHanaSystemSummary.
        :type configured_sla_domain_id: str
        """
        if configured_sla_domain_id is None:
            raise ValueError("Invalid value for `configured_sla_domain_id`, must not be `None`")

        self._configured_sla_domain_id = configured_sla_domain_id

    @property
    def configured_sla_domain_name(self):
        """Gets the configured_sla_domain_name of this SapHanaSystemSummary.

        The name of the SLA Domain configured directly on the Rubrik object.

        :return: The configured_sla_domain_name of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._configured_sla_domain_name

    @configured_sla_domain_name.setter
    def configured_sla_domain_name(self, configured_sla_domain_name):
        """Sets the configured_sla_domain_name of this SapHanaSystemSummary.

        The name of the SLA Domain configured directly on the Rubrik object.

        :param configured_sla_domain_name: The configured_sla_domain_name of this SapHanaSystemSummary.
        :type configured_sla_domain_name: str
        """
        if configured_sla_domain_name is None:
            raise ValueError("Invalid value for `configured_sla_domain_name`, must not be `None`")

        self._configured_sla_domain_name = configured_sla_domain_name

    @property
    def configured_sla_domain_type(self):
        """Gets the configured_sla_domain_type of this SapHanaSystemSummary.


        :return: The configured_sla_domain_type of this SapHanaSystemSummary.
        :rtype: ConfiguredSlaType
        """
        return self._configured_sla_domain_type

    @configured_sla_domain_type.setter
    def configured_sla_domain_type(self, configured_sla_domain_type):
        """Sets the configured_sla_domain_type of this SapHanaSystemSummary.


        :param configured_sla_domain_type: The configured_sla_domain_type of this SapHanaSystemSummary.
        :type configured_sla_domain_type: ConfiguredSlaType
        """

        self._configured_sla_domain_type = configured_sla_domain_type

    @property
    def id(self):
        """Gets the id of this SapHanaSystemSummary.

        The ID of the SAP HANA system.

        :return: The id of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SapHanaSystemSummary.

        The ID of the SAP HANA system.

        :param id: The id of this SapHanaSystemSummary.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def is_configured_sla_domain_retention_locked(self):
        """Gets the is_configured_sla_domain_retention_locked of this SapHanaSystemSummary.

        Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.

        :return: The is_configured_sla_domain_retention_locked of this SapHanaSystemSummary.
        :rtype: bool
        """
        return self._is_configured_sla_domain_retention_locked

    @is_configured_sla_domain_retention_locked.setter
    def is_configured_sla_domain_retention_locked(self, is_configured_sla_domain_retention_locked):
        """Sets the is_configured_sla_domain_retention_locked of this SapHanaSystemSummary.

        Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.

        :param is_configured_sla_domain_retention_locked: The is_configured_sla_domain_retention_locked of this SapHanaSystemSummary.
        :type is_configured_sla_domain_retention_locked: bool
        """

        self._is_configured_sla_domain_retention_locked = is_configured_sla_domain_retention_locked

    @property
    def name(self):
        """Gets the name of this SapHanaSystemSummary.

        The name of the Rubrik object.

        :return: The name of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SapHanaSystemSummary.

        The name of the Rubrik object.

        :param name: The name of this SapHanaSystemSummary.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def primary_cluster_id(self):
        """Gets the primary_cluster_id of this SapHanaSystemSummary.

        The ID of the cluster that manages the Rubrik object.

        :return: The primary_cluster_id of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._primary_cluster_id

    @primary_cluster_id.setter
    def primary_cluster_id(self, primary_cluster_id):
        """Sets the primary_cluster_id of this SapHanaSystemSummary.

        The ID of the cluster that manages the Rubrik object.

        :param primary_cluster_id: The primary_cluster_id of this SapHanaSystemSummary.
        :type primary_cluster_id: str
        """
        if primary_cluster_id is None:
            raise ValueError("Invalid value for `primary_cluster_id`, must not be `None`")

        self._primary_cluster_id = primary_cluster_id

    @property
    def sla_last_update_time(self):
        """Gets the sla_last_update_time of this SapHanaSystemSummary.

        The UTC time when the SLA Domain was last updated.

        :return: The sla_last_update_time of this SapHanaSystemSummary.
        :rtype: datetime
        """
        return self._sla_last_update_time

    @sla_last_update_time.setter
    def sla_last_update_time(self, sla_last_update_time):
        """Sets the sla_last_update_time of this SapHanaSystemSummary.

        The UTC time when the SLA Domain was last updated.

        :param sla_last_update_time: The sla_last_update_time of this SapHanaSystemSummary.
        :type sla_last_update_time: datetime
        """

        self._sla_last_update_time = sla_last_update_time

    @property
    def container_type(self):
        """Gets the container_type of this SapHanaSystemSummary.

        The container type of the SAP HANA system. Possible values are SINGLE_CONTAINER, MULTI_CONTAINER.

        :return: The container_type of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._container_type

    @container_type.setter
    def container_type(self, container_type):
        """Sets the container_type of this SapHanaSystemSummary.

        The container type of the SAP HANA system. Possible values are SINGLE_CONTAINER, MULTI_CONTAINER.

        :param container_type: The container_type of this SapHanaSystemSummary.
        :type container_type: str
        """
        allowed_values = ["SINGLE_CONTAINER", "MULTI_CONTAINER"]  # noqa: E501
        if container_type not in allowed_values:
            raise ValueError(
                "Invalid value for `container_type` ({0}), must be one of {1}"
                .format(container_type, allowed_values)
            )

        self._container_type = container_type

    @property
    def hosts(self):
        """Gets the hosts of this SapHanaSystemSummary.


        :return: The hosts of this SapHanaSystemSummary.
        :rtype: List[SapHanaHost]
        """
        return self._hosts

    @hosts.setter
    def hosts(self, hosts):
        """Sets the hosts of this SapHanaSystemSummary.


        :param hosts: The hosts of this SapHanaSystemSummary.
        :type hosts: List[SapHanaHost]
        """
        if hosts is None:
            raise ValueError("Invalid value for `hosts`, must not be `None`")

        self._hosts = hosts

    @property
    def instance_number(self):
        """Gets the instance_number of this SapHanaSystemSummary.

        The instance number of the SAP HANA system.

        :return: The instance_number of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._instance_number

    @instance_number.setter
    def instance_number(self, instance_number):
        """Sets the instance_number of this SapHanaSystemSummary.

        The instance number of the SAP HANA system.

        :param instance_number: The instance_number of this SapHanaSystemSummary.
        :type instance_number: str
        """
        if instance_number is None:
            raise ValueError("Invalid value for `instance_number`, must not be `None`")

        self._instance_number = instance_number

    @property
    def last_refresh_time(self):
        """Gets the last_refresh_time of this SapHanaSystemSummary.

        The UTC timestamp for when the SAP HANA system was last refreshed.

        :return: The last_refresh_time of this SapHanaSystemSummary.
        :rtype: datetime
        """
        return self._last_refresh_time

    @last_refresh_time.setter
    def last_refresh_time(self, last_refresh_time):
        """Sets the last_refresh_time of this SapHanaSystemSummary.

        The UTC timestamp for when the SAP HANA system was last refreshed.

        :param last_refresh_time: The last_refresh_time of this SapHanaSystemSummary.
        :type last_refresh_time: datetime
        """

        self._last_refresh_time = last_refresh_time

    @property
    def num_dbs(self):
        """Gets the num_dbs of this SapHanaSystemSummary.

        The number of databases in the SAP HANA system.

        :return: The num_dbs of this SapHanaSystemSummary.
        :rtype: int
        """
        return self._num_dbs

    @num_dbs.setter
    def num_dbs(self, num_dbs):
        """Sets the num_dbs of this SapHanaSystemSummary.

        The number of databases in the SAP HANA system.

        :param num_dbs: The num_dbs of this SapHanaSystemSummary.
        :type num_dbs: int
        """
        if num_dbs is None:
            raise ValueError("Invalid value for `num_dbs`, must not be `None`")

        self._num_dbs = num_dbs

    @property
    def sid(self):
        """Gets the sid of this SapHanaSystemSummary.

        The SAP System Identification (SID) code for the SAP HANA system.

        :return: The sid of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this SapHanaSystemSummary.

        The SAP System Identification (SID) code for the SAP HANA system.

        :param sid: The sid of this SapHanaSystemSummary.
        :type sid: str
        """
        if sid is None:
            raise ValueError("Invalid value for `sid`, must not be `None`")

        self._sid = sid

    @property
    def ssl_info(self):
        """Gets the ssl_info of this SapHanaSystemSummary.


        :return: The ssl_info of this SapHanaSystemSummary.
        :rtype: SapHanaSslInfo
        """
        return self._ssl_info

    @ssl_info.setter
    def ssl_info(self, ssl_info):
        """Sets the ssl_info of this SapHanaSystemSummary.


        :param ssl_info: The ssl_info of this SapHanaSystemSummary.
        :type ssl_info: SapHanaSslInfo
        """

        self._ssl_info = ssl_info

    @property
    def status(self):
        """Gets the status of this SapHanaSystemSummary.

        The status of the SAP HANA system.

        :return: The status of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SapHanaSystemSummary.

        The status of the SAP HANA system.

        :param status: The status of this SapHanaSystemSummary.
        :type status: str
        """
        allowed_values = ["OK", "WARNING", "ERROR", "UNKNOWN"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this SapHanaSystemSummary.

        The message associated with the current SAP HANA system status.

        :return: The status_message of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this SapHanaSystemSummary.

        The message associated with the current SAP HANA system status.

        :param status_message: The status_message of this SapHanaSystemSummary.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def system_info(self):
        """Gets the system_info of this SapHanaSystemSummary.


        :return: The system_info of this SapHanaSystemSummary.
        :rtype: SapHanaSystemInfo
        """
        return self._system_info

    @system_info.setter
    def system_info(self, system_info):
        """Sets the system_info of this SapHanaSystemSummary.


        :param system_info: The system_info of this SapHanaSystemSummary.
        :type system_info: SapHanaSystemInfo
        """

        self._system_info = system_info

    @property
    def username(self):
        """Gets the username of this SapHanaSystemSummary.

        The username of the SAP HANA system.

        :return: The username of this SapHanaSystemSummary.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this SapHanaSystemSummary.

        The username of the SAP HANA system.

        :param username: The username of this SapHanaSystemSummary.
        :type username: str
        """
        if username is None:
            raise ValueError("Invalid value for `username`, must not be `None`")

        self._username = username
