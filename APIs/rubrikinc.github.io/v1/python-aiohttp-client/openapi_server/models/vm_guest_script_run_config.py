# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmGuestScriptRunConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phase: str=None):
        """VmGuestScriptRunConfig - a model defined in OpenAPI

        :param phase: The phase of this VmGuestScriptRunConfig.
        """
        self.openapi_types = {
            'phase': str
        }

        self.attribute_map = {
            'phase': 'phase'
        }

        self._phase = phase

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmGuestScriptRunConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmGuestScriptRunConfig of this VmGuestScriptRunConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phase(self):
        """Gets the phase of this VmGuestScriptRunConfig.

        Run the script configured (if any) for this phase.

        :return: The phase of this VmGuestScriptRunConfig.
        :rtype: str
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this VmGuestScriptRunConfig.

        Run the script configured (if any) for this phase.

        :param phase: The phase of this VmGuestScriptRunConfig.
        :type phase: str
        """
        allowed_values = ["PreBackup", "PostSnap", "PostBackup"]  # noqa: E501
        if phase not in allowed_values:
            raise ValueError(
                "Invalid value for `phase` ({0}), must be one of {1}"
                .format(phase, allowed_values)
            )

        self._phase = phase
