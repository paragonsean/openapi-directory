# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.missed_snapshot import MissedSnapshot
from openapi_server import util


class MissedSnapshotListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[MissedSnapshot]=None, has_more: bool=None, total: int=None):
        """MissedSnapshotListResponse - a model defined in OpenAPI

        :param data: The data of this MissedSnapshotListResponse.
        :param has_more: The has_more of this MissedSnapshotListResponse.
        :param total: The total of this MissedSnapshotListResponse.
        """
        self.openapi_types = {
            'data': List[MissedSnapshot],
            'has_more': bool,
            'total': int
        }

        self.attribute_map = {
            'data': 'data',
            'has_more': 'hasMore',
            'total': 'total'
        }

        self._data = data
        self._has_more = has_more
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MissedSnapshotListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MissedSnapshotListResponse of this MissedSnapshotListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this MissedSnapshotListResponse.

        List of matching objects.

        :return: The data of this MissedSnapshotListResponse.
        :rtype: List[MissedSnapshot]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this MissedSnapshotListResponse.

        List of matching objects.

        :param data: The data of this MissedSnapshotListResponse.
        :type data: List[MissedSnapshot]
        """

        self._data = data

    @property
    def has_more(self):
        """Gets the has_more of this MissedSnapshotListResponse.

        If there is more.

        :return: The has_more of this MissedSnapshotListResponse.
        :rtype: bool
        """
        return self._has_more

    @has_more.setter
    def has_more(self, has_more):
        """Sets the has_more of this MissedSnapshotListResponse.

        If there is more.

        :param has_more: The has_more of this MissedSnapshotListResponse.
        :type has_more: bool
        """

        self._has_more = has_more

    @property
    def total(self):
        """Gets the total of this MissedSnapshotListResponse.

        Total list responses.

        :return: The total of this MissedSnapshotListResponse.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this MissedSnapshotListResponse.

        Total list responses.

        :param total: The total of this MissedSnapshotListResponse.
        :type total: int
        """

        self._total = total
