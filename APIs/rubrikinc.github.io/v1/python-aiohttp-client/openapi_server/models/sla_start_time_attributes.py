# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SlaStartTimeAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day_of_week: int=None, hour: int=None, minutes: int=None):
        """SlaStartTimeAttributes - a model defined in OpenAPI

        :param day_of_week: The day_of_week of this SlaStartTimeAttributes.
        :param hour: The hour of this SlaStartTimeAttributes.
        :param minutes: The minutes of this SlaStartTimeAttributes.
        """
        self.openapi_types = {
            'day_of_week': int,
            'hour': int,
            'minutes': int
        }

        self.attribute_map = {
            'day_of_week': 'dayOfWeek',
            'hour': 'hour',
            'minutes': 'minutes'
        }

        self._day_of_week = day_of_week
        self._hour = hour
        self._minutes = minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlaStartTimeAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SlaStartTimeAttributes of this SlaStartTimeAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day_of_week(self):
        """Gets the day_of_week of this SlaStartTimeAttributes.


        :return: The day_of_week of this SlaStartTimeAttributes.
        :rtype: int
        """
        return self._day_of_week

    @day_of_week.setter
    def day_of_week(self, day_of_week):
        """Sets the day_of_week of this SlaStartTimeAttributes.


        :param day_of_week: The day_of_week of this SlaStartTimeAttributes.
        :type day_of_week: int
        """

        self._day_of_week = day_of_week

    @property
    def hour(self):
        """Gets the hour of this SlaStartTimeAttributes.


        :return: The hour of this SlaStartTimeAttributes.
        :rtype: int
        """
        return self._hour

    @hour.setter
    def hour(self, hour):
        """Sets the hour of this SlaStartTimeAttributes.


        :param hour: The hour of this SlaStartTimeAttributes.
        :type hour: int
        """
        if hour is None:
            raise ValueError("Invalid value for `hour`, must not be `None`")

        self._hour = hour

    @property
    def minutes(self):
        """Gets the minutes of this SlaStartTimeAttributes.


        :return: The minutes of this SlaStartTimeAttributes.
        :rtype: int
        """
        return self._minutes

    @minutes.setter
    def minutes(self, minutes):
        """Sets the minutes of this SlaStartTimeAttributes.


        :param minutes: The minutes of this SlaStartTimeAttributes.
        :type minutes: int
        """
        if minutes is None:
            raise ValueError("Invalid value for `minutes`, must not be `None`")

        self._minutes = minutes
