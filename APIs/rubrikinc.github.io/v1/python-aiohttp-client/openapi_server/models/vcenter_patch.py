# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VcenterPatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ca_certs: str=None, configured_sla_domain_id: str=None):
        """VcenterPatch - a model defined in OpenAPI

        :param ca_certs: The ca_certs of this VcenterPatch.
        :param configured_sla_domain_id: The configured_sla_domain_id of this VcenterPatch.
        """
        self.openapi_types = {
            'ca_certs': str,
            'configured_sla_domain_id': str
        }

        self.attribute_map = {
            'ca_certs': 'caCerts',
            'configured_sla_domain_id': 'configuredSlaDomainId'
        }

        self._ca_certs = ca_certs
        self._configured_sla_domain_id = configured_sla_domain_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VcenterPatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VcenterPatch of this VcenterPatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ca_certs(self):
        """Gets the ca_certs of this VcenterPatch.

        Concatenated X.509 certificates in Base64 encoded DER format. Each certificate must start with -----BEGIN CERTIFICATE----- and end with -----END CERTIFICATE-----. Use an empty string to remove the existing certificates for the vCenter.

        :return: The ca_certs of this VcenterPatch.
        :rtype: str
        """
        return self._ca_certs

    @ca_certs.setter
    def ca_certs(self, ca_certs):
        """Sets the ca_certs of this VcenterPatch.

        Concatenated X.509 certificates in Base64 encoded DER format. Each certificate must start with -----BEGIN CERTIFICATE----- and end with -----END CERTIFICATE-----. Use an empty string to remove the existing certificates for the vCenter.

        :param ca_certs: The ca_certs of this VcenterPatch.
        :type ca_certs: str
        """

        self._ca_certs = ca_certs

    @property
    def configured_sla_domain_id(self):
        """Gets the configured_sla_domain_id of this VcenterPatch.

        ID of the SLA Domain that is configured for this vCenter Server.

        :return: The configured_sla_domain_id of this VcenterPatch.
        :rtype: str
        """
        return self._configured_sla_domain_id

    @configured_sla_domain_id.setter
    def configured_sla_domain_id(self, configured_sla_domain_id):
        """Sets the configured_sla_domain_id of this VcenterPatch.

        ID of the SLA Domain that is configured for this vCenter Server.

        :param configured_sla_domain_id: The configured_sla_domain_id of this VcenterPatch.
        :type configured_sla_domain_id: str
        """

        self._configured_sla_domain_id = configured_sla_domain_id
