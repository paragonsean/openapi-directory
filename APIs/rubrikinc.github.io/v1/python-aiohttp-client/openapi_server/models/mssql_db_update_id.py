# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mssql_db_update import MssqlDbUpdate
from openapi_server import util


class MssqlDbUpdateId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database_id: str=None, update_properties: MssqlDbUpdate=None):
        """MssqlDbUpdateId - a model defined in OpenAPI

        :param database_id: The database_id of this MssqlDbUpdateId.
        :param update_properties: The update_properties of this MssqlDbUpdateId.
        """
        self.openapi_types = {
            'database_id': str,
            'update_properties': MssqlDbUpdate
        }

        self.attribute_map = {
            'database_id': 'databaseId',
            'update_properties': 'updateProperties'
        }

        self._database_id = database_id
        self._update_properties = update_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MssqlDbUpdateId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MssqlDbUpdateId of this MssqlDbUpdateId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database_id(self):
        """Gets the database_id of this MssqlDbUpdateId.

        ID of the Microsoft SQL database.

        :return: The database_id of this MssqlDbUpdateId.
        :rtype: str
        """
        return self._database_id

    @database_id.setter
    def database_id(self, database_id):
        """Sets the database_id of this MssqlDbUpdateId.

        ID of the Microsoft SQL database.

        :param database_id: The database_id of this MssqlDbUpdateId.
        :type database_id: str
        """
        if database_id is None:
            raise ValueError("Invalid value for `database_id`, must not be `None`")

        self._database_id = database_id

    @property
    def update_properties(self):
        """Gets the update_properties of this MssqlDbUpdateId.


        :return: The update_properties of this MssqlDbUpdateId.
        :rtype: MssqlDbUpdate
        """
        return self._update_properties

    @update_properties.setter
    def update_properties(self, update_properties):
        """Sets the update_properties of this MssqlDbUpdateId.


        :param update_properties: The update_properties of this MssqlDbUpdateId.
        :type update_properties: MssqlDbUpdate
        """
        if update_properties is None:
            raise ValueError("Invalid value for `update_properties`, must not be `None`")

        self._update_properties = update_properties
