# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AgentStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_status: str=None, disconnect_reason: str=None):
        """AgentStatus - a model defined in OpenAPI

        :param agent_status: The agent_status of this AgentStatus.
        :param disconnect_reason: The disconnect_reason of this AgentStatus.
        """
        self.openapi_types = {
            'agent_status': str,
            'disconnect_reason': str
        }

        self.attribute_map = {
            'agent_status': 'agentStatus',
            'disconnect_reason': 'disconnectReason'
        }

        self._agent_status = agent_status
        self._disconnect_reason = disconnect_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgentStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgentStatus of this AgentStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_status(self):
        """Gets the agent_status of this AgentStatus.

        The agent connection status.

        :return: The agent_status of this AgentStatus.
        :rtype: str
        """
        return self._agent_status

    @agent_status.setter
    def agent_status(self, agent_status):
        """Sets the agent_status of this AgentStatus.

        The agent connection status.

        :param agent_status: The agent_status of this AgentStatus.
        :type agent_status: str
        """
        if agent_status is None:
            raise ValueError("Invalid value for `agent_status`, must not be `None`")

        self._agent_status = agent_status

    @property
    def disconnect_reason(self):
        """Gets the disconnect_reason of this AgentStatus.

        The reason the agent disconnected.

        :return: The disconnect_reason of this AgentStatus.
        :rtype: str
        """
        return self._disconnect_reason

    @disconnect_reason.setter
    def disconnect_reason(self, disconnect_reason):
        """Sets the disconnect_reason of this AgentStatus.

        The reason the agent disconnected.

        :param disconnect_reason: The disconnect_reason of this AgentStatus.
        :type disconnect_reason: str
        """

        self._disconnect_reason = disconnect_reason
