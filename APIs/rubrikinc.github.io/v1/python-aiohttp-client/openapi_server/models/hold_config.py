# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HoldConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_hold_in_place: bool=None):
        """HoldConfig - a model defined in OpenAPI

        :param is_hold_in_place: The is_hold_in_place of this HoldConfig.
        """
        self.openapi_types = {
            'is_hold_in_place': bool
        }

        self.attribute_map = {
            'is_hold_in_place': 'isHoldInPlace'
        }

        self._is_hold_in_place = is_hold_in_place

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HoldConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HoldConfig of this HoldConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_hold_in_place(self):
        """Gets the is_hold_in_place of this HoldConfig.

        A Boolean that specifies whether snapshots that are currently local will be kept local after archiving. When this value is 'true', a snapshot that is currently local is retained locally after being archived. The default value is 'false'.

        :return: The is_hold_in_place of this HoldConfig.
        :rtype: bool
        """
        return self._is_hold_in_place

    @is_hold_in_place.setter
    def is_hold_in_place(self, is_hold_in_place):
        """Sets the is_hold_in_place of this HoldConfig.

        A Boolean that specifies whether snapshots that are currently local will be kept local after archiving. When this value is 'true', a snapshot that is currently local is retained locally after being archived. The default value is 'false'.

        :param is_hold_in_place: The is_hold_in_place of this HoldConfig.
        :type is_hold_in_place: bool
        """

        self._is_hold_in_place = is_hold_in_place
