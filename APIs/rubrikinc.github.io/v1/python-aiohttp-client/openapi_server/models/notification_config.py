# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.notification_details import NotificationDetails
from openapi_server.models.notification_type_enum import NotificationTypeEnum
from openapi_server import util


class NotificationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, critical_details: NotificationDetails=None, info_details: NotificationDetails=None, name: str=None, notification_message: str=None, notification_type: NotificationTypeEnum=None, warn_details: NotificationDetails=None):
        """NotificationConfig - a model defined in OpenAPI

        :param critical_details: The critical_details of this NotificationConfig.
        :param info_details: The info_details of this NotificationConfig.
        :param name: The name of this NotificationConfig.
        :param notification_message: The notification_message of this NotificationConfig.
        :param notification_type: The notification_type of this NotificationConfig.
        :param warn_details: The warn_details of this NotificationConfig.
        """
        self.openapi_types = {
            'critical_details': NotificationDetails,
            'info_details': NotificationDetails,
            'name': str,
            'notification_message': str,
            'notification_type': NotificationTypeEnum,
            'warn_details': NotificationDetails
        }

        self.attribute_map = {
            'critical_details': 'criticalDetails',
            'info_details': 'infoDetails',
            'name': 'name',
            'notification_message': 'notificationMessage',
            'notification_type': 'notificationType',
            'warn_details': 'warnDetails'
        }

        self._critical_details = critical_details
        self._info_details = info_details
        self._name = name
        self._notification_message = notification_message
        self._notification_type = notification_type
        self._warn_details = warn_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationConfig of this NotificationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def critical_details(self):
        """Gets the critical_details of this NotificationConfig.


        :return: The critical_details of this NotificationConfig.
        :rtype: NotificationDetails
        """
        return self._critical_details

    @critical_details.setter
    def critical_details(self, critical_details):
        """Sets the critical_details of this NotificationConfig.


        :param critical_details: The critical_details of this NotificationConfig.
        :type critical_details: NotificationDetails
        """

        self._critical_details = critical_details

    @property
    def info_details(self):
        """Gets the info_details of this NotificationConfig.


        :return: The info_details of this NotificationConfig.
        :rtype: NotificationDetails
        """
        return self._info_details

    @info_details.setter
    def info_details(self, info_details):
        """Sets the info_details of this NotificationConfig.


        :param info_details: The info_details of this NotificationConfig.
        :type info_details: NotificationDetails
        """

        self._info_details = info_details

    @property
    def name(self):
        """Gets the name of this NotificationConfig.

        Name of notification config.

        :return: The name of this NotificationConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NotificationConfig.

        Name of notification config.

        :param name: The name of this NotificationConfig.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def notification_message(self):
        """Gets the notification_message of this NotificationConfig.

        Notification Message.

        :return: The notification_message of this NotificationConfig.
        :rtype: str
        """
        return self._notification_message

    @notification_message.setter
    def notification_message(self, notification_message):
        """Sets the notification_message of this NotificationConfig.

        Notification Message.

        :param notification_message: The notification_message of this NotificationConfig.
        :type notification_message: str
        """
        if notification_message is None:
            raise ValueError("Invalid value for `notification_message`, must not be `None`")

        self._notification_message = notification_message

    @property
    def notification_type(self):
        """Gets the notification_type of this NotificationConfig.


        :return: The notification_type of this NotificationConfig.
        :rtype: NotificationTypeEnum
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type):
        """Sets the notification_type of this NotificationConfig.


        :param notification_type: The notification_type of this NotificationConfig.
        :type notification_type: NotificationTypeEnum
        """
        if notification_type is None:
            raise ValueError("Invalid value for `notification_type`, must not be `None`")

        self._notification_type = notification_type

    @property
    def warn_details(self):
        """Gets the warn_details of this NotificationConfig.


        :return: The warn_details of this NotificationConfig.
        :rtype: NotificationDetails
        """
        return self._warn_details

    @warn_details.setter
    def warn_details(self, warn_details):
        """Sets the warn_details of this NotificationConfig.


        :param warn_details: The warn_details of this NotificationConfig.
        :type warn_details: NotificationDetails
        """

        self._warn_details = warn_details
