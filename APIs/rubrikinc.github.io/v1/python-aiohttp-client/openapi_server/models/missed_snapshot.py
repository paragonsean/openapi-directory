# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.missed_snapshot_time_unit_config import MissedSnapshotTimeUnitConfig
from openapi_server import util


class MissedSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archival_location_type: List[str]=None, missed_snapshot_time: datetime=None, missed_snapshot_time_units: List[MissedSnapshotTimeUnitConfig]=None):
        """MissedSnapshot - a model defined in OpenAPI

        :param archival_location_type: The archival_location_type of this MissedSnapshot.
        :param missed_snapshot_time: The missed_snapshot_time of this MissedSnapshot.
        :param missed_snapshot_time_units: The missed_snapshot_time_units of this MissedSnapshot.
        """
        self.openapi_types = {
            'archival_location_type': List[str],
            'missed_snapshot_time': datetime,
            'missed_snapshot_time_units': List[MissedSnapshotTimeUnitConfig]
        }

        self.attribute_map = {
            'archival_location_type': 'archivalLocationType',
            'missed_snapshot_time': 'missedSnapshotTime',
            'missed_snapshot_time_units': 'missedSnapshotTimeUnits'
        }

        self._archival_location_type = archival_location_type
        self._missed_snapshot_time = missed_snapshot_time
        self._missed_snapshot_time_units = missed_snapshot_time_units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MissedSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MissedSnapshot of this MissedSnapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archival_location_type(self):
        """Gets the archival_location_type of this MissedSnapshot.


        :return: The archival_location_type of this MissedSnapshot.
        :rtype: List[str]
        """
        return self._archival_location_type

    @archival_location_type.setter
    def archival_location_type(self, archival_location_type):
        """Sets the archival_location_type of this MissedSnapshot.


        :param archival_location_type: The archival_location_type of this MissedSnapshot.
        :type archival_location_type: List[str]
        """
        if archival_location_type is None:
            raise ValueError("Invalid value for `archival_location_type`, must not be `None`")

        self._archival_location_type = archival_location_type

    @property
    def missed_snapshot_time(self):
        """Gets the missed_snapshot_time of this MissedSnapshot.


        :return: The missed_snapshot_time of this MissedSnapshot.
        :rtype: datetime
        """
        return self._missed_snapshot_time

    @missed_snapshot_time.setter
    def missed_snapshot_time(self, missed_snapshot_time):
        """Sets the missed_snapshot_time of this MissedSnapshot.


        :param missed_snapshot_time: The missed_snapshot_time of this MissedSnapshot.
        :type missed_snapshot_time: datetime
        """
        if missed_snapshot_time is None:
            raise ValueError("Invalid value for `missed_snapshot_time`, must not be `None`")

        self._missed_snapshot_time = missed_snapshot_time

    @property
    def missed_snapshot_time_units(self):
        """Gets the missed_snapshot_time_units of this MissedSnapshot.


        :return: The missed_snapshot_time_units of this MissedSnapshot.
        :rtype: List[MissedSnapshotTimeUnitConfig]
        """
        return self._missed_snapshot_time_units

    @missed_snapshot_time_units.setter
    def missed_snapshot_time_units(self, missed_snapshot_time_units):
        """Sets the missed_snapshot_time_units of this MissedSnapshot.


        :param missed_snapshot_time_units: The missed_snapshot_time_units of this MissedSnapshot.
        :type missed_snapshot_time_units: List[MissedSnapshotTimeUnitConfig]
        """
        if missed_snapshot_time_units is None:
            raise ValueError("Invalid value for `missed_snapshot_time_units`, must not be `None`")

        self._missed_snapshot_time_units = missed_snapshot_time_units
