# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.legal_hold_download_config import LegalHoldDownloadConfig
from openapi_server import util


class FilesetDownloadFileJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, legal_hold_download_config: LegalHoldDownloadConfig=None, source_dir: str=None):
        """FilesetDownloadFileJobConfig - a model defined in OpenAPI

        :param legal_hold_download_config: The legal_hold_download_config of this FilesetDownloadFileJobConfig.
        :param source_dir: The source_dir of this FilesetDownloadFileJobConfig.
        """
        self.openapi_types = {
            'legal_hold_download_config': LegalHoldDownloadConfig,
            'source_dir': str
        }

        self.attribute_map = {
            'legal_hold_download_config': 'legalHoldDownloadConfig',
            'source_dir': 'sourceDir'
        }

        self._legal_hold_download_config = legal_hold_download_config
        self._source_dir = source_dir

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FilesetDownloadFileJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FilesetDownloadFileJobConfig of this FilesetDownloadFileJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def legal_hold_download_config(self):
        """Gets the legal_hold_download_config of this FilesetDownloadFileJobConfig.


        :return: The legal_hold_download_config of this FilesetDownloadFileJobConfig.
        :rtype: LegalHoldDownloadConfig
        """
        return self._legal_hold_download_config

    @legal_hold_download_config.setter
    def legal_hold_download_config(self, legal_hold_download_config):
        """Sets the legal_hold_download_config of this FilesetDownloadFileJobConfig.


        :param legal_hold_download_config: The legal_hold_download_config of this FilesetDownloadFileJobConfig.
        :type legal_hold_download_config: LegalHoldDownloadConfig
        """

        self._legal_hold_download_config = legal_hold_download_config

    @property
    def source_dir(self):
        """Gets the source_dir of this FilesetDownloadFileJobConfig.

        Source directory to download from.

        :return: The source_dir of this FilesetDownloadFileJobConfig.
        :rtype: str
        """
        return self._source_dir

    @source_dir.setter
    def source_dir(self, source_dir):
        """Sets the source_dir of this FilesetDownloadFileJobConfig.

        Source directory to download from.

        :param source_dir: The source_dir of this FilesetDownloadFileJobConfig.
        :type source_dir: str
        """
        if source_dir is None:
            raise ValueError("Invalid value for `source_dir`, must not be `None`")

        self._source_dir = source_dir
