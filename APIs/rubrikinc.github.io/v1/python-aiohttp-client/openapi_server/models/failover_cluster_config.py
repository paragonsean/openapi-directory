# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailoverClusterConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configured_sla_domain_id: str=None, host_ids: List[str]=None, name: str=None):
        """FailoverClusterConfig - a model defined in OpenAPI

        :param configured_sla_domain_id: The configured_sla_domain_id of this FailoverClusterConfig.
        :param host_ids: The host_ids of this FailoverClusterConfig.
        :param name: The name of this FailoverClusterConfig.
        """
        self.openapi_types = {
            'configured_sla_domain_id': str,
            'host_ids': List[str],
            'name': str
        }

        self.attribute_map = {
            'configured_sla_domain_id': 'configuredSlaDomainId',
            'host_ids': 'hostIds',
            'name': 'name'
        }

        self._configured_sla_domain_id = configured_sla_domain_id
        self._host_ids = host_ids
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverClusterConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverClusterConfig of this FailoverClusterConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configured_sla_domain_id(self):
        """Gets the configured_sla_domain_id of this FailoverClusterConfig.

        ID of the SLA Domain that is assigned to the specified failover cluster. Existing snapshots of the object will be retained with the configuration of specified SLA Domain.

        :return: The configured_sla_domain_id of this FailoverClusterConfig.
        :rtype: str
        """
        return self._configured_sla_domain_id

    @configured_sla_domain_id.setter
    def configured_sla_domain_id(self, configured_sla_domain_id):
        """Sets the configured_sla_domain_id of this FailoverClusterConfig.

        ID of the SLA Domain that is assigned to the specified failover cluster. Existing snapshots of the object will be retained with the configuration of specified SLA Domain.

        :param configured_sla_domain_id: The configured_sla_domain_id of this FailoverClusterConfig.
        :type configured_sla_domain_id: str
        """

        self._configured_sla_domain_id = configured_sla_domain_id

    @property
    def host_ids(self):
        """Gets the host_ids of this FailoverClusterConfig.

        Managed ID's of Hosts of the failover cluster.

        :return: The host_ids of this FailoverClusterConfig.
        :rtype: List[str]
        """
        return self._host_ids

    @host_ids.setter
    def host_ids(self, host_ids):
        """Sets the host_ids of this FailoverClusterConfig.

        Managed ID's of Hosts of the failover cluster.

        :param host_ids: The host_ids of this FailoverClusterConfig.
        :type host_ids: List[str]
        """
        if host_ids is None:
            raise ValueError("Invalid value for `host_ids`, must not be `None`")

        self._host_ids = host_ids

    @property
    def name(self):
        """Gets the name of this FailoverClusterConfig.

        Name of the failover cluster.

        :return: The name of this FailoverClusterConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FailoverClusterConfig.

        Name of the failover cluster.

        :param name: The name of this FailoverClusterConfig.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name
