# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkDeleteSnapshotsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_ids: List[str]=None):
        """BulkDeleteSnapshotsConfig - a model defined in OpenAPI

        :param object_ids: The object_ids of this BulkDeleteSnapshotsConfig.
        """
        self.openapi_types = {
            'object_ids': List[str]
        }

        self.attribute_map = {
            'object_ids': 'objectIds'
        }

        self._object_ids = object_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkDeleteSnapshotsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkDeleteSnapshotsConfig of this BulkDeleteSnapshotsConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_ids(self):
        """Gets the object_ids of this BulkDeleteSnapshotsConfig.

        List of object IDs. This endpoint deletes all snapshots from all locations for the objects with the specified IDs. 

        :return: The object_ids of this BulkDeleteSnapshotsConfig.
        :rtype: List[str]
        """
        return self._object_ids

    @object_ids.setter
    def object_ids(self, object_ids):
        """Sets the object_ids of this BulkDeleteSnapshotsConfig.

        List of object IDs. This endpoint deletes all snapshots from all locations for the objects with the specified IDs. 

        :param object_ids: The object_ids of this BulkDeleteSnapshotsConfig.
        :type object_ids: List[str]
        """
        if object_ids is None:
            raise ValueError("Invalid value for `object_ids`, must not be `None`")

        self._object_ids = object_ids
