# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KuprHostRegister(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_certificate: str=None, agent_id: str=None, hostname: str=None, ipv4_addresses: List[str]=None, operating_system_info: str=None, operating_system_type: str=None, operating_system_version: str=None):
        """KuprHostRegister - a model defined in OpenAPI

        :param agent_certificate: The agent_certificate of this KuprHostRegister.
        :param agent_id: The agent_id of this KuprHostRegister.
        :param hostname: The hostname of this KuprHostRegister.
        :param ipv4_addresses: The ipv4_addresses of this KuprHostRegister.
        :param operating_system_info: The operating_system_info of this KuprHostRegister.
        :param operating_system_type: The operating_system_type of this KuprHostRegister.
        :param operating_system_version: The operating_system_version of this KuprHostRegister.
        """
        self.openapi_types = {
            'agent_certificate': str,
            'agent_id': str,
            'hostname': str,
            'ipv4_addresses': List[str],
            'operating_system_info': str,
            'operating_system_type': str,
            'operating_system_version': str
        }

        self.attribute_map = {
            'agent_certificate': 'agentCertificate',
            'agent_id': 'agentId',
            'hostname': 'hostname',
            'ipv4_addresses': 'ipv4Addresses',
            'operating_system_info': 'operatingSystemInfo',
            'operating_system_type': 'operatingSystemType',
            'operating_system_version': 'operatingSystemVersion'
        }

        self._agent_certificate = agent_certificate
        self._agent_id = agent_id
        self._hostname = hostname
        self._ipv4_addresses = ipv4_addresses
        self._operating_system_info = operating_system_info
        self._operating_system_type = operating_system_type
        self._operating_system_version = operating_system_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KuprHostRegister':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KuprHostRegister of this KuprHostRegister.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_certificate(self):
        """Gets the agent_certificate of this KuprHostRegister.

        The agent certificate of the registered host. X.509 certificates in Base64 encoded DER format. Each certificate must start with -----BEGIN CERTIFICATE----- and end with -----END CERTIFICATE-----. 

        :return: The agent_certificate of this KuprHostRegister.
        :rtype: str
        """
        return self._agent_certificate

    @agent_certificate.setter
    def agent_certificate(self, agent_certificate):
        """Sets the agent_certificate of this KuprHostRegister.

        The agent certificate of the registered host. X.509 certificates in Base64 encoded DER format. Each certificate must start with -----BEGIN CERTIFICATE----- and end with -----END CERTIFICATE-----. 

        :param agent_certificate: The agent_certificate of this KuprHostRegister.
        :type agent_certificate: str
        """
        if agent_certificate is None:
            raise ValueError("Invalid value for `agent_certificate`, must not be `None`")

        self._agent_certificate = agent_certificate

    @property
    def agent_id(self):
        """Gets the agent_id of this KuprHostRegister.

        The agent ID of the registered host.

        :return: The agent_id of this KuprHostRegister.
        :rtype: str
        """
        return self._agent_id

    @agent_id.setter
    def agent_id(self, agent_id):
        """Sets the agent_id of this KuprHostRegister.

        The agent ID of the registered host.

        :param agent_id: The agent_id of this KuprHostRegister.
        :type agent_id: str
        """
        if agent_id is None:
            raise ValueError("Invalid value for `agent_id`, must not be `None`")

        self._agent_id = agent_id

    @property
    def hostname(self):
        """Gets the hostname of this KuprHostRegister.


        :return: The hostname of this KuprHostRegister.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this KuprHostRegister.


        :param hostname: The hostname of this KuprHostRegister.
        :type hostname: str
        """
        if hostname is None:
            raise ValueError("Invalid value for `hostname`, must not be `None`")

        self._hostname = hostname

    @property
    def ipv4_addresses(self):
        """Gets the ipv4_addresses of this KuprHostRegister.


        :return: The ipv4_addresses of this KuprHostRegister.
        :rtype: List[str]
        """
        return self._ipv4_addresses

    @ipv4_addresses.setter
    def ipv4_addresses(self, ipv4_addresses):
        """Sets the ipv4_addresses of this KuprHostRegister.


        :param ipv4_addresses: The ipv4_addresses of this KuprHostRegister.
        :type ipv4_addresses: List[str]
        """

        self._ipv4_addresses = ipv4_addresses

    @property
    def operating_system_info(self):
        """Gets the operating_system_info of this KuprHostRegister.

        Operating system information of a specified kupr host.

        :return: The operating_system_info of this KuprHostRegister.
        :rtype: str
        """
        return self._operating_system_info

    @operating_system_info.setter
    def operating_system_info(self, operating_system_info):
        """Sets the operating_system_info of this KuprHostRegister.

        Operating system information of a specified kupr host.

        :param operating_system_info: The operating_system_info of this KuprHostRegister.
        :type operating_system_info: str
        """
        allowed_values = ["Linux", "Rhel", "Ubuntu", "Suse", "Centos"]  # noqa: E501
        if operating_system_info not in allowed_values:
            raise ValueError(
                "Invalid value for `operating_system_info` ({0}), must be one of {1}"
                .format(operating_system_info, allowed_values)
            )

        self._operating_system_info = operating_system_info

    @property
    def operating_system_type(self):
        """Gets the operating_system_type of this KuprHostRegister.

        Operating system of a specified kupr host.

        :return: The operating_system_type of this KuprHostRegister.
        :rtype: str
        """
        return self._operating_system_type

    @operating_system_type.setter
    def operating_system_type(self, operating_system_type):
        """Sets the operating_system_type of this KuprHostRegister.

        Operating system of a specified kupr host.

        :param operating_system_type: The operating_system_type of this KuprHostRegister.
        :type operating_system_type: str
        """
        allowed_values = ["Linux"]  # noqa: E501
        if operating_system_type not in allowed_values:
            raise ValueError(
                "Invalid value for `operating_system_type` ({0}), must be one of {1}"
                .format(operating_system_type, allowed_values)
            )

        self._operating_system_type = operating_system_type

    @property
    def operating_system_version(self):
        """Gets the operating_system_version of this KuprHostRegister.

        Operating system version of a specified kupr host.

        :return: The operating_system_version of this KuprHostRegister.
        :rtype: str
        """
        return self._operating_system_version

    @operating_system_version.setter
    def operating_system_version(self, operating_system_version):
        """Sets the operating_system_version of this KuprHostRegister.

        Operating system version of a specified kupr host.

        :param operating_system_version: The operating_system_version of this KuprHostRegister.
        :type operating_system_version: str
        """

        self._operating_system_version = operating_system_version
