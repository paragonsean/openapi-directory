# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MountExportSnapshotJobCommonOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_network: bool=None, keep_mac_addresses: bool=None, power_on: bool=None, remove_network_devices: bool=None, vm_name: str=None):
        """MountExportSnapshotJobCommonOptions - a model defined in OpenAPI

        :param disable_network: The disable_network of this MountExportSnapshotJobCommonOptions.
        :param keep_mac_addresses: The keep_mac_addresses of this MountExportSnapshotJobCommonOptions.
        :param power_on: The power_on of this MountExportSnapshotJobCommonOptions.
        :param remove_network_devices: The remove_network_devices of this MountExportSnapshotJobCommonOptions.
        :param vm_name: The vm_name of this MountExportSnapshotJobCommonOptions.
        """
        self.openapi_types = {
            'disable_network': bool,
            'keep_mac_addresses': bool,
            'power_on': bool,
            'remove_network_devices': bool,
            'vm_name': str
        }

        self.attribute_map = {
            'disable_network': 'disableNetwork',
            'keep_mac_addresses': 'keepMacAddresses',
            'power_on': 'powerOn',
            'remove_network_devices': 'removeNetworkDevices',
            'vm_name': 'vmName'
        }

        self._disable_network = disable_network
        self._keep_mac_addresses = keep_mac_addresses
        self._power_on = power_on
        self._remove_network_devices = remove_network_devices
        self._vm_name = vm_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MountExportSnapshotJobCommonOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MountExportSnapshotJobCommonOptions of this MountExportSnapshotJobCommonOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_network(self):
        """Gets the disable_network of this MountExportSnapshotJobCommonOptions.

        Sets the state of the network interfaces when the virtual machine is mounted or exported. Use 'false' to enable the network interfaces. Use 'true' to disable the network interfaces. Disabling the interfaces can prevent IP conflicts.

        :return: The disable_network of this MountExportSnapshotJobCommonOptions.
        :rtype: bool
        """
        return self._disable_network

    @disable_network.setter
    def disable_network(self, disable_network):
        """Sets the disable_network of this MountExportSnapshotJobCommonOptions.

        Sets the state of the network interfaces when the virtual machine is mounted or exported. Use 'false' to enable the network interfaces. Use 'true' to disable the network interfaces. Disabling the interfaces can prevent IP conflicts.

        :param disable_network: The disable_network of this MountExportSnapshotJobCommonOptions.
        :type disable_network: bool
        """

        self._disable_network = disable_network

    @property
    def keep_mac_addresses(self):
        """Gets the keep_mac_addresses of this MountExportSnapshotJobCommonOptions.

        Determines whether the MAC addresses of the network interfaces on the source virtual machine are assigned to the new virtual machine. Set to 'true' to assign the original MAC addresses to the new virtual machine. Set to 'false' to assign new MAC addresses. The default is 'false'. When removeNetworkDevices is set to true, this property is ignored.

        :return: The keep_mac_addresses of this MountExportSnapshotJobCommonOptions.
        :rtype: bool
        """
        return self._keep_mac_addresses

    @keep_mac_addresses.setter
    def keep_mac_addresses(self, keep_mac_addresses):
        """Sets the keep_mac_addresses of this MountExportSnapshotJobCommonOptions.

        Determines whether the MAC addresses of the network interfaces on the source virtual machine are assigned to the new virtual machine. Set to 'true' to assign the original MAC addresses to the new virtual machine. Set to 'false' to assign new MAC addresses. The default is 'false'. When removeNetworkDevices is set to true, this property is ignored.

        :param keep_mac_addresses: The keep_mac_addresses of this MountExportSnapshotJobCommonOptions.
        :type keep_mac_addresses: bool
        """

        self._keep_mac_addresses = keep_mac_addresses

    @property
    def power_on(self):
        """Gets the power_on of this MountExportSnapshotJobCommonOptions.

        Determines whether the virtual machine should be powered on after mount or export. Set to 'true' to power on the virtual machine. Set to 'false' to mount or export the virtual machine but not power it on. The default is 'true'.

        :return: The power_on of this MountExportSnapshotJobCommonOptions.
        :rtype: bool
        """
        return self._power_on

    @power_on.setter
    def power_on(self, power_on):
        """Sets the power_on of this MountExportSnapshotJobCommonOptions.

        Determines whether the virtual machine should be powered on after mount or export. Set to 'true' to power on the virtual machine. Set to 'false' to mount or export the virtual machine but not power it on. The default is 'true'.

        :param power_on: The power_on of this MountExportSnapshotJobCommonOptions.
        :type power_on: bool
        """

        self._power_on = power_on

    @property
    def remove_network_devices(self):
        """Gets the remove_network_devices of this MountExportSnapshotJobCommonOptions.

        Determines whether to remove the network interfaces from the mounted or exported virtual machine. Set to 'true' to remove all network interfaces. The default value is 'false'.

        :return: The remove_network_devices of this MountExportSnapshotJobCommonOptions.
        :rtype: bool
        """
        return self._remove_network_devices

    @remove_network_devices.setter
    def remove_network_devices(self, remove_network_devices):
        """Sets the remove_network_devices of this MountExportSnapshotJobCommonOptions.

        Determines whether to remove the network interfaces from the mounted or exported virtual machine. Set to 'true' to remove all network interfaces. The default value is 'false'.

        :param remove_network_devices: The remove_network_devices of this MountExportSnapshotJobCommonOptions.
        :type remove_network_devices: bool
        """

        self._remove_network_devices = remove_network_devices

    @property
    def vm_name(self):
        """Gets the vm_name of this MountExportSnapshotJobCommonOptions.

        Name of the new VM created by mount or export.

        :return: The vm_name of this MountExportSnapshotJobCommonOptions.
        :rtype: str
        """
        return self._vm_name

    @vm_name.setter
    def vm_name(self, vm_name):
        """Sets the vm_name of this MountExportSnapshotJobCommonOptions.

        Name of the new VM created by mount or export.

        :param vm_name: The vm_name of this MountExportSnapshotJobCommonOptions.
        :type vm_name: str
        """

        self._vm_name = vm_name
