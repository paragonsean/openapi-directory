# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.syslog_facility import SyslogFacility
from openapi_server.models.syslog_severity import SyslogSeverity
from openapi_server.models.transport_layer_protocol import TransportLayerProtocol
from openapi_server import util


class SyslogExportRulePartial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_id: str=None, enable_tls: bool=None, facility: SyslogFacility=None, hostname: str=None, port: int=None, protocol: TransportLayerProtocol=None, severity: SyslogSeverity=None):
        """SyslogExportRulePartial - a model defined in OpenAPI

        :param certificate_id: The certificate_id of this SyslogExportRulePartial.
        :param enable_tls: The enable_tls of this SyslogExportRulePartial.
        :param facility: The facility of this SyslogExportRulePartial.
        :param hostname: The hostname of this SyslogExportRulePartial.
        :param port: The port of this SyslogExportRulePartial.
        :param protocol: The protocol of this SyslogExportRulePartial.
        :param severity: The severity of this SyslogExportRulePartial.
        """
        self.openapi_types = {
            'certificate_id': str,
            'enable_tls': bool,
            'facility': SyslogFacility,
            'hostname': str,
            'port': int,
            'protocol': TransportLayerProtocol,
            'severity': SyslogSeverity
        }

        self.attribute_map = {
            'certificate_id': 'certificateId',
            'enable_tls': 'enableTls',
            'facility': 'facility',
            'hostname': 'hostname',
            'port': 'port',
            'protocol': 'protocol',
            'severity': 'severity'
        }

        self._certificate_id = certificate_id
        self._enable_tls = enable_tls
        self._facility = facility
        self._hostname = hostname
        self._port = port
        self._protocol = protocol
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyslogExportRulePartial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SyslogExportRulePartial of this SyslogExportRulePartial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_id(self):
        """Gets the certificate_id of this SyslogExportRulePartial.

        The ID corresponding to the imported certificate used by the syslog server. 

        :return: The certificate_id of this SyslogExportRulePartial.
        :rtype: str
        """
        return self._certificate_id

    @certificate_id.setter
    def certificate_id(self, certificate_id):
        """Sets the certificate_id of this SyslogExportRulePartial.

        The ID corresponding to the imported certificate used by the syslog server. 

        :param certificate_id: The certificate_id of this SyslogExportRulePartial.
        :type certificate_id: str
        """

        self._certificate_id = certificate_id

    @property
    def enable_tls(self):
        """Gets the enable_tls of this SyslogExportRulePartial.

        Specifies whether TLS should be used to communicate with the syslog server. 

        :return: The enable_tls of this SyslogExportRulePartial.
        :rtype: bool
        """
        return self._enable_tls

    @enable_tls.setter
    def enable_tls(self, enable_tls):
        """Sets the enable_tls of this SyslogExportRulePartial.

        Specifies whether TLS should be used to communicate with the syslog server. 

        :param enable_tls: The enable_tls of this SyslogExportRulePartial.
        :type enable_tls: bool
        """

        self._enable_tls = enable_tls

    @property
    def facility(self):
        """Gets the facility of this SyslogExportRulePartial.


        :return: The facility of this SyslogExportRulePartial.
        :rtype: SyslogFacility
        """
        return self._facility

    @facility.setter
    def facility(self, facility):
        """Sets the facility of this SyslogExportRulePartial.


        :param facility: The facility of this SyslogExportRulePartial.
        :type facility: SyslogFacility
        """

        self._facility = facility

    @property
    def hostname(self):
        """Gets the hostname of this SyslogExportRulePartial.


        :return: The hostname of this SyslogExportRulePartial.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this SyslogExportRulePartial.


        :param hostname: The hostname of this SyslogExportRulePartial.
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def port(self):
        """Gets the port of this SyslogExportRulePartial.


        :return: The port of this SyslogExportRulePartial.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this SyslogExportRulePartial.


        :param port: The port of this SyslogExportRulePartial.
        :type port: int
        """

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this SyslogExportRulePartial.


        :return: The protocol of this SyslogExportRulePartial.
        :rtype: TransportLayerProtocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this SyslogExportRulePartial.


        :param protocol: The protocol of this SyslogExportRulePartial.
        :type protocol: TransportLayerProtocol
        """

        self._protocol = protocol

    @property
    def severity(self):
        """Gets the severity of this SyslogExportRulePartial.


        :return: The severity of this SyslogExportRulePartial.
        :rtype: SyslogSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this SyslogExportRulePartial.


        :param severity: The severity of this SyslogExportRulePartial.
        :type severity: SyslogSeverity
        """

        self._severity = severity
