# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compliance_range_filter import ComplianceRangeFilter
from openapi_server.models.compliance_summary_status import ComplianceSummaryStatus
from openapi_server import util


class ComplianceSummarySLAV1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_in_compliance_snapshots: int=None, number_of_out_of_compliance_snapshots: int=None, percent_of_in_compliance_snapshots: float=None, percent_of_out_of_compliance_snapshots: float=None, snapshot_range: ComplianceRangeFilter=None, total_protected: int=None, updated_status: ComplianceSummaryStatus=None, updated_time: datetime=None):
        """ComplianceSummarySLAV1 - a model defined in OpenAPI

        :param number_of_in_compliance_snapshots: The number_of_in_compliance_snapshots of this ComplianceSummarySLAV1.
        :param number_of_out_of_compliance_snapshots: The number_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.
        :param percent_of_in_compliance_snapshots: The percent_of_in_compliance_snapshots of this ComplianceSummarySLAV1.
        :param percent_of_out_of_compliance_snapshots: The percent_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.
        :param snapshot_range: The snapshot_range of this ComplianceSummarySLAV1.
        :param total_protected: The total_protected of this ComplianceSummarySLAV1.
        :param updated_status: The updated_status of this ComplianceSummarySLAV1.
        :param updated_time: The updated_time of this ComplianceSummarySLAV1.
        """
        self.openapi_types = {
            'number_of_in_compliance_snapshots': int,
            'number_of_out_of_compliance_snapshots': int,
            'percent_of_in_compliance_snapshots': float,
            'percent_of_out_of_compliance_snapshots': float,
            'snapshot_range': ComplianceRangeFilter,
            'total_protected': int,
            'updated_status': ComplianceSummaryStatus,
            'updated_time': datetime
        }

        self.attribute_map = {
            'number_of_in_compliance_snapshots': 'numberOfInComplianceSnapshots',
            'number_of_out_of_compliance_snapshots': 'numberOfOutOfComplianceSnapshots',
            'percent_of_in_compliance_snapshots': 'percentOfInComplianceSnapshots',
            'percent_of_out_of_compliance_snapshots': 'percentOfOutOfComplianceSnapshots',
            'snapshot_range': 'snapshotRange',
            'total_protected': 'totalProtected',
            'updated_status': 'updatedStatus',
            'updated_time': 'updatedTime'
        }

        self._number_of_in_compliance_snapshots = number_of_in_compliance_snapshots
        self._number_of_out_of_compliance_snapshots = number_of_out_of_compliance_snapshots
        self._percent_of_in_compliance_snapshots = percent_of_in_compliance_snapshots
        self._percent_of_out_of_compliance_snapshots = percent_of_out_of_compliance_snapshots
        self._snapshot_range = snapshot_range
        self._total_protected = total_protected
        self._updated_status = updated_status
        self._updated_time = updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceSummarySLAV1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComplianceSummarySLAV1 of this ComplianceSummarySLAV1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_in_compliance_snapshots(self):
        """Gets the number_of_in_compliance_snapshots of this ComplianceSummarySLAV1.

        Number of objects in compliance based on the snapshot range filter.

        :return: The number_of_in_compliance_snapshots of this ComplianceSummarySLAV1.
        :rtype: int
        """
        return self._number_of_in_compliance_snapshots

    @number_of_in_compliance_snapshots.setter
    def number_of_in_compliance_snapshots(self, number_of_in_compliance_snapshots):
        """Sets the number_of_in_compliance_snapshots of this ComplianceSummarySLAV1.

        Number of objects in compliance based on the snapshot range filter.

        :param number_of_in_compliance_snapshots: The number_of_in_compliance_snapshots of this ComplianceSummarySLAV1.
        :type number_of_in_compliance_snapshots: int
        """

        self._number_of_in_compliance_snapshots = number_of_in_compliance_snapshots

    @property
    def number_of_out_of_compliance_snapshots(self):
        """Gets the number_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.

        Number of objects out of compliance based on the snapshot range filter.

        :return: The number_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.
        :rtype: int
        """
        return self._number_of_out_of_compliance_snapshots

    @number_of_out_of_compliance_snapshots.setter
    def number_of_out_of_compliance_snapshots(self, number_of_out_of_compliance_snapshots):
        """Sets the number_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.

        Number of objects out of compliance based on the snapshot range filter.

        :param number_of_out_of_compliance_snapshots: The number_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.
        :type number_of_out_of_compliance_snapshots: int
        """

        self._number_of_out_of_compliance_snapshots = number_of_out_of_compliance_snapshots

    @property
    def percent_of_in_compliance_snapshots(self):
        """Gets the percent_of_in_compliance_snapshots of this ComplianceSummarySLAV1.

        Percent of objects in compliance based on the snapshot range filter.

        :return: The percent_of_in_compliance_snapshots of this ComplianceSummarySLAV1.
        :rtype: float
        """
        return self._percent_of_in_compliance_snapshots

    @percent_of_in_compliance_snapshots.setter
    def percent_of_in_compliance_snapshots(self, percent_of_in_compliance_snapshots):
        """Sets the percent_of_in_compliance_snapshots of this ComplianceSummarySLAV1.

        Percent of objects in compliance based on the snapshot range filter.

        :param percent_of_in_compliance_snapshots: The percent_of_in_compliance_snapshots of this ComplianceSummarySLAV1.
        :type percent_of_in_compliance_snapshots: float
        """

        self._percent_of_in_compliance_snapshots = percent_of_in_compliance_snapshots

    @property
    def percent_of_out_of_compliance_snapshots(self):
        """Gets the percent_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.

        Percent of objects out of compliance based on the snapshot range filter.

        :return: The percent_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.
        :rtype: float
        """
        return self._percent_of_out_of_compliance_snapshots

    @percent_of_out_of_compliance_snapshots.setter
    def percent_of_out_of_compliance_snapshots(self, percent_of_out_of_compliance_snapshots):
        """Sets the percent_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.

        Percent of objects out of compliance based on the snapshot range filter.

        :param percent_of_out_of_compliance_snapshots: The percent_of_out_of_compliance_snapshots of this ComplianceSummarySLAV1.
        :type percent_of_out_of_compliance_snapshots: float
        """

        self._percent_of_out_of_compliance_snapshots = percent_of_out_of_compliance_snapshots

    @property
    def snapshot_range(self):
        """Gets the snapshot_range of this ComplianceSummarySLAV1.


        :return: The snapshot_range of this ComplianceSummarySLAV1.
        :rtype: ComplianceRangeFilter
        """
        return self._snapshot_range

    @snapshot_range.setter
    def snapshot_range(self, snapshot_range):
        """Sets the snapshot_range of this ComplianceSummarySLAV1.


        :param snapshot_range: The snapshot_range of this ComplianceSummarySLAV1.
        :type snapshot_range: ComplianceRangeFilter
        """
        if snapshot_range is None:
            raise ValueError("Invalid value for `snapshot_range`, must not be `None`")

        self._snapshot_range = snapshot_range

    @property
    def total_protected(self):
        """Gets the total_protected of this ComplianceSummarySLAV1.

        Total number of protected objects based on the snapshot range filter.

        :return: The total_protected of this ComplianceSummarySLAV1.
        :rtype: int
        """
        return self._total_protected

    @total_protected.setter
    def total_protected(self, total_protected):
        """Sets the total_protected of this ComplianceSummarySLAV1.

        Total number of protected objects based on the snapshot range filter.

        :param total_protected: The total_protected of this ComplianceSummarySLAV1.
        :type total_protected: int
        """

        self._total_protected = total_protected

    @property
    def updated_status(self):
        """Gets the updated_status of this ComplianceSummarySLAV1.


        :return: The updated_status of this ComplianceSummarySLAV1.
        :rtype: ComplianceSummaryStatus
        """
        return self._updated_status

    @updated_status.setter
    def updated_status(self, updated_status):
        """Sets the updated_status of this ComplianceSummarySLAV1.


        :param updated_status: The updated_status of this ComplianceSummarySLAV1.
        :type updated_status: ComplianceSummaryStatus
        """
        if updated_status is None:
            raise ValueError("Invalid value for `updated_status`, must not be `None`")

        self._updated_status = updated_status

    @property
    def updated_time(self):
        """Gets the updated_time of this ComplianceSummarySLAV1.

        The timestamp of the most recent successful update to the compliance summary stats.

        :return: The updated_time of this ComplianceSummarySLAV1.
        :rtype: datetime
        """
        return self._updated_time

    @updated_time.setter
    def updated_time(self, updated_time):
        """Sets the updated_time of this ComplianceSummarySLAV1.

        The timestamp of the most recent successful update to the compliance summary stats.

        :param updated_time: The updated_time of this ComplianceSummarySLAV1.
        :type updated_time: datetime
        """

        self._updated_time = updated_time
