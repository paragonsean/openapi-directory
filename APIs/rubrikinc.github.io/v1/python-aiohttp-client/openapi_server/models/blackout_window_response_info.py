# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.blackout_window_status import BlackoutWindowStatus
from openapi_server.models.blackout_windows import BlackoutWindows
from openapi_server import util


class BlackoutWindowResponseInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blackout_window_status: BlackoutWindowStatus=None, blackout_windows: BlackoutWindows=None):
        """BlackoutWindowResponseInfo - a model defined in OpenAPI

        :param blackout_window_status: The blackout_window_status of this BlackoutWindowResponseInfo.
        :param blackout_windows: The blackout_windows of this BlackoutWindowResponseInfo.
        """
        self.openapi_types = {
            'blackout_window_status': BlackoutWindowStatus,
            'blackout_windows': BlackoutWindows
        }

        self.attribute_map = {
            'blackout_window_status': 'blackoutWindowStatus',
            'blackout_windows': 'blackoutWindows'
        }

        self._blackout_window_status = blackout_window_status
        self._blackout_windows = blackout_windows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlackoutWindowResponseInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlackoutWindowResponseInfo of this BlackoutWindowResponseInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blackout_window_status(self):
        """Gets the blackout_window_status of this BlackoutWindowResponseInfo.


        :return: The blackout_window_status of this BlackoutWindowResponseInfo.
        :rtype: BlackoutWindowStatus
        """
        return self._blackout_window_status

    @blackout_window_status.setter
    def blackout_window_status(self, blackout_window_status):
        """Sets the blackout_window_status of this BlackoutWindowResponseInfo.


        :param blackout_window_status: The blackout_window_status of this BlackoutWindowResponseInfo.
        :type blackout_window_status: BlackoutWindowStatus
        """
        if blackout_window_status is None:
            raise ValueError("Invalid value for `blackout_window_status`, must not be `None`")

        self._blackout_window_status = blackout_window_status

    @property
    def blackout_windows(self):
        """Gets the blackout_windows of this BlackoutWindowResponseInfo.


        :return: The blackout_windows of this BlackoutWindowResponseInfo.
        :rtype: BlackoutWindows
        """
        return self._blackout_windows

    @blackout_windows.setter
    def blackout_windows(self, blackout_windows):
        """Sets the blackout_windows of this BlackoutWindowResponseInfo.


        :param blackout_windows: The blackout_windows of this BlackoutWindowResponseInfo.
        :type blackout_windows: BlackoutWindows
        """
        if blackout_windows is None:
            raise ValueError("Invalid value for `blackout_windows`, must not be `None`")

        self._blackout_windows = blackout_windows
