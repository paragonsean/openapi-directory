# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UploadParameterObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aws_access_key_id: str=None, content_type: str=None, policy: str=None, signature: str=None, acl: str=None, action: str=None, key: str=None):
        """UploadParameterObject - a model defined in OpenAPI

        :param aws_access_key_id: The aws_access_key_id of this UploadParameterObject.
        :param content_type: The content_type of this UploadParameterObject.
        :param policy: The policy of this UploadParameterObject.
        :param signature: The signature of this UploadParameterObject.
        :param acl: The acl of this UploadParameterObject.
        :param action: The action of this UploadParameterObject.
        :param key: The key of this UploadParameterObject.
        """
        self.openapi_types = {
            'aws_access_key_id': str,
            'content_type': str,
            'policy': str,
            'signature': str,
            'acl': str,
            'action': str,
            'key': str
        }

        self.attribute_map = {
            'aws_access_key_id': 'AWSAccessKeyId',
            'content_type': 'Content-Type',
            'policy': 'Policy',
            'signature': 'Signature',
            'acl': 'acl',
            'action': 'action',
            'key': 'key'
        }

        self._aws_access_key_id = aws_access_key_id
        self._content_type = content_type
        self._policy = policy
        self._signature = signature
        self._acl = acl
        self._action = action
        self._key = key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadParameterObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadParameterObject of this UploadParameterObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aws_access_key_id(self):
        """Gets the aws_access_key_id of this UploadParameterObject.


        :return: The aws_access_key_id of this UploadParameterObject.
        :rtype: str
        """
        return self._aws_access_key_id

    @aws_access_key_id.setter
    def aws_access_key_id(self, aws_access_key_id):
        """Sets the aws_access_key_id of this UploadParameterObject.


        :param aws_access_key_id: The aws_access_key_id of this UploadParameterObject.
        :type aws_access_key_id: str
        """

        self._aws_access_key_id = aws_access_key_id

    @property
    def content_type(self):
        """Gets the content_type of this UploadParameterObject.


        :return: The content_type of this UploadParameterObject.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this UploadParameterObject.


        :param content_type: The content_type of this UploadParameterObject.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def policy(self):
        """Gets the policy of this UploadParameterObject.


        :return: The policy of this UploadParameterObject.
        :rtype: str
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this UploadParameterObject.


        :param policy: The policy of this UploadParameterObject.
        :type policy: str
        """

        self._policy = policy

    @property
    def signature(self):
        """Gets the signature of this UploadParameterObject.


        :return: The signature of this UploadParameterObject.
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this UploadParameterObject.


        :param signature: The signature of this UploadParameterObject.
        :type signature: str
        """

        self._signature = signature

    @property
    def acl(self):
        """Gets the acl of this UploadParameterObject.


        :return: The acl of this UploadParameterObject.
        :rtype: str
        """
        return self._acl

    @acl.setter
    def acl(self, acl):
        """Sets the acl of this UploadParameterObject.


        :param acl: The acl of this UploadParameterObject.
        :type acl: str
        """

        self._acl = acl

    @property
    def action(self):
        """Gets the action of this UploadParameterObject.


        :return: The action of this UploadParameterObject.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this UploadParameterObject.


        :param action: The action of this UploadParameterObject.
        :type action: str
        """

        self._action = action

    @property
    def key(self):
        """Gets the key of this UploadParameterObject.


        :return: The key of this UploadParameterObject.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this UploadParameterObject.


        :param key: The key of this UploadParameterObject.
        :type key: str
        """

        self._key = key
