# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StreamInformationObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, playback_url: str=None, stream_url: str=None):
        """StreamInformationObject - a model defined in OpenAPI

        :param playback_url: The playback_url of this StreamInformationObject.
        :param stream_url: The stream_url of this StreamInformationObject.
        """
        self.openapi_types = {
            'playback_url': str,
            'stream_url': str
        }

        self.attribute_map = {
            'playback_url': 'playback_url',
            'stream_url': 'stream_url'
        }

        self._playback_url = playback_url
        self._stream_url = stream_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamInformationObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamInformationObject of this StreamInformationObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def playback_url(self):
        """Gets the playback_url of this StreamInformationObject.


        :return: The playback_url of this StreamInformationObject.
        :rtype: str
        """
        return self._playback_url

    @playback_url.setter
    def playback_url(self, playback_url):
        """Sets the playback_url of this StreamInformationObject.


        :param playback_url: The playback_url of this StreamInformationObject.
        :type playback_url: str
        """
        if playback_url is None:
            raise ValueError("Invalid value for `playback_url`, must not be `None`")

        self._playback_url = playback_url

    @property
    def stream_url(self):
        """Gets the stream_url of this StreamInformationObject.


        :return: The stream_url of this StreamInformationObject.
        :rtype: str
        """
        return self._stream_url

    @stream_url.setter
    def stream_url(self, stream_url):
        """Sets the stream_url of this StreamInformationObject.


        :param stream_url: The stream_url of this StreamInformationObject.
        :type stream_url: str
        """
        if stream_url is None:
            raise ValueError("Invalid value for `stream_url`, must not be `None`")

        self._stream_url = stream_url
