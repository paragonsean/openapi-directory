# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: object=None, message: str=None, name: str=None, url: str=None):
        """ErrorObject - a model defined in OpenAPI

        :param details: The details of this ErrorObject.
        :param message: The message of this ErrorObject.
        :param name: The name of this ErrorObject.
        :param url: The url of this ErrorObject.
        """
        self.openapi_types = {
            'details': object,
            'message': str,
            'name': str,
            'url': str
        }

        self.attribute_map = {
            'details': 'details',
            'message': 'message',
            'name': 'name',
            'url': 'url'
        }

        self._details = details
        self._message = message
        self._name = name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorObject of this ErrorObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this ErrorObject.


        :return: The details of this ErrorObject.
        :rtype: object
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this ErrorObject.


        :param details: The details of this ErrorObject.
        :type details: object
        """

        self._details = details

    @property
    def message(self):
        """Gets the message of this ErrorObject.


        :return: The message of this ErrorObject.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ErrorObject.


        :param message: The message of this ErrorObject.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def name(self):
        """Gets the name of this ErrorObject.


        :return: The name of this ErrorObject.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ErrorObject.


        :param name: The name of this ErrorObject.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def url(self):
        """Gets the url of this ErrorObject.


        :return: The url of this ErrorObject.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ErrorObject.


        :param url: The url of this ErrorObject.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
