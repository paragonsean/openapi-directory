/**
 * SYNQ Video
 * * [Sign up for a developer API key!](https://www.synq.fm/register) * [SYNQ API Guide](/)
 *
 * The version of the OpenAPI document: 1.9.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StreamInformationObject model module.
 * @module model/StreamInformationObject
 * @version 1.9.1
 */
class StreamInformationObject {
    /**
     * Constructs a new <code>StreamInformationObject</code>.
     * @alias module:model/StreamInformationObject
     * @param playbackUrl {String} 
     * @param streamUrl {String} 
     */
    constructor(playbackUrl, streamUrl) { 
        
        StreamInformationObject.initialize(this, playbackUrl, streamUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, playbackUrl, streamUrl) { 
        obj['playback_url'] = playbackUrl;
        obj['stream_url'] = streamUrl;
    }

    /**
     * Constructs a <code>StreamInformationObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamInformationObject} obj Optional instance to populate.
     * @return {module:model/StreamInformationObject} The populated <code>StreamInformationObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamInformationObject();

            if (data.hasOwnProperty('playback_url')) {
                obj['playback_url'] = ApiClient.convertToType(data['playback_url'], 'String');
            }
            if (data.hasOwnProperty('stream_url')) {
                obj['stream_url'] = ApiClient.convertToType(data['stream_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StreamInformationObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StreamInformationObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StreamInformationObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['playback_url'] && !(typeof data['playback_url'] === 'string' || data['playback_url'] instanceof String)) {
            throw new Error("Expected the field `playback_url` to be a primitive type in the JSON string but got " + data['playback_url']);
        }
        // ensure the json data is a string
        if (data['stream_url'] && !(typeof data['stream_url'] === 'string' || data['stream_url'] instanceof String)) {
            throw new Error("Expected the field `stream_url` to be a primitive type in the JSON string but got " + data['stream_url']);
        }

        return true;
    }


}

StreamInformationObject.RequiredProperties = ["playback_url", "stream_url"];

/**
 * @member {String} playback_url
 */
StreamInformationObject.prototype['playback_url'] = undefined;

/**
 * @member {String} stream_url
 */
StreamInformationObject.prototype['stream_url'] = undefined;






export default StreamInformationObject;

