/**
 * SYNQ Video
 * * [Sign up for a developer API key!](https://www.synq.fm/register) * [SYNQ API Guide](/)
 *
 * The version of the OpenAPI document: 1.9.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStreamConfigurationObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStreamConfigurationObject::OAIStreamConfigurationObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStreamConfigurationObject::OAIStreamConfigurationObject() {
    this->initializeModel();
}

OAIStreamConfigurationObject::~OAIStreamConfigurationObject() {}

void OAIStreamConfigurationObject::initializeModel() {

    m_rtmp_host_isSet = false;
    m_rtmp_host_isValid = false;

    m_rtmp_key_isSet = false;
    m_rtmp_key_isValid = false;

    m_rtmp_port_isSet = false;
    m_rtmp_port_isValid = false;

    m_rtmp_url_isSet = false;
    m_rtmp_url_isValid = false;
}

void OAIStreamConfigurationObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStreamConfigurationObject::fromJsonObject(QJsonObject json) {

    m_rtmp_host_isValid = ::OpenAPI::fromJsonValue(m_rtmp_host, json[QString("rtmp_host")]);
    m_rtmp_host_isSet = !json[QString("rtmp_host")].isNull() && m_rtmp_host_isValid;

    m_rtmp_key_isValid = ::OpenAPI::fromJsonValue(m_rtmp_key, json[QString("rtmp_key")]);
    m_rtmp_key_isSet = !json[QString("rtmp_key")].isNull() && m_rtmp_key_isValid;

    m_rtmp_port_isValid = ::OpenAPI::fromJsonValue(m_rtmp_port, json[QString("rtmp_port")]);
    m_rtmp_port_isSet = !json[QString("rtmp_port")].isNull() && m_rtmp_port_isValid;

    m_rtmp_url_isValid = ::OpenAPI::fromJsonValue(m_rtmp_url, json[QString("rtmp_url")]);
    m_rtmp_url_isSet = !json[QString("rtmp_url")].isNull() && m_rtmp_url_isValid;
}

QString OAIStreamConfigurationObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStreamConfigurationObject::asJsonObject() const {
    QJsonObject obj;
    if (m_rtmp_host_isSet) {
        obj.insert(QString("rtmp_host"), ::OpenAPI::toJsonValue(m_rtmp_host));
    }
    if (m_rtmp_key_isSet) {
        obj.insert(QString("rtmp_key"), ::OpenAPI::toJsonValue(m_rtmp_key));
    }
    if (m_rtmp_port_isSet) {
        obj.insert(QString("rtmp_port"), ::OpenAPI::toJsonValue(m_rtmp_port));
    }
    if (m_rtmp_url_isSet) {
        obj.insert(QString("rtmp_url"), ::OpenAPI::toJsonValue(m_rtmp_url));
    }
    return obj;
}

QString OAIStreamConfigurationObject::getRtmpHost() const {
    return m_rtmp_host;
}
void OAIStreamConfigurationObject::setRtmpHost(const QString &rtmp_host) {
    m_rtmp_host = rtmp_host;
    m_rtmp_host_isSet = true;
}

bool OAIStreamConfigurationObject::is_rtmp_host_Set() const{
    return m_rtmp_host_isSet;
}

bool OAIStreamConfigurationObject::is_rtmp_host_Valid() const{
    return m_rtmp_host_isValid;
}

QString OAIStreamConfigurationObject::getRtmpKey() const {
    return m_rtmp_key;
}
void OAIStreamConfigurationObject::setRtmpKey(const QString &rtmp_key) {
    m_rtmp_key = rtmp_key;
    m_rtmp_key_isSet = true;
}

bool OAIStreamConfigurationObject::is_rtmp_key_Set() const{
    return m_rtmp_key_isSet;
}

bool OAIStreamConfigurationObject::is_rtmp_key_Valid() const{
    return m_rtmp_key_isValid;
}

QString OAIStreamConfigurationObject::getRtmpPort() const {
    return m_rtmp_port;
}
void OAIStreamConfigurationObject::setRtmpPort(const QString &rtmp_port) {
    m_rtmp_port = rtmp_port;
    m_rtmp_port_isSet = true;
}

bool OAIStreamConfigurationObject::is_rtmp_port_Set() const{
    return m_rtmp_port_isSet;
}

bool OAIStreamConfigurationObject::is_rtmp_port_Valid() const{
    return m_rtmp_port_isValid;
}

QString OAIStreamConfigurationObject::getRtmpUrl() const {
    return m_rtmp_url;
}
void OAIStreamConfigurationObject::setRtmpUrl(const QString &rtmp_url) {
    m_rtmp_url = rtmp_url;
    m_rtmp_url_isSet = true;
}

bool OAIStreamConfigurationObject::is_rtmp_url_Set() const{
    return m_rtmp_url_isSet;
}

bool OAIStreamConfigurationObject::is_rtmp_url_Valid() const{
    return m_rtmp_url_isValid;
}

bool OAIStreamConfigurationObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rtmp_host_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rtmp_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rtmp_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rtmp_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStreamConfigurationObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
