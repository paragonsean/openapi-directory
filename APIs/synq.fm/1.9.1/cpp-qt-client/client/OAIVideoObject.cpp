/**
 * SYNQ Video
 * * [Sign up for a developer API key!](https://www.synq.fm/register) * [SYNQ API Guide](/)
 *
 * The version of the OpenAPI document: 1.9.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideoObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideoObject::OAIVideoObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideoObject::OAIVideoObject() {
    this->initializeModel();
}

OAIVideoObject::~OAIVideoObject() {}

void OAIVideoObject::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_input_isSet = false;
    m_input_isValid = false;

    m_outputs_isSet = false;
    m_outputs_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_userdata_isSet = false;
    m_userdata_isValid = false;

    m_video_id_isSet = false;
    m_video_id_isValid = false;
}

void OAIVideoObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideoObject::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_input_isValid = ::OpenAPI::fromJsonValue(m_input, json[QString("input")]);
    m_input_isSet = !json[QString("input")].isNull() && m_input_isValid;

    m_outputs_isValid = ::OpenAPI::fromJsonValue(m_outputs, json[QString("outputs")]);
    m_outputs_isSet = !json[QString("outputs")].isNull() && m_outputs_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_userdata_isValid = ::OpenAPI::fromJsonValue(m_userdata, json[QString("userdata")]);
    m_userdata_isSet = !json[QString("userdata")].isNull() && m_userdata_isValid;

    m_video_id_isValid = ::OpenAPI::fromJsonValue(m_video_id, json[QString("video_id")]);
    m_video_id_isSet = !json[QString("video_id")].isNull() && m_video_id_isValid;
}

QString OAIVideoObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideoObject::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_input_isSet) {
        obj.insert(QString("input"), ::OpenAPI::toJsonValue(m_input));
    }
    if (m_outputs_isSet) {
        obj.insert(QString("outputs"), ::OpenAPI::toJsonValue(m_outputs));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_userdata_isSet) {
        obj.insert(QString("userdata"), ::OpenAPI::toJsonValue(m_userdata));
    }
    if (m_video_id_isSet) {
        obj.insert(QString("video_id"), ::OpenAPI::toJsonValue(m_video_id));
    }
    return obj;
}

QString OAIVideoObject::getCreatedAt() const {
    return m_created_at;
}
void OAIVideoObject::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIVideoObject::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIVideoObject::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIObject OAIVideoObject::getInput() const {
    return m_input;
}
void OAIVideoObject::setInput(const OAIObject &input) {
    m_input = input;
    m_input_isSet = true;
}

bool OAIVideoObject::is_input_Set() const{
    return m_input_isSet;
}

bool OAIVideoObject::is_input_Valid() const{
    return m_input_isValid;
}

OAIObject OAIVideoObject::getOutputs() const {
    return m_outputs;
}
void OAIVideoObject::setOutputs(const OAIObject &outputs) {
    m_outputs = outputs;
    m_outputs_isSet = true;
}

bool OAIVideoObject::is_outputs_Set() const{
    return m_outputs_isSet;
}

bool OAIVideoObject::is_outputs_Valid() const{
    return m_outputs_isValid;
}

QString OAIVideoObject::getState() const {
    return m_state;
}
void OAIVideoObject::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIVideoObject::is_state_Set() const{
    return m_state_isSet;
}

bool OAIVideoObject::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIVideoObject::getUpdatedAt() const {
    return m_updated_at;
}
void OAIVideoObject::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIVideoObject::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIVideoObject::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

OAIObject OAIVideoObject::getUserdata() const {
    return m_userdata;
}
void OAIVideoObject::setUserdata(const OAIObject &userdata) {
    m_userdata = userdata;
    m_userdata_isSet = true;
}

bool OAIVideoObject::is_userdata_Set() const{
    return m_userdata_isSet;
}

bool OAIVideoObject::is_userdata_Valid() const{
    return m_userdata_isValid;
}

QString OAIVideoObject::getVideoId() const {
    return m_video_id;
}
void OAIVideoObject::setVideoId(const QString &video_id) {
    m_video_id = video_id;
    m_video_id_isSet = true;
}

bool OAIVideoObject::is_video_id_Set() const{
    return m_video_id_isSet;
}

bool OAIVideoObject::is_video_id_Valid() const{
    return m_video_id_isValid;
}

bool OAIVideoObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outputs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_userdata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideoObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_state_isValid && m_updated_at_isValid && m_userdata_isValid && m_video_id_isValid && true;
}

} // namespace OpenAPI
