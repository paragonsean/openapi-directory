# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetAuthenticators200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configured: List[str]=None, enabled: List[str]=None, installed: List[str]=None):
        """GetAuthenticators200Response - a model defined in OpenAPI

        :param configured: The configured of this GetAuthenticators200Response.
        :param enabled: The enabled of this GetAuthenticators200Response.
        :param installed: The installed of this GetAuthenticators200Response.
        """
        self.openapi_types = {
            'configured': List[str],
            'enabled': List[str],
            'installed': List[str]
        }

        self.attribute_map = {
            'configured': 'configured',
            'enabled': 'enabled',
            'installed': 'installed'
        }

        self._configured = configured
        self._enabled = enabled
        self._installed = installed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAuthenticators200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getAuthenticators_200_response of this GetAuthenticators200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configured(self):
        """Gets the configured of this GetAuthenticators200Response.

        The authenticators configured on the Conjur server

        :return: The configured of this GetAuthenticators200Response.
        :rtype: List[str]
        """
        return self._configured

    @configured.setter
    def configured(self, configured):
        """Sets the configured of this GetAuthenticators200Response.

        The authenticators configured on the Conjur server

        :param configured: The configured of this GetAuthenticators200Response.
        :type configured: List[str]
        """

        self._configured = configured

    @property
    def enabled(self):
        """Gets the enabled of this GetAuthenticators200Response.

        The authenticators enabled on the Conjur server

        :return: The enabled of this GetAuthenticators200Response.
        :rtype: List[str]
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GetAuthenticators200Response.

        The authenticators enabled on the Conjur server

        :param enabled: The enabled of this GetAuthenticators200Response.
        :type enabled: List[str]
        """

        self._enabled = enabled

    @property
    def installed(self):
        """Gets the installed of this GetAuthenticators200Response.

        The authenticators installed on the Conjur server

        :return: The installed of this GetAuthenticators200Response.
        :rtype: List[str]
        """
        return self._installed

    @installed.setter
    def installed(self, installed):
        """Sets the installed of this GetAuthenticators200Response.

        The authenticators installed on the Conjur server

        :param installed: The installed of this GetAuthenticators200Response.
        :type installed: List[str]
        """

        self._installed = installed
