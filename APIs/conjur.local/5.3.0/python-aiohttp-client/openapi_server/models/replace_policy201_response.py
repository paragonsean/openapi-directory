# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplacePolicy201Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_roles: object=None, version: float=None):
        """ReplacePolicy201Response - a model defined in OpenAPI

        :param created_roles: The created_roles of this ReplacePolicy201Response.
        :param version: The version of this ReplacePolicy201Response.
        """
        self.openapi_types = {
            'created_roles': object,
            'version': float
        }

        self.attribute_map = {
            'created_roles': 'created_roles',
            'version': 'version'
        }

        self._created_roles = created_roles
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplacePolicy201Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The replacePolicy_201_response of this ReplacePolicy201Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_roles(self):
        """Gets the created_roles of this ReplacePolicy201Response.


        :return: The created_roles of this ReplacePolicy201Response.
        :rtype: object
        """
        return self._created_roles

    @created_roles.setter
    def created_roles(self, created_roles):
        """Sets the created_roles of this ReplacePolicy201Response.


        :param created_roles: The created_roles of this ReplacePolicy201Response.
        :type created_roles: object
        """

        self._created_roles = created_roles

    @property
    def version(self):
        """Gets the version of this ReplacePolicy201Response.


        :return: The version of this ReplacePolicy201Response.
        :rtype: float
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ReplacePolicy201Response.


        :param version: The version of this ReplacePolicy201Response.
        :type version: float
        """

        self._version = version
