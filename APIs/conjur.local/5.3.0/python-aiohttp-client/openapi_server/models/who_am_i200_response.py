# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WhoAmI200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: str=None, client_ip: str=None, token_issued_at: str=None, user_agent: str=None, username: str=None):
        """WhoAmI200Response - a model defined in OpenAPI

        :param account: The account of this WhoAmI200Response.
        :param client_ip: The client_ip of this WhoAmI200Response.
        :param token_issued_at: The token_issued_at of this WhoAmI200Response.
        :param user_agent: The user_agent of this WhoAmI200Response.
        :param username: The username of this WhoAmI200Response.
        """
        self.openapi_types = {
            'account': str,
            'client_ip': str,
            'token_issued_at': str,
            'user_agent': str,
            'username': str
        }

        self.attribute_map = {
            'account': 'account',
            'client_ip': 'client_ip',
            'token_issued_at': 'token_issued_at',
            'user_agent': 'user_agent',
            'username': 'username'
        }

        self._account = account
        self._client_ip = client_ip
        self._token_issued_at = token_issued_at
        self._user_agent = user_agent
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WhoAmI200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The whoAmI_200_response of this WhoAmI200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this WhoAmI200Response.

        The account attribute of the client provided access token.

        :return: The account of this WhoAmI200Response.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this WhoAmI200Response.

        The account attribute of the client provided access token.

        :param account: The account of this WhoAmI200Response.
        :type account: str
        """

        self._account = account

    @property
    def client_ip(self):
        """Gets the client_ip of this WhoAmI200Response.

        The request client IP address as determined by Conjur. This same IP address appears in application logs and audit logs.

        :return: The client_ip of this WhoAmI200Response.
        :rtype: str
        """
        return self._client_ip

    @client_ip.setter
    def client_ip(self, client_ip):
        """Sets the client_ip of this WhoAmI200Response.

        The request client IP address as determined by Conjur. This same IP address appears in application logs and audit logs.

        :param client_ip: The client_ip of this WhoAmI200Response.
        :type client_ip: str
        """

        self._client_ip = client_ip

    @property
    def token_issued_at(self):
        """Gets the token_issued_at of this WhoAmI200Response.

        The issued timestamp, that is, when the provided access token was created (iat field in the JWT)

        :return: The token_issued_at of this WhoAmI200Response.
        :rtype: str
        """
        return self._token_issued_at

    @token_issued_at.setter
    def token_issued_at(self, token_issued_at):
        """Sets the token_issued_at of this WhoAmI200Response.

        The issued timestamp, that is, when the provided access token was created (iat field in the JWT)

        :param token_issued_at: The token_issued_at of this WhoAmI200Response.
        :type token_issued_at: str
        """

        self._token_issued_at = token_issued_at

    @property
    def user_agent(self):
        """Gets the user_agent of this WhoAmI200Response.

        The incoming request HTTP user agent header.

        :return: The user_agent of this WhoAmI200Response.
        :rtype: str
        """
        return self._user_agent

    @user_agent.setter
    def user_agent(self, user_agent):
        """Sets the user_agent of this WhoAmI200Response.

        The incoming request HTTP user agent header.

        :param user_agent: The user_agent of this WhoAmI200Response.
        :type user_agent: str
        """

        self._user_agent = user_agent

    @property
    def username(self):
        """Gets the username of this WhoAmI200Response.

        The username attribute of the provided access token.

        :return: The username of this WhoAmI200Response.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this WhoAmI200Response.

        The username attribute of the provided access token.

        :param username: The username of this WhoAmI200Response.
        :type username: str
        """

        self._username = username
