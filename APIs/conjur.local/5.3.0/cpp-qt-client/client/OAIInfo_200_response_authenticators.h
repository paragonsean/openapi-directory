/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInfo_200_response_authenticators.h
 *
 * 
 */

#ifndef OAIInfo_200_response_authenticators_H
#define OAIInfo_200_response_authenticators_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInfo_200_response_authenticators : public OAIObject {
public:
    OAIInfo_200_response_authenticators();
    OAIInfo_200_response_authenticators(QString json);
    ~OAIInfo_200_response_authenticators() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getConfigured() const;
    void setConfigured(const QList<QString> &configured);
    bool is_configured_Set() const;
    bool is_configured_Valid() const;

    QList<QString> getEnabled() const;
    void setEnabled(const QList<QString> &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList<QString> getInstalled() const;
    void setInstalled(const QList<QString> &installed);
    bool is_installed_Set() const;
    bool is_installed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_configured;
    bool m_configured_isSet;
    bool m_configured_isValid;

    QList<QString> m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList<QString> m_installed;
    bool m_installed_isSet;
    bool m_installed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInfo_200_response_authenticators)

#endif // OAIInfo_200_response_authenticators_H
