/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReplacePolicy_201_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReplacePolicy_201_response::OAIReplacePolicy_201_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReplacePolicy_201_response::OAIReplacePolicy_201_response() {
    this->initializeModel();
}

OAIReplacePolicy_201_response::~OAIReplacePolicy_201_response() {}

void OAIReplacePolicy_201_response::initializeModel() {

    m_created_roles_isSet = false;
    m_created_roles_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIReplacePolicy_201_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReplacePolicy_201_response::fromJsonObject(QJsonObject json) {

    m_created_roles_isValid = ::OpenAPI::fromJsonValue(m_created_roles, json[QString("created_roles")]);
    m_created_roles_isSet = !json[QString("created_roles")].isNull() && m_created_roles_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIReplacePolicy_201_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReplacePolicy_201_response::asJsonObject() const {
    QJsonObject obj;
    if (m_created_roles_isSet) {
        obj.insert(QString("created_roles"), ::OpenAPI::toJsonValue(m_created_roles));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

OAIObject OAIReplacePolicy_201_response::getCreatedRoles() const {
    return m_created_roles;
}
void OAIReplacePolicy_201_response::setCreatedRoles(const OAIObject &created_roles) {
    m_created_roles = created_roles;
    m_created_roles_isSet = true;
}

bool OAIReplacePolicy_201_response::is_created_roles_Set() const{
    return m_created_roles_isSet;
}

bool OAIReplacePolicy_201_response::is_created_roles_Valid() const{
    return m_created_roles_isValid;
}

double OAIReplacePolicy_201_response::getVersion() const {
    return m_version;
}
void OAIReplacePolicy_201_response::setVersion(const double &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIReplacePolicy_201_response::is_version_Set() const{
    return m_version_isSet;
}

bool OAIReplacePolicy_201_response::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIReplacePolicy_201_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_roles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReplacePolicy_201_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
