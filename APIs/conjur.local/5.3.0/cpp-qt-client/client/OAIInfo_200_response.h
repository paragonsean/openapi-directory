/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInfo_200_response.h
 *
 * 
 */

#ifndef OAIInfo_200_response_H
#define OAIInfo_200_response_H

#include <QJsonObject>

#include "OAIInfo_200_response_authenticators.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInfo_200_response_authenticators;

class OAIInfo_200_response : public OAIObject {
public:
    OAIInfo_200_response();
    OAIInfo_200_response(QString json);
    ~OAIInfo_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInfo_200_response_authenticators getAuthenticators() const;
    void setAuthenticators(const OAIInfo_200_response_authenticators &authenticators);
    bool is_authenticators_Set() const;
    bool is_authenticators_Valid() const;

    OAIObject getConfiguration() const;
    void setConfiguration(const OAIObject &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QString getContainer() const;
    void setContainer(const QString &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    QString getRelease() const;
    void setRelease(const QString &release);
    bool is_release_Set() const;
    bool is_release_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    OAIObject getServices() const;
    void setServices(const OAIObject &services);
    bool is_services_Set() const;
    bool is_services_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInfo_200_response_authenticators m_authenticators;
    bool m_authenticators_isSet;
    bool m_authenticators_isValid;

    OAIObject m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QString m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    QString m_release;
    bool m_release_isSet;
    bool m_release_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    OAIObject m_services;
    bool m_services_isSet;
    bool m_services_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInfo_200_response)

#endif // OAIInfo_200_response_H
