/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner() {
    this->initializeModel();
}

OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::~OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner() {}

void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::initializeModel() {

    m_client_ip_isSet = false;
    m_client_ip_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_finished_at_isSet = false;
    m_finished_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_policy_sha256_isSet = false;
    m_policy_sha256_isValid = false;

    m_policy_text_isSet = false;
    m_policy_text_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::fromJsonObject(QJsonObject json) {

    m_client_ip_isValid = ::OpenAPI::fromJsonValue(m_client_ip, json[QString("client_ip")]);
    m_client_ip_isSet = !json[QString("client_ip")].isNull() && m_client_ip_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_finished_at_isValid = ::OpenAPI::fromJsonValue(m_finished_at, json[QString("finished_at")]);
    m_finished_at_isSet = !json[QString("finished_at")].isNull() && m_finished_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_policy_sha256_isValid = ::OpenAPI::fromJsonValue(m_policy_sha256, json[QString("policy_sha256")]);
    m_policy_sha256_isSet = !json[QString("policy_sha256")].isNull() && m_policy_sha256_isValid;

    m_policy_text_isValid = ::OpenAPI::fromJsonValue(m_policy_text, json[QString("policy_text")]);
    m_policy_text_isSet = !json[QString("policy_text")].isNull() && m_policy_text_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_client_ip_isSet) {
        obj.insert(QString("client_ip"), ::OpenAPI::toJsonValue(m_client_ip));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_finished_at_isSet) {
        obj.insert(QString("finished_at"), ::OpenAPI::toJsonValue(m_finished_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_policy_sha256_isSet) {
        obj.insert(QString("policy_sha256"), ::OpenAPI::toJsonValue(m_policy_sha256));
    }
    if (m_policy_text_isSet) {
        obj.insert(QString("policy_text"), ::OpenAPI::toJsonValue(m_policy_text));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::getClientIp() const {
    return m_client_ip;
}
void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::setClientIp(const QString &client_ip) {
    m_client_ip = client_ip;
    m_client_ip_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_client_ip_Set() const{
    return m_client_ip_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_client_ip_Valid() const{
    return m_client_ip_isValid;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::getCreatedAt() const {
    return m_created_at;
}
void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::getFinishedAt() const {
    return m_finished_at;
}
void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::setFinishedAt(const QString &finished_at) {
    m_finished_at = finished_at;
    m_finished_at_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_finished_at_Set() const{
    return m_finished_at_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_finished_at_Valid() const{
    return m_finished_at_isValid;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::getId() const {
    return m_id;
}
void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::getPolicySha256() const {
    return m_policy_sha256;
}
void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::setPolicySha256(const QString &policy_sha256) {
    m_policy_sha256 = policy_sha256;
    m_policy_sha256_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_policy_sha256_Set() const{
    return m_policy_sha256_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_policy_sha256_Valid() const{
    return m_policy_sha256_isValid;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::getPolicyText() const {
    return m_policy_text;
}
void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::setPolicyText(const QString &policy_text) {
    m_policy_text = policy_text;
    m_policy_text_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_policy_text_Set() const{
    return m_policy_text_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_policy_text_Valid() const{
    return m_policy_text_isValid;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::getRole() const {
    return m_role;
}
void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_role_Set() const{
    return m_role_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_role_Valid() const{
    return m_role_isValid;
}

double OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::getVersion() const {
    return m_version;
}
void OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::setVersion(const double &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_version_Set() const{
    return m_version_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_finished_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_sha256_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_policy_versions_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
