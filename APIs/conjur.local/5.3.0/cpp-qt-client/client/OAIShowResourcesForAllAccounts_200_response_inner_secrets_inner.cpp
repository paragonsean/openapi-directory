/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner() {
    this->initializeModel();
}

OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::~OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner() {}

void OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::initializeModel() {

    m_expires_at_isSet = false;
    m_expires_at_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::fromJsonObject(QJsonObject json) {

    m_expires_at_isValid = ::OpenAPI::fromJsonValue(m_expires_at, json[QString("expires_at")]);
    m_expires_at_isSet = !json[QString("expires_at")].isNull() && m_expires_at_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_expires_at_isSet) {
        obj.insert(QString("expires_at"), ::OpenAPI::toJsonValue(m_expires_at));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::getExpiresAt() const {
    return m_expires_at;
}
void OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::setExpiresAt(const QString &expires_at) {
    m_expires_at = expires_at;
    m_expires_at_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::is_expires_at_Set() const{
    return m_expires_at_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::is_expires_at_Valid() const{
    return m_expires_at_isValid;
}

double OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::getVersion() const {
    return m_version;
}
void OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::setVersion(const double &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::is_version_Set() const{
    return m_version_isSet;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expires_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShowResourcesForAllAccounts_200_response_inner_secrets_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
