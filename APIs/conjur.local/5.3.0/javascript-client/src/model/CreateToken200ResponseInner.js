/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateToken200ResponseInner model module.
 * @module model/CreateToken200ResponseInner
 * @version 5.3.0
 */
class CreateToken200ResponseInner {
    /**
     * Constructs a new <code>CreateToken200ResponseInner</code>.
     * @alias module:model/CreateToken200ResponseInner
     * @param cidr {Array.<String>} 
     * @param expiration {String} 
     * @param token {String} 
     */
    constructor(cidr, expiration, token) { 
        
        CreateToken200ResponseInner.initialize(this, cidr, expiration, token);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cidr, expiration, token) { 
        obj['cidr'] = cidr;
        obj['expiration'] = expiration;
        obj['token'] = token;
    }

    /**
     * Constructs a <code>CreateToken200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateToken200ResponseInner} obj Optional instance to populate.
     * @return {module:model/CreateToken200ResponseInner} The populated <code>CreateToken200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateToken200ResponseInner();

            if (data.hasOwnProperty('cidr')) {
                obj['cidr'] = ApiClient.convertToType(data['cidr'], ['String']);
            }
            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ApiClient.convertToType(data['expiration'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateToken200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateToken200ResponseInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateToken200ResponseInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['cidr'])) {
            throw new Error("Expected the field `cidr` to be an array in the JSON data but got " + data['cidr']);
        }
        // ensure the json data is a string
        if (data['expiration'] && !(typeof data['expiration'] === 'string' || data['expiration'] instanceof String)) {
            throw new Error("Expected the field `expiration` to be a primitive type in the JSON string but got " + data['expiration']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }

        return true;
    }


}

CreateToken200ResponseInner.RequiredProperties = ["cidr", "expiration", "token"];

/**
 * @member {Array.<String>} cidr
 */
CreateToken200ResponseInner.prototype['cidr'] = undefined;

/**
 * @member {String} expiration
 */
CreateToken200ResponseInner.prototype['expiration'] = undefined;

/**
 * @member {String} token
 */
CreateToken200ResponseInner.prototype['token'] = undefined;






export default CreateToken200ResponseInner;

