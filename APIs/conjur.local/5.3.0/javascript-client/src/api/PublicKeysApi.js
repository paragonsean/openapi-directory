/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* PublicKeys service.
* @module api/PublicKeysApi
* @version 5.3.0
*/
export default class PublicKeysApi {

    /**
    * Constructs a new PublicKeysApi. 
    * @alias module:api/PublicKeysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the showPublicKeys operation.
     * @callback module:api/PublicKeysApi~showPublicKeysCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Shows all public keys for a resource.
     * Shows all public keys for a resource as newline delimited string for compatibility with the authorized_keys SSH format. Returns an empty string if the resource does not exist, to prevent attackers from determining whether a resource exists. 
     * @param {String} account Organization account name
     * @param {String} kind Type of resource
     * @param {String} identifier ID of the resource for which to get the information about
     * @param {Object} opts Optional parameters
     * @param {String} [xRequestId] Add an ID to the request being made so it can be tracked in Conjur. If not provided the server will automatically generate one. 
     * @param {module:api/PublicKeysApi~showPublicKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    showPublicKeys(account, kind, identifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'account' is set
      if (account === undefined || account === null) {
        throw new Error("Missing the required parameter 'account' when calling showPublicKeys");
      }
      // verify the required parameter 'kind' is set
      if (kind === undefined || kind === null) {
        throw new Error("Missing the required parameter 'kind' when calling showPublicKeys");
      }
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling showPublicKeys");
      }

      let pathParams = {
        'account': account,
        'kind': kind,
        'identifier': identifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Request-Id': opts['xRequestId']
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'conjurKubernetesMutualTls', 'conjurAuth'];
      let contentTypes = [];
      let accepts = ['text/plain'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/public_keys/{account}/{kind}/{identifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
