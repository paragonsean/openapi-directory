/**
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Conjur);
  }
}(this, function(expect, Conjur) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Conjur.AuthenticationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthenticationApi', function() {
    describe('changePassword', function() {
      it('should call changePassword successfully', function(done) {
        //uncomment below and update the code to test changePassword
        //instance.changePassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableAuthenticator', function() {
      it('should call enableAuthenticator successfully', function(done) {
        //uncomment below and update the code to test enableAuthenticator
        //instance.enableAuthenticator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableAuthenticatorInstance', function() {
      it('should call enableAuthenticatorInstance successfully', function(done) {
        //uncomment below and update the code to test enableAuthenticatorInstance
        //instance.enableAuthenticatorInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAPIKey', function() {
      it('should call getAPIKey successfully', function(done) {
        //uncomment below and update the code to test getAPIKey
        //instance.getAPIKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAPIKeyViaLDAP', function() {
      it('should call getAPIKeyViaLDAP successfully', function(done) {
        //uncomment below and update the code to test getAPIKeyViaLDAP
        //instance.getAPIKeyViaLDAP(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessToken', function() {
      it('should call getAccessToken successfully', function(done) {
        //uncomment below and update the code to test getAccessToken
        //instance.getAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokenViaAWS', function() {
      it('should call getAccessTokenViaAWS successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenViaAWS
        //instance.getAccessTokenViaAWS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokenViaAzure', function() {
      it('should call getAccessTokenViaAzure successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenViaAzure
        //instance.getAccessTokenViaAzure(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokenViaGCP', function() {
      it('should call getAccessTokenViaGCP successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenViaGCP
        //instance.getAccessTokenViaGCP(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokenViaJWT', function() {
      it('should call getAccessTokenViaJWT successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenViaJWT
        //instance.getAccessTokenViaJWT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokenViaJWTWithId', function() {
      it('should call getAccessTokenViaJWTWithId successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenViaJWTWithId
        //instance.getAccessTokenViaJWTWithId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokenViaKubernetes', function() {
      it('should call getAccessTokenViaKubernetes successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenViaKubernetes
        //instance.getAccessTokenViaKubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokenViaLDAP', function() {
      it('should call getAccessTokenViaLDAP successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenViaLDAP
        //instance.getAccessTokenViaLDAP(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokenViaOIDC', function() {
      it('should call getAccessTokenViaOIDC successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenViaOIDC
        //instance.getAccessTokenViaOIDC(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('k8sInjectClientCert', function() {
      it('should call k8sInjectClientCert successfully', function(done) {
        //uncomment below and update the code to test k8sInjectClientCert
        //instance.k8sInjectClientCert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rotateApiKey', function() {
      it('should call rotateApiKey successfully', function(done) {
        //uncomment below and update the code to test rotateApiKey
        //instance.rotateApiKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
