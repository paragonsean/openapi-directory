# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Task(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer: float=None, image_url: str=None, this_url: str=None):
        """Task - a model defined in OpenAPI

        :param answer: The answer of this Task.
        :param image_url: The image_url of this Task.
        :param this_url: The this_url of this Task.
        """
        self.openapi_types = {
            'answer': float,
            'image_url': str,
            'this_url': str
        }

        self.attribute_map = {
            'answer': 'answer',
            'image_url': 'image_url',
            'this_url': 'this_url'
        }

        self._answer = answer
        self._image_url = image_url
        self._this_url = this_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Task':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Task of this Task.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self):
        """Gets the answer of this Task.

        The answer you are looking for.

        :return: The answer of this Task.
        :rtype: float
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this Task.

        The answer you are looking for.

        :param answer: The answer of this Task.
        :type answer: float
        """

        self._answer = answer

    @property
    def image_url(self):
        """Gets the image_url of this Task.

        The url of the image that will be processed.

        :return: The image_url of this Task.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this Task.

        The url of the image that will be processed.

        :param image_url: The image_url of this Task.
        :type image_url: str
        """
        if image_url is None:
            raise ValueError("Invalid value for `image_url`, must not be `None`")

        self._image_url = image_url

    @property
    def this_url(self):
        """Gets the this_url of this Task.

        Use this url to get this task.

        :return: The this_url of this Task.
        :rtype: str
        """
        return self._this_url

    @this_url.setter
    def this_url(self, this_url):
        """Sets the this_url of this Task.

        Use this url to get this task.

        :param this_url: The this_url of this Task.
        :type this_url: str
        """

        self._this_url = this_url
