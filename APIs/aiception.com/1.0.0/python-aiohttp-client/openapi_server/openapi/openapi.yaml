openapi: 3.0.1
info:
  contact: {}
  description: Here you can play & test & prototype all the endpoints using just your
    browser! Go ahead!
  title: AIception Interactive
  version: 1.0.0
  x-apisguru-categories:
  - machine_learning
  x-logo:
    url: https://twitter.com/AIception/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://aiception.com/static/swagger.json
    version: "2.0"
  x-providerName: aiception.com
servers:
- url: https://aiception.com/api/v2.1
security:
- UserSecurity: []
tags:
- description: Everything about AIception vision API
  externalDocs:
    description: Find out more
    url: https://aiception.com
  name: vision
- description: What will you make?
  name: creative
- description: "Speech to text, text to speech, natural language processing"
  externalDocs:
    description: Find out more
    url: https://aiception.com
  name: language
paths:
  /adult_content:
    post:
      description: Creates a new adult_content task that tells the if the image has
        nudity or sexual content.
      operationId: adult_content_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_adult_content_post_request'
        description: The image to analyze
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task succesfully created.
        "400":
          content: {}
          description: Task could not be created.
      summary: "Image contains nudity or sexually explicit content? [ image_url ->\
        \ id ]"
      tags:
      - vision
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.vision_controller
  /adult_content/{taskId}:
    get:
      description: Gets the adult_content task.
      operationId: adult_content_task_id_get
      parameters:
      - description: An internal id for the task
        in: path
        name: taskId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Task'
          description: The contents of the adult_content task.
        "404":
          content: {}
          description: The Task does not exists.
      summary: "Gets the adult_content task [ id -> adult content task ]"
      tags:
      - vision
      x-openapi-router-controller: openapi_server.controllers.vision_controller
  /artistic_image:
    post:
      description: Given an image content and a style image create a new stylized
        image of the content.
      operationId: artistic_image_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_artistic_image_post_request'
        description: The content image and the style image
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task succesfully created.
        "400":
          content: {}
          description: Task could not be created.
      summary: "Create an artistic image [ image_url, style_url -> id ]"
      tags:
      - creative
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.creative_controller
  /artistic_image/{taskId}:
    get:
      description: The artistic_image will have the urls of the stylized images.
      operationId: artistic_image_task_id_get
      parameters:
      - description: An internal id for the task
        in: path
        name: taskId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Task'
          description: The contents of the artistic_image task.
        "404":
          content: {}
          description: The Task does not exists.
      summary: "Gets a artistic image by task id [ id -> artistic image task ]"
      tags:
      - creative
      x-openapi-router-controller: openapi_server.controllers.creative_controller
  /detect_object:
    post:
      description: Creates a new detect object task that recognizes the object in
        the image.
      operationId: detect_object_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_adult_content_post_request'
        description: The image to analyze
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task succesfully created.
        "400":
          content: {}
          description: Task could not be created.
      summary: "What is that object? [ image_url -> id ]"
      tags:
      - vision
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.vision_controller
  /detect_object/{taskId}:
    get:
      description: Gets the detect_object task.
      operationId: detect_object_task_id_get
      parameters:
      - description: An internal id for the task
        in: path
        name: taskId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Task'
          description: The contents of the detect_object task.
        "404":
          content: {}
          description: The Task does not exists.
      summary: "Gets the detect_object task [ id -> detect object task]"
      tags:
      - vision
      x-openapi-router-controller: openapi_server.controllers.vision_controller
  /face:
    post:
      description: Get a list of all the locations of the faces in the image.
      operationId: face_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_adult_content_post_request'
        description: The image to analyze
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task succesfully created.
        "400":
          content: {}
          description: Task could not be created.
      summary: "Find all faces in the image [ image_url -> id ]"
      tags:
      - vision
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.vision_controller
  /face/{taskId}:
    get:
      description: Gets the face task.
      operationId: face_task_id_get
      parameters:
      - description: An internal id for the task
        in: path
        name: taskId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Task'
          description: The contents of the face task.
        "404":
          content: {}
          description: The Task does not exists.
      summary: "Gets the face task [ id -> face task ]"
      tags:
      - vision
      x-openapi-router-controller: openapi_server.controllers.vision_controller
  /face_age:
    post:
      description: Creates a new face age task that approximates the age of the person
        in the image.
      operationId: face_age_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_adult_content_post_request'
        description: The image to analyze
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task succesfully created.
        "400":
          content: {}
          description: Task could not be created.
      summary: "How old is the person in the image? [ image_url -> id ]"
      tags:
      - vision
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.vision_controller
  /face_age/{taskId}:
    get:
      description: Gets the face_age task.
      operationId: face_age_task_id_get
      parameters:
      - description: An internal id for the task
        in: path
        name: taskId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Task'
          description: The contents of the face_age task.
        "404":
          content: {}
          description: The Task does not exists.
      summary: "Gets the face_age task [ id -> face age task ]"
      tags:
      - vision
      x-openapi-router-controller: openapi_server.controllers.vision_controller
components:
  schemas:
    AgeAnswer:
      properties:
        max:
          type: integer
        min:
          type: integer
        score:
          type: number
      type: object
    Person:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
      required:
      - username
      type: object
    Persons:
      items:
        $ref: '#/components/schemas/Person'
      type: array
    Task:
      example:
        this_url: this_url
        answer: 0.8008281904610115
        image_url: image_url
      properties:
        answer:
          description: The answer you are looking for.
          readOnly: true
          title: answer
          type: number
        image_url:
          description: The url of the image that will be processed.
          title: image_url
          type: string
        this_url:
          description: Use this url to get this task.
          readOnly: true
          title: this_url
          type: string
      required:
      - image_url
      title: Task
      type: object
    _adult_content_post_request:
      properties:
        async:
          default: true
          title: async
          type: boolean
        image_url:
          title: image_url
          type: string
      required:
      - image_url
      title: _adult_content_post_request
      type: object
    _artistic_image_post_request:
      properties:
        async:
          default: true
          title: async
          type: boolean
        image_url:
          title: image_url
          type: string
        style_url:
          title: style_url
          type: string
      required:
      - image_url
      - style_url
      title: _artistic_image_post_request
      type: object
  securitySchemes:
    UserSecurity:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_UserSecurity
x-original-swagger-version: "2.0"
