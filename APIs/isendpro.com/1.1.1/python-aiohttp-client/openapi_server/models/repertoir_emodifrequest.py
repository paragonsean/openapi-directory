# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class REPERTOIREmodifrequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, champ1: List[str]=None, champ10: List[str]=None, champ11: List[str]=None, champ12: List[str]=None, champ13: List[str]=None, champ14: List[str]=None, champ15: List[str]=None, champ16: List[str]=None, champ17: List[str]=None, champ18: List[str]=None, champ19: List[str]=None, champ2: List[str]=None, champ20: List[str]=None, champ21: List[str]=None, champ22: List[str]=None, champ23: List[str]=None, champ24: List[str]=None, champ25: List[str]=None, champ26: List[str]=None, champ27: List[str]=None, champ3: List[str]=None, champ4: List[str]=None, champ5: List[str]=None, champ6: List[str]=None, champ7: List[str]=None, champ8: List[str]=None, champ9: List[str]=None, keyid: str=None, num: List[str]=None, repertoire_edit: str=None, repertoire_id: str=None):
        """REPERTOIREmodifrequest - a model defined in OpenAPI

        :param champ1: The champ1 of this REPERTOIREmodifrequest.
        :param champ10: The champ10 of this REPERTOIREmodifrequest.
        :param champ11: The champ11 of this REPERTOIREmodifrequest.
        :param champ12: The champ12 of this REPERTOIREmodifrequest.
        :param champ13: The champ13 of this REPERTOIREmodifrequest.
        :param champ14: The champ14 of this REPERTOIREmodifrequest.
        :param champ15: The champ15 of this REPERTOIREmodifrequest.
        :param champ16: The champ16 of this REPERTOIREmodifrequest.
        :param champ17: The champ17 of this REPERTOIREmodifrequest.
        :param champ18: The champ18 of this REPERTOIREmodifrequest.
        :param champ19: The champ19 of this REPERTOIREmodifrequest.
        :param champ2: The champ2 of this REPERTOIREmodifrequest.
        :param champ20: The champ20 of this REPERTOIREmodifrequest.
        :param champ21: The champ21 of this REPERTOIREmodifrequest.
        :param champ22: The champ22 of this REPERTOIREmodifrequest.
        :param champ23: The champ23 of this REPERTOIREmodifrequest.
        :param champ24: The champ24 of this REPERTOIREmodifrequest.
        :param champ25: The champ25 of this REPERTOIREmodifrequest.
        :param champ26: The champ26 of this REPERTOIREmodifrequest.
        :param champ27: The champ27 of this REPERTOIREmodifrequest.
        :param champ3: The champ3 of this REPERTOIREmodifrequest.
        :param champ4: The champ4 of this REPERTOIREmodifrequest.
        :param champ5: The champ5 of this REPERTOIREmodifrequest.
        :param champ6: The champ6 of this REPERTOIREmodifrequest.
        :param champ7: The champ7 of this REPERTOIREmodifrequest.
        :param champ8: The champ8 of this REPERTOIREmodifrequest.
        :param champ9: The champ9 of this REPERTOIREmodifrequest.
        :param keyid: The keyid of this REPERTOIREmodifrequest.
        :param num: The num of this REPERTOIREmodifrequest.
        :param repertoire_edit: The repertoire_edit of this REPERTOIREmodifrequest.
        :param repertoire_id: The repertoire_id of this REPERTOIREmodifrequest.
        """
        self.openapi_types = {
            'champ1': List[str],
            'champ10': List[str],
            'champ11': List[str],
            'champ12': List[str],
            'champ13': List[str],
            'champ14': List[str],
            'champ15': List[str],
            'champ16': List[str],
            'champ17': List[str],
            'champ18': List[str],
            'champ19': List[str],
            'champ2': List[str],
            'champ20': List[str],
            'champ21': List[str],
            'champ22': List[str],
            'champ23': List[str],
            'champ24': List[str],
            'champ25': List[str],
            'champ26': List[str],
            'champ27': List[str],
            'champ3': List[str],
            'champ4': List[str],
            'champ5': List[str],
            'champ6': List[str],
            'champ7': List[str],
            'champ8': List[str],
            'champ9': List[str],
            'keyid': str,
            'num': List[str],
            'repertoire_edit': str,
            'repertoire_id': str
        }

        self.attribute_map = {
            'champ1': 'champ1',
            'champ10': 'champ10',
            'champ11': 'champ11',
            'champ12': 'champ12',
            'champ13': 'champ13',
            'champ14': 'champ14',
            'champ15': 'champ15',
            'champ16': 'champ16',
            'champ17': 'champ17',
            'champ18': 'champ18',
            'champ19': 'champ19',
            'champ2': 'champ2',
            'champ20': 'champ20',
            'champ21': 'champ21',
            'champ22': 'champ22',
            'champ23': 'champ23',
            'champ24': 'champ24',
            'champ25': 'champ25',
            'champ26': 'champ26',
            'champ27': 'champ27',
            'champ3': 'champ3',
            'champ4': 'champ4',
            'champ5': 'champ5',
            'champ6': 'champ6',
            'champ7': 'champ7',
            'champ8': 'champ8',
            'champ9': 'champ9',
            'keyid': 'keyid',
            'num': 'num',
            'repertoire_edit': 'repertoireEdit',
            'repertoire_id': 'repertoireId'
        }

        self._champ1 = champ1
        self._champ10 = champ10
        self._champ11 = champ11
        self._champ12 = champ12
        self._champ13 = champ13
        self._champ14 = champ14
        self._champ15 = champ15
        self._champ16 = champ16
        self._champ17 = champ17
        self._champ18 = champ18
        self._champ19 = champ19
        self._champ2 = champ2
        self._champ20 = champ20
        self._champ21 = champ21
        self._champ22 = champ22
        self._champ23 = champ23
        self._champ24 = champ24
        self._champ25 = champ25
        self._champ26 = champ26
        self._champ27 = champ27
        self._champ3 = champ3
        self._champ4 = champ4
        self._champ5 = champ5
        self._champ6 = champ6
        self._champ7 = champ7
        self._champ8 = champ8
        self._champ9 = champ9
        self._keyid = keyid
        self._num = num
        self._repertoire_edit = repertoire_edit
        self._repertoire_id = repertoire_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'REPERTOIREmodifrequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The REPERTOIREmodifrequest of this REPERTOIREmodifrequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def champ1(self):
        """Gets the champ1 of this REPERTOIREmodifrequest.

        Noms des contact

        :return: The champ1 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ1

    @champ1.setter
    def champ1(self, champ1):
        """Sets the champ1 of this REPERTOIREmodifrequest.

        Noms des contact

        :param champ1: The champ1 of this REPERTOIREmodifrequest.
        :type champ1: List[str]
        """

        self._champ1 = champ1

    @property
    def champ10(self):
        """Gets the champ10 of this REPERTOIREmodifrequest.

        Champs I des contacts

        :return: The champ10 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ10

    @champ10.setter
    def champ10(self, champ10):
        """Sets the champ10 of this REPERTOIREmodifrequest.

        Champs I des contacts

        :param champ10: The champ10 of this REPERTOIREmodifrequest.
        :type champ10: List[str]
        """

        self._champ10 = champ10

    @property
    def champ11(self):
        """Gets the champ11 of this REPERTOIREmodifrequest.

        Champs J des contacts

        :return: The champ11 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ11

    @champ11.setter
    def champ11(self, champ11):
        """Sets the champ11 of this REPERTOIREmodifrequest.

        Champs J des contacts

        :param champ11: The champ11 of this REPERTOIREmodifrequest.
        :type champ11: List[str]
        """

        self._champ11 = champ11

    @property
    def champ12(self):
        """Gets the champ12 of this REPERTOIREmodifrequest.

        Champs K des contacts

        :return: The champ12 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ12

    @champ12.setter
    def champ12(self, champ12):
        """Sets the champ12 of this REPERTOIREmodifrequest.

        Champs K des contacts

        :param champ12: The champ12 of this REPERTOIREmodifrequest.
        :type champ12: List[str]
        """

        self._champ12 = champ12

    @property
    def champ13(self):
        """Gets the champ13 of this REPERTOIREmodifrequest.

        Champs L des contacts

        :return: The champ13 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ13

    @champ13.setter
    def champ13(self, champ13):
        """Sets the champ13 of this REPERTOIREmodifrequest.

        Champs L des contacts

        :param champ13: The champ13 of this REPERTOIREmodifrequest.
        :type champ13: List[str]
        """

        self._champ13 = champ13

    @property
    def champ14(self):
        """Gets the champ14 of this REPERTOIREmodifrequest.

        Champs M des contacts

        :return: The champ14 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ14

    @champ14.setter
    def champ14(self, champ14):
        """Sets the champ14 of this REPERTOIREmodifrequest.

        Champs M des contacts

        :param champ14: The champ14 of this REPERTOIREmodifrequest.
        :type champ14: List[str]
        """

        self._champ14 = champ14

    @property
    def champ15(self):
        """Gets the champ15 of this REPERTOIREmodifrequest.

        Champs N des contacts

        :return: The champ15 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ15

    @champ15.setter
    def champ15(self, champ15):
        """Sets the champ15 of this REPERTOIREmodifrequest.

        Champs N des contacts

        :param champ15: The champ15 of this REPERTOIREmodifrequest.
        :type champ15: List[str]
        """

        self._champ15 = champ15

    @property
    def champ16(self):
        """Gets the champ16 of this REPERTOIREmodifrequest.

        Champs O des contacts

        :return: The champ16 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ16

    @champ16.setter
    def champ16(self, champ16):
        """Sets the champ16 of this REPERTOIREmodifrequest.

        Champs O des contacts

        :param champ16: The champ16 of this REPERTOIREmodifrequest.
        :type champ16: List[str]
        """

        self._champ16 = champ16

    @property
    def champ17(self):
        """Gets the champ17 of this REPERTOIREmodifrequest.

        Champs P des contacts

        :return: The champ17 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ17

    @champ17.setter
    def champ17(self, champ17):
        """Sets the champ17 of this REPERTOIREmodifrequest.

        Champs P des contacts

        :param champ17: The champ17 of this REPERTOIREmodifrequest.
        :type champ17: List[str]
        """

        self._champ17 = champ17

    @property
    def champ18(self):
        """Gets the champ18 of this REPERTOIREmodifrequest.

        Champs Q des contacts

        :return: The champ18 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ18

    @champ18.setter
    def champ18(self, champ18):
        """Sets the champ18 of this REPERTOIREmodifrequest.

        Champs Q des contacts

        :param champ18: The champ18 of this REPERTOIREmodifrequest.
        :type champ18: List[str]
        """

        self._champ18 = champ18

    @property
    def champ19(self):
        """Gets the champ19 of this REPERTOIREmodifrequest.

        Champs R des contacts

        :return: The champ19 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ19

    @champ19.setter
    def champ19(self, champ19):
        """Sets the champ19 of this REPERTOIREmodifrequest.

        Champs R des contacts

        :param champ19: The champ19 of this REPERTOIREmodifrequest.
        :type champ19: List[str]
        """

        self._champ19 = champ19

    @property
    def champ2(self):
        """Gets the champ2 of this REPERTOIREmodifrequest.

        Champs A des contacts

        :return: The champ2 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ2

    @champ2.setter
    def champ2(self, champ2):
        """Sets the champ2 of this REPERTOIREmodifrequest.

        Champs A des contacts

        :param champ2: The champ2 of this REPERTOIREmodifrequest.
        :type champ2: List[str]
        """

        self._champ2 = champ2

    @property
    def champ20(self):
        """Gets the champ20 of this REPERTOIREmodifrequest.

        Champs S des contacts

        :return: The champ20 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ20

    @champ20.setter
    def champ20(self, champ20):
        """Sets the champ20 of this REPERTOIREmodifrequest.

        Champs S des contacts

        :param champ20: The champ20 of this REPERTOIREmodifrequest.
        :type champ20: List[str]
        """

        self._champ20 = champ20

    @property
    def champ21(self):
        """Gets the champ21 of this REPERTOIREmodifrequest.

        Champs T des contacts

        :return: The champ21 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ21

    @champ21.setter
    def champ21(self, champ21):
        """Sets the champ21 of this REPERTOIREmodifrequest.

        Champs T des contacts

        :param champ21: The champ21 of this REPERTOIREmodifrequest.
        :type champ21: List[str]
        """

        self._champ21 = champ21

    @property
    def champ22(self):
        """Gets the champ22 of this REPERTOIREmodifrequest.

        Champs U des contacts

        :return: The champ22 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ22

    @champ22.setter
    def champ22(self, champ22):
        """Sets the champ22 of this REPERTOIREmodifrequest.

        Champs U des contacts

        :param champ22: The champ22 of this REPERTOIREmodifrequest.
        :type champ22: List[str]
        """

        self._champ22 = champ22

    @property
    def champ23(self):
        """Gets the champ23 of this REPERTOIREmodifrequest.

        Champs V des contacts

        :return: The champ23 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ23

    @champ23.setter
    def champ23(self, champ23):
        """Sets the champ23 of this REPERTOIREmodifrequest.

        Champs V des contacts

        :param champ23: The champ23 of this REPERTOIREmodifrequest.
        :type champ23: List[str]
        """

        self._champ23 = champ23

    @property
    def champ24(self):
        """Gets the champ24 of this REPERTOIREmodifrequest.

        Champs W des contacts

        :return: The champ24 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ24

    @champ24.setter
    def champ24(self, champ24):
        """Sets the champ24 of this REPERTOIREmodifrequest.

        Champs W des contacts

        :param champ24: The champ24 of this REPERTOIREmodifrequest.
        :type champ24: List[str]
        """

        self._champ24 = champ24

    @property
    def champ25(self):
        """Gets the champ25 of this REPERTOIREmodifrequest.

        Champs X des contacts

        :return: The champ25 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ25

    @champ25.setter
    def champ25(self, champ25):
        """Sets the champ25 of this REPERTOIREmodifrequest.

        Champs X des contacts

        :param champ25: The champ25 of this REPERTOIREmodifrequest.
        :type champ25: List[str]
        """

        self._champ25 = champ25

    @property
    def champ26(self):
        """Gets the champ26 of this REPERTOIREmodifrequest.

        Champs Y des contacts

        :return: The champ26 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ26

    @champ26.setter
    def champ26(self, champ26):
        """Sets the champ26 of this REPERTOIREmodifrequest.

        Champs Y des contacts

        :param champ26: The champ26 of this REPERTOIREmodifrequest.
        :type champ26: List[str]
        """

        self._champ26 = champ26

    @property
    def champ27(self):
        """Gets the champ27 of this REPERTOIREmodifrequest.

        Champs Z des contacts

        :return: The champ27 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ27

    @champ27.setter
    def champ27(self, champ27):
        """Sets the champ27 of this REPERTOIREmodifrequest.

        Champs Z des contacts

        :param champ27: The champ27 of this REPERTOIREmodifrequest.
        :type champ27: List[str]
        """

        self._champ27 = champ27

    @property
    def champ3(self):
        """Gets the champ3 of this REPERTOIREmodifrequest.

        Champs B des contacts

        :return: The champ3 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ3

    @champ3.setter
    def champ3(self, champ3):
        """Sets the champ3 of this REPERTOIREmodifrequest.

        Champs B des contacts

        :param champ3: The champ3 of this REPERTOIREmodifrequest.
        :type champ3: List[str]
        """

        self._champ3 = champ3

    @property
    def champ4(self):
        """Gets the champ4 of this REPERTOIREmodifrequest.

        Champs C des contacts

        :return: The champ4 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ4

    @champ4.setter
    def champ4(self, champ4):
        """Sets the champ4 of this REPERTOIREmodifrequest.

        Champs C des contacts

        :param champ4: The champ4 of this REPERTOIREmodifrequest.
        :type champ4: List[str]
        """

        self._champ4 = champ4

    @property
    def champ5(self):
        """Gets the champ5 of this REPERTOIREmodifrequest.

        Champs D des contacts

        :return: The champ5 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ5

    @champ5.setter
    def champ5(self, champ5):
        """Sets the champ5 of this REPERTOIREmodifrequest.

        Champs D des contacts

        :param champ5: The champ5 of this REPERTOIREmodifrequest.
        :type champ5: List[str]
        """

        self._champ5 = champ5

    @property
    def champ6(self):
        """Gets the champ6 of this REPERTOIREmodifrequest.

        Champs E des contacts

        :return: The champ6 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ6

    @champ6.setter
    def champ6(self, champ6):
        """Sets the champ6 of this REPERTOIREmodifrequest.

        Champs E des contacts

        :param champ6: The champ6 of this REPERTOIREmodifrequest.
        :type champ6: List[str]
        """

        self._champ6 = champ6

    @property
    def champ7(self):
        """Gets the champ7 of this REPERTOIREmodifrequest.

        Champs F des contacts

        :return: The champ7 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ7

    @champ7.setter
    def champ7(self, champ7):
        """Sets the champ7 of this REPERTOIREmodifrequest.

        Champs F des contacts

        :param champ7: The champ7 of this REPERTOIREmodifrequest.
        :type champ7: List[str]
        """

        self._champ7 = champ7

    @property
    def champ8(self):
        """Gets the champ8 of this REPERTOIREmodifrequest.

        Champs G des contacts

        :return: The champ8 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ8

    @champ8.setter
    def champ8(self, champ8):
        """Sets the champ8 of this REPERTOIREmodifrequest.

        Champs G des contacts

        :param champ8: The champ8 of this REPERTOIREmodifrequest.
        :type champ8: List[str]
        """

        self._champ8 = champ8

    @property
    def champ9(self):
        """Gets the champ9 of this REPERTOIREmodifrequest.

        Champs H des contacts

        :return: The champ9 of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._champ9

    @champ9.setter
    def champ9(self, champ9):
        """Sets the champ9 of this REPERTOIREmodifrequest.

        Champs H des contacts

        :param champ9: The champ9 of this REPERTOIREmodifrequest.
        :type champ9: List[str]
        """

        self._champ9 = champ9

    @property
    def keyid(self):
        """Gets the keyid of this REPERTOIREmodifrequest.

        Clé API

        :return: The keyid of this REPERTOIREmodifrequest.
        :rtype: str
        """
        return self._keyid

    @keyid.setter
    def keyid(self, keyid):
        """Sets the keyid of this REPERTOIREmodifrequest.

        Clé API

        :param keyid: The keyid of this REPERTOIREmodifrequest.
        :type keyid: str
        """
        if keyid is None:
            raise ValueError("Invalid value for `keyid`, must not be `None`")

        self._keyid = keyid

    @property
    def num(self):
        """Gets the num of this REPERTOIREmodifrequest.

        liste des numéros des téléphone à ajouter ou supprimer

        :return: The num of this REPERTOIREmodifrequest.
        :rtype: List[str]
        """
        return self._num

    @num.setter
    def num(self, num):
        """Sets the num of this REPERTOIREmodifrequest.

        liste des numéros des téléphone à ajouter ou supprimer

        :param num: The num of this REPERTOIREmodifrequest.
        :type num: List[str]
        """
        if num is None:
            raise ValueError("Invalid value for `num`, must not be `None`")

        self._num = num

    @property
    def repertoire_edit(self):
        """Gets the repertoire_edit of this REPERTOIREmodifrequest.

        action à réaliser, \"add\" pour l'ajout de numéros, \"del\" pour la suppression de numéros

        :return: The repertoire_edit of this REPERTOIREmodifrequest.
        :rtype: str
        """
        return self._repertoire_edit

    @repertoire_edit.setter
    def repertoire_edit(self, repertoire_edit):
        """Sets the repertoire_edit of this REPERTOIREmodifrequest.

        action à réaliser, \"add\" pour l'ajout de numéros, \"del\" pour la suppression de numéros

        :param repertoire_edit: The repertoire_edit of this REPERTOIREmodifrequest.
        :type repertoire_edit: str
        """
        allowed_values = ["add", "del"]  # noqa: E501
        if repertoire_edit not in allowed_values:
            raise ValueError(
                "Invalid value for `repertoire_edit` ({0}), must be one of {1}"
                .format(repertoire_edit, allowed_values)
            )

        self._repertoire_edit = repertoire_edit

    @property
    def repertoire_id(self):
        """Gets the repertoire_id of this REPERTOIREmodifrequest.

        repertoireId du répertoire cible

        :return: The repertoire_id of this REPERTOIREmodifrequest.
        :rtype: str
        """
        return self._repertoire_id

    @repertoire_id.setter
    def repertoire_id(self, repertoire_id):
        """Sets the repertoire_id of this REPERTOIREmodifrequest.

        repertoireId du répertoire cible

        :param repertoire_id: The repertoire_id of this REPERTOIREmodifrequest.
        :type repertoire_id: str
        """
        if repertoire_id is None:
            raise ValueError("Invalid value for `repertoire_id`, must not be `None`")

        self._repertoire_id = repertoire_id
