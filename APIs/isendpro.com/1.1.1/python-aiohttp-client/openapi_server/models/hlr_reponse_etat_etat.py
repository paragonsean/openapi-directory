# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HLRReponseEtatEtat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operateur: str=None, tel: str=None):
        """HLRReponseEtatEtat - a model defined in OpenAPI

        :param operateur: The operateur of this HLRReponseEtatEtat.
        :param tel: The tel of this HLRReponseEtatEtat.
        """
        self.openapi_types = {
            'operateur': str,
            'tel': str
        }

        self.attribute_map = {
            'operateur': 'operateur',
            'tel': 'tel'
        }

        self._operateur = operateur
        self._tel = tel

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HLRReponseEtatEtat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HLRReponse_etat_etat of this HLRReponseEtatEtat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operateur(self):
        """Gets the operateur of this HLRReponseEtatEtat.

        Opérateur associé (si numéro valide)

        :return: The operateur of this HLRReponseEtatEtat.
        :rtype: str
        """
        return self._operateur

    @operateur.setter
    def operateur(self, operateur):
        """Sets the operateur of this HLRReponseEtatEtat.

        Opérateur associé (si numéro valide)

        :param operateur: The operateur of this HLRReponseEtatEtat.
        :type operateur: str
        """
        if operateur is None:
            raise ValueError("Invalid value for `operateur`, must not be `None`")

        self._operateur = operateur

    @property
    def tel(self):
        """Gets the tel of this HLRReponseEtatEtat.

        Numero de téléphone concerné

        :return: The tel of this HLRReponseEtatEtat.
        :rtype: str
        """
        return self._tel

    @tel.setter
    def tel(self, tel):
        """Sets the tel of this HLRReponseEtatEtat.

        Numero de téléphone concerné

        :param tel: The tel of this HLRReponseEtatEtat.
        :type tel: str
        """
        if tel is None:
            raise ValueError("Invalid value for `tel`, must not be `None`")

        self._tel = tel
