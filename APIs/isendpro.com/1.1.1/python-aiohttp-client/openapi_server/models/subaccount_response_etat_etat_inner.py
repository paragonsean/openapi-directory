# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubaccountResponseEtatEtatInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, message: str=None, sub_account_id: str=None, sub_account_keyid: str=None):
        """SubaccountResponseEtatEtatInner - a model defined in OpenAPI

        :param code: The code of this SubaccountResponseEtatEtatInner.
        :param message: The message of this SubaccountResponseEtatEtatInner.
        :param sub_account_id: The sub_account_id of this SubaccountResponseEtatEtatInner.
        :param sub_account_keyid: The sub_account_keyid of this SubaccountResponseEtatEtatInner.
        """
        self.openapi_types = {
            'code': str,
            'message': str,
            'sub_account_id': str,
            'sub_account_keyid': str
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'sub_account_id': 'subAccountId',
            'sub_account_keyid': 'subAccountKeyid'
        }

        self._code = code
        self._message = message
        self._sub_account_id = sub_account_id
        self._sub_account_keyid = sub_account_keyid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubaccountResponseEtatEtatInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubaccountResponse_etat_etat_inner of this SubaccountResponseEtatEtatInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this SubaccountResponseEtatEtatInner.


        :return: The code of this SubaccountResponseEtatEtatInner.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this SubaccountResponseEtatEtatInner.


        :param code: The code of this SubaccountResponseEtatEtatInner.
        :type code: str
        """

        self._code = code

    @property
    def message(self):
        """Gets the message of this SubaccountResponseEtatEtatInner.


        :return: The message of this SubaccountResponseEtatEtatInner.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SubaccountResponseEtatEtatInner.


        :param message: The message of this SubaccountResponseEtatEtatInner.
        :type message: str
        """

        self._message = message

    @property
    def sub_account_id(self):
        """Gets the sub_account_id of this SubaccountResponseEtatEtatInner.


        :return: The sub_account_id of this SubaccountResponseEtatEtatInner.
        :rtype: str
        """
        return self._sub_account_id

    @sub_account_id.setter
    def sub_account_id(self, sub_account_id):
        """Sets the sub_account_id of this SubaccountResponseEtatEtatInner.


        :param sub_account_id: The sub_account_id of this SubaccountResponseEtatEtatInner.
        :type sub_account_id: str
        """

        self._sub_account_id = sub_account_id

    @property
    def sub_account_keyid(self):
        """Gets the sub_account_keyid of this SubaccountResponseEtatEtatInner.


        :return: The sub_account_keyid of this SubaccountResponseEtatEtatInner.
        :rtype: str
        """
        return self._sub_account_keyid

    @sub_account_keyid.setter
    def sub_account_keyid(self, sub_account_keyid):
        """Sets the sub_account_keyid of this SubaccountResponseEtatEtatInner.


        :param sub_account_keyid: The sub_account_keyid of this SubaccountResponseEtatEtatInner.
        :type sub_account_keyid: str
        """

        self._sub_account_keyid = sub_account_keyid
