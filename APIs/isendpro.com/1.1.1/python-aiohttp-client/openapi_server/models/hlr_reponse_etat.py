# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hlr_reponse_etat_etat import HLRReponseEtatEtat
from openapi_server import util


class HLRReponseEtat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etat: List[HLRReponseEtatEtat]=None):
        """HLRReponseEtat - a model defined in OpenAPI

        :param etat: The etat of this HLRReponseEtat.
        """
        self.openapi_types = {
            'etat': List[HLRReponseEtatEtat]
        }

        self.attribute_map = {
            'etat': 'etat'
        }

        self._etat = etat

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HLRReponseEtat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HLRReponse_etat of this HLRReponseEtat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etat(self):
        """Gets the etat of this HLRReponseEtat.

        liste des retours

        :return: The etat of this HLRReponseEtat.
        :rtype: List[HLRReponseEtatEtat]
        """
        return self._etat

    @etat.setter
    def etat(self, etat):
        """Sets the etat of this HLRReponseEtat.

        liste des retours

        :param etat: The etat of this HLRReponseEtat.
        :type etat: List[HLRReponseEtatEtat]
        """
        if etat is None:
            raise ValueError("Invalid value for `etat`, must not be `None`")

        self._etat = etat
