# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubaccountAddResponseEtatEtatInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: float=None, message: str=None, sub_account_id: str=None, sub_account_key_id: str=None, sub_account_login: str=None):
        """SubaccountAddResponseEtatEtatInner - a model defined in OpenAPI

        :param code: The code of this SubaccountAddResponseEtatEtatInner.
        :param message: The message of this SubaccountAddResponseEtatEtatInner.
        :param sub_account_id: The sub_account_id of this SubaccountAddResponseEtatEtatInner.
        :param sub_account_key_id: The sub_account_key_id of this SubaccountAddResponseEtatEtatInner.
        :param sub_account_login: The sub_account_login of this SubaccountAddResponseEtatEtatInner.
        """
        self.openapi_types = {
            'code': float,
            'message': str,
            'sub_account_id': str,
            'sub_account_key_id': str,
            'sub_account_login': str
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'sub_account_id': 'subAccountId',
            'sub_account_key_id': 'subAccountKeyId',
            'sub_account_login': 'subAccountLogin'
        }

        self._code = code
        self._message = message
        self._sub_account_id = sub_account_id
        self._sub_account_key_id = sub_account_key_id
        self._sub_account_login = sub_account_login

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubaccountAddResponseEtatEtatInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubaccountAddResponse_etat_etat_inner of this SubaccountAddResponseEtatEtatInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this SubaccountAddResponseEtatEtatInner.


        :return: The code of this SubaccountAddResponseEtatEtatInner.
        :rtype: float
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this SubaccountAddResponseEtatEtatInner.


        :param code: The code of this SubaccountAddResponseEtatEtatInner.
        :type code: float
        """

        self._code = code

    @property
    def message(self):
        """Gets the message of this SubaccountAddResponseEtatEtatInner.


        :return: The message of this SubaccountAddResponseEtatEtatInner.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SubaccountAddResponseEtatEtatInner.


        :param message: The message of this SubaccountAddResponseEtatEtatInner.
        :type message: str
        """

        self._message = message

    @property
    def sub_account_id(self):
        """Gets the sub_account_id of this SubaccountAddResponseEtatEtatInner.


        :return: The sub_account_id of this SubaccountAddResponseEtatEtatInner.
        :rtype: str
        """
        return self._sub_account_id

    @sub_account_id.setter
    def sub_account_id(self, sub_account_id):
        """Sets the sub_account_id of this SubaccountAddResponseEtatEtatInner.


        :param sub_account_id: The sub_account_id of this SubaccountAddResponseEtatEtatInner.
        :type sub_account_id: str
        """

        self._sub_account_id = sub_account_id

    @property
    def sub_account_key_id(self):
        """Gets the sub_account_key_id of this SubaccountAddResponseEtatEtatInner.


        :return: The sub_account_key_id of this SubaccountAddResponseEtatEtatInner.
        :rtype: str
        """
        return self._sub_account_key_id

    @sub_account_key_id.setter
    def sub_account_key_id(self, sub_account_key_id):
        """Sets the sub_account_key_id of this SubaccountAddResponseEtatEtatInner.


        :param sub_account_key_id: The sub_account_key_id of this SubaccountAddResponseEtatEtatInner.
        :type sub_account_key_id: str
        """

        self._sub_account_key_id = sub_account_key_id

    @property
    def sub_account_login(self):
        """Gets the sub_account_login of this SubaccountAddResponseEtatEtatInner.


        :return: The sub_account_login of this SubaccountAddResponseEtatEtatInner.
        :rtype: str
        """
        return self._sub_account_login

    @sub_account_login.setter
    def sub_account_login(self, sub_account_login):
        """Sets the sub_account_login of this SubaccountAddResponseEtatEtatInner.


        :param sub_account_login: The sub_account_login of this SubaccountAddResponseEtatEtatInner.
        :type sub_account_login: str
        """

        self._sub_account_login = sub_account_login
