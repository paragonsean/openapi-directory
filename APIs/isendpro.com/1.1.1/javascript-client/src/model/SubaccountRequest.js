/**
 * API iSendPro
 * [1] Liste des fonctionnalités : - envoi de SMS à un ou plusieurs destinataires, - lookup HLR, - récupération des récapitulatifs de campagne, - gestion des répertoires, - ajout en liste noire. - comptage du nombre de caractères des SMS  [2] Pour utiliser cette API vous devez: - Créer un compte iSendPro sur https://isendpro.com/ - Créditer votre compte      - Remarque: obtention d'un crédit de test possible sous conditions - Noter votre clé de compte (keyid)   - Elle vous sera indispensable à l'utilisation de l'API   - Vous pouvez la trouver dans le rubrique mon \"compte\", sous-rubrique \"mon API\" - Configurer le contrôle IP   - Le contrôle IP est configurable dans le rubrique mon \"compte\", sous-rubrique \"mon API\"   - Il s'agit d'un système de liste blanche, vous devez entrer les IP utilisées pour appeler l'API   - Vous pouvez également désactiver totalement le contrôle IP 
 *
 * The version of the OpenAPI document: 1.1.1
 * Contact: support@isendpro.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubaccountRequest model module.
 * @module model/SubaccountRequest
 * @version 1.1.1
 */
class SubaccountRequest {
    /**
     * Constructs a new <code>SubaccountRequest</code>.
     * @alias module:model/SubaccountRequest
     * @param keyid {String} Clé API
     * @param subAccountEdit {module:model/SubaccountRequest.SubAccountEditEnum} action à réaliser soit setPrice pour définir un prix ou addCredit pour ajouter du credit ou setRestriction modifier la restriction stop /
     */
    constructor(keyid, subAccountEdit) { 
        
        SubaccountRequest.initialize(this, keyid, subAccountEdit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, keyid, subAccountEdit) { 
        obj['keyid'] = keyid;
        obj['subAccountEdit'] = subAccountEdit;
    }

    /**
     * Constructs a <code>SubaccountRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubaccountRequest} obj Optional instance to populate.
     * @return {module:model/SubaccountRequest} The populated <code>SubaccountRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubaccountRequest();

            if (data.hasOwnProperty('keyid')) {
                obj['keyid'] = ApiClient.convertToType(data['keyid'], 'String');
            }
            if (data.hasOwnProperty('subAccountAddCredit')) {
                obj['subAccountAddCredit'] = ApiClient.convertToType(data['subAccountAddCredit'], 'String');
            }
            if (data.hasOwnProperty('subAccountCountryCode')) {
                obj['subAccountCountryCode'] = ApiClient.convertToType(data['subAccountCountryCode'], 'String');
            }
            if (data.hasOwnProperty('subAccountEdit')) {
                obj['subAccountEdit'] = ApiClient.convertToType(data['subAccountEdit'], 'String');
            }
            if (data.hasOwnProperty('subAccountKeyId')) {
                obj['subAccountKeyId'] = ApiClient.convertToType(data['subAccountKeyId'], 'String');
            }
            if (data.hasOwnProperty('subAccountPrice')) {
                obj['subAccountPrice'] = ApiClient.convertToType(data['subAccountPrice'], 'String');
            }
            if (data.hasOwnProperty('subAccountRestrictionStop')) {
                obj['subAccountRestrictionStop'] = ApiClient.convertToType(data['subAccountRestrictionStop'], 'String');
            }
            if (data.hasOwnProperty('subAccountRestrictionTime')) {
                obj['subAccountRestrictionTime'] = ApiClient.convertToType(data['subAccountRestrictionTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubaccountRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubaccountRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubaccountRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['keyid'] && !(typeof data['keyid'] === 'string' || data['keyid'] instanceof String)) {
            throw new Error("Expected the field `keyid` to be a primitive type in the JSON string but got " + data['keyid']);
        }
        // ensure the json data is a string
        if (data['subAccountAddCredit'] && !(typeof data['subAccountAddCredit'] === 'string' || data['subAccountAddCredit'] instanceof String)) {
            throw new Error("Expected the field `subAccountAddCredit` to be a primitive type in the JSON string but got " + data['subAccountAddCredit']);
        }
        // ensure the json data is a string
        if (data['subAccountCountryCode'] && !(typeof data['subAccountCountryCode'] === 'string' || data['subAccountCountryCode'] instanceof String)) {
            throw new Error("Expected the field `subAccountCountryCode` to be a primitive type in the JSON string but got " + data['subAccountCountryCode']);
        }
        // ensure the json data is a string
        if (data['subAccountEdit'] && !(typeof data['subAccountEdit'] === 'string' || data['subAccountEdit'] instanceof String)) {
            throw new Error("Expected the field `subAccountEdit` to be a primitive type in the JSON string but got " + data['subAccountEdit']);
        }
        // ensure the json data is a string
        if (data['subAccountKeyId'] && !(typeof data['subAccountKeyId'] === 'string' || data['subAccountKeyId'] instanceof String)) {
            throw new Error("Expected the field `subAccountKeyId` to be a primitive type in the JSON string but got " + data['subAccountKeyId']);
        }
        // ensure the json data is a string
        if (data['subAccountPrice'] && !(typeof data['subAccountPrice'] === 'string' || data['subAccountPrice'] instanceof String)) {
            throw new Error("Expected the field `subAccountPrice` to be a primitive type in the JSON string but got " + data['subAccountPrice']);
        }
        // ensure the json data is a string
        if (data['subAccountRestrictionStop'] && !(typeof data['subAccountRestrictionStop'] === 'string' || data['subAccountRestrictionStop'] instanceof String)) {
            throw new Error("Expected the field `subAccountRestrictionStop` to be a primitive type in the JSON string but got " + data['subAccountRestrictionStop']);
        }
        // ensure the json data is a string
        if (data['subAccountRestrictionTime'] && !(typeof data['subAccountRestrictionTime'] === 'string' || data['subAccountRestrictionTime'] instanceof String)) {
            throw new Error("Expected the field `subAccountRestrictionTime` to be a primitive type in the JSON string but got " + data['subAccountRestrictionTime']);
        }

        return true;
    }


}

SubaccountRequest.RequiredProperties = ["keyid", "subAccountEdit"];

/**
 * Clé API
 * @member {String} keyid
 */
SubaccountRequest.prototype['keyid'] = undefined;

/**
 * montant du crédit à ajouter
 * @member {String} subAccountAddCredit
 */
SubaccountRequest.prototype['subAccountAddCredit'] = undefined;

/**
 * @member {String} subAccountCountryCode
 */
SubaccountRequest.prototype['subAccountCountryCode'] = undefined;

/**
 * action à réaliser soit setPrice pour définir un prix ou addCredit pour ajouter du credit ou setRestriction modifier la restriction stop /
 * @member {module:model/SubaccountRequest.SubAccountEditEnum} subAccountEdit
 */
SubaccountRequest.prototype['subAccountEdit'] = undefined;

/**
 * keyid du sous-compte
 * @member {String} subAccountKeyId
 */
SubaccountRequest.prototype['subAccountKeyId'] = undefined;

/**
 * @member {String} subAccountPrice
 */
SubaccountRequest.prototype['subAccountPrice'] = undefined;

/**
 * @member {module:model/SubaccountRequest.SubAccountRestrictionStopEnum} subAccountRestrictionStop
 */
SubaccountRequest.prototype['subAccountRestrictionStop'] = undefined;

/**
 * @member {module:model/SubaccountRequest.SubAccountRestrictionTimeEnum} subAccountRestrictionTime
 */
SubaccountRequest.prototype['subAccountRestrictionTime'] = undefined;





/**
 * Allowed values for the <code>subAccountEdit</code> property.
 * @enum {String}
 * @readonly
 */
SubaccountRequest['SubAccountEditEnum'] = {

    /**
     * value: "setPrice"
     * @const
     */
    "setPrice": "setPrice",

    /**
     * value: "addCredit"
     * @const
     */
    "addCredit": "addCredit",

    /**
     * value: "setRestriction"
     * @const
     */
    "setRestriction": "setRestriction"
};


/**
 * Allowed values for the <code>subAccountRestrictionStop</code> property.
 * @enum {String}
 * @readonly
 */
SubaccountRequest['SubAccountRestrictionStopEnum'] = {

    /**
     * value: "0"
     * @const
     */
    "0": "0",

    /**
     * value: "1"
     * @const
     */
    "1": "1"
};


/**
 * Allowed values for the <code>subAccountRestrictionTime</code> property.
 * @enum {String}
 * @readonly
 */
SubaccountRequest['SubAccountRestrictionTimeEnum'] = {

    /**
     * value: "0"
     * @const
     */
    "0": "0",

    /**
     * value: "1"
     * @const
     */
    "1": "1"
};



export default SubaccountRequest;

