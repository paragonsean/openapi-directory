/**
 * API iSendPro
 * [1] Liste des fonctionnalités : - envoi de SMS à un ou plusieurs destinataires, - lookup HLR, - récupération des récapitulatifs de campagne, - gestion des répertoires, - ajout en liste noire. - comptage du nombre de caractères des SMS  [2] Pour utiliser cette API vous devez: - Créer un compte iSendPro sur https://isendpro.com/ - Créditer votre compte      - Remarque: obtention d'un crédit de test possible sous conditions - Noter votre clé de compte (keyid)   - Elle vous sera indispensable à l'utilisation de l'API   - Vous pouvez la trouver dans le rubrique mon \"compte\", sous-rubrique \"mon API\" - Configurer le contrôle IP   - Le contrôle IP est configurable dans le rubrique mon \"compte\", sous-rubrique \"mon API\"   - Il s'agit d'un système de liste blanche, vous devez entrer les IP utilisées pour appeler l'API   - Vous pouvez également désactiver totalement le contrôle IP 
 *
 * The version of the OpenAPI document: 1.1.1
 * Contact: support@isendpro.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIREPERTOIREmodifrequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIREPERTOIREmodifrequest::OAIREPERTOIREmodifrequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIREPERTOIREmodifrequest::OAIREPERTOIREmodifrequest() {
    this->initializeModel();
}

OAIREPERTOIREmodifrequest::~OAIREPERTOIREmodifrequest() {}

void OAIREPERTOIREmodifrequest::initializeModel() {

    m_champ1_isSet = false;
    m_champ1_isValid = false;

    m_champ10_isSet = false;
    m_champ10_isValid = false;

    m_champ11_isSet = false;
    m_champ11_isValid = false;

    m_champ12_isSet = false;
    m_champ12_isValid = false;

    m_champ13_isSet = false;
    m_champ13_isValid = false;

    m_champ14_isSet = false;
    m_champ14_isValid = false;

    m_champ15_isSet = false;
    m_champ15_isValid = false;

    m_champ16_isSet = false;
    m_champ16_isValid = false;

    m_champ17_isSet = false;
    m_champ17_isValid = false;

    m_champ18_isSet = false;
    m_champ18_isValid = false;

    m_champ19_isSet = false;
    m_champ19_isValid = false;

    m_champ2_isSet = false;
    m_champ2_isValid = false;

    m_champ20_isSet = false;
    m_champ20_isValid = false;

    m_champ21_isSet = false;
    m_champ21_isValid = false;

    m_champ22_isSet = false;
    m_champ22_isValid = false;

    m_champ23_isSet = false;
    m_champ23_isValid = false;

    m_champ24_isSet = false;
    m_champ24_isValid = false;

    m_champ25_isSet = false;
    m_champ25_isValid = false;

    m_champ26_isSet = false;
    m_champ26_isValid = false;

    m_champ27_isSet = false;
    m_champ27_isValid = false;

    m_champ3_isSet = false;
    m_champ3_isValid = false;

    m_champ4_isSet = false;
    m_champ4_isValid = false;

    m_champ5_isSet = false;
    m_champ5_isValid = false;

    m_champ6_isSet = false;
    m_champ6_isValid = false;

    m_champ7_isSet = false;
    m_champ7_isValid = false;

    m_champ8_isSet = false;
    m_champ8_isValid = false;

    m_champ9_isSet = false;
    m_champ9_isValid = false;

    m_keyid_isSet = false;
    m_keyid_isValid = false;

    m_num_isSet = false;
    m_num_isValid = false;

    m_repertoire_edit_isSet = false;
    m_repertoire_edit_isValid = false;

    m_repertoire_id_isSet = false;
    m_repertoire_id_isValid = false;
}

void OAIREPERTOIREmodifrequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIREPERTOIREmodifrequest::fromJsonObject(QJsonObject json) {

    m_champ1_isValid = ::OpenAPI::fromJsonValue(m_champ1, json[QString("champ1")]);
    m_champ1_isSet = !json[QString("champ1")].isNull() && m_champ1_isValid;

    m_champ10_isValid = ::OpenAPI::fromJsonValue(m_champ10, json[QString("champ10")]);
    m_champ10_isSet = !json[QString("champ10")].isNull() && m_champ10_isValid;

    m_champ11_isValid = ::OpenAPI::fromJsonValue(m_champ11, json[QString("champ11")]);
    m_champ11_isSet = !json[QString("champ11")].isNull() && m_champ11_isValid;

    m_champ12_isValid = ::OpenAPI::fromJsonValue(m_champ12, json[QString("champ12")]);
    m_champ12_isSet = !json[QString("champ12")].isNull() && m_champ12_isValid;

    m_champ13_isValid = ::OpenAPI::fromJsonValue(m_champ13, json[QString("champ13")]);
    m_champ13_isSet = !json[QString("champ13")].isNull() && m_champ13_isValid;

    m_champ14_isValid = ::OpenAPI::fromJsonValue(m_champ14, json[QString("champ14")]);
    m_champ14_isSet = !json[QString("champ14")].isNull() && m_champ14_isValid;

    m_champ15_isValid = ::OpenAPI::fromJsonValue(m_champ15, json[QString("champ15")]);
    m_champ15_isSet = !json[QString("champ15")].isNull() && m_champ15_isValid;

    m_champ16_isValid = ::OpenAPI::fromJsonValue(m_champ16, json[QString("champ16")]);
    m_champ16_isSet = !json[QString("champ16")].isNull() && m_champ16_isValid;

    m_champ17_isValid = ::OpenAPI::fromJsonValue(m_champ17, json[QString("champ17")]);
    m_champ17_isSet = !json[QString("champ17")].isNull() && m_champ17_isValid;

    m_champ18_isValid = ::OpenAPI::fromJsonValue(m_champ18, json[QString("champ18")]);
    m_champ18_isSet = !json[QString("champ18")].isNull() && m_champ18_isValid;

    m_champ19_isValid = ::OpenAPI::fromJsonValue(m_champ19, json[QString("champ19")]);
    m_champ19_isSet = !json[QString("champ19")].isNull() && m_champ19_isValid;

    m_champ2_isValid = ::OpenAPI::fromJsonValue(m_champ2, json[QString("champ2")]);
    m_champ2_isSet = !json[QString("champ2")].isNull() && m_champ2_isValid;

    m_champ20_isValid = ::OpenAPI::fromJsonValue(m_champ20, json[QString("champ20")]);
    m_champ20_isSet = !json[QString("champ20")].isNull() && m_champ20_isValid;

    m_champ21_isValid = ::OpenAPI::fromJsonValue(m_champ21, json[QString("champ21")]);
    m_champ21_isSet = !json[QString("champ21")].isNull() && m_champ21_isValid;

    m_champ22_isValid = ::OpenAPI::fromJsonValue(m_champ22, json[QString("champ22")]);
    m_champ22_isSet = !json[QString("champ22")].isNull() && m_champ22_isValid;

    m_champ23_isValid = ::OpenAPI::fromJsonValue(m_champ23, json[QString("champ23")]);
    m_champ23_isSet = !json[QString("champ23")].isNull() && m_champ23_isValid;

    m_champ24_isValid = ::OpenAPI::fromJsonValue(m_champ24, json[QString("champ24")]);
    m_champ24_isSet = !json[QString("champ24")].isNull() && m_champ24_isValid;

    m_champ25_isValid = ::OpenAPI::fromJsonValue(m_champ25, json[QString("champ25")]);
    m_champ25_isSet = !json[QString("champ25")].isNull() && m_champ25_isValid;

    m_champ26_isValid = ::OpenAPI::fromJsonValue(m_champ26, json[QString("champ26")]);
    m_champ26_isSet = !json[QString("champ26")].isNull() && m_champ26_isValid;

    m_champ27_isValid = ::OpenAPI::fromJsonValue(m_champ27, json[QString("champ27")]);
    m_champ27_isSet = !json[QString("champ27")].isNull() && m_champ27_isValid;

    m_champ3_isValid = ::OpenAPI::fromJsonValue(m_champ3, json[QString("champ3")]);
    m_champ3_isSet = !json[QString("champ3")].isNull() && m_champ3_isValid;

    m_champ4_isValid = ::OpenAPI::fromJsonValue(m_champ4, json[QString("champ4")]);
    m_champ4_isSet = !json[QString("champ4")].isNull() && m_champ4_isValid;

    m_champ5_isValid = ::OpenAPI::fromJsonValue(m_champ5, json[QString("champ5")]);
    m_champ5_isSet = !json[QString("champ5")].isNull() && m_champ5_isValid;

    m_champ6_isValid = ::OpenAPI::fromJsonValue(m_champ6, json[QString("champ6")]);
    m_champ6_isSet = !json[QString("champ6")].isNull() && m_champ6_isValid;

    m_champ7_isValid = ::OpenAPI::fromJsonValue(m_champ7, json[QString("champ7")]);
    m_champ7_isSet = !json[QString("champ7")].isNull() && m_champ7_isValid;

    m_champ8_isValid = ::OpenAPI::fromJsonValue(m_champ8, json[QString("champ8")]);
    m_champ8_isSet = !json[QString("champ8")].isNull() && m_champ8_isValid;

    m_champ9_isValid = ::OpenAPI::fromJsonValue(m_champ9, json[QString("champ9")]);
    m_champ9_isSet = !json[QString("champ9")].isNull() && m_champ9_isValid;

    m_keyid_isValid = ::OpenAPI::fromJsonValue(m_keyid, json[QString("keyid")]);
    m_keyid_isSet = !json[QString("keyid")].isNull() && m_keyid_isValid;

    m_num_isValid = ::OpenAPI::fromJsonValue(m_num, json[QString("num")]);
    m_num_isSet = !json[QString("num")].isNull() && m_num_isValid;

    m_repertoire_edit_isValid = ::OpenAPI::fromJsonValue(m_repertoire_edit, json[QString("repertoireEdit")]);
    m_repertoire_edit_isSet = !json[QString("repertoireEdit")].isNull() && m_repertoire_edit_isValid;

    m_repertoire_id_isValid = ::OpenAPI::fromJsonValue(m_repertoire_id, json[QString("repertoireId")]);
    m_repertoire_id_isSet = !json[QString("repertoireId")].isNull() && m_repertoire_id_isValid;
}

QString OAIREPERTOIREmodifrequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIREPERTOIREmodifrequest::asJsonObject() const {
    QJsonObject obj;
    if (m_champ1.size() > 0) {
        obj.insert(QString("champ1"), ::OpenAPI::toJsonValue(m_champ1));
    }
    if (m_champ10.size() > 0) {
        obj.insert(QString("champ10"), ::OpenAPI::toJsonValue(m_champ10));
    }
    if (m_champ11.size() > 0) {
        obj.insert(QString("champ11"), ::OpenAPI::toJsonValue(m_champ11));
    }
    if (m_champ12.size() > 0) {
        obj.insert(QString("champ12"), ::OpenAPI::toJsonValue(m_champ12));
    }
    if (m_champ13.size() > 0) {
        obj.insert(QString("champ13"), ::OpenAPI::toJsonValue(m_champ13));
    }
    if (m_champ14.size() > 0) {
        obj.insert(QString("champ14"), ::OpenAPI::toJsonValue(m_champ14));
    }
    if (m_champ15.size() > 0) {
        obj.insert(QString("champ15"), ::OpenAPI::toJsonValue(m_champ15));
    }
    if (m_champ16.size() > 0) {
        obj.insert(QString("champ16"), ::OpenAPI::toJsonValue(m_champ16));
    }
    if (m_champ17.size() > 0) {
        obj.insert(QString("champ17"), ::OpenAPI::toJsonValue(m_champ17));
    }
    if (m_champ18.size() > 0) {
        obj.insert(QString("champ18"), ::OpenAPI::toJsonValue(m_champ18));
    }
    if (m_champ19.size() > 0) {
        obj.insert(QString("champ19"), ::OpenAPI::toJsonValue(m_champ19));
    }
    if (m_champ2.size() > 0) {
        obj.insert(QString("champ2"), ::OpenAPI::toJsonValue(m_champ2));
    }
    if (m_champ20.size() > 0) {
        obj.insert(QString("champ20"), ::OpenAPI::toJsonValue(m_champ20));
    }
    if (m_champ21.size() > 0) {
        obj.insert(QString("champ21"), ::OpenAPI::toJsonValue(m_champ21));
    }
    if (m_champ22.size() > 0) {
        obj.insert(QString("champ22"), ::OpenAPI::toJsonValue(m_champ22));
    }
    if (m_champ23.size() > 0) {
        obj.insert(QString("champ23"), ::OpenAPI::toJsonValue(m_champ23));
    }
    if (m_champ24.size() > 0) {
        obj.insert(QString("champ24"), ::OpenAPI::toJsonValue(m_champ24));
    }
    if (m_champ25.size() > 0) {
        obj.insert(QString("champ25"), ::OpenAPI::toJsonValue(m_champ25));
    }
    if (m_champ26.size() > 0) {
        obj.insert(QString("champ26"), ::OpenAPI::toJsonValue(m_champ26));
    }
    if (m_champ27.size() > 0) {
        obj.insert(QString("champ27"), ::OpenAPI::toJsonValue(m_champ27));
    }
    if (m_champ3.size() > 0) {
        obj.insert(QString("champ3"), ::OpenAPI::toJsonValue(m_champ3));
    }
    if (m_champ4.size() > 0) {
        obj.insert(QString("champ4"), ::OpenAPI::toJsonValue(m_champ4));
    }
    if (m_champ5.size() > 0) {
        obj.insert(QString("champ5"), ::OpenAPI::toJsonValue(m_champ5));
    }
    if (m_champ6.size() > 0) {
        obj.insert(QString("champ6"), ::OpenAPI::toJsonValue(m_champ6));
    }
    if (m_champ7.size() > 0) {
        obj.insert(QString("champ7"), ::OpenAPI::toJsonValue(m_champ7));
    }
    if (m_champ8.size() > 0) {
        obj.insert(QString("champ8"), ::OpenAPI::toJsonValue(m_champ8));
    }
    if (m_champ9.size() > 0) {
        obj.insert(QString("champ9"), ::OpenAPI::toJsonValue(m_champ9));
    }
    if (m_keyid_isSet) {
        obj.insert(QString("keyid"), ::OpenAPI::toJsonValue(m_keyid));
    }
    if (m_num.size() > 0) {
        obj.insert(QString("num"), ::OpenAPI::toJsonValue(m_num));
    }
    if (m_repertoire_edit_isSet) {
        obj.insert(QString("repertoireEdit"), ::OpenAPI::toJsonValue(m_repertoire_edit));
    }
    if (m_repertoire_id_isSet) {
        obj.insert(QString("repertoireId"), ::OpenAPI::toJsonValue(m_repertoire_id));
    }
    return obj;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp1() const {
    return m_champ1;
}
void OAIREPERTOIREmodifrequest::setChamp1(const QList<QString> &champ1) {
    m_champ1 = champ1;
    m_champ1_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ1_Set() const{
    return m_champ1_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ1_Valid() const{
    return m_champ1_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp10() const {
    return m_champ10;
}
void OAIREPERTOIREmodifrequest::setChamp10(const QList<QString> &champ10) {
    m_champ10 = champ10;
    m_champ10_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ10_Set() const{
    return m_champ10_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ10_Valid() const{
    return m_champ10_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp11() const {
    return m_champ11;
}
void OAIREPERTOIREmodifrequest::setChamp11(const QList<QString> &champ11) {
    m_champ11 = champ11;
    m_champ11_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ11_Set() const{
    return m_champ11_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ11_Valid() const{
    return m_champ11_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp12() const {
    return m_champ12;
}
void OAIREPERTOIREmodifrequest::setChamp12(const QList<QString> &champ12) {
    m_champ12 = champ12;
    m_champ12_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ12_Set() const{
    return m_champ12_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ12_Valid() const{
    return m_champ12_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp13() const {
    return m_champ13;
}
void OAIREPERTOIREmodifrequest::setChamp13(const QList<QString> &champ13) {
    m_champ13 = champ13;
    m_champ13_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ13_Set() const{
    return m_champ13_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ13_Valid() const{
    return m_champ13_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp14() const {
    return m_champ14;
}
void OAIREPERTOIREmodifrequest::setChamp14(const QList<QString> &champ14) {
    m_champ14 = champ14;
    m_champ14_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ14_Set() const{
    return m_champ14_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ14_Valid() const{
    return m_champ14_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp15() const {
    return m_champ15;
}
void OAIREPERTOIREmodifrequest::setChamp15(const QList<QString> &champ15) {
    m_champ15 = champ15;
    m_champ15_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ15_Set() const{
    return m_champ15_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ15_Valid() const{
    return m_champ15_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp16() const {
    return m_champ16;
}
void OAIREPERTOIREmodifrequest::setChamp16(const QList<QString> &champ16) {
    m_champ16 = champ16;
    m_champ16_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ16_Set() const{
    return m_champ16_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ16_Valid() const{
    return m_champ16_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp17() const {
    return m_champ17;
}
void OAIREPERTOIREmodifrequest::setChamp17(const QList<QString> &champ17) {
    m_champ17 = champ17;
    m_champ17_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ17_Set() const{
    return m_champ17_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ17_Valid() const{
    return m_champ17_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp18() const {
    return m_champ18;
}
void OAIREPERTOIREmodifrequest::setChamp18(const QList<QString> &champ18) {
    m_champ18 = champ18;
    m_champ18_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ18_Set() const{
    return m_champ18_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ18_Valid() const{
    return m_champ18_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp19() const {
    return m_champ19;
}
void OAIREPERTOIREmodifrequest::setChamp19(const QList<QString> &champ19) {
    m_champ19 = champ19;
    m_champ19_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ19_Set() const{
    return m_champ19_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ19_Valid() const{
    return m_champ19_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp2() const {
    return m_champ2;
}
void OAIREPERTOIREmodifrequest::setChamp2(const QList<QString> &champ2) {
    m_champ2 = champ2;
    m_champ2_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ2_Set() const{
    return m_champ2_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ2_Valid() const{
    return m_champ2_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp20() const {
    return m_champ20;
}
void OAIREPERTOIREmodifrequest::setChamp20(const QList<QString> &champ20) {
    m_champ20 = champ20;
    m_champ20_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ20_Set() const{
    return m_champ20_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ20_Valid() const{
    return m_champ20_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp21() const {
    return m_champ21;
}
void OAIREPERTOIREmodifrequest::setChamp21(const QList<QString> &champ21) {
    m_champ21 = champ21;
    m_champ21_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ21_Set() const{
    return m_champ21_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ21_Valid() const{
    return m_champ21_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp22() const {
    return m_champ22;
}
void OAIREPERTOIREmodifrequest::setChamp22(const QList<QString> &champ22) {
    m_champ22 = champ22;
    m_champ22_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ22_Set() const{
    return m_champ22_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ22_Valid() const{
    return m_champ22_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp23() const {
    return m_champ23;
}
void OAIREPERTOIREmodifrequest::setChamp23(const QList<QString> &champ23) {
    m_champ23 = champ23;
    m_champ23_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ23_Set() const{
    return m_champ23_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ23_Valid() const{
    return m_champ23_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp24() const {
    return m_champ24;
}
void OAIREPERTOIREmodifrequest::setChamp24(const QList<QString> &champ24) {
    m_champ24 = champ24;
    m_champ24_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ24_Set() const{
    return m_champ24_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ24_Valid() const{
    return m_champ24_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp25() const {
    return m_champ25;
}
void OAIREPERTOIREmodifrequest::setChamp25(const QList<QString> &champ25) {
    m_champ25 = champ25;
    m_champ25_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ25_Set() const{
    return m_champ25_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ25_Valid() const{
    return m_champ25_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp26() const {
    return m_champ26;
}
void OAIREPERTOIREmodifrequest::setChamp26(const QList<QString> &champ26) {
    m_champ26 = champ26;
    m_champ26_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ26_Set() const{
    return m_champ26_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ26_Valid() const{
    return m_champ26_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp27() const {
    return m_champ27;
}
void OAIREPERTOIREmodifrequest::setChamp27(const QList<QString> &champ27) {
    m_champ27 = champ27;
    m_champ27_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ27_Set() const{
    return m_champ27_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ27_Valid() const{
    return m_champ27_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp3() const {
    return m_champ3;
}
void OAIREPERTOIREmodifrequest::setChamp3(const QList<QString> &champ3) {
    m_champ3 = champ3;
    m_champ3_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ3_Set() const{
    return m_champ3_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ3_Valid() const{
    return m_champ3_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp4() const {
    return m_champ4;
}
void OAIREPERTOIREmodifrequest::setChamp4(const QList<QString> &champ4) {
    m_champ4 = champ4;
    m_champ4_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ4_Set() const{
    return m_champ4_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ4_Valid() const{
    return m_champ4_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp5() const {
    return m_champ5;
}
void OAIREPERTOIREmodifrequest::setChamp5(const QList<QString> &champ5) {
    m_champ5 = champ5;
    m_champ5_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ5_Set() const{
    return m_champ5_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ5_Valid() const{
    return m_champ5_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp6() const {
    return m_champ6;
}
void OAIREPERTOIREmodifrequest::setChamp6(const QList<QString> &champ6) {
    m_champ6 = champ6;
    m_champ6_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ6_Set() const{
    return m_champ6_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ6_Valid() const{
    return m_champ6_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp7() const {
    return m_champ7;
}
void OAIREPERTOIREmodifrequest::setChamp7(const QList<QString> &champ7) {
    m_champ7 = champ7;
    m_champ7_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ7_Set() const{
    return m_champ7_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ7_Valid() const{
    return m_champ7_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp8() const {
    return m_champ8;
}
void OAIREPERTOIREmodifrequest::setChamp8(const QList<QString> &champ8) {
    m_champ8 = champ8;
    m_champ8_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ8_Set() const{
    return m_champ8_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ8_Valid() const{
    return m_champ8_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getChamp9() const {
    return m_champ9;
}
void OAIREPERTOIREmodifrequest::setChamp9(const QList<QString> &champ9) {
    m_champ9 = champ9;
    m_champ9_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_champ9_Set() const{
    return m_champ9_isSet;
}

bool OAIREPERTOIREmodifrequest::is_champ9_Valid() const{
    return m_champ9_isValid;
}

QString OAIREPERTOIREmodifrequest::getKeyid() const {
    return m_keyid;
}
void OAIREPERTOIREmodifrequest::setKeyid(const QString &keyid) {
    m_keyid = keyid;
    m_keyid_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_keyid_Set() const{
    return m_keyid_isSet;
}

bool OAIREPERTOIREmodifrequest::is_keyid_Valid() const{
    return m_keyid_isValid;
}

QList<QString> OAIREPERTOIREmodifrequest::getNum() const {
    return m_num;
}
void OAIREPERTOIREmodifrequest::setNum(const QList<QString> &num) {
    m_num = num;
    m_num_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_num_Set() const{
    return m_num_isSet;
}

bool OAIREPERTOIREmodifrequest::is_num_Valid() const{
    return m_num_isValid;
}

QString OAIREPERTOIREmodifrequest::getRepertoireEdit() const {
    return m_repertoire_edit;
}
void OAIREPERTOIREmodifrequest::setRepertoireEdit(const QString &repertoire_edit) {
    m_repertoire_edit = repertoire_edit;
    m_repertoire_edit_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_repertoire_edit_Set() const{
    return m_repertoire_edit_isSet;
}

bool OAIREPERTOIREmodifrequest::is_repertoire_edit_Valid() const{
    return m_repertoire_edit_isValid;
}

QString OAIREPERTOIREmodifrequest::getRepertoireId() const {
    return m_repertoire_id;
}
void OAIREPERTOIREmodifrequest::setRepertoireId(const QString &repertoire_id) {
    m_repertoire_id = repertoire_id;
    m_repertoire_id_isSet = true;
}

bool OAIREPERTOIREmodifrequest::is_repertoire_id_Set() const{
    return m_repertoire_id_isSet;
}

bool OAIREPERTOIREmodifrequest::is_repertoire_id_Valid() const{
    return m_repertoire_id_isValid;
}

bool OAIREPERTOIREmodifrequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_champ1.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ10.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ11.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ12.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ13.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ14.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ15.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ16.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ17.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ18.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ19.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ2.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ20.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ21.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ22.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ23.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ24.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ25.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ26.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ27.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ3.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ4.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ5.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ6.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ7.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ8.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_champ9.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_keyid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_repertoire_edit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repertoire_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIREPERTOIREmodifrequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_keyid_isValid && m_num_isValid && m_repertoire_edit_isValid && m_repertoire_id_isValid && true;
}

} // namespace OpenAPI
