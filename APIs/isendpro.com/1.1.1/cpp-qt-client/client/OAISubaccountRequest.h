/**
 * API iSendPro
 * [1] Liste des fonctionnalités : - envoi de SMS à un ou plusieurs destinataires, - lookup HLR, - récupération des récapitulatifs de campagne, - gestion des répertoires, - ajout en liste noire. - comptage du nombre de caractères des SMS  [2] Pour utiliser cette API vous devez: - Créer un compte iSendPro sur https://isendpro.com/ - Créditer votre compte      - Remarque: obtention d'un crédit de test possible sous conditions - Noter votre clé de compte (keyid)   - Elle vous sera indispensable à l'utilisation de l'API   - Vous pouvez la trouver dans le rubrique mon \"compte\", sous-rubrique \"mon API\" - Configurer le contrôle IP   - Le contrôle IP est configurable dans le rubrique mon \"compte\", sous-rubrique \"mon API\"   - Il s'agit d'un système de liste blanche, vous devez entrer les IP utilisées pour appeler l'API   - Vous pouvez également désactiver totalement le contrôle IP 
 *
 * The version of the OpenAPI document: 1.1.1
 * Contact: support@isendpro.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubaccountRequest.h
 *
 * 
 */

#ifndef OAISubaccountRequest_H
#define OAISubaccountRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISubaccountRequest : public OAIObject {
public:
    OAISubaccountRequest();
    OAISubaccountRequest(QString json);
    ~OAISubaccountRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKeyid() const;
    void setKeyid(const QString &keyid);
    bool is_keyid_Set() const;
    bool is_keyid_Valid() const;

    QString getSubAccountAddCredit() const;
    void setSubAccountAddCredit(const QString &sub_account_add_credit);
    bool is_sub_account_add_credit_Set() const;
    bool is_sub_account_add_credit_Valid() const;

    QString getSubAccountCountryCode() const;
    void setSubAccountCountryCode(const QString &sub_account_country_code);
    bool is_sub_account_country_code_Set() const;
    bool is_sub_account_country_code_Valid() const;

    QString getSubAccountEdit() const;
    void setSubAccountEdit(const QString &sub_account_edit);
    bool is_sub_account_edit_Set() const;
    bool is_sub_account_edit_Valid() const;

    QString getSubAccountKeyId() const;
    void setSubAccountKeyId(const QString &sub_account_key_id);
    bool is_sub_account_key_id_Set() const;
    bool is_sub_account_key_id_Valid() const;

    QString getSubAccountPrice() const;
    void setSubAccountPrice(const QString &sub_account_price);
    bool is_sub_account_price_Set() const;
    bool is_sub_account_price_Valid() const;

    QString getSubAccountRestrictionStop() const;
    void setSubAccountRestrictionStop(const QString &sub_account_restriction_stop);
    bool is_sub_account_restriction_stop_Set() const;
    bool is_sub_account_restriction_stop_Valid() const;

    QString getSubAccountRestrictionTime() const;
    void setSubAccountRestrictionTime(const QString &sub_account_restriction_time);
    bool is_sub_account_restriction_time_Set() const;
    bool is_sub_account_restriction_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_keyid;
    bool m_keyid_isSet;
    bool m_keyid_isValid;

    QString m_sub_account_add_credit;
    bool m_sub_account_add_credit_isSet;
    bool m_sub_account_add_credit_isValid;

    QString m_sub_account_country_code;
    bool m_sub_account_country_code_isSet;
    bool m_sub_account_country_code_isValid;

    QString m_sub_account_edit;
    bool m_sub_account_edit_isSet;
    bool m_sub_account_edit_isValid;

    QString m_sub_account_key_id;
    bool m_sub_account_key_id_isSet;
    bool m_sub_account_key_id_isValid;

    QString m_sub_account_price;
    bool m_sub_account_price_isSet;
    bool m_sub_account_price_isValid;

    QString m_sub_account_restriction_stop;
    bool m_sub_account_restriction_stop_isSet;
    bool m_sub_account_restriction_stop_isValid;

    QString m_sub_account_restriction_time;
    bool m_sub_account_restriction_time_isSet;
    bool m_sub_account_restriction_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubaccountRequest)

#endif // OAISubaccountRequest_H
