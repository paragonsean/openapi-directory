# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.game_platforms_inner_platform import GamePlatformsInnerPlatform
from openapi_server.models.game_platforms_inner_requirements import GamePlatformsInnerRequirements
from openapi_server import util


class GamePlatformsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, platform: GamePlatformsInnerPlatform=None, released_at: str=None, requirements: GamePlatformsInnerRequirements=None):
        """GamePlatformsInner - a model defined in OpenAPI

        :param platform: The platform of this GamePlatformsInner.
        :param released_at: The released_at of this GamePlatformsInner.
        :param requirements: The requirements of this GamePlatformsInner.
        """
        self.openapi_types = {
            'platform': GamePlatformsInnerPlatform,
            'released_at': str,
            'requirements': GamePlatformsInnerRequirements
        }

        self.attribute_map = {
            'platform': 'platform',
            'released_at': 'released_at',
            'requirements': 'requirements'
        }

        self._platform = platform
        self._released_at = released_at
        self._requirements = requirements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GamePlatformsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Game_platforms_inner of this GamePlatformsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def platform(self):
        """Gets the platform of this GamePlatformsInner.


        :return: The platform of this GamePlatformsInner.
        :rtype: GamePlatformsInnerPlatform
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this GamePlatformsInner.


        :param platform: The platform of this GamePlatformsInner.
        :type platform: GamePlatformsInnerPlatform
        """

        self._platform = platform

    @property
    def released_at(self):
        """Gets the released_at of this GamePlatformsInner.


        :return: The released_at of this GamePlatformsInner.
        :rtype: str
        """
        return self._released_at

    @released_at.setter
    def released_at(self, released_at):
        """Sets the released_at of this GamePlatformsInner.


        :param released_at: The released_at of this GamePlatformsInner.
        :type released_at: str
        """

        self._released_at = released_at

    @property
    def requirements(self):
        """Gets the requirements of this GamePlatformsInner.


        :return: The requirements of this GamePlatformsInner.
        :rtype: GamePlatformsInnerRequirements
        """
        return self._requirements

    @requirements.setter
    def requirements(self, requirements):
        """Sets the requirements of this GamePlatformsInner.


        :param requirements: The requirements of this GamePlatformsInner.
        :type requirements: GamePlatformsInnerRequirements
        """

        self._requirements = requirements
