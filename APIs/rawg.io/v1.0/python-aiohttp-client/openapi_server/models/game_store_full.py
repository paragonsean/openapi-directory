# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GameStoreFull(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, game_id: str=None, id: int=None, store_id: str=None, url: str=None):
        """GameStoreFull - a model defined in OpenAPI

        :param game_id: The game_id of this GameStoreFull.
        :param id: The id of this GameStoreFull.
        :param store_id: The store_id of this GameStoreFull.
        :param url: The url of this GameStoreFull.
        """
        self.openapi_types = {
            'game_id': str,
            'id': int,
            'store_id': str,
            'url': str
        }

        self.attribute_map = {
            'game_id': 'game_id',
            'id': 'id',
            'store_id': 'store_id',
            'url': 'url'
        }

        self._game_id = game_id
        self._id = id
        self._store_id = store_id
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GameStoreFull':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GameStoreFull of this GameStoreFull.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_id(self):
        """Gets the game_id of this GameStoreFull.


        :return: The game_id of this GameStoreFull.
        :rtype: str
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this GameStoreFull.


        :param game_id: The game_id of this GameStoreFull.
        :type game_id: str
        """

        self._game_id = game_id

    @property
    def id(self):
        """Gets the id of this GameStoreFull.


        :return: The id of this GameStoreFull.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GameStoreFull.


        :param id: The id of this GameStoreFull.
        :type id: int
        """

        self._id = id

    @property
    def store_id(self):
        """Gets the store_id of this GameStoreFull.


        :return: The store_id of this GameStoreFull.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this GameStoreFull.


        :param store_id: The store_id of this GameStoreFull.
        :type store_id: str
        """

        self._store_id = store_id

    @property
    def url(self):
        """Gets the url of this GameStoreFull.


        :return: The url of this GameStoreFull.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this GameStoreFull.


        :param url: The url of this GameStoreFull.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")
        if url is not None and len(url) > 500:
            raise ValueError("Invalid value for `url`, length must be less than or equal to `500`")
        if url is not None and len(url) < 1:
            raise ValueError("Invalid value for `url`, length must be greater than or equal to `1`")

        self._url = url
