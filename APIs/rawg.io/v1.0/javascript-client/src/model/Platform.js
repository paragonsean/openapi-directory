/**
 * RAWG Video Games Database API
 *  The largest open video games database.  ### Why build on RAWG - More than 350,000 games for 50 platforms including mobiles. - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates, Metacritic ratings. - Where to buy: links to digital distribution services - Similar games based on visual similarity. - Player activity data: Steam average playtime and RAWG player counts and ratings. - Actively developing and constantly getting better by user contribution and our algorithms.  ### Terms of Use - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active hyperlink from every page where the data of RAWG is used. - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000 page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for commercial terms. - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt, and we will talk it through. - You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs. If you donâ€™t provide it, we may ban your requests.  __[Read more](https://rawg.io/apidocs)__. 
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Platform model module.
 * @module model/Platform
 * @version v1.0
 */
class Platform {
    /**
     * Constructs a new <code>Platform</code>.
     * @alias module:model/Platform
     * @param name {String} 
     */
    constructor(name) { 
        
        Platform.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Platform</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Platform} obj Optional instance to populate.
     * @return {module:model/Platform} The populated <code>Platform</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Platform();

            if (data.hasOwnProperty('games_count')) {
                obj['games_count'] = ApiClient.convertToType(data['games_count'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('image_background')) {
                obj['image_background'] = ApiClient.convertToType(data['image_background'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('year_end')) {
                obj['year_end'] = ApiClient.convertToType(data['year_end'], 'Number');
            }
            if (data.hasOwnProperty('year_start')) {
                obj['year_start'] = ApiClient.convertToType(data['year_start'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Platform</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Platform</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Platform.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['image'] && !(typeof data['image'] === 'string' || data['image'] instanceof String)) {
            throw new Error("Expected the field `image` to be a primitive type in the JSON string but got " + data['image']);
        }
        // ensure the json data is a string
        if (data['image_background'] && !(typeof data['image_background'] === 'string' || data['image_background'] instanceof String)) {
            throw new Error("Expected the field `image_background` to be a primitive type in the JSON string but got " + data['image_background']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }

        return true;
    }


}

Platform.RequiredProperties = ["name"];

/**
 * @member {Number} games_count
 */
Platform.prototype['games_count'] = undefined;

/**
 * @member {Number} id
 */
Platform.prototype['id'] = undefined;

/**
 * @member {String} image
 */
Platform.prototype['image'] = undefined;

/**
 * @member {String} image_background
 */
Platform.prototype['image_background'] = undefined;

/**
 * @member {String} name
 */
Platform.prototype['name'] = undefined;

/**
 * @member {String} slug
 */
Platform.prototype['slug'] = undefined;

/**
 * @member {Number} year_end
 */
Platform.prototype['year_end'] = undefined;

/**
 * @member {Number} year_start
 */
Platform.prototype['year_start'] = undefined;






export default Platform;

