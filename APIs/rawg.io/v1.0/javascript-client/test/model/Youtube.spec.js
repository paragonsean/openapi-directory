/**
 * RAWG Video Games Database API
 *  The largest open video games database.  ### Why build on RAWG - More than 350,000 games for 50 platforms including mobiles. - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates, Metacritic ratings. - Where to buy: links to digital distribution services - Similar games based on visual similarity. - Player activity data: Steam average playtime and RAWG player counts and ratings. - Actively developing and constantly getting better by user contribution and our algorithms.  ### Terms of Use - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active hyperlink from every page where the data of RAWG is used. - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000 page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for commercial terms. - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt, and we will talk it through. - You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs. If you donâ€™t provide it, we may ban your requests.  __[Read more](https://rawg.io/apidocs)__. 
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RawgVideoGamesDatabaseApi);
  }
}(this, function(expect, RawgVideoGamesDatabaseApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RawgVideoGamesDatabaseApi.Youtube();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Youtube', function() {
    it('should create an instance of Youtube', function() {
      // uncomment below and update the code to test Youtube
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be.a(RawgVideoGamesDatabaseApi.Youtube);
    });

    it('should have the property channelId (base name: "channel_id")', function() {
      // uncomment below and update the code to test the property channelId
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property channelTitle (base name: "channel_title")', function() {
      // uncomment below and update the code to test the property channelTitle
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property commentsCount (base name: "comments_count")', function() {
      // uncomment below and update the code to test the property commentsCount
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property dislikeCount (base name: "dislike_count")', function() {
      // uncomment below and update the code to test the property dislikeCount
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "external_id")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property favoriteCount (base name: "favorite_count")', function() {
      // uncomment below and update the code to test the property favoriteCount
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property likeCount (base name: "like_count")', function() {
      // uncomment below and update the code to test the property likeCount
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property thumbnails (base name: "thumbnails")', function() {
      // uncomment below and update the code to test the property thumbnails
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

    it('should have the property viewCount (base name: "view_count")', function() {
      // uncomment below and update the code to test the property viewCount
      //var instance = new RawgVideoGamesDatabaseApi.Youtube();
      //expect(instance).to.be();
    });

  });

}));
