/**
 * RAWG Video Games Database API
 *  The largest open video games database.  ### Why build on RAWG - More than 350,000 games for 50 platforms including mobiles. - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates, Metacritic ratings. - Where to buy: links to digital distribution services - Similar games based on visual similarity. - Player activity data: Steam average playtime and RAWG player counts and ratings. - Actively developing and constantly getting better by user contribution and our algorithms.  ### Terms of Use - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active hyperlink from every page where the data of RAWG is used. - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000 page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for commercial terms. - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt, and we will talk it through. - You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs. If you donâ€™t provide it, we may ban your requests.  __[Read more](https://rawg.io/apidocs)__. 
 *
 * The version of the OpenAPI document: v1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStores_list_200_response.h
 *
 * 
 */

#ifndef OAIStores_list_200_response_H
#define OAIStores_list_200_response_H

#include <QJsonObject>

#include "OAIStore.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStore;

class OAIStores_list_200_response : public OAIObject {
public:
    OAIStores_list_200_response();
    OAIStores_list_200_response(QString json);
    ~OAIStores_list_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getNext() const;
    void setNext(const QString &next);
    bool is_next_Set() const;
    bool is_next_Valid() const;

    QString getPrevious() const;
    void setPrevious(const QString &previous);
    bool is_previous_Set() const;
    bool is_previous_Valid() const;

    QList<OAIStore> getResults() const;
    void setResults(const QList<OAIStore> &results);
    bool is_results_Set() const;
    bool is_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_next;
    bool m_next_isSet;
    bool m_next_isValid;

    QString m_previous;
    bool m_previous_isSet;
    bool m_previous_isValid;

    QList<OAIStore> m_results;
    bool m_results_isSet;
    bool m_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStores_list_200_response)

#endif // OAIStores_list_200_response_H
