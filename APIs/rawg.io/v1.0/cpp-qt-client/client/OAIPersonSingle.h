/**
 * RAWG Video Games Database API
 *  The largest open video games database.  ### Why build on RAWG - More than 350,000 games for 50 platforms including mobiles. - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates, Metacritic ratings. - Where to buy: links to digital distribution services - Similar games based on visual similarity. - Player activity data: Steam average playtime and RAWG player counts and ratings. - Actively developing and constantly getting better by user contribution and our algorithms.  ### Terms of Use - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active hyperlink from every page where the data of RAWG is used. - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000 page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for commercial terms. - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt, and we will talk it through. - You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs. If you donâ€™t provide it, we may ban your requests.  __[Read more](https://rawg.io/apidocs)__. 
 *
 * The version of the OpenAPI document: v1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPersonSingle.h
 *
 * 
 */

#ifndef OAIPersonSingle_H
#define OAIPersonSingle_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPersonSingle : public OAIObject {
public:
    OAIPersonSingle();
    OAIPersonSingle(QString json);
    ~OAIPersonSingle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getGamesCount() const;
    void setGamesCount(const qint32 &games_count);
    bool is_games_count_Set() const;
    bool is_games_count_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getImageBackground() const;
    void setImageBackground(const QString &image_background);
    bool is_image_background_Set() const;
    bool is_image_background_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRating() const;
    void setRating(const QString &rating);
    bool is_rating_Set() const;
    bool is_rating_Valid() const;

    qint32 getRatingTop() const;
    void setRatingTop(const qint32 &rating_top);
    bool is_rating_top_Set() const;
    bool is_rating_top_Valid() const;

    qint32 getReviewsCount() const;
    void setReviewsCount(const qint32 &reviews_count);
    bool is_reviews_count_Set() const;
    bool is_reviews_count_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_games_count;
    bool m_games_count_isSet;
    bool m_games_count_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_image_background;
    bool m_image_background_isSet;
    bool m_image_background_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_rating;
    bool m_rating_isSet;
    bool m_rating_isValid;

    qint32 m_rating_top;
    bool m_rating_top_isSet;
    bool m_rating_top_isValid;

    qint32 m_reviews_count;
    bool m_reviews_count_isSet;
    bool m_reviews_count_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPersonSingle)

#endif // OAIPersonSingle_H
