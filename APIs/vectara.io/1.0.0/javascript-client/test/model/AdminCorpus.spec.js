/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VectaraRestApi);
  }
}(this, function(expect, VectaraRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VectaraRestApi.AdminCorpus();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AdminCorpus', function() {
    it('should create an instance of AdminCorpus', function() {
      // uncomment below and update the code to test AdminCorpus
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be.a(VectaraRestApi.AdminCorpus);
    });

    it('should have the property customDimensions (base name: "customDimensions")', function() {
      // uncomment below and update the code to test the property customDimensions
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property dtProvision (base name: "dtProvision")', function() {
      // uncomment below and update the code to test the property dtProvision
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property encoderId (base name: "encoderId")', function() {
      // uncomment below and update the code to test the property encoderId
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property encrypted (base name: "encrypted")', function() {
      // uncomment below and update the code to test the property encrypted
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property filterAttributes (base name: "filterAttributes")', function() {
      // uncomment below and update the code to test the property filterAttributes
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property metadataMaxBytes (base name: "metadataMaxBytes")', function() {
      // uncomment below and update the code to test the property metadataMaxBytes
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property swapIenc (base name: "swapIenc")', function() {
      // uncomment below and update the code to test the property swapIenc
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property swapQenc (base name: "swapQenc")', function() {
      // uncomment below and update the code to test the property swapQenc
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

    it('should have the property textless (base name: "textless")', function() {
      // uncomment below and update the code to test the property textless
      //var instance = new VectaraRestApi.AdminCorpus();
      //expect(instance).to.be();
    });

  });

}));
