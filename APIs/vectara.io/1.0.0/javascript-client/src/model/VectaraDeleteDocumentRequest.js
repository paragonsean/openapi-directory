/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VectaraDeleteDocumentRequest model module.
 * @module model/VectaraDeleteDocumentRequest
 * @version 1.0.0
 */
class VectaraDeleteDocumentRequest {
    /**
     * Constructs a new <code>VectaraDeleteDocumentRequest</code>.
     * Request to delete a document from an index.
     * @alias module:model/VectaraDeleteDocumentRequest
     */
    constructor() { 
        
        VectaraDeleteDocumentRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VectaraDeleteDocumentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VectaraDeleteDocumentRequest} obj Optional instance to populate.
     * @return {module:model/VectaraDeleteDocumentRequest} The populated <code>VectaraDeleteDocumentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VectaraDeleteDocumentRequest();

            if (data.hasOwnProperty('corpusId')) {
                obj['corpusId'] = ApiClient.convertToType(data['corpusId'], 'String');
            }
            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
            if (data.hasOwnProperty('documentId')) {
                obj['documentId'] = ApiClient.convertToType(data['documentId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VectaraDeleteDocumentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VectaraDeleteDocumentRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['corpusId'] && !(typeof data['corpusId'] === 'string' || data['corpusId'] instanceof String)) {
            throw new Error("Expected the field `corpusId` to be a primitive type in the JSON string but got " + data['corpusId']);
        }
        // ensure the json data is a string
        if (data['customerId'] && !(typeof data['customerId'] === 'string' || data['customerId'] instanceof String)) {
            throw new Error("Expected the field `customerId` to be a primitive type in the JSON string but got " + data['customerId']);
        }
        // ensure the json data is a string
        if (data['documentId'] && !(typeof data['documentId'] === 'string' || data['documentId'] instanceof String)) {
            throw new Error("Expected the field `documentId` to be a primitive type in the JSON string but got " + data['documentId']);
        }

        return true;
    }


}



/**
 * The Corpus ID that contains the document.
 * @member {String} corpusId
 */
VectaraDeleteDocumentRequest.prototype['corpusId'] = undefined;

/**
 * The Customer ID to issue the request for.
 * @member {String} customerId
 */
VectaraDeleteDocumentRequest.prototype['customerId'] = undefined;

/**
 * The Document ID to be deleted.
 * @member {String} documentId
 */
VectaraDeleteDocumentRequest.prototype['documentId'] = undefined;






export default VectaraDeleteDocumentRequest;

