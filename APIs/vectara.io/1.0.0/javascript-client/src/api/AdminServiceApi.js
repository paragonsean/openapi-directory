/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdminCreateCorpusRequest from '../model/AdminCreateCorpusRequest';
import AdminCreateCorpusResponse from '../model/AdminCreateCorpusResponse';
import AdminDeleteCorpusRequest from '../model/AdminDeleteCorpusRequest';
import AdminDeleteCorpusResponse from '../model/AdminDeleteCorpusResponse';
import AdminListCorporaRequest from '../model/AdminListCorporaRequest';
import AdminListCorporaResponse from '../model/AdminListCorporaResponse';
import AdminResetCorpusRequest from '../model/AdminResetCorpusRequest';
import AdminResetCorpusResponse from '../model/AdminResetCorpusResponse';
import GooglerpcStatus from '../model/GooglerpcStatus';

/**
* AdminService service.
* @module api/AdminServiceApi
* @version 1.0.0
*/
export default class AdminServiceApi {

    /**
    * Constructs a new AdminServiceApi. 
    * @alias module:api/AdminServiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCorpus operation.
     * @callback module:api/AdminServiceApi~createCorpusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdminCreateCorpusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Corpus
     * @param {Number} customerId The Customer ID to use for the request.
     * @param {module:model/AdminCreateCorpusRequest} adminCreateCorpusRequest 
     * @param {module:api/AdminServiceApi~createCorpusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdminCreateCorpusResponse}
     */
    createCorpus(customerId, adminCreateCorpusRequest, callback) {
      let postBody = adminCreateCorpusRequest;
      // verify the required parameter 'customerId' is set
      if (customerId === undefined || customerId === null) {
        throw new Error("Missing the required parameter 'customerId' when calling createCorpus");
      }
      // verify the required parameter 'adminCreateCorpusRequest' is set
      if (adminCreateCorpusRequest === undefined || adminCreateCorpusRequest === null) {
        throw new Error("Missing the required parameter 'adminCreateCorpusRequest' when calling createCorpus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'customer-id': customerId
      };
      let formParams = {
      };

      let authNames = ['oAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdminCreateCorpusResponse;
      return this.apiClient.callApi(
        '/v1/create-corpus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCorpus operation.
     * @callback module:api/AdminServiceApi~deleteCorpusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdminDeleteCorpusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Corpus
     * @param {Number} customerId The Customer ID to use for the request.
     * @param {module:model/AdminDeleteCorpusRequest} adminDeleteCorpusRequest 
     * @param {module:api/AdminServiceApi~deleteCorpusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdminDeleteCorpusResponse}
     */
    deleteCorpus(customerId, adminDeleteCorpusRequest, callback) {
      let postBody = adminDeleteCorpusRequest;
      // verify the required parameter 'customerId' is set
      if (customerId === undefined || customerId === null) {
        throw new Error("Missing the required parameter 'customerId' when calling deleteCorpus");
      }
      // verify the required parameter 'adminDeleteCorpusRequest' is set
      if (adminDeleteCorpusRequest === undefined || adminDeleteCorpusRequest === null) {
        throw new Error("Missing the required parameter 'adminDeleteCorpusRequest' when calling deleteCorpus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'customer-id': customerId
      };
      let formParams = {
      };

      let authNames = ['oAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdminDeleteCorpusResponse;
      return this.apiClient.callApi(
        '/v1/delete-corpus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listCorpora operation.
     * @callback module:api/AdminServiceApi~listCorporaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdminListCorporaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Corpora
     * @param {Number} customerId The Customer ID to use for the request.
     * @param {module:model/AdminListCorporaRequest} adminListCorporaRequest 
     * @param {module:api/AdminServiceApi~listCorporaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdminListCorporaResponse}
     */
    listCorpora(customerId, adminListCorporaRequest, callback) {
      let postBody = adminListCorporaRequest;
      // verify the required parameter 'customerId' is set
      if (customerId === undefined || customerId === null) {
        throw new Error("Missing the required parameter 'customerId' when calling listCorpora");
      }
      // verify the required parameter 'adminListCorporaRequest' is set
      if (adminListCorporaRequest === undefined || adminListCorporaRequest === null) {
        throw new Error("Missing the required parameter 'adminListCorporaRequest' when calling listCorpora");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'customer-id': customerId
      };
      let formParams = {
      };

      let authNames = ['oAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdminListCorporaResponse;
      return this.apiClient.callApi(
        '/v1/list-corpora', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetCorpus operation.
     * @callback module:api/AdminServiceApi~resetCorpusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdminResetCorpusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset Corpus
     * @param {Number} customerId The Customer ID to use for the request.
     * @param {module:model/AdminResetCorpusRequest} adminResetCorpusRequest 
     * @param {module:api/AdminServiceApi~resetCorpusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdminResetCorpusResponse}
     */
    resetCorpus(customerId, adminResetCorpusRequest, callback) {
      let postBody = adminResetCorpusRequest;
      // verify the required parameter 'customerId' is set
      if (customerId === undefined || customerId === null) {
        throw new Error("Missing the required parameter 'customerId' when calling resetCorpus");
      }
      // verify the required parameter 'adminResetCorpusRequest' is set
      if (adminResetCorpusRequest === undefined || adminResetCorpusRequest === null) {
        throw new Error("Missing the required parameter 'adminResetCorpusRequest' when calling resetCorpus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'customer-id': customerId
      };
      let formParams = {
      };

      let authNames = ['oAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdminResetCorpusResponse;
      return this.apiClient.callApi(
        '/v1/reset-corpus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
