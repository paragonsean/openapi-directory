/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdminCorpus from './model/AdminCorpus';
import AdminCreateCorpusRequest from './model/AdminCreateCorpusRequest';
import AdminCreateCorpusResponse from './model/AdminCreateCorpusResponse';
import AdminDeleteCorpusRequest from './model/AdminDeleteCorpusRequest';
import AdminDeleteCorpusResponse from './model/AdminDeleteCorpusResponse';
import AdminDimension from './model/AdminDimension';
import AdminFilterAttribute from './model/AdminFilterAttribute';
import AdminFilterAttributeLevel from './model/AdminFilterAttributeLevel';
import AdminFilterAttributeType from './model/AdminFilterAttributeType';
import AdminListCorporaRequest from './model/AdminListCorporaRequest';
import AdminListCorporaResponse from './model/AdminListCorporaResponse';
import AdminResetCorpusRequest from './model/AdminResetCorpusRequest';
import AdminResetCorpusResponse from './model/AdminResetCorpusResponse';
import ComvectaraStatus from './model/ComvectaraStatus';
import CorpusKeySemantics from './model/CorpusKeySemantics';
import FileUpload200Response from './model/FileUpload200Response';
import FileUpload200ResponseResponse from './model/FileUpload200ResponseResponse';
import FileUpload200ResponseResponseQuotaConsumed from './model/FileUpload200ResponseResponseQuotaConsumed';
import FileUpload400Response from './model/FileUpload400Response';
import GooglerpcStatus from './model/GooglerpcStatus';
import IndexingSection from './model/IndexingSection';
import ProtobufAny from './model/ProtobufAny';
import QueryRequestRerankingConfig from './model/QueryRequestRerankingConfig';
import ServingAttribute from './model/ServingAttribute';
import ServingBatchQueryRequest from './model/ServingBatchQueryRequest';
import ServingBatchQueryResponse from './model/ServingBatchQueryResponse';
import ServingCorpusKey from './model/ServingCorpusKey';
import ServingPerformanceMetrics from './model/ServingPerformanceMetrics';
import ServingQueryRequest from './model/ServingQueryRequest';
import ServingResponse from './model/ServingResponse';
import ServingResponseSet from './model/ServingResponseSet';
import ServingResponseSetDocument from './model/ServingResponseSetDocument';
import StreamResultOfServingResponseSet from './model/StreamResultOfServingResponseSet';
import VectaraDeleteDocumentRequest from './model/VectaraDeleteDocumentRequest';
import VectaraIndexDocumentRequest from './model/VectaraIndexDocumentRequest';
import VectaraIndexDocumentResponse from './model/VectaraIndexDocumentResponse';
import VectaraStatusCode from './model/VectaraStatusCode';
import VectaraStorageQuota from './model/VectaraStorageQuota';
import VectaraindexingCustomDimension from './model/VectaraindexingCustomDimension';
import VectaraindexingDocument from './model/VectaraindexingDocument';
import VectaraservingCustomDimension from './model/VectaraservingCustomDimension';
import AdminServiceApi from './api/AdminServiceApi';
import IndexServiceApi from './api/IndexServiceApi';
import QueryServiceApi from './api/QueryServiceApi';


/**
* Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var VectaraRestApi = require('index'); // See note below*.
* var xxxSvc = new VectaraRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new VectaraRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new VectaraRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new VectaraRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdminCorpus model constructor.
     * @property {module:model/AdminCorpus}
     */
    AdminCorpus,

    /**
     * The AdminCreateCorpusRequest model constructor.
     * @property {module:model/AdminCreateCorpusRequest}
     */
    AdminCreateCorpusRequest,

    /**
     * The AdminCreateCorpusResponse model constructor.
     * @property {module:model/AdminCreateCorpusResponse}
     */
    AdminCreateCorpusResponse,

    /**
     * The AdminDeleteCorpusRequest model constructor.
     * @property {module:model/AdminDeleteCorpusRequest}
     */
    AdminDeleteCorpusRequest,

    /**
     * The AdminDeleteCorpusResponse model constructor.
     * @property {module:model/AdminDeleteCorpusResponse}
     */
    AdminDeleteCorpusResponse,

    /**
     * The AdminDimension model constructor.
     * @property {module:model/AdminDimension}
     */
    AdminDimension,

    /**
     * The AdminFilterAttribute model constructor.
     * @property {module:model/AdminFilterAttribute}
     */
    AdminFilterAttribute,

    /**
     * The AdminFilterAttributeLevel model constructor.
     * @property {module:model/AdminFilterAttributeLevel}
     */
    AdminFilterAttributeLevel,

    /**
     * The AdminFilterAttributeType model constructor.
     * @property {module:model/AdminFilterAttributeType}
     */
    AdminFilterAttributeType,

    /**
     * The AdminListCorporaRequest model constructor.
     * @property {module:model/AdminListCorporaRequest}
     */
    AdminListCorporaRequest,

    /**
     * The AdminListCorporaResponse model constructor.
     * @property {module:model/AdminListCorporaResponse}
     */
    AdminListCorporaResponse,

    /**
     * The AdminResetCorpusRequest model constructor.
     * @property {module:model/AdminResetCorpusRequest}
     */
    AdminResetCorpusRequest,

    /**
     * The AdminResetCorpusResponse model constructor.
     * @property {module:model/AdminResetCorpusResponse}
     */
    AdminResetCorpusResponse,

    /**
     * The ComvectaraStatus model constructor.
     * @property {module:model/ComvectaraStatus}
     */
    ComvectaraStatus,

    /**
     * The CorpusKeySemantics model constructor.
     * @property {module:model/CorpusKeySemantics}
     */
    CorpusKeySemantics,

    /**
     * The FileUpload200Response model constructor.
     * @property {module:model/FileUpload200Response}
     */
    FileUpload200Response,

    /**
     * The FileUpload200ResponseResponse model constructor.
     * @property {module:model/FileUpload200ResponseResponse}
     */
    FileUpload200ResponseResponse,

    /**
     * The FileUpload200ResponseResponseQuotaConsumed model constructor.
     * @property {module:model/FileUpload200ResponseResponseQuotaConsumed}
     */
    FileUpload200ResponseResponseQuotaConsumed,

    /**
     * The FileUpload400Response model constructor.
     * @property {module:model/FileUpload400Response}
     */
    FileUpload400Response,

    /**
     * The GooglerpcStatus model constructor.
     * @property {module:model/GooglerpcStatus}
     */
    GooglerpcStatus,

    /**
     * The IndexingSection model constructor.
     * @property {module:model/IndexingSection}
     */
    IndexingSection,

    /**
     * The ProtobufAny model constructor.
     * @property {module:model/ProtobufAny}
     */
    ProtobufAny,

    /**
     * The QueryRequestRerankingConfig model constructor.
     * @property {module:model/QueryRequestRerankingConfig}
     */
    QueryRequestRerankingConfig,

    /**
     * The ServingAttribute model constructor.
     * @property {module:model/ServingAttribute}
     */
    ServingAttribute,

    /**
     * The ServingBatchQueryRequest model constructor.
     * @property {module:model/ServingBatchQueryRequest}
     */
    ServingBatchQueryRequest,

    /**
     * The ServingBatchQueryResponse model constructor.
     * @property {module:model/ServingBatchQueryResponse}
     */
    ServingBatchQueryResponse,

    /**
     * The ServingCorpusKey model constructor.
     * @property {module:model/ServingCorpusKey}
     */
    ServingCorpusKey,

    /**
     * The ServingPerformanceMetrics model constructor.
     * @property {module:model/ServingPerformanceMetrics}
     */
    ServingPerformanceMetrics,

    /**
     * The ServingQueryRequest model constructor.
     * @property {module:model/ServingQueryRequest}
     */
    ServingQueryRequest,

    /**
     * The ServingResponse model constructor.
     * @property {module:model/ServingResponse}
     */
    ServingResponse,

    /**
     * The ServingResponseSet model constructor.
     * @property {module:model/ServingResponseSet}
     */
    ServingResponseSet,

    /**
     * The ServingResponseSetDocument model constructor.
     * @property {module:model/ServingResponseSetDocument}
     */
    ServingResponseSetDocument,

    /**
     * The StreamResultOfServingResponseSet model constructor.
     * @property {module:model/StreamResultOfServingResponseSet}
     */
    StreamResultOfServingResponseSet,

    /**
     * The VectaraDeleteDocumentRequest model constructor.
     * @property {module:model/VectaraDeleteDocumentRequest}
     */
    VectaraDeleteDocumentRequest,

    /**
     * The VectaraIndexDocumentRequest model constructor.
     * @property {module:model/VectaraIndexDocumentRequest}
     */
    VectaraIndexDocumentRequest,

    /**
     * The VectaraIndexDocumentResponse model constructor.
     * @property {module:model/VectaraIndexDocumentResponse}
     */
    VectaraIndexDocumentResponse,

    /**
     * The VectaraStatusCode model constructor.
     * @property {module:model/VectaraStatusCode}
     */
    VectaraStatusCode,

    /**
     * The VectaraStorageQuota model constructor.
     * @property {module:model/VectaraStorageQuota}
     */
    VectaraStorageQuota,

    /**
     * The VectaraindexingCustomDimension model constructor.
     * @property {module:model/VectaraindexingCustomDimension}
     */
    VectaraindexingCustomDimension,

    /**
     * The VectaraindexingDocument model constructor.
     * @property {module:model/VectaraindexingDocument}
     */
    VectaraindexingDocument,

    /**
     * The VectaraservingCustomDimension model constructor.
     * @property {module:model/VectaraservingCustomDimension}
     */
    VectaraservingCustomDimension,

    /**
    * The AdminServiceApi service constructor.
    * @property {module:api/AdminServiceApi}
    */
    AdminServiceApi,

    /**
    * The IndexServiceApi service constructor.
    * @property {module:api/IndexServiceApi}
    */
    IndexServiceApi,

    /**
    * The QueryServiceApi service constructor.
    * @property {module:api/QueryServiceApi}
    */
    QueryServiceApi
};
