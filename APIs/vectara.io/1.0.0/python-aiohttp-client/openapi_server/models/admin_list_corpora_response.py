# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_corpus import AdminCorpus
from openapi_server.models.comvectara_status import ComvectaraStatus
from openapi_server import util


class AdminListCorporaResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, corpus: List[AdminCorpus]=None, page_key: str=None, status: ComvectaraStatus=None):
        """AdminListCorporaResponse - a model defined in OpenAPI

        :param corpus: The corpus of this AdminListCorporaResponse.
        :param page_key: The page_key of this AdminListCorporaResponse.
        :param status: The status of this AdminListCorporaResponse.
        """
        self.openapi_types = {
            'corpus': List[AdminCorpus],
            'page_key': str,
            'status': ComvectaraStatus
        }

        self.attribute_map = {
            'corpus': 'corpus',
            'page_key': 'pageKey',
            'status': 'status'
        }

        self._corpus = corpus
        self._page_key = page_key
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminListCorporaResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The adminListCorporaResponse of this AdminListCorporaResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def corpus(self):
        """Gets the corpus of this AdminListCorporaResponse.


        :return: The corpus of this AdminListCorporaResponse.
        :rtype: List[AdminCorpus]
        """
        return self._corpus

    @corpus.setter
    def corpus(self, corpus):
        """Sets the corpus of this AdminListCorporaResponse.


        :param corpus: The corpus of this AdminListCorporaResponse.
        :type corpus: List[AdminCorpus]
        """

        self._corpus = corpus

    @property
    def page_key(self):
        """Gets the page_key of this AdminListCorporaResponse.

        A key that is passed into a subsequent result in order to retrieve the next page of results.

        :return: The page_key of this AdminListCorporaResponse.
        :rtype: str
        """
        return self._page_key

    @page_key.setter
    def page_key(self, page_key):
        """Sets the page_key of this AdminListCorporaResponse.

        A key that is passed into a subsequent result in order to retrieve the next page of results.

        :param page_key: The page_key of this AdminListCorporaResponse.
        :type page_key: str
        """

        self._page_key = page_key

    @property
    def status(self):
        """Gets the status of this AdminListCorporaResponse.


        :return: The status of this AdminListCorporaResponse.
        :rtype: ComvectaraStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AdminListCorporaResponse.


        :param status: The status of this AdminListCorporaResponse.
        :type status: ComvectaraStatus
        """

        self._status = status
