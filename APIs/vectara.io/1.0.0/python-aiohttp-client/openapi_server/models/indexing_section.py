# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vectaraindexing_custom_dimension import VectaraindexingCustomDimension
from openapi_server import util


class IndexingSection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_dims: List[VectaraindexingCustomDimension]=None, id: int=None, metadata_json: str=None, section: List[IndexingSection]=None, text: str=None, title: str=None):
        """IndexingSection - a model defined in OpenAPI

        :param custom_dims: The custom_dims of this IndexingSection.
        :param id: The id of this IndexingSection.
        :param metadata_json: The metadata_json of this IndexingSection.
        :param section: The section of this IndexingSection.
        :param text: The text of this IndexingSection.
        :param title: The title of this IndexingSection.
        """
        self.openapi_types = {
            'custom_dims': List[VectaraindexingCustomDimension],
            'id': int,
            'metadata_json': str,
            'section': List[IndexingSection],
            'text': str,
            'title': str
        }

        self.attribute_map = {
            'custom_dims': 'customDims',
            'id': 'id',
            'metadata_json': 'metadataJson',
            'section': 'section',
            'text': 'text',
            'title': 'title'
        }

        self._custom_dims = custom_dims
        self._id = id
        self._metadata_json = metadata_json
        self._section = section
        self._text = text
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IndexingSection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The indexingSection of this IndexingSection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_dims(self):
        """Gets the custom_dims of this IndexingSection.

        A list of custom dimension values that are included in the generated representation of all subsections (i.e. sections contains by this section).

        :return: The custom_dims of this IndexingSection.
        :rtype: List[VectaraindexingCustomDimension]
        """
        return self._custom_dims

    @custom_dims.setter
    def custom_dims(self, custom_dims):
        """Sets the custom_dims of this IndexingSection.

        A list of custom dimension values that are included in the generated representation of all subsections (i.e. sections contains by this section).

        :param custom_dims: The custom_dims of this IndexingSection.
        :type custom_dims: List[VectaraindexingCustomDimension]
        """

        self._custom_dims = custom_dims

    @property
    def id(self):
        """Gets the id of this IndexingSection.

        Optionally, the unique ID of this section. If set, it will be returned as metadata in query results.

        :return: The id of this IndexingSection.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IndexingSection.

        Optionally, the unique ID of this section. If set, it will be returned as metadata in query results.

        :param id: The id of this IndexingSection.
        :type id: int
        """

        self._id = id

    @property
    def metadata_json(self):
        """Gets the metadata_json of this IndexingSection.

        Metadata about this section. This should be a json string. It is passed through the system, without being used at indexing time. It can be retrieved at query time.

        :return: The metadata_json of this IndexingSection.
        :rtype: str
        """
        return self._metadata_json

    @metadata_json.setter
    def metadata_json(self, metadata_json):
        """Sets the metadata_json of this IndexingSection.

        Metadata about this section. This should be a json string. It is passed through the system, without being used at indexing time. It can be retrieved at query time.

        :param metadata_json: The metadata_json of this IndexingSection.
        :type metadata_json: str
        """

        self._metadata_json = metadata_json

    @property
    def section(self):
        """Gets the section of this IndexingSection.

        A list of subsections.

        :return: The section of this IndexingSection.
        :rtype: List[IndexingSection]
        """
        return self._section

    @section.setter
    def section(self, section):
        """Sets the section of this IndexingSection.

        A list of subsections.

        :param section: The section of this IndexingSection.
        :type section: List[IndexingSection]
        """

        self._section = section

    @property
    def text(self):
        """Gets the text of this IndexingSection.

        The text of the section. This should never be empty.

        :return: The text of this IndexingSection.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this IndexingSection.

        The text of the section. This should never be empty.

        :param text: The text of this IndexingSection.
        :type text: str
        """

        self._text = text

    @property
    def title(self):
        """Gets the title of this IndexingSection.

        Optionally, the title of the section. This may be empty.

        :return: The title of this IndexingSection.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this IndexingSection.

        Optionally, the title of the section. This may be empty.

        :param title: The title of this IndexingSection.
        :type title: str
        """

        self._title = title
