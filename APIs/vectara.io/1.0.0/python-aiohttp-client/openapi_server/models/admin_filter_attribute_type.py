# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdminFilterAttributeType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    FILTER_ATTRIBUTE_TYPE__UNDEFINED = 'FILTER_ATTRIBUTE_TYPE__UNDEFINED'
    FILTER_ATTRIBUTE_TYPE__INTEGER = 'FILTER_ATTRIBUTE_TYPE__INTEGER'
    FILTER_ATTRIBUTE_TYPE__INTEGER_LIST = 'FILTER_ATTRIBUTE_TYPE__INTEGER_LIST'
    FILTER_ATTRIBUTE_TYPE__REAL = 'FILTER_ATTRIBUTE_TYPE__REAL'
    FILTER_ATTRIBUTE_TYPE__REAL_LIST = 'FILTER_ATTRIBUTE_TYPE__REAL_LIST'
    FILTER_ATTRIBUTE_TYPE__TEXT = 'FILTER_ATTRIBUTE_TYPE__TEXT'
    FILTER_ATTRIBUTE_TYPE__TEXT_LIST = 'FILTER_ATTRIBUTE_TYPE__TEXT_LIST'

    def __init__(self):
        """AdminFilterAttributeType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminFilterAttributeType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The adminFilterAttributeType of this AdminFilterAttributeType.
        """
        return util.deserialize_model(dikt, cls)
