# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.googlerpc_status import GooglerpcStatus
from openapi_server.models.serving_response_set import ServingResponseSet
from openapi_server import util


class StreamResultOfServingResponseSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: GooglerpcStatus=None, result: ServingResponseSet=None):
        """StreamResultOfServingResponseSet - a model defined in OpenAPI

        :param error: The error of this StreamResultOfServingResponseSet.
        :param result: The result of this StreamResultOfServingResponseSet.
        """
        self.openapi_types = {
            'error': GooglerpcStatus,
            'result': ServingResponseSet
        }

        self.attribute_map = {
            'error': 'error',
            'result': 'result'
        }

        self._error = error
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamResultOfServingResponseSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stream_result_of_servingResponseSet of this StreamResultOfServingResponseSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this StreamResultOfServingResponseSet.


        :return: The error of this StreamResultOfServingResponseSet.
        :rtype: GooglerpcStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this StreamResultOfServingResponseSet.


        :param error: The error of this StreamResultOfServingResponseSet.
        :type error: GooglerpcStatus
        """

        self._error = error

    @property
    def result(self):
        """Gets the result of this StreamResultOfServingResponseSet.


        :return: The result of this StreamResultOfServingResponseSet.
        :rtype: ServingResponseSet
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this StreamResultOfServingResponseSet.


        :param result: The result of this StreamResultOfServingResponseSet.
        :type result: ServingResponseSet
        """

        self._result = result
