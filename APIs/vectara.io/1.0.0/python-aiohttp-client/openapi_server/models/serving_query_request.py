# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_request_reranking_config import QueryRequestRerankingConfig
from openapi_server.models.serving_corpus_key import ServingCorpusKey
from openapi_server import util


class ServingQueryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, corpus_key: List[ServingCorpusKey]=None, num_results: int=None, query: str=None, reranking_config: QueryRequestRerankingConfig=None, start: int=None):
        """ServingQueryRequest - a model defined in OpenAPI

        :param corpus_key: The corpus_key of this ServingQueryRequest.
        :param num_results: The num_results of this ServingQueryRequest.
        :param query: The query of this ServingQueryRequest.
        :param reranking_config: The reranking_config of this ServingQueryRequest.
        :param start: The start of this ServingQueryRequest.
        """
        self.openapi_types = {
            'corpus_key': List[ServingCorpusKey],
            'num_results': int,
            'query': str,
            'reranking_config': QueryRequestRerankingConfig,
            'start': int
        }

        self.attribute_map = {
            'corpus_key': 'corpusKey',
            'num_results': 'numResults',
            'query': 'query',
            'reranking_config': 'rerankingConfig',
            'start': 'start'
        }

        self._corpus_key = corpus_key
        self._num_results = num_results
        self._query = query
        self._reranking_config = reranking_config
        self._start = start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServingQueryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The servingQueryRequest of this ServingQueryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def corpus_key(self):
        """Gets the corpus_key of this ServingQueryRequest.


        :return: The corpus_key of this ServingQueryRequest.
        :rtype: List[ServingCorpusKey]
        """
        return self._corpus_key

    @corpus_key.setter
    def corpus_key(self, corpus_key):
        """Sets the corpus_key of this ServingQueryRequest.


        :param corpus_key: The corpus_key of this ServingQueryRequest.
        :type corpus_key: List[ServingCorpusKey]
        """

        self._corpus_key = corpus_key

    @property
    def num_results(self):
        """Gets the num_results of this ServingQueryRequest.

        The number of results to return.

        :return: The num_results of this ServingQueryRequest.
        :rtype: int
        """
        return self._num_results

    @num_results.setter
    def num_results(self, num_results):
        """Sets the num_results of this ServingQueryRequest.

        The number of results to return.

        :param num_results: The num_results of this ServingQueryRequest.
        :type num_results: int
        """

        self._num_results = num_results

    @property
    def query(self):
        """Gets the query of this ServingQueryRequest.

        The query text to use from the end user.

        :return: The query of this ServingQueryRequest.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this ServingQueryRequest.

        The query text to use from the end user.

        :param query: The query of this ServingQueryRequest.
        :type query: str
        """

        self._query = query

    @property
    def reranking_config(self):
        """Gets the reranking_config of this ServingQueryRequest.


        :return: The reranking_config of this ServingQueryRequest.
        :rtype: QueryRequestRerankingConfig
        """
        return self._reranking_config

    @reranking_config.setter
    def reranking_config(self, reranking_config):
        """Sets the reranking_config of this ServingQueryRequest.


        :param reranking_config: The reranking_config of this ServingQueryRequest.
        :type reranking_config: QueryRequestRerankingConfig
        """

        self._reranking_config = reranking_config

    @property
    def start(self):
        """Gets the start of this ServingQueryRequest.


        :return: The start of this ServingQueryRequest.
        :rtype: int
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this ServingQueryRequest.


        :param start: The start of this ServingQueryRequest.
        :type start: int
        """

        self._start = start
