# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.indexing_section import IndexingSection
from openapi_server.models.vectaraindexing_custom_dimension import VectaraindexingCustomDimension
from openapi_server import util


class VectaraindexingDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_dims: List[VectaraindexingCustomDimension]=None, description: str=None, document_id: str=None, metadata_json: str=None, section: List[IndexingSection]=None, title: str=None):
        """VectaraindexingDocument - a model defined in OpenAPI

        :param custom_dims: The custom_dims of this VectaraindexingDocument.
        :param description: The description of this VectaraindexingDocument.
        :param document_id: The document_id of this VectaraindexingDocument.
        :param metadata_json: The metadata_json of this VectaraindexingDocument.
        :param section: The section of this VectaraindexingDocument.
        :param title: The title of this VectaraindexingDocument.
        """
        self.openapi_types = {
            'custom_dims': List[VectaraindexingCustomDimension],
            'description': str,
            'document_id': str,
            'metadata_json': str,
            'section': List[IndexingSection],
            'title': str
        }

        self.attribute_map = {
            'custom_dims': 'customDims',
            'description': 'description',
            'document_id': 'documentId',
            'metadata_json': 'metadataJson',
            'section': 'section',
            'title': 'title'
        }

        self._custom_dims = custom_dims
        self._description = description
        self._document_id = document_id
        self._metadata_json = metadata_json
        self._section = section
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VectaraindexingDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The vectaraindexingDocument of this VectaraindexingDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_dims(self):
        """Gets the custom_dims of this VectaraindexingDocument.

        A list of custom dimension values that are included in the generated representation of all sections.

        :return: The custom_dims of this VectaraindexingDocument.
        :rtype: List[VectaraindexingCustomDimension]
        """
        return self._custom_dims

    @custom_dims.setter
    def custom_dims(self, custom_dims):
        """Sets the custom_dims of this VectaraindexingDocument.

        A list of custom dimension values that are included in the generated representation of all sections.

        :param custom_dims: The custom_dims of this VectaraindexingDocument.
        :type custom_dims: List[VectaraindexingCustomDimension]
        """

        self._custom_dims = custom_dims

    @property
    def description(self):
        """Gets the description of this VectaraindexingDocument.

        An optional description for the document.

        :return: The description of this VectaraindexingDocument.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VectaraindexingDocument.

        An optional description for the document.

        :param description: The description of this VectaraindexingDocument.
        :type description: str
        """

        self._description = description

    @property
    def document_id(self):
        """Gets the document_id of this VectaraindexingDocument.

        Client assigned document ID to this document.

        :return: The document_id of this VectaraindexingDocument.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this VectaraindexingDocument.

        Client assigned document ID to this document.

        :param document_id: The document_id of this VectaraindexingDocument.
        :type document_id: str
        """

        self._document_id = document_id

    @property
    def metadata_json(self):
        """Gets the metadata_json of this VectaraindexingDocument.

        Metadata about the document. This should be a json string, and it can be retrieved at query time.

        :return: The metadata_json of this VectaraindexingDocument.
        :rtype: str
        """
        return self._metadata_json

    @metadata_json.setter
    def metadata_json(self, metadata_json):
        """Sets the metadata_json of this VectaraindexingDocument.

        Metadata about the document. This should be a json string, and it can be retrieved at query time.

        :param metadata_json: The metadata_json of this VectaraindexingDocument.
        :type metadata_json: str
        """

        self._metadata_json = metadata_json

    @property
    def section(self):
        """Gets the section of this VectaraindexingDocument.

        The actual content of the document, structured as a repeating list of sections.

        :return: The section of this VectaraindexingDocument.
        :rtype: List[IndexingSection]
        """
        return self._section

    @section.setter
    def section(self, section):
        """Sets the section of this VectaraindexingDocument.

        The actual content of the document, structured as a repeating list of sections.

        :param section: The section of this VectaraindexingDocument.
        :type section: List[IndexingSection]
        """

        self._section = section

    @property
    def title(self):
        """Gets the title of this VectaraindexingDocument.

        The title of the document.

        :return: The title of this VectaraindexingDocument.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this VectaraindexingDocument.

        The title of the document.

        :param title: The title of this VectaraindexingDocument.
        :type title: str
        """

        self._title = title
