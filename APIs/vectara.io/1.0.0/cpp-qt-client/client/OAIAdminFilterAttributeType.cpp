/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdminFilterAttributeType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdminFilterAttributeType::OAIAdminFilterAttributeType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdminFilterAttributeType::OAIAdminFilterAttributeType() {
    this->initializeModel();
}

OAIAdminFilterAttributeType::~OAIAdminFilterAttributeType() {}

void OAIAdminFilterAttributeType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAdminFilterAttributeType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAdminFilterAttributeType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FILTER_ATTRIBUTE_TYPE__UNDEFINED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAdminFilterAttributeType::UNDEFINED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FILTER_ATTRIBUTE_TYPE__INTEGER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAdminFilterAttributeType::INTEGER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FILTER_ATTRIBUTE_TYPE__INTEGER_LIST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAdminFilterAttributeType::INTEGER_LIST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FILTER_ATTRIBUTE_TYPE__REAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAdminFilterAttributeType::REAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FILTER_ATTRIBUTE_TYPE__REAL_LIST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAdminFilterAttributeType::REAL_LIST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FILTER_ATTRIBUTE_TYPE__TEXT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAdminFilterAttributeType::TEXT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FILTER_ATTRIBUTE_TYPE__TEXT_LIST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAdminFilterAttributeType::TEXT_LIST;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAdminFilterAttributeType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAdminFilterAttributeType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAdminFilterAttributeType::UNDEFINED:
            val = "FILTER_ATTRIBUTE_TYPE__UNDEFINED";
            break;
        case eOAIAdminFilterAttributeType::INTEGER:
            val = "FILTER_ATTRIBUTE_TYPE__INTEGER";
            break;
        case eOAIAdminFilterAttributeType::INTEGER_LIST:
            val = "FILTER_ATTRIBUTE_TYPE__INTEGER_LIST";
            break;
        case eOAIAdminFilterAttributeType::REAL:
            val = "FILTER_ATTRIBUTE_TYPE__REAL";
            break;
        case eOAIAdminFilterAttributeType::REAL_LIST:
            val = "FILTER_ATTRIBUTE_TYPE__REAL_LIST";
            break;
        case eOAIAdminFilterAttributeType::TEXT:
            val = "FILTER_ATTRIBUTE_TYPE__TEXT";
            break;
        case eOAIAdminFilterAttributeType::TEXT_LIST:
            val = "FILTER_ATTRIBUTE_TYPE__TEXT_LIST";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAdminFilterAttributeType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAdminFilterAttributeType::eOAIAdminFilterAttributeType OAIAdminFilterAttributeType::getValue() const {
    return m_value;
}

void OAIAdminFilterAttributeType::setValue(const OAIAdminFilterAttributeType::eOAIAdminFilterAttributeType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAdminFilterAttributeType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAdminFilterAttributeType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
