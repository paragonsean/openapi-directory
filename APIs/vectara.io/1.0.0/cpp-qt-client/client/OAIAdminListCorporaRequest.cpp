/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdminListCorporaRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdminListCorporaRequest::OAIAdminListCorporaRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdminListCorporaRequest::OAIAdminListCorporaRequest() {
    this->initializeModel();
}

OAIAdminListCorporaRequest::~OAIAdminListCorporaRequest() {}

void OAIAdminListCorporaRequest::initializeModel() {

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_num_results_isSet = false;
    m_num_results_isValid = false;

    m_page_key_isSet = false;
    m_page_key_isValid = false;
}

void OAIAdminListCorporaRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdminListCorporaRequest::fromJsonObject(QJsonObject json) {

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_num_results_isValid = ::OpenAPI::fromJsonValue(m_num_results, json[QString("numResults")]);
    m_num_results_isSet = !json[QString("numResults")].isNull() && m_num_results_isValid;

    m_page_key_isValid = ::OpenAPI::fromJsonValue(m_page_key, json[QString("pageKey")]);
    m_page_key_isSet = !json[QString("pageKey")].isNull() && m_page_key_isValid;
}

QString OAIAdminListCorporaRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdminListCorporaRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_num_results_isSet) {
        obj.insert(QString("numResults"), ::OpenAPI::toJsonValue(m_num_results));
    }
    if (m_page_key_isSet) {
        obj.insert(QString("pageKey"), ::OpenAPI::toJsonValue(m_page_key));
    }
    return obj;
}

QString OAIAdminListCorporaRequest::getFilter() const {
    return m_filter;
}
void OAIAdminListCorporaRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIAdminListCorporaRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIAdminListCorporaRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

qint64 OAIAdminListCorporaRequest::getNumResults() const {
    return m_num_results;
}
void OAIAdminListCorporaRequest::setNumResults(const qint64 &num_results) {
    m_num_results = num_results;
    m_num_results_isSet = true;
}

bool OAIAdminListCorporaRequest::is_num_results_Set() const{
    return m_num_results_isSet;
}

bool OAIAdminListCorporaRequest::is_num_results_Valid() const{
    return m_num_results_isValid;
}

QByteArray OAIAdminListCorporaRequest::getPageKey() const {
    return m_page_key;
}
void OAIAdminListCorporaRequest::setPageKey(const QByteArray &page_key) {
    m_page_key = page_key;
    m_page_key_isSet = true;
}

bool OAIAdminListCorporaRequest::is_page_key_Set() const{
    return m_page_key_isSet;
}

bool OAIAdminListCorporaRequest::is_page_key_Valid() const{
    return m_page_key_isValid;
}

bool OAIAdminListCorporaRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdminListCorporaRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
