/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServingCorpusKey.h
 *
 * 
 */

#ifndef OAIServingCorpusKey_H
#define OAIServingCorpusKey_H

#include <QJsonObject>

#include "OAICorpusKeySemantics.h"
#include "OAIVectaraservingCustomDimension.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVectaraservingCustomDimension;

class OAIServingCorpusKey : public OAIObject {
public:
    OAIServingCorpusKey();
    OAIServingCorpusKey(QString json);
    ~OAIServingCorpusKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCorpusId() const;
    void setCorpusId(const qint64 &corpus_id);
    bool is_corpus_id_Set() const;
    bool is_corpus_id_Valid() const;

    qint64 getCustomerId() const;
    void setCustomerId(const qint64 &customer_id);
    bool is_customer_id_Set() const;
    bool is_customer_id_Valid() const;

    QList<OAIVectaraservingCustomDimension> getDim() const;
    void setDim(const QList<OAIVectaraservingCustomDimension> &dim);
    bool is_dim_Set() const;
    bool is_dim_Valid() const;

    QString getMetadataFilter() const;
    void setMetadataFilter(const QString &metadata_filter);
    bool is_metadata_filter_Set() const;
    bool is_metadata_filter_Valid() const;

    OAICorpusKeySemantics getSemantics() const;
    void setSemantics(const OAICorpusKeySemantics &semantics);
    bool is_semantics_Set() const;
    bool is_semantics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_corpus_id;
    bool m_corpus_id_isSet;
    bool m_corpus_id_isValid;

    qint64 m_customer_id;
    bool m_customer_id_isSet;
    bool m_customer_id_isValid;

    QList<OAIVectaraservingCustomDimension> m_dim;
    bool m_dim_isSet;
    bool m_dim_isValid;

    QString m_metadata_filter;
    bool m_metadata_filter_isSet;
    bool m_metadata_filter_isValid;

    OAICorpusKeySemantics m_semantics;
    bool m_semantics_isSet;
    bool m_semantics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServingCorpusKey)

#endif // OAIServingCorpusKey_H
