/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServingResponse.h
 *
 * 
 */

#ifndef OAIServingResponse_H
#define OAIServingResponse_H

#include <QJsonObject>

#include "OAIServingAttribute.h"
#include "OAIServingCorpusKey.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServingCorpusKey;
class OAIServingAttribute;

class OAIServingResponse : public OAIObject {
public:
    OAIServingResponse();
    OAIServingResponse(QString json);
    ~OAIServingResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIServingCorpusKey getCorpusKey() const;
    void setCorpusKey(const OAIServingCorpusKey &corpus_key);
    bool is_corpus_key_Set() const;
    bool is_corpus_key_Valid() const;

    qint64 getDocumentIndex() const;
    void setDocumentIndex(const qint64 &document_index);
    bool is_document_index_Set() const;
    bool is_document_index_Valid() const;

    QList<OAIServingAttribute> getMetadata() const;
    void setMetadata(const QList<OAIServingAttribute> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    float getScore() const;
    void setScore(const float &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIServingCorpusKey m_corpus_key;
    bool m_corpus_key_isSet;
    bool m_corpus_key_isValid;

    qint64 m_document_index;
    bool m_document_index_isSet;
    bool m_document_index_isValid;

    QList<OAIServingAttribute> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    float m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServingResponse)

#endif // OAIServingResponse_H
