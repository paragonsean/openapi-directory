/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdminCreateCorpusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdminCreateCorpusRequest::OAIAdminCreateCorpusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdminCreateCorpusRequest::OAIAdminCreateCorpusRequest() {
    this->initializeModel();
}

OAIAdminCreateCorpusRequest::~OAIAdminCreateCorpusRequest() {}

void OAIAdminCreateCorpusRequest::initializeModel() {

    m_corpus_isSet = false;
    m_corpus_isValid = false;
}

void OAIAdminCreateCorpusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdminCreateCorpusRequest::fromJsonObject(QJsonObject json) {

    m_corpus_isValid = ::OpenAPI::fromJsonValue(m_corpus, json[QString("corpus")]);
    m_corpus_isSet = !json[QString("corpus")].isNull() && m_corpus_isValid;
}

QString OAIAdminCreateCorpusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdminCreateCorpusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_corpus.isSet()) {
        obj.insert(QString("corpus"), ::OpenAPI::toJsonValue(m_corpus));
    }
    return obj;
}

OAIAdminCorpus OAIAdminCreateCorpusRequest::getCorpus() const {
    return m_corpus;
}
void OAIAdminCreateCorpusRequest::setCorpus(const OAIAdminCorpus &corpus) {
    m_corpus = corpus;
    m_corpus_isSet = true;
}

bool OAIAdminCreateCorpusRequest::is_corpus_Set() const{
    return m_corpus_isSet;
}

bool OAIAdminCreateCorpusRequest::is_corpus_Valid() const{
    return m_corpus_isValid;
}

bool OAIAdminCreateCorpusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_corpus.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdminCreateCorpusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
