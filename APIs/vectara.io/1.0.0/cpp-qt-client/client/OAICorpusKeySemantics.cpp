/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICorpusKeySemantics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICorpusKeySemantics::OAICorpusKeySemantics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICorpusKeySemantics::OAICorpusKeySemantics() {
    this->initializeModel();
}

OAICorpusKeySemantics::~OAICorpusKeySemantics() {}

void OAICorpusKeySemantics::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICorpusKeySemantics::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICorpusKeySemantics::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DEFAULT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICorpusKeySemantics::DEFAULT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QUERY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICorpusKeySemantics::QUERY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RESPONSE", Qt::CaseInsensitive) == 0) {
        m_value = eOAICorpusKeySemantics::RESPONSE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICorpusKeySemantics::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICorpusKeySemantics::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICorpusKeySemantics::DEFAULT:
            val = "DEFAULT";
            break;
        case eOAICorpusKeySemantics::QUERY:
            val = "QUERY";
            break;
        case eOAICorpusKeySemantics::RESPONSE:
            val = "RESPONSE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICorpusKeySemantics::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICorpusKeySemantics::eOAICorpusKeySemantics OAICorpusKeySemantics::getValue() const {
    return m_value;
}

void OAICorpusKeySemantics::setValue(const OAICorpusKeySemantics::eOAICorpusKeySemantics& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICorpusKeySemantics::isSet() const {
    
    return m_value_isSet;
}

bool OAICorpusKeySemantics::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
