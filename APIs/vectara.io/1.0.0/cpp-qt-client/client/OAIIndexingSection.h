/**
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIndexingSection.h
 *
 * A section within a structured document.
 */

#ifndef OAIIndexingSection_H
#define OAIIndexingSection_H

#include <QJsonObject>

#include "OAIVectaraindexingCustomDimension.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVectaraindexingCustomDimension;

class OAIIndexingSection : public OAIObject {
public:
    OAIIndexingSection();
    OAIIndexingSection(QString json);
    ~OAIIndexingSection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIVectaraindexingCustomDimension> getCustomDims() const;
    void setCustomDims(const QList<OAIVectaraindexingCustomDimension> &custom_dims);
    bool is_custom_dims_Set() const;
    bool is_custom_dims_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMetadataJson() const;
    void setMetadataJson(const QString &metadata_json);
    bool is_metadata_json_Set() const;
    bool is_metadata_json_Valid() const;

    QList<OAIIndexingSection> getSection() const;
    void setSection(const QList<OAIIndexingSection> &section);
    bool is_section_Set() const;
    bool is_section_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIVectaraindexingCustomDimension> m_custom_dims;
    bool m_custom_dims_isSet;
    bool m_custom_dims_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_metadata_json;
    bool m_metadata_json_isSet;
    bool m_metadata_json_isValid;

    QList<OAIIndexingSection> m_section;
    bool m_section_isSet;
    bool m_section_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIndexingSection)

#endif // OAIIndexingSection_H
