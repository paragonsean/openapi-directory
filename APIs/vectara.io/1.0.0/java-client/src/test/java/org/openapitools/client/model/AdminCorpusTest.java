/*
 * Vectara REST API
 * Vectara is a neural search platform, built for developers to get the most out of their data.  You can sign up for an account at [https://vectara.com](https://vectara.com).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vectara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdminDimension;
import org.openapitools.client.model.AdminFilterAttribute;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AdminCorpus
 */
public class AdminCorpusTest {
    private final AdminCorpus model = new AdminCorpus();

    /**
     * Model tests for AdminCorpus
     */
    @Test
    public void testAdminCorpus() {
        // TODO: test AdminCorpus
    }

    /**
     * Test the property 'customDimensions'
     */
    @Test
    public void customDimensionsTest() {
        // TODO: test customDimensions
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'dtProvision'
     */
    @Test
    public void dtProvisionTest() {
        // TODO: test dtProvision
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'encoderId'
     */
    @Test
    public void encoderIdTest() {
        // TODO: test encoderId
    }

    /**
     * Test the property 'encrypted'
     */
    @Test
    public void encryptedTest() {
        // TODO: test encrypted
    }

    /**
     * Test the property 'filterAttributes'
     */
    @Test
    public void filterAttributesTest() {
        // TODO: test filterAttributes
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'metadataMaxBytes'
     */
    @Test
    public void metadataMaxBytesTest() {
        // TODO: test metadataMaxBytes
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'swapIenc'
     */
    @Test
    public void swapIencTest() {
        // TODO: test swapIenc
    }

    /**
     * Test the property 'swapQenc'
     */
    @Test
    public void swapQencTest() {
        // TODO: test swapQenc
    }

    /**
     * Test the property 'textless'
     */
    @Test
    public void textlessTest() {
        // TODO: test textless
    }

}
