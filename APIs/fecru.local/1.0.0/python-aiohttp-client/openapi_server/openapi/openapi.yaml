openapi: 3.0.1
info:
  contact: {}
  title: Fisheye Crucible
  version: 1.0.0
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://twitter.com/Atlassian/profile_image?size=original
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.18
    format: wadl
    url: https://docs.atlassian.com/fisheye-crucible/latest_backup/wadl/fecru.wadl
    version: "1.0"
  x-providerName: fecru.local
servers:
- url: http://fecru.local/context/
paths:
  /rest-service-fecru/admin/groups/:
    get:
      description: Retrieve a page of groups.
      operationId: rest_service_fecru_admin_groups_get
      parameters:
      - description: filter groups by name prefix
        in: query
        name: prefix
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new user group.
      operationId: rest_service_fecru_admin_groups_post
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/groups/{name}:
    delete:
      description: Deletes a group by name
      operationId: rest_service_fecru_admin_groups_name_delete
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieve a group by name.
      operationId: rest_service_fecru_admin_groups_name_get
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing group.
      operationId: rest_service_fecru_admin_groups_name_put
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/groups/{name}/users:
    delete:
      description: Removes user from group
      operationId: rest_service_fecru_admin_groups_name_users_delete
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Lists group's user names
      operationId: list_group_users
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Adds user to group
      operationId: rest_service_fecru_admin_groups_name_users_put
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/permission-schemes:
    get:
      description: Retrieve a page of permission schemes.
      operationId: rest_service_fecru_admin_permission_schemes_get
      parameters:
      - description: "permission scheme name part filter, case insensitive, optional"
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new permission scheme. The new permission scheme is blank
        or can be created from another existing permission scheme.
      operationId: rest_service_fecru_admin_permission_schemes_post
      parameters:
      - description: "if set, the new permission scheme will be a copy of permissionSchemeName"
        in: query
        name: copyFrom
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/permission-schemes/{name}:
    delete:
      description: Deletes a permission scheme by name
      operationId: rest_service_fecru_admin_permission_schemes_name_delete
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieve a permission scheme by name
      operationId: rest_service_fecru_admin_permission_schemes_name_get
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing permission scheme.
      operationId: rest_service_fecru_admin_permission_schemes_name_put
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/permission-schemes/{name}/anonymous-users:
    delete:
      description: "Removes anonymous-user permission [action name] from given permission\
        \ scheme"
      operationId: delete_permission_scheme_anonymous_users
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieve a page of anonymous users permissions [action name] for\
        \ given permission scheme."
      operationId: list_anonymous_users_principal_association
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: |-
        Add anonymous-user permission [action name] to given permission scheme
         List of available action names:
      operationId: add_permission_scheme_anonymous_users
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/permission-schemes/{name}/groups:
    delete:
      description: "Removes group permission [group name, action name] from given\
        \ permission scheme"
      operationId: delete_permission_scheme_group
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieve a page of group permissions [group name, action name]\
        \ for given permission scheme."
      operationId: list_group_principal_association
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: group name
        in: query
        name: name
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: |-
        Add group permission [group name, action name] to given permission scheme
         List of available action names:
      operationId: add_permission_scheme_group
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/permission-schemes/{name}/logged-in-users:
    delete:
      description: "Removes logged-in-users permission [action name] from given permission\
        \ scheme"
      operationId: delete_permission_scheme_logged_users
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieve a page of logged in users permissions [action name] for\
        \ given permission scheme."
      operationId: list_logged_users_principal_association
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: |-
        Add logged-in-users permission [action name] to given permission scheme
         List of available action names:
      operationId: add_permission_scheme_logged_users
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/permission-schemes/{name}/projects:
    get:
      description: Retrieve a page of projects for given permission scheme.
      operationId: list_projects
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/permission-schemes/{name}/review-roles:
    delete:
      description: "Removes review-role permission [role name, action name] from given\
        \ permission scheme"
      operationId: delete_permission_scheme_role
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieve a page of review-roles permissions [role name, action\
        \ name] for given permission scheme."
      operationId: list_roles_principal_association
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: role name
        in: query
        name: name
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "Add review-role permission [role name, action name] to given permission\
        \ scheme\n List of available action names:\n \n\n List of available role names:"
      operationId: add_permission_scheme_review_role
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/permission-schemes/{name}/users:
    delete:
      description: "Removes user permission [username, action name] from given permission\
        \ scheme"
      operationId: delete_permission_scheme_user
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieve a page of user permissions [username, action name] for\
        \ given permission scheme."
      operationId: list_user_principal_association
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: permission scheme name
        in: query
        name: name
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: |-
        Add user permission [username, action name] to given permission scheme
         List of available action names:
      operationId: add_permission_scheme_user
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/projects:
    get:
      description: Retrieve a page of projects.
      operationId: rest_service_fecru_admin_projects_get
      parameters:
      - description: "project's name part filter, optional"
        in: query
        name: name
        schema:
          type: string
      - description: "project's key part filter, optional"
        in: query
        name: key
        schema:
          type: string
      - description: "project's default repository key part filter, optional"
        in: query
        name: defaultRepositoryName
        schema:
          type: string
      - description: "project's permission scheme pare name filter, optional"
        in: query
        name: permissionSchemeName
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new project.
      operationId: rest_service_fecru_admin_projects_post
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/projects/{key}:
    delete:
      description: "Deletes a project by key (including all reviews in this project).\n\
        \ Use \n to move reviews to another project."
      operationId: rest_service_fecru_admin_projects_key_delete
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      - description: if true deletes reviews in project
        in: query
        name: deleteProjectReviews
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieve a project by key.
      operationId: rest_service_fecru_admin_projects_key_get
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing project.
      operationId: rest_service_fecru_admin_projects_key_put
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/projects/{key}/allowed-reviewer-groups:
    delete:
      description: Delete group from project's allowed reviewer group list
      operationId: delete_allowed_reviewer_group
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves project's allowed reviewer groups
      operationId: allowed_reviewer_groups
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Add group to project's allowed reviewer group list
      operationId: add_allowed_reviewer_group
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/projects/{key}/allowed-reviewer-users:
    delete:
      description: Remove user from project's allowed reviewer users list
      operationId: delete_allowed_reviewer_user
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves project's allowed reviewer users
      operationId: allowed_reviewer_users
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Add user to project's allowed reviewer users list
      operationId: add_allowed_reviewer_user
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/projects/{key}/default-reviewer-groups:
    delete:
      description: Delete group from project's default reviewer group list
      operationId: delete_default_reviewer_group
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves project's default reviewer groups
      operationId: default_reviewer_groups
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Add group to project's default reviewer group list
      operationId: add_default_reviewer_group
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/projects/{key}/default-reviewer-users:
    delete:
      description: Remove user from project's default reviewer users list
      operationId: delete_default_reviewer_user
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves project's default reviewer users
      operationId: list_default_reviewer_users
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Add user to project's default reviewer users list
      operationId: add_default_reviewer_user
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/projects/{sourceProjectKey}/move-reviews/{destinationProjectKey}:
    put:
      description: Move reviews and snippets from source project to destination project
      operationId: move_all_reviews
      parameters:
      - description: project key of reviews and snippets source project
        in: path
        name: sourceProjectKey
        required: true
        schema:
          type: string
      - description: project key of reviews and snippets destination project
        in: path
        name: destinationProjectKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories:
    get:
      description: Retrieve a page of repositories. Repository properties with default
        values may not be returned.
      operationId: rest_service_fecru_admin_repositories_get
      parameters:
      - description: "filter repositories by repository type: svn, git, hg, cvs, p4,\
          \ ..."
        in: query
        name: type
        schema:
          type: string
      - description: filter repositories by enabled flag
        in: query
        name: enabled
        schema:
          type: boolean
      - description: filter repositories by started flag
        in: query
        name: started
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a repository.
      operationId: rest_service_fecru_admin_repositories_post
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1:
    post:
      description: Adds repository
      operationId: add_repository
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/:
    delete:
      description: |-
        Deletes repository.
         Warning: you can not undo this operation
      operationId: delete_repository
      parameters:
      - description: the key of the repository to delete
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/disable:
    post:
      description: Disables repository.
      operationId: disable_repository
      parameters:
      - description: the key of the repository to disable
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/enable:
    post:
      description: Enables repository.
      operationId: enable_repository
      parameters:
      - description: the key of the repository to enable
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-discussions:
    post:
      description: |-
        Rebuilds the changeset discussion index for the specified repository. The index is used to display changeset
         discussions in activity streams.
      operationId: reindex_changeset_comments
      parameters:
      - description: the key of the repository to perform the operation for
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-linecount:
    post:
      description: |-
        Re-indexes the linecount data used to generate the LOC graphs. The linecount data will be recalculated in daily
         buckets based on the server timezone.
      operationId: rest_service_fecru_admin_repositories_v1_repository_reindex_linecount_post
      parameters:
      - description: the key of the repository to re-index
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-reviews:
    post:
      description: Re-indexes all the Crucible revision data (which revisions have
        been reviewed)
      operationId: do_review_revision_reindex
      parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: if true will wait for the indexing to finish before returning
        in: query
        name: synchronous
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-search:
    post:
      description: |-
        Rebuilds the search index data for the given repository. This will rebuild the data used to search by path,
         commit message and comitter, also used for activity streams and JIRA integration.
      operationId: rebuild_search_index
      parameters:
      - description: the key of the repository to re-index.
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-source:
    post:
      description: |-
        Deletes the existing cache and re-indexes the repository from scratch.
         For large or slow repositories this may take some time, during which some functionality will be unavailable.
         This action will also restart the repository.
      operationId: rest_service_fecru_admin_repositories_v1_repository_reindex_source_post
      parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: |-
          if true and the repository is a dvcs repository (git or mercurial) it will re-clone the repository
           before re-indexing
        in: query
        name: clone
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/rescan-metadata:
    post:
      description: Re-scans the repository metadata for SVN and Perforce repositories.
        Only valid for Perforce and SVN repositories.
      operationId: rest_service_fecru_admin_repositories_v1_repository_rescan_metadata_post
      parameters:
      - description: the key of the repository to re-scan
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: the revision number to start at
        in: query
        name: from
        schema:
          format: int64
          type: integer
      - description: the revision number to end at
        in: query
        name: to
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/scan:
    post:
      description: |-
        Runs an incremental repository index now.  This is the same operation as triggered by scheduled indexing.
         Can be called using the REST Api Token to authorize.
      operationId: scan
      parameters:
      - description: the key of the repository to run scan for
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: if true will wait for the indexing to finish before returning
        in: query
        name: synchronous
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/scan-cvs:
    post:
      description: Scans the whole CVS repository for any changes since the last scan.
        Only valid for CVS repositories.
      operationId: scan_cvs
      parameters:
      - description: the key of the repository to scan
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/start:
    post:
      description: Starts the repository.
      operationId: start_repository
      parameters:
      - description: the key of the repository to start
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories-v1/{repository}/stop:
    post:
      description: Stops the repository. Does not wait for the repository to stop
        before returning.
      operationId: stop_repository
      parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}:
    delete:
      description: Deletes a repository by key
      operationId: rest_service_fecru_admin_repositories_repository_delete
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieve a repository by key. Repository properties with default
        values may not be returned.
      operationId: rest_service_fecru_admin_repositories_repository_get
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing repository.
      operationId: rest_service_fecru_admin_repositories_repository_put
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/full-incremental-index:
    put:
      description: |-
        Runs an full incremental repository index.
         For CVS: scans the whole CVS repository for any changes since the last scan.
         For other repository types will trigger an incremental index.
      operationId: full_incremental_index
      parameters:
      - description: the key of the repository to scan
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/incremental-index:
    put:
      description: |-
        Runs an incremental repository index.  This is the same operation as triggered by scheduled indexing.
         Can be called using the REST API Token to authorize.
      operationId: incremental_index
      parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: if true will wait for the indexing to finish before returning
        in: query
        name: wait
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/permissions:
    get:
      description: Retrieve repository permissions properties.
      operationId: permissions
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: |-
        Updates repository permissions properties.

         Valid permission settings: any combination of useDefaults, allowAnonymous, allowLoggedIn.
      operationId: update_permissions
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/permissions/groups:
    delete:
      description: Delete group from repository allowed groups
      operationId: remove_group_to_permissions
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: |-
        Note: use /rest-service-fecru/admin/repository-permissions/ endpoint for full repository permission administration functionality
         Lists groups allowed to access repository.
      operationId: permissions_groups
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: |-
        Note: use /rest-service-fecru/admin/repository-permissions/ endpoint for full repository permission administration functionality
         Adds group to repository allowed groups
      operationId: add_group_to_permissions
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/reindex-changeset-discussion:
    put:
      description: |-
        Rebuilds the changeset discussion index for the specified repository. The index is used to display changeset
         discussions in activity streams.
      operationId: reindex_changeset_discussion
      parameters:
      - description: the key of the repository to perform the operation for
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/reindex-linecount:
    put:
      description: |-
        Re-indexes the linecount data used to generate the LOC graphs. The linecount data will be recalculated in daily
         buckets based on the server timezone.
      operationId: rest_service_fecru_admin_repositories_repository_reindex_linecount_put
      parameters:
      - description: the key of the repository to re-index
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/reindex-reviews:
    put:
      description: Re-indexes all the Crucible revision data (which revisions have
        been reviewed)
      operationId: reindex_reviews
      parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/reindex-search:
    put:
      description: |-
        Rebuilds the search index data for the given repository. This will rebuild the data used to search by path,
         commit message and committer, also used for activity streams and JIRA integration.
      operationId: reindex_search
      parameters:
      - description: the key of the repository to re-index.
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/reindex-source:
    put:
      description: |-
        Deletes the existing cache and re-indexes the repository from scratch.
         For large or slow repositories this may take some time, during which some functionality will be unavailable.
         This action will also restart the repository.
      operationId: rest_service_fecru_admin_repositories_repository_reindex_source_put
      parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: if true and the repository is a dvcs repository (git or mercurial)
          it will re-clone the repository before re-indexing
        in: query
        name: clone
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/rescan-metadata:
    put:
      description: Re-scans the repository metadata. Only valid for Perforce and SVN
        repositories.
      operationId: rest_service_fecru_admin_repositories_repository_rescan_metadata_put
      parameters:
      - description: the key of the repository to re-scan
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: the revision number to start at
        in: query
        name: from
        schema:
          type: string
      - description: the revision number to end at
        in: query
        name: to
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/start:
    put:
      description: Starts repository. Does not wait for the repository to start before
        returning.
      operationId: start
      parameters:
      - description: the key of the repository to start
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/stop:
    put:
      description: Stops repository. Does not wait for the repository to stop before
        returning.
      operationId: stop
      parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/{repository}/updates:
    get:
      description: Retrieves repository updates properties.
      operationId: repository_updates
      parameters:
      - description: repository key
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      operationId: update_repository_updates
      parameters:
      - description: repository key
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/repositories/~defaults/permissions:
    get:
      description: Retrieve default repository permissions properties.
      operationId: default_permissions
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: |-
        Updates default repository permissions properties.

         Valid permission settings: any combination of allowAnonymous, allowLoggedIn
      operationId: update_default_permissions
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/users/:
    get:
      description: Retrieve a page of users.
      operationId: rest_service_fecru_admin_users_get
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new user. Tries to add the user to fisheye-users and
        crucible-users groups if those exist.
      operationId: rest_service_fecru_admin_users_post
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/users/{name}:
    delete:
      description: Deletes a user by name
      operationId: rest_service_fecru_admin_users_name_delete
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieve a user by name.
      operationId: rest_service_fecru_admin_users_name_get
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing user.
      operationId: rest_service_fecru_admin_users_name_put
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/admin/users/{name}/groups:
    delete:
      description: Removes user from group
      operationId: rest_service_fecru_admin_users_name_groups_delete
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Lists user's group names
      operationId: list_user_groups
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Adds user to group
      operationId: rest_service_fecru_admin_users_name_groups_put
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/auth/login:
    post:
      description: Get the user authentication token.
      operationId: login
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/indexing-status-v1/status/{repository}:
    get:
      description: Returns indexing status of given repository.
      operationId: rest_service_fecru_indexing_status_v1_status_repository_get
      parameters:
      - description: the key of the repository to get status of
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1:
    get:
      description: Get a list of recently visited items for the currently logged in
        user.
      operationId: get_recent
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/detailed:
    get:
      description: "Get a list of recently visisted items for the currently logged\
        \ in user, including the detailed entities."
      operationId: get_recent_detailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/projects:
    get:
      description: Get a list of recently visited projects for the currently logged
        in user.
      operationId: get_recent_projects
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/projects/detailed:
    get:
      description: "Get a list of recently visited projects for the currently logged\
        \ in Project, including the detailed entities."
      operationId: get_recent_projects_detailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/repositories:
    get:
      description: Get a list of recently visited repositories for the currently logged
        in user.
      operationId: get_recent_repositories
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/repositories/detailed:
    get:
      description: "Get a list of recently visisted repositories for the currently\
        \ logged in user, including the detailed entities."
      operationId: get_recent_repositories_detailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/reviews:
    get:
      description: Get a list of recently visited reviews for the currently logged
        in user.
      operationId: get_recent_reviews
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/reviews/detailed:
    get:
      description: "Get a list of recently visited reviews for the currently logged\
        \ in user, including the detailed entities."
      operationId: get_recent_reviews_detailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/snippets:
    get:
      description: Get a list of recently visited snippets for the currently logged
        in user.
      operationId: get_recent_snippets
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/snippets/detailed:
    get:
      description: "Get a list of recently visited snippets for the currently logged\
        \ in user, including the detailed entities."
      operationId: get_recent_snippets_detailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/users:
    get:
      description: Get a list of recently visited users for the currently logged in
        user.
      operationId: get_recent_users
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/recently-visited-v1/users/detailed:
    get:
      description: "Get a list of recently visited users for the currently logged\
        \ in user, including the detailed entities."
      operationId: get_recent_users_detailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/server-v1:
    get:
      description: Provides general information about the server's configuration.
      operationId: get_info
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/share-content-v1/share:
    post:
      operationId: do_share_content
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/user-prefs-v1:
    post:
      description: |-
        Using POST method to set a user preference.
         If repo is not set, the preference will be recognised as a global preference.
      operationId: set_pref
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/user-prefs-v1/{property}:
    get:
      description: Getting user's global preference
      operationId: get_global_pref
      parameters:
      - description: the property(preference) name
        in: path
        name: property
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rest-service-fecru/user-prefs-v1/{repository}/{property}:
    get:
      description: Getting user's preference related to a certain repository
      operationId: get_repo_pref
      parameters:
      - description: the property(preference) name
        in: path
        name: property
        required: true
        schema:
          type: string
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas: {}
x-original-swagger-version: "2.0"
