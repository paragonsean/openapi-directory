openapi: 3.0.1
info:
  contact: {}
  title: Fisheye Crucible
  version: 1.0.0
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://twitter.com/Atlassian/profile_image?size=original
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.18
    format: wadl
    url: https://docs.atlassian.com/fisheye-crucible/latest_backup/wadl/fecru.wadl
    version: "1.0"
  x-providerName: fecru.local
servers:
- url: http://fecru.local/context/
paths:
  /rest-service-fecru/admin/groups/:
    get:
      description: Retrieve a page of groups.
      parameters:
      - description: filter groups by name prefix
        in: query
        name: prefix
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    post:
      description: Creates a new user group.
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/groups/{name}:
    delete:
      description: Deletes a group by name
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieve a group by name.
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Updates an existing group.
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/groups/{name}/users:
    delete:
      description: Removes user from group
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Lists group's user names
      operationId: listGroupUsers
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Adds user to group
      parameters:
      - description: group name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/permission-schemes:
    get:
      description: Retrieve a page of permission schemes.
      parameters:
      - description: "permission scheme name part filter, case insensitive, optional"
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    post:
      description: Creates a new permission scheme. The new permission scheme is blank
        or can be created from another existing permission scheme.
      parameters:
      - description: "if set, the new permission scheme will be a copy of permissionSchemeName"
        in: query
        name: copyFrom
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/permission-schemes/{name}:
    delete:
      description: Deletes a permission scheme by name
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieve a permission scheme by name
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Updates an existing permission scheme.
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/permission-schemes/{name}/anonymous-users:
    delete:
      description: "Removes anonymous-user permission [action name] from given permission\
        \ scheme"
      operationId: deletePermissionSchemeAnonymousUsers
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: "Retrieve a page of anonymous users permissions [action name] for\
        \ given permission scheme."
      operationId: listAnonymousUsersPrincipalAssociation
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: |-
        Add anonymous-user permission [action name] to given permission scheme
         List of available action names:
      operationId: addPermissionSchemeAnonymousUsers
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/permission-schemes/{name}/groups:
    delete:
      description: "Removes group permission [group name, action name] from given\
        \ permission scheme"
      operationId: deletePermissionSchemeGroup
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: "Retrieve a page of group permissions [group name, action name]\
        \ for given permission scheme."
      operationId: listGroupPrincipalAssociation
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: group name
        in: query
        name: name
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: |-
        Add group permission [group name, action name] to given permission scheme
         List of available action names:
      operationId: addPermissionSchemeGroup
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/permission-schemes/{name}/logged-in-users:
    delete:
      description: "Removes logged-in-users permission [action name] from given permission\
        \ scheme"
      operationId: deletePermissionSchemeLoggedUsers
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: "Retrieve a page of logged in users permissions [action name] for\
        \ given permission scheme."
      operationId: listLoggedUsersPrincipalAssociation
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: |-
        Add logged-in-users permission [action name] to given permission scheme
         List of available action names:
      operationId: addPermissionSchemeLoggedUsers
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/permission-schemes/{name}/projects:
    get:
      description: Retrieve a page of projects for given permission scheme.
      operationId: listProjects
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/permission-schemes/{name}/review-roles:
    delete:
      description: "Removes review-role permission [role name, action name] from given\
        \ permission scheme"
      operationId: deletePermissionSchemeRole
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: "Retrieve a page of review-roles permissions [role name, action\
        \ name] for given permission scheme."
      operationId: listRolesPrincipalAssociation
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: role name
        in: query
        name: name
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: "Add review-role permission [role name, action name] to given permission\
        \ scheme\n List of available action names:\n \n\n List of available role names:"
      operationId: addPermissionSchemeReviewRole
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/permission-schemes/{name}/users:
    delete:
      description: "Removes user permission [username, action name] from given permission\
        \ scheme"
      operationId: deletePermissionSchemeUser
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: "Retrieve a page of user permissions [username, action name] for\
        \ given permission scheme."
      operationId: listUserPrincipalAssociation
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: permission scheme name
        in: query
        name: name
        schema:
          type: string
      - description: action name
        in: query
        name: action
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: |-
        Add user permission [username, action name] to given permission scheme
         List of available action names:
      operationId: addPermissionSchemeUser
      parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/projects:
    get:
      description: Retrieve a page of projects.
      parameters:
      - description: "project's name part filter, optional"
        in: query
        name: name
        schema:
          type: string
      - description: "project's key part filter, optional"
        in: query
        name: key
        schema:
          type: string
      - description: "project's default repository key part filter, optional"
        in: query
        name: defaultRepositoryName
        schema:
          type: string
      - description: "project's permission scheme pare name filter, optional"
        in: query
        name: permissionSchemeName
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    post:
      description: Creates a new project.
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/projects/{key}:
    delete:
      description: "Deletes a project by key (including all reviews in this project).\n\
        \ Use \n to move reviews to another project."
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      - description: if true deletes reviews in project
        in: query
        name: deleteProjectReviews
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieve a project by key.
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Updates an existing project.
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/projects/{key}/allowed-reviewer-groups:
    delete:
      description: Delete group from project's allowed reviewer group list
      operationId: deleteAllowedReviewerGroup
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieves project's allowed reviewer groups
      operationId: allowedReviewerGroups
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Add group to project's allowed reviewer group list
      operationId: addAllowedReviewerGroup
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/projects/{key}/allowed-reviewer-users:
    delete:
      description: Remove user from project's allowed reviewer users list
      operationId: deleteAllowedReviewerUser
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieves project's allowed reviewer users
      operationId: allowedReviewerUsers
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Add user to project's allowed reviewer users list
      operationId: addAllowedReviewerUser
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/projects/{key}/default-reviewer-groups:
    delete:
      description: Delete group from project's default reviewer group list
      operationId: deleteDefaultReviewerGroup
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieves project's default reviewer groups
      operationId: defaultReviewerGroups
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Add group to project's default reviewer group list
      operationId: addDefaultReviewerGroup
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/projects/{key}/default-reviewer-users:
    delete:
      description: Remove user from project's default reviewer users list
      operationId: deleteDefaultReviewerUser
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieves project's default reviewer users
      operationId: listDefaultReviewerUsers
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Add user to project's default reviewer users list
      operationId: addDefaultReviewerUser
      parameters:
      - description: project key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/projects/{sourceProjectKey}/move-reviews/{destinationProjectKey}:
    put:
      description: Move reviews and snippets from source project to destination project
      operationId: moveAllReviews
      parameters:
      - description: project key of reviews and snippets source project
        in: path
        name: sourceProjectKey
        required: true
        schema:
          type: string
      - description: project key of reviews and snippets destination project
        in: path
        name: destinationProjectKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories:
    get:
      description: Retrieve a page of repositories. Repository properties with default
        values may not be returned.
      parameters:
      - description: "filter repositories by repository type: svn, git, hg, cvs, p4,\
          \ ..."
        in: query
        name: type
        schema:
          type: string
      - description: filter repositories by enabled flag
        in: query
        name: enabled
        schema:
          type: boolean
      - description: filter repositories by started flag
        in: query
        name: started
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    post:
      description: Creates a repository.
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1:
    post:
      description: Adds repository
      operationId: addRepository
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}:
    get:
      description: Returns information about the status of the repository and the
        current indexing status
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/:
    delete:
      description: |-
        Deletes repository.
         Warning: you can not undo this operation
      operationId: deleteRepository
      parameters:
      - description: the key of the repository to delete
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/disable:
    post:
      description: Disables repository.
      operationId: disableRepository
      parameters:
      - description: the key of the repository to disable
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/enable:
    post:
      description: Enables repository.
      operationId: enableRepository
      parameters:
      - description: the key of the repository to enable
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-discussions:
    post:
      description: |-
        Rebuilds the changeset discussion index for the specified repository. The index is used to display changeset
         discussions in activity streams.
      operationId: reindexChangesetComments
      parameters:
      - description: the key of the repository to perform the operation for
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-linecount:
    post:
      description: |-
        Re-indexes the linecount data used to generate the LOC graphs. The linecount data will be recalculated in daily
         buckets based on the server timezone.
      parameters:
      - description: the key of the repository to re-index
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-reviews:
    post:
      description: Re-indexes all the Crucible revision data (which revisions have
        been reviewed)
      operationId: doReviewRevisionReindex
      parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: if true will wait for the indexing to finish before returning
        in: query
        name: synchronous
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-search:
    post:
      description: |-
        Rebuilds the search index data for the given repository. This will rebuild the data used to search by path,
         commit message and comitter, also used for activity streams and JIRA integration.
      operationId: rebuildSearchIndex
      parameters:
      - description: the key of the repository to re-index.
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/reindex-source:
    post:
      description: |-
        Deletes the existing cache and re-indexes the repository from scratch.
         For large or slow repositories this may take some time, during which some functionality will be unavailable.
         This action will also restart the repository.
      parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: |-
          if true and the repository is a dvcs repository (git or mercurial) it will re-clone the repository
           before re-indexing
        in: query
        name: clone
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/rescan-metadata:
    post:
      description: Re-scans the repository metadata for SVN and Perforce repositories.
        Only valid for Perforce and SVN repositories.
      parameters:
      - description: the key of the repository to re-scan
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: the revision number to start at
        in: query
        name: from
        schema:
          format: int64
          type: integer
      - description: the revision number to end at
        in: query
        name: to
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/scan:
    post:
      description: |-
        Runs an incremental repository index now.  This is the same operation as triggered by scheduled indexing.
         Can be called using the REST Api Token to authorize.
      operationId: scan
      parameters:
      - description: the key of the repository to run scan for
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: if true will wait for the indexing to finish before returning
        in: query
        name: synchronous
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/scan-cvs:
    post:
      description: Scans the whole CVS repository for any changes since the last scan.
        Only valid for CVS repositories.
      operationId: scanCvs
      parameters:
      - description: the key of the repository to scan
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/start:
    post:
      description: Starts the repository.
      operationId: startRepository
      parameters:
      - description: the key of the repository to start
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories-v1/{repository}/stop:
    post:
      description: Stops the repository. Does not wait for the repository to stop
        before returning.
      operationId: stopRepository
      parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}:
    delete:
      description: Deletes a repository by key
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieve a repository by key. Repository properties with default
        values may not be returned.
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Updates an existing repository.
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/full-incremental-index:
    put:
      description: |-
        Runs an full incremental repository index.
         For CVS: scans the whole CVS repository for any changes since the last scan.
         For other repository types will trigger an incremental index.
      operationId: fullIncrementalIndex
      parameters:
      - description: the key of the repository to scan
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/incremental-index:
    put:
      description: |-
        Runs an incremental repository index.  This is the same operation as triggered by scheduled indexing.
         Can be called using the REST API Token to authorize.
      operationId: incrementalIndex
      parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: if true will wait for the indexing to finish before returning
        in: query
        name: wait
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/permissions:
    get:
      description: Retrieve repository permissions properties.
      operationId: permissions
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: |-
        Updates repository permissions properties.

         Valid permission settings: any combination of useDefaults, allowAnonymous, allowLoggedIn.
      operationId: updatePermissions
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/permissions/groups:
    delete:
      description: Delete group from repository allowed groups
      operationId: removeGroupToPermissions
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: |-
        Note: use /rest-service-fecru/admin/repository-permissions/ endpoint for full repository permission administration functionality
         Lists groups allowed to access repository.
      operationId: permissionsGroups
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: |-
        Note: use /rest-service-fecru/admin/repository-permissions/ endpoint for full repository permission administration functionality
         Adds group to repository allowed groups
      operationId: addGroupToPermissions
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/reindex-changeset-discussion:
    put:
      description: |-
        Rebuilds the changeset discussion index for the specified repository. The index is used to display changeset
         discussions in activity streams.
      operationId: reindexChangesetDiscussion
      parameters:
      - description: the key of the repository to perform the operation for
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/reindex-linecount:
    put:
      description: |-
        Re-indexes the linecount data used to generate the LOC graphs. The linecount data will be recalculated in daily
         buckets based on the server timezone.
      parameters:
      - description: the key of the repository to re-index
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/reindex-reviews:
    put:
      description: Re-indexes all the Crucible revision data (which revisions have
        been reviewed)
      operationId: reindexReviews
      parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/reindex-search:
    put:
      description: |-
        Rebuilds the search index data for the given repository. This will rebuild the data used to search by path,
         commit message and committer, also used for activity streams and JIRA integration.
      operationId: reindexSearch
      parameters:
      - description: the key of the repository to re-index.
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/reindex-source:
    put:
      description: |-
        Deletes the existing cache and re-indexes the repository from scratch.
         For large or slow repositories this may take some time, during which some functionality will be unavailable.
         This action will also restart the repository.
      parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: if true and the repository is a dvcs repository (git or mercurial)
          it will re-clone the repository before re-indexing
        in: query
        name: clone
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/rescan-metadata:
    put:
      description: Re-scans the repository metadata. Only valid for Perforce and SVN
        repositories.
      parameters:
      - description: the key of the repository to re-scan
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: the revision number to start at
        in: query
        name: from
        schema:
          type: string
      - description: the revision number to end at
        in: query
        name: to
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/start:
    put:
      description: Starts repository. Does not wait for the repository to start before
        returning.
      operationId: start
      parameters:
      - description: the key of the repository to start
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/stop:
    put:
      description: Stops repository. Does not wait for the repository to stop before
        returning.
      operationId: stop
      parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/{repository}/updates:
    get:
      description: Retrieves repository updates properties.
      operationId: repositoryUpdates
      parameters:
      - description: repository key
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      operationId: updateRepositoryUpdates
      parameters:
      - description: repository key
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/repositories/~defaults/permissions:
    get:
      description: Retrieve default repository permissions properties.
      operationId: defaultPermissions
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: |-
        Updates default repository permissions properties.

         Valid permission settings: any combination of allowAnonymous, allowLoggedIn
      operationId: updateDefaultPermissions
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/users/:
    get:
      description: Retrieve a page of users.
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    post:
      description: Creates a new user. Tries to add the user to fisheye-users and
        crucible-users groups if those exist.
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/users/{name}:
    delete:
      description: Deletes a user by name
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Retrieve a user by name.
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Updates an existing user.
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/admin/users/{name}/groups:
    delete:
      description: Removes user from group
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    get:
      description: Lists user's group names
      operationId: listUserGroups
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
    put:
      description: Adds user to group
      parameters:
      - description: user name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/auth/login:
    post:
      description: Get the user authentication token.
      operationId: login
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/indexing-status-v1/status/{repository}:
    get:
      description: Returns indexing status of given repository.
      parameters:
      - description: the key of the repository to get status of
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1:
    get:
      description: Get a list of recently visited items for the currently logged in
        user.
      operationId: getRecent
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/detailed:
    get:
      description: "Get a list of recently visisted items for the currently logged\
        \ in user, including the detailed entities."
      operationId: getRecentDetailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/projects:
    get:
      description: Get a list of recently visited projects for the currently logged
        in user.
      operationId: getRecentProjects
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/projects/detailed:
    get:
      description: "Get a list of recently visited projects for the currently logged\
        \ in Project, including the detailed entities."
      operationId: getRecentProjectsDetailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/repositories:
    get:
      description: Get a list of recently visited repositories for the currently logged
        in user.
      operationId: getRecentRepositories
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/repositories/detailed:
    get:
      description: "Get a list of recently visisted repositories for the currently\
        \ logged in user, including the detailed entities."
      operationId: getRecentRepositoriesDetailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/reviews:
    get:
      description: Get a list of recently visited reviews for the currently logged
        in user.
      operationId: getRecentReviews
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/reviews/detailed:
    get:
      description: "Get a list of recently visited reviews for the currently logged\
        \ in user, including the detailed entities."
      operationId: getRecentReviewsDetailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/snippets:
    get:
      description: Get a list of recently visited snippets for the currently logged
        in user.
      operationId: getRecentSnippets
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/snippets/detailed:
    get:
      description: "Get a list of recently visited snippets for the currently logged\
        \ in user, including the detailed entities."
      operationId: getRecentSnippetsDetailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/users:
    get:
      description: Get a list of recently visited users for the currently logged in
        user.
      operationId: getRecentUsers
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/recently-visited-v1/users/detailed:
    get:
      description: "Get a list of recently visited users for the currently logged\
        \ in user, including the detailed entities."
      operationId: getRecentUsersDetailed
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/server-v1:
    get:
      description: Provides general information about the server's configuration.
      operationId: getInfo
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/share-content-v1/share:
    post:
      operationId: doShareContent
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/user-prefs-v1:
    post:
      description: |-
        Using POST method to set a user preference.
         If repo is not set, the preference will be recognised as a global preference.
      operationId: setPref
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/user-prefs-v1/{property}:
    get:
      description: Getting user's global preference
      operationId: getGlobalPref
      parameters:
      - description: the property(preference) name
        in: path
        name: property
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fecru/user-prefs-v1/{repository}/{property}:
    get:
      description: Getting user's preference related to a certain repository
      operationId: getRepoPref
      parameters:
      - description: the property(preference) name
        in: path
        name: property
        required: true
        schema:
          type: string
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
components:
  schemas: {}
x-original-swagger-version: "2.0"

