/**
 * Nexmo Application API
 * <div class=\"Vlt-callout Vlt-callout--critical\"> <i></i> <div class=\"Vlt-callout__content\">   <h4>Applications V1 is deprecated</h4>   This version of the API has been deprecated. Please use <a href=\"/api/application.v2\">version 2</a> going forwards </div> </div> A Nexmo application contains the security and configuration information you need to connect to Nexmo endpoints and easily use our products.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Application from './Application';

/**
 * The ApplicationsBaseEmbedded model module.
 * @module model/ApplicationsBaseEmbedded
 * @version 1.0.2
 */
class ApplicationsBaseEmbedded {
    /**
     * Constructs a new <code>ApplicationsBaseEmbedded</code>.
     * @alias module:model/ApplicationsBaseEmbedded
     */
    constructor() { 
        
        ApplicationsBaseEmbedded.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationsBaseEmbedded</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationsBaseEmbedded} obj Optional instance to populate.
     * @return {module:model/ApplicationsBaseEmbedded} The populated <code>ApplicationsBaseEmbedded</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationsBaseEmbedded();

            if (data.hasOwnProperty('applications')) {
                obj['applications'] = ApiClient.convertToType(data['applications'], [Application]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationsBaseEmbedded</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationsBaseEmbedded</code>.
     */
    static validateJSON(data) {
        if (data['applications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['applications'])) {
                throw new Error("Expected the field `applications` to be an array in the JSON data but got " + data['applications']);
            }
            // validate the optional field `applications` (array)
            for (const item of data['applications']) {
                Application.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The collection of your applications. Each object contains information about an an individual application. The public_key is not included in the application information.
 * @member {Array.<module:model/Application>} applications
 */
ApplicationsBaseEmbedded.prototype['applications'] = undefined;






export default ApplicationsBaseEmbedded;

