/**
 * Nexmo Application API
 * <div class=\"Vlt-callout Vlt-callout--critical\"> <i></i> <div class=\"Vlt-callout__content\">   <h4>Applications V1 is deprecated</h4>   This version of the API has been deprecated. Please use <a href=\"/api/application.v2\">version 2</a> going forwards </div> </div> A Nexmo application contains the security and configuration information you need to connect to Nexmo endpoints and easily use our products.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationsBaseEmbedded from './ApplicationsBaseEmbedded';
import Links from './Links';

/**
 * The Applications model module.
 * @module model/Applications
 * @version 1.0.2
 */
class Applications {
    /**
     * Constructs a new <code>Applications</code>.
     * @alias module:model/Applications
     * @param embedded {module:model/ApplicationsBaseEmbedded} 
     * @param links {module:model/Links} 
     * @param count {Number} The number of items associated with your account.
     * @param pageIndex {Number} The offset from the first page.
     * @param pageSize {Number} The number of items returned on each call to this endpoint. The default is 10 records.
     */
    constructor(embedded, links, count, pageIndex, pageSize) { 
        
        Applications.initialize(this, embedded, links, count, pageIndex, pageSize);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, embedded, links, count, pageIndex, pageSize) { 
        obj['_embedded'] = embedded;
        obj['_links'] = links;
        obj['count'] = count;
        obj['page_index'] = pageIndex;
        obj['page_size'] = pageSize;
    }

    /**
     * Constructs a <code>Applications</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Applications} obj Optional instance to populate.
     * @return {module:model/Applications} The populated <code>Applications</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Applications();

            if (data.hasOwnProperty('_embedded')) {
                obj['_embedded'] = ApplicationsBaseEmbedded.constructFromObject(data['_embedded']);
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = Links.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('page_index')) {
                obj['page_index'] = ApiClient.convertToType(data['page_index'], 'Number');
            }
            if (data.hasOwnProperty('page_size')) {
                obj['page_size'] = ApiClient.convertToType(data['page_size'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Applications</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Applications</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Applications.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `_embedded`
        if (data['_embedded']) { // data not null
          ApplicationsBaseEmbedded.validateJSON(data['_embedded']);
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          Links.validateJSON(data['_links']);
        }

        return true;
    }


}

Applications.RequiredProperties = ["_embedded", "_links", "count", "page_index", "page_size"];

/**
 * @member {module:model/ApplicationsBaseEmbedded} _embedded
 */
Applications.prototype['_embedded'] = undefined;

/**
 * @member {module:model/Links} _links
 */
Applications.prototype['_links'] = undefined;

/**
 * The number of items associated with your account.
 * @member {Number} count
 */
Applications.prototype['count'] = undefined;

/**
 * The offset from the first page.
 * @member {Number} page_index
 */
Applications.prototype['page_index'] = undefined;

/**
 * The number of items returned on each call to this endpoint. The default is 10 records.
 * @member {Number} page_size
 */
Applications.prototype['page_size'] = undefined;






export default Applications;

