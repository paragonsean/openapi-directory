/**
 * Nexmo Application API
 * <div class=\"Vlt-callout Vlt-callout--critical\"> <i></i> <div class=\"Vlt-callout__content\">   <h4>Applications V1 is deprecated</h4>   This version of the API has been deprecated. Please use <a href=\"/api/application.v2\">version 2</a> going forwards </div> </div> A Nexmo application contains the security and configuration information you need to connect to Nexmo endpoints and easily use our products.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MessagesWebhooksInner model module.
 * @module model/MessagesWebhooksInner
 * @version 1.0.2
 */
class MessagesWebhooksInner {
    /**
     * Constructs a new <code>MessagesWebhooksInner</code>.
     * @alias module:model/MessagesWebhooksInner
     * @param endpoint {String} `inbound_url`: The URL where inbound messages are delivered. `status_url`: The URL where message status is delivered.
     * @param endpointType {module:model/MessagesWebhooksInner.EndpointTypeEnum} 
     * @param httpMethod {module:model/MessagesWebhooksInner.HttpMethodEnum} The HTTP method used to send data to the `inbound_url` or `status_url`. Default is POST.
     */
    constructor(endpoint, endpointType, httpMethod) { 
        
        MessagesWebhooksInner.initialize(this, endpoint, endpointType, httpMethod);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endpoint, endpointType, httpMethod) { 
        obj['endpoint'] = endpoint;
        obj['endpoint_type'] = endpointType;
        obj['http_method'] = httpMethod;
    }

    /**
     * Constructs a <code>MessagesWebhooksInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessagesWebhooksInner} obj Optional instance to populate.
     * @return {module:model/MessagesWebhooksInner} The populated <code>MessagesWebhooksInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessagesWebhooksInner();

            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('endpoint_type')) {
                obj['endpoint_type'] = ApiClient.convertToType(data['endpoint_type'], 'String');
            }
            if (data.hasOwnProperty('http_method')) {
                obj['http_method'] = ApiClient.convertToType(data['http_method'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessagesWebhooksInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessagesWebhooksInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MessagesWebhooksInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['endpoint_type'] && !(typeof data['endpoint_type'] === 'string' || data['endpoint_type'] instanceof String)) {
            throw new Error("Expected the field `endpoint_type` to be a primitive type in the JSON string but got " + data['endpoint_type']);
        }
        // ensure the json data is a string
        if (data['http_method'] && !(typeof data['http_method'] === 'string' || data['http_method'] instanceof String)) {
            throw new Error("Expected the field `http_method` to be a primitive type in the JSON string but got " + data['http_method']);
        }

        return true;
    }


}

MessagesWebhooksInner.RequiredProperties = ["endpoint", "endpoint_type", "http_method"];

/**
 * `inbound_url`: The URL where inbound messages are delivered. `status_url`: The URL where message status is delivered.
 * @member {String} endpoint
 */
MessagesWebhooksInner.prototype['endpoint'] = undefined;

/**
 * @member {module:model/MessagesWebhooksInner.EndpointTypeEnum} endpoint_type
 */
MessagesWebhooksInner.prototype['endpoint_type'] = undefined;

/**
 * The HTTP method used to send data to the `inbound_url` or `status_url`. Default is POST.
 * @member {module:model/MessagesWebhooksInner.HttpMethodEnum} http_method
 */
MessagesWebhooksInner.prototype['http_method'] = undefined;





/**
 * Allowed values for the <code>endpoint_type</code> property.
 * @enum {String}
 * @readonly
 */
MessagesWebhooksInner['EndpointTypeEnum'] = {

    /**
     * value: "inbound_url"
     * @const
     */
    "inbound_url": "inbound_url",

    /**
     * value: "status_url"
     * @const
     */
    "status_url": "status_url"
};


/**
 * Allowed values for the <code>http_method</code> property.
 * @enum {String}
 * @readonly
 */
MessagesWebhooksInner['HttpMethodEnum'] = {

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET",

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST"
};



export default MessagesWebhooksInner;

