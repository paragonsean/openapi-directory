/*
 * Nexmo Application API
 * <div class=\"Vlt-callout Vlt-callout--critical\"> <i></i> <div class=\"Vlt-callout__content\">   <h4>Applications V1 is deprecated</h4>   This version of the API has been deprecated. Please use <a href=\"/api/application.v2\">version 2</a> going forwards </div> </div> A Nexmo application contains the security and configuration information you need to connect to Nexmo endpoints and easily use our products.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Application;
import org.openapitools.client.model.ApplicationCreated;
import org.openapitools.client.model.Applications;
import org.openapitools.client.model.CreateApplicationRequest;
import org.openapitools.client.model.UpdateApplicationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Create Application
     *
     * You use a &#x60;POST&#x60; request to create a new application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createApplicationTest() throws ApiException {
        CreateApplicationRequest createApplicationRequest = null;
        ApplicationCreated response = api.createApplication(createApplicationRequest);
        // TODO: test validations
    }

    /**
     * Destroy Application
     *
     * You use a &#x60;DELETE&#x60; request to delete a single application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApplicationTest() throws ApiException {
        String appId = null;
        api.deleteApplication(appId);
        // TODO: test validations
    }

    /**
     * Retrieve Application
     *
     * You use a &#x60;GET&#x60; request to retrieve details about a single application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveApplicationTest() throws ApiException {
        String apiKey = null;
        String apiSecret = null;
        String appId = null;
        Application response = api.retrieveApplication(apiKey, apiSecret, appId);
        // TODO: test validations
    }

    /**
     * Retrieve all Applications
     *
     * You use a &#x60;GET&#x60; request to retrieve details of all applications associated with your account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveApplicationsTest() throws ApiException {
        String apiKey = null;
        String apiSecret = null;
        Integer pageSize = null;
        Integer pageIndex = null;
        Applications response = api.retrieveApplications(apiKey, apiSecret, pageSize, pageIndex);
        // TODO: test validations
    }

    /**
     * Update Application
     *
     * You use a &#x60;PUT&#x60; request to update an existing application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateApplicationTest() throws ApiException {
        String appId = null;
        UpdateApplicationRequest updateApplicationRequest = null;
        Application response = api.updateApplication(appId, updateApplicationRequest);
        // TODO: test validations
    }

}
