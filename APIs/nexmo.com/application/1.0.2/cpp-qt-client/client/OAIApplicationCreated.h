/**
 * Nexmo Application API
 * <div class=\"Vlt-callout Vlt-callout--critical\"> <i></i> <div class=\"Vlt-callout__content\">   <h4>Applications V1 is deprecated</h4>   This version of the API has been deprecated. Please use <a href=\"/api/application.v2\">version 2</a> going forwards </div> </div> A Nexmo application contains the security and configuration information you need to connect to Nexmo endpoints and easily use our products.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationCreated.h
 *
 * 
 */

#ifndef OAIApplicationCreated_H
#define OAIApplicationCreated_H

#include <QJsonObject>

#include "OAIKeysWithPrivateKey.h"
#include "OAILinks.h"
#include "OAIMessages.h"
#include "OAIVoice.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILinks;
class OAIKeysWithPrivateKey;
class OAIMessages;
class OAIVoice;

class OAIApplicationCreated : public OAIObject {
public:
    OAIApplicationCreated();
    OAIApplicationCreated(QString json);
    ~OAIApplicationCreated() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILinks getLinks() const;
    void setLinks(const OAILinks &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIKeysWithPrivateKey getKeys() const;
    void setKeys(const OAIKeysWithPrivateKey &keys);
    bool is_keys_Set() const;
    bool is_keys_Valid() const;

    OAIMessages getMessages() const;
    void setMessages(const OAIMessages &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIVoice getVoice() const;
    void setVoice(const OAIVoice &voice);
    bool is_voice_Set() const;
    bool is_voice_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILinks m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIKeysWithPrivateKey m_keys;
    bool m_keys_isSet;
    bool m_keys_isValid;

    OAIMessages m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIVoice m_voice;
    bool m_voice_isSet;
    bool m_voice_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationCreated)

#endif // OAIApplicationCreated_H
