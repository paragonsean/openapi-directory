/**
 * Nexmo Application API
 * <div class=\"Vlt-callout Vlt-callout--critical\"> <i></i> <div class=\"Vlt-callout__content\">   <h4>Applications V1 is deprecated</h4>   This version of the API has been deprecated. Please use <a href=\"/api/application.v2\">version 2</a> going forwards </div> </div> A Nexmo application contains the security and configuration information you need to connect to Nexmo endpoints and easily use our products.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoice::OAIVoice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoice::OAIVoice() {
    this->initializeModel();
}

OAIVoice::~OAIVoice() {}

void OAIVoice::initializeModel() {

    m_webhooks_isSet = false;
    m_webhooks_isValid = false;
}

void OAIVoice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoice::fromJsonObject(QJsonObject json) {

    m_webhooks_isValid = ::OpenAPI::fromJsonValue(m_webhooks, json[QString("webhooks")]);
    m_webhooks_isSet = !json[QString("webhooks")].isNull() && m_webhooks_isValid;
}

QString OAIVoice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoice::asJsonObject() const {
    QJsonObject obj;
    if (m_webhooks.size() > 0) {
        obj.insert(QString("webhooks"), ::OpenAPI::toJsonValue(m_webhooks));
    }
    return obj;
}

QList<OAIVoice_webhooks_inner> OAIVoice::getWebhooks() const {
    return m_webhooks;
}
void OAIVoice::setWebhooks(const QList<OAIVoice_webhooks_inner> &webhooks) {
    m_webhooks = webhooks;
    m_webhooks_isSet = true;
}

bool OAIVoice::is_webhooks_Set() const{
    return m_webhooks_isSet;
}

bool OAIVoice::is_webhooks_Valid() const{
    return m_webhooks_isValid;
}

bool OAIVoice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_webhooks.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
