/*
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetConversations200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConversationApi
 */
@Disabled
public class ConversationApiTest {

    private final ConversationApi api = new ConversationApi();

    /**
     * List Conversations
     *
     * Please note that not all data is available in the list endpoint. Once  you&#39;ve identified the conversation you need to work with, use the  [GET /conversations/:id](#get-conversation) endpoint to fetch all of the conversation details 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConversationsTest() throws ApiException {
        Integer pageSize = null;
        String order = null;
        String cursor = null;
        String dateStart = null;
        String dateEnd = null;
        GetConversations200Response response = api.getConversations(pageSize, order, cursor, dateStart, dateEnd);
        // TODO: test validations
    }

}
