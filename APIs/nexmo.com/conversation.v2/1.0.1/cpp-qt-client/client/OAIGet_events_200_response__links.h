/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_events_200_response__links.h
 *
 * 
 */

#ifndef OAIGet_events_200_response__links_H
#define OAIGet_events_200_response__links_H

#include <QJsonObject>

#include "OAIGet_events_200_response__links_first.h"
#include "OAIGet_events_200_response__links_next.h"
#include "OAIGet_events_200_response__links_prev.h"
#include "OAIGet_events_200_response__links_self.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGet_events_200_response__links_first;
class OAIGet_events_200_response__links_next;
class OAIGet_events_200_response__links_prev;
class OAIGet_events_200_response__links_self;

class OAIGet_events_200_response__links : public OAIObject {
public:
    OAIGet_events_200_response__links();
    OAIGet_events_200_response__links(QString json);
    ~OAIGet_events_200_response__links() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGet_events_200_response__links_first getFirst() const;
    void setFirst(const OAIGet_events_200_response__links_first &first);
    bool is_first_Set() const;
    bool is_first_Valid() const;

    OAIGet_events_200_response__links_next getNext() const;
    void setNext(const OAIGet_events_200_response__links_next &next);
    bool is_next_Set() const;
    bool is_next_Valid() const;

    OAIGet_events_200_response__links_prev getPrev() const;
    void setPrev(const OAIGet_events_200_response__links_prev &prev);
    bool is_prev_Set() const;
    bool is_prev_Valid() const;

    OAIGet_events_200_response__links_self getSelf() const;
    void setSelf(const OAIGet_events_200_response__links_self &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGet_events_200_response__links_first m_first;
    bool m_first_isSet;
    bool m_first_isValid;

    OAIGet_events_200_response__links_next m_next;
    bool m_next_isSet;
    bool m_next_isValid;

    OAIGet_events_200_response__links_prev m_prev;
    bool m_prev_isSet;
    bool m_prev_isValid;

    OAIGet_events_200_response__links_self m_self;
    bool m_self_isSet;
    bool m_self_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_events_200_response__links)

#endif // OAIGet_events_200_response__links_H
