/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMember_allOf_initiator_invited.h
 *
 * 
 */

#ifndef OAIMember_allOf_initiator_invited_H
#define OAIMember_allOf_initiator_invited_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMember_allOf_initiator_invited : public OAIObject {
public:
    OAIMember_allOf_initiator_invited();
    OAIMember_allOf_initiator_invited(QString json);
    ~OAIMember_allOf_initiator_invited() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsSystem() const;
    void setIsSystem(const bool &is_system);
    bool is_is_system_Set() const;
    bool is_is_system_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_system;
    bool m_is_system_isSet;
    bool m_is_system_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMember_allOf_initiator_invited)

#endif // OAIMember_allOf_initiator_invited_H
