/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMember.h
 *
 * 
 */

#ifndef OAIMember_H
#define OAIMember_H

#include <QJsonObject>

#include "OAIMember_allOf_channel.h"
#include "OAIMember_allOf_initiator.h"
#include "OAIMember_allOf_media.h"
#include "OAIMember_allOf_timestamp.h"
#include "OAIMember_list__links.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMember_list__links;
class OAIMember_allOf_channel;
class OAIMember_allOf_initiator;
class OAIMember_allOf_media;
class OAIMember_allOf_timestamp;

class OAIMember : public OAIObject {
public:
    OAIMember();
    OAIMember(QString json);
    ~OAIMember() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMember_list__links getLinks() const;
    void setLinks(const OAIMember_list__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    OAIMember_allOf_channel getChannel() const;
    void setChannel(const OAIMember_allOf_channel &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    OAIMember_allOf_initiator getInitiator() const;
    void setInitiator(const OAIMember_allOf_initiator &initiator);
    bool is_initiator_Set() const;
    bool is_initiator_Valid() const;

    OAIMember_allOf_media getMedia() const;
    void setMedia(const OAIMember_allOf_media &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    OAIMember_allOf_timestamp getTimestamp() const;
    void setTimestamp(const OAIMember_allOf_timestamp &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMember_list__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    OAIMember_allOf_channel m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    OAIMember_allOf_initiator m_initiator;
    bool m_initiator_isSet;
    bool m_initiator_isValid;

    OAIMember_allOf_media m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    OAIMember_allOf_timestamp m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMember)

#endif // OAIMember_H
