/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_users_200_response.h
 *
 * 
 */

#ifndef OAIGet_users_200_response_H
#define OAIGet_users_200_response_H

#include <QJsonObject>

#include "OAIGet_users_200_response__embedded.h"
#include "OAIGet_users_200_response__links.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGet_users_200_response__embedded;
class OAIGet_users_200_response__links;

class OAIGet_users_200_response : public OAIObject {
public:
    OAIGet_users_200_response();
    OAIGet_users_200_response(QString json);
    ~OAIGet_users_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGet_users_200_response__embedded getEmbedded() const;
    void setEmbedded(const OAIGet_users_200_response__embedded &_embedded);
    bool is__embedded_Set() const;
    bool is__embedded_Valid() const;

    OAIGet_users_200_response__links getLinks() const;
    void setLinks(const OAIGet_users_200_response__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getCursor() const;
    void setCursor(const QString &cursor);
    bool is_cursor_Set() const;
    bool is_cursor_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGet_users_200_response__embedded m__embedded;
    bool m__embedded_isSet;
    bool m__embedded_isValid;

    OAIGet_users_200_response__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_cursor;
    bool m_cursor_isSet;
    bool m_cursor_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_users_200_response)

#endif // OAIGet_users_200_response_H
