/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMember_allOf_media_audio_settings.h
 *
 * The current audio state for the member
 */

#ifndef OAIMember_allOf_media_audio_settings_H
#define OAIMember_allOf_media_audio_settings_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMember_allOf_media_audio_settings : public OAIObject {
public:
    OAIMember_allOf_media_audio_settings();
    OAIMember_allOf_media_audio_settings(QString json);
    ~OAIMember_allOf_media_audio_settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEarmuffed() const;
    void setEarmuffed(const bool &earmuffed);
    bool is_earmuffed_Set() const;
    bool is_earmuffed_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    bool isMuted() const;
    void setMuted(const bool &muted);
    bool is_muted_Set() const;
    bool is_muted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_earmuffed;
    bool m_earmuffed_isSet;
    bool m_earmuffed_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    bool m_muted;
    bool m_muted_isSet;
    bool m_muted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMember_allOf_media_audio_settings)

#endif // OAIMember_allOf_media_audio_settings_H
