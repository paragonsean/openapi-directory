# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MemberAllOfMediaAudioSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, earmuffed: bool=None, enabled: bool=None, muted: bool=None):
        """MemberAllOfMediaAudioSettings - a model defined in OpenAPI

        :param earmuffed: The earmuffed of this MemberAllOfMediaAudioSettings.
        :param enabled: The enabled of this MemberAllOfMediaAudioSettings.
        :param muted: The muted of this MemberAllOfMediaAudioSettings.
        """
        self.openapi_types = {
            'earmuffed': bool,
            'enabled': bool,
            'muted': bool
        }

        self.attribute_map = {
            'earmuffed': 'earmuffed',
            'enabled': 'enabled',
            'muted': 'muted'
        }

        self._earmuffed = earmuffed
        self._enabled = enabled
        self._muted = muted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberAllOfMediaAudioSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The member_allOf_media_audio_settings of this MemberAllOfMediaAudioSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def earmuffed(self):
        """Gets the earmuffed of this MemberAllOfMediaAudioSettings.

        Can the member hear other participants?

        :return: The earmuffed of this MemberAllOfMediaAudioSettings.
        :rtype: bool
        """
        return self._earmuffed

    @earmuffed.setter
    def earmuffed(self, earmuffed):
        """Sets the earmuffed of this MemberAllOfMediaAudioSettings.

        Can the member hear other participants?

        :param earmuffed: The earmuffed of this MemberAllOfMediaAudioSettings.
        :type earmuffed: bool
        """

        self._earmuffed = earmuffed

    @property
    def enabled(self):
        """Gets the enabled of this MemberAllOfMediaAudioSettings.

        Is audio enabled?

        :return: The enabled of this MemberAllOfMediaAudioSettings.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this MemberAllOfMediaAudioSettings.

        Is audio enabled?

        :param enabled: The enabled of this MemberAllOfMediaAudioSettings.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def muted(self):
        """Gets the muted of this MemberAllOfMediaAudioSettings.

        Can the member speak to other participants?

        :return: The muted of this MemberAllOfMediaAudioSettings.
        :rtype: bool
        """
        return self._muted

    @muted.setter
    def muted(self, muted):
        """Sets the muted of this MemberAllOfMediaAudioSettings.

        Can the member speak to other participants?

        :param muted: The muted of this MemberAllOfMediaAudioSettings.
        :type muted: bool
        """

        self._muted = muted
