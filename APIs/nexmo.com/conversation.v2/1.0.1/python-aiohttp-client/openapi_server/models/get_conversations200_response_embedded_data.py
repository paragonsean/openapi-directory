# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversation_list import ConversationList
from openapi_server import util


class GetConversations200ResponseEmbeddedData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversations: List[ConversationList]=None):
        """GetConversations200ResponseEmbeddedData - a model defined in OpenAPI

        :param conversations: The conversations of this GetConversations200ResponseEmbeddedData.
        """
        self.openapi_types = {
            'conversations': List[ConversationList]
        }

        self.attribute_map = {
            'conversations': 'conversations'
        }

        self._conversations = conversations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetConversations200ResponseEmbeddedData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_conversations_200_response__embedded_data of this GetConversations200ResponseEmbeddedData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversations(self):
        """Gets the conversations of this GetConversations200ResponseEmbeddedData.

        List of conversations matching the provided filter

        :return: The conversations of this GetConversations200ResponseEmbeddedData.
        :rtype: List[ConversationList]
        """
        return self._conversations

    @conversations.setter
    def conversations(self, conversations):
        """Sets the conversations of this GetConversations200ResponseEmbeddedData.

        List of conversations matching the provided filter

        :param conversations: The conversations of this GetConversations200ResponseEmbeddedData.
        :type conversations: List[ConversationList]
        """

        self._conversations = conversations
