# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_links import EventLinks
from openapi_server import util


class Event(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: EventLinks=None, _from: str=None, id: int=None, timestamp: str=None):
        """Event - a model defined in OpenAPI

        :param links: The links of this Event.
        :param _from: The _from of this Event.
        :param id: The id of this Event.
        :param timestamp: The timestamp of this Event.
        """
        self.openapi_types = {
            'links': EventLinks,
            '_from': str,
            'id': int,
            'timestamp': str
        }

        self.attribute_map = {
            'links': '_links',
            '_from': 'from',
            'id': 'id',
            'timestamp': 'timestamp'
        }

        self._links = links
        self.__from = _from
        self._id = id
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Event':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The event of this Event.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this Event.


        :return: The links of this Event.
        :rtype: EventLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Event.


        :param links: The links of this Event.
        :type links: EventLinks
        """

        self._links = links

    @property
    def _from(self):
        """Gets the _from of this Event.

        The member ID of the sender

        :return: The _from of this Event.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this Event.

        The member ID of the sender

        :param _from: The _from of this Event.
        :type _from: str
        """

        self.__from = _from

    @property
    def id(self):
        """Gets the id of this Event.

        The ID of the event

        :return: The id of this Event.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Event.

        The ID of the event

        :param id: The id of this Event.
        :type id: int
        """

        self._id = id

    @property
    def timestamp(self):
        """Gets the timestamp of this Event.

        The time that the event happened

        :return: The timestamp of this Event.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this Event.

        The time that the event happened

        :param timestamp: The timestamp of this Event.
        :type timestamp: str
        """

        self._timestamp = timestamp
