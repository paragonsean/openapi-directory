/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserLinksSelf from './UserLinksSelf';

/**
 * The UserLinks model module.
 * @module model/UserLinks
 * @version 1.0.1
 */
class UserLinks {
    /**
     * Constructs a new <code>UserLinks</code>.
     * @alias module:model/UserLinks
     */
    constructor() { 
        
        UserLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserLinks} obj Optional instance to populate.
     * @return {module:model/UserLinks} The populated <code>UserLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserLinks();

            if (data.hasOwnProperty('self')) {
                obj['self'] = UserLinksSelf.constructFromObject(data['self']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserLinks</code>.
     */
    static validateJSON(data) {
        // validate the optional field `self`
        if (data['self']) { // data not null
          UserLinksSelf.validateJSON(data['self']);
        }

        return true;
    }


}



/**
 * @member {module:model/UserLinksSelf} self
 */
UserLinks.prototype['self'] = undefined;






export default UserLinks;

