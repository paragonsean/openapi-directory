/**
 * Verify API
 * The Verify API helps you to implement 2FA (two-factor authentication) in your applications. This is useful for:  * Protecting against spam, by preventing spammers from creating multiple accounts * Monitoring suspicious activity, by forcing an account user to verify ownership of a number * Ensuring that you can reach your users at any time because you have their correct phone number More information is available at <https://developer.nexmo.com/verify>
 *
 * The version of the OpenAPI document: 1.2.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkUnblockResponseOk.h
 *
 * Success
 */

#ifndef OAINetworkUnblockResponseOk_H
#define OAINetworkUnblockResponseOk_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkUnblockResponseOk : public OAIObject {
public:
    OAINetworkUnblockResponseOk();
    OAINetworkUnblockResponseOk(QString json);
    ~OAINetworkUnblockResponseOk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getUnblockedUntil() const;
    void setUnblockedUntil(const QString &unblocked_until);
    bool is_unblocked_until_Set() const;
    bool is_unblocked_until_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_unblocked_until;
    bool m_unblocked_until_isSet;
    bool m_unblocked_until_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkUnblockResponseOk)

#endif // OAINetworkUnblockResponseOk_H
