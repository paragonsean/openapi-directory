/**
 * Verify API
 * The Verify API helps you to implement 2FA (two-factor authentication) in your applications. This is useful for:  * Protecting against spam, by preventing spammers from creating multiple accounts * Monitoring suspicious activity, by forcing an account user to verify ownership of a number * Ensuring that you can reach your users at any time because you have their correct phone number More information is available at <https://developer.nexmo.com/verify>
 *
 * The version of the OpenAPI document: 1.2.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerifyControl_200_response.h
 *
 * 
 */

#ifndef OAIVerifyControl_200_response_H
#define OAIVerifyControl_200_response_H

#include <QJsonObject>

#include "OAIControlErrorResponse.h"
#include "OAIControlResponse.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVerifyControl_200_response : public OAIObject {
public:
    OAIVerifyControl_200_response();
    OAIVerifyControl_200_response(QString json);
    ~OAIVerifyControl_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCommand() const;
    void setCommand(const QString &command);
    bool is_command_Set() const;
    bool is_command_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getErrorText() const;
    void setErrorText(const QString &error_text);
    bool is_error_text_Set() const;
    bool is_error_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_command;
    bool m_command_isSet;
    bool m_command_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_error_text;
    bool m_error_text_isSet;
    bool m_error_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerifyControl_200_response)

#endif // OAIVerifyControl_200_response_H
