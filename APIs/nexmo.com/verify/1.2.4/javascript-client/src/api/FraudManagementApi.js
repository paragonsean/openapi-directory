/**
 * Verify API
 * The Verify API helps you to implement 2FA (two-factor authentication) in your applications. This is useful for:  * Protecting against spam, by preventing spammers from creating multiple accounts * Monitoring suspicious activity, by forcing an account user to verify ownership of a number * Ensuring that you can reach your users at any time because you have their correct phone number More information is available at <https://developer.nexmo.com/verify>
 *
 * The version of the OpenAPI document: 1.2.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorThrottled from '../model/ErrorThrottled';
import NetworkUnblock from '../model/NetworkUnblock';
import NetworkUnblock422Response from '../model/NetworkUnblock422Response';
import NetworkUnblockResponseForbidden from '../model/NetworkUnblockResponseForbidden';
import NetworkUnblockResponseNotFound from '../model/NetworkUnblockResponseNotFound';
import NetworkUnblockResponseOk from '../model/NetworkUnblockResponseOk';

/**
* FraudManagement service.
* @module api/FraudManagementApi
* @version 1.2.4
*/
export default class FraudManagementApi {

    /**
    * Constructs a new FraudManagementApi. 
    * @alias module:api/FraudManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the networkUnblock operation.
     * @callback module:api/FraudManagementApi~networkUnblockCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkUnblockResponseOk} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request a network unblock
     * Request to unblock a network that has been blocked due to potential fraud detection <div class=\"Vlt-callout Vlt-callout--critical\">   <div class=\"Vlt-callout__content\">     <h4>Network Unblock is switched off by default.</h4>     Please contact Sales to enable the Network Unblock API for your account.   </div> </div>
     * @param {module:model/NetworkUnblock} networkUnblock 
     * @param {module:api/FraudManagementApi~networkUnblockCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkUnblockResponseOk}
     */
    networkUnblock(networkUnblock, callback) {
      let postBody = networkUnblock;
      // verify the required parameter 'networkUnblock' is set
      if (networkUnblock === undefined || networkUnblock === null) {
        throw new Error("Missing the required parameter 'networkUnblock' when calling networkUnblock");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NetworkUnblockResponseOk;
      return this.apiClient.callApi(
        '/network-unblock', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
