/**
 * Verify API
 * The Verify API helps you to implement 2FA (two-factor authentication) in your applications. This is useful for:  * Protecting against spam, by preventing spammers from creating multiple accounts * Monitoring suspicious activity, by forcing an account user to verify ownership of a number * Ensuring that you can reach your users at any time because you have their correct phone number More information is available at <https://developer.nexmo.com/verify>
 *
 * The version of the OpenAPI document: 1.2.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchResponseChecksInner from './SearchResponseChecksInner';
import SearchResponseEventsInner from './SearchResponseEventsInner';

/**
 * The SearchResponse model module.
 * @module model/SearchResponse
 * @version 1.2.4
 */
class SearchResponse {
    /**
     * Constructs a new <code>SearchResponse</code>.
     * Success
     * @alias module:model/SearchResponse
     */
    constructor() { 
        
        SearchResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['sender_id'] = 'verify';
    }

    /**
     * Constructs a <code>SearchResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchResponse} obj Optional instance to populate.
     * @return {module:model/SearchResponse} The populated <code>SearchResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchResponse();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('checks')) {
                obj['checks'] = ApiClient.convertToType(data['checks'], [SearchResponseChecksInner]);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('date_finalized')) {
                obj['date_finalized'] = ApiClient.convertToType(data['date_finalized'], 'String');
            }
            if (data.hasOwnProperty('date_submitted')) {
                obj['date_submitted'] = ApiClient.convertToType(data['date_submitted'], 'String');
            }
            if (data.hasOwnProperty('estimated_price_messages_sent')) {
                obj['estimated_price_messages_sent'] = ApiClient.convertToType(data['estimated_price_messages_sent'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [SearchResponseEventsInner]);
            }
            if (data.hasOwnProperty('first_event_date')) {
                obj['first_event_date'] = ApiClient.convertToType(data['first_event_date'], 'String');
            }
            if (data.hasOwnProperty('last_event_date')) {
                obj['last_event_date'] = ApiClient.convertToType(data['last_event_date'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('sender_id')) {
                obj['sender_id'] = ApiClient.convertToType(data['sender_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        if (data['checks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['checks'])) {
                throw new Error("Expected the field `checks` to be an array in the JSON data but got " + data['checks']);
            }
            // validate the optional field `checks` (array)
            for (const item of data['checks']) {
                SearchResponseChecksInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['date_finalized'] && !(typeof data['date_finalized'] === 'string' || data['date_finalized'] instanceof String)) {
            throw new Error("Expected the field `date_finalized` to be a primitive type in the JSON string but got " + data['date_finalized']);
        }
        // ensure the json data is a string
        if (data['date_submitted'] && !(typeof data['date_submitted'] === 'string' || data['date_submitted'] instanceof String)) {
            throw new Error("Expected the field `date_submitted` to be a primitive type in the JSON string but got " + data['date_submitted']);
        }
        // ensure the json data is a string
        if (data['estimated_price_messages_sent'] && !(typeof data['estimated_price_messages_sent'] === 'string' || data['estimated_price_messages_sent'] instanceof String)) {
            throw new Error("Expected the field `estimated_price_messages_sent` to be a primitive type in the JSON string but got " + data['estimated_price_messages_sent']);
        }
        if (data['events']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['events'])) {
                throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
            }
            // validate the optional field `events` (array)
            for (const item of data['events']) {
                SearchResponseEventsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['first_event_date'] && !(typeof data['first_event_date'] === 'string' || data['first_event_date'] instanceof String)) {
            throw new Error("Expected the field `first_event_date` to be a primitive type in the JSON string but got " + data['first_event_date']);
        }
        // ensure the json data is a string
        if (data['last_event_date'] && !(typeof data['last_event_date'] === 'string' || data['last_event_date'] instanceof String)) {
            throw new Error("Expected the field `last_event_date` to be a primitive type in the JSON string but got " + data['last_event_date']);
        }
        // ensure the json data is a string
        if (data['number'] && !(typeof data['number'] === 'string' || data['number'] instanceof String)) {
            throw new Error("Expected the field `number` to be a primitive type in the JSON string but got " + data['number']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['sender_id'] && !(typeof data['sender_id'] === 'string' || data['sender_id'] instanceof String)) {
            throw new Error("Expected the field `sender_id` to be a primitive type in the JSON string but got " + data['sender_id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The Vonage account ID the request was for.
 * @member {String} account_id
 */
SearchResponse.prototype['account_id'] = undefined;

/**
 * The list of checks made for this verification and their outcomes.
 * @member {Array.<module:model/SearchResponseChecksInner>} checks
 */
SearchResponse.prototype['checks'] = undefined;

/**
 * The currency code.
 * @member {String} currency
 */
SearchResponse.prototype['currency'] = undefined;

/**
 * The date and time the verification request was completed. This response parameter is in the following format YYYY-MM-DD HH:MM:SS.
 * @member {String} date_finalized
 */
SearchResponse.prototype['date_finalized'] = undefined;

/**
 * The date and time the verification request was submitted, in the following format YYYY-MM-DD HH:MM:SS.
 * @member {String} date_submitted
 */
SearchResponse.prototype['date_submitted'] = undefined;

/**
 * This field may not be present, depending on your pricing model. The value indicates the cost (in EUR) of the calls made and messages sent for the verification process. This value may be updated during and shortly after the request completes because user input events can overlap with message/call events. When this field is present, the total cost of the verification is the sum of this field and the `price` field. 
 * @member {String} estimated_price_messages_sent
 */
SearchResponse.prototype['estimated_price_messages_sent'] = undefined;

/**
 * The events that have taken place to verify this number, and their unique identifiers.
 * @member {Array.<module:model/SearchResponseEventsInner>} events
 */
SearchResponse.prototype['events'] = undefined;

/**
 * The time the first verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.
 * @member {String} first_event_date
 */
SearchResponse.prototype['first_event_date'] = undefined;

/**
 * The time the last verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.
 * @member {String} last_event_date
 */
SearchResponse.prototype['last_event_date'] = undefined;

/**
 * The phone number this verification request was used for.
 * @member {String} number
 */
SearchResponse.prototype['number'] = undefined;

/**
 * The cost incurred for this verification request.
 * @member {String} price
 */
SearchResponse.prototype['price'] = undefined;

/**
 * The `request_id` that you received in the response to the Verify request and used in the Verify search request.
 * @member {String} request_id
 */
SearchResponse.prototype['request_id'] = undefined;

/**
 * The `sender_id` you provided in the Verify request.
 * @member {String} sender_id
 * @default 'verify'
 */
SearchResponse.prototype['sender_id'] = 'verify';

/**
 * Code | Description -- | -- IN PROGRESS | The search is still in progress. SUCCESS | Your user entered a correct verification code. FAILED | Your user entered an incorrect code more than three times. EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed. CANCELLED | The verification process was cancelled by a Verify control request. 
 * @member {module:model/SearchResponse.StatusEnum} status
 */
SearchResponse.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
SearchResponse['StatusEnum'] = {

    /**
     * value: "IN PROGRESS"
     * @const
     */
    "IN PROGRESS": "IN PROGRESS",

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "EXPIRED"
     * @const
     */
    "EXPIRED": "EXPIRED",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED"
};



export default SearchResponse;

