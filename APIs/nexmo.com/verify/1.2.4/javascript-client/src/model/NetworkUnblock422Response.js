/**
 * Verify API
 * The Verify API helps you to implement 2FA (two-factor authentication) in your applications. This is useful for:  * Protecting against spam, by preventing spammers from creating multiple accounts * Monitoring suspicious activity, by forcing an account user to verify ownership of a number * Ensuring that you can reach your users at any time because you have their correct phone number More information is available at <https://developer.nexmo.com/verify>
 *
 * The version of the OpenAPI document: 1.2.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkUnblockResponseInvalidDuration from './NetworkUnblockResponseInvalidDuration';
import NetworkUnblockResponseInvalidDurationInvalidParametersInner from './NetworkUnblockResponseInvalidDurationInvalidParametersInner';
import NetworkUnblockResponseUnprocessableNetwork from './NetworkUnblockResponseUnprocessableNetwork';

/**
 * The NetworkUnblock422Response model module.
 * @module model/NetworkUnblock422Response
 * @version 1.2.4
 */
class NetworkUnblock422Response {
    /**
     * Constructs a new <code>NetworkUnblock422Response</code>.
     * @alias module:model/NetworkUnblock422Response
     * @param {(module:model/NetworkUnblockResponseInvalidDuration|module:model/NetworkUnblockResponseUnprocessableNetwork)} instance The actual instance to initialize NetworkUnblock422Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "NetworkUnblockResponseUnprocessableNetwork") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                NetworkUnblockResponseUnprocessableNetwork.validateJSON(instance); // throw an exception if no match
                // create NetworkUnblockResponseUnprocessableNetwork from JS object
                this.actualInstance = NetworkUnblockResponseUnprocessableNetwork.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into NetworkUnblockResponseUnprocessableNetwork
            errorMessages.push("Failed to construct NetworkUnblockResponseUnprocessableNetwork: " + err)
        }

        try {
            if (typeof instance === "NetworkUnblockResponseInvalidDuration") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                NetworkUnblockResponseInvalidDuration.validateJSON(instance); // throw an exception if no match
                // create NetworkUnblockResponseInvalidDuration from JS object
                this.actualInstance = NetworkUnblockResponseInvalidDuration.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into NetworkUnblockResponseInvalidDuration
            errorMessages.push("Failed to construct NetworkUnblockResponseInvalidDuration: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `NetworkUnblock422Response` with oneOf schemas NetworkUnblockResponseInvalidDuration, NetworkUnblockResponseUnprocessableNetwork. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `NetworkUnblock422Response` with oneOf schemas NetworkUnblockResponseInvalidDuration, NetworkUnblockResponseUnprocessableNetwork. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>NetworkUnblock422Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkUnblock422Response} obj Optional instance to populate.
     * @return {module:model/NetworkUnblock422Response} The populated <code>NetworkUnblock422Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new NetworkUnblock422Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>NetworkUnblockResponseInvalidDuration</code>, <code>NetworkUnblockResponseUnprocessableNetwork</code>.
     * @return {(module:model/NetworkUnblockResponseInvalidDuration|module:model/NetworkUnblockResponseUnprocessableNetwork)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>NetworkUnblockResponseInvalidDuration</code>, <code>NetworkUnblockResponseUnprocessableNetwork</code>.
     * @param {(module:model/NetworkUnblockResponseInvalidDuration|module:model/NetworkUnblockResponseUnprocessableNetwork)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = NetworkUnblock422Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of NetworkUnblock422Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/NetworkUnblock422Response} An instance of NetworkUnblock422Response.
     */
    static fromJSON = function(json_string){
        return NetworkUnblock422Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Verbose description of the server error.
 * @member {String} detail
 */
NetworkUnblock422Response.prototype['detail'] = undefined;

/**
 * The Instance ID
 * @member {String} instance
 */
NetworkUnblock422Response.prototype['instance'] = undefined;

/**
 * Detailed payload of errors.
 * @member {Array.<module:model/NetworkUnblockResponseInvalidDurationInvalidParametersInner>} invalid_parameters
 */
NetworkUnblock422Response.prototype['invalid_parameters'] = undefined;

/**
 * Full string text of the HTTP error code.
 * @member {String} title
 */
NetworkUnblock422Response.prototype['title'] = undefined;

/**
 * A URL link to the API documentation for this type of error.
 * @member {String} type
 */
NetworkUnblock422Response.prototype['type'] = undefined;


NetworkUnblock422Response.OneOf = ["NetworkUnblockResponseInvalidDuration", "NetworkUnblockResponseUnprocessableNetwork"];

export default NetworkUnblock422Response;

