# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkUnblock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network: str=None, unblock_duration: int=3600):
        """NetworkUnblock - a model defined in OpenAPI

        :param network: The network of this NetworkUnblock.
        :param unblock_duration: The unblock_duration of this NetworkUnblock.
        """
        self.openapi_types = {
            'network': str,
            'unblock_duration': int
        }

        self.attribute_map = {
            'network': 'network',
            'unblock_duration': 'unblock_duration'
        }

        self._network = network
        self._unblock_duration = unblock_duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkUnblock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The networkUnblock of this NetworkUnblock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network(self):
        """Gets the network of this NetworkUnblock.

        The Network code

        :return: The network of this NetworkUnblock.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this NetworkUnblock.

        The Network code

        :param network: The network of this NetworkUnblock.
        :type network: str
        """

        self._network = network

    @property
    def unblock_duration(self):
        """Gets the unblock_duration of this NetworkUnblock.

        An optional duration the unblock will be applied for in seconds

        :return: The unblock_duration of this NetworkUnblock.
        :rtype: int
        """
        return self._unblock_duration

    @unblock_duration.setter
    def unblock_duration(self, unblock_duration):
        """Sets the unblock_duration of this NetworkUnblock.

        An optional duration the unblock will be applied for in seconds

        :param unblock_duration: The unblock_duration of this NetworkUnblock.
        :type unblock_duration: int
        """
        if unblock_duration is not None and unblock_duration > 86400:
            raise ValueError("Invalid value for `unblock_duration`, must be a value less than or equal to `86400`")
        if unblock_duration is not None and unblock_duration < 0:
            raise ValueError("Invalid value for `unblock_duration`, must be a value greater than or equal to `0`")

        self._unblock_duration = unblock_duration
