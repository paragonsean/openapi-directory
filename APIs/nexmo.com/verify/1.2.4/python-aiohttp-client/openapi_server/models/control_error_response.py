# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ControlErrorResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_text: str=None, status: str=None):
        """ControlErrorResponse - a model defined in OpenAPI

        :param error_text: The error_text of this ControlErrorResponse.
        :param status: The status of this ControlErrorResponse.
        """
        self.openapi_types = {
            'error_text': str,
            'status': str
        }

        self.attribute_map = {
            'error_text': 'error_text',
            'status': 'status'
        }

        self._error_text = error_text
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControlErrorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The controlErrorResponse of this ControlErrorResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_text(self):
        """Gets the error_text of this ControlErrorResponse.

        If the `status` is non-zero, this explains the error encountered.

        :return: The error_text of this ControlErrorResponse.
        :rtype: str
        """
        return self._error_text

    @error_text.setter
    def error_text(self, error_text):
        """Sets the error_text of this ControlErrorResponse.

        If the `status` is non-zero, this explains the error encountered.

        :param error_text: The error_text of this ControlErrorResponse.
        :type error_text: str
        """

        self._error_text = error_text

    @property
    def status(self):
        """Gets the status of this ControlErrorResponse.

        Code | Text | Description -- | -- | -- 0 | Success | The request was successfully accepted by Vonage. 1 | Throttled | You are trying to send more than the maximum of 30 requests per second. 2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing. 3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request. 4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled. 5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform. 6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed. 8 | The api_key you supplied is for an account that has been barred from submitting messages. | 9 | Partner quota exceeded | Your account does not have sufficient credit to process this request. 19 | For `cancel`: Either you have not waited at least 30 secs after sending a Verify request before cancelling or Verify has made too many attempts to deliver the verification code for this request and you must now wait for the process to complete. For `trigger_next_event`: All attempts to deliver the verification code for this request have completed and there are no remaining events to advance to. 

        :return: The status of this ControlErrorResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ControlErrorResponse.

        Code | Text | Description -- | -- | -- 0 | Success | The request was successfully accepted by Vonage. 1 | Throttled | You are trying to send more than the maximum of 30 requests per second. 2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing. 3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request. 4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled. 5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform. 6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed. 8 | The api_key you supplied is for an account that has been barred from submitting messages. | 9 | Partner quota exceeded | Your account does not have sufficient credit to process this request. 19 | For `cancel`: Either you have not waited at least 30 secs after sending a Verify request before cancelling or Verify has made too many attempts to deliver the verification code for this request and you must now wait for the process to complete. For `trigger_next_event`: All attempts to deliver the verification code for this request have completed and there are no remaining events to advance to. 

        :param status: The status of this ControlErrorResponse.
        :type status: str
        """
        allowed_values = ["0", "1", "2", "3", "4", "5", "6", "8", "9", "19"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
