# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_error_response import SearchErrorResponse
from openapi_server.models.search_response import SearchResponse
from openapi_server.models.search_response_checks_inner import SearchResponseChecksInner
from openapi_server.models.search_response_events_inner import SearchResponseEventsInner
from openapi_server import util


class VerifySearch200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, checks: List[SearchResponseChecksInner]=None, currency: str=None, date_finalized: str=None, date_submitted: str=None, estimated_price_messages_sent: str=None, events: List[SearchResponseEventsInner]=None, first_event_date: str=None, last_event_date: str=None, number: str=None, price: str=None, request_id: str=None, sender_id: str='verify', status: str=None, error_text: str=None):
        """VerifySearch200Response - a model defined in OpenAPI

        :param account_id: The account_id of this VerifySearch200Response.
        :param checks: The checks of this VerifySearch200Response.
        :param currency: The currency of this VerifySearch200Response.
        :param date_finalized: The date_finalized of this VerifySearch200Response.
        :param date_submitted: The date_submitted of this VerifySearch200Response.
        :param estimated_price_messages_sent: The estimated_price_messages_sent of this VerifySearch200Response.
        :param events: The events of this VerifySearch200Response.
        :param first_event_date: The first_event_date of this VerifySearch200Response.
        :param last_event_date: The last_event_date of this VerifySearch200Response.
        :param number: The number of this VerifySearch200Response.
        :param price: The price of this VerifySearch200Response.
        :param request_id: The request_id of this VerifySearch200Response.
        :param sender_id: The sender_id of this VerifySearch200Response.
        :param status: The status of this VerifySearch200Response.
        :param error_text: The error_text of this VerifySearch200Response.
        """
        self.openapi_types = {
            'account_id': str,
            'checks': List[SearchResponseChecksInner],
            'currency': str,
            'date_finalized': str,
            'date_submitted': str,
            'estimated_price_messages_sent': str,
            'events': List[SearchResponseEventsInner],
            'first_event_date': str,
            'last_event_date': str,
            'number': str,
            'price': str,
            'request_id': str,
            'sender_id': str,
            'status': str,
            'error_text': str
        }

        self.attribute_map = {
            'account_id': 'account_id',
            'checks': 'checks',
            'currency': 'currency',
            'date_finalized': 'date_finalized',
            'date_submitted': 'date_submitted',
            'estimated_price_messages_sent': 'estimated_price_messages_sent',
            'events': 'events',
            'first_event_date': 'first_event_date',
            'last_event_date': 'last_event_date',
            'number': 'number',
            'price': 'price',
            'request_id': 'request_id',
            'sender_id': 'sender_id',
            'status': 'status',
            'error_text': 'error_text'
        }

        self._account_id = account_id
        self._checks = checks
        self._currency = currency
        self._date_finalized = date_finalized
        self._date_submitted = date_submitted
        self._estimated_price_messages_sent = estimated_price_messages_sent
        self._events = events
        self._first_event_date = first_event_date
        self._last_event_date = last_event_date
        self._number = number
        self._price = price
        self._request_id = request_id
        self._sender_id = sender_id
        self._status = status
        self._error_text = error_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifySearch200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verifySearch_200_response of this VerifySearch200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this VerifySearch200Response.

        The Vonage account ID the request was for.

        :return: The account_id of this VerifySearch200Response.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this VerifySearch200Response.

        The Vonage account ID the request was for.

        :param account_id: The account_id of this VerifySearch200Response.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def checks(self):
        """Gets the checks of this VerifySearch200Response.

        The list of checks made for this verification and their outcomes.

        :return: The checks of this VerifySearch200Response.
        :rtype: List[SearchResponseChecksInner]
        """
        return self._checks

    @checks.setter
    def checks(self, checks):
        """Sets the checks of this VerifySearch200Response.

        The list of checks made for this verification and their outcomes.

        :param checks: The checks of this VerifySearch200Response.
        :type checks: List[SearchResponseChecksInner]
        """

        self._checks = checks

    @property
    def currency(self):
        """Gets the currency of this VerifySearch200Response.

        The currency code.

        :return: The currency of this VerifySearch200Response.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this VerifySearch200Response.

        The currency code.

        :param currency: The currency of this VerifySearch200Response.
        :type currency: str
        """

        self._currency = currency

    @property
    def date_finalized(self):
        """Gets the date_finalized of this VerifySearch200Response.

        The date and time the verification request was completed. This response parameter is in the following format YYYY-MM-DD HH:MM:SS.

        :return: The date_finalized of this VerifySearch200Response.
        :rtype: str
        """
        return self._date_finalized

    @date_finalized.setter
    def date_finalized(self, date_finalized):
        """Sets the date_finalized of this VerifySearch200Response.

        The date and time the verification request was completed. This response parameter is in the following format YYYY-MM-DD HH:MM:SS.

        :param date_finalized: The date_finalized of this VerifySearch200Response.
        :type date_finalized: str
        """

        self._date_finalized = date_finalized

    @property
    def date_submitted(self):
        """Gets the date_submitted of this VerifySearch200Response.

        The date and time the verification request was submitted, in the following format YYYY-MM-DD HH:MM:SS.

        :return: The date_submitted of this VerifySearch200Response.
        :rtype: str
        """
        return self._date_submitted

    @date_submitted.setter
    def date_submitted(self, date_submitted):
        """Sets the date_submitted of this VerifySearch200Response.

        The date and time the verification request was submitted, in the following format YYYY-MM-DD HH:MM:SS.

        :param date_submitted: The date_submitted of this VerifySearch200Response.
        :type date_submitted: str
        """

        self._date_submitted = date_submitted

    @property
    def estimated_price_messages_sent(self):
        """Gets the estimated_price_messages_sent of this VerifySearch200Response.

        This field may not be present, depending on your pricing model. The value indicates the cost (in EUR) of the calls made and messages sent for the verification process. This value may be updated during and shortly after the request completes because user input events can overlap with message/call events. When this field is present, the total cost of the verification is the sum of this field and the `price` field. 

        :return: The estimated_price_messages_sent of this VerifySearch200Response.
        :rtype: str
        """
        return self._estimated_price_messages_sent

    @estimated_price_messages_sent.setter
    def estimated_price_messages_sent(self, estimated_price_messages_sent):
        """Sets the estimated_price_messages_sent of this VerifySearch200Response.

        This field may not be present, depending on your pricing model. The value indicates the cost (in EUR) of the calls made and messages sent for the verification process. This value may be updated during and shortly after the request completes because user input events can overlap with message/call events. When this field is present, the total cost of the verification is the sum of this field and the `price` field. 

        :param estimated_price_messages_sent: The estimated_price_messages_sent of this VerifySearch200Response.
        :type estimated_price_messages_sent: str
        """

        self._estimated_price_messages_sent = estimated_price_messages_sent

    @property
    def events(self):
        """Gets the events of this VerifySearch200Response.

        The events that have taken place to verify this number, and their unique identifiers.

        :return: The events of this VerifySearch200Response.
        :rtype: List[SearchResponseEventsInner]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this VerifySearch200Response.

        The events that have taken place to verify this number, and their unique identifiers.

        :param events: The events of this VerifySearch200Response.
        :type events: List[SearchResponseEventsInner]
        """

        self._events = events

    @property
    def first_event_date(self):
        """Gets the first_event_date of this VerifySearch200Response.

        The time the first verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.

        :return: The first_event_date of this VerifySearch200Response.
        :rtype: str
        """
        return self._first_event_date

    @first_event_date.setter
    def first_event_date(self, first_event_date):
        """Sets the first_event_date of this VerifySearch200Response.

        The time the first verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.

        :param first_event_date: The first_event_date of this VerifySearch200Response.
        :type first_event_date: str
        """

        self._first_event_date = first_event_date

    @property
    def last_event_date(self):
        """Gets the last_event_date of this VerifySearch200Response.

        The time the last verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.

        :return: The last_event_date of this VerifySearch200Response.
        :rtype: str
        """
        return self._last_event_date

    @last_event_date.setter
    def last_event_date(self, last_event_date):
        """Sets the last_event_date of this VerifySearch200Response.

        The time the last verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.

        :param last_event_date: The last_event_date of this VerifySearch200Response.
        :type last_event_date: str
        """

        self._last_event_date = last_event_date

    @property
    def number(self):
        """Gets the number of this VerifySearch200Response.

        The phone number this verification request was used for.

        :return: The number of this VerifySearch200Response.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this VerifySearch200Response.

        The phone number this verification request was used for.

        :param number: The number of this VerifySearch200Response.
        :type number: str
        """

        self._number = number

    @property
    def price(self):
        """Gets the price of this VerifySearch200Response.

        The cost incurred for this verification request.

        :return: The price of this VerifySearch200Response.
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this VerifySearch200Response.

        The cost incurred for this verification request.

        :param price: The price of this VerifySearch200Response.
        :type price: str
        """

        self._price = price

    @property
    def request_id(self):
        """Gets the request_id of this VerifySearch200Response.

        The `request_id` that you received in the response to the Verify request and used in the Verify search request. May be empty in an error situation.

        :return: The request_id of this VerifySearch200Response.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this VerifySearch200Response.

        The `request_id` that you received in the response to the Verify request and used in the Verify search request. May be empty in an error situation.

        :param request_id: The request_id of this VerifySearch200Response.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def sender_id(self):
        """Gets the sender_id of this VerifySearch200Response.

        The `sender_id` you provided in the Verify request.

        :return: The sender_id of this VerifySearch200Response.
        :rtype: str
        """
        return self._sender_id

    @sender_id.setter
    def sender_id(self, sender_id):
        """Sets the sender_id of this VerifySearch200Response.

        The `sender_id` you provided in the Verify request.

        :param sender_id: The sender_id of this VerifySearch200Response.
        :type sender_id: str
        """

        self._sender_id = sender_id

    @property
    def status(self):
        """Gets the status of this VerifySearch200Response.

        Code | Description -- | -- IN PROGRESS | The search is still in progress. SUCCESS | Your user entered a correct verification code. FAILED | Your user entered an incorrect code more than three times. EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed. CANCELLED | The verification process was cancelled by a Verify control request. 101 | You supplied an invalid `request_id`, or the data is not available. Note that for recently-completed requests, there can be a delay of up to 1 minute before the results are available in search. 

        :return: The status of this VerifySearch200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VerifySearch200Response.

        Code | Description -- | -- IN PROGRESS | The search is still in progress. SUCCESS | Your user entered a correct verification code. FAILED | Your user entered an incorrect code more than three times. EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed. CANCELLED | The verification process was cancelled by a Verify control request. 101 | You supplied an invalid `request_id`, or the data is not available. Note that for recently-completed requests, there can be a delay of up to 1 minute before the results are available in search. 

        :param status: The status of this VerifySearch200Response.
        :type status: str
        """
        allowed_values = ["IN PROGRESS", "FAILED", "EXPIRED", "CANCELLED", "101"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def error_text(self):
        """Gets the error_text of this VerifySearch200Response.

        If `status` is not `SUCCESS`, this message explains the issue encountered.

        :return: The error_text of this VerifySearch200Response.
        :rtype: str
        """
        return self._error_text

    @error_text.setter
    def error_text(self, error_text):
        """Sets the error_text of this VerifySearch200Response.

        If `status` is not `SUCCESS`, this message explains the issue encountered.

        :param error_text: The error_text of this VerifySearch200Response.
        :type error_text: str
        """

        self._error_text = error_text
