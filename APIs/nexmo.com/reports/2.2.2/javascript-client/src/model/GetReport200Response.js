/**
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AsrResponseGetReport from './AsrResponseGetReport';
import AsrStatus from './AsrStatus';
import ConversationsResponseGetReport from './ConversationsResponseGetReport';
import Direction from './Direction';
import InAppVoiceResponseGetReport from './InAppVoiceResponseGetReport';
import Links from './Links';
import MessagesResponseGetReport from './MessagesResponseGetReport';
import NumberInsightResponseGetReport from './NumberInsightResponseGetReport';
import ProductAsr from './ProductAsr';
import RequestStatus from './RequestStatus';
import SmsResponseGetReport from './SmsResponseGetReport';
import VerifyApiResponseGetReport from './VerifyApiResponseGetReport';
import VoiceCallResponseGetReport from './VoiceCallResponseGetReport';
import WebsocketCallResponseGetReport from './WebsocketCallResponseGetReport';

/**
 * The GetReport200Response model module.
 * @module model/GetReport200Response
 * @version 2.2.2
 */
class GetReport200Response {
    /**
     * Constructs a new <code>GetReport200Response</code>.
     * @alias module:model/GetReport200Response
     * @param {(module:model/AsrResponseGetReport|module:model/ConversationsResponseGetReport|module:model/InAppVoiceResponseGetReport|module:model/MessagesResponseGetReport|module:model/NumberInsightResponseGetReport|module:model/SmsResponseGetReport|module:model/VerifyApiResponseGetReport|module:model/VoiceCallResponseGetReport|module:model/WebsocketCallResponseGetReport)} instance The actual instance to initialize GetReport200Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "SmsResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SmsResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create SmsResponseGetReport from JS object
                this.actualInstance = SmsResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SmsResponseGetReport
            errorMessages.push("Failed to construct SmsResponseGetReport: " + err)
        }

        try {
            if (typeof instance === "VoiceCallResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                VoiceCallResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create VoiceCallResponseGetReport from JS object
                this.actualInstance = VoiceCallResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into VoiceCallResponseGetReport
            errorMessages.push("Failed to construct VoiceCallResponseGetReport: " + err)
        }

        try {
            if (typeof instance === "InAppVoiceResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                InAppVoiceResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create InAppVoiceResponseGetReport from JS object
                this.actualInstance = InAppVoiceResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into InAppVoiceResponseGetReport
            errorMessages.push("Failed to construct InAppVoiceResponseGetReport: " + err)
        }

        try {
            if (typeof instance === "WebsocketCallResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                WebsocketCallResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create WebsocketCallResponseGetReport from JS object
                this.actualInstance = WebsocketCallResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into WebsocketCallResponseGetReport
            errorMessages.push("Failed to construct WebsocketCallResponseGetReport: " + err)
        }

        try {
            if (typeof instance === "VerifyApiResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                VerifyApiResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create VerifyApiResponseGetReport from JS object
                this.actualInstance = VerifyApiResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into VerifyApiResponseGetReport
            errorMessages.push("Failed to construct VerifyApiResponseGetReport: " + err)
        }

        try {
            if (typeof instance === "NumberInsightResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                NumberInsightResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create NumberInsightResponseGetReport from JS object
                this.actualInstance = NumberInsightResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into NumberInsightResponseGetReport
            errorMessages.push("Failed to construct NumberInsightResponseGetReport: " + err)
        }

        try {
            if (typeof instance === "MessagesResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MessagesResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create MessagesResponseGetReport from JS object
                this.actualInstance = MessagesResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MessagesResponseGetReport
            errorMessages.push("Failed to construct MessagesResponseGetReport: " + err)
        }

        try {
            if (typeof instance === "ConversationsResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ConversationsResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create ConversationsResponseGetReport from JS object
                this.actualInstance = ConversationsResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ConversationsResponseGetReport
            errorMessages.push("Failed to construct ConversationsResponseGetReport: " + err)
        }

        try {
            if (typeof instance === "AsrResponseGetReport") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AsrResponseGetReport.validateJSON(instance); // throw an exception if no match
                // create AsrResponseGetReport from JS object
                this.actualInstance = AsrResponseGetReport.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AsrResponseGetReport
            errorMessages.push("Failed to construct AsrResponseGetReport: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GetReport200Response` with oneOf schemas AsrResponseGetReport, ConversationsResponseGetReport, InAppVoiceResponseGetReport, MessagesResponseGetReport, NumberInsightResponseGetReport, SmsResponseGetReport, VerifyApiResponseGetReport, VoiceCallResponseGetReport, WebsocketCallResponseGetReport. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GetReport200Response` with oneOf schemas AsrResponseGetReport, ConversationsResponseGetReport, InAppVoiceResponseGetReport, MessagesResponseGetReport, NumberInsightResponseGetReport, SmsResponseGetReport, VerifyApiResponseGetReport, VoiceCallResponseGetReport, WebsocketCallResponseGetReport. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GetReport200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetReport200Response} obj Optional instance to populate.
     * @return {module:model/GetReport200Response} The populated <code>GetReport200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GetReport200Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>AsrResponseGetReport</code>, <code>ConversationsResponseGetReport</code>, <code>InAppVoiceResponseGetReport</code>, <code>MessagesResponseGetReport</code>, <code>NumberInsightResponseGetReport</code>, <code>SmsResponseGetReport</code>, <code>VerifyApiResponseGetReport</code>, <code>VoiceCallResponseGetReport</code>, <code>WebsocketCallResponseGetReport</code>.
     * @return {(module:model/AsrResponseGetReport|module:model/ConversationsResponseGetReport|module:model/InAppVoiceResponseGetReport|module:model/MessagesResponseGetReport|module:model/NumberInsightResponseGetReport|module:model/SmsResponseGetReport|module:model/VerifyApiResponseGetReport|module:model/VoiceCallResponseGetReport|module:model/WebsocketCallResponseGetReport)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>AsrResponseGetReport</code>, <code>ConversationsResponseGetReport</code>, <code>InAppVoiceResponseGetReport</code>, <code>MessagesResponseGetReport</code>, <code>NumberInsightResponseGetReport</code>, <code>SmsResponseGetReport</code>, <code>VerifyApiResponseGetReport</code>, <code>VoiceCallResponseGetReport</code>, <code>WebsocketCallResponseGetReport</code>.
     * @param {(module:model/AsrResponseGetReport|module:model/ConversationsResponseGetReport|module:model/InAppVoiceResponseGetReport|module:model/MessagesResponseGetReport|module:model/NumberInsightResponseGetReport|module:model/SmsResponseGetReport|module:model/VerifyApiResponseGetReport|module:model/VoiceCallResponseGetReport|module:model/WebsocketCallResponseGetReport)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GetReport200Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GetReport200Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GetReport200Response} An instance of GetReport200Response.
     */
    static fromJSON = function(json_string){
        return GetReport200Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/Links} _links
 */
GetReport200Response.prototype['_links'] = undefined;

/**
 * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
 * @member {String} account_id
 */
GetReport200Response.prototype['account_id'] = undefined;

/**
 * URL to send a callback upon completion of the report. This POST callback contains the same information as the response to [Get status of report](/api/reports#get-report).
 * @member {String} callback_url
 */
GetReport200Response.prototype['callback_url'] = undefined;

/**
 * ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when report should end.  It is exclusive, i.e. the provided value is strictly greater than the value in the field `date_received` in the CDR. <br>If unspecified, defaults to the current time. 
 * @member {Date} date_end
 */
GetReport200Response.prototype['date_end'] = undefined;

/**
 * ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when reports  should begin. It filters on the time the API call was received by Vonage and corresponds to the field `date_received` (`date_start` for Voice) in the report file. It is inclusive, i.e. the provided value is less than or equal to the value in the field `date_received` (`date_start` for Voice) in the CDR.<br>If unspecified, defaults  to seven days ago. 
 * @member {Date} date_start
 */
GetReport200Response.prototype['date_start'] = undefined;

/**
 * Whether to include subaccounts or not.
 * @member {Boolean} include_subaccounts
 * @default false
 */
GetReport200Response.prototype['include_subaccounts'] = false;

/**
 * The number of rows in the resulting file (when report has been completed).
 * @member {Number} items_count
 */
GetReport200Response.prototype['items_count'] = undefined;

/**
 * @member {module:model/ProductAsr} product
 */
GetReport200Response.prototype['product'] = undefined;

/**
 * Time at which the report request was received by the service.
 * @member {Date} receive_time
 */
GetReport200Response.prototype['receive_time'] = undefined;

/**
 * UUID of the request.
 * @member {String} request_id
 */
GetReport200Response.prototype['request_id'] = undefined;

/**
 * @member {module:model/RequestStatus} request_status
 */
GetReport200Response.prototype['request_status'] = undefined;

/**
 * Time at which the report processing of the report has started.
 * @member {Date} start_time
 */
GetReport200Response.prototype['start_time'] = undefined;

/**
 * Search for messages with this `account_ref`.
 * @member {String} account_ref
 */
GetReport200Response.prototype['account_ref'] = undefined;

/**
 * Search for messages with this `client_ref`.
 * @member {String} client_ref
 */
GetReport200Response.prototype['client_ref'] = undefined;

/**
 * @member {module:model/Direction} direction
 */
GetReport200Response.prototype['direction'] = undefined;

/**
 * Request from this number.
 * @member {String} from
 */
GetReport200Response.prototype['from'] = undefined;

/**
 * Include the text of messages in the report.
 * @member {Boolean} include_message
 * @default false
 */
GetReport200Response.prototype['include_message'] = false;

/**
 * Network used to send the request.
 * @member {String} network
 */
GetReport200Response.prototype['network'] = undefined;

/**
 * Indicates whether the SMS was split up into multiple parts (due to its length).
 * @member {Boolean} show_concatenated
 * @default false
 */
GetReport200Response.prototype['show_concatenated'] = false;

/**
 * @member {module:model/AsrStatus} status
 */
GetReport200Response.prototype['status'] = undefined;

/**
 * Request to this number.
 * @member {String} to
 */
GetReport200Response.prototype['to'] = undefined;

/**
 * Search only for events sent to this particular Conversation. This should include the \"CON-\" prefix.
 * @member {String} conversation_id
 */
GetReport200Response.prototype['conversation_id'] = undefined;

/**
 * Search only request for the target number.
 * @member {String} number
 */
GetReport200Response.prototype['number'] = undefined;

/**
 * Search only messages with the specified uuid.
 * @member {String} id
 */
GetReport200Response.prototype['id'] = undefined;


GetReport200Response.OneOf = ["AsrResponseGetReport", "ConversationsResponseGetReport", "InAppVoiceResponseGetReport", "MessagesResponseGetReport", "NumberInsightResponseGetReport", "SmsResponseGetReport", "VerifyApiResponseGetReport", "VoiceCallResponseGetReport", "WebsocketCallResponseGetReport"];

export default GetReport200Response;

