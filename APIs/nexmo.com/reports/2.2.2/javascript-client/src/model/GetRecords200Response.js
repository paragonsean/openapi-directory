/**
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CsvConversations from './CsvConversations';
import GetRecords200ResponseOneOf from './GetRecords200ResponseOneOf';
import GetRecords200ResponseOneOf1 from './GetRecords200ResponseOneOf1';
import GetRecords200ResponseOneOf10 from './GetRecords200ResponseOneOf10';
import GetRecords200ResponseOneOf2 from './GetRecords200ResponseOneOf2';
import GetRecords200ResponseOneOf3 from './GetRecords200ResponseOneOf3';
import GetRecords200ResponseOneOf4 from './GetRecords200ResponseOneOf4';
import GetRecords200ResponseOneOf5 from './GetRecords200ResponseOneOf5';
import GetRecords200ResponseOneOf6 from './GetRecords200ResponseOneOf6';
import GetRecords200ResponseOneOf7 from './GetRecords200ResponseOneOf7';
import GetRecords200ResponseOneOf8 from './GetRecords200ResponseOneOf8';
import GetRecords200ResponseOneOf9 from './GetRecords200ResponseOneOf9';
import ProductConversations from './ProductConversations';
import ReportResponseTopLevelLinks from './ReportResponseTopLevelLinks';
import RequestStatus from './RequestStatus';

/**
 * The GetRecords200Response model module.
 * @module model/GetRecords200Response
 * @version 2.2.2
 */
class GetRecords200Response {
    /**
     * Constructs a new <code>GetRecords200Response</code>.
     * @alias module:model/GetRecords200Response
     * @param {(module:model/GetRecords200ResponseOneOf|module:model/GetRecords200ResponseOneOf1|module:model/GetRecords200ResponseOneOf10|module:model/GetRecords200ResponseOneOf2|module:model/GetRecords200ResponseOneOf3|module:model/GetRecords200ResponseOneOf4|module:model/GetRecords200ResponseOneOf5|module:model/GetRecords200ResponseOneOf6|module:model/GetRecords200ResponseOneOf7|module:model/GetRecords200ResponseOneOf8|module:model/GetRecords200ResponseOneOf9)} instance The actual instance to initialize GetRecords200Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "GetRecords200ResponseOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf from JS object
                this.actualInstance = GetRecords200ResponseOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf1") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf1.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf1 from JS object
                this.actualInstance = GetRecords200ResponseOneOf1.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf1
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf1: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf2") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf2.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf2 from JS object
                this.actualInstance = GetRecords200ResponseOneOf2.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf2
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf2: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf3") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf3.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf3 from JS object
                this.actualInstance = GetRecords200ResponseOneOf3.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf3
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf3: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf4") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf4.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf4 from JS object
                this.actualInstance = GetRecords200ResponseOneOf4.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf4
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf4: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf5") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf5.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf5 from JS object
                this.actualInstance = GetRecords200ResponseOneOf5.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf5
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf5: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf6") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf6.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf6 from JS object
                this.actualInstance = GetRecords200ResponseOneOf6.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf6
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf6: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf7") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf7.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf7 from JS object
                this.actualInstance = GetRecords200ResponseOneOf7.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf7
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf7: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf8") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf8.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf8 from JS object
                this.actualInstance = GetRecords200ResponseOneOf8.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf8
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf8: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf9") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf9.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf9 from JS object
                this.actualInstance = GetRecords200ResponseOneOf9.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf9
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf9: " + err)
        }

        try {
            if (typeof instance === "GetRecords200ResponseOneOf10") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GetRecords200ResponseOneOf10.validateJSON(instance); // throw an exception if no match
                // create GetRecords200ResponseOneOf10 from JS object
                this.actualInstance = GetRecords200ResponseOneOf10.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GetRecords200ResponseOneOf10
            errorMessages.push("Failed to construct GetRecords200ResponseOneOf10: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GetRecords200Response` with oneOf schemas GetRecords200ResponseOneOf, GetRecords200ResponseOneOf1, GetRecords200ResponseOneOf10, GetRecords200ResponseOneOf2, GetRecords200ResponseOneOf3, GetRecords200ResponseOneOf4, GetRecords200ResponseOneOf5, GetRecords200ResponseOneOf6, GetRecords200ResponseOneOf7, GetRecords200ResponseOneOf8, GetRecords200ResponseOneOf9. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GetRecords200Response` with oneOf schemas GetRecords200ResponseOneOf, GetRecords200ResponseOneOf1, GetRecords200ResponseOneOf10, GetRecords200ResponseOneOf2, GetRecords200ResponseOneOf3, GetRecords200ResponseOneOf4, GetRecords200ResponseOneOf5, GetRecords200ResponseOneOf6, GetRecords200ResponseOneOf7, GetRecords200ResponseOneOf8, GetRecords200ResponseOneOf9. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GetRecords200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetRecords200Response} obj Optional instance to populate.
     * @return {module:model/GetRecords200Response} The populated <code>GetRecords200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GetRecords200Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>GetRecords200ResponseOneOf</code>, <code>GetRecords200ResponseOneOf1</code>, <code>GetRecords200ResponseOneOf10</code>, <code>GetRecords200ResponseOneOf2</code>, <code>GetRecords200ResponseOneOf3</code>, <code>GetRecords200ResponseOneOf4</code>, <code>GetRecords200ResponseOneOf5</code>, <code>GetRecords200ResponseOneOf6</code>, <code>GetRecords200ResponseOneOf7</code>, <code>GetRecords200ResponseOneOf8</code>, <code>GetRecords200ResponseOneOf9</code>.
     * @return {(module:model/GetRecords200ResponseOneOf|module:model/GetRecords200ResponseOneOf1|module:model/GetRecords200ResponseOneOf10|module:model/GetRecords200ResponseOneOf2|module:model/GetRecords200ResponseOneOf3|module:model/GetRecords200ResponseOneOf4|module:model/GetRecords200ResponseOneOf5|module:model/GetRecords200ResponseOneOf6|module:model/GetRecords200ResponseOneOf7|module:model/GetRecords200ResponseOneOf8|module:model/GetRecords200ResponseOneOf9)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>GetRecords200ResponseOneOf</code>, <code>GetRecords200ResponseOneOf1</code>, <code>GetRecords200ResponseOneOf10</code>, <code>GetRecords200ResponseOneOf2</code>, <code>GetRecords200ResponseOneOf3</code>, <code>GetRecords200ResponseOneOf4</code>, <code>GetRecords200ResponseOneOf5</code>, <code>GetRecords200ResponseOneOf6</code>, <code>GetRecords200ResponseOneOf7</code>, <code>GetRecords200ResponseOneOf8</code>, <code>GetRecords200ResponseOneOf9</code>.
     * @param {(module:model/GetRecords200ResponseOneOf|module:model/GetRecords200ResponseOneOf1|module:model/GetRecords200ResponseOneOf10|module:model/GetRecords200ResponseOneOf2|module:model/GetRecords200ResponseOneOf3|module:model/GetRecords200ResponseOneOf4|module:model/GetRecords200ResponseOneOf5|module:model/GetRecords200ResponseOneOf6|module:model/GetRecords200ResponseOneOf7|module:model/GetRecords200ResponseOneOf8|module:model/GetRecords200ResponseOneOf9)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GetRecords200Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GetRecords200Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GetRecords200Response} An instance of GetRecords200Response.
     */
    static fromJSON = function(json_string){
        return GetRecords200Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/ReportResponseTopLevelLinks} _links
 */
GetRecords200Response.prototype['_links'] = undefined;

/**
 * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
 * @member {String} account_id
 */
GetRecords200Response.prototype['account_id'] = undefined;

/**
 * Currency of the price of the request.
 * @member {String} currency
 */
GetRecords200Response.prototype['currency'] = undefined;

/**
 * If you request multiple records using a comma-separated list of UUIDs, then the UUIDs of any records not found are listed in this field.
 * @member {String} ids_not_found
 */
GetRecords200Response.prototype['ids_not_found'] = undefined;

/**
 * Price of the request.
 * @member {String} price
 */
GetRecords200Response.prototype['price'] = undefined;

/**
 * Time at which the report request was received by the service.
 * @member {Date} received_at
 */
GetRecords200Response.prototype['received_at'] = undefined;

/**
 * UUID of the request.
 * @member {String} request_id
 */
GetRecords200Response.prototype['request_id'] = undefined;

/**
 * @member {module:model/RequestStatus} request_status
 */
GetRecords200Response.prototype['request_status'] = undefined;

/**
 * Direction of the communication, either `inbound` (received by our services), or `outbound` (originated from our services). Required for products `SMS` and `MESSAGES`. Optional for `VOICE-CALL`. Invalid for `IN-APP-VOICE`, `CONVERSATIONS`, `NUMBER-INSIGHT`, `VERIFY-API`.
 * @member {module:model/GetRecords200Response.DirectionEnum} direction
 */
GetRecords200Response.prototype['direction'] = undefined;

/**
 * Include the text of messages in the report.
 * @member {Boolean} include_message
 */
GetRecords200Response.prototype['include_message'] = undefined;

/**
 * The number of returned records
 * @member {Number} items_count
 */
GetRecords200Response.prototype['items_count'] = undefined;

/**
 * @member {module:model/ProductConversations} product
 */
GetRecords200Response.prototype['product'] = undefined;

/**
 * Records in JSON format
 * @member {Array.<module:model/CsvConversations>} records
 */
GetRecords200Response.prototype['records'] = undefined;

/**
 * Indicates whether the SMS was split up into multiple parts (due to its length).
 * @member {Boolean} show_concatenated
 */
GetRecords200Response.prototype['show_concatenated'] = undefined;


GetRecords200Response.OneOf = ["GetRecords200ResponseOneOf", "GetRecords200ResponseOneOf1", "GetRecords200ResponseOneOf10", "GetRecords200ResponseOneOf2", "GetRecords200ResponseOneOf3", "GetRecords200ResponseOneOf4", "GetRecords200ResponseOneOf5", "GetRecords200ResponseOneOf6", "GetRecords200ResponseOneOf7", "GetRecords200ResponseOneOf8", "GetRecords200ResponseOneOf9"];

export default GetRecords200Response;

