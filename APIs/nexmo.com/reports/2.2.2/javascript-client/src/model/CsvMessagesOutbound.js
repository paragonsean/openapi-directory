/**
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Direction from './Direction';

/**
 * The CsvMessagesOutbound model module.
 * @module model/CsvMessagesOutbound
 * @version 2.2.2
 */
class CsvMessagesOutbound {
    /**
     * Constructs a new <code>CsvMessagesOutbound</code>.
     * Outbound Messages
     * @alias module:model/CsvMessagesOutbound
     */
    constructor() { 
        
        CsvMessagesOutbound.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CsvMessagesOutbound</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CsvMessagesOutbound} obj Optional instance to populate.
     * @return {module:model/CsvMessagesOutbound} The populated <code>CsvMessagesOutbound</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CsvMessagesOutbound();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('client_ref')) {
                obj['client_ref'] = ApiClient.convertToType(data['client_ref'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('country_name')) {
                obj['country_name'] = ApiClient.convertToType(data['country_name'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('date_finalized')) {
                obj['date_finalized'] = ApiClient.convertToType(data['date_finalized'], 'Date');
            }
            if (data.hasOwnProperty('date_received')) {
                obj['date_received'] = ApiClient.convertToType(data['date_received'], 'Date');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = Direction.constructFromObject(data['direction']);
            }
            if (data.hasOwnProperty('error_code')) {
                obj['error_code'] = ApiClient.convertToType(data['error_code'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('latency')) {
                obj['latency'] = ApiClient.convertToType(data['latency'], 'Number');
            }
            if (data.hasOwnProperty('message_body')) {
                obj['message_body'] = ApiClient.convertToType(data['message_body'], 'String');
            }
            if (data.hasOwnProperty('message_id')) {
                obj['message_id'] = ApiClient.convertToType(data['message_id'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('total_price')) {
                obj['total_price'] = ApiClient.convertToType(data['total_price'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CsvMessagesOutbound</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CsvMessagesOutbound</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['client_ref'] && !(typeof data['client_ref'] === 'string' || data['client_ref'] instanceof String)) {
            throw new Error("Expected the field `client_ref` to be a primitive type in the JSON string but got " + data['client_ref']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['country_name'] && !(typeof data['country_name'] === 'string' || data['country_name'] instanceof String)) {
            throw new Error("Expected the field `country_name` to be a primitive type in the JSON string but got " + data['country_name']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['error_code'] && !(typeof data['error_code'] === 'string' || data['error_code'] instanceof String)) {
            throw new Error("Expected the field `error_code` to be a primitive type in the JSON string but got " + data['error_code']);
        }
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['message_body'] && !(typeof data['message_body'] === 'string' || data['message_body'] instanceof String)) {
            throw new Error("Expected the field `message_body` to be a primitive type in the JSON string but got " + data['message_body']);
        }
        // ensure the json data is a string
        if (data['message_id'] && !(typeof data['message_id'] === 'string' || data['message_id'] instanceof String)) {
            throw new Error("Expected the field `message_id` to be a primitive type in the JSON string but got " + data['message_id']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }

        return true;
    }


}



/**
 * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
 * @member {String} account_id
 */
CsvMessagesOutbound.prototype['account_id'] = undefined;

/**
 * Search for messages with this `client_ref`.
 * @member {String} client_ref
 */
CsvMessagesOutbound.prototype['client_ref'] = undefined;

/**
 * Country where the request was sent.
 * @member {String} country
 */
CsvMessagesOutbound.prototype['country'] = undefined;

/**
 * Country name where the request was sent.
 * @member {String} country_name
 */
CsvMessagesOutbound.prototype['country_name'] = undefined;

/**
 * Currency of the price of the request.
 * @member {String} currency
 */
CsvMessagesOutbound.prototype['currency'] = undefined;

/**
 * Date when the request was finalized.
 * @member {Date} date_finalized
 */
CsvMessagesOutbound.prototype['date_finalized'] = undefined;

/**
 * Date of the request.
 * @member {Date} date_received
 */
CsvMessagesOutbound.prototype['date_received'] = undefined;

/**
 * @member {module:model/Direction} direction
 */
CsvMessagesOutbound.prototype['direction'] = undefined;

/**
 * Error code of the message.
 * @member {String} error_code
 */
CsvMessagesOutbound.prototype['error_code'] = undefined;

/**
 * Request from this number.
 * @member {String} from
 */
CsvMessagesOutbound.prototype['from'] = undefined;

/**
 * Latency of the request in ms.
 * @member {Number} latency
 */
CsvMessagesOutbound.prototype['latency'] = undefined;

/**
 * Body of the message sent. Only present if include_message parameter is set to true.
 * @member {String} message_body
 */
CsvMessagesOutbound.prototype['message_body'] = undefined;

/**
 * Id of the request.
 * @member {String} message_id
 */
CsvMessagesOutbound.prototype['message_id'] = undefined;

/**
 * Provider of the message.
 * @member {String} provider
 */
CsvMessagesOutbound.prototype['provider'] = undefined;

/**
 * Status of the message.
 * @member {String} status
 */
CsvMessagesOutbound.prototype['status'] = undefined;

/**
 * Request to this number.
 * @member {String} to
 */
CsvMessagesOutbound.prototype['to'] = undefined;

/**
 * Total price of the request.
 * @member {String} total_price
 */
CsvMessagesOutbound.prototype['total_price'] = undefined;






export default CsvMessagesOutbound;

