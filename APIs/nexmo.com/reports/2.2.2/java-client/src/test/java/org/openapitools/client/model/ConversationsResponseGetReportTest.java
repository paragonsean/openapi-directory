/*
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.Links;
import org.openapitools.client.model.ProductConversations;
import org.openapitools.client.model.RequestStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ConversationsResponseGetReport
 */
public class ConversationsResponseGetReportTest {
    private final ConversationsResponseGetReport model = new ConversationsResponseGetReport();

    /**
     * Model tests for ConversationsResponseGetReport
     */
    @Test
    public void testConversationsResponseGetReport() {
        // TODO: test ConversationsResponseGetReport
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'callbackUrl'
     */
    @Test
    public void callbackUrlTest() {
        // TODO: test callbackUrl
    }

    /**
     * Test the property 'dateEnd'
     */
    @Test
    public void dateEndTest() {
        // TODO: test dateEnd
    }

    /**
     * Test the property 'dateStart'
     */
    @Test
    public void dateStartTest() {
        // TODO: test dateStart
    }

    /**
     * Test the property 'includeSubaccounts'
     */
    @Test
    public void includeSubaccountsTest() {
        // TODO: test includeSubaccounts
    }

    /**
     * Test the property 'itemsCount'
     */
    @Test
    public void itemsCountTest() {
        // TODO: test itemsCount
    }

    /**
     * Test the property 'product'
     */
    @Test
    public void productTest() {
        // TODO: test product
    }

    /**
     * Test the property 'receiveTime'
     */
    @Test
    public void receiveTimeTest() {
        // TODO: test receiveTime
    }

    /**
     * Test the property 'requestId'
     */
    @Test
    public void requestIdTest() {
        // TODO: test requestId
    }

    /**
     * Test the property 'requestStatus'
     */
    @Test
    public void requestStatusTest() {
        // TODO: test requestStatus
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'conversationId'
     */
    @Test
    public void conversationIdTest() {
        // TODO: test conversationId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
