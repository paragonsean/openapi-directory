/*
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CsvVerify
 */
public class CsvVerifyTest {
    private final CsvVerify model = new CsvVerify();

    /**
     * Model tests for CsvVerify
     */
    @Test
    public void testCsvVerify() {
        // TODO: test CsvVerify
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'countryName'
     */
    @Test
    public void countryNameTest() {
        // TODO: test countryName
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'dateFinalized'
     */
    @Test
    public void dateFinalizedTest() {
        // TODO: test dateFinalized
    }

    /**
     * Test the property 'dateReceived'
     */
    @Test
    public void dateReceivedTest() {
        // TODO: test dateReceived
    }

    /**
     * Test the property 'estimatedPrice'
     */
    @Test
    public void estimatedPriceTest() {
        // TODO: test estimatedPrice
    }

    /**
     * Test the property 'firstEventDate'
     */
    @Test
    public void firstEventDateTest() {
        // TODO: test firstEventDate
    }

    /**
     * Test the property 'from'
     */
    @Test
    public void fromTest() {
        // TODO: test from
    }

    /**
     * Test the property 'lastEventDate'
     */
    @Test
    public void lastEventDateTest() {
        // TODO: test lastEventDate
    }

    /**
     * Test the property 'locale'
     */
    @Test
    public void localeTest() {
        // TODO: test locale
    }

    /**
     * Test the property 'network'
     */
    @Test
    public void networkTest() {
        // TODO: test network
    }

    /**
     * Test the property 'networkName'
     */
    @Test
    public void networkNameTest() {
        // TODO: test networkName
    }

    /**
     * Test the property 'numberType'
     */
    @Test
    public void numberTypeTest() {
        // TODO: test numberType
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'pricingModel'
     */
    @Test
    public void pricingModelTest() {
        // TODO: test pricingModel
    }

    /**
     * Test the property 'requestId'
     */
    @Test
    public void requestIdTest() {
        // TODO: test requestId
    }

    /**
     * Test the property 'smsEventCount'
     */
    @Test
    public void smsEventCountTest() {
        // TODO: test smsEventCount
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'ttsEventCount'
     */
    @Test
    public void ttsEventCountTest() {
        // TODO: test ttsEventCount
    }

    /**
     * Test the property 'verifyStatus'
     */
    @Test
    public void verifyStatusTest() {
        // TODO: test verifyStatus
    }

}
