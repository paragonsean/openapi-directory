/**
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISms_fields.h
 *
 * SMS
 */

#ifndef OAISms_fields_H
#define OAISms_fields_H

#include <QJsonObject>

#include "OAIDirection.h"
#include "OAIProduct_sms.h"
#include "OAISms_status.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISms_fields : public OAIObject {
public:
    OAISms_fields();
    OAISms_fields(QString json);
    ~OAISms_fields() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountRef() const;
    void setAccountRef(const QString &account_ref);
    bool is_account_ref_Set() const;
    bool is_account_ref_Valid() const;

    QString getClientRef() const;
    void setClientRef(const QString &client_ref);
    bool is_client_ref_Set() const;
    bool is_client_ref_Valid() const;

    OAIDirection getDirection() const;
    void setDirection(const OAIDirection &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    bool isIncludeMessage() const;
    void setIncludeMessage(const bool &include_message);
    bool is_include_message_Set() const;
    bool is_include_message_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    OAIProduct_sms getProduct() const;
    void setProduct(const OAIProduct_sms &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    bool isShowConcatenated() const;
    void setShowConcatenated(const bool &show_concatenated);
    bool is_show_concatenated_Set() const;
    bool is_show_concatenated_Valid() const;

    OAISms_status getStatus() const;
    void setStatus(const OAISms_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_ref;
    bool m_account_ref_isSet;
    bool m_account_ref_isValid;

    QString m_client_ref;
    bool m_client_ref_isSet;
    bool m_client_ref_isValid;

    OAIDirection m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    bool m_include_message;
    bool m_include_message_isSet;
    bool m_include_message_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    OAIProduct_sms m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    bool m_show_concatenated;
    bool m_show_concatenated_isSet;
    bool m_show_concatenated_isValid;

    OAISms_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISms_fields)

#endif // OAISms_fields_H
