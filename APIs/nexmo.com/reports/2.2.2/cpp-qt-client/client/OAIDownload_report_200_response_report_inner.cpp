/**
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDownload_report_200_response_report_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDownload_report_200_response_report_inner::OAIDownload_report_200_response_report_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDownload_report_200_response_report_inner::OAIDownload_report_200_response_report_inner() {
    this->initializeModel();
}

OAIDownload_report_200_response_report_inner::~OAIDownload_report_200_response_report_inner() {}

void OAIDownload_report_200_response_report_inner::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_client_ref_isSet = false;
    m_client_ref_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_country_name_isSet = false;
    m_country_name_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_date_finalized_isSet = false;
    m_date_finalized_isValid = false;

    m_date_received_isSet = false;
    m_date_received_isValid = false;

    m_direction_isSet = false;
    m_direction_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_code_description_isSet = false;
    m_error_code_description_isValid = false;

    m_from_isSet = false;
    m_from_isValid = false;

    m_latency_isSet = false;
    m_latency_isValid = false;

    m_message_body_isSet = false;
    m_message_body_isValid = false;

    m_message_id_isSet = false;
    m_message_id_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_network_name_isSet = false;
    m_network_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;

    m_total_price_isSet = false;
    m_total_price_isValid = false;

    m_call_id_isSet = false;
    m_call_id_isValid = false;

    m_date_end_isSet = false;
    m_date_end_isValid = false;

    m_date_start_isSet = false;
    m_date_start_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_status_description_isSet = false;
    m_status_description_isValid = false;

    m_application_id_isSet = false;
    m_application_id_isValid = false;

    m_conversation_id_isSet = false;
    m_conversation_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_leg_id_isSet = false;
    m_leg_id_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_estimated_price_isSet = false;
    m_estimated_price_isValid = false;

    m_first_event_date_isSet = false;
    m_first_event_date_isValid = false;

    m_last_event_date_isSet = false;
    m_last_event_date_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_number_type_isSet = false;
    m_number_type_isValid = false;

    m_pricing_model_isSet = false;
    m_pricing_model_isValid = false;

    m_sms_event_count_isSet = false;
    m_sms_event_count_isValid = false;

    m_tts_event_count_isSet = false;
    m_tts_event_count_isValid = false;

    m_verify_status_isSet = false;
    m_verify_status_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_network_type_isSet = false;
    m_network_type_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_ported_isSet = false;
    m_ported_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_reachable_isSet = false;
    m_reachable_isValid = false;

    m_response_code_isSet = false;
    m_response_code_isValid = false;

    m_r_valid_isSet = false;
    m_r_valid_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;

    m_call_date_start_isSet = false;
    m_call_date_start_isValid = false;
}

void OAIDownload_report_200_response_report_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDownload_report_200_response_report_inner::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_client_ref_isValid = ::OpenAPI::fromJsonValue(m_client_ref, json[QString("client_ref")]);
    m_client_ref_isSet = !json[QString("client_ref")].isNull() && m_client_ref_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_country_name_isValid = ::OpenAPI::fromJsonValue(m_country_name, json[QString("country_name")]);
    m_country_name_isSet = !json[QString("country_name")].isNull() && m_country_name_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_date_finalized_isValid = ::OpenAPI::fromJsonValue(m_date_finalized, json[QString("date_finalized")]);
    m_date_finalized_isSet = !json[QString("date_finalized")].isNull() && m_date_finalized_isValid;

    m_date_received_isValid = ::OpenAPI::fromJsonValue(m_date_received, json[QString("date_received")]);
    m_date_received_isSet = !json[QString("date_received")].isNull() && m_date_received_isValid;

    m_direction_isValid = ::OpenAPI::fromJsonValue(m_direction, json[QString("direction")]);
    m_direction_isSet = !json[QString("direction")].isNull() && m_direction_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("error_code")]);
    m_error_code_isSet = !json[QString("error_code")].isNull() && m_error_code_isValid;

    m_error_code_description_isValid = ::OpenAPI::fromJsonValue(m_error_code_description, json[QString("error_code_description")]);
    m_error_code_description_isSet = !json[QString("error_code_description")].isNull() && m_error_code_description_isValid;

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_latency_isValid = ::OpenAPI::fromJsonValue(m_latency, json[QString("latency")]);
    m_latency_isSet = !json[QString("latency")].isNull() && m_latency_isValid;

    m_message_body_isValid = ::OpenAPI::fromJsonValue(m_message_body, json[QString("message_body")]);
    m_message_body_isSet = !json[QString("message_body")].isNull() && m_message_body_isValid;

    m_message_id_isValid = ::OpenAPI::fromJsonValue(m_message_id, json[QString("message_id")]);
    m_message_id_isSet = !json[QString("message_id")].isNull() && m_message_id_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_network_name_isValid = ::OpenAPI::fromJsonValue(m_network_name, json[QString("network_name")]);
    m_network_name_isSet = !json[QString("network_name")].isNull() && m_network_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;

    m_total_price_isValid = ::OpenAPI::fromJsonValue(m_total_price, json[QString("total_price")]);
    m_total_price_isSet = !json[QString("total_price")].isNull() && m_total_price_isValid;

    m_call_id_isValid = ::OpenAPI::fromJsonValue(m_call_id, json[QString("call_id")]);
    m_call_id_isSet = !json[QString("call_id")].isNull() && m_call_id_isValid;

    m_date_end_isValid = ::OpenAPI::fromJsonValue(m_date_end, json[QString("date_end")]);
    m_date_end_isSet = !json[QString("date_end")].isNull() && m_date_end_isValid;

    m_date_start_isValid = ::OpenAPI::fromJsonValue(m_date_start, json[QString("date_start")]);
    m_date_start_isSet = !json[QString("date_start")].isNull() && m_date_start_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_status_description_isValid = ::OpenAPI::fromJsonValue(m_status_description, json[QString("status_description")]);
    m_status_description_isSet = !json[QString("status_description")].isNull() && m_status_description_isValid;

    m_application_id_isValid = ::OpenAPI::fromJsonValue(m_application_id, json[QString("application_id")]);
    m_application_id_isSet = !json[QString("application_id")].isNull() && m_application_id_isValid;

    m_conversation_id_isValid = ::OpenAPI::fromJsonValue(m_conversation_id, json[QString("conversation_id")]);
    m_conversation_id_isSet = !json[QString("conversation_id")].isNull() && m_conversation_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_leg_id_isValid = ::OpenAPI::fromJsonValue(m_leg_id, json[QString("leg_id")]);
    m_leg_id_isSet = !json[QString("leg_id")].isNull() && m_leg_id_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;

    m_estimated_price_isValid = ::OpenAPI::fromJsonValue(m_estimated_price, json[QString("estimated_price")]);
    m_estimated_price_isSet = !json[QString("estimated_price")].isNull() && m_estimated_price_isValid;

    m_first_event_date_isValid = ::OpenAPI::fromJsonValue(m_first_event_date, json[QString("first_event_date")]);
    m_first_event_date_isSet = !json[QString("first_event_date")].isNull() && m_first_event_date_isValid;

    m_last_event_date_isValid = ::OpenAPI::fromJsonValue(m_last_event_date, json[QString("last_event_date")]);
    m_last_event_date_isSet = !json[QString("last_event_date")].isNull() && m_last_event_date_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_number_type_isValid = ::OpenAPI::fromJsonValue(m_number_type, json[QString("number_type")]);
    m_number_type_isSet = !json[QString("number_type")].isNull() && m_number_type_isValid;

    m_pricing_model_isValid = ::OpenAPI::fromJsonValue(m_pricing_model, json[QString("pricing_model")]);
    m_pricing_model_isSet = !json[QString("pricing_model")].isNull() && m_pricing_model_isValid;

    m_sms_event_count_isValid = ::OpenAPI::fromJsonValue(m_sms_event_count, json[QString("sms_event_count")]);
    m_sms_event_count_isSet = !json[QString("sms_event_count")].isNull() && m_sms_event_count_isValid;

    m_tts_event_count_isValid = ::OpenAPI::fromJsonValue(m_tts_event_count, json[QString("tts_event_count")]);
    m_tts_event_count_isSet = !json[QString("tts_event_count")].isNull() && m_tts_event_count_isValid;

    m_verify_status_isValid = ::OpenAPI::fromJsonValue(m_verify_status, json[QString("verify_status")]);
    m_verify_status_isSet = !json[QString("verify_status")].isNull() && m_verify_status_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_network_type_isValid = ::OpenAPI::fromJsonValue(m_network_type, json[QString("network_type")]);
    m_network_type_isSet = !json[QString("network_type")].isNull() && m_network_type_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_ported_isValid = ::OpenAPI::fromJsonValue(m_ported, json[QString("ported")]);
    m_ported_isSet = !json[QString("ported")].isNull() && m_ported_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("product_type")]);
    m_product_type_isSet = !json[QString("product_type")].isNull() && m_product_type_isValid;

    m_reachable_isValid = ::OpenAPI::fromJsonValue(m_reachable, json[QString("reachable")]);
    m_reachable_isSet = !json[QString("reachable")].isNull() && m_reachable_isValid;

    m_response_code_isValid = ::OpenAPI::fromJsonValue(m_response_code, json[QString("response_code")]);
    m_response_code_isSet = !json[QString("response_code")].isNull() && m_response_code_isValid;

    m_r_valid_isValid = ::OpenAPI::fromJsonValue(m_r_valid, json[QString("valid")]);
    m_r_valid_isSet = !json[QString("valid")].isNull() && m_r_valid_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;

    m_call_date_start_isValid = ::OpenAPI::fromJsonValue(m_call_date_start, json[QString("call_date_start")]);
    m_call_date_start_isSet = !json[QString("call_date_start")].isNull() && m_call_date_start_isValid;
}

QString OAIDownload_report_200_response_report_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDownload_report_200_response_report_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_client_ref_isSet) {
        obj.insert(QString("client_ref"), ::OpenAPI::toJsonValue(m_client_ref));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_country_name_isSet) {
        obj.insert(QString("country_name"), ::OpenAPI::toJsonValue(m_country_name));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_date_finalized_isSet) {
        obj.insert(QString("date_finalized"), ::OpenAPI::toJsonValue(m_date_finalized));
    }
    if (m_date_received_isSet) {
        obj.insert(QString("date_received"), ::OpenAPI::toJsonValue(m_date_received));
    }
    if (m_direction.isSet()) {
        obj.insert(QString("direction"), ::OpenAPI::toJsonValue(m_direction));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("error_code"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_code_description_isSet) {
        obj.insert(QString("error_code_description"), ::OpenAPI::toJsonValue(m_error_code_description));
    }
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_latency_isSet) {
        obj.insert(QString("latency"), ::OpenAPI::toJsonValue(m_latency));
    }
    if (m_message_body_isSet) {
        obj.insert(QString("message_body"), ::OpenAPI::toJsonValue(m_message_body));
    }
    if (m_message_id_isSet) {
        obj.insert(QString("message_id"), ::OpenAPI::toJsonValue(m_message_id));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_network_name_isSet) {
        obj.insert(QString("network_name"), ::OpenAPI::toJsonValue(m_network_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    if (m_total_price_isSet) {
        obj.insert(QString("total_price"), ::OpenAPI::toJsonValue(m_total_price));
    }
    if (m_call_id_isSet) {
        obj.insert(QString("call_id"), ::OpenAPI::toJsonValue(m_call_id));
    }
    if (m_date_end_isSet) {
        obj.insert(QString("date_end"), ::OpenAPI::toJsonValue(m_date_end));
    }
    if (m_date_start_isSet) {
        obj.insert(QString("date_start"), ::OpenAPI::toJsonValue(m_date_start));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_status_description_isSet) {
        obj.insert(QString("status_description"), ::OpenAPI::toJsonValue(m_status_description));
    }
    if (m_application_id_isSet) {
        obj.insert(QString("application_id"), ::OpenAPI::toJsonValue(m_application_id));
    }
    if (m_conversation_id_isSet) {
        obj.insert(QString("conversation_id"), ::OpenAPI::toJsonValue(m_conversation_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_leg_id_isSet) {
        obj.insert(QString("leg_id"), ::OpenAPI::toJsonValue(m_leg_id));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_estimated_price_isSet) {
        obj.insert(QString("estimated_price"), ::OpenAPI::toJsonValue(m_estimated_price));
    }
    if (m_first_event_date_isSet) {
        obj.insert(QString("first_event_date"), ::OpenAPI::toJsonValue(m_first_event_date));
    }
    if (m_last_event_date_isSet) {
        obj.insert(QString("last_event_date"), ::OpenAPI::toJsonValue(m_last_event_date));
    }
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_number_type_isSet) {
        obj.insert(QString("number_type"), ::OpenAPI::toJsonValue(m_number_type));
    }
    if (m_pricing_model_isSet) {
        obj.insert(QString("pricing_model"), ::OpenAPI::toJsonValue(m_pricing_model));
    }
    if (m_sms_event_count_isSet) {
        obj.insert(QString("sms_event_count"), ::OpenAPI::toJsonValue(m_sms_event_count));
    }
    if (m_tts_event_count_isSet) {
        obj.insert(QString("tts_event_count"), ::OpenAPI::toJsonValue(m_tts_event_count));
    }
    if (m_verify_status_isSet) {
        obj.insert(QString("verify_status"), ::OpenAPI::toJsonValue(m_verify_status));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_network_type_isSet) {
        obj.insert(QString("network_type"), ::OpenAPI::toJsonValue(m_network_type));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_ported_isSet) {
        obj.insert(QString("ported"), ::OpenAPI::toJsonValue(m_ported));
    }
    if (m_product_type_isSet) {
        obj.insert(QString("product_type"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_reachable_isSet) {
        obj.insert(QString("reachable"), ::OpenAPI::toJsonValue(m_reachable));
    }
    if (m_response_code_isSet) {
        obj.insert(QString("response_code"), ::OpenAPI::toJsonValue(m_response_code));
    }
    if (m_r_valid_isSet) {
        obj.insert(QString("valid"), ::OpenAPI::toJsonValue(m_r_valid));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    if (m_call_date_start_isSet) {
        obj.insert(QString("call_date_start"), ::OpenAPI::toJsonValue(m_call_date_start));
    }
    return obj;
}

QString OAIDownload_report_200_response_report_inner::getAccountId() const {
    return m_account_id;
}
void OAIDownload_report_200_response_report_inner::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIDownload_report_200_response_report_inner::getClientRef() const {
    return m_client_ref;
}
void OAIDownload_report_200_response_report_inner::setClientRef(const QString &client_ref) {
    m_client_ref = client_ref;
    m_client_ref_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_client_ref_Set() const{
    return m_client_ref_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_client_ref_Valid() const{
    return m_client_ref_isValid;
}

QString OAIDownload_report_200_response_report_inner::getCountry() const {
    return m_country;
}
void OAIDownload_report_200_response_report_inner::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_country_Set() const{
    return m_country_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIDownload_report_200_response_report_inner::getCountryName() const {
    return m_country_name;
}
void OAIDownload_report_200_response_report_inner::setCountryName(const QString &country_name) {
    m_country_name = country_name;
    m_country_name_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_country_name_Set() const{
    return m_country_name_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_country_name_Valid() const{
    return m_country_name_isValid;
}

QString OAIDownload_report_200_response_report_inner::getCurrency() const {
    return m_currency;
}
void OAIDownload_report_200_response_report_inner::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_currency_Valid() const{
    return m_currency_isValid;
}

QDate OAIDownload_report_200_response_report_inner::getDateFinalized() const {
    return m_date_finalized;
}
void OAIDownload_report_200_response_report_inner::setDateFinalized(const QDate &date_finalized) {
    m_date_finalized = date_finalized;
    m_date_finalized_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_date_finalized_Set() const{
    return m_date_finalized_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_date_finalized_Valid() const{
    return m_date_finalized_isValid;
}

QDate OAIDownload_report_200_response_report_inner::getDateReceived() const {
    return m_date_received;
}
void OAIDownload_report_200_response_report_inner::setDateReceived(const QDate &date_received) {
    m_date_received = date_received;
    m_date_received_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_date_received_Set() const{
    return m_date_received_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_date_received_Valid() const{
    return m_date_received_isValid;
}

OAIDirection OAIDownload_report_200_response_report_inner::getDirection() const {
    return m_direction;
}
void OAIDownload_report_200_response_report_inner::setDirection(const OAIDirection &direction) {
    m_direction = direction;
    m_direction_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_direction_Set() const{
    return m_direction_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_direction_Valid() const{
    return m_direction_isValid;
}

QString OAIDownload_report_200_response_report_inner::getErrorCode() const {
    return m_error_code;
}
void OAIDownload_report_200_response_report_inner::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIDownload_report_200_response_report_inner::getErrorCodeDescription() const {
    return m_error_code_description;
}
void OAIDownload_report_200_response_report_inner::setErrorCodeDescription(const QString &error_code_description) {
    m_error_code_description = error_code_description;
    m_error_code_description_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_error_code_description_Set() const{
    return m_error_code_description_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_error_code_description_Valid() const{
    return m_error_code_description_isValid;
}

QString OAIDownload_report_200_response_report_inner::getFrom() const {
    return m_from;
}
void OAIDownload_report_200_response_report_inner::setFrom(const QString &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_from_Set() const{
    return m_from_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_from_Valid() const{
    return m_from_isValid;
}

qint32 OAIDownload_report_200_response_report_inner::getLatency() const {
    return m_latency;
}
void OAIDownload_report_200_response_report_inner::setLatency(const qint32 &latency) {
    m_latency = latency;
    m_latency_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_latency_Set() const{
    return m_latency_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_latency_Valid() const{
    return m_latency_isValid;
}

QString OAIDownload_report_200_response_report_inner::getMessageBody() const {
    return m_message_body;
}
void OAIDownload_report_200_response_report_inner::setMessageBody(const QString &message_body) {
    m_message_body = message_body;
    m_message_body_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_message_body_Set() const{
    return m_message_body_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_message_body_Valid() const{
    return m_message_body_isValid;
}

QString OAIDownload_report_200_response_report_inner::getMessageId() const {
    return m_message_id;
}
void OAIDownload_report_200_response_report_inner::setMessageId(const QString &message_id) {
    m_message_id = message_id;
    m_message_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_message_id_Valid() const{
    return m_message_id_isValid;
}

QString OAIDownload_report_200_response_report_inner::getNetwork() const {
    return m_network;
}
void OAIDownload_report_200_response_report_inner::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_network_Set() const{
    return m_network_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_network_Valid() const{
    return m_network_isValid;
}

QString OAIDownload_report_200_response_report_inner::getNetworkName() const {
    return m_network_name;
}
void OAIDownload_report_200_response_report_inner::setNetworkName(const QString &network_name) {
    m_network_name = network_name;
    m_network_name_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_network_name_Set() const{
    return m_network_name_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_network_name_Valid() const{
    return m_network_name_isValid;
}

OAIAsr_status OAIDownload_report_200_response_report_inner::getStatus() const {
    return m_status;
}
void OAIDownload_report_200_response_report_inner::setStatus(const OAIAsr_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIDownload_report_200_response_report_inner::getTo() const {
    return m_to;
}
void OAIDownload_report_200_response_report_inner::setTo(const QString &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_to_Set() const{
    return m_to_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_to_Valid() const{
    return m_to_isValid;
}

QString OAIDownload_report_200_response_report_inner::getTotalPrice() const {
    return m_total_price;
}
void OAIDownload_report_200_response_report_inner::setTotalPrice(const QString &total_price) {
    m_total_price = total_price;
    m_total_price_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_total_price_Set() const{
    return m_total_price_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_total_price_Valid() const{
    return m_total_price_isValid;
}

QString OAIDownload_report_200_response_report_inner::getCallId() const {
    return m_call_id;
}
void OAIDownload_report_200_response_report_inner::setCallId(const QString &call_id) {
    m_call_id = call_id;
    m_call_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_call_id_Set() const{
    return m_call_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_call_id_Valid() const{
    return m_call_id_isValid;
}

QDate OAIDownload_report_200_response_report_inner::getDateEnd() const {
    return m_date_end;
}
void OAIDownload_report_200_response_report_inner::setDateEnd(const QDate &date_end) {
    m_date_end = date_end;
    m_date_end_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_date_end_Set() const{
    return m_date_end_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_date_end_Valid() const{
    return m_date_end_isValid;
}

QDate OAIDownload_report_200_response_report_inner::getDateStart() const {
    return m_date_start;
}
void OAIDownload_report_200_response_report_inner::setDateStart(const QDate &date_start) {
    m_date_start = date_start;
    m_date_start_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_date_start_Set() const{
    return m_date_start_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_date_start_Valid() const{
    return m_date_start_isValid;
}

qint32 OAIDownload_report_200_response_report_inner::getDuration() const {
    return m_duration;
}
void OAIDownload_report_200_response_report_inner::setDuration(const qint32 &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIDownload_report_200_response_report_inner::getPrice() const {
    return m_price;
}
void OAIDownload_report_200_response_report_inner::setPrice(const QString &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_price_Set() const{
    return m_price_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIDownload_report_200_response_report_inner::getStatusDescription() const {
    return m_status_description;
}
void OAIDownload_report_200_response_report_inner::setStatusDescription(const QString &status_description) {
    m_status_description = status_description;
    m_status_description_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_status_description_Set() const{
    return m_status_description_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_status_description_Valid() const{
    return m_status_description_isValid;
}

QString OAIDownload_report_200_response_report_inner::getApplicationId() const {
    return m_application_id;
}
void OAIDownload_report_200_response_report_inner::setApplicationId(const QString &application_id) {
    m_application_id = application_id;
    m_application_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_application_id_Set() const{
    return m_application_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_application_id_Valid() const{
    return m_application_id_isValid;
}

QString OAIDownload_report_200_response_report_inner::getConversationId() const {
    return m_conversation_id;
}
void OAIDownload_report_200_response_report_inner::setConversationId(const QString &conversation_id) {
    m_conversation_id = conversation_id;
    m_conversation_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_conversation_id_Set() const{
    return m_conversation_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_conversation_id_Valid() const{
    return m_conversation_id_isValid;
}

QString OAIDownload_report_200_response_report_inner::getId() const {
    return m_id;
}
void OAIDownload_report_200_response_report_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIDownload_report_200_response_report_inner::getLegId() const {
    return m_leg_id;
}
void OAIDownload_report_200_response_report_inner::setLegId(const QString &leg_id) {
    m_leg_id = leg_id;
    m_leg_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_leg_id_Set() const{
    return m_leg_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_leg_id_Valid() const{
    return m_leg_id_isValid;
}

QString OAIDownload_report_200_response_report_inner::getRequestId() const {
    return m_request_id;
}
void OAIDownload_report_200_response_report_inner::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_request_id_Valid() const{
    return m_request_id_isValid;
}

QString OAIDownload_report_200_response_report_inner::getUserId() const {
    return m_user_id;
}
void OAIDownload_report_200_response_report_inner::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIDownload_report_200_response_report_inner::getEstimatedPrice() const {
    return m_estimated_price;
}
void OAIDownload_report_200_response_report_inner::setEstimatedPrice(const QString &estimated_price) {
    m_estimated_price = estimated_price;
    m_estimated_price_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_estimated_price_Set() const{
    return m_estimated_price_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_estimated_price_Valid() const{
    return m_estimated_price_isValid;
}

QDate OAIDownload_report_200_response_report_inner::getFirstEventDate() const {
    return m_first_event_date;
}
void OAIDownload_report_200_response_report_inner::setFirstEventDate(const QDate &first_event_date) {
    m_first_event_date = first_event_date;
    m_first_event_date_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_first_event_date_Set() const{
    return m_first_event_date_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_first_event_date_Valid() const{
    return m_first_event_date_isValid;
}

QDate OAIDownload_report_200_response_report_inner::getLastEventDate() const {
    return m_last_event_date;
}
void OAIDownload_report_200_response_report_inner::setLastEventDate(const QDate &last_event_date) {
    m_last_event_date = last_event_date;
    m_last_event_date_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_last_event_date_Set() const{
    return m_last_event_date_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_last_event_date_Valid() const{
    return m_last_event_date_isValid;
}

QString OAIDownload_report_200_response_report_inner::getLocale() const {
    return m_locale;
}
void OAIDownload_report_200_response_report_inner::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIDownload_report_200_response_report_inner::getNumberType() const {
    return m_number_type;
}
void OAIDownload_report_200_response_report_inner::setNumberType(const QString &number_type) {
    m_number_type = number_type;
    m_number_type_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_number_type_Set() const{
    return m_number_type_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_number_type_Valid() const{
    return m_number_type_isValid;
}

QString OAIDownload_report_200_response_report_inner::getPricingModel() const {
    return m_pricing_model;
}
void OAIDownload_report_200_response_report_inner::setPricingModel(const QString &pricing_model) {
    m_pricing_model = pricing_model;
    m_pricing_model_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_pricing_model_Set() const{
    return m_pricing_model_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_pricing_model_Valid() const{
    return m_pricing_model_isValid;
}

qint32 OAIDownload_report_200_response_report_inner::getSmsEventCount() const {
    return m_sms_event_count;
}
void OAIDownload_report_200_response_report_inner::setSmsEventCount(const qint32 &sms_event_count) {
    m_sms_event_count = sms_event_count;
    m_sms_event_count_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_sms_event_count_Set() const{
    return m_sms_event_count_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_sms_event_count_Valid() const{
    return m_sms_event_count_isValid;
}

qint32 OAIDownload_report_200_response_report_inner::getTtsEventCount() const {
    return m_tts_event_count;
}
void OAIDownload_report_200_response_report_inner::setTtsEventCount(const qint32 &tts_event_count) {
    m_tts_event_count = tts_event_count;
    m_tts_event_count_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_tts_event_count_Set() const{
    return m_tts_event_count_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_tts_event_count_Valid() const{
    return m_tts_event_count_isValid;
}

QString OAIDownload_report_200_response_report_inner::getVerifyStatus() const {
    return m_verify_status;
}
void OAIDownload_report_200_response_report_inner::setVerifyStatus(const QString &verify_status) {
    m_verify_status = verify_status;
    m_verify_status_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_verify_status_Set() const{
    return m_verify_status_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_verify_status_Valid() const{
    return m_verify_status_isValid;
}

QString OAIDownload_report_200_response_report_inner::getFirstName() const {
    return m_first_name;
}
void OAIDownload_report_200_response_report_inner::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIDownload_report_200_response_report_inner::getLastName() const {
    return m_last_name;
}
void OAIDownload_report_200_response_report_inner::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIDownload_report_200_response_report_inner::getNetworkType() const {
    return m_network_type;
}
void OAIDownload_report_200_response_report_inner::setNetworkType(const QString &network_type) {
    m_network_type = network_type;
    m_network_type_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_network_type_Set() const{
    return m_network_type_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_network_type_Valid() const{
    return m_network_type_isValid;
}

QString OAIDownload_report_200_response_report_inner::getNumber() const {
    return m_number;
}
void OAIDownload_report_200_response_report_inner::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_number_Set() const{
    return m_number_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_number_Valid() const{
    return m_number_isValid;
}

QString OAIDownload_report_200_response_report_inner::getPorted() const {
    return m_ported;
}
void OAIDownload_report_200_response_report_inner::setPorted(const QString &ported) {
    m_ported = ported;
    m_ported_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_ported_Set() const{
    return m_ported_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_ported_Valid() const{
    return m_ported_isValid;
}

QString OAIDownload_report_200_response_report_inner::getProductType() const {
    return m_product_type;
}
void OAIDownload_report_200_response_report_inner::setProductType(const QString &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_product_type_Valid() const{
    return m_product_type_isValid;
}

QString OAIDownload_report_200_response_report_inner::getReachable() const {
    return m_reachable;
}
void OAIDownload_report_200_response_report_inner::setReachable(const QString &reachable) {
    m_reachable = reachable;
    m_reachable_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_reachable_Set() const{
    return m_reachable_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_reachable_Valid() const{
    return m_reachable_isValid;
}

QString OAIDownload_report_200_response_report_inner::getResponseCode() const {
    return m_response_code;
}
void OAIDownload_report_200_response_report_inner::setResponseCode(const QString &response_code) {
    m_response_code = response_code;
    m_response_code_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_response_code_Set() const{
    return m_response_code_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_response_code_Valid() const{
    return m_response_code_isValid;
}

QString OAIDownload_report_200_response_report_inner::getRValid() const {
    return m_r_valid;
}
void OAIDownload_report_200_response_report_inner::setRValid(const QString &r_valid) {
    m_r_valid = r_valid;
    m_r_valid_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_r_valid_Set() const{
    return m_r_valid_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_r_valid_Valid() const{
    return m_r_valid_isValid;
}

QString OAIDownload_report_200_response_report_inner::getProvider() const {
    return m_provider;
}
void OAIDownload_report_200_response_report_inner::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_provider_Valid() const{
    return m_provider_isValid;
}

QDate OAIDownload_report_200_response_report_inner::getCallDateStart() const {
    return m_call_date_start;
}
void OAIDownload_report_200_response_report_inner::setCallDateStart(const QDate &call_date_start) {
    m_call_date_start = call_date_start;
    m_call_date_start_isSet = true;
}

bool OAIDownload_report_200_response_report_inner::is_call_date_start_Set() const{
    return m_call_date_start_isSet;
}

bool OAIDownload_report_200_response_report_inner::is_call_date_start_Valid() const{
    return m_call_date_start_isValid;
}

bool OAIDownload_report_200_response_report_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_finalized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_received_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_start_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_application_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_leg_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_event_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_event_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_event_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tts_event_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verify_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ported_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reachable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_valid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_date_start_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDownload_report_200_response_report_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
