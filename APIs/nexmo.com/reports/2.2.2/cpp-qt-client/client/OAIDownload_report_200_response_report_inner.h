/**
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDownload_report_200_response_report_inner.h
 *
 * 
 */

#ifndef OAIDownload_report_200_response_report_inner_H
#define OAIDownload_report_200_response_report_inner_H

#include <QJsonObject>

#include "OAIAsr_status.h"
#include "OAICsv_asr.h"
#include "OAICsv_in_app_voice.h"
#include "OAICsv_messages_inbound.h"
#include "OAICsv_messages_outbound.h"
#include "OAICsv_ni.h"
#include "OAICsv_sms_inbound.h"
#include "OAICsv_sms_outbound.h"
#include "OAICsv_verify.h"
#include "OAICsv_voice.h"
#include "OAICsv_websockets.h"
#include "OAIDirection.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDownload_report_200_response_report_inner : public OAIObject {
public:
    OAIDownload_report_200_response_report_inner();
    OAIDownload_report_200_response_report_inner(QString json);
    ~OAIDownload_report_200_response_report_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getClientRef() const;
    void setClientRef(const QString &client_ref);
    bool is_client_ref_Set() const;
    bool is_client_ref_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryName() const;
    void setCountryName(const QString &country_name);
    bool is_country_name_Set() const;
    bool is_country_name_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QDate getDateFinalized() const;
    void setDateFinalized(const QDate &date_finalized);
    bool is_date_finalized_Set() const;
    bool is_date_finalized_Valid() const;

    QDate getDateReceived() const;
    void setDateReceived(const QDate &date_received);
    bool is_date_received_Set() const;
    bool is_date_received_Valid() const;

    OAIDirection getDirection() const;
    void setDirection(const OAIDirection &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorCodeDescription() const;
    void setErrorCodeDescription(const QString &error_code_description);
    bool is_error_code_description_Set() const;
    bool is_error_code_description_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    qint32 getLatency() const;
    void setLatency(const qint32 &latency);
    bool is_latency_Set() const;
    bool is_latency_Valid() const;

    QString getMessageBody() const;
    void setMessageBody(const QString &message_body);
    bool is_message_body_Set() const;
    bool is_message_body_Valid() const;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getNetworkName() const;
    void setNetworkName(const QString &network_name);
    bool is_network_name_Set() const;
    bool is_network_name_Valid() const;

    OAIAsr_status getStatus() const;
    void setStatus(const OAIAsr_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QString getTotalPrice() const;
    void setTotalPrice(const QString &total_price);
    bool is_total_price_Set() const;
    bool is_total_price_Valid() const;

    QString getCallId() const;
    void setCallId(const QString &call_id);
    bool is_call_id_Set() const;
    bool is_call_id_Valid() const;

    QDate getDateEnd() const;
    void setDateEnd(const QDate &date_end);
    bool is_date_end_Set() const;
    bool is_date_end_Valid() const;

    QDate getDateStart() const;
    void setDateStart(const QDate &date_start);
    bool is_date_start_Set() const;
    bool is_date_start_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getPrice() const;
    void setPrice(const QString &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getStatusDescription() const;
    void setStatusDescription(const QString &status_description);
    bool is_status_description_Set() const;
    bool is_status_description_Valid() const;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getConversationId() const;
    void setConversationId(const QString &conversation_id);
    bool is_conversation_id_Set() const;
    bool is_conversation_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLegId() const;
    void setLegId(const QString &leg_id);
    bool is_leg_id_Set() const;
    bool is_leg_id_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getEstimatedPrice() const;
    void setEstimatedPrice(const QString &estimated_price);
    bool is_estimated_price_Set() const;
    bool is_estimated_price_Valid() const;

    QDate getFirstEventDate() const;
    void setFirstEventDate(const QDate &first_event_date);
    bool is_first_event_date_Set() const;
    bool is_first_event_date_Valid() const;

    QDate getLastEventDate() const;
    void setLastEventDate(const QDate &last_event_date);
    bool is_last_event_date_Set() const;
    bool is_last_event_date_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getNumberType() const;
    void setNumberType(const QString &number_type);
    bool is_number_type_Set() const;
    bool is_number_type_Valid() const;

    QString getPricingModel() const;
    void setPricingModel(const QString &pricing_model);
    bool is_pricing_model_Set() const;
    bool is_pricing_model_Valid() const;

    qint32 getSmsEventCount() const;
    void setSmsEventCount(const qint32 &sms_event_count);
    bool is_sms_event_count_Set() const;
    bool is_sms_event_count_Valid() const;

    qint32 getTtsEventCount() const;
    void setTtsEventCount(const qint32 &tts_event_count);
    bool is_tts_event_count_Set() const;
    bool is_tts_event_count_Valid() const;

    QString getVerifyStatus() const;
    void setVerifyStatus(const QString &verify_status);
    bool is_verify_status_Set() const;
    bool is_verify_status_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getNetworkType() const;
    void setNetworkType(const QString &network_type);
    bool is_network_type_Set() const;
    bool is_network_type_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getPorted() const;
    void setPorted(const QString &ported);
    bool is_ported_Set() const;
    bool is_ported_Valid() const;

    QString getProductType() const;
    void setProductType(const QString &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    QString getReachable() const;
    void setReachable(const QString &reachable);
    bool is_reachable_Set() const;
    bool is_reachable_Valid() const;

    QString getResponseCode() const;
    void setResponseCode(const QString &response_code);
    bool is_response_code_Set() const;
    bool is_response_code_Valid() const;

    QString getRValid() const;
    void setRValid(const QString &r_valid);
    bool is_r_valid_Set() const;
    bool is_r_valid_Valid() const;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QDate getCallDateStart() const;
    void setCallDateStart(const QDate &call_date_start);
    bool is_call_date_start_Set() const;
    bool is_call_date_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_client_ref;
    bool m_client_ref_isSet;
    bool m_client_ref_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_name;
    bool m_country_name_isSet;
    bool m_country_name_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QDate m_date_finalized;
    bool m_date_finalized_isSet;
    bool m_date_finalized_isValid;

    QDate m_date_received;
    bool m_date_received_isSet;
    bool m_date_received_isValid;

    OAIDirection m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_code_description;
    bool m_error_code_description_isSet;
    bool m_error_code_description_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    qint32 m_latency;
    bool m_latency_isSet;
    bool m_latency_isValid;

    QString m_message_body;
    bool m_message_body_isSet;
    bool m_message_body_isValid;

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_network_name;
    bool m_network_name_isSet;
    bool m_network_name_isValid;

    OAIAsr_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QString m_total_price;
    bool m_total_price_isSet;
    bool m_total_price_isValid;

    QString m_call_id;
    bool m_call_id_isSet;
    bool m_call_id_isValid;

    QDate m_date_end;
    bool m_date_end_isSet;
    bool m_date_end_isValid;

    QDate m_date_start;
    bool m_date_start_isSet;
    bool m_date_start_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_status_description;
    bool m_status_description_isSet;
    bool m_status_description_isValid;

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_conversation_id;
    bool m_conversation_id_isSet;
    bool m_conversation_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_leg_id;
    bool m_leg_id_isSet;
    bool m_leg_id_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_estimated_price;
    bool m_estimated_price_isSet;
    bool m_estimated_price_isValid;

    QDate m_first_event_date;
    bool m_first_event_date_isSet;
    bool m_first_event_date_isValid;

    QDate m_last_event_date;
    bool m_last_event_date_isSet;
    bool m_last_event_date_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_number_type;
    bool m_number_type_isSet;
    bool m_number_type_isValid;

    QString m_pricing_model;
    bool m_pricing_model_isSet;
    bool m_pricing_model_isValid;

    qint32 m_sms_event_count;
    bool m_sms_event_count_isSet;
    bool m_sms_event_count_isValid;

    qint32 m_tts_event_count;
    bool m_tts_event_count_isSet;
    bool m_tts_event_count_isValid;

    QString m_verify_status;
    bool m_verify_status_isSet;
    bool m_verify_status_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_network_type;
    bool m_network_type_isSet;
    bool m_network_type_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_ported;
    bool m_ported_isSet;
    bool m_ported_isValid;

    QString m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    QString m_reachable;
    bool m_reachable_isSet;
    bool m_reachable_isValid;

    QString m_response_code;
    bool m_response_code_isSet;
    bool m_response_code_isValid;

    QString m_r_valid;
    bool m_r_valid_isSet;
    bool m_r_valid_isValid;

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QDate m_call_date_start;
    bool m_call_date_start_isSet;
    bool m_call_date_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDownload_report_200_response_report_inner)

#endif // OAIDownload_report_200_response_report_inner_H
