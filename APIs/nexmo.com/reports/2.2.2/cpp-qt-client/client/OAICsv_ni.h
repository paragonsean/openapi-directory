/**
 * Reports API
 * The [Reports API](/reports/overview) enables you to request a report of activity for your Vonage account.  Depending on your query pattern, you can choose from one of the two versions of the Reports API: asynchronous and synchronous. The asynchronous version is optimized for infrequent and large data queries (from several records to tens of millions). The synchronous version is optimized for frequent and periodic retrievals of small batches of data records (from one record to tens of thousand per query).  Only synchronous version supports retrival of data records by message/record ID.  Vonage recommends that you limit asynchronous queries to a maximum of 20 million records, by setting the start and end dates accordingly. On average, the asynchronous Reports API takes 5 - 10 minutes to generate 1 million records. 
 *
 * The version of the OpenAPI document: 2.2.2
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICsv_ni.h
 *
 * Number Insight
 */

#ifndef OAICsv_ni_H
#define OAICsv_ni_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICsv_ni : public OAIObject {
public:
    OAICsv_ni();
    OAICsv_ni(QString json);
    ~OAICsv_ni() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryName() const;
    void setCountryName(const QString &country_name);
    bool is_country_name_Set() const;
    bool is_country_name_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QDate getDateReceived() const;
    void setDateReceived(const QDate &date_received);
    bool is_date_received_Set() const;
    bool is_date_received_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getNetworkName() const;
    void setNetworkName(const QString &network_name);
    bool is_network_name_Set() const;
    bool is_network_name_Valid() const;

    QString getNetworkType() const;
    void setNetworkType(const QString &network_type);
    bool is_network_type_Set() const;
    bool is_network_type_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getPorted() const;
    void setPorted(const QString &ported);
    bool is_ported_Set() const;
    bool is_ported_Valid() const;

    QString getProductType() const;
    void setProductType(const QString &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    QString getReachable() const;
    void setReachable(const QString &reachable);
    bool is_reachable_Set() const;
    bool is_reachable_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getResponseCode() const;
    void setResponseCode(const QString &response_code);
    bool is_response_code_Set() const;
    bool is_response_code_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTotalPrice() const;
    void setTotalPrice(const QString &total_price);
    bool is_total_price_Set() const;
    bool is_total_price_Valid() const;

    QString getRValid() const;
    void setRValid(const QString &r_valid);
    bool is_r_valid_Set() const;
    bool is_r_valid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_name;
    bool m_country_name_isSet;
    bool m_country_name_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QDate m_date_received;
    bool m_date_received_isSet;
    bool m_date_received_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_network_name;
    bool m_network_name_isSet;
    bool m_network_name_isValid;

    QString m_network_type;
    bool m_network_type_isSet;
    bool m_network_type_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_ported;
    bool m_ported_isSet;
    bool m_ported_isValid;

    QString m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    QString m_reachable;
    bool m_reachable_isSet;
    bool m_reachable_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_response_code;
    bool m_response_code_isSet;
    bool m_response_code_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_total_price;
    bool m_total_price_isSet;
    bool m_total_price_isValid;

    QString m_r_valid;
    bool m_r_valid_isSet;
    bool m_r_valid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICsv_ni)

#endif // OAICsv_ni_H
