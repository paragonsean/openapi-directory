# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_reports200_response_reports_inner import ListReports200ResponseReportsInner
from openapi_server import util


class ListReports200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items_count: int=None, reports: List[ListReports200ResponseReportsInner]=None, self_link: str=None):
        """ListReports200Response - a model defined in OpenAPI

        :param items_count: The items_count of this ListReports200Response.
        :param reports: The reports of this ListReports200Response.
        :param self_link: The self_link of this ListReports200Response.
        """
        self.openapi_types = {
            'items_count': int,
            'reports': List[ListReports200ResponseReportsInner],
            'self_link': str
        }

        self.attribute_map = {
            'items_count': 'items_count',
            'reports': 'reports',
            'self_link': 'self_link'
        }

        self._items_count = items_count
        self._reports = reports
        self._self_link = self_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListReports200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The list_reports_200_response of this ListReports200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items_count(self):
        """Gets the items_count of this ListReports200Response.

        The number of reports in the list.

        :return: The items_count of this ListReports200Response.
        :rtype: int
        """
        return self._items_count

    @items_count.setter
    def items_count(self, items_count):
        """Sets the items_count of this ListReports200Response.

        The number of reports in the list.

        :param items_count: The items_count of this ListReports200Response.
        :type items_count: int
        """

        self._items_count = items_count

    @property
    def reports(self):
        """Gets the reports of this ListReports200Response.

        The list of reports.

        :return: The reports of this ListReports200Response.
        :rtype: List[ListReports200ResponseReportsInner]
        """
        return self._reports

    @reports.setter
    def reports(self, reports):
        """Sets the reports of this ListReports200Response.

        The list of reports.

        :param reports: The reports of this ListReports200Response.
        :type reports: List[ListReports200ResponseReportsInner]
        """

        self._reports = reports

    @property
    def self_link(self):
        """Gets the self_link of this ListReports200Response.

        URI of this search.

        :return: The self_link of this ListReports200Response.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this ListReports200Response.

        URI of this search.

        :param self_link: The self_link of this ListReports200Response.
        :type self_link: str
        """

        self._self_link = self_link
