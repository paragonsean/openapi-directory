# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_create_report import LinksCreateReport
from openapi_server.models.product_in_app_voice import ProductInAppVoice
from openapi_server.models.request_status_create_report import RequestStatusCreateReport
from openapi_server import util


class InAppVoiceResponseCreateReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: LinksCreateReport=None, account_id: str=None, callback_url: str=None, date_end: date=None, date_start: date=None, include_subaccounts: bool=False, product: ProductInAppVoice=None, receive_time: date=None, request_id: str=None, request_status: RequestStatusCreateReport=None, start_time: date=None, conversation_id: str=None):
        """InAppVoiceResponseCreateReport - a model defined in OpenAPI

        :param links: The links of this InAppVoiceResponseCreateReport.
        :param account_id: The account_id of this InAppVoiceResponseCreateReport.
        :param callback_url: The callback_url of this InAppVoiceResponseCreateReport.
        :param date_end: The date_end of this InAppVoiceResponseCreateReport.
        :param date_start: The date_start of this InAppVoiceResponseCreateReport.
        :param include_subaccounts: The include_subaccounts of this InAppVoiceResponseCreateReport.
        :param product: The product of this InAppVoiceResponseCreateReport.
        :param receive_time: The receive_time of this InAppVoiceResponseCreateReport.
        :param request_id: The request_id of this InAppVoiceResponseCreateReport.
        :param request_status: The request_status of this InAppVoiceResponseCreateReport.
        :param start_time: The start_time of this InAppVoiceResponseCreateReport.
        :param conversation_id: The conversation_id of this InAppVoiceResponseCreateReport.
        """
        self.openapi_types = {
            'links': LinksCreateReport,
            'account_id': str,
            'callback_url': str,
            'date_end': date,
            'date_start': date,
            'include_subaccounts': bool,
            'product': ProductInAppVoice,
            'receive_time': date,
            'request_id': str,
            'request_status': RequestStatusCreateReport,
            'start_time': date,
            'conversation_id': str
        }

        self.attribute_map = {
            'links': '_links',
            'account_id': 'account_id',
            'callback_url': 'callback_url',
            'date_end': 'date_end',
            'date_start': 'date_start',
            'include_subaccounts': 'include_subaccounts',
            'product': 'product',
            'receive_time': 'receive_time',
            'request_id': 'request_id',
            'request_status': 'request_status',
            'start_time': 'start_time',
            'conversation_id': 'conversation_id'
        }

        self._links = links
        self._account_id = account_id
        self._callback_url = callback_url
        self._date_end = date_end
        self._date_start = date_start
        self._include_subaccounts = include_subaccounts
        self._product = product
        self._receive_time = receive_time
        self._request_id = request_id
        self._request_status = request_status
        self._start_time = start_time
        self._conversation_id = conversation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InAppVoiceResponseCreateReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The in_app_voice_response_create_report of this InAppVoiceResponseCreateReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this InAppVoiceResponseCreateReport.


        :return: The links of this InAppVoiceResponseCreateReport.
        :rtype: LinksCreateReport
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this InAppVoiceResponseCreateReport.


        :param links: The links of this InAppVoiceResponseCreateReport.
        :type links: LinksCreateReport
        """

        self._links = links

    @property
    def account_id(self):
        """Gets the account_id of this InAppVoiceResponseCreateReport.

        The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.

        :return: The account_id of this InAppVoiceResponseCreateReport.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this InAppVoiceResponseCreateReport.

        The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.

        :param account_id: The account_id of this InAppVoiceResponseCreateReport.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def callback_url(self):
        """Gets the callback_url of this InAppVoiceResponseCreateReport.

        URL to send a callback upon completion of the report. This POST callback contains the same information as the response to [Get status of report](/api/reports#get-report).

        :return: The callback_url of this InAppVoiceResponseCreateReport.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this InAppVoiceResponseCreateReport.

        URL to send a callback upon completion of the report. This POST callback contains the same information as the response to [Get status of report](/api/reports#get-report).

        :param callback_url: The callback_url of this InAppVoiceResponseCreateReport.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def date_end(self):
        """Gets the date_end of this InAppVoiceResponseCreateReport.

        ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when report should end.  It is exclusive, i.e. the provided value is strictly greater than the value in the field `date_received` in the CDR. <br>If unspecified, defaults to the current time. 

        :return: The date_end of this InAppVoiceResponseCreateReport.
        :rtype: date
        """
        return self._date_end

    @date_end.setter
    def date_end(self, date_end):
        """Sets the date_end of this InAppVoiceResponseCreateReport.

        ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when report should end.  It is exclusive, i.e. the provided value is strictly greater than the value in the field `date_received` in the CDR. <br>If unspecified, defaults to the current time. 

        :param date_end: The date_end of this InAppVoiceResponseCreateReport.
        :type date_end: date
        """

        self._date_end = date_end

    @property
    def date_start(self):
        """Gets the date_start of this InAppVoiceResponseCreateReport.

        ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when reports  should begin. It filters on the time the API call was received by Vonage and corresponds to the field `date_received` (`date_start` for Voice) in the report file. It is inclusive, i.e. the provided value is less than or equal to the value in the field `date_received` (`date_start` for Voice) in the CDR.<br>If unspecified, defaults  to seven days ago. 

        :return: The date_start of this InAppVoiceResponseCreateReport.
        :rtype: date
        """
        return self._date_start

    @date_start.setter
    def date_start(self, date_start):
        """Sets the date_start of this InAppVoiceResponseCreateReport.

        ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when reports  should begin. It filters on the time the API call was received by Vonage and corresponds to the field `date_received` (`date_start` for Voice) in the report file. It is inclusive, i.e. the provided value is less than or equal to the value in the field `date_received` (`date_start` for Voice) in the CDR.<br>If unspecified, defaults  to seven days ago. 

        :param date_start: The date_start of this InAppVoiceResponseCreateReport.
        :type date_start: date
        """

        self._date_start = date_start

    @property
    def include_subaccounts(self):
        """Gets the include_subaccounts of this InAppVoiceResponseCreateReport.

        Whether to include subaccounts or not.

        :return: The include_subaccounts of this InAppVoiceResponseCreateReport.
        :rtype: bool
        """
        return self._include_subaccounts

    @include_subaccounts.setter
    def include_subaccounts(self, include_subaccounts):
        """Sets the include_subaccounts of this InAppVoiceResponseCreateReport.

        Whether to include subaccounts or not.

        :param include_subaccounts: The include_subaccounts of this InAppVoiceResponseCreateReport.
        :type include_subaccounts: bool
        """

        self._include_subaccounts = include_subaccounts

    @property
    def product(self):
        """Gets the product of this InAppVoiceResponseCreateReport.


        :return: The product of this InAppVoiceResponseCreateReport.
        :rtype: ProductInAppVoice
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this InAppVoiceResponseCreateReport.


        :param product: The product of this InAppVoiceResponseCreateReport.
        :type product: ProductInAppVoice
        """

        self._product = product

    @property
    def receive_time(self):
        """Gets the receive_time of this InAppVoiceResponseCreateReport.

        Time at which the report request was received by the service.

        :return: The receive_time of this InAppVoiceResponseCreateReport.
        :rtype: date
        """
        return self._receive_time

    @receive_time.setter
    def receive_time(self, receive_time):
        """Sets the receive_time of this InAppVoiceResponseCreateReport.

        Time at which the report request was received by the service.

        :param receive_time: The receive_time of this InAppVoiceResponseCreateReport.
        :type receive_time: date
        """

        self._receive_time = receive_time

    @property
    def request_id(self):
        """Gets the request_id of this InAppVoiceResponseCreateReport.

        UUID of the request.

        :return: The request_id of this InAppVoiceResponseCreateReport.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this InAppVoiceResponseCreateReport.

        UUID of the request.

        :param request_id: The request_id of this InAppVoiceResponseCreateReport.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def request_status(self):
        """Gets the request_status of this InAppVoiceResponseCreateReport.


        :return: The request_status of this InAppVoiceResponseCreateReport.
        :rtype: RequestStatusCreateReport
        """
        return self._request_status

    @request_status.setter
    def request_status(self, request_status):
        """Sets the request_status of this InAppVoiceResponseCreateReport.


        :param request_status: The request_status of this InAppVoiceResponseCreateReport.
        :type request_status: RequestStatusCreateReport
        """

        self._request_status = request_status

    @property
    def start_time(self):
        """Gets the start_time of this InAppVoiceResponseCreateReport.

        Time at which the report processing of the report has started.

        :return: The start_time of this InAppVoiceResponseCreateReport.
        :rtype: date
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this InAppVoiceResponseCreateReport.

        Time at which the report processing of the report has started.

        :param start_time: The start_time of this InAppVoiceResponseCreateReport.
        :type start_time: date
        """

        self._start_time = start_time

    @property
    def conversation_id(self):
        """Gets the conversation_id of this InAppVoiceResponseCreateReport.

        Search only for In App Voive calls attached to this particular Conversation. This should include the \"CON-\" prefix.

        :return: The conversation_id of this InAppVoiceResponseCreateReport.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id):
        """Sets the conversation_id of this InAppVoiceResponseCreateReport.

        Search only for In App Voive calls attached to this particular Conversation. This should include the \"CON-\" prefix.

        :param conversation_id: The conversation_id of this InAppVoiceResponseCreateReport.
        :type conversation_id: str
        """

        self._conversation_id = conversation_id
