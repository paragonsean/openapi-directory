# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asr_status import AsrStatus
from openapi_server.models.direction import Direction
from openapi_server.models.links import Links
from openapi_server.models.product_asr import ProductAsr
from openapi_server.models.request_status import RequestStatus
from openapi_server import util


class AsrResponseGetReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: Links=None, account_id: str=None, callback_url: str=None, date_end: date=None, date_start: date=None, include_subaccounts: bool=False, items_count: int=None, product: ProductAsr=None, receive_time: date=None, request_id: str=None, request_status: RequestStatus=None, start_time: date=None, direction: Direction=None, _from: str=None, status: AsrStatus=None, to: str=None):
        """AsrResponseGetReport - a model defined in OpenAPI

        :param links: The links of this AsrResponseGetReport.
        :param account_id: The account_id of this AsrResponseGetReport.
        :param callback_url: The callback_url of this AsrResponseGetReport.
        :param date_end: The date_end of this AsrResponseGetReport.
        :param date_start: The date_start of this AsrResponseGetReport.
        :param include_subaccounts: The include_subaccounts of this AsrResponseGetReport.
        :param items_count: The items_count of this AsrResponseGetReport.
        :param product: The product of this AsrResponseGetReport.
        :param receive_time: The receive_time of this AsrResponseGetReport.
        :param request_id: The request_id of this AsrResponseGetReport.
        :param request_status: The request_status of this AsrResponseGetReport.
        :param start_time: The start_time of this AsrResponseGetReport.
        :param direction: The direction of this AsrResponseGetReport.
        :param _from: The _from of this AsrResponseGetReport.
        :param status: The status of this AsrResponseGetReport.
        :param to: The to of this AsrResponseGetReport.
        """
        self.openapi_types = {
            'links': Links,
            'account_id': str,
            'callback_url': str,
            'date_end': date,
            'date_start': date,
            'include_subaccounts': bool,
            'items_count': int,
            'product': ProductAsr,
            'receive_time': date,
            'request_id': str,
            'request_status': RequestStatus,
            'start_time': date,
            'direction': Direction,
            '_from': str,
            'status': AsrStatus,
            'to': str
        }

        self.attribute_map = {
            'links': '_links',
            'account_id': 'account_id',
            'callback_url': 'callback_url',
            'date_end': 'date_end',
            'date_start': 'date_start',
            'include_subaccounts': 'include_subaccounts',
            'items_count': 'items_count',
            'product': 'product',
            'receive_time': 'receive_time',
            'request_id': 'request_id',
            'request_status': 'request_status',
            'start_time': 'start_time',
            'direction': 'direction',
            '_from': 'from',
            'status': 'status',
            'to': 'to'
        }

        self._links = links
        self._account_id = account_id
        self._callback_url = callback_url
        self._date_end = date_end
        self._date_start = date_start
        self._include_subaccounts = include_subaccounts
        self._items_count = items_count
        self._product = product
        self._receive_time = receive_time
        self._request_id = request_id
        self._request_status = request_status
        self._start_time = start_time
        self._direction = direction
        self.__from = _from
        self._status = status
        self._to = to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AsrResponseGetReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The asr_response_get_report of this AsrResponseGetReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this AsrResponseGetReport.


        :return: The links of this AsrResponseGetReport.
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this AsrResponseGetReport.


        :param links: The links of this AsrResponseGetReport.
        :type links: Links
        """

        self._links = links

    @property
    def account_id(self):
        """Gets the account_id of this AsrResponseGetReport.

        The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.

        :return: The account_id of this AsrResponseGetReport.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AsrResponseGetReport.

        The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.

        :param account_id: The account_id of this AsrResponseGetReport.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def callback_url(self):
        """Gets the callback_url of this AsrResponseGetReport.

        URL to send a callback upon completion of the report. This POST callback contains the same information as the response to [Get status of report](/api/reports#get-report).

        :return: The callback_url of this AsrResponseGetReport.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this AsrResponseGetReport.

        URL to send a callback upon completion of the report. This POST callback contains the same information as the response to [Get status of report](/api/reports#get-report).

        :param callback_url: The callback_url of this AsrResponseGetReport.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def date_end(self):
        """Gets the date_end of this AsrResponseGetReport.

        ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when report should end.  It is exclusive, i.e. the provided value is strictly greater than the value in the field `date_received` in the CDR. <br>If unspecified, defaults to the current time. 

        :return: The date_end of this AsrResponseGetReport.
        :rtype: date
        """
        return self._date_end

    @date_end.setter
    def date_end(self, date_end):
        """Sets the date_end of this AsrResponseGetReport.

        ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when report should end.  It is exclusive, i.e. the provided value is strictly greater than the value in the field `date_received` in the CDR. <br>If unspecified, defaults to the current time. 

        :param date_end: The date_end of this AsrResponseGetReport.
        :type date_end: date
        """

        self._date_end = date_end

    @property
    def date_start(self):
        """Gets the date_start of this AsrResponseGetReport.

        ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when reports  should begin. It filters on the time the API call was received by Vonage and corresponds to the field `date_received` (`date_start` for Voice) in the report file. It is inclusive, i.e. the provided value is less than or equal to the value in the field `date_received` (`date_start` for Voice) in the CDR.<br>If unspecified, defaults  to seven days ago. 

        :return: The date_start of this AsrResponseGetReport.
        :rtype: date
        """
        return self._date_start

    @date_start.setter
    def date_start(self, date_start):
        """Sets the date_start of this AsrResponseGetReport.

        ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date (format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`) for when reports  should begin. It filters on the time the API call was received by Vonage and corresponds to the field `date_received` (`date_start` for Voice) in the report file. It is inclusive, i.e. the provided value is less than or equal to the value in the field `date_received` (`date_start` for Voice) in the CDR.<br>If unspecified, defaults  to seven days ago. 

        :param date_start: The date_start of this AsrResponseGetReport.
        :type date_start: date
        """

        self._date_start = date_start

    @property
    def include_subaccounts(self):
        """Gets the include_subaccounts of this AsrResponseGetReport.

        Whether to include subaccounts or not.

        :return: The include_subaccounts of this AsrResponseGetReport.
        :rtype: bool
        """
        return self._include_subaccounts

    @include_subaccounts.setter
    def include_subaccounts(self, include_subaccounts):
        """Sets the include_subaccounts of this AsrResponseGetReport.

        Whether to include subaccounts or not.

        :param include_subaccounts: The include_subaccounts of this AsrResponseGetReport.
        :type include_subaccounts: bool
        """

        self._include_subaccounts = include_subaccounts

    @property
    def items_count(self):
        """Gets the items_count of this AsrResponseGetReport.

        The number of rows in the resulting file (when report has been completed).

        :return: The items_count of this AsrResponseGetReport.
        :rtype: int
        """
        return self._items_count

    @items_count.setter
    def items_count(self, items_count):
        """Sets the items_count of this AsrResponseGetReport.

        The number of rows in the resulting file (when report has been completed).

        :param items_count: The items_count of this AsrResponseGetReport.
        :type items_count: int
        """

        self._items_count = items_count

    @property
    def product(self):
        """Gets the product of this AsrResponseGetReport.


        :return: The product of this AsrResponseGetReport.
        :rtype: ProductAsr
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this AsrResponseGetReport.


        :param product: The product of this AsrResponseGetReport.
        :type product: ProductAsr
        """

        self._product = product

    @property
    def receive_time(self):
        """Gets the receive_time of this AsrResponseGetReport.

        Time at which the report request was received by the service.

        :return: The receive_time of this AsrResponseGetReport.
        :rtype: date
        """
        return self._receive_time

    @receive_time.setter
    def receive_time(self, receive_time):
        """Sets the receive_time of this AsrResponseGetReport.

        Time at which the report request was received by the service.

        :param receive_time: The receive_time of this AsrResponseGetReport.
        :type receive_time: date
        """

        self._receive_time = receive_time

    @property
    def request_id(self):
        """Gets the request_id of this AsrResponseGetReport.

        UUID of the request.

        :return: The request_id of this AsrResponseGetReport.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this AsrResponseGetReport.

        UUID of the request.

        :param request_id: The request_id of this AsrResponseGetReport.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def request_status(self):
        """Gets the request_status of this AsrResponseGetReport.


        :return: The request_status of this AsrResponseGetReport.
        :rtype: RequestStatus
        """
        return self._request_status

    @request_status.setter
    def request_status(self, request_status):
        """Sets the request_status of this AsrResponseGetReport.


        :param request_status: The request_status of this AsrResponseGetReport.
        :type request_status: RequestStatus
        """

        self._request_status = request_status

    @property
    def start_time(self):
        """Gets the start_time of this AsrResponseGetReport.

        Time at which the report processing of the report has started.

        :return: The start_time of this AsrResponseGetReport.
        :rtype: date
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this AsrResponseGetReport.

        Time at which the report processing of the report has started.

        :param start_time: The start_time of this AsrResponseGetReport.
        :type start_time: date
        """

        self._start_time = start_time

    @property
    def direction(self):
        """Gets the direction of this AsrResponseGetReport.


        :return: The direction of this AsrResponseGetReport.
        :rtype: Direction
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this AsrResponseGetReport.


        :param direction: The direction of this AsrResponseGetReport.
        :type direction: Direction
        """

        self._direction = direction

    @property
    def _from(self):
        """Gets the _from of this AsrResponseGetReport.

        Request from this number.

        :return: The _from of this AsrResponseGetReport.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this AsrResponseGetReport.

        Request from this number.

        :param _from: The _from of this AsrResponseGetReport.
        :type _from: str
        """

        self.__from = _from

    @property
    def status(self):
        """Gets the status of this AsrResponseGetReport.


        :return: The status of this AsrResponseGetReport.
        :rtype: AsrStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AsrResponseGetReport.


        :param status: The status of this AsrResponseGetReport.
        :type status: AsrStatus
        """

        self._status = status

    @property
    def to(self):
        """Gets the to of this AsrResponseGetReport.

        Request to this number.

        :return: The to of this AsrResponseGetReport.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this AsrResponseGetReport.

        Request to this number.

        :param to: The to of this AsrResponseGetReport.
        :type to: str
        """

        self._to = to
