# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CsvVerify(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, country: str=None, country_name: str=None, currency: str=None, date_finalized: date=None, date_received: date=None, estimated_price: str=None, first_event_date: date=None, _from: str=None, last_event_date: date=None, locale: str=None, network: str=None, network_name: str=None, number_type: str=None, price: str=None, pricing_model: str=None, request_id: str=None, sms_event_count: int=None, to: str=None, tts_event_count: int=None, verify_status: str=None):
        """CsvVerify - a model defined in OpenAPI

        :param account_id: The account_id of this CsvVerify.
        :param country: The country of this CsvVerify.
        :param country_name: The country_name of this CsvVerify.
        :param currency: The currency of this CsvVerify.
        :param date_finalized: The date_finalized of this CsvVerify.
        :param date_received: The date_received of this CsvVerify.
        :param estimated_price: The estimated_price of this CsvVerify.
        :param first_event_date: The first_event_date of this CsvVerify.
        :param _from: The _from of this CsvVerify.
        :param last_event_date: The last_event_date of this CsvVerify.
        :param locale: The locale of this CsvVerify.
        :param network: The network of this CsvVerify.
        :param network_name: The network_name of this CsvVerify.
        :param number_type: The number_type of this CsvVerify.
        :param price: The price of this CsvVerify.
        :param pricing_model: The pricing_model of this CsvVerify.
        :param request_id: The request_id of this CsvVerify.
        :param sms_event_count: The sms_event_count of this CsvVerify.
        :param to: The to of this CsvVerify.
        :param tts_event_count: The tts_event_count of this CsvVerify.
        :param verify_status: The verify_status of this CsvVerify.
        """
        self.openapi_types = {
            'account_id': str,
            'country': str,
            'country_name': str,
            'currency': str,
            'date_finalized': date,
            'date_received': date,
            'estimated_price': str,
            'first_event_date': date,
            '_from': str,
            'last_event_date': date,
            'locale': str,
            'network': str,
            'network_name': str,
            'number_type': str,
            'price': str,
            'pricing_model': str,
            'request_id': str,
            'sms_event_count': int,
            'to': str,
            'tts_event_count': int,
            'verify_status': str
        }

        self.attribute_map = {
            'account_id': 'account_id',
            'country': 'country',
            'country_name': 'country_name',
            'currency': 'currency',
            'date_finalized': 'date_finalized',
            'date_received': 'date_received',
            'estimated_price': 'estimated_price',
            'first_event_date': 'first_event_date',
            '_from': 'from',
            'last_event_date': 'last_event_date',
            'locale': 'locale',
            'network': 'network',
            'network_name': 'network_name',
            'number_type': 'number_type',
            'price': 'price',
            'pricing_model': 'pricing_model',
            'request_id': 'request_id',
            'sms_event_count': 'sms_event_count',
            'to': 'to',
            'tts_event_count': 'tts_event_count',
            'verify_status': 'verify_status'
        }

        self._account_id = account_id
        self._country = country
        self._country_name = country_name
        self._currency = currency
        self._date_finalized = date_finalized
        self._date_received = date_received
        self._estimated_price = estimated_price
        self._first_event_date = first_event_date
        self.__from = _from
        self._last_event_date = last_event_date
        self._locale = locale
        self._network = network
        self._network_name = network_name
        self._number_type = number_type
        self._price = price
        self._pricing_model = pricing_model
        self._request_id = request_id
        self._sms_event_count = sms_event_count
        self._to = to
        self._tts_event_count = tts_event_count
        self._verify_status = verify_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CsvVerify':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The csv_verify of this CsvVerify.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this CsvVerify.

        The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.

        :return: The account_id of this CsvVerify.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this CsvVerify.

        The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.

        :param account_id: The account_id of this CsvVerify.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def country(self):
        """Gets the country of this CsvVerify.

        Country where the request was sent.

        :return: The country of this CsvVerify.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this CsvVerify.

        Country where the request was sent.

        :param country: The country of this CsvVerify.
        :type country: str
        """

        self._country = country

    @property
    def country_name(self):
        """Gets the country_name of this CsvVerify.

        Country name where the request was sent.

        :return: The country_name of this CsvVerify.
        :rtype: str
        """
        return self._country_name

    @country_name.setter
    def country_name(self, country_name):
        """Sets the country_name of this CsvVerify.

        Country name where the request was sent.

        :param country_name: The country_name of this CsvVerify.
        :type country_name: str
        """

        self._country_name = country_name

    @property
    def currency(self):
        """Gets the currency of this CsvVerify.

        Currency of the price of the request.

        :return: The currency of this CsvVerify.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this CsvVerify.

        Currency of the price of the request.

        :param currency: The currency of this CsvVerify.
        :type currency: str
        """

        self._currency = currency

    @property
    def date_finalized(self):
        """Gets the date_finalized of this CsvVerify.

        Date when the request was finalized.

        :return: The date_finalized of this CsvVerify.
        :rtype: date
        """
        return self._date_finalized

    @date_finalized.setter
    def date_finalized(self, date_finalized):
        """Sets the date_finalized of this CsvVerify.

        Date when the request was finalized.

        :param date_finalized: The date_finalized of this CsvVerify.
        :type date_finalized: date
        """

        self._date_finalized = date_finalized

    @property
    def date_received(self):
        """Gets the date_received of this CsvVerify.

        Date of the request.

        :return: The date_received of this CsvVerify.
        :rtype: date
        """
        return self._date_received

    @date_received.setter
    def date_received(self, date_received):
        """Sets the date_received of this CsvVerify.

        Date of the request.

        :param date_received: The date_received of this CsvVerify.
        :type date_received: date
        """

        self._date_received = date_received

    @property
    def estimated_price(self):
        """Gets the estimated_price of this CsvVerify.

        Estimated price of the verify request.

        :return: The estimated_price of this CsvVerify.
        :rtype: str
        """
        return self._estimated_price

    @estimated_price.setter
    def estimated_price(self, estimated_price):
        """Sets the estimated_price of this CsvVerify.

        Estimated price of the verify request.

        :param estimated_price: The estimated_price of this CsvVerify.
        :type estimated_price: str
        """

        self._estimated_price = estimated_price

    @property
    def first_event_date(self):
        """Gets the first_event_date of this CsvVerify.

        Date of the first verify event.

        :return: The first_event_date of this CsvVerify.
        :rtype: date
        """
        return self._first_event_date

    @first_event_date.setter
    def first_event_date(self, first_event_date):
        """Sets the first_event_date of this CsvVerify.

        Date of the first verify event.

        :param first_event_date: The first_event_date of this CsvVerify.
        :type first_event_date: date
        """

        self._first_event_date = first_event_date

    @property
    def _from(self):
        """Gets the _from of this CsvVerify.

        Request from this number.

        :return: The _from of this CsvVerify.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this CsvVerify.

        Request from this number.

        :param _from: The _from of this CsvVerify.
        :type _from: str
        """

        self.__from = _from

    @property
    def last_event_date(self):
        """Gets the last_event_date of this CsvVerify.

        Date of the last verify event.

        :return: The last_event_date of this CsvVerify.
        :rtype: date
        """
        return self._last_event_date

    @last_event_date.setter
    def last_event_date(self, last_event_date):
        """Sets the last_event_date of this CsvVerify.

        Date of the last verify event.

        :param last_event_date: The last_event_date of this CsvVerify.
        :type last_event_date: date
        """

        self._last_event_date = last_event_date

    @property
    def locale(self):
        """Gets the locale of this CsvVerify.

        Locale used for the TTS.

        :return: The locale of this CsvVerify.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this CsvVerify.

        Locale used for the TTS.

        :param locale: The locale of this CsvVerify.
        :type locale: str
        """

        self._locale = locale

    @property
    def network(self):
        """Gets the network of this CsvVerify.

        Network used to send the request.

        :return: The network of this CsvVerify.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this CsvVerify.

        Network used to send the request.

        :param network: The network of this CsvVerify.
        :type network: str
        """

        self._network = network

    @property
    def network_name(self):
        """Gets the network_name of this CsvVerify.

        Name of the network used to send the request.

        :return: The network_name of this CsvVerify.
        :rtype: str
        """
        return self._network_name

    @network_name.setter
    def network_name(self, network_name):
        """Sets the network_name of this CsvVerify.

        Name of the network used to send the request.

        :param network_name: The network_name of this CsvVerify.
        :type network_name: str
        """

        self._network_name = network_name

    @property
    def number_type(self):
        """Gets the number_type of this CsvVerify.

        Type of phone number to which requests are sent.

        :return: The number_type of this CsvVerify.
        :rtype: str
        """
        return self._number_type

    @number_type.setter
    def number_type(self, number_type):
        """Sets the number_type of this CsvVerify.

        Type of phone number to which requests are sent.

        :param number_type: The number_type of this CsvVerify.
        :type number_type: str
        """

        self._number_type = number_type

    @property
    def price(self):
        """Gets the price of this CsvVerify.

        Price of the request.

        :return: The price of this CsvVerify.
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CsvVerify.

        Price of the request.

        :param price: The price of this CsvVerify.
        :type price: str
        """

        self._price = price

    @property
    def pricing_model(self):
        """Gets the pricing_model of this CsvVerify.

        Pricing model used for this request.

        :return: The pricing_model of this CsvVerify.
        :rtype: str
        """
        return self._pricing_model

    @pricing_model.setter
    def pricing_model(self, pricing_model):
        """Sets the pricing_model of this CsvVerify.

        Pricing model used for this request.

        :param pricing_model: The pricing_model of this CsvVerify.
        :type pricing_model: str
        """

        self._pricing_model = pricing_model

    @property
    def request_id(self):
        """Gets the request_id of this CsvVerify.

        UUID of the request.

        :return: The request_id of this CsvVerify.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this CsvVerify.

        UUID of the request.

        :param request_id: The request_id of this CsvVerify.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def sms_event_count(self):
        """Gets the sms_event_count of this CsvVerify.

        Number of sms sent for this verify request.

        :return: The sms_event_count of this CsvVerify.
        :rtype: int
        """
        return self._sms_event_count

    @sms_event_count.setter
    def sms_event_count(self, sms_event_count):
        """Sets the sms_event_count of this CsvVerify.

        Number of sms sent for this verify request.

        :param sms_event_count: The sms_event_count of this CsvVerify.
        :type sms_event_count: int
        """

        self._sms_event_count = sms_event_count

    @property
    def to(self):
        """Gets the to of this CsvVerify.

        Request to this number.

        :return: The to of this CsvVerify.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this CsvVerify.

        Request to this number.

        :param to: The to of this CsvVerify.
        :type to: str
        """

        self._to = to

    @property
    def tts_event_count(self):
        """Gets the tts_event_count of this CsvVerify.

        Number of tts sent for this verify request.

        :return: The tts_event_count of this CsvVerify.
        :rtype: int
        """
        return self._tts_event_count

    @tts_event_count.setter
    def tts_event_count(self, tts_event_count):
        """Sets the tts_event_count of this CsvVerify.

        Number of tts sent for this verify request.

        :param tts_event_count: The tts_event_count of this CsvVerify.
        :type tts_event_count: int
        """

        self._tts_event_count = tts_event_count

    @property
    def verify_status(self):
        """Gets the verify_status of this CsvVerify.

        Status of the verify request.

        :return: The verify_status of this CsvVerify.
        :rtype: str
        """
        return self._verify_status

    @verify_status.setter
    def verify_status(self, verify_status):
        """Sets the verify_status of this CsvVerify.

        Status of the verify request.

        :param verify_status: The verify_status of this CsvVerify.
        :type verify_status: str
        """

        self._verify_status = verify_status
