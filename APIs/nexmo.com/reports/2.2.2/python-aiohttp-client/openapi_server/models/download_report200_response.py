# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.download_report200_response_report_inner import DownloadReport200ResponseReportInner
from openapi_server import util


class DownloadReport200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report: List[DownloadReport200ResponseReportInner]=None):
        """DownloadReport200Response - a model defined in OpenAPI

        :param report: The report of this DownloadReport200Response.
        """
        self.openapi_types = {
            'report': List[DownloadReport200ResponseReportInner]
        }

        self.attribute_map = {
            'report': 'report'
        }

        self._report = report

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DownloadReport200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The download_report_200_response of this DownloadReport200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report(self):
        """Gets the report of this DownloadReport200Response.

        The report in CSV format inside the zip archive.

        :return: The report of this DownloadReport200Response.
        :rtype: List[DownloadReport200ResponseReportInner]
        """
        return self._report

    @report.setter
    def report(self, report):
        """Sets the report of this DownloadReport200Response.

        The report in CSV format inside the zip archive.

        :param report: The report of this DownloadReport200Response.
        :type report: List[DownloadReport200ResponseReportInner]
        """

        self._report = report
