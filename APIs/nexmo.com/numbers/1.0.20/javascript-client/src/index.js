/**
 * Numbers API
 * The Numbers API enables you to manage your existing numbers and buy new virtual numbers for use with the Vonage APIs. Further information is here: <https://developer.nexmo.com/numbers/overview>
 *
 * The version of the OpenAPI document: 1.0.20
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccountUnauthorized from './model/AccountUnauthorized';
import AvailableNumbers from './model/AvailableNumbers';
import Availablenumber from './model/Availablenumber';
import InboundNumbers from './model/InboundNumbers';
import Ownednumber from './model/Ownednumber';
import Response from './model/Response';
import Response420 from './model/Response420';
import Unauthorized from './model/Unauthorized';
import DefaultApi from './api/DefaultApi';


/**
* The Numbers API enables you to manage your existing numbers and buy new virtual numbers for use with the Vonage APIs. Further information is here: &lt;https://developer.nexmo.com/numbers/overview&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NumbersApi = require('index'); // See note below*.
* var xxxSvc = new NumbersApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NumbersApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NumbersApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NumbersApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.20
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccountUnauthorized model constructor.
     * @property {module:model/AccountUnauthorized}
     */
    AccountUnauthorized,

    /**
     * The AvailableNumbers model constructor.
     * @property {module:model/AvailableNumbers}
     */
    AvailableNumbers,

    /**
     * The Availablenumber model constructor.
     * @property {module:model/Availablenumber}
     */
    Availablenumber,

    /**
     * The InboundNumbers model constructor.
     * @property {module:model/InboundNumbers}
     */
    InboundNumbers,

    /**
     * The Ownednumber model constructor.
     * @property {module:model/Ownednumber}
     */
    Ownednumber,

    /**
     * The Response model constructor.
     * @property {module:model/Response}
     */
    Response,

    /**
     * The Response420 model constructor.
     * @property {module:model/Response420}
     */
    Response420,

    /**
     * The Unauthorized model constructor.
     * @property {module:model/Unauthorized}
     */
    Unauthorized,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
