/**
 * Numbers API
 * The Numbers API enables you to manage your existing numbers and buy new virtual numbers for use with the Vonage APIs. Further information is here: <https://developer.nexmo.com/numbers/overview>
 *
 * The version of the OpenAPI document: 1.0.20
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Ownednumber model module.
 * @module model/Ownednumber
 * @version 1.0.20
 */
class Ownednumber {
    /**
     * Constructs a new <code>Ownednumber</code>.
     * @alias module:model/Ownednumber
     */
    constructor() { 
        
        Ownednumber.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Ownednumber</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Ownednumber} obj Optional instance to populate.
     * @return {module:model/Ownednumber} The populated <code>Ownednumber</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Ownednumber();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], ['String']);
            }
            if (data.hasOwnProperty('messagesCallbackType')) {
                obj['messagesCallbackType'] = ApiClient.convertToType(data['messagesCallbackType'], 'String');
            }
            if (data.hasOwnProperty('messagesCallbackValue')) {
                obj['messagesCallbackValue'] = ApiClient.convertToType(data['messagesCallbackValue'], 'String');
            }
            if (data.hasOwnProperty('moHttpUrl')) {
                obj['moHttpUrl'] = ApiClient.convertToType(data['moHttpUrl'], 'String');
            }
            if (data.hasOwnProperty('msisdn')) {
                obj['msisdn'] = ApiClient.convertToType(data['msisdn'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('voiceCallbackType')) {
                obj['voiceCallbackType'] = ApiClient.convertToType(data['voiceCallbackType'], 'String');
            }
            if (data.hasOwnProperty('voiceCallbackValue')) {
                obj['voiceCallbackValue'] = ApiClient.convertToType(data['voiceCallbackValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Ownednumber</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Ownednumber</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['features'])) {
            throw new Error("Expected the field `features` to be an array in the JSON data but got " + data['features']);
        }
        // ensure the json data is a string
        if (data['messagesCallbackType'] && !(typeof data['messagesCallbackType'] === 'string' || data['messagesCallbackType'] instanceof String)) {
            throw new Error("Expected the field `messagesCallbackType` to be a primitive type in the JSON string but got " + data['messagesCallbackType']);
        }
        // ensure the json data is a string
        if (data['messagesCallbackValue'] && !(typeof data['messagesCallbackValue'] === 'string' || data['messagesCallbackValue'] instanceof String)) {
            throw new Error("Expected the field `messagesCallbackValue` to be a primitive type in the JSON string but got " + data['messagesCallbackValue']);
        }
        // ensure the json data is a string
        if (data['moHttpUrl'] && !(typeof data['moHttpUrl'] === 'string' || data['moHttpUrl'] instanceof String)) {
            throw new Error("Expected the field `moHttpUrl` to be a primitive type in the JSON string but got " + data['moHttpUrl']);
        }
        // ensure the json data is a string
        if (data['msisdn'] && !(typeof data['msisdn'] === 'string' || data['msisdn'] instanceof String)) {
            throw new Error("Expected the field `msisdn` to be a primitive type in the JSON string but got " + data['msisdn']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['voiceCallbackType'] && !(typeof data['voiceCallbackType'] === 'string' || data['voiceCallbackType'] instanceof String)) {
            throw new Error("Expected the field `voiceCallbackType` to be a primitive type in the JSON string but got " + data['voiceCallbackType']);
        }
        // ensure the json data is a string
        if (data['voiceCallbackValue'] && !(typeof data['voiceCallbackValue'] === 'string' || data['voiceCallbackValue'] instanceof String)) {
            throw new Error("Expected the field `voiceCallbackValue` to be a primitive type in the JSON string but got " + data['voiceCallbackValue']);
        }

        return true;
    }


}



/**
 * The two character country code in ISO 3166-1 alpha-2 format
 * @member {String} country
 */
Ownednumber.prototype['country'] = undefined;

/**
 * The capabilities of the number: `SMS` or `VOICE` or `SMS,VOICE` or `SMS,MMS` or `VOICE,MMS` or `SMS,MMS,VOICE`
 * @member {Array.<String>} features
 */
Ownednumber.prototype['features'] = undefined;

/**
 * The messages webhook type: always `app`
 * @member {String} messagesCallbackType
 */
Ownednumber.prototype['messagesCallbackType'] = undefined;

/**
 * An Application ID
 * @member {String} messagesCallbackValue
 */
Ownednumber.prototype['messagesCallbackValue'] = undefined;

/**
 * The URL of the webhook endpoint that handles inbound messages
 * @member {String} moHttpUrl
 */
Ownednumber.prototype['moHttpUrl'] = undefined;

/**
 * An available inbound virtual number.
 * @member {String} msisdn
 */
Ownednumber.prototype['msisdn'] = undefined;

/**
 * The type of number: `landline`, `landline-toll-free` or `mobile-lvn`
 * @member {String} type
 */
Ownednumber.prototype['type'] = undefined;

/**
 * The voice webhook type: `sip`, `tel`, or `app`
 * @member {String} voiceCallbackType
 */
Ownednumber.prototype['voiceCallbackType'] = undefined;

/**
 * A SIP URI, telephone number or Application ID
 * @member {String} voiceCallbackValue
 */
Ownednumber.prototype['voiceCallbackValue'] = undefined;






export default Ownednumber;

