/*
 * Numbers API
 * The Numbers API enables you to manage your existing numbers and buy new virtual numbers for use with the Vonage APIs. Further information is here: <https://developer.nexmo.com/numbers/overview>
 *
 * The version of the OpenAPI document: 1.0.20
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Ownednumber
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:24:28.331376-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Ownednumber {
  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<String> features = new ArrayList<>();

  public static final String SERIALIZED_NAME_MESSAGES_CALLBACK_TYPE = "messagesCallbackType";
  @SerializedName(SERIALIZED_NAME_MESSAGES_CALLBACK_TYPE)
  private String messagesCallbackType;

  public static final String SERIALIZED_NAME_MESSAGES_CALLBACK_VALUE = "messagesCallbackValue";
  @SerializedName(SERIALIZED_NAME_MESSAGES_CALLBACK_VALUE)
  private String messagesCallbackValue;

  public static final String SERIALIZED_NAME_MO_HTTP_URL = "moHttpUrl";
  @SerializedName(SERIALIZED_NAME_MO_HTTP_URL)
  private String moHttpUrl;

  public static final String SERIALIZED_NAME_MSISDN = "msisdn";
  @SerializedName(SERIALIZED_NAME_MSISDN)
  private String msisdn;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VOICE_CALLBACK_TYPE = "voiceCallbackType";
  @SerializedName(SERIALIZED_NAME_VOICE_CALLBACK_TYPE)
  private String voiceCallbackType;

  public static final String SERIALIZED_NAME_VOICE_CALLBACK_VALUE = "voiceCallbackValue";
  @SerializedName(SERIALIZED_NAME_VOICE_CALLBACK_VALUE)
  private String voiceCallbackValue;

  public Ownednumber() {
  }

  public Ownednumber country(String country) {
    this.country = country;
    return this;
  }

  /**
   * The two character country code in ISO 3166-1 alpha-2 format
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public Ownednumber features(List<String> features) {
    this.features = features;
    return this;
  }

  public Ownednumber addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
   * The capabilities of the number: &#x60;SMS&#x60; or &#x60;VOICE&#x60; or &#x60;SMS,VOICE&#x60; or &#x60;SMS,MMS&#x60; or &#x60;VOICE,MMS&#x60; or &#x60;SMS,MMS,VOICE&#x60;
   * @return features
   */
  @javax.annotation.Nullable
  public List<String> getFeatures() {
    return features;
  }

  public void setFeatures(List<String> features) {
    this.features = features;
  }


  public Ownednumber messagesCallbackType(String messagesCallbackType) {
    this.messagesCallbackType = messagesCallbackType;
    return this;
  }

  /**
   * The messages webhook type: always &#x60;app&#x60;
   * @return messagesCallbackType
   */
  @javax.annotation.Nullable
  public String getMessagesCallbackType() {
    return messagesCallbackType;
  }

  public void setMessagesCallbackType(String messagesCallbackType) {
    this.messagesCallbackType = messagesCallbackType;
  }


  public Ownednumber messagesCallbackValue(String messagesCallbackValue) {
    this.messagesCallbackValue = messagesCallbackValue;
    return this;
  }

  /**
   * An Application ID
   * @return messagesCallbackValue
   */
  @javax.annotation.Nullable
  public String getMessagesCallbackValue() {
    return messagesCallbackValue;
  }

  public void setMessagesCallbackValue(String messagesCallbackValue) {
    this.messagesCallbackValue = messagesCallbackValue;
  }


  public Ownednumber moHttpUrl(String moHttpUrl) {
    this.moHttpUrl = moHttpUrl;
    return this;
  }

  /**
   * The URL of the webhook endpoint that handles inbound messages
   * @return moHttpUrl
   */
  @javax.annotation.Nullable
  public String getMoHttpUrl() {
    return moHttpUrl;
  }

  public void setMoHttpUrl(String moHttpUrl) {
    this.moHttpUrl = moHttpUrl;
  }


  public Ownednumber msisdn(String msisdn) {
    this.msisdn = msisdn;
    return this;
  }

  /**
   * An available inbound virtual number.
   * @return msisdn
   */
  @javax.annotation.Nullable
  public String getMsisdn() {
    return msisdn;
  }

  public void setMsisdn(String msisdn) {
    this.msisdn = msisdn;
  }


  public Ownednumber type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The type of number: &#x60;landline&#x60;, &#x60;landline-toll-free&#x60; or &#x60;mobile-lvn&#x60;
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public Ownednumber voiceCallbackType(String voiceCallbackType) {
    this.voiceCallbackType = voiceCallbackType;
    return this;
  }

  /**
   * The voice webhook type: &#x60;sip&#x60;, &#x60;tel&#x60;, or &#x60;app&#x60;
   * @return voiceCallbackType
   */
  @javax.annotation.Nullable
  public String getVoiceCallbackType() {
    return voiceCallbackType;
  }

  public void setVoiceCallbackType(String voiceCallbackType) {
    this.voiceCallbackType = voiceCallbackType;
  }


  public Ownednumber voiceCallbackValue(String voiceCallbackValue) {
    this.voiceCallbackValue = voiceCallbackValue;
    return this;
  }

  /**
   * A SIP URI, telephone number or Application ID
   * @return voiceCallbackValue
   */
  @javax.annotation.Nullable
  public String getVoiceCallbackValue() {
    return voiceCallbackValue;
  }

  public void setVoiceCallbackValue(String voiceCallbackValue) {
    this.voiceCallbackValue = voiceCallbackValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ownednumber ownednumber = (Ownednumber) o;
    return Objects.equals(this.country, ownednumber.country) &&
        Objects.equals(this.features, ownednumber.features) &&
        Objects.equals(this.messagesCallbackType, ownednumber.messagesCallbackType) &&
        Objects.equals(this.messagesCallbackValue, ownednumber.messagesCallbackValue) &&
        Objects.equals(this.moHttpUrl, ownednumber.moHttpUrl) &&
        Objects.equals(this.msisdn, ownednumber.msisdn) &&
        Objects.equals(this.type, ownednumber.type) &&
        Objects.equals(this.voiceCallbackType, ownednumber.voiceCallbackType) &&
        Objects.equals(this.voiceCallbackValue, ownednumber.voiceCallbackValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, features, messagesCallbackType, messagesCallbackValue, moHttpUrl, msisdn, type, voiceCallbackType, voiceCallbackValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ownednumber {\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    messagesCallbackType: ").append(toIndentedString(messagesCallbackType)).append("\n");
    sb.append("    messagesCallbackValue: ").append(toIndentedString(messagesCallbackValue)).append("\n");
    sb.append("    moHttpUrl: ").append(toIndentedString(moHttpUrl)).append("\n");
    sb.append("    msisdn: ").append(toIndentedString(msisdn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    voiceCallbackType: ").append(toIndentedString(voiceCallbackType)).append("\n");
    sb.append("    voiceCallbackValue: ").append(toIndentedString(voiceCallbackValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("country");
    openapiFields.add("features");
    openapiFields.add("messagesCallbackType");
    openapiFields.add("messagesCallbackValue");
    openapiFields.add("moHttpUrl");
    openapiFields.add("msisdn");
    openapiFields.add("type");
    openapiFields.add("voiceCallbackType");
    openapiFields.add("voiceCallbackValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Ownednumber
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Ownednumber.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Ownednumber is not found in the empty JSON string", Ownednumber.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Ownednumber.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Ownednumber` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull() && !jsonObj.get("features").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      if ((jsonObj.get("messagesCallbackType") != null && !jsonObj.get("messagesCallbackType").isJsonNull()) && !jsonObj.get("messagesCallbackType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messagesCallbackType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messagesCallbackType").toString()));
      }
      if ((jsonObj.get("messagesCallbackValue") != null && !jsonObj.get("messagesCallbackValue").isJsonNull()) && !jsonObj.get("messagesCallbackValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messagesCallbackValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messagesCallbackValue").toString()));
      }
      if ((jsonObj.get("moHttpUrl") != null && !jsonObj.get("moHttpUrl").isJsonNull()) && !jsonObj.get("moHttpUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `moHttpUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("moHttpUrl").toString()));
      }
      if ((jsonObj.get("msisdn") != null && !jsonObj.get("msisdn").isJsonNull()) && !jsonObj.get("msisdn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `msisdn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("msisdn").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("voiceCallbackType") != null && !jsonObj.get("voiceCallbackType").isJsonNull()) && !jsonObj.get("voiceCallbackType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voiceCallbackType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voiceCallbackType").toString()));
      }
      if ((jsonObj.get("voiceCallbackValue") != null && !jsonObj.get("voiceCallbackValue").isJsonNull()) && !jsonObj.get("voiceCallbackValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voiceCallbackValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voiceCallbackValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Ownednumber.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Ownednumber' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Ownednumber> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Ownednumber.class));

       return (TypeAdapter<T>) new TypeAdapter<Ownednumber>() {
           @Override
           public void write(JsonWriter out, Ownednumber value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Ownednumber read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Ownednumber given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Ownednumber
   * @throws IOException if the JSON string is invalid with respect to Ownednumber
   */
  public static Ownednumber fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Ownednumber.class);
  }

  /**
   * Convert an instance of Ownednumber to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

