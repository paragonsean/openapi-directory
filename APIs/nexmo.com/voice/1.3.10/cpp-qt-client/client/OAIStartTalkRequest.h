/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartTalkRequest.h
 *
 * 
 */

#ifndef OAIStartTalkRequest_H
#define OAIStartTalkRequest_H

#include <QJsonObject>

#include "OAILanguage.h"
#include "OAIVoice_name.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartTalkRequest : public OAIObject {
public:
    OAIStartTalkRequest();
    OAIStartTalkRequest(QString json);
    ~OAIStartTalkRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILanguage getLanguage() const;
    void setLanguage(const OAILanguage &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getLevel() const;
    void setLevel(const QString &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    qint32 getLoop() const;
    void setLoop(const qint32 &loop);
    bool is_loop_Set() const;
    bool is_loop_Valid() const;

    bool isPremium() const;
    void setPremium(const bool &premium);
    bool is_premium_Set() const;
    bool is_premium_Valid() const;

    qint32 getStyle() const;
    void setStyle(const qint32 &style);
    bool is_style_Set() const;
    bool is_style_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    Q_DECL_DEPRECATED OAIVoice_name getVoiceName() const;
    Q_DECL_DEPRECATED void setVoiceName(const OAIVoice_name &voice_name);
    Q_DECL_DEPRECATED bool is_voice_name_Set() const;
    Q_DECL_DEPRECATED bool is_voice_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILanguage m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    qint32 m_loop;
    bool m_loop_isSet;
    bool m_loop_isValid;

    bool m_premium;
    bool m_premium_isSet;
    bool m_premium_isValid;

    qint32 m_style;
    bool m_style_isSet;
    bool m_style_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    OAIVoice_name m_voice_name;
    bool m_voice_name_isSet;
    bool m_voice_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartTalkRequest)

#endif // OAIStartTalkRequest_H
