/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateCallRequestEarmuff.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateCallRequestEarmuff::OAIUpdateCallRequestEarmuff(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateCallRequestEarmuff::OAIUpdateCallRequestEarmuff() {
    this->initializeModel();
}

OAIUpdateCallRequestEarmuff::~OAIUpdateCallRequestEarmuff() {}

void OAIUpdateCallRequestEarmuff::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;
}

void OAIUpdateCallRequestEarmuff::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateCallRequestEarmuff::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;
}

QString OAIUpdateCallRequestEarmuff::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateCallRequestEarmuff::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    return obj;
}

QString OAIUpdateCallRequestEarmuff::getAction() const {
    return m_action;
}
void OAIUpdateCallRequestEarmuff::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIUpdateCallRequestEarmuff::is_action_Set() const{
    return m_action_isSet;
}

bool OAIUpdateCallRequestEarmuff::is_action_Valid() const{
    return m_action_isValid;
}

bool OAIUpdateCallRequestEarmuff::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateCallRequestEarmuff::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
