/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCallResponse.h
 *
 * 
 */

#ifndef OAIGetCallResponse_H
#define OAIGetCallResponse_H

#include <QJsonObject>

#include "OAIDirection.h"
#include "OAIFrom.h"
#include "OAIGetCallResponse__links.h"
#include "OAITo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetCallResponse__links;
class OAIFrom;
class OAITo;

class OAIGetCallResponse : public OAIObject {
public:
    OAIGetCallResponse();
    OAIGetCallResponse(QString json);
    ~OAIGetCallResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetCallResponse__links getLinks() const;
    void setLinks(const OAIGetCallResponse__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getConversationUuid() const;
    void setConversationUuid(const QString &conversation_uuid);
    bool is_conversation_uuid_Set() const;
    bool is_conversation_uuid_Valid() const;

    OAIDirection getDirection() const;
    void setDirection(const OAIDirection &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIFrom getFrom() const;
    void setFrom(const OAIFrom &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getPrice() const;
    void setPrice(const QString &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getRate() const;
    void setRate(const QString &rate);
    bool is_rate_Set() const;
    bool is_rate_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAITo getTo() const;
    void setTo(const OAITo &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetCallResponse__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_conversation_uuid;
    bool m_conversation_uuid_isSet;
    bool m_conversation_uuid_isValid;

    OAIDirection m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIFrom m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_rate;
    bool m_rate_isSet;
    bool m_rate_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAITo m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCallResponse)

#endif // OAIGetCallResponse_H
