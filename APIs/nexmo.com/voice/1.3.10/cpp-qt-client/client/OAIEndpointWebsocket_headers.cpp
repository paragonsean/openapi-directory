/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpointWebsocket_headers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpointWebsocket_headers::OAIEndpointWebsocket_headers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpointWebsocket_headers::OAIEndpointWebsocket_headers() {
    this->initializeModel();
}

OAIEndpointWebsocket_headers::~OAIEndpointWebsocket_headers() {}

void OAIEndpointWebsocket_headers::initializeModel() {

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;
}

void OAIEndpointWebsocket_headers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpointWebsocket_headers::fromJsonObject(QJsonObject json) {

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customer_id")]);
    m_customer_id_isSet = !json[QString("customer_id")].isNull() && m_customer_id_isValid;
}

QString OAIEndpointWebsocket_headers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpointWebsocket_headers::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_id_isSet) {
        obj.insert(QString("customer_id"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    return obj;
}

QString OAIEndpointWebsocket_headers::getCustomerId() const {
    return m_customer_id;
}
void OAIEndpointWebsocket_headers::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIEndpointWebsocket_headers::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIEndpointWebsocket_headers::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

bool OAIEndpointWebsocket_headers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpointWebsocket_headers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
