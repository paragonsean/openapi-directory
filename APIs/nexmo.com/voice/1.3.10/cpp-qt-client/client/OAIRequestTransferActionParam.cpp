/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestTransferActionParam.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestTransferActionParam::OAIRequestTransferActionParam(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestTransferActionParam::OAIRequestTransferActionParam() {
    this->initializeModel();
}

OAIRequestTransferActionParam::~OAIRequestTransferActionParam() {}

void OAIRequestTransferActionParam::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRequestTransferActionParam::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRequestTransferActionParam::fromJson(QString jsonString) {
    
    if ( jsonString.compare("transfer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestTransferActionParam::TRANSFER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRequestTransferActionParam::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRequestTransferActionParam::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRequestTransferActionParam::TRANSFER:
            val = "transfer";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRequestTransferActionParam::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRequestTransferActionParam::eOAIRequestTransferActionParam OAIRequestTransferActionParam::getValue() const {
    return m_value;
}

void OAIRequestTransferActionParam::setValue(const OAIRequestTransferActionParam::eOAIRequestTransferActionParam& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRequestTransferActionParam::isSet() const {
    
    return m_value_isSet;
}

bool OAIRequestTransferActionParam::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
