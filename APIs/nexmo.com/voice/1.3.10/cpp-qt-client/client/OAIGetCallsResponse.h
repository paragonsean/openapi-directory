/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCallsResponse.h
 *
 * 
 */

#ifndef OAIGetCallsResponse_H
#define OAIGetCallsResponse_H

#include <QJsonObject>

#include "OAIGetCallsResponse__embedded.h"
#include "OAIGetCallsResponse__links.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetCallsResponse__embedded;
class OAIGetCallsResponse__links;

class OAIGetCallsResponse : public OAIObject {
public:
    OAIGetCallsResponse();
    OAIGetCallsResponse(QString json);
    ~OAIGetCallsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetCallsResponse__embedded getEmbedded() const;
    void setEmbedded(const OAIGetCallsResponse__embedded &_embedded);
    bool is__embedded_Set() const;
    bool is__embedded_Valid() const;

    OAIGetCallsResponse__links getLinks() const;
    void setLinks(const OAIGetCallsResponse__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    qint32 getRecordIndex() const;
    void setRecordIndex(const qint32 &record_index);
    bool is_record_index_Set() const;
    bool is_record_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetCallsResponse__embedded m__embedded;
    bool m__embedded_isSet;
    bool m__embedded_isValid;

    OAIGetCallsResponse__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    qint32 m_record_index;
    bool m_record_index_isSet;
    bool m_record_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCallsResponse)

#endif // OAIGetCallsResponse_H
