/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCallRequestBase.h
 *
 * 
 */

#ifndef OAICreateCallRequestBase_H
#define OAICreateCallRequestBase_H

#include <QJsonObject>

#include "OAICreateCallRequestBase_to_inner.h"
#include "OAIEndpointPhoneFrom.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEndpointPhoneFrom;
class OAICreateCallRequestBase_to_inner;

class OAICreateCallRequestBase : public OAIObject {
public:
    OAICreateCallRequestBase();
    OAICreateCallRequestBase(QString json);
    ~OAICreateCallRequestBase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventMethod() const;
    void setEventMethod(const QString &event_method);
    bool is_event_method_Set() const;
    bool is_event_method_Valid() const;

    QList<QString> getEventUrl() const;
    void setEventUrl(const QList<QString> &event_url);
    bool is_event_url_Set() const;
    bool is_event_url_Valid() const;

    OAIEndpointPhoneFrom getFrom() const;
    void setFrom(const OAIEndpointPhoneFrom &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    qint32 getLengthTimer() const;
    void setLengthTimer(const qint32 &length_timer);
    bool is_length_timer_Set() const;
    bool is_length_timer_Valid() const;

    QString getMachineDetection() const;
    void setMachineDetection(const QString &machine_detection);
    bool is_machine_detection_Set() const;
    bool is_machine_detection_Valid() const;

    bool isRandomFromNumber() const;
    void setRandomFromNumber(const bool &random_from_number);
    bool is_random_from_number_Set() const;
    bool is_random_from_number_Valid() const;

    qint32 getRingingTimer() const;
    void setRingingTimer(const qint32 &ringing_timer);
    bool is_ringing_timer_Set() const;
    bool is_ringing_timer_Valid() const;

    QList<OAICreateCallRequestBase_to_inner> getTo() const;
    void setTo(const QList<OAICreateCallRequestBase_to_inner> &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_method;
    bool m_event_method_isSet;
    bool m_event_method_isValid;

    QList<QString> m_event_url;
    bool m_event_url_isSet;
    bool m_event_url_isValid;

    OAIEndpointPhoneFrom m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    qint32 m_length_timer;
    bool m_length_timer_isSet;
    bool m_length_timer_isValid;

    QString m_machine_detection;
    bool m_machine_detection_isSet;
    bool m_machine_detection_isValid;

    bool m_random_from_number;
    bool m_random_from_number_isSet;
    bool m_random_from_number_isValid;

    qint32 m_ringing_timer;
    bool m_ringing_timer_isSet;
    bool m_ringing_timer_isValid;

    QList<OAICreateCallRequestBase_to_inner> m_to;
    bool m_to_isSet;
    bool m_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCallRequestBase)

#endif // OAICreateCallRequestBase_H
