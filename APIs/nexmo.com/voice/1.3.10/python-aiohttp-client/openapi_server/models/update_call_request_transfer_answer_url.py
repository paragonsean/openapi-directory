# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.request_transfer_action_param import RequestTransferActionParam
from openapi_server.models.update_call_request_transfer_answer_url_destination import UpdateCallRequestTransferAnswerUrlDestination
from openapi_server import util


class UpdateCallRequestTransferAnswerUrl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: RequestTransferActionParam=None, destination: UpdateCallRequestTransferAnswerUrlDestination=None):
        """UpdateCallRequestTransferAnswerUrl - a model defined in OpenAPI

        :param action: The action of this UpdateCallRequestTransferAnswerUrl.
        :param destination: The destination of this UpdateCallRequestTransferAnswerUrl.
        """
        self.openapi_types = {
            'action': RequestTransferActionParam,
            'destination': UpdateCallRequestTransferAnswerUrlDestination
        }

        self.attribute_map = {
            'action': 'action',
            'destination': 'destination'
        }

        self._action = action
        self._destination = destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCallRequestTransferAnswerUrl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCallRequestTransferAnswerUrl of this UpdateCallRequestTransferAnswerUrl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this UpdateCallRequestTransferAnswerUrl.


        :return: The action of this UpdateCallRequestTransferAnswerUrl.
        :rtype: RequestTransferActionParam
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this UpdateCallRequestTransferAnswerUrl.


        :param action: The action of this UpdateCallRequestTransferAnswerUrl.
        :type action: RequestTransferActionParam
        """
        if action is None:
            raise ValueError("Invalid value for `action`, must not be `None`")

        self._action = action

    @property
    def destination(self):
        """Gets the destination of this UpdateCallRequestTransferAnswerUrl.


        :return: The destination of this UpdateCallRequestTransferAnswerUrl.
        :rtype: UpdateCallRequestTransferAnswerUrlDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this UpdateCallRequestTransferAnswerUrl.


        :param destination: The destination of this UpdateCallRequestTransferAnswerUrl.
        :type destination: UpdateCallRequestTransferAnswerUrlDestination
        """
        if destination is None:
            raise ValueError("Invalid value for `destination`, must not be `None`")

        self._destination = destination
