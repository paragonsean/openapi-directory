# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartStreamRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, level: str='0', loop: int=1, stream_url: List[str]=None):
        """StartStreamRequest - a model defined in OpenAPI

        :param level: The level of this StartStreamRequest.
        :param loop: The loop of this StartStreamRequest.
        :param stream_url: The stream_url of this StartStreamRequest.
        """
        self.openapi_types = {
            'level': str,
            'loop': int,
            'stream_url': List[str]
        }

        self.attribute_map = {
            'level': 'level',
            'loop': 'loop',
            'stream_url': 'stream_url'
        }

        self._level = level
        self._loop = loop
        self._stream_url = stream_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartStreamRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartStreamRequest of this StartStreamRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def level(self):
        """Gets the level of this StartStreamRequest.

        Set the audio level of the stream in the range `-1 >= level <= 1` with a precision of 0.1. The default value is 0.

        :return: The level of this StartStreamRequest.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this StartStreamRequest.

        Set the audio level of the stream in the range `-1 >= level <= 1` with a precision of 0.1. The default value is 0.

        :param level: The level of this StartStreamRequest.
        :type level: str
        """

        self._level = level

    @property
    def loop(self):
        """Gets the loop of this StartStreamRequest.

        the number of times to play the file, 0 for infinite

        :return: The loop of this StartStreamRequest.
        :rtype: int
        """
        return self._loop

    @loop.setter
    def loop(self, loop):
        """Sets the loop of this StartStreamRequest.

        the number of times to play the file, 0 for infinite

        :param loop: The loop of this StartStreamRequest.
        :type loop: int
        """

        self._loop = loop

    @property
    def stream_url(self):
        """Gets the stream_url of this StartStreamRequest.


        :return: The stream_url of this StartStreamRequest.
        :rtype: List[str]
        """
        return self._stream_url

    @stream_url.setter
    def stream_url(self, stream_url):
        """Sets the stream_url of this StartStreamRequest.


        :param stream_url: The stream_url of this StartStreamRequest.
        :type stream_url: List[str]
        """
        if stream_url is None:
            raise ValueError("Invalid value for `stream_url`, must not be `None`")

        self._stream_url = stream_url
