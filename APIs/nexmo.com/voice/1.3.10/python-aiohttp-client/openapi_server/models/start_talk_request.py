# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.language import Language
from openapi_server.models.voice_name import VoiceName
from openapi_server import util


class StartTalkRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language: Language=Language.EN_MINUS_US, level: str='0', loop: int=1, premium: bool=False, style: int=0, text: str=None, voice_name: VoiceName=VoiceName.KIMBERLY):
        """StartTalkRequest - a model defined in OpenAPI

        :param language: The language of this StartTalkRequest.
        :param level: The level of this StartTalkRequest.
        :param loop: The loop of this StartTalkRequest.
        :param premium: The premium of this StartTalkRequest.
        :param style: The style of this StartTalkRequest.
        :param text: The text of this StartTalkRequest.
        :param voice_name: The voice_name of this StartTalkRequest.
        """
        self.openapi_types = {
            'language': Language,
            'level': str,
            'loop': int,
            'premium': bool,
            'style': int,
            'text': str,
            'voice_name': VoiceName
        }

        self.attribute_map = {
            'language': 'language',
            'level': 'level',
            'loop': 'loop',
            'premium': 'premium',
            'style': 'style',
            'text': 'text',
            'voice_name': 'voice_name'
        }

        self._language = language
        self._level = level
        self._loop = loop
        self._premium = premium
        self._style = style
        self._text = text
        self._voice_name = voice_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartTalkRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartTalkRequest of this StartTalkRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language(self):
        """Gets the language of this StartTalkRequest.


        :return: The language of this StartTalkRequest.
        :rtype: Language
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this StartTalkRequest.


        :param language: The language of this StartTalkRequest.
        :type language: Language
        """

        self._language = language

    @property
    def level(self):
        """Gets the level of this StartTalkRequest.

        The volume level that the speech is played. This can be any value between `-1` to `1` in `0.1` increments, with `0` being the default.

        :return: The level of this StartTalkRequest.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this StartTalkRequest.

        The volume level that the speech is played. This can be any value between `-1` to `1` in `0.1` increments, with `0` being the default.

        :param level: The level of this StartTalkRequest.
        :type level: str
        """

        self._level = level

    @property
    def loop(self):
        """Gets the loop of this StartTalkRequest.

        The number of times to repeat the text the file, 0 for infinite

        :return: The loop of this StartTalkRequest.
        :rtype: int
        """
        return self._loop

    @loop.setter
    def loop(self, loop):
        """Sets the loop of this StartTalkRequest.

        The number of times to repeat the text the file, 0 for infinite

        :param loop: The loop of this StartTalkRequest.
        :type loop: int
        """

        self._loop = loop

    @property
    def premium(self):
        """Gets the premium of this StartTalkRequest.

        Set to true to use the premium version of the specified style if available, otherwise the standard version will be used. The default value is false. You can find more information about Premium Voices in the [Text-To-Speech guide](/voice/voice-api/guides/text-to-speech#premium-voices).

        :return: The premium of this StartTalkRequest.
        :rtype: bool
        """
        return self._premium

    @premium.setter
    def premium(self, premium):
        """Sets the premium of this StartTalkRequest.

        Set to true to use the premium version of the specified style if available, otherwise the standard version will be used. The default value is false. You can find more information about Premium Voices in the [Text-To-Speech guide](/voice/voice-api/guides/text-to-speech#premium-voices).

        :param premium: The premium of this StartTalkRequest.
        :type premium: bool
        """

        self._premium = premium

    @property
    def style(self):
        """Gets the style of this StartTalkRequest.

        The vocal style (vocal range, tessitura, and timbre) to use

        :return: The style of this StartTalkRequest.
        :rtype: int
        """
        return self._style

    @style.setter
    def style(self, style):
        """Sets the style of this StartTalkRequest.

        The vocal style (vocal range, tessitura, and timbre) to use

        :param style: The style of this StartTalkRequest.
        :type style: int
        """

        self._style = style

    @property
    def text(self):
        """Gets the text of this StartTalkRequest.

        The text to read

        :return: The text of this StartTalkRequest.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this StartTalkRequest.

        The text to read

        :param text: The text of this StartTalkRequest.
        :type text: str
        """
        if text is None:
            raise ValueError("Invalid value for `text`, must not be `None`")

        self._text = text

    @property
    def voice_name(self):
        """Gets the voice_name of this StartTalkRequest.


        :return: The voice_name of this StartTalkRequest.
        :rtype: VoiceName
        """
        return self._voice_name

    @voice_name.setter
    def voice_name(self, voice_name):
        """Sets the voice_name of this StartTalkRequest.


        :param voice_name: The voice_name of this StartTalkRequest.
        :type voice_name: VoiceName
        """

        self._voice_name = voice_name
