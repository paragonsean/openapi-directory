/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StartStreamRequest model module.
 * @module model/StartStreamRequest
 * @version 1.3.10
 */
class StartStreamRequest {
    /**
     * Constructs a new <code>StartStreamRequest</code>.
     * @alias module:model/StartStreamRequest
     * @param streamUrl {Array.<String>} 
     */
    constructor(streamUrl) { 
        
        StartStreamRequest.initialize(this, streamUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, streamUrl) { 
        obj['level'] = '0';
        obj['loop'] = 1;
        obj['stream_url'] = streamUrl;
    }

    /**
     * Constructs a <code>StartStreamRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartStreamRequest} obj Optional instance to populate.
     * @return {module:model/StartStreamRequest} The populated <code>StartStreamRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartStreamRequest();

            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'String');
            }
            if (data.hasOwnProperty('loop')) {
                obj['loop'] = ApiClient.convertToType(data['loop'], 'Number');
            }
            if (data.hasOwnProperty('stream_url')) {
                obj['stream_url'] = ApiClient.convertToType(data['stream_url'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartStreamRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartStreamRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartStreamRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['level'] && !(typeof data['level'] === 'string' || data['level'] instanceof String)) {
            throw new Error("Expected the field `level` to be a primitive type in the JSON string but got " + data['level']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stream_url'])) {
            throw new Error("Expected the field `stream_url` to be an array in the JSON data but got " + data['stream_url']);
        }

        return true;
    }


}

StartStreamRequest.RequiredProperties = ["stream_url"];

/**
 * Set the audio level of the stream in the range `-1 >= level <= 1` with a precision of 0.1. The default value is 0.
 * @member {String} level
 * @default '0'
 */
StartStreamRequest.prototype['level'] = '0';

/**
 * the number of times to play the file, 0 for infinite
 * @member {Number} loop
 * @default 1
 */
StartStreamRequest.prototype['loop'] = 1;

/**
 * @member {Array.<String>} stream_url
 */
StartStreamRequest.prototype['stream_url'] = undefined;






export default StartStreamRequest;

