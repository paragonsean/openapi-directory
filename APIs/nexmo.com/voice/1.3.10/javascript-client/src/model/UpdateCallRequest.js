/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateCallRequestEarmuff from './UpdateCallRequestEarmuff';
import UpdateCallRequestHangup from './UpdateCallRequestHangup';
import UpdateCallRequestMute from './UpdateCallRequestMute';
import UpdateCallRequestTransferAnswerUrl from './UpdateCallRequestTransferAnswerUrl';
import UpdateCallRequestTransferAnswerUrlDestination from './UpdateCallRequestTransferAnswerUrlDestination';
import UpdateCallRequestTransferNcco from './UpdateCallRequestTransferNcco';
import UpdateCallRequestUnearmuff from './UpdateCallRequestUnearmuff';
import UpdateCallRequestUnmute from './UpdateCallRequestUnmute';

/**
 * The UpdateCallRequest model module.
 * @module model/UpdateCallRequest
 * @version 1.3.10
 */
class UpdateCallRequest {
    /**
     * Constructs a new <code>UpdateCallRequest</code>.
     * @alias module:model/UpdateCallRequest
     * @param {(module:model/UpdateCallRequestEarmuff|module:model/UpdateCallRequestHangup|module:model/UpdateCallRequestMute|module:model/UpdateCallRequestTransferAnswerUrl|module:model/UpdateCallRequestTransferNcco|module:model/UpdateCallRequestUnearmuff|module:model/UpdateCallRequestUnmute)} instance The actual instance to initialize UpdateCallRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "UpdateCallRequestTransferNcco") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UpdateCallRequestTransferNcco.validateJSON(instance); // throw an exception if no match
                // create UpdateCallRequestTransferNcco from JS object
                this.actualInstance = UpdateCallRequestTransferNcco.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UpdateCallRequestTransferNcco
            errorMessages.push("Failed to construct UpdateCallRequestTransferNcco: " + err)
        }

        try {
            if (typeof instance === "UpdateCallRequestTransferAnswerUrl") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UpdateCallRequestTransferAnswerUrl.validateJSON(instance); // throw an exception if no match
                // create UpdateCallRequestTransferAnswerUrl from JS object
                this.actualInstance = UpdateCallRequestTransferAnswerUrl.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UpdateCallRequestTransferAnswerUrl
            errorMessages.push("Failed to construct UpdateCallRequestTransferAnswerUrl: " + err)
        }

        try {
            if (typeof instance === "UpdateCallRequestHangup") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UpdateCallRequestHangup.validateJSON(instance); // throw an exception if no match
                // create UpdateCallRequestHangup from JS object
                this.actualInstance = UpdateCallRequestHangup.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UpdateCallRequestHangup
            errorMessages.push("Failed to construct UpdateCallRequestHangup: " + err)
        }

        try {
            if (typeof instance === "UpdateCallRequestMute") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UpdateCallRequestMute.validateJSON(instance); // throw an exception if no match
                // create UpdateCallRequestMute from JS object
                this.actualInstance = UpdateCallRequestMute.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UpdateCallRequestMute
            errorMessages.push("Failed to construct UpdateCallRequestMute: " + err)
        }

        try {
            if (typeof instance === "UpdateCallRequestUnmute") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UpdateCallRequestUnmute.validateJSON(instance); // throw an exception if no match
                // create UpdateCallRequestUnmute from JS object
                this.actualInstance = UpdateCallRequestUnmute.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UpdateCallRequestUnmute
            errorMessages.push("Failed to construct UpdateCallRequestUnmute: " + err)
        }

        try {
            if (typeof instance === "UpdateCallRequestEarmuff") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UpdateCallRequestEarmuff.validateJSON(instance); // throw an exception if no match
                // create UpdateCallRequestEarmuff from JS object
                this.actualInstance = UpdateCallRequestEarmuff.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UpdateCallRequestEarmuff
            errorMessages.push("Failed to construct UpdateCallRequestEarmuff: " + err)
        }

        try {
            if (typeof instance === "UpdateCallRequestUnearmuff") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UpdateCallRequestUnearmuff.validateJSON(instance); // throw an exception if no match
                // create UpdateCallRequestUnearmuff from JS object
                this.actualInstance = UpdateCallRequestUnearmuff.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UpdateCallRequestUnearmuff
            errorMessages.push("Failed to construct UpdateCallRequestUnearmuff: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `UpdateCallRequest` with oneOf schemas UpdateCallRequestEarmuff, UpdateCallRequestHangup, UpdateCallRequestMute, UpdateCallRequestTransferAnswerUrl, UpdateCallRequestTransferNcco, UpdateCallRequestUnearmuff, UpdateCallRequestUnmute. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `UpdateCallRequest` with oneOf schemas UpdateCallRequestEarmuff, UpdateCallRequestHangup, UpdateCallRequestMute, UpdateCallRequestTransferAnswerUrl, UpdateCallRequestTransferNcco, UpdateCallRequestUnearmuff, UpdateCallRequestUnmute. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>UpdateCallRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateCallRequest} obj Optional instance to populate.
     * @return {module:model/UpdateCallRequest} The populated <code>UpdateCallRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new UpdateCallRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>UpdateCallRequestEarmuff</code>, <code>UpdateCallRequestHangup</code>, <code>UpdateCallRequestMute</code>, <code>UpdateCallRequestTransferAnswerUrl</code>, <code>UpdateCallRequestTransferNcco</code>, <code>UpdateCallRequestUnearmuff</code>, <code>UpdateCallRequestUnmute</code>.
     * @return {(module:model/UpdateCallRequestEarmuff|module:model/UpdateCallRequestHangup|module:model/UpdateCallRequestMute|module:model/UpdateCallRequestTransferAnswerUrl|module:model/UpdateCallRequestTransferNcco|module:model/UpdateCallRequestUnearmuff|module:model/UpdateCallRequestUnmute)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>UpdateCallRequestEarmuff</code>, <code>UpdateCallRequestHangup</code>, <code>UpdateCallRequestMute</code>, <code>UpdateCallRequestTransferAnswerUrl</code>, <code>UpdateCallRequestTransferNcco</code>, <code>UpdateCallRequestUnearmuff</code>, <code>UpdateCallRequestUnmute</code>.
     * @param {(module:model/UpdateCallRequestEarmuff|module:model/UpdateCallRequestHangup|module:model/UpdateCallRequestMute|module:model/UpdateCallRequestTransferAnswerUrl|module:model/UpdateCallRequestTransferNcco|module:model/UpdateCallRequestUnearmuff|module:model/UpdateCallRequestUnmute)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = UpdateCallRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of UpdateCallRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/UpdateCallRequest} An instance of UpdateCallRequest.
     */
    static fromJSON = function(json_string){
        return UpdateCallRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Allow the specified UUID to hear audio
 * @member {module:model/UpdateCallRequest.ActionEnum} action
 */
UpdateCallRequest.prototype['action'] = undefined;

/**
 * @member {module:model/UpdateCallRequestTransferAnswerUrlDestination} destination
 */
UpdateCallRequest.prototype['destination'] = undefined;


UpdateCallRequest.OneOf = ["UpdateCallRequestEarmuff", "UpdateCallRequestHangup", "UpdateCallRequestMute", "UpdateCallRequestTransferAnswerUrl", "UpdateCallRequestTransferNcco", "UpdateCallRequestUnearmuff", "UpdateCallRequestUnmute"];

export default UpdateCallRequest;

