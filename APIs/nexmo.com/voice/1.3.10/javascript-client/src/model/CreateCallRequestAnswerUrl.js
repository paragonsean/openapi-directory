/**
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateCallRequestBase from './CreateCallRequestBase';
import CreateCallRequestBaseToInner from './CreateCallRequestBaseToInner';
import EndpointPhoneFrom from './EndpointPhoneFrom';

/**
 * The CreateCallRequestAnswerUrl model module.
 * @module model/CreateCallRequestAnswerUrl
 * @version 1.3.10
 */
class CreateCallRequestAnswerUrl {
    /**
     * Constructs a new <code>CreateCallRequestAnswerUrl</code>.
     * @alias module:model/CreateCallRequestAnswerUrl
     * @implements module:model/CreateCallRequestBase
     * @param from {module:model/EndpointPhoneFrom} 
     * @param to {Array.<module:model/CreateCallRequestBaseToInner>} 
     * @param answerUrl {Array.<String>} The webhook endpoint where you provide the [Nexmo Call Control Object](/voice/voice-api/ncco-reference) that governs this call. 
     */
    constructor(from, to, answerUrl) { 
        CreateCallRequestBase.initialize(this, from, to);
        CreateCallRequestAnswerUrl.initialize(this, from, to, answerUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, from, to, answerUrl) { 
        obj['event_method'] = 'POST';
        obj['from'] = from;
        obj['length_timer'] = 7200;
        obj['random_from_number'] = false;
        obj['ringing_timer'] = 60;
        obj['to'] = to;
        obj['answer_method'] = 'GET';
        obj['answer_url'] = answerUrl;
    }

    /**
     * Constructs a <code>CreateCallRequestAnswerUrl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateCallRequestAnswerUrl} obj Optional instance to populate.
     * @return {module:model/CreateCallRequestAnswerUrl} The populated <code>CreateCallRequestAnswerUrl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateCallRequestAnswerUrl();
            CreateCallRequestBase.constructFromObject(data, obj);

            if (data.hasOwnProperty('event_method')) {
                obj['event_method'] = ApiClient.convertToType(data['event_method'], 'String');
            }
            if (data.hasOwnProperty('event_url')) {
                obj['event_url'] = ApiClient.convertToType(data['event_url'], ['String']);
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = EndpointPhoneFrom.constructFromObject(data['from']);
            }
            if (data.hasOwnProperty('length_timer')) {
                obj['length_timer'] = ApiClient.convertToType(data['length_timer'], 'Number');
            }
            if (data.hasOwnProperty('machine_detection')) {
                obj['machine_detection'] = ApiClient.convertToType(data['machine_detection'], 'String');
            }
            if (data.hasOwnProperty('random_from_number')) {
                obj['random_from_number'] = ApiClient.convertToType(data['random_from_number'], 'Boolean');
            }
            if (data.hasOwnProperty('ringing_timer')) {
                obj['ringing_timer'] = ApiClient.convertToType(data['ringing_timer'], 'Number');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], [CreateCallRequestBaseToInner]);
            }
            if (data.hasOwnProperty('answer_method')) {
                obj['answer_method'] = ApiClient.convertToType(data['answer_method'], 'String');
            }
            if (data.hasOwnProperty('answer_url')) {
                obj['answer_url'] = ApiClient.convertToType(data['answer_url'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateCallRequestAnswerUrl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateCallRequestAnswerUrl</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateCallRequestAnswerUrl.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['event_method'] && !(typeof data['event_method'] === 'string' || data['event_method'] instanceof String)) {
            throw new Error("Expected the field `event_method` to be a primitive type in the JSON string but got " + data['event_method']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['event_url'])) {
            throw new Error("Expected the field `event_url` to be an array in the JSON data but got " + data['event_url']);
        }
        // validate the optional field `from`
        if (data['from']) { // data not null
          EndpointPhoneFrom.validateJSON(data['from']);
        }
        // ensure the json data is a string
        if (data['machine_detection'] && !(typeof data['machine_detection'] === 'string' || data['machine_detection'] instanceof String)) {
            throw new Error("Expected the field `machine_detection` to be a primitive type in the JSON string but got " + data['machine_detection']);
        }
        if (data['to']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['to'])) {
                throw new Error("Expected the field `to` to be an array in the JSON data but got " + data['to']);
            }
            // validate the optional field `to` (array)
            for (const item of data['to']) {
                CreateCallRequestBaseToInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['answer_method'] && !(typeof data['answer_method'] === 'string' || data['answer_method'] instanceof String)) {
            throw new Error("Expected the field `answer_method` to be a primitive type in the JSON string but got " + data['answer_method']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['answer_url'])) {
            throw new Error("Expected the field `answer_url` to be an array in the JSON data but got " + data['answer_url']);
        }

        return true;
    }


}

CreateCallRequestAnswerUrl.RequiredProperties = ["from", "to", "answer_url"];

/**
 * The HTTP method used to send event information to `event_url`.
 * @member {module:model/CreateCallRequestAnswerUrl.EventMethodEnum} event_method
 * @default 'POST'
 */
CreateCallRequestAnswerUrl.prototype['event_method'] = 'POST';

/**
 * **Required** unless `event_url` is configured at the application level, see [Create an Application](/api/application.v2#createApplication)  The webhook endpoint where call progress events are sent to. For more information about the values sent, see [Event webhook](/voice/voice-api/webhook-reference#event-webhook). 
 * @member {Array.<String>} event_url
 */
CreateCallRequestAnswerUrl.prototype['event_url'] = undefined;

/**
 * @member {module:model/EndpointPhoneFrom} from
 */
CreateCallRequestAnswerUrl.prototype['from'] = undefined;

/**
 * Set the number of seconds that elapse before Vonage hangs up after the call state changes to answered.
 * @member {Number} length_timer
 * @default 7200
 */
CreateCallRequestAnswerUrl.prototype['length_timer'] = 7200;

/**
 * Configure the behavior when Vonage detects that the call is answered by voicemail. If `continue`, Vonage sends an HTTP request to `event_url` with the Call event machine. If `hangup`, Vonage ends the call.
 * @member {module:model/CreateCallRequestAnswerUrl.MachineDetectionEnum} machine_detection
 */
CreateCallRequestAnswerUrl.prototype['machine_detection'] = undefined;

/**
 * Set to `true` to use random phone number as `from`. The number will be selected from the list of the numbers assigned to the current application. `random_from_number: true` cannot be used together with `from`.
 * @member {Boolean} random_from_number
 * @default false
 */
CreateCallRequestAnswerUrl.prototype['random_from_number'] = false;

/**
 * Set the number of seconds that elapse before Vonage hangs up after the call state changes to ‘ringing’.
 * @member {Number} ringing_timer
 * @default 60
 */
CreateCallRequestAnswerUrl.prototype['ringing_timer'] = 60;

/**
 * @member {Array.<module:model/CreateCallRequestBaseToInner>} to
 */
CreateCallRequestAnswerUrl.prototype['to'] = undefined;

/**
 * The HTTP method used to send event information to answer_url.
 * @member {module:model/CreateCallRequestAnswerUrl.AnswerMethodEnum} answer_method
 * @default 'GET'
 */
CreateCallRequestAnswerUrl.prototype['answer_method'] = 'GET';

/**
 * The webhook endpoint where you provide the [Nexmo Call Control Object](/voice/voice-api/ncco-reference) that governs this call. 
 * @member {Array.<String>} answer_url
 */
CreateCallRequestAnswerUrl.prototype['answer_url'] = undefined;


// Implement CreateCallRequestBase interface:
/**
 * The HTTP method used to send event information to `event_url`.
 * @member {module:model/CreateCallRequestBase.EventMethodEnum} event_method
 * @default 'POST'
 */
CreateCallRequestBase.prototype['event_method'] = 'POST';
/**
 * **Required** unless `event_url` is configured at the application level, see [Create an Application](/api/application.v2#createApplication)  The webhook endpoint where call progress events are sent to. For more information about the values sent, see [Event webhook](/voice/voice-api/webhook-reference#event-webhook). 
 * @member {Array.<String>} event_url
 */
CreateCallRequestBase.prototype['event_url'] = undefined;
/**
 * @member {module:model/EndpointPhoneFrom} from
 */
CreateCallRequestBase.prototype['from'] = undefined;
/**
 * Set the number of seconds that elapse before Vonage hangs up after the call state changes to answered.
 * @member {Number} length_timer
 * @default 7200
 */
CreateCallRequestBase.prototype['length_timer'] = 7200;
/**
 * Configure the behavior when Vonage detects that the call is answered by voicemail. If `continue`, Vonage sends an HTTP request to `event_url` with the Call event machine. If `hangup`, Vonage ends the call.
 * @member {module:model/CreateCallRequestBase.MachineDetectionEnum} machine_detection
 */
CreateCallRequestBase.prototype['machine_detection'] = undefined;
/**
 * Set to `true` to use random phone number as `from`. The number will be selected from the list of the numbers assigned to the current application. `random_from_number: true` cannot be used together with `from`.
 * @member {Boolean} random_from_number
 * @default false
 */
CreateCallRequestBase.prototype['random_from_number'] = false;
/**
 * Set the number of seconds that elapse before Vonage hangs up after the call state changes to ‘ringing’.
 * @member {Number} ringing_timer
 * @default 60
 */
CreateCallRequestBase.prototype['ringing_timer'] = 60;
/**
 * @member {Array.<module:model/CreateCallRequestBaseToInner>} to
 */
CreateCallRequestBase.prototype['to'] = undefined;



/**
 * Allowed values for the <code>event_method</code> property.
 * @enum {String}
 * @readonly
 */
CreateCallRequestAnswerUrl['EventMethodEnum'] = {

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET"
};


/**
 * Allowed values for the <code>machine_detection</code> property.
 * @enum {String}
 * @readonly
 */
CreateCallRequestAnswerUrl['MachineDetectionEnum'] = {

    /**
     * value: "continue"
     * @const
     */
    "continue": "continue",

    /**
     * value: "hangup"
     * @const
     */
    "hangup": "hangup"
};


/**
 * Allowed values for the <code>answer_method</code> property.
 * @enum {String}
 * @readonly
 */
CreateCallRequestAnswerUrl['AnswerMethodEnum'] = {

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET"
};



export default CreateCallRequestAnswerUrl;

