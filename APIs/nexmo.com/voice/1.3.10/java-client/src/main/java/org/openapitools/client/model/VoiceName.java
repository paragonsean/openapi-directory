/*
 * Voice API
 * The Voice API lets you create outbound calls, control in-progress calls and get information about historical calls. More information about the Voice API can be found at <https://developer.nexmo.com/voice/voice-api/overview>.
 *
 * The version of the OpenAPI document: 1.3.10
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * &lt;strong&gt;DEPRECATED&lt;/strong&gt; The voice &amp; language to use
 */
@JsonAdapter(VoiceName.Adapter.class)
public enum VoiceName {
  
  ADITI("Aditi"),
  
  AGNIESZKA("Agnieszka"),
  
  ALVA("Alva"),
  
  AMY("Amy"),
  
  ASTRID("Astrid"),
  
  BIANCA("Bianca"),
  
  BRIAN("Brian"),
  
  CARLA("Carla"),
  
  CARMEN("Carmen"),
  
  CARMIT("Carmit"),
  
  CATARINA("Catarina"),
  
  CELINE("Celine"),
  
  CEM("Cem"),
  
  CHANTAL("Chantal"),
  
  CHIPMUNK("Chipmunk"),
  
  CONCHITA("Conchita"),
  
  CRISTIANO("Cristiano"),
  
  DAMAYANTI("Damayanti"),
  
  DORA("Dora"),
  
  EMMA("Emma"),
  
  EMPAR("Empar"),
  
  ENRIQUE("Enrique"),
  
  ERIC("Eric"),
  
  EWA("Ewa"),
  
  FELIPE("Felipe"),
  
  FILIZ("Filiz"),
  
  GERAINT("Geraint"),
  
  GIORGIO("Giorgio"),
  
  GWYNETH("Gwyneth"),
  
  HANS("Hans"),
  
  HENRIK("Henrik"),
  
  INES("Ines"),
  
  IOANA("Ioana"),
  
  IVETA("Iveta"),
  
  IVY("Ivy"),
  
  JACEK("Jacek"),
  
  JAN("Jan"),
  
  JENNIFER("Jennifer"),
  
  JOANA("Joana"),
  
  JOANNA("Joanna"),
  
  JOEY("Joey"),
  
  JORDI("Jordi"),
  
  JUSTIN("Justin"),
  
  KANYA("Kanya"),
  
  KARL("Karl"),
  
  KENDRA("Kendra"),
  
  KIMBERLY("Kimberly"),
  
  LAILA("Laila"),
  
  LAURA("Laura"),
  
  LEA("Lea"),
  
  LEKHA("Lekha"),
  
  LIV("Liv"),
  
  LOTTE("Lotte"),
  
  LUCIA("Lucia"),
  
  LUCIANA("Luciana"),
  
  MADS("Mads"),
  
  MAGED("Maged"),
  
  MAJA("Maja"),
  
  MARISKA("Mariska"),
  
  MARLENE("Marlene"),
  
  MATHIEU("Mathieu"),
  
  MATTHEW("Matthew"),
  
  MAXIM("Maxim"),
  
  MEI_JIA("Mei-Jia"),
  
  MELINA("Melina"),
  
  MIA("Mia"),
  
  MIGUEL("Miguel"),
  
  MIREN("Miren"),
  
  MIZUKI("Mizuki"),
  
  MONTSERRAT("Montserrat"),
  
  NAJA("Naja"),
  
  NICOLE("Nicole"),
  
  NIKOS("Nikos"),
  
  NORA("Nora"),
  
  OSKAR("Oskar"),
  
  PENELOPE("Penelope"),
  
  RAVEENA("Raveena"),
  
  RICARDO("Ricardo"),
  
  RUBEN("Ruben"),
  
  RUSSELL("Russell"),
  
  SALLI("Salli"),
  
  SATU("Satu"),
  
  SEOYEON("Seoyeon"),
  
  SIN_JI("Sin-Ji"),
  
  SORA("Sora"),
  
  TAKUMI("Takumi"),
  
  TARIK("Tarik"),
  
  TATYANA("Tatyana"),
  
  TESSA("Tessa"),
  
  TIAN_TIAN("Tian-Tian"),
  
  VICKI("Vicki"),
  
  VITORIA("Vitoria"),
  
  YELDA("Yelda"),
  
  ZEINA("Zeina"),
  
  ZHIYU("Zhiyu"),
  
  ZUZANA("Zuzana");

  private String value;

  VoiceName(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static VoiceName fromValue(String value) {
    for (VoiceName b : VoiceName.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<VoiceName> {
    @Override
    public void write(final JsonWriter jsonWriter, final VoiceName enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public VoiceName read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return VoiceName.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    VoiceName.fromValue(value);
  }
}

