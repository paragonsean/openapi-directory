/**
 * Account API
 * Enables users to manage their Vonage API Account by programmable means. More information is available here: <https://developer.nexmo.com/account/overview>.
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorAPIKeyNotFound from './ErrorAPIKeyNotFound';
import ErrorSecretIDNotFound from './ErrorSecretIDNotFound';

/**
 * The RetrieveAPISecret404Response model module.
 * @module model/RetrieveAPISecret404Response
 * @version 1.0.4
 */
class RetrieveAPISecret404Response {
    /**
     * Constructs a new <code>RetrieveAPISecret404Response</code>.
     * @alias module:model/RetrieveAPISecret404Response
     * @param {(module:model/ErrorAPIKeyNotFound|module:model/ErrorSecretIDNotFound)} instance The actual instance to initialize RetrieveAPISecret404Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ErrorAPIKeyNotFound") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ErrorAPIKeyNotFound.validateJSON(instance); // throw an exception if no match
                // create ErrorAPIKeyNotFound from JS object
                this.actualInstance = ErrorAPIKeyNotFound.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ErrorAPIKeyNotFound
            errorMessages.push("Failed to construct ErrorAPIKeyNotFound: " + err)
        }

        try {
            if (typeof instance === "ErrorSecretIDNotFound") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ErrorSecretIDNotFound.validateJSON(instance); // throw an exception if no match
                // create ErrorSecretIDNotFound from JS object
                this.actualInstance = ErrorSecretIDNotFound.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ErrorSecretIDNotFound
            errorMessages.push("Failed to construct ErrorSecretIDNotFound: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `RetrieveAPISecret404Response` with oneOf schemas ErrorAPIKeyNotFound, ErrorSecretIDNotFound. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `RetrieveAPISecret404Response` with oneOf schemas ErrorAPIKeyNotFound, ErrorSecretIDNotFound. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>RetrieveAPISecret404Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetrieveAPISecret404Response} obj Optional instance to populate.
     * @return {module:model/RetrieveAPISecret404Response} The populated <code>RetrieveAPISecret404Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new RetrieveAPISecret404Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>ErrorAPIKeyNotFound</code>, <code>ErrorSecretIDNotFound</code>.
     * @return {(module:model/ErrorAPIKeyNotFound|module:model/ErrorSecretIDNotFound)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ErrorAPIKeyNotFound</code>, <code>ErrorSecretIDNotFound</code>.
     * @param {(module:model/ErrorAPIKeyNotFound|module:model/ErrorSecretIDNotFound)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = RetrieveAPISecret404Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of RetrieveAPISecret404Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/RetrieveAPISecret404Response} An instance of RetrieveAPISecret404Response.
     */
    static fromJSON = function(json_string){
        return RetrieveAPISecret404Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * More detail regarding this error, including the secret ID supplied
 * @member {String} detail
 */
RetrieveAPISecret404Response.prototype['detail'] = undefined;

/**
 * Internal Trace ID
 * @member {String} instance
 */
RetrieveAPISecret404Response.prototype['instance'] = undefined;

/**
 * Description of the error
 * @member {String} title
 */
RetrieveAPISecret404Response.prototype['title'] = undefined;

/**
 * URL for further information
 * @member {String} type
 */
RetrieveAPISecret404Response.prototype['type'] = undefined;


RetrieveAPISecret404Response.OneOf = ["ErrorAPIKeyNotFound", "ErrorSecretIDNotFound"];

export default RetrieveAPISecret404Response;

