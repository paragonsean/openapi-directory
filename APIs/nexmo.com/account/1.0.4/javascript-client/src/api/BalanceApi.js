/**
 * Account API
 * Enables users to manage their Vonage API Account by programmable means. More information is available here: <https://developer.nexmo.com/account/overview>.
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccountBalance from '../model/AccountBalance';
import ErrorAuthenticationFailedAccountBalance from '../model/ErrorAuthenticationFailedAccountBalance';
import Success from '../model/Success';
import TopUpAccountBalance401Response from '../model/TopUpAccountBalance401Response';

/**
* Balance service.
* @module api/BalanceApi
* @version 1.0.4
*/
export default class BalanceApi {

    /**
    * Constructs a new BalanceApi. 
    * @alias module:api/BalanceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAccountBalance operation.
     * @callback module:api/BalanceApi~getAccountBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountBalance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Account Balance
     * Retrieve the current balance of your Vonage API account
     * @param {String} apiKey Your Vonage API key. You can find this in the [dashboard](https://dashboard.nexmo.com)
     * @param {String} apiSecret Your Vonage API secret. You can find this in the [dashboard](https://dashboard.nexmo.com)
     * @param {module:api/BalanceApi~getAccountBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountBalance}
     */
    getAccountBalance(apiKey, apiSecret, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling getAccountBalance");
      }
      // verify the required parameter 'apiSecret' is set
      if (apiSecret === undefined || apiSecret === null) {
        throw new Error("Missing the required parameter 'apiSecret' when calling getAccountBalance");
      }

      let pathParams = {
      };
      let queryParams = {
        'api_key': apiKey,
        'api_secret': apiSecret
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = AccountBalance;
      let basePaths = ['https://rest.nexmo.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/account/get-balance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the topUpAccountBalance operation.
     * @callback module:api/BalanceApi~topUpAccountBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Success} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Top Up Account Balance
     * You can top up your account using this API when you have enabled auto-reload in the dashboard. The amount added by the top-up operation will be the same amount as was added in the payment when auto-reload was enabled. Your account balance is checked every 5-10 minutes and if it falls below the threshold and auto-reload is enabled, then it will be topped up automatically. Use this endpoint  if you need to top up at times when your credit may be exhausted more quickly than the auto-reload may occur.
     * @param {String} apiKey Your Vonage API key. You can find this in the [dashboard](https://dashboard.nexmo.com)
     * @param {String} apiSecret Your Vonage API secret. You can find this in the [dashboard](https://dashboard.nexmo.com)
     * @param {String} trx The transaction reference of the transaction when balance was added and auto-reload was enabled on your account.
     * @param {module:api/BalanceApi~topUpAccountBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Success}
     */
    topUpAccountBalance(apiKey, apiSecret, trx, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling topUpAccountBalance");
      }
      // verify the required parameter 'apiSecret' is set
      if (apiSecret === undefined || apiSecret === null) {
        throw new Error("Missing the required parameter 'apiSecret' when calling topUpAccountBalance");
      }
      // verify the required parameter 'trx' is set
      if (trx === undefined || trx === null) {
        throw new Error("Missing the required parameter 'trx' when calling topUpAccountBalance");
      }

      let pathParams = {
      };
      let queryParams = {
        'api_key': apiKey,
        'api_secret': apiSecret
      };
      let headerParams = {
      };
      let formParams = {
        'trx': trx
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Success;
      let basePaths = ['https://rest.nexmo.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/account/top-up', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
