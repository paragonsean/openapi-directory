# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountBalance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_reload: bool=None, value: float=None):
        """AccountBalance - a model defined in OpenAPI

        :param auto_reload: The auto_reload of this AccountBalance.
        :param value: The value of this AccountBalance.
        """
        self.openapi_types = {
            'auto_reload': bool,
            'value': float
        }

        self.attribute_map = {
            'auto_reload': 'autoReload',
            'value': 'value'
        }

        self._auto_reload = auto_reload
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountBalance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The accountBalance of this AccountBalance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_reload(self):
        """Gets the auto_reload of this AccountBalance.

        Whether the account has auto-reloading enabled

        :return: The auto_reload of this AccountBalance.
        :rtype: bool
        """
        return self._auto_reload

    @auto_reload.setter
    def auto_reload(self, auto_reload):
        """Sets the auto_reload of this AccountBalance.

        Whether the account has auto-reloading enabled

        :param auto_reload: The auto_reload of this AccountBalance.
        :type auto_reload: bool
        """

        self._auto_reload = auto_reload

    @property
    def value(self):
        """Gets the value of this AccountBalance.

        The balance of the account, in EUR

        :return: The value of this AccountBalance.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this AccountBalance.

        The balance of the account, in EUR

        :param value: The value of this AccountBalance.
        :type value: float
        """

        self._value = value
