# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegisterEmailResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_ids: List[str]=None, name: str=None, provider: str=None, value: str=None):
        """RegisterEmailResponse - a model defined in OpenAPI

        :param application_ids: The application_ids of this RegisterEmailResponse.
        :param name: The name of this RegisterEmailResponse.
        :param provider: The provider of this RegisterEmailResponse.
        :param value: The value of this RegisterEmailResponse.
        """
        self.openapi_types = {
            'application_ids': List[str],
            'name': str,
            'provider': str,
            'value': str
        }

        self.attribute_map = {
            'application_ids': 'application_ids',
            'name': 'name',
            'provider': 'provider',
            'value': 'value'
        }

        self._application_ids = application_ids
        self._name = name
        self._provider = provider
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterEmailResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The registerEmailResponse of this RegisterEmailResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_ids(self):
        """Gets the application_ids of this RegisterEmailResponse.

        An array of ApplicationID strings attached to the value provided.

        :return: The application_ids of this RegisterEmailResponse.
        :rtype: List[str]
        """
        return self._application_ids

    @application_ids.setter
    def application_ids(self, application_ids):
        """Sets the application_ids of this RegisterEmailResponse.

        An array of ApplicationID strings attached to the value provided.

        :param application_ids: The application_ids of this RegisterEmailResponse.
        :type application_ids: List[str]
        """

        self._application_ids = application_ids

    @property
    def name(self):
        """Gets the name of this RegisterEmailResponse.

        An optional name to be attached to this binding

        :return: The name of this RegisterEmailResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RegisterEmailResponse.

        An optional name to be attached to this binding

        :param name: The name of this RegisterEmailResponse.
        :type name: str
        """

        self._name = name

    @property
    def provider(self):
        """Gets the provider of this RegisterEmailResponse.

        Enum identifer of provider type.

        :return: The provider of this RegisterEmailResponse.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this RegisterEmailResponse.

        Enum identifer of provider type.

        :param provider: The provider of this RegisterEmailResponse.
        :type provider: str
        """
        allowed_values = ["email"]  # noqa: E501
        if provider not in allowed_values:
            raise ValueError(
                "Invalid value for `provider` ({0}), must be one of {1}"
                .format(provider, allowed_values)
            )

        self._provider = provider

    @property
    def value(self):
        """Gets the value of this RegisterEmailResponse.

        Value given to the provider to attach to the Application IDs.

        :return: The value of this RegisterEmailResponse.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this RegisterEmailResponse.

        Value given to the provider to attach to the Application IDs.

        :param value: The value of this RegisterEmailResponse.
        :type value: str
        """

        self._value = value
