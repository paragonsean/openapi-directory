/**
 * Redact API
 * The [Redact API](/redact/overview) helps organisations meet their privacy compliance obligations. It provides controlled, on-demand redaction of private information from transactional records in the long-term storage. Note, Redact API does not have the capability to redact the short-lived server logs that are retained for a few weeks. For SMS customers that need immediate redaction, Vonage suggests using [Advanced Auto-redact](/redact/overview#auto-redact-vs-redact-api).
 *
 * The version of the OpenAPI document: 1.0.6
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ErrorInvalidId from './model/ErrorInvalidId';
import ErrorInvalidJson from './model/ErrorInvalidJson';
import ErrorPrematureRedaction from './model/ErrorPrematureRedaction';
import ErrorThrottled from './model/ErrorThrottled';
import ErrorUnauthorized from './model/ErrorUnauthorized';
import ErrorUnprovisioned from './model/ErrorUnprovisioned';
import ErrorUnsupportedProduct from './model/ErrorUnsupportedProduct';
import RedactMessage403Response from './model/RedactMessage403Response';
import RedactMessage422Response from './model/RedactMessage422Response';
import RedactTransaction from './model/RedactTransaction';
import DefaultApi from './api/DefaultApi';


/**
* The [Redact API](/redact/overview) helps organisations meet their privacy compliance obligations. It provides controlled, on-demand redaction of private information from transactional records in the long-term storage. Note, Redact API does not have the capability to redact the short-lived server logs that are retained for a few weeks. For SMS customers that need immediate redaction, Vonage suggests using [Advanced Auto-redact](/redact/overview#auto-redact-vs-redact-api)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var RedactApi = require('index'); // See note below*.
* var xxxSvc = new RedactApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new RedactApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new RedactApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new RedactApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.6
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ErrorInvalidId model constructor.
     * @property {module:model/ErrorInvalidId}
     */
    ErrorInvalidId,

    /**
     * The ErrorInvalidJson model constructor.
     * @property {module:model/ErrorInvalidJson}
     */
    ErrorInvalidJson,

    /**
     * The ErrorPrematureRedaction model constructor.
     * @property {module:model/ErrorPrematureRedaction}
     */
    ErrorPrematureRedaction,

    /**
     * The ErrorThrottled model constructor.
     * @property {module:model/ErrorThrottled}
     */
    ErrorThrottled,

    /**
     * The ErrorUnauthorized model constructor.
     * @property {module:model/ErrorUnauthorized}
     */
    ErrorUnauthorized,

    /**
     * The ErrorUnprovisioned model constructor.
     * @property {module:model/ErrorUnprovisioned}
     */
    ErrorUnprovisioned,

    /**
     * The ErrorUnsupportedProduct model constructor.
     * @property {module:model/ErrorUnsupportedProduct}
     */
    ErrorUnsupportedProduct,

    /**
     * The RedactMessage403Response model constructor.
     * @property {module:model/RedactMessage403Response}
     */
    RedactMessage403Response,

    /**
     * The RedactMessage422Response model constructor.
     * @property {module:model/RedactMessage422Response}
     */
    RedactMessage422Response,

    /**
     * The RedactTransaction model constructor.
     * @property {module:model/RedactTransaction}
     */
    RedactTransaction,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
