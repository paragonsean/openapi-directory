# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_all_account_response import GetAllAccountResponse
from openapi_server.models.get_all_accounts200_response_links import GetAllAccounts200ResponseLinks
from openapi_server import util


class GetAllAccounts200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, embedded: List[GetAllAccountResponse]=None, links: GetAllAccounts200ResponseLinks=None, page_number: int=None, page_size: int=None):
        """GetAllAccounts200Response - a model defined in OpenAPI

        :param embedded: The embedded of this GetAllAccounts200Response.
        :param links: The links of this GetAllAccounts200Response.
        :param page_number: The page_number of this GetAllAccounts200Response.
        :param page_size: The page_size of this GetAllAccounts200Response.
        """
        self.openapi_types = {
            'embedded': List[GetAllAccountResponse],
            'links': GetAllAccounts200ResponseLinks,
            'page_number': int,
            'page_size': int
        }

        self.attribute_map = {
            'embedded': '_embedded',
            'links': '_links',
            'page_number': 'page_number',
            'page_size': 'page_size'
        }

        self._embedded = embedded
        self._links = links
        self._page_number = page_number
        self._page_size = page_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAllAccounts200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAllAccounts_200_response of this GetAllAccounts200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def embedded(self):
        """Gets the embedded of this GetAllAccounts200Response.


        :return: The embedded of this GetAllAccounts200Response.
        :rtype: List[GetAllAccountResponse]
        """
        return self._embedded

    @embedded.setter
    def embedded(self, embedded):
        """Sets the embedded of this GetAllAccounts200Response.


        :param embedded: The embedded of this GetAllAccounts200Response.
        :type embedded: List[GetAllAccountResponse]
        """

        self._embedded = embedded

    @property
    def links(self):
        """Gets the links of this GetAllAccounts200Response.


        :return: The links of this GetAllAccounts200Response.
        :rtype: GetAllAccounts200ResponseLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this GetAllAccounts200Response.


        :param links: The links of this GetAllAccounts200Response.
        :type links: GetAllAccounts200ResponseLinks
        """

        self._links = links

    @property
    def page_number(self):
        """Gets the page_number of this GetAllAccounts200Response.


        :return: The page_number of this GetAllAccounts200Response.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this GetAllAccounts200Response.


        :param page_number: The page_number of this GetAllAccounts200Response.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def page_size(self):
        """Gets the page_size of this GetAllAccounts200Response.


        :return: The page_size of this GetAllAccounts200Response.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this GetAllAccounts200Response.


        :param page_size: The page_size of this GetAllAccounts200Response.
        :type page_size: int
        """

        self._page_size = page_size
