/**
 * External Accounts API
 * The External Accounts API is used to manage accounts for Viber Business Messages, Facebook Messenger and Whatsapp for use in the [Messages](https://developer.nexmo.com/messages/overview) and [Dispatch](https://developer.nexmo.com/dispatch/overview) APIs.
 *
 * The version of the OpenAPI document: 0.1.5
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAllAccounts_200_response__links.h
 *
 * 
 */

#ifndef OAIGetAllAccounts_200_response__links_H
#define OAIGetAllAccounts_200_response__links_H

#include <QJsonObject>

#include "OAIGetAllAccounts_200_response__links_first.h"
#include "OAIGetAllAccounts_200_response__links_last.h"
#include "OAIGetAllAccounts_200_response__links_next.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetAllAccounts_200_response__links_first;
class OAIGetAllAccounts_200_response__links_last;
class OAIGetAllAccounts_200_response__links_next;

class OAIGetAllAccounts_200_response__links : public OAIObject {
public:
    OAIGetAllAccounts_200_response__links();
    OAIGetAllAccounts_200_response__links(QString json);
    ~OAIGetAllAccounts_200_response__links() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetAllAccounts_200_response__links_first getFirst() const;
    void setFirst(const OAIGetAllAccounts_200_response__links_first &first);
    bool is_first_Set() const;
    bool is_first_Valid() const;

    OAIGetAllAccounts_200_response__links_last getLast() const;
    void setLast(const OAIGetAllAccounts_200_response__links_last &last);
    bool is_last_Set() const;
    bool is_last_Valid() const;

    OAIGetAllAccounts_200_response__links_next getNext() const;
    void setNext(const OAIGetAllAccounts_200_response__links_next &next);
    bool is_next_Set() const;
    bool is_next_Valid() const;

    OAIGetAllAccounts_200_response__links_first getPrev() const;
    void setPrev(const OAIGetAllAccounts_200_response__links_first &prev);
    bool is_prev_Set() const;
    bool is_prev_Valid() const;

    OAIGetAllAccounts_200_response__links_first getSelf() const;
    void setSelf(const OAIGetAllAccounts_200_response__links_first &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetAllAccounts_200_response__links_first m_first;
    bool m_first_isSet;
    bool m_first_isValid;

    OAIGetAllAccounts_200_response__links_last m_last;
    bool m_last_isSet;
    bool m_last_isValid;

    OAIGetAllAccounts_200_response__links_next m_next;
    bool m_next_isSet;
    bool m_next_isValid;

    OAIGetAllAccounts_200_response__links_first m_prev;
    bool m_prev_isSet;
    bool m_prev_isValid;

    OAIGetAllAccounts_200_response__links_first m_self;
    bool m_self_isSet;
    bool m_self_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAllAccounts_200_response__links)

#endif // OAIGetAllAccounts_200_response__links_H
