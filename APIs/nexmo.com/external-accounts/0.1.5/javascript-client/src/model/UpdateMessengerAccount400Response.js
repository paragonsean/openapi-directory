/**
 * External Accounts API
 * The External Accounts API is used to manage accounts for Viber Business Messages, Facebook Messenger and Whatsapp for use in the [Messages](https://developer.nexmo.com/messages/overview) and [Dispatch](https://developer.nexmo.com/dispatch/overview) APIs.
 *
 * The version of the OpenAPI document: 0.1.5
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateMessengerAccount400ResponseInvalidParamsInner from './UpdateMessengerAccount400ResponseInvalidParamsInner';

/**
 * The UpdateMessengerAccount400Response model module.
 * @module model/UpdateMessengerAccount400Response
 * @version 0.1.5
 */
class UpdateMessengerAccount400Response {
    /**
     * Constructs a new <code>UpdateMessengerAccount400Response</code>.
     * @alias module:model/UpdateMessengerAccount400Response
     */
    constructor() { 
        
        UpdateMessengerAccount400Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateMessengerAccount400Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateMessengerAccount400Response} obj Optional instance to populate.
     * @return {module:model/UpdateMessengerAccount400Response} The populated <code>UpdateMessengerAccount400Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateMessengerAccount400Response();

            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('instance')) {
                obj['instance'] = ApiClient.convertToType(data['instance'], 'String');
            }
            if (data.hasOwnProperty('invalid_params')) {
                obj['invalid_params'] = ApiClient.convertToType(data['invalid_params'], [UpdateMessengerAccount400ResponseInvalidParamsInner]);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateMessengerAccount400Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateMessengerAccount400Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['detail'] && !(typeof data['detail'] === 'string' || data['detail'] instanceof String)) {
            throw new Error("Expected the field `detail` to be a primitive type in the JSON string but got " + data['detail']);
        }
        // ensure the json data is a string
        if (data['instance'] && !(typeof data['instance'] === 'string' || data['instance'] instanceof String)) {
            throw new Error("Expected the field `instance` to be a primitive type in the JSON string but got " + data['instance']);
        }
        if (data['invalid_params']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['invalid_params'])) {
                throw new Error("Expected the field `invalid_params` to be an array in the JSON data but got " + data['invalid_params']);
            }
            // validate the optional field `invalid_params` (array)
            for (const item of data['invalid_params']) {
                UpdateMessengerAccount400ResponseInvalidParamsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} detail
 */
UpdateMessengerAccount400Response.prototype['detail'] = undefined;

/**
 * @member {String} instance
 */
UpdateMessengerAccount400Response.prototype['instance'] = undefined;

/**
 * @member {Array.<module:model/UpdateMessengerAccount400ResponseInvalidParamsInner>} invalid_params
 */
UpdateMessengerAccount400Response.prototype['invalid_params'] = undefined;

/**
 * @member {String} title
 */
UpdateMessengerAccount400Response.prototype['title'] = undefined;

/**
 * @member {String} type
 */
UpdateMessengerAccount400Response.prototype['type'] = undefined;






export default UpdateMessengerAccount400Response;

