/**
 * External Accounts API
 * The External Accounts API is used to manage accounts for Viber Business Messages, Facebook Messenger and Whatsapp for use in the [Messages](https://developer.nexmo.com/messages/overview) and [Dispatch](https://developer.nexmo.com/dispatch/overview) APIs.
 *
 * The version of the OpenAPI document: 0.1.5
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateMessengerAccount400Response from '../model/CreateMessengerAccount400Response';
import CreateMessengerAccountRequest from '../model/CreateMessengerAccountRequest';
import MessengerAccountResponse from '../model/MessengerAccountResponse';
import Model401Response from '../model/Model401Response';
import Model403Response from '../model/Model403Response';
import UpdateMessengerAccount200Response from '../model/UpdateMessengerAccount200Response';
import UpdateMessengerAccount400Response from '../model/UpdateMessengerAccount400Response';
import UpdateMessengerAccountRequest from '../model/UpdateMessengerAccountRequest';

/**
* FacebookMessenger service.
* @module api/FacebookMessengerApi
* @version 0.1.5
*/
export default class FacebookMessengerApi {

    /**
    * Constructs a new FacebookMessengerApi. 
    * @alias module:api/FacebookMessengerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createMessengerAccount operation.
     * @callback module:api/FacebookMessengerApi~createMessengerAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessengerAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Messenger account
     * @param {module:model/CreateMessengerAccountRequest} createMessengerAccountRequest 
     * @param {module:api/FacebookMessengerApi~createMessengerAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MessengerAccountResponse}
     */
    createMessengerAccount(createMessengerAccountRequest, callback) {
      let postBody = createMessengerAccountRequest;
      // verify the required parameter 'createMessengerAccountRequest' is set
      if (createMessengerAccountRequest === undefined || createMessengerAccountRequest === null) {
        throw new Error("Missing the required parameter 'createMessengerAccountRequest' when calling createMessengerAccount");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MessengerAccountResponse;
      return this.apiClient.callApi(
        '/messenger', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMessengerAccount operation.
     * @callback module:api/FacebookMessengerApi~deleteMessengerAccountCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Messenger account
     * @param {String} externalId External id of the account you want to delete. In this case it is the Facebook Page ID.
     * @param {module:api/FacebookMessengerApi~deleteMessengerAccountCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteMessengerAccount(externalId, callback) {
      let postBody = null;
      // verify the required parameter 'externalId' is set
      if (externalId === undefined || externalId === null) {
        throw new Error("Missing the required parameter 'externalId' when calling deleteMessengerAccount");
      }

      let pathParams = {
        'external_id': externalId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/messenger/{external_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMessengerAccount operation.
     * @callback module:api/FacebookMessengerApi~getMessengerAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessengerAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a Messenger account
     * @param {String} externalId External id of the account you want to retrieve. In this case it is the Facebook Page ID.
     * @param {module:api/FacebookMessengerApi~getMessengerAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MessengerAccountResponse}
     */
    getMessengerAccount(externalId, callback) {
      let postBody = null;
      // verify the required parameter 'externalId' is set
      if (externalId === undefined || externalId === null) {
        throw new Error("Missing the required parameter 'externalId' when calling getMessengerAccount");
      }

      let pathParams = {
        'external_id': externalId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MessengerAccountResponse;
      return this.apiClient.callApi(
        '/messenger/{external_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMessengerAccount operation.
     * @callback module:api/FacebookMessengerApi~updateMessengerAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateMessengerAccount200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Messenger account
     * @param {String} externalId External id of the account you want to update. In this case it is the Facebook Page ID.
     * @param {module:model/UpdateMessengerAccountRequest} updateMessengerAccountRequest Request body can contain any of the following
     * @param {module:api/FacebookMessengerApi~updateMessengerAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateMessengerAccount200Response}
     */
    updateMessengerAccount(externalId, updateMessengerAccountRequest, callback) {
      let postBody = updateMessengerAccountRequest;
      // verify the required parameter 'externalId' is set
      if (externalId === undefined || externalId === null) {
        throw new Error("Missing the required parameter 'externalId' when calling updateMessengerAccount");
      }
      // verify the required parameter 'updateMessengerAccountRequest' is set
      if (updateMessengerAccountRequest === undefined || updateMessengerAccountRequest === null) {
        throw new Error("Missing the required parameter 'updateMessengerAccountRequest' when calling updateMessengerAccount");
      }

      let pathParams = {
        'external_id': externalId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateMessengerAccount200Response;
      return this.apiClient.callApi(
        '/messenger/{external_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
