# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TemplatePropertyParametersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default: str=None):
        """TemplatePropertyParametersInner - a model defined in OpenAPI

        :param default: The default of this TemplatePropertyParametersInner.
        """
        self.openapi_types = {
            'default': str
        }

        self.attribute_map = {
            'default': 'default'
        }

        self._default = default

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplatePropertyParametersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateProperty_parameters_inner of this TemplatePropertyParametersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default(self):
        """Gets the default of this TemplatePropertyParametersInner.

        The parameters are an array. The first value being {{1}} in the template.

        :return: The default of this TemplatePropertyParametersInner.
        :rtype: str
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this TemplatePropertyParametersInner.

        The parameters are an array. The first value being {{1}} in the template.

        :param default: The default of this TemplatePropertyParametersInner.
        :type default: str
        """

        self._default = default
