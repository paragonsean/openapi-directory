# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessagePropertyViberServiceMsg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, ttl: int=None):
        """MessagePropertyViberServiceMsg - a model defined in OpenAPI

        :param category: The category of this MessagePropertyViberServiceMsg.
        :param ttl: The ttl of this MessagePropertyViberServiceMsg.
        """
        self.openapi_types = {
            'category': str,
            'ttl': int
        }

        self.attribute_map = {
            'category': 'category',
            'ttl': 'ttl'
        }

        self._category = category
        self._ttl = ttl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessagePropertyViberServiceMsg':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageProperty_viber_service_msg of this MessagePropertyViberServiceMsg.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this MessagePropertyViberServiceMsg.

        The use of different category tags enables the business to send messages for different use cases. For Viber Business Messages the first message sent from a business to a user must be personal, informative and a targeted message - not promotional. By default Vonage sends the `transaction` category to Viber Business Messages.

        :return: The category of this MessagePropertyViberServiceMsg.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this MessagePropertyViberServiceMsg.

        The use of different category tags enables the business to send messages for different use cases. For Viber Business Messages the first message sent from a business to a user must be personal, informative and a targeted message - not promotional. By default Vonage sends the `transaction` category to Viber Business Messages.

        :param category: The category of this MessagePropertyViberServiceMsg.
        :type category: str
        """
        allowed_values = ["transaction", "promotion"]  # noqa: E501
        if category not in allowed_values:
            raise ValueError(
                "Invalid value for `category` ({0}), must be one of {1}"
                .format(category, allowed_values)
            )

        self._category = category

    @property
    def ttl(self):
        """Gets the ttl of this MessagePropertyViberServiceMsg.

        Only valid for Viber Business Messages. Set the time-to-live of message to be delivered in seconds. i.e. if the message is not delivered in 600 seconds then delete the message.

        :return: The ttl of this MessagePropertyViberServiceMsg.
        :rtype: int
        """
        return self._ttl

    @ttl.setter
    def ttl(self, ttl):
        """Sets the ttl of this MessagePropertyViberServiceMsg.

        Only valid for Viber Business Messages. Set the time-to-live of message to be delivered in seconds. i.e. if the message is not delivered in 600 seconds then delete the message.

        :param ttl: The ttl of this MessagePropertyViberServiceMsg.
        :type ttl: int
        """
        if ttl is not None and ttl > 86400:
            raise ValueError("Invalid value for `ttl`, must be a value less than or equal to `86400`")
        if ttl is not None and ttl < 30:
            raise ValueError("Invalid value for `ttl`, must be a value greater than or equal to `30`")

        self._ttl = ttl
