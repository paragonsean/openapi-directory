# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudioProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url: str=None):
        """AudioProperty - a model defined in OpenAPI

        :param url: The url of this AudioProperty.
        """
        self.openapi_types = {
            'url': str
        }

        self.attribute_map = {
            'url': 'url'
        }

        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioProperty of this AudioProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self):
        """Gets the url of this AudioProperty.

        The URL of the audio attachment. `messenger` supports .mp3. `whatsapp` supports .aac, .m4a, .amr, .mp3 and .opus.

        :return: The url of this AudioProperty.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this AudioProperty.

        The URL of the audio attachment. `messenger` supports .mp3. `whatsapp` supports .aac, .m4a, .amr, .mp3 and .opus.

        :param url: The url of this AudioProperty.
        :type url: str
        """
        if url is not None and len(url) > 2000:
            raise ValueError("Invalid value for `url`, length must be less than or equal to `2000`")
        if url is not None and len(url) < 1:
            raise ValueError("Invalid value for `url`, length must be greater than or equal to `1`")

        self._url = url
