/**
 * Dispatch API
 * The Dispatch API enables the developer to specify a multiple message workflow. A workflow follows a template. The first one we are adding is the failover template. The failover template instructs the Messages API to first send a message to the specified channel. If that message fails immediately or if the condition_status is not reached within the given time period the next message is sent. The developer will also receive status webhooks from the messages resource for each delivery and read event. This API is currently in Beta.
 *
 * The version of the OpenAPI document: 0.3.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFailoverProperty.h
 *
 * Please note that last message does not have failover attribute inside it. All other messages must contain a failover attribute.
 */

#ifndef OAIFailoverProperty_H
#define OAIFailoverProperty_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFailoverProperty : public OAIObject {
public:
    OAIFailoverProperty();
    OAIFailoverProperty(QString json);
    ~OAIFailoverProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConditionStatus() const;
    void setConditionStatus(const QString &condition_status);
    bool is_condition_status_Set() const;
    bool is_condition_status_Valid() const;

    qint32 getExpiryTime() const;
    void setExpiryTime(const qint32 &expiry_time);
    bool is_expiry_time_Set() const;
    bool is_expiry_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_condition_status;
    bool m_condition_status_isSet;
    bool m_condition_status_isValid;

    qint32 m_expiry_time;
    bool m_expiry_time_isSet;
    bool m_expiry_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFailoverProperty)

#endif // OAIFailoverProperty_H
