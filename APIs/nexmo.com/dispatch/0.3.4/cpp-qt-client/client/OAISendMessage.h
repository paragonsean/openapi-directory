/**
 * Dispatch API
 * The Dispatch API enables the developer to specify a multiple message workflow. A workflow follows a template. The first one we are adding is the failover template. The failover template instructs the Messages API to first send a message to the specified channel. If that message fails immediately or if the condition_status is not reached within the given time period the next message is sent. The developer will also receive status webhooks from the messages resource for each delivery and read event. This API is currently in Beta.
 *
 * The version of the OpenAPI document: 0.3.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISendMessage.h
 *
 * Send Message
 */

#ifndef OAISendMessage_H
#define OAISendMessage_H

#include <QJsonObject>

#include "OAIFromProperty.h"
#include "OAIMessageProperty.h"
#include "OAIToProperty.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFromProperty;
class OAIMessageProperty;
class OAIToProperty;

class OAISendMessage : public OAIObject {
public:
    OAISendMessage();
    OAISendMessage(QString json);
    ~OAISendMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFromProperty getFrom() const;
    void setFrom(const OAIFromProperty &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    OAIMessageProperty getMessage() const;
    void setMessage(const OAIMessageProperty &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAIToProperty getTo() const;
    void setTo(const OAIToProperty &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFromProperty m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    OAIMessageProperty m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAIToProperty m_to;
    bool m_to_isSet;
    bool m_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISendMessage)

#endif // OAISendMessage_H
