/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetuserConversations200ResponseInnerTimestamp from './GetuserConversations200ResponseInnerTimestamp';
import MemberState from './MemberState';

/**
 * The GetuserConversations200ResponseInner model module.
 * @module model/GetuserConversations200ResponseInner
 * @version 2.0.1
 */
class GetuserConversations200ResponseInner {
    /**
     * Constructs a new <code>GetuserConversations200ResponseInner</code>.
     * @alias module:model/GetuserConversations200ResponseInner
     */
    constructor() { 
        
        GetuserConversations200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetuserConversations200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetuserConversations200ResponseInner} obj Optional instance to populate.
     * @return {module:model/GetuserConversations200ResponseInner} The populated <code>GetuserConversations200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetuserConversations200ResponseInner();

            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('href')) {
                obj['href'] = ApiClient.convertToType(data['href'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('image_url')) {
                obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
            }
            if (data.hasOwnProperty('member_id')) {
                obj['member_id'] = ApiClient.convertToType(data['member_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sequence_number')) {
                obj['sequence_number'] = ApiClient.convertToType(data['sequence_number'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = MemberState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = GetuserConversations200ResponseInnerTimestamp.constructFromObject(data['timestamp']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetuserConversations200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetuserConversations200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['href'] && !(typeof data['href'] === 'string' || data['href'] instanceof String)) {
            throw new Error("Expected the field `href` to be a primitive type in the JSON string but got " + data['href']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['image_url'] && !(typeof data['image_url'] === 'string' || data['image_url'] instanceof String)) {
            throw new Error("Expected the field `image_url` to be a primitive type in the JSON string but got " + data['image_url']);
        }
        // ensure the json data is a string
        if (data['member_id'] && !(typeof data['member_id'] === 'string' || data['member_id'] instanceof String)) {
            throw new Error("Expected the field `member_id` to be a primitive type in the JSON string but got " + data['member_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `timestamp`
        if (data['timestamp']) { // data not null
          GetuserConversations200ResponseInnerTimestamp.validateJSON(data['timestamp']);
        }

        return true;
    }


}



/**
 * The display name for the conversation. It does not have to be unique
 * @member {String} display_name
 */
GetuserConversations200ResponseInner.prototype['display_name'] = undefined;

/**
 * A link towards a resources included in Conversation API
 * @member {String} href
 */
GetuserConversations200ResponseInner.prototype['href'] = undefined;

/**
 * The unique identifier for this conversation
 * @member {String} id
 */
GetuserConversations200ResponseInner.prototype['id'] = undefined;

/**
 * A link to an image for conversations' and users' avatars
 * @member {String} image_url
 */
GetuserConversations200ResponseInner.prototype['image_url'] = undefined;

/**
 * Member ID
 * @member {String} member_id
 */
GetuserConversations200ResponseInner.prototype['member_id'] = undefined;

/**
 * Unique name for a conversation
 * @member {String} name
 */
GetuserConversations200ResponseInner.prototype['name'] = undefined;

/**
 * the id of the last event of the conversation (event's id is an incremental number
 * @member {Number} sequence_number
 */
GetuserConversations200ResponseInner.prototype['sequence_number'] = undefined;

/**
 * @member {module:model/MemberState} state
 */
GetuserConversations200ResponseInner.prototype['state'] = undefined;

/**
 * @member {module:model/GetuserConversations200ResponseInnerTimestamp} timestamp
 */
GetuserConversations200ResponseInner.prototype['timestamp'] = undefined;






export default GetuserConversations200ResponseInner;

