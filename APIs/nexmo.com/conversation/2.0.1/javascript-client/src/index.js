/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Action from './model/Action';
import Channel from './model/Channel';
import ChannelFrom from './model/ChannelFrom';
import ChannelFromOneOf from './model/ChannelFromOneOf';
import ChannelFromOneOf1 from './model/ChannelFromOneOf1';
import ChannelFromOneOf2 from './model/ChannelFromOneOf2';
import ChannelFromOneOf3 from './model/ChannelFromOneOf3';
import ChannelFromOneOf3Headers from './model/ChannelFromOneOf3Headers';
import ChannelFromOneOf4 from './model/ChannelFromOneOf4';
import ChannelLegIdsInner from './model/ChannelLegIdsInner';
import ChannelTo from './model/ChannelTo';
import ChannelToOneOf from './model/ChannelToOneOf';
import ChannelType from './model/ChannelType';
import ConversationProperties from './model/ConversationProperties';
import CreateConversation200Response from './model/CreateConversation200Response';
import CreateConversationRequest from './model/CreateConversationRequest';
import CreateEvent201Response from './model/CreateEvent201Response';
import CreateEventRequest from './model/CreateEventRequest';
import CreateMember201Response from './model/CreateMember201Response';
import CreateMemberRequest from './model/CreateMemberRequest';
import CreateUser200Response from './model/CreateUser200Response';
import CreateUserRequest from './model/CreateUserRequest';
import EventRetrieved from './model/EventRetrieved';
import Format from './model/Format';
import GetMember200Response from './model/GetMember200Response';
import GetMembers200ResponseInner from './model/GetMembers200ResponseInner';
import GetUser200Response from './model/GetUser200Response';
import GetUsers200ResponseInner from './model/GetUsers200ResponseInner';
import GetuserConversations200ResponseInner from './model/GetuserConversations200ResponseInner';
import GetuserConversations200ResponseInnerTimestamp from './model/GetuserConversations200ResponseInnerTimestamp';
import Initiator from './model/Initiator';
import InitiatorJoined from './model/InitiatorJoined';
import LegState from './model/LegState';
import LinksConversation from './model/LinksConversation';
import LinksConversationsList from './model/LinksConversationsList';
import LinksConversationsListSelf from './model/LinksConversationsListSelf';
import ListConversations200Response from './model/ListConversations200Response';
import ListConversations200ResponseEmbedded from './model/ListConversations200ResponseEmbedded';
import ListConversations200ResponseEmbeddedConversationsInner from './model/ListConversations200ResponseEmbeddedConversationsInner';
import ListConversations200ResponseEmbeddedConversationsInnerLinks from './model/ListConversations200ResponseEmbeddedConversationsInnerLinks';
import ListConversations200ResponseEmbeddedConversationsInnerLinksSelf from './model/ListConversations200ResponseEmbeddedConversationsInnerLinksSelf';
import ListLegs200Response from './model/ListLegs200Response';
import ListLegs200ResponseEmbedded from './model/ListLegs200ResponseEmbedded';
import ListLegs200ResponseEmbeddedLegsInner from './model/ListLegs200ResponseEmbeddedLegsInner';
import ListLegs200ResponseLinks from './model/ListLegs200ResponseLinks';
import ListLegs200ResponseLinksSelf from './model/ListLegs200ResponseLinksSelf';
import MemberAction from './model/MemberAction';
import MemberState from './model/MemberState';
import RecordConversationRequest from './model/RecordConversationRequest';
import RetrieveConversation200Response from './model/RetrieveConversation200Response';
import RetrieveConversation200ResponseMembersInner from './model/RetrieveConversation200ResponseMembersInner';
import RetrieveConversation200ResponseProperties from './model/RetrieveConversation200ResponseProperties';
import TimestampObjLeg from './model/TimestampObjLeg';
import TimestampResConversation from './model/TimestampResConversation';
import TimestampResMember from './model/TimestampResMember';
import UpdateMemberRequest from './model/UpdateMemberRequest';
import UpdateUser200Response from './model/UpdateUser200Response';
import UpdateUserRequest from './model/UpdateUserRequest';
import ConversationApi from './api/ConversationApi';
import EventApi from './api/EventApi';
import LegApi from './api/LegApi';
import MemberApi from './api/MemberApi';
import UserApi from './api/UserApi';


/**
* The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ConversationApi = require('index'); // See note below*.
* var xxxSvc = new ConversationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ConversationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ConversationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ConversationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Action model constructor.
     * @property {module:model/Action}
     */
    Action,

    /**
     * The Channel model constructor.
     * @property {module:model/Channel}
     */
    Channel,

    /**
     * The ChannelFrom model constructor.
     * @property {module:model/ChannelFrom}
     */
    ChannelFrom,

    /**
     * The ChannelFromOneOf model constructor.
     * @property {module:model/ChannelFromOneOf}
     */
    ChannelFromOneOf,

    /**
     * The ChannelFromOneOf1 model constructor.
     * @property {module:model/ChannelFromOneOf1}
     */
    ChannelFromOneOf1,

    /**
     * The ChannelFromOneOf2 model constructor.
     * @property {module:model/ChannelFromOneOf2}
     */
    ChannelFromOneOf2,

    /**
     * The ChannelFromOneOf3 model constructor.
     * @property {module:model/ChannelFromOneOf3}
     */
    ChannelFromOneOf3,

    /**
     * The ChannelFromOneOf3Headers model constructor.
     * @property {module:model/ChannelFromOneOf3Headers}
     */
    ChannelFromOneOf3Headers,

    /**
     * The ChannelFromOneOf4 model constructor.
     * @property {module:model/ChannelFromOneOf4}
     */
    ChannelFromOneOf4,

    /**
     * The ChannelLegIdsInner model constructor.
     * @property {module:model/ChannelLegIdsInner}
     */
    ChannelLegIdsInner,

    /**
     * The ChannelTo model constructor.
     * @property {module:model/ChannelTo}
     */
    ChannelTo,

    /**
     * The ChannelToOneOf model constructor.
     * @property {module:model/ChannelToOneOf}
     */
    ChannelToOneOf,

    /**
     * The ChannelType model constructor.
     * @property {module:model/ChannelType}
     */
    ChannelType,

    /**
     * The ConversationProperties model constructor.
     * @property {module:model/ConversationProperties}
     */
    ConversationProperties,

    /**
     * The CreateConversation200Response model constructor.
     * @property {module:model/CreateConversation200Response}
     */
    CreateConversation200Response,

    /**
     * The CreateConversationRequest model constructor.
     * @property {module:model/CreateConversationRequest}
     */
    CreateConversationRequest,

    /**
     * The CreateEvent201Response model constructor.
     * @property {module:model/CreateEvent201Response}
     */
    CreateEvent201Response,

    /**
     * The CreateEventRequest model constructor.
     * @property {module:model/CreateEventRequest}
     */
    CreateEventRequest,

    /**
     * The CreateMember201Response model constructor.
     * @property {module:model/CreateMember201Response}
     */
    CreateMember201Response,

    /**
     * The CreateMemberRequest model constructor.
     * @property {module:model/CreateMemberRequest}
     */
    CreateMemberRequest,

    /**
     * The CreateUser200Response model constructor.
     * @property {module:model/CreateUser200Response}
     */
    CreateUser200Response,

    /**
     * The CreateUserRequest model constructor.
     * @property {module:model/CreateUserRequest}
     */
    CreateUserRequest,

    /**
     * The EventRetrieved model constructor.
     * @property {module:model/EventRetrieved}
     */
    EventRetrieved,

    /**
     * The Format model constructor.
     * @property {module:model/Format}
     */
    Format,

    /**
     * The GetMember200Response model constructor.
     * @property {module:model/GetMember200Response}
     */
    GetMember200Response,

    /**
     * The GetMembers200ResponseInner model constructor.
     * @property {module:model/GetMembers200ResponseInner}
     */
    GetMembers200ResponseInner,

    /**
     * The GetUser200Response model constructor.
     * @property {module:model/GetUser200Response}
     */
    GetUser200Response,

    /**
     * The GetUsers200ResponseInner model constructor.
     * @property {module:model/GetUsers200ResponseInner}
     */
    GetUsers200ResponseInner,

    /**
     * The GetuserConversations200ResponseInner model constructor.
     * @property {module:model/GetuserConversations200ResponseInner}
     */
    GetuserConversations200ResponseInner,

    /**
     * The GetuserConversations200ResponseInnerTimestamp model constructor.
     * @property {module:model/GetuserConversations200ResponseInnerTimestamp}
     */
    GetuserConversations200ResponseInnerTimestamp,

    /**
     * The Initiator model constructor.
     * @property {module:model/Initiator}
     */
    Initiator,

    /**
     * The InitiatorJoined model constructor.
     * @property {module:model/InitiatorJoined}
     */
    InitiatorJoined,

    /**
     * The LegState model constructor.
     * @property {module:model/LegState}
     */
    LegState,

    /**
     * The LinksConversation model constructor.
     * @property {module:model/LinksConversation}
     */
    LinksConversation,

    /**
     * The LinksConversationsList model constructor.
     * @property {module:model/LinksConversationsList}
     */
    LinksConversationsList,

    /**
     * The LinksConversationsListSelf model constructor.
     * @property {module:model/LinksConversationsListSelf}
     */
    LinksConversationsListSelf,

    /**
     * The ListConversations200Response model constructor.
     * @property {module:model/ListConversations200Response}
     */
    ListConversations200Response,

    /**
     * The ListConversations200ResponseEmbedded model constructor.
     * @property {module:model/ListConversations200ResponseEmbedded}
     */
    ListConversations200ResponseEmbedded,

    /**
     * The ListConversations200ResponseEmbeddedConversationsInner model constructor.
     * @property {module:model/ListConversations200ResponseEmbeddedConversationsInner}
     */
    ListConversations200ResponseEmbeddedConversationsInner,

    /**
     * The ListConversations200ResponseEmbeddedConversationsInnerLinks model constructor.
     * @property {module:model/ListConversations200ResponseEmbeddedConversationsInnerLinks}
     */
    ListConversations200ResponseEmbeddedConversationsInnerLinks,

    /**
     * The ListConversations200ResponseEmbeddedConversationsInnerLinksSelf model constructor.
     * @property {module:model/ListConversations200ResponseEmbeddedConversationsInnerLinksSelf}
     */
    ListConversations200ResponseEmbeddedConversationsInnerLinksSelf,

    /**
     * The ListLegs200Response model constructor.
     * @property {module:model/ListLegs200Response}
     */
    ListLegs200Response,

    /**
     * The ListLegs200ResponseEmbedded model constructor.
     * @property {module:model/ListLegs200ResponseEmbedded}
     */
    ListLegs200ResponseEmbedded,

    /**
     * The ListLegs200ResponseEmbeddedLegsInner model constructor.
     * @property {module:model/ListLegs200ResponseEmbeddedLegsInner}
     */
    ListLegs200ResponseEmbeddedLegsInner,

    /**
     * The ListLegs200ResponseLinks model constructor.
     * @property {module:model/ListLegs200ResponseLinks}
     */
    ListLegs200ResponseLinks,

    /**
     * The ListLegs200ResponseLinksSelf model constructor.
     * @property {module:model/ListLegs200ResponseLinksSelf}
     */
    ListLegs200ResponseLinksSelf,

    /**
     * The MemberAction model constructor.
     * @property {module:model/MemberAction}
     */
    MemberAction,

    /**
     * The MemberState model constructor.
     * @property {module:model/MemberState}
     */
    MemberState,

    /**
     * The RecordConversationRequest model constructor.
     * @property {module:model/RecordConversationRequest}
     */
    RecordConversationRequest,

    /**
     * The RetrieveConversation200Response model constructor.
     * @property {module:model/RetrieveConversation200Response}
     */
    RetrieveConversation200Response,

    /**
     * The RetrieveConversation200ResponseMembersInner model constructor.
     * @property {module:model/RetrieveConversation200ResponseMembersInner}
     */
    RetrieveConversation200ResponseMembersInner,

    /**
     * The RetrieveConversation200ResponseProperties model constructor.
     * @property {module:model/RetrieveConversation200ResponseProperties}
     */
    RetrieveConversation200ResponseProperties,

    /**
     * The TimestampObjLeg model constructor.
     * @property {module:model/TimestampObjLeg}
     */
    TimestampObjLeg,

    /**
     * The TimestampResConversation model constructor.
     * @property {module:model/TimestampResConversation}
     */
    TimestampResConversation,

    /**
     * The TimestampResMember model constructor.
     * @property {module:model/TimestampResMember}
     */
    TimestampResMember,

    /**
     * The UpdateMemberRequest model constructor.
     * @property {module:model/UpdateMemberRequest}
     */
    UpdateMemberRequest,

    /**
     * The UpdateUser200Response model constructor.
     * @property {module:model/UpdateUser200Response}
     */
    UpdateUser200Response,

    /**
     * The UpdateUserRequest model constructor.
     * @property {module:model/UpdateUserRequest}
     */
    UpdateUserRequest,

    /**
    * The ConversationApi service constructor.
    * @property {module:api/ConversationApi}
    */
    ConversationApi,

    /**
    * The EventApi service constructor.
    * @property {module:api/EventApi}
    */
    EventApi,

    /**
    * The LegApi service constructor.
    * @property {module:api/LegApi}
    */
    LegApi,

    /**
    * The MemberApi service constructor.
    * @property {module:api/MemberApi}
    */
    MemberApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
