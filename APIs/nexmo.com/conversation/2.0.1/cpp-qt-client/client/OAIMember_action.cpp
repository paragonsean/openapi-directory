/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMember_action.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMember_action::OAIMember_action(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMember_action::OAIMember_action() {
    this->initializeModel();
}

OAIMember_action::~OAIMember_action() {}

void OAIMember_action::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMember_action::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMember_action::fromJson(QString jsonString) {
    
    if ( jsonString.compare("invite", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMember_action::INVITE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("join", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMember_action::JOIN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMember_action::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMember_action::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMember_action::INVITE:
            val = "invite";
            break;
        case eOAIMember_action::JOIN:
            val = "join";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMember_action::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMember_action::eOAIMember_action OAIMember_action::getValue() const {
    return m_value;
}

void OAIMember_action::setValue(const OAIMember_action::eOAIMember_action& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMember_action::isSet() const {
    
    return m_value_isSet;
}

bool OAIMember_action::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
