/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRetrieveConversation_200_response.h
 *
 * Conversation Object
 */

#ifndef OAIRetrieveConversation_200_response_H
#define OAIRetrieveConversation_200_response_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIRetrieveConversation_200_response_members_inner.h"
#include "OAIRetrieveConversation_200_response_properties.h"
#include "OAITimestamp_res_conversation.h"
#include "OAI_links_conversation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAI_links_conversation;
class OAIRetrieveConversation_200_response_members_inner;
class OAIRetrieveConversation_200_response_properties;
class OAITimestamp_res_conversation;

class OAIRetrieveConversation_200_response : public OAIObject {
public:
    OAIRetrieveConversation_200_response();
    OAIRetrieveConversation_200_response(QString json);
    ~OAIRetrieveConversation_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAI_links_conversation getLinks() const;
    void setLinks(const OAI_links_conversation &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getApiKey() const;
    void setApiKey(const QString &api_key);
    bool is_api_key_Set() const;
    bool is_api_key_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAIRetrieveConversation_200_response_members_inner> getMembers() const;
    void setMembers(const QList<OAIRetrieveConversation_200_response_members_inner> &members);
    bool is_members_Set() const;
    bool is_members_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIObject getNumbers() const;
    void setNumbers(const OAIObject &numbers);
    bool is_numbers_Set() const;
    bool is_numbers_Valid() const;

    OAIRetrieveConversation_200_response_properties getProperties() const;
    void setProperties(const OAIRetrieveConversation_200_response_properties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getSequenceNumber() const;
    void setSequenceNumber(const QString &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    OAITimestamp_res_conversation getTimestamp() const;
    void setTimestamp(const OAITimestamp_res_conversation &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAI_links_conversation m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_api_key;
    bool m_api_key_isSet;
    bool m_api_key_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAIRetrieveConversation_200_response_members_inner> m_members;
    bool m_members_isSet;
    bool m_members_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIObject m_numbers;
    bool m_numbers_isSet;
    bool m_numbers_isValid;

    OAIRetrieveConversation_200_response_properties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;

    OAITimestamp_res_conversation m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRetrieveConversation_200_response)

#endif // OAIRetrieveConversation_200_response_H
