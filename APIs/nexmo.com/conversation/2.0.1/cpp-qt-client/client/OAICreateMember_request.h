/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMember_request.h
 *
 * Create a Member in invite state 
 */

#ifndef OAICreateMember_request_H
#define OAICreateMember_request_H

#include <QJsonObject>

#include "OAIChannel.h"
#include "OAIMember_action.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChannel;

class OAICreateMember_request : public OAIObject {
public:
    OAICreateMember_request();
    OAICreateMember_request(QString json);
    ~OAICreateMember_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMember_action getAction() const;
    void setAction(const OAIMember_action &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAIChannel getChannel() const;
    void setChannel(const OAIChannel &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getKnockingId() const;
    void setKnockingId(const QString &knocking_id);
    bool is_knocking_id_Set() const;
    bool is_knocking_id_Valid() const;

    OAIObject getMedia() const;
    void setMedia(const OAIObject &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    QString getMemberId() const;
    void setMemberId(const QString &member_id);
    bool is_member_id_Set() const;
    bool is_member_id_Valid() const;

    QString getMemberIdInviting() const;
    void setMemberIdInviting(const QString &member_id_inviting);
    bool is_member_id_inviting_Set() const;
    bool is_member_id_inviting_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMember_action m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAIChannel m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_knocking_id;
    bool m_knocking_id_isSet;
    bool m_knocking_id_isValid;

    OAIObject m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    QString m_member_id;
    bool m_member_id_isSet;
    bool m_member_id_isValid;

    QString m_member_id_inviting;
    bool m_member_id_inviting_isSet;
    bool m_member_id_inviting_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMember_request)

#endif // OAICreateMember_request_H
