/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecordConversation_request.h
 *
 * 
 */

#ifndef OAIRecordConversation_request_H
#define OAIRecordConversation_request_H

#include <QJsonObject>

#include "OAIAction.h"
#include "OAIFormat.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRecordConversation_request : public OAIObject {
public:
    OAIRecordConversation_request();
    OAIRecordConversation_request(QString json);
    ~OAIRecordConversation_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAction getAction() const;
    void setAction(const OAIAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getEventMethod() const;
    void setEventMethod(const QString &event_method);
    bool is_event_method_Set() const;
    bool is_event_method_Valid() const;

    QList<QString> getEventUrl() const;
    void setEventUrl(const QList<QString> &event_url);
    bool is_event_url_Set() const;
    bool is_event_url_Valid() const;

    OAIFormat getFormat() const;
    void setFormat(const OAIFormat &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getSplit() const;
    void setSplit(const QString &split);
    bool is_split_Set() const;
    bool is_split_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_event_method;
    bool m_event_method_isSet;
    bool m_event_method_isValid;

    QList<QString> m_event_url;
    bool m_event_url_isSet;
    bool m_event_url_isValid;

    OAIFormat m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_split;
    bool m_split_isSet;
    bool m_split_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecordConversation_request)

#endif // OAIRecordConversation_request_H
