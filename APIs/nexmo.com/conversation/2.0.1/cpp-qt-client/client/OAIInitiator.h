/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInitiator.h
 *
 * 
 */

#ifndef OAIInitiator_H
#define OAIInitiator_H

#include <QJsonObject>

#include "OAIInitiator_joined.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInitiator_joined;

class OAIInitiator : public OAIObject {
public:
    OAIInitiator();
    OAIInitiator(QString json);
    ~OAIInitiator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInitiator_joined getJoined() const;
    void setJoined(const OAIInitiator_joined &joined);
    bool is_joined_Set() const;
    bool is_joined_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInitiator_joined m_joined;
    bool m_joined_isSet;
    bool m_joined_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInitiator)

#endif // OAIInitiator_H
