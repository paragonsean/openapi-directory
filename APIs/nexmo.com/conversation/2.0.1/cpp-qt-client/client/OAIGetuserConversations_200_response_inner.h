/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetuserConversations_200_response_inner.h
 *
 * 
 */

#ifndef OAIGetuserConversations_200_response_inner_H
#define OAIGetuserConversations_200_response_inner_H

#include <QJsonObject>

#include "OAIGetuserConversations_200_response_inner_timestamp.h"
#include "OAIMember_state.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetuserConversations_200_response_inner_timestamp;

class OAIGetuserConversations_200_response_inner : public OAIObject {
public:
    OAIGetuserConversations_200_response_inner();
    OAIGetuserConversations_200_response_inner(QString json);
    ~OAIGetuserConversations_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getMemberId() const;
    void setMemberId(const QString &member_id);
    bool is_member_id_Set() const;
    bool is_member_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getSequenceNumber() const;
    void setSequenceNumber(const qint32 &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    OAIMember_state getState() const;
    void setState(const OAIMember_state &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIGetuserConversations_200_response_inner_timestamp getTimestamp() const;
    void setTimestamp(const OAIGetuserConversations_200_response_inner_timestamp &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_member_id;
    bool m_member_id_isSet;
    bool m_member_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;

    OAIMember_state m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIGetuserConversations_200_response_inner_timestamp m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetuserConversations_200_response_inner)

#endif // OAIGetuserConversations_200_response_inner_H
