/**
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListLegs_200_response__links_self.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListLegs_200_response__links_self::OAIListLegs_200_response__links_self(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListLegs_200_response__links_self::OAIListLegs_200_response__links_self() {
    this->initializeModel();
}

OAIListLegs_200_response__links_self::~OAIListLegs_200_response__links_self() {}

void OAIListLegs_200_response__links_self::initializeModel() {

    m_href_isSet = false;
    m_href_isValid = false;
}

void OAIListLegs_200_response__links_self::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListLegs_200_response__links_self::fromJsonObject(QJsonObject json) {

    m_href_isValid = ::OpenAPI::fromJsonValue(m_href, json[QString("href")]);
    m_href_isSet = !json[QString("href")].isNull() && m_href_isValid;
}

QString OAIListLegs_200_response__links_self::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListLegs_200_response__links_self::asJsonObject() const {
    QJsonObject obj;
    if (m_href_isSet) {
        obj.insert(QString("href"), ::OpenAPI::toJsonValue(m_href));
    }
    return obj;
}

QString OAIListLegs_200_response__links_self::getHref() const {
    return m_href;
}
void OAIListLegs_200_response__links_self::setHref(const QString &href) {
    m_href = href;
    m_href_isSet = true;
}

bool OAIListLegs_200_response__links_self::is_href_Set() const{
    return m_href_isSet;
}

bool OAIListLegs_200_response__links_self::is_href_Valid() const{
    return m_href_isValid;
}

bool OAIListLegs_200_response__links_self::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_href_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListLegs_200_response__links_self::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
