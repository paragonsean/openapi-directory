/*
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateEvent201Response;
import org.openapitools.client.model.CreateEventRequest;
import org.openapitools.client.model.EventRetrieved;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventApi
 */
@Disabled
public class EventApiTest {

    private final EventApi api = new EventApi();

    /**
     * Create an event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEventTest() throws ApiException {
        String conversationId = null;
        CreateEventRequest createEventRequest = null;
        CreateEvent201Response response = api.createEvent(conversationId, createEventRequest);
        // TODO: test validations
    }

    /**
     * Delete an event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEventTest() throws ApiException {
        String conversationId = null;
        String eventId = null;
        Object response = api.deleteEvent(conversationId, eventId);
        // TODO: test validations
    }

    /**
     * Retrieve an event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventTest() throws ApiException {
        String conversationId = null;
        String eventId = null;
        EventRetrieved response = api.getEvent(conversationId, eventId);
        // TODO: test validations
    }

    /**
     * List events
     *
     * This endpoint is **DEPRECATED**. Please use [/v0.2/events](/api/conversation.v2#get-events).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventsTest() throws ApiException {
        String conversationId = null;
        List<EventRetrieved> response = api.getEvents(conversationId);
        // TODO: test validations
    }

}
