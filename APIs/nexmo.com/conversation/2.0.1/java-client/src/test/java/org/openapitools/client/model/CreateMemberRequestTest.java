/*
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Channel;
import org.openapitools.client.model.MemberAction;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateMemberRequest
 */
public class CreateMemberRequestTest {
    private final CreateMemberRequest model = new CreateMemberRequest();

    /**
     * Model tests for CreateMemberRequest
     */
    @Test
    public void testCreateMemberRequest() {
        // TODO: test CreateMemberRequest
    }

    /**
     * Test the property 'action'
     */
    @Test
    public void actionTest() {
        // TODO: test action
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'knockingId'
     */
    @Test
    public void knockingIdTest() {
        // TODO: test knockingId
    }

    /**
     * Test the property 'media'
     */
    @Test
    public void mediaTest() {
        // TODO: test media
    }

    /**
     * Test the property 'memberId'
     */
    @Test
    public void memberIdTest() {
        // TODO: test memberId
    }

    /**
     * Test the property 'memberIdInviting'
     */
    @Test
    public void memberIdInvitingTest() {
        // TODO: test memberIdInviting
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

}
