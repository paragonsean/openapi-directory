/*
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.CreateConversation200Response;
import org.openapitools.client.model.CreateConversationRequest;
import org.openapitools.client.model.ListConversations200Response;
import org.openapitools.client.model.RecordConversationRequest;
import org.openapitools.client.model.RetrieveConversation200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConversationApi
 */
@Disabled
public class ConversationApiTest {

    private final ConversationApi api = new ConversationApi();

    /**
     * Create a conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createConversationTest() throws ApiException {
        CreateConversationRequest createConversationRequest = null;
        CreateConversation200Response response = api.createConversation(createConversationRequest);
        // TODO: test validations
    }

    /**
     * Delete a conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConversationTest() throws ApiException {
        String conversationId = null;
        Object response = api.deleteConversation(conversationId);
        // TODO: test validations
    }

    /**
     * List conversations
     *
     * This endpoint is **DEPRECATED**. Please use [/v0.2/conversations](/api/conversation.v2#get-conversations).  List all conversations associated with your application. This endpoint required an admin JWT. To find all conversations for the currently logged in user, see [GET /users/:id/conversations](#getuserConversations)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listConversationsTest() throws ApiException {
        String dateStart = null;
        String dateEnd = null;
        BigDecimal pageSize = null;
        BigDecimal recordIndex = null;
        String order = null;
        ListConversations200Response response = api.listConversations(dateStart, dateEnd, pageSize, recordIndex, order);
        // TODO: test validations
    }

    /**
     * Record a conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recordConversationTest() throws ApiException {
        String conversationId = null;
        RecordConversationRequest recordConversationRequest = null;
        api.recordConversation(conversationId, recordConversationRequest);
        // TODO: test validations
    }

    /**
     * Update a conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceConversationTest() throws ApiException {
        String conversationId = null;
        CreateConversationRequest createConversationRequest = null;
        CreateConversation200Response response = api.replaceConversation(conversationId, createConversationRequest);
        // TODO: test validations
    }

    /**
     * Retrieve a conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveConversationTest() throws ApiException {
        String conversationId = null;
        RetrieveConversation200Response response = api.retrieveConversation(conversationId);
        // TODO: test validations
    }

}
