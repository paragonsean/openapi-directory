/*
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Channel;
import org.openapitools.client.model.Initiator;
import org.openapitools.client.model.MemberState;
import org.openapitools.client.model.TimestampResMember;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RetrieveConversation200ResponseMembersInner
 */
public class RetrieveConversation200ResponseMembersInnerTest {
    private final RetrieveConversation200ResponseMembersInner model = new RetrieveConversation200ResponseMembersInner();

    /**
     * Model tests for RetrieveConversation200ResponseMembersInner
     */
    @Test
    public void testRetrieveConversation200ResponseMembersInner() {
        // TODO: test RetrieveConversation200ResponseMembersInner
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'initiator'
     */
    @Test
    public void initiatorTest() {
        // TODO: test initiator
    }

    /**
     * Test the property 'memberId'
     */
    @Test
    public void memberIdTest() {
        // TODO: test memberId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

}
