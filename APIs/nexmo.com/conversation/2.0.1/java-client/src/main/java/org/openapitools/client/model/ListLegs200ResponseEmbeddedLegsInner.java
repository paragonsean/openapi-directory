/*
 * Conversation API
 * The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ChannelType;
import org.openapitools.client.model.LegState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListLegs200ResponseEmbeddedLegsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:24:44.447365-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListLegs200ResponseEmbeddedLegsInner {
  public static final String SERIALIZED_NAME_EMBEDDED = "_embedded";
  @SerializedName(SERIALIZED_NAME_EMBEDDED)
  private Object embedded;

  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_CONVERSATION_UUID = "conversation_uuid";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_UUID)
  private String conversationUuid;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private Object from;

  public static final String SERIALIZED_NAME_START_END = "start_end";
  @SerializedName(SERIALIZED_NAME_START_END)
  private String startEnd;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private LegState state;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private Object to;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ChannelType type;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public ListLegs200ResponseEmbeddedLegsInner() {
  }

  public ListLegs200ResponseEmbeddedLegsInner embedded(Object embedded) {
    this.embedded = embedded;
    return this;
  }

  /**
   * Get embedded
   * @return embedded
   */
  @javax.annotation.Nullable
  public Object getEmbedded() {
    return embedded;
  }

  public void setEmbedded(Object embedded) {
    this.embedded = embedded;
  }


  public ListLegs200ResponseEmbeddedLegsInner links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public ListLegs200ResponseEmbeddedLegsInner conversationUuid(String conversationUuid) {
    this.conversationUuid = conversationUuid;
    return this;
  }

  /**
   * The unique identifier for this conversation
   * @return conversationUuid
   */
  @javax.annotation.Nullable
  public String getConversationUuid() {
    return conversationUuid;
  }

  public void setConversationUuid(String conversationUuid) {
    this.conversationUuid = conversationUuid;
  }


  public ListLegs200ResponseEmbeddedLegsInner from(Object from) {
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   */
  @javax.annotation.Nullable
  public Object getFrom() {
    return from;
  }

  public void setFrom(Object from) {
    this.from = from;
  }


  public ListLegs200ResponseEmbeddedLegsInner startEnd(String startEnd) {
    this.startEnd = startEnd;
    return this;
  }

  /**
   * Time of leg end
   * @return startEnd
   */
  @javax.annotation.Nullable
  public String getStartEnd() {
    return startEnd;
  }

  public void setStartEnd(String startEnd) {
    this.startEnd = startEnd;
  }


  public ListLegs200ResponseEmbeddedLegsInner startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Time of leg start
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public ListLegs200ResponseEmbeddedLegsInner state(LegState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public LegState getState() {
    return state;
  }

  public void setState(LegState state) {
    this.state = state;
  }


  public ListLegs200ResponseEmbeddedLegsInner to(Object to) {
    this.to = to;
    return this;
  }

  /**
   * Get to
   * @return to
   */
  @javax.annotation.Nullable
  public Object getTo() {
    return to;
  }

  public void setTo(Object to) {
    this.to = to;
  }


  public ListLegs200ResponseEmbeddedLegsInner type(ChannelType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public ChannelType getType() {
    return type;
  }

  public void setType(ChannelType type) {
    this.type = type;
  }


  public ListLegs200ResponseEmbeddedLegsInner uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

  /**
   * The id of the leg. rtc_id and call_id are leg id
   * @return uuid
   */
  @javax.annotation.Nonnull
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListLegs200ResponseEmbeddedLegsInner listLegs200ResponseEmbeddedLegsInner = (ListLegs200ResponseEmbeddedLegsInner) o;
    return Objects.equals(this.embedded, listLegs200ResponseEmbeddedLegsInner.embedded) &&
        Objects.equals(this.links, listLegs200ResponseEmbeddedLegsInner.links) &&
        Objects.equals(this.conversationUuid, listLegs200ResponseEmbeddedLegsInner.conversationUuid) &&
        Objects.equals(this.from, listLegs200ResponseEmbeddedLegsInner.from) &&
        Objects.equals(this.startEnd, listLegs200ResponseEmbeddedLegsInner.startEnd) &&
        Objects.equals(this.startTime, listLegs200ResponseEmbeddedLegsInner.startTime) &&
        Objects.equals(this.state, listLegs200ResponseEmbeddedLegsInner.state) &&
        Objects.equals(this.to, listLegs200ResponseEmbeddedLegsInner.to) &&
        Objects.equals(this.type, listLegs200ResponseEmbeddedLegsInner.type) &&
        Objects.equals(this.uuid, listLegs200ResponseEmbeddedLegsInner.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(embedded, links, conversationUuid, from, startEnd, startTime, state, to, type, uuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListLegs200ResponseEmbeddedLegsInner {\n");
    sb.append("    embedded: ").append(toIndentedString(embedded)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    conversationUuid: ").append(toIndentedString(conversationUuid)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    startEnd: ").append(toIndentedString(startEnd)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_embedded");
    openapiFields.add("_links");
    openapiFields.add("conversation_uuid");
    openapiFields.add("from");
    openapiFields.add("start_end");
    openapiFields.add("start_time");
    openapiFields.add("state");
    openapiFields.add("to");
    openapiFields.add("type");
    openapiFields.add("uuid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("uuid");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListLegs200ResponseEmbeddedLegsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListLegs200ResponseEmbeddedLegsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListLegs200ResponseEmbeddedLegsInner is not found in the empty JSON string", ListLegs200ResponseEmbeddedLegsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListLegs200ResponseEmbeddedLegsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListLegs200ResponseEmbeddedLegsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListLegs200ResponseEmbeddedLegsInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("conversation_uuid") != null && !jsonObj.get("conversation_uuid").isJsonNull()) && !jsonObj.get("conversation_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversation_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversation_uuid").toString()));
      }
      if ((jsonObj.get("start_end") != null && !jsonObj.get("start_end").isJsonNull()) && !jsonObj.get("start_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_end").toString()));
      }
      if ((jsonObj.get("start_time") != null && !jsonObj.get("start_time").isJsonNull()) && !jsonObj.get("start_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_time").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        LegState.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        ChannelType.validateJsonElement(jsonObj.get("type"));
      }
      if (!jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListLegs200ResponseEmbeddedLegsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListLegs200ResponseEmbeddedLegsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListLegs200ResponseEmbeddedLegsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListLegs200ResponseEmbeddedLegsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListLegs200ResponseEmbeddedLegsInner>() {
           @Override
           public void write(JsonWriter out, ListLegs200ResponseEmbeddedLegsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListLegs200ResponseEmbeddedLegsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListLegs200ResponseEmbeddedLegsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListLegs200ResponseEmbeddedLegsInner
   * @throws IOException if the JSON string is invalid with respect to ListLegs200ResponseEmbeddedLegsInner
   */
  public static ListLegs200ResponseEmbeddedLegsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListLegs200ResponseEmbeddedLegsInner.class);
  }

  /**
   * Convert an instance of ListLegs200ResponseEmbeddedLegsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

