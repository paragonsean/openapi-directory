/*
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.Location1Location;
import org.openapitools.client.model.Template1Template;
import org.openapitools.client.model.WhatsAppOneOf;
import org.openapitools.client.model.WhatsAppOneOf1;
import org.openapitools.client.model.WhatsAppOneOf2;
import org.openapitools.client.model.WhatsAppOneOf2AllOfImage;
import org.openapitools.client.model.WhatsAppOneOf3;
import org.openapitools.client.model.WhatsAppOneOf3AllOfAudio;
import org.openapitools.client.model.WhatsAppOneOf4;
import org.openapitools.client.model.WhatsAppOneOf4AllOfVideo;
import org.openapitools.client.model.WhatsAppOneOf5;
import org.openapitools.client.model.WhatsAppOneOf5AllOfFile;
import org.openapitools.client.model.WhatsAppOneOf6;
import org.openapitools.client.model.WhatsAppOneOf6AllOfWhatsapp;
import org.openapitools.client.model.WhatsAppOneOf7;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WhatsApp
 */
public class WhatsAppTest {
    private final WhatsApp model = new WhatsApp();

    /**
     * Model tests for WhatsApp
     */
    @Test
    public void testWhatsApp() {
        // TODO: test WhatsApp
    }

    /**
     * Test the property 'clientRef'
     */
    @Test
    public void clientRefTest() {
        // TODO: test clientRef
    }

    /**
     * Test the property 'messageType'
     */
    @Test
    public void messageTypeTest() {
        // TODO: test messageType
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'from'
     */
    @Test
    public void fromTest() {
        // TODO: test from
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'audio'
     */
    @Test
    public void audioTest() {
        // TODO: test audio
    }

    /**
     * Test the property 'video'
     */
    @Test
    public void videoTest() {
        // TODO: test video
    }

    /**
     * Test the property '_file'
     */
    @Test
    public void _fileTest() {
        // TODO: test _file
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'whatsapp'
     */
    @Test
    public void whatsappTest() {
        // TODO: test whatsapp
    }

    /**
     * Test the property 'custom'
     */
    @Test
    public void customTest() {
        // TODO: test custom
    }

}
