# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Image1Image(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url: str=None):
        """Image1Image - a model defined in OpenAPI

        :param url: The url of this Image1Image.
        """
        self.openapi_types = {
            'url': str
        }

        self.attribute_map = {
            'url': 'url'
        }

        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Image1Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Image_1_image of this Image1Image.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self):
        """Gets the url of this Image1Image.

        The publicly accessible URL of the image attachment. The image file is available for 48 hours after it is created. Supported types are .jpg, .jpeg, and .png

        :return: The url of this Image1Image.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Image1Image.

        The publicly accessible URL of the image attachment. The image file is available for 48 hours after it is created. Supported types are .jpg, .jpeg, and .png

        :param url: The url of this Image1Image.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
