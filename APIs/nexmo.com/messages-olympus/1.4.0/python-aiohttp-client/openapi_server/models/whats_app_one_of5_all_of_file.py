# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WhatsAppOneOf5AllOfFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, caption: str=None, url: object=None):
        """WhatsAppOneOf5AllOfFile - a model defined in OpenAPI

        :param caption: The caption of this WhatsAppOneOf5AllOfFile.
        :param url: The url of this WhatsAppOneOf5AllOfFile.
        """
        self.openapi_types = {
            'caption': str,
            'url': object
        }

        self.attribute_map = {
            'caption': 'caption',
            'url': 'url'
        }

        self._caption = caption
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WhatsAppOneOf5AllOfFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WhatsApp_oneOf_5_allOf_file of this WhatsAppOneOf5AllOfFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def caption(self):
        """Gets the caption of this WhatsAppOneOf5AllOfFile.

        Additional text to accompany the file.

        :return: The caption of this WhatsAppOneOf5AllOfFile.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption):
        """Sets the caption of this WhatsAppOneOf5AllOfFile.

        Additional text to accompany the file.

        :param caption: The caption of this WhatsAppOneOf5AllOfFile.
        :type caption: str
        """

        self._caption = caption

    @property
    def url(self):
        """Gets the url of this WhatsAppOneOf5AllOfFile.

        The URL of the file attachment.  Supports supports a wide range of attachments including `.zip`, `.csv` and `.pdf`. 

        :return: The url of this WhatsAppOneOf5AllOfFile.
        :rtype: object
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this WhatsAppOneOf5AllOfFile.

        The URL of the file attachment.  Supports supports a wide range of attachments including `.zip`, `.csv` and `.pdf`. 

        :param url: The url of this WhatsAppOneOf5AllOfFile.
        :type url: object
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
