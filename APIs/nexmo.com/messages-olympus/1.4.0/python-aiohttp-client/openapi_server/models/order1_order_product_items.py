# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Order1OrderProductItems(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: str=None, item_price: str=None, product_retailer_id: str=None, quantity: str=None):
        """Order1OrderProductItems - a model defined in OpenAPI

        :param currency: The currency of this Order1OrderProductItems.
        :param item_price: The item_price of this Order1OrderProductItems.
        :param product_retailer_id: The product_retailer_id of this Order1OrderProductItems.
        :param quantity: The quantity of this Order1OrderProductItems.
        """
        self.openapi_types = {
            'currency': str,
            'item_price': str,
            'product_retailer_id': str,
            'quantity': str
        }

        self.attribute_map = {
            'currency': 'currency',
            'item_price': 'item_price',
            'product_retailer_id': 'product_retailer_id',
            'quantity': 'quantity'
        }

        self._currency = currency
        self._item_price = item_price
        self._product_retailer_id = product_retailer_id
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Order1OrderProductItems':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order_1_order_product_items of this Order1OrderProductItems.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this Order1OrderProductItems.

        The currency code representing the currency for this specific item.

        :return: The currency of this Order1OrderProductItems.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Order1OrderProductItems.

        The currency code representing the currency for this specific item.

        :param currency: The currency of this Order1OrderProductItems.
        :type currency: str
        """

        self._currency = currency

    @property
    def item_price(self):
        """Gets the item_price of this Order1OrderProductItems.

        The unit price for this specific item.

        :return: The item_price of this Order1OrderProductItems.
        :rtype: str
        """
        return self._item_price

    @item_price.setter
    def item_price(self, item_price):
        """Sets the item_price of this Order1OrderProductItems.

        The unit price for this specific item.

        :param item_price: The item_price of this Order1OrderProductItems.
        :type item_price: str
        """

        self._item_price = item_price

    @property
    def product_retailer_id(self):
        """Gets the product_retailer_id of this Order1OrderProductItems.

        The ID of the specific product being ordered.

        :return: The product_retailer_id of this Order1OrderProductItems.
        :rtype: str
        """
        return self._product_retailer_id

    @product_retailer_id.setter
    def product_retailer_id(self, product_retailer_id):
        """Sets the product_retailer_id of this Order1OrderProductItems.

        The ID of the specific product being ordered.

        :param product_retailer_id: The product_retailer_id of this Order1OrderProductItems.
        :type product_retailer_id: str
        """

        self._product_retailer_id = product_retailer_id

    @property
    def quantity(self):
        """Gets the quantity of this Order1OrderProductItems.

        The quantity ordered for this specific item.

        :return: The quantity of this Order1OrderProductItems.
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this Order1OrderProductItems.

        The quantity ordered for this specific item.

        :param quantity: The quantity of this Order1OrderProductItems.
        :type quantity: str
        """

        self._quantity = quantity
