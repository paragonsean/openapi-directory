# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BaseMessageType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_ref: str=None):
        """BaseMessageType - a model defined in OpenAPI

        :param client_ref: The client_ref of this BaseMessageType.
        """
        self.openapi_types = {
            'client_ref': str
        }

        self.attribute_map = {
            'client_ref': 'client_ref'
        }

        self._client_ref = client_ref

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseMessageType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The baseMessageType of this BaseMessageType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_ref(self):
        """Gets the client_ref of this BaseMessageType.

        Client reference of up to 100 characters. The reference will be present in every message status.

        :return: The client_ref of this BaseMessageType.
        :rtype: str
        """
        return self._client_ref

    @client_ref.setter
    def client_ref(self, client_ref):
        """Sets the client_ref of this BaseMessageType.

        Client reference of up to 100 characters. The reference will be present in every message status.

        :param client_ref: The client_ref of this BaseMessageType.
        :type client_ref: str
        """

        self._client_ref = client_ref
