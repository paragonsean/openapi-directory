/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ViberOneOf3AllOfFile model module.
 * @module model/ViberOneOf3AllOfFile
 * @version 1.4.0
 */
class ViberOneOf3AllOfFile {
    /**
     * Constructs a new <code>ViberOneOf3AllOfFile</code>.
     * An object containing details of the file to be sent. Note: allowed file types are &#x60;.doc,&#x60; &#x60;.docx&#x60;, &#x60;.rtf&#x60;, &#x60;.dot&#x60;, &#x60;.dotx&#x60;, &#x60;.odt&#x60;, &#x60;.odf&#x60;, &#x60;.fodt&#x60;, &#x60;.txt&#x60;, &#x60;.info&#x60;, &#x60;.pdf&#x60;, &#x60;.xps&#x60;, &#x60;.pdax&#x60;, &#x60;.eps&#x60;, &#x60;.xls&#x60;, &#x60;.xlsx&#x60;, &#x60;.ods&#x60;, &#x60;.fods&#x60;, &#x60;.csv&#x60;, &#x60;.xlsm&#x60;, &#x60;.xltx&#x60;. Maximum file size is 200MB
     * @alias module:model/ViberOneOf3AllOfFile
     */
    constructor() { 
        
        ViberOneOf3AllOfFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ViberOneOf3AllOfFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ViberOneOf3AllOfFile} obj Optional instance to populate.
     * @return {module:model/ViberOneOf3AllOfFile} The populated <code>ViberOneOf3AllOfFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ViberOneOf3AllOfFile();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ViberOneOf3AllOfFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ViberOneOf3AllOfFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The name and extension of the file.
 * @member {String} name
 */
ViberOneOf3AllOfFile.prototype['name'] = undefined;

/**
 * The URL for the file attachment *or* the path for the location of the file attachement. If `name` is included, can just be the path. If  `name` is not included, must include the filename and extension.
 * @member {String} url
 */
ViberOneOf3AllOfFile.prototype['url'] = undefined;






export default ViberOneOf3AllOfFile;

