/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InboundMessageSMSSms model module.
 * @module model/InboundMessageSMSSms
 * @version 1.4.0
 */
class InboundMessageSMSSms {
    /**
     * Constructs a new <code>InboundMessageSMSSms</code>.
     * Channel specific metadata for SMS
     * @alias module:model/InboundMessageSMSSms
     */
    constructor() { 
        
        InboundMessageSMSSms.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InboundMessageSMSSms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InboundMessageSMSSms} obj Optional instance to populate.
     * @return {module:model/InboundMessageSMSSms} The populated <code>InboundMessageSMSSms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InboundMessageSMSSms();

            if (data.hasOwnProperty('keyword')) {
                obj['keyword'] = ApiClient.convertToType(data['keyword'], 'String');
            }
            if (data.hasOwnProperty('num_messages')) {
                obj['num_messages'] = ApiClient.convertToType(data['num_messages'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InboundMessageSMSSms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InboundMessageSMSSms</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['keyword'] && !(typeof data['keyword'] === 'string' || data['keyword'] instanceof String)) {
            throw new Error("Expected the field `keyword` to be a primitive type in the JSON string but got " + data['keyword']);
        }
        // ensure the json data is a string
        if (data['num_messages'] && !(typeof data['num_messages'] === 'string' || data['num_messages'] instanceof String)) {
            throw new Error("Expected the field `num_messages` to be a primitive type in the JSON string but got " + data['num_messages']);
        }

        return true;
    }


}



/**
 * The first word of the message sent to uppercase.
 * @member {String} keyword
 */
InboundMessageSMSSms.prototype['keyword'] = undefined;

/**
 * The number of inbound SMS messages concatenated together to comprise this message. SMS messages are 160 characters, if an inbound message exceeds that size they are concatenated together to forma single message. This number indicates how many messages formed this webhook.
 * @member {String} num_messages
 */
InboundMessageSMSSms.prototype['num_messages'] = undefined;






export default InboundMessageSMSSms;

