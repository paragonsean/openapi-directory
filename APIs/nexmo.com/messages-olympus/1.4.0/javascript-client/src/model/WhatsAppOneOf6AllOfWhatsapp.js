/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WhatsAppOneOf6AllOfWhatsapp model module.
 * @module model/WhatsAppOneOf6AllOfWhatsapp
 * @version 1.4.0
 */
class WhatsAppOneOf6AllOfWhatsapp {
    /**
     * Constructs a new <code>WhatsAppOneOf6AllOfWhatsapp</code>.
     * @alias module:model/WhatsAppOneOf6AllOfWhatsapp
     * @param locale {String} The [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) language of the template. See [the WhatsApp documentation](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#supported-languages-) for supported languages.
     */
    constructor(locale) { 
        
        WhatsAppOneOf6AllOfWhatsapp.initialize(this, locale);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, locale) { 
        obj['locale'] = locale;
    }

    /**
     * Constructs a <code>WhatsAppOneOf6AllOfWhatsapp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WhatsAppOneOf6AllOfWhatsapp} obj Optional instance to populate.
     * @return {module:model/WhatsAppOneOf6AllOfWhatsapp} The populated <code>WhatsAppOneOf6AllOfWhatsapp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WhatsAppOneOf6AllOfWhatsapp();

            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('policy')) {
                obj['policy'] = ApiClient.convertToType(data['policy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WhatsAppOneOf6AllOfWhatsapp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WhatsAppOneOf6AllOfWhatsapp</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WhatsAppOneOf6AllOfWhatsapp.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['policy'] && !(typeof data['policy'] === 'string' || data['policy'] instanceof String)) {
            throw new Error("Expected the field `policy` to be a primitive type in the JSON string but got " + data['policy']);
        }

        return true;
    }


}

WhatsAppOneOf6AllOfWhatsapp.RequiredProperties = ["locale"];

/**
 * The [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) language of the template. See [the WhatsApp documentation](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#supported-languages-) for supported languages.
 * @member {String} locale
 */
WhatsAppOneOf6AllOfWhatsapp.prototype['locale'] = undefined;

/**
 * Policy for resolving what language template to use. As of right now the only valid choice is `deterministic`.
 * @member {module:model/WhatsAppOneOf6AllOfWhatsapp.PolicyEnum} policy
 */
WhatsAppOneOf6AllOfWhatsapp.prototype['policy'] = undefined;





/**
 * Allowed values for the <code>policy</code> property.
 * @enum {String}
 * @readonly
 */
WhatsAppOneOf6AllOfWhatsapp['PolicyEnum'] = {

    /**
     * value: "deterministic"
     * @const
     */
    "deterministic": "deterministic"
};



export default WhatsAppOneOf6AllOfWhatsapp;

