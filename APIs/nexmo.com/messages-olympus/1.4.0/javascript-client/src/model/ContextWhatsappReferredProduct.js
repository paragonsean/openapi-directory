/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContextWhatsappReferredProduct model module.
 * @module model/ContextWhatsappReferredProduct
 * @version 1.4.0
 */
class ContextWhatsappReferredProduct {
    /**
     * Constructs a new <code>ContextWhatsappReferredProduct</code>.
     * An object containing details of a product from a &#x60;product&#x60; message being quoted or replied to using the &#39;Message Business&#39; option. 
     * @alias module:model/ContextWhatsappReferredProduct
     * @param catalogId {String} The ID of the catalog associated with the product from the `product` message being quoted or replied to using the 'Message Business' option.
     * @param productRetailerId {String} The ID of the product from the `product` message being quoted or replied to using the 'Message Business' option.
     */
    constructor(catalogId, productRetailerId) { 
        
        ContextWhatsappReferredProduct.initialize(this, catalogId, productRetailerId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, catalogId, productRetailerId) { 
        obj['catalog_id'] = catalogId;
        obj['product_retailer_id'] = productRetailerId;
    }

    /**
     * Constructs a <code>ContextWhatsappReferredProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContextWhatsappReferredProduct} obj Optional instance to populate.
     * @return {module:model/ContextWhatsappReferredProduct} The populated <code>ContextWhatsappReferredProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContextWhatsappReferredProduct();

            if (data.hasOwnProperty('catalog_id')) {
                obj['catalog_id'] = ApiClient.convertToType(data['catalog_id'], 'String');
            }
            if (data.hasOwnProperty('product_retailer_id')) {
                obj['product_retailer_id'] = ApiClient.convertToType(data['product_retailer_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContextWhatsappReferredProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContextWhatsappReferredProduct</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContextWhatsappReferredProduct.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['catalog_id'] && !(typeof data['catalog_id'] === 'string' || data['catalog_id'] instanceof String)) {
            throw new Error("Expected the field `catalog_id` to be a primitive type in the JSON string but got " + data['catalog_id']);
        }
        // ensure the json data is a string
        if (data['product_retailer_id'] && !(typeof data['product_retailer_id'] === 'string' || data['product_retailer_id'] instanceof String)) {
            throw new Error("Expected the field `product_retailer_id` to be a primitive type in the JSON string but got " + data['product_retailer_id']);
        }

        return true;
    }


}

ContextWhatsappReferredProduct.RequiredProperties = ["catalog_id", "product_retailer_id"];

/**
 * The ID of the catalog associated with the product from the `product` message being quoted or replied to using the 'Message Business' option.
 * @member {String} catalog_id
 */
ContextWhatsappReferredProduct.prototype['catalog_id'] = undefined;

/**
 * The ID of the product from the `product` message being quoted or replied to using the 'Message Business' option.
 * @member {String} product_retailer_id
 */
ContextWhatsappReferredProduct.prototype['product_retailer_id'] = undefined;






export default ContextWhatsappReferredProduct;

