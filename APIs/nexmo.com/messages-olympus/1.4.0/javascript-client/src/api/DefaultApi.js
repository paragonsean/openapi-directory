/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorInternal from '../model/ErrorInternal';
import ErrorPaymentRequired from '../model/ErrorPaymentRequired';
import ErrorThrottled from '../model/ErrorThrottled';
import SendMessage202Response from '../model/SendMessage202Response';
import SendMessage401Response from '../model/SendMessage401Response';
import SendMessage422Response from '../model/SendMessage422Response';
import SendMessageRequest from '../model/SendMessageRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 1.4.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the sendMessage operation.
     * @callback module:api/DefaultApi~sendMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendMessage202Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send a message to the given channel.
     * Send a Message
     * @param {module:model/SendMessageRequest} sendMessageRequest Send a Message.
     * @param {module:api/DefaultApi~sendMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendMessage202Response}
     */
    sendMessage(sendMessageRequest, callback) {
      let postBody = sendMessageRequest;
      // verify the required parameter 'sendMessageRequest' is set
      if (sendMessageRequest === undefined || sendMessageRequest === null) {
        throw new Error("Missing the required parameter 'sendMessageRequest' when calling sendMessage");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SendMessage202Response;
      return this.apiClient.callApi(
        '/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
