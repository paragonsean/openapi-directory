/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWhatsApp_oneOf_6.h
 *
 * 
 */

#ifndef OAIWhatsApp_oneOf_6_H
#define OAIWhatsApp_oneOf_6_H

#include <QJsonObject>

#include "OAITemplate_1_template.h"
#include "OAIWhatsApp_oneOf_6_allOf_whatsapp.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITemplate_1_template;
class OAIWhatsApp_oneOf_6_allOf_whatsapp;

class OAIWhatsApp_oneOf_6 : public OAIObject {
public:
    OAIWhatsApp_oneOf_6();
    OAIWhatsApp_oneOf_6(QString json);
    ~OAIWhatsApp_oneOf_6() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientRef() const;
    void setClientRef(const QString &client_ref);
    bool is_client_ref_Set() const;
    bool is_client_ref_Valid() const;

    QString getMessageType() const;
    void setMessageType(const QString &message_type);
    bool is_message_type_Set() const;
    bool is_message_type_Valid() const;

    OAITemplate_1_template getRTemplate() const;
    void setRTemplate(const OAITemplate_1_template &r_template);
    bool is_r_template_Set() const;
    bool is_r_template_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    OAIWhatsApp_oneOf_6_allOf_whatsapp getWhatsapp() const;
    void setWhatsapp(const OAIWhatsApp_oneOf_6_allOf_whatsapp &whatsapp);
    bool is_whatsapp_Set() const;
    bool is_whatsapp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_ref;
    bool m_client_ref_isSet;
    bool m_client_ref_isValid;

    QString m_message_type;
    bool m_message_type_isSet;
    bool m_message_type_isValid;

    OAITemplate_1_template m_r_template;
    bool m_r_template_isSet;
    bool m_r_template_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    OAIWhatsApp_oneOf_6_allOf_whatsapp m_whatsapp;
    bool m_whatsapp_isSet;
    bool m_whatsapp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWhatsApp_oneOf_6)

#endif // OAIWhatsApp_oneOf_6_H
