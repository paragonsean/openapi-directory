/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessageStatusMMS.h
 *
 * 
 */

#ifndef OAIMessageStatusMMS_H
#define OAIMessageStatusMMS_H

#include <QJsonObject>

#include "OAIMessageStatusBase_error.h"
#include "OAIMessageStatusBase_usage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMessageStatusBase_error;
class OAIMessageStatusBase_usage;

class OAIMessageStatusMMS : public OAIObject {
public:
    OAIMessageStatusMMS();
    OAIMessageStatusMMS(QString json);
    ~OAIMessageStatusMMS() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientRef() const;
    void setClientRef(const QString &client_ref);
    bool is_client_ref_Set() const;
    bool is_client_ref_Valid() const;

    OAIMessageStatusBase_error getError() const;
    void setError(const OAIMessageStatusBase_error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getMessageUuid() const;
    void setMessageUuid(const QString &message_uuid);
    bool is_message_uuid_Set() const;
    bool is_message_uuid_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    OAIMessageStatusBase_usage getUsage() const;
    void setUsage(const OAIMessageStatusBase_usage &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_ref;
    bool m_client_ref_isSet;
    bool m_client_ref_isValid;

    OAIMessageStatusBase_error m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_message_uuid;
    bool m_message_uuid_isSet;
    bool m_message_uuid_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    OAIMessageStatusBase_usage m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessageStatusMMS)

#endif // OAIMessageStatusMMS_H
