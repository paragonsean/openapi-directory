/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrder_1_order_product_items.h
 *
 * 
 */

#ifndef OAIOrder_1_order_product_items_H
#define OAIOrder_1_order_product_items_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrder_1_order_product_items : public OAIObject {
public:
    OAIOrder_1_order_product_items();
    OAIOrder_1_order_product_items(QString json);
    ~OAIOrder_1_order_product_items() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getItemPrice() const;
    void setItemPrice(const QString &item_price);
    bool is_item_price_Set() const;
    bool is_item_price_Valid() const;

    QString getProductRetailerId() const;
    void setProductRetailerId(const QString &product_retailer_id);
    bool is_product_retailer_id_Set() const;
    bool is_product_retailer_id_Valid() const;

    QString getQuantity() const;
    void setQuantity(const QString &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_item_price;
    bool m_item_price_isSet;
    bool m_item_price_isValid;

    QString m_product_retailer_id;
    bool m_product_retailer_id_isSet;
    bool m_product_retailer_id_isValid;

    QString m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrder_1_order_product_items)

#endif // OAIOrder_1_order_product_items_H
