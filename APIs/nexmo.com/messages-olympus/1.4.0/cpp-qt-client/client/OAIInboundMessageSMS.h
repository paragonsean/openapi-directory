/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInboundMessageSMS.h
 *
 * 
 */

#ifndef OAIInboundMessageSMS_H
#define OAIInboundMessageSMS_H

#include <QJsonObject>

#include "OAIInboundMessageSMS_sms.h"
#include "OAIUsage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInboundMessageSMS_sms;
class OAIUsage;

class OAIInboundMessageSMS : public OAIObject {
public:
    OAIInboundMessageSMS();
    OAIInboundMessageSMS(QString json);
    ~OAIInboundMessageSMS() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getMessageUuid() const;
    void setMessageUuid(const QString &message_uuid);
    bool is_message_uuid_Set() const;
    bool is_message_uuid_Valid() const;

    OAIInboundMessageSMS_sms getSms() const;
    void setSms(const OAIInboundMessageSMS_sms &sms);
    bool is_sms_Set() const;
    bool is_sms_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    OAIUsage getUsage() const;
    void setUsage(const OAIUsage &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_message_uuid;
    bool m_message_uuid_isSet;
    bool m_message_uuid_isValid;

    OAIInboundMessageSMS_sms m_sms;
    bool m_sms_isSet;
    bool m_sms_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    OAIUsage m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInboundMessageSMS)

#endif // OAIInboundMessageSMS_H
