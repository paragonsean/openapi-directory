/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIViber_oneOf_2.h
 *
 * 
 */

#ifndef OAIViber_oneOf_2_H
#define OAIViber_oneOf_2_H

#include <QJsonObject>

#include "OAIChannelOptionsViberVideo_viber_service.h"
#include "OAIViber_oneOf_2_allOf_video.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIViber_oneOf_2_allOf_video;
class OAIChannelOptionsViberVideo_viber_service;

class OAIViber_oneOf_2 : public OAIObject {
public:
    OAIViber_oneOf_2();
    OAIViber_oneOf_2(QString json);
    ~OAIViber_oneOf_2() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientRef() const;
    void setClientRef(const QString &client_ref);
    bool is_client_ref_Set() const;
    bool is_client_ref_Valid() const;

    QString getMessageType() const;
    void setMessageType(const QString &message_type);
    bool is_message_type_Set() const;
    bool is_message_type_Valid() const;

    OAIViber_oneOf_2_allOf_video getVideo() const;
    void setVideo(const OAIViber_oneOf_2_allOf_video &video);
    bool is_video_Set() const;
    bool is_video_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    OAIChannelOptionsViberVideo_viber_service getViberService() const;
    void setViberService(const OAIChannelOptionsViberVideo_viber_service &viber_service);
    bool is_viber_service_Set() const;
    bool is_viber_service_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_ref;
    bool m_client_ref_isSet;
    bool m_client_ref_isValid;

    QString m_message_type;
    bool m_message_type_isSet;
    bool m_message_type_isValid;

    OAIViber_oneOf_2_allOf_video m_video;
    bool m_video_isSet;
    bool m_video_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    OAIChannelOptionsViberVideo_viber_service m_viber_service;
    bool m_viber_service_isSet;
    bool m_viber_service_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIViber_oneOf_2)

#endif // OAIViber_oneOf_2_H
