/**
 * Messages API
 * The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErrorPaymentRequired.h
 *
 * 
 */

#ifndef OAIErrorPaymentRequired_H
#define OAIErrorPaymentRequired_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIErrorPaymentRequired : public OAIObject {
public:
    OAIErrorPaymentRequired();
    OAIErrorPaymentRequired(QString json);
    ~OAIErrorPaymentRequired() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetail() const;
    void setDetail(const QString &detail);
    bool is_detail_Set() const;
    bool is_detail_Valid() const;

    QString getInstance() const;
    void setInstance(const QString &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_detail;
    bool m_detail_isSet;
    bool m_detail_isValid;

    QString m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErrorPaymentRequired)

#endif // OAIErrorPaymentRequired_H
