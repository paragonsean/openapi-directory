/**
 * Pricing API
 * The API to retrieve pricing information. Please note the Pricing API is rate limited to one request per second.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkObject::OAINetworkObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkObject::OAINetworkObject() {
    this->initializeModel();
}

OAINetworkObject::~OAINetworkObject() {}

void OAINetworkObject::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_mcc_isSet = false;
    m_mcc_isValid = false;

    m_mnc_isSet = false;
    m_mnc_isValid = false;

    m_network_code_isSet = false;
    m_network_code_isValid = false;

    m_network_name_isSet = false;
    m_network_name_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAINetworkObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINetworkObject::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_mcc_isValid = ::OpenAPI::fromJsonValue(m_mcc, json[QString("mcc")]);
    m_mcc_isSet = !json[QString("mcc")].isNull() && m_mcc_isValid;

    m_mnc_isValid = ::OpenAPI::fromJsonValue(m_mnc, json[QString("mnc")]);
    m_mnc_isSet = !json[QString("mnc")].isNull() && m_mnc_isValid;

    m_network_code_isValid = ::OpenAPI::fromJsonValue(m_network_code, json[QString("networkCode")]);
    m_network_code_isSet = !json[QString("networkCode")].isNull() && m_network_code_isValid;

    m_network_name_isValid = ::OpenAPI::fromJsonValue(m_network_name, json[QString("networkName")]);
    m_network_name_isSet = !json[QString("networkName")].isNull() && m_network_name_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAINetworkObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINetworkObject::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_mcc_isSet) {
        obj.insert(QString("mcc"), ::OpenAPI::toJsonValue(m_mcc));
    }
    if (m_mnc_isSet) {
        obj.insert(QString("mnc"), ::OpenAPI::toJsonValue(m_mnc));
    }
    if (m_network_code_isSet) {
        obj.insert(QString("networkCode"), ::OpenAPI::toJsonValue(m_network_code));
    }
    if (m_network_name_isSet) {
        obj.insert(QString("networkName"), ::OpenAPI::toJsonValue(m_network_name));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAINetworkObject::getCurrency() const {
    return m_currency;
}
void OAINetworkObject::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAINetworkObject::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAINetworkObject::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAINetworkObject::getMcc() const {
    return m_mcc;
}
void OAINetworkObject::setMcc(const QString &mcc) {
    m_mcc = mcc;
    m_mcc_isSet = true;
}

bool OAINetworkObject::is_mcc_Set() const{
    return m_mcc_isSet;
}

bool OAINetworkObject::is_mcc_Valid() const{
    return m_mcc_isValid;
}

QString OAINetworkObject::getMnc() const {
    return m_mnc;
}
void OAINetworkObject::setMnc(const QString &mnc) {
    m_mnc = mnc;
    m_mnc_isSet = true;
}

bool OAINetworkObject::is_mnc_Set() const{
    return m_mnc_isSet;
}

bool OAINetworkObject::is_mnc_Valid() const{
    return m_mnc_isValid;
}

QString OAINetworkObject::getNetworkCode() const {
    return m_network_code;
}
void OAINetworkObject::setNetworkCode(const QString &network_code) {
    m_network_code = network_code;
    m_network_code_isSet = true;
}

bool OAINetworkObject::is_network_code_Set() const{
    return m_network_code_isSet;
}

bool OAINetworkObject::is_network_code_Valid() const{
    return m_network_code_isValid;
}

QString OAINetworkObject::getNetworkName() const {
    return m_network_name;
}
void OAINetworkObject::setNetworkName(const QString &network_name) {
    m_network_name = network_name;
    m_network_name_isSet = true;
}

bool OAINetworkObject::is_network_name_Set() const{
    return m_network_name_isSet;
}

bool OAINetworkObject::is_network_name_Valid() const{
    return m_network_name_isValid;
}

QString OAINetworkObject::getPrice() const {
    return m_price;
}
void OAINetworkObject::setPrice(const QString &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAINetworkObject::is_price_Set() const{
    return m_price_isSet;
}

bool OAINetworkObject::is_price_Valid() const{
    return m_price_isValid;
}

QString OAINetworkObject::getType() const {
    return m_type;
}
void OAINetworkObject::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAINetworkObject::is_type_Set() const{
    return m_type_isSet;
}

bool OAINetworkObject::is_type_Valid() const{
    return m_type_isValid;
}

bool OAINetworkObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mcc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINetworkObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
