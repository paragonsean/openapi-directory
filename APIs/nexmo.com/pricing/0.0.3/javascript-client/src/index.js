/**
 * Pricing API
 * The API to retrieve pricing information. Please note the Pricing API is rate limited to one request per second.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CountryObject from './model/CountryObject';
import NetworkObject from './model/NetworkObject';
import PricingCountriesResponse from './model/PricingCountriesResponse';
import PricingCountryResponse from './model/PricingCountryResponse';
import RetrievePricingAllCountries400Response from './model/RetrievePricingAllCountries400Response';
import RetrievePricingAllCountries400ResponseInvalidParameters from './model/RetrievePricingAllCountries400ResponseInvalidParameters';
import RetrievePricingAllCountries401Response from './model/RetrievePricingAllCountries401Response';
import PricingApi from './api/PricingApi';


/**
* The API to retrieve pricing information. Please note the Pricing API is rate limited to one request per second..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PricingApi = require('index'); // See note below*.
* var xxxSvc = new PricingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PricingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PricingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PricingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CountryObject model constructor.
     * @property {module:model/CountryObject}
     */
    CountryObject,

    /**
     * The NetworkObject model constructor.
     * @property {module:model/NetworkObject}
     */
    NetworkObject,

    /**
     * The PricingCountriesResponse model constructor.
     * @property {module:model/PricingCountriesResponse}
     */
    PricingCountriesResponse,

    /**
     * The PricingCountryResponse model constructor.
     * @property {module:model/PricingCountryResponse}
     */
    PricingCountryResponse,

    /**
     * The RetrievePricingAllCountries400Response model constructor.
     * @property {module:model/RetrievePricingAllCountries400Response}
     */
    RetrievePricingAllCountries400Response,

    /**
     * The RetrievePricingAllCountries400ResponseInvalidParameters model constructor.
     * @property {module:model/RetrievePricingAllCountries400ResponseInvalidParameters}
     */
    RetrievePricingAllCountries400ResponseInvalidParameters,

    /**
     * The RetrievePricingAllCountries401Response model constructor.
     * @property {module:model/RetrievePricingAllCountries401Response}
     */
    RetrievePricingAllCountries401Response,

    /**
    * The PricingApi service constructor.
    * @property {module:api/PricingApi}
    */
    PricingApi
};
