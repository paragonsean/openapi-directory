/**
 * Pricing API
 * The API to retrieve pricing information. Please note the Pricing API is rate limited to one request per second.
 *
 * The version of the OpenAPI document: 0.0.3
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CountryObject from './CountryObject';

/**
 * The PricingCountriesResponse model module.
 * @module model/PricingCountriesResponse
 * @version 0.0.3
 */
class PricingCountriesResponse {
    /**
     * Constructs a new <code>PricingCountriesResponse</code>.
     * @alias module:model/PricingCountriesResponse
     */
    constructor() { 
        
        PricingCountriesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PricingCountriesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PricingCountriesResponse} obj Optional instance to populate.
     * @return {module:model/PricingCountriesResponse} The populated <code>PricingCountriesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PricingCountriesResponse();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('countries')) {
                obj['countries'] = ApiClient.convertToType(data['countries'], [CountryObject]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PricingCountriesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PricingCountriesResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        if (data['countries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['countries'])) {
                throw new Error("Expected the field `countries` to be an array in the JSON data but got " + data['countries']);
            }
            // validate the optional field `countries` (array)
            for (const item of data['countries']) {
                CountryObject.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The number of countries retrieved.
 * @member {String} count
 */
PricingCountriesResponse.prototype['count'] = undefined;

/**
 * A list of countries.
 * @member {Array.<module:model/CountryObject>} countries
 */
PricingCountriesResponse.prototype['countries'] = undefined;






export default PricingCountriesResponse;

