/*
 * Media API
 * The Media API can be used to query, download and delete media items such as audio files for use with other Nexmo APIs.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Media
 */
public class MediaTest {
    private final Media model = new Media();

    /**
     * Model tests for Media
     */
    @Test
    public void testMedia() {
        // TODO: test Media
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'maxDownloadsAllowed'
     */
    @Test
    public void maxDownloadsAllowedTest() {
        // TODO: test maxDownloadsAllowed
    }

    /**
     * Test the property 'mediaSize'
     */
    @Test
    public void mediaSizeTest() {
        // TODO: test mediaSize
    }

    /**
     * Test the property 'metadataPrimary'
     */
    @Test
    public void metadataPrimaryTest() {
        // TODO: test metadataPrimary
    }

    /**
     * Test the property 'metadataSecondary'
     */
    @Test
    public void metadataSecondaryTest() {
        // TODO: test metadataSecondary
    }

    /**
     * Test the property 'mimeType'
     */
    @Test
    public void mimeTypeTest() {
        // TODO: test mimeType
    }

    /**
     * Test the property 'originalFileName'
     */
    @Test
    public void originalFileNameTest() {
        // TODO: test originalFileName
    }

    /**
     * Test the property '_public'
     */
    @Test
    public void _publicTest() {
        // TODO: test _public
    }

    /**
     * Test the property 'storeId'
     */
    @Test
    public void storeIdTest() {
        // TODO: test storeId
    }

    /**
     * Test the property 'timeCreated'
     */
    @Test
    public void timeCreatedTest() {
        // TODO: test timeCreated
    }

    /**
     * Test the property 'timeLastUpdated'
     */
    @Test
    public void timeLastUpdatedTest() {
        // TODO: test timeLastUpdated
    }

    /**
     * Test the property 'timesDownloaded'
     */
    @Test
    public void timesDownloadedTest() {
        // TODO: test timesDownloaded
    }

}
