/*
 * Media API
 * The Media API can be used to query, download and delete media items such as audio files for use with other Nexmo APIs.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListAndSearchMediaItems200Response;
import org.openapitools.client.model.Media;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Delete a media item
     *
     * Delete a previously created media item by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAMediaItemTest() throws ApiException {
        api.deleteAMediaItem();
        // TODO: test validations
    }

    /**
     * List and search media items
     *
     * Retrieve information about multiple media items with the ability to search and paginate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAndSearchMediaItemsTest() throws ApiException {
        String order = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        String startTime = null;
        String endTime = null;
        ListAndSearchMediaItems200Response response = api.listAndSearchMediaItems(order, pageIndex, pageSize, startTime, endTime);
        // TODO: test validations
    }

    /**
     * Retrieve a media item
     *
     * Retrieve information about a single media item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveAMediaItemTest() throws ApiException {
        Media response = api.retrieveAMediaItem();
        // TODO: test validations
    }

    /**
     * Update a media item
     *
     * Update a previously created media item by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAMediaItemTest() throws ApiException {
        String description = null;
        Integer maxDownloadsAllowed = null;
        String metadataPrimary = null;
        String metadataSecondary = null;
        String mimeType = null;
        Boolean _public = null;
        String title = null;
        api.updateAMediaItem(description, maxDownloadsAllowed, metadataPrimary, metadataSecondary, mimeType, _public, title);
        // TODO: test validations
    }

}
