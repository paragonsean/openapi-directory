/**
 * Media API
 * The Media API can be used to query, download and delete media items such as audio files for use with other Nexmo APIs.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIList_and_search_media_items_200_response.h
 *
 * 
 */

#ifndef OAIList_and_search_media_items_200_response_H
#define OAIList_and_search_media_items_200_response_H

#include <QJsonObject>

#include "OAIList_and_search_media_items_200_response__embedded.h"
#include "OAIList_and_search_media_items_200_response__links.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIList_and_search_media_items_200_response__embedded;
class OAIList_and_search_media_items_200_response__links;

class OAIList_and_search_media_items_200_response : public OAIObject {
public:
    OAIList_and_search_media_items_200_response();
    OAIList_and_search_media_items_200_response(QString json);
    ~OAIList_and_search_media_items_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIList_and_search_media_items_200_response__embedded getEmbedded() const;
    void setEmbedded(const OAIList_and_search_media_items_200_response__embedded &_embedded);
    bool is__embedded_Set() const;
    bool is__embedded_Valid() const;

    OAIList_and_search_media_items_200_response__links getLinks() const;
    void setLinks(const OAIList_and_search_media_items_200_response__links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getPageIndex() const;
    void setPageIndex(const qint32 &page_index);
    bool is_page_index_Set() const;
    bool is_page_index_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIList_and_search_media_items_200_response__embedded m__embedded;
    bool m__embedded_isSet;
    bool m__embedded_isValid;

    OAIList_and_search_media_items_200_response__links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_page_index;
    bool m_page_index_isSet;
    bool m_page_index_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIList_and_search_media_items_200_response)

#endif // OAIList_and_search_media_items_200_response_H
