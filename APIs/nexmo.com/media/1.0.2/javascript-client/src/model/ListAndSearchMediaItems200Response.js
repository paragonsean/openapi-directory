/**
 * Media API
 * The Media API can be used to query, download and delete media items such as audio files for use with other Nexmo APIs.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ListAndSearchMediaItems200ResponseEmbedded from './ListAndSearchMediaItems200ResponseEmbedded';
import ListAndSearchMediaItems200ResponseLinks from './ListAndSearchMediaItems200ResponseLinks';

/**
 * The ListAndSearchMediaItems200Response model module.
 * @module model/ListAndSearchMediaItems200Response
 * @version 1.0.2
 */
class ListAndSearchMediaItems200Response {
    /**
     * Constructs a new <code>ListAndSearchMediaItems200Response</code>.
     * @alias module:model/ListAndSearchMediaItems200Response
     */
    constructor() { 
        
        ListAndSearchMediaItems200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['count'] = 0;
        obj['page_index'] = 0;
        obj['page_size'] = 0;
    }

    /**
     * Constructs a <code>ListAndSearchMediaItems200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListAndSearchMediaItems200Response} obj Optional instance to populate.
     * @return {module:model/ListAndSearchMediaItems200Response} The populated <code>ListAndSearchMediaItems200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListAndSearchMediaItems200Response();

            if (data.hasOwnProperty('_embedded')) {
                obj['_embedded'] = ListAndSearchMediaItems200ResponseEmbedded.constructFromObject(data['_embedded']);
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = ListAndSearchMediaItems200ResponseLinks.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('page_index')) {
                obj['page_index'] = ApiClient.convertToType(data['page_index'], 'Number');
            }
            if (data.hasOwnProperty('page_size')) {
                obj['page_size'] = ApiClient.convertToType(data['page_size'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListAndSearchMediaItems200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListAndSearchMediaItems200Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `_embedded`
        if (data['_embedded']) { // data not null
          ListAndSearchMediaItems200ResponseEmbedded.validateJSON(data['_embedded']);
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          ListAndSearchMediaItems200ResponseLinks.validateJSON(data['_links']);
        }

        return true;
    }


}



/**
 * @member {module:model/ListAndSearchMediaItems200ResponseEmbedded} _embedded
 */
ListAndSearchMediaItems200Response.prototype['_embedded'] = undefined;

/**
 * @member {module:model/ListAndSearchMediaItems200ResponseLinks} _links
 */
ListAndSearchMediaItems200Response.prototype['_links'] = undefined;

/**
 * The total number of records returned by your request.
 * @member {Number} count
 * @default 0
 */
ListAndSearchMediaItems200Response.prototype['count'] = 0;

/**
 * The `page_index` used in your request.
 * @member {Number} page_index
 * @default 0
 */
ListAndSearchMediaItems200Response.prototype['page_index'] = 0;

/**
 * The amount of records returned in this response.
 * @member {Number} page_size
 * @default 0
 */
ListAndSearchMediaItems200Response.prototype['page_size'] = 0;






export default ListAndSearchMediaItems200Response;

