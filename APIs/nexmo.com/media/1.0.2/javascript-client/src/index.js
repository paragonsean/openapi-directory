/**
 * Media API
 * The Media API can be used to query, download and delete media items such as audio files for use with other Nexmo APIs.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@nexmo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ListAndSearchMediaItems200Response from './model/ListAndSearchMediaItems200Response';
import ListAndSearchMediaItems200ResponseEmbedded from './model/ListAndSearchMediaItems200ResponseEmbedded';
import ListAndSearchMediaItems200ResponseLinks from './model/ListAndSearchMediaItems200ResponseLinks';
import ListAndSearchMediaItems200ResponseLinksFirst from './model/ListAndSearchMediaItems200ResponseLinksFirst';
import Media from './model/Media';
import DefaultApi from './api/DefaultApi';


/**
* The Media API can be used to query, download and delete media items such as audio files for use with other Nexmo APIs..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MediaApi = require('index'); // See note below*.
* var xxxSvc = new MediaApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MediaApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MediaApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MediaApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ListAndSearchMediaItems200Response model constructor.
     * @property {module:model/ListAndSearchMediaItems200Response}
     */
    ListAndSearchMediaItems200Response,

    /**
     * The ListAndSearchMediaItems200ResponseEmbedded model constructor.
     * @property {module:model/ListAndSearchMediaItems200ResponseEmbedded}
     */
    ListAndSearchMediaItems200ResponseEmbedded,

    /**
     * The ListAndSearchMediaItems200ResponseLinks model constructor.
     * @property {module:model/ListAndSearchMediaItems200ResponseLinks}
     */
    ListAndSearchMediaItems200ResponseLinks,

    /**
     * The ListAndSearchMediaItems200ResponseLinksFirst model constructor.
     * @property {module:model/ListAndSearchMediaItems200ResponseLinksFirst}
     */
    ListAndSearchMediaItems200ResponseLinksFirst,

    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
