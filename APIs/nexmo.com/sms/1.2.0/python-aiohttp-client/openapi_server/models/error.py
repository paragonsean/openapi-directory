# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_message import ErrorMessage
from openapi_server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_count: str=None, messages: List[ErrorMessage]=None):
        """Error - a model defined in OpenAPI

        :param message_count: The message_count of this Error.
        :param messages: The messages of this Error.
        """
        self.openapi_types = {
            'message_count': str,
            'messages': List[ErrorMessage]
        }

        self.attribute_map = {
            'message_count': 'message-count',
            'messages': 'messages'
        }

        self._message_count = message_count
        self._messages = messages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Error of this Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_count(self):
        """Gets the message_count of this Error.

        The amount of messages in the request

        :return: The message_count of this Error.
        :rtype: str
        """
        return self._message_count

    @message_count.setter
    def message_count(self, message_count):
        """Sets the message_count of this Error.

        The amount of messages in the request

        :param message_count: The message_count of this Error.
        :type message_count: str
        """

        self._message_count = message_count

    @property
    def messages(self):
        """Gets the messages of this Error.


        :return: The messages of this Error.
        :rtype: List[ErrorMessage]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this Error.


        :param messages: The messages of this Error.
        :type messages: List[ErrorMessage]
        """

        self._messages = messages
