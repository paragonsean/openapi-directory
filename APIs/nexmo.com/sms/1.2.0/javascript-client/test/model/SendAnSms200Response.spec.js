/**
 * SMS API
 * With the SMS API you can send SMS from your account and lookup messages both messages that you've sent as well as messages sent to your virtual numbers. Numbers are specified in E.164 format. More SMS API documentation is at <https://developer.nexmo.com/messaging/sms/overview>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SmsApi);
  }
}(this, function(expect, SmsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SmsApi.SendAnSms200Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SendAnSms200Response', function() {
    it('should create an instance of SendAnSms200Response', function() {
      // uncomment below and update the code to test SendAnSms200Response
      //var instance = new SmsApi.SendAnSms200Response();
      //expect(instance).to.be.a(SmsApi.SendAnSms200Response);
    });

    it('should have the property messageCount (base name: "message-count")', function() {
      // uncomment below and update the code to test the property messageCount
      //var instance = new SmsApi.SendAnSms200Response();
      //expect(instance).to.be();
    });

    it('should have the property messages (base name: "messages")', function() {
      // uncomment below and update the code to test the property messages
      //var instance = new SmsApi.SendAnSms200Response();
      //expect(instance).to.be();
    });

  });

}));
