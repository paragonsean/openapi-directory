/**
 * SMS API
 * With the SMS API you can send SMS from your account and lookup messages both messages that you've sent as well as messages sent to your virtual numbers. Numbers are specified in E.164 format. More SMS API documentation is at <https://developer.nexmo.com/messaging/sms/overview>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeliveryReceipt.h
 *
 * 
 */

#ifndef OAIDeliveryReceipt_H
#define OAIDeliveryReceipt_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeliveryReceipt : public OAIObject {
public:
    OAIDeliveryReceipt();
    OAIDeliveryReceipt(QString json);
    ~OAIDeliveryReceipt() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiKey() const;
    void setApiKey(const QString &api_key);
    bool is_api_key_Set() const;
    bool is_api_key_Valid() const;

    QString getClientRef() const;
    void setClientRef(const QString &client_ref);
    bool is_client_ref_Set() const;
    bool is_client_ref_Valid() const;

    QString getErrCode() const;
    void setErrCode(const QString &err_code);
    bool is_err_code_Set() const;
    bool is_err_code_Valid() const;

    QString getMessageTimestamp() const;
    void setMessageTimestamp(const QString &message_timestamp);
    bool is_message_timestamp_Set() const;
    bool is_message_timestamp_Valid() const;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getMsisdn() const;
    void setMsisdn(const QString &msisdn);
    bool is_msisdn_Set() const;
    bool is_msisdn_Valid() const;

    QString getNetworkCode() const;
    void setNetworkCode(const QString &network_code);
    bool is_network_code_Set() const;
    bool is_network_code_Valid() const;

    QString getNonce() const;
    void setNonce(const QString &nonce);
    bool is_nonce_Set() const;
    bool is_nonce_Valid() const;

    QString getPrice() const;
    void setPrice(const QString &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getScts() const;
    void setScts(const QString &scts);
    bool is_scts_Set() const;
    bool is_scts_Valid() const;

    QString getSig() const;
    void setSig(const QString &sig);
    bool is_sig_Set() const;
    bool is_sig_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_key;
    bool m_api_key_isSet;
    bool m_api_key_isValid;

    QString m_client_ref;
    bool m_client_ref_isSet;
    bool m_client_ref_isValid;

    QString m_err_code;
    bool m_err_code_isSet;
    bool m_err_code_isValid;

    QString m_message_timestamp;
    bool m_message_timestamp_isSet;
    bool m_message_timestamp_isValid;

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_msisdn;
    bool m_msisdn_isSet;
    bool m_msisdn_isValid;

    QString m_network_code;
    bool m_network_code_isSet;
    bool m_network_code_isValid;

    QString m_nonce;
    bool m_nonce_isSet;
    bool m_nonce_isValid;

    QString m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_scts;
    bool m_scts_isSet;
    bool m_scts_isValid;

    QString m_sig;
    bool m_sig_isSet;
    bool m_sig_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeliveryReceipt)

#endif // OAIDeliveryReceipt_H
