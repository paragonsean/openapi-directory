/**
 * SMS API
 * With the SMS API you can send SMS from your account and lookup messages both messages that you've sent as well as messages sent to your virtual numbers. Numbers are specified in E.164 format. More SMS API documentation is at <https://developer.nexmo.com/messaging/sms/overview>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInboundMessage.h
 *
 * 
 */

#ifndef OAIInboundMessage_H
#define OAIInboundMessage_H

#include <QJsonObject>

#include "OAIHttpFileElement.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInboundMessage : public OAIObject {
public:
    OAIInboundMessage();
    OAIInboundMessage(QString json);
    ~OAIInboundMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiKey() const;
    void setApiKey(const QString &api_key);
    bool is_api_key_Set() const;
    bool is_api_key_Valid() const;

    QString getConcat() const;
    void setConcat(const QString &concat);
    bool is_concat_Set() const;
    bool is_concat_Valid() const;

    QString getConcatPart() const;
    void setConcatPart(const QString &concat_part);
    bool is_concat_part_Set() const;
    bool is_concat_part_Valid() const;

    QString getConcatRef() const;
    void setConcatRef(const QString &concat_ref);
    bool is_concat_ref_Set() const;
    bool is_concat_ref_Valid() const;

    QString getConcatTotal() const;
    void setConcatTotal(const QString &concat_total);
    bool is_concat_total_Set() const;
    bool is_concat_total_Valid() const;

    OAIHttpFileElement getData() const;
    void setData(const OAIHttpFileElement &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getKeyword() const;
    void setKeyword(const QString &keyword);
    bool is_keyword_Set() const;
    bool is_keyword_Valid() const;

    QString getMessageTimestamp() const;
    void setMessageTimestamp(const QString &message_timestamp);
    bool is_message_timestamp_Set() const;
    bool is_message_timestamp_Valid() const;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getMsisdn() const;
    void setMsisdn(const QString &msisdn);
    bool is_msisdn_Set() const;
    bool is_msisdn_Valid() const;

    QString getNonce() const;
    void setNonce(const QString &nonce);
    bool is_nonce_Set() const;
    bool is_nonce_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUdh() const;
    void setUdh(const QString &udh);
    bool is_udh_Set() const;
    bool is_udh_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_key;
    bool m_api_key_isSet;
    bool m_api_key_isValid;

    QString m_concat;
    bool m_concat_isSet;
    bool m_concat_isValid;

    QString m_concat_part;
    bool m_concat_part_isSet;
    bool m_concat_part_isValid;

    QString m_concat_ref;
    bool m_concat_ref_isSet;
    bool m_concat_ref_isValid;

    QString m_concat_total;
    bool m_concat_total_isSet;
    bool m_concat_total_isValid;

    OAIHttpFileElement m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_keyword;
    bool m_keyword_isSet;
    bool m_keyword_isValid;

    QString m_message_timestamp;
    bool m_message_timestamp_isSet;
    bool m_message_timestamp_isValid;

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_msisdn;
    bool m_msisdn_isSet;
    bool m_msisdn_isValid;

    QString m_nonce;
    bool m_nonce_isSet;
    bool m_nonce_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_udh;
    bool m_udh_isSet;
    bool m_udh_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInboundMessage)

#endif // OAIInboundMessage_H
