# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContextNumberLinking(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: str=None, application_id: str=None, country: str=None, msisdn: str=None):
        """ContextNumberLinking - a model defined in OpenAPI

        :param account: The account of this ContextNumberLinking.
        :param application_id: The application_id of this ContextNumberLinking.
        :param country: The country of this ContextNumberLinking.
        :param msisdn: The msisdn of this ContextNumberLinking.
        """
        self.openapi_types = {
            'account': str,
            'application_id': str,
            'country': str,
            'msisdn': str
        }

        self.attribute_map = {
            'account': 'account',
            'application_id': 'applicationId',
            'country': 'country',
            'msisdn': 'msisdn'
        }

        self._account = account
        self._application_id = application_id
        self._country = country
        self._msisdn = msisdn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContextNumberLinking':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContextNumberLinking of this ContextNumberLinking.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this ContextNumberLinking.

        Which account the number is associated with

        :return: The account of this ContextNumberLinking.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this ContextNumberLinking.

        Which account the number is associated with

        :param account: The account of this ContextNumberLinking.
        :type account: str
        """

        self._account = account

    @property
    def application_id(self):
        """Gets the application_id of this ContextNumberLinking.

        UUID of the app the number is being linked/unlinked to

        :return: The application_id of this ContextNumberLinking.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this ContextNumberLinking.

        UUID of the app the number is being linked/unlinked to

        :param application_id: The application_id of this ContextNumberLinking.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def country(self):
        """Gets the country of this ContextNumberLinking.

        The country of the number

        :return: The country of this ContextNumberLinking.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this ContextNumberLinking.

        The country of the number

        :param country: The country of this ContextNumberLinking.
        :type country: str
        """

        self._country = country

    @property
    def msisdn(self):
        """Gets the msisdn of this ContextNumberLinking.

        The phone number linked/unlinked to your application

        :return: The msisdn of this ContextNumberLinking.
        :rtype: str
        """
        return self._msisdn

    @msisdn.setter
    def msisdn(self, msisdn):
        """Sets the msisdn of this ContextNumberLinking.

        The phone number linked/unlinked to your application

        :param msisdn: The msisdn of this ContextNumberLinking.
        :type msisdn: str
        """

        self._msisdn = msisdn
