# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audit_resp_embedded import AuditRespEmbedded
from openapi_server.models.pagination_data import PaginationData
from openapi_server.models.pagination_links import PaginationLinks
from openapi_server import util


class AuditResp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, embedded: AuditRespEmbedded=None, links: PaginationLinks=None, page: PaginationData=None):
        """AuditResp - a model defined in OpenAPI

        :param embedded: The embedded of this AuditResp.
        :param links: The links of this AuditResp.
        :param page: The page of this AuditResp.
        """
        self.openapi_types = {
            'embedded': AuditRespEmbedded,
            'links': PaginationLinks,
            'page': PaginationData
        }

        self.attribute_map = {
            'embedded': '_embedded',
            'links': '_links',
            'page': 'page'
        }

        self._embedded = embedded
        self._links = links
        self._page = page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuditResp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuditResp of this AuditResp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def embedded(self):
        """Gets the embedded of this AuditResp.


        :return: The embedded of this AuditResp.
        :rtype: AuditRespEmbedded
        """
        return self._embedded

    @embedded.setter
    def embedded(self, embedded):
        """Sets the embedded of this AuditResp.


        :param embedded: The embedded of this AuditResp.
        :type embedded: AuditRespEmbedded
        """

        self._embedded = embedded

    @property
    def links(self):
        """Gets the links of this AuditResp.


        :return: The links of this AuditResp.
        :rtype: PaginationLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this AuditResp.


        :param links: The links of this AuditResp.
        :type links: PaginationLinks
        """

        self._links = links

    @property
    def page(self):
        """Gets the page of this AuditResp.


        :return: The page of this AuditResp.
        :rtype: PaginationData
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this AuditResp.


        :param page: The page of this AuditResp.
        :type page: PaginationData
        """

        self._page = page
