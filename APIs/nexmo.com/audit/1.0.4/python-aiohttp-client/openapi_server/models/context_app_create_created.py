# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.callback_url import CallbackUrl
from openapi_server import util


class ContextAppCreateCreated(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, answer_url: CallbackUrl=None, app_id: str=None, event_url: CallbackUrl=None, name: str=None, type: str=None):
        """ContextAppCreateCreated - a model defined in OpenAPI

        :param account_id: The account_id of this ContextAppCreateCreated.
        :param answer_url: The answer_url of this ContextAppCreateCreated.
        :param app_id: The app_id of this ContextAppCreateCreated.
        :param event_url: The event_url of this ContextAppCreateCreated.
        :param name: The name of this ContextAppCreateCreated.
        :param type: The type of this ContextAppCreateCreated.
        """
        self.openapi_types = {
            'account_id': str,
            'answer_url': CallbackUrl,
            'app_id': str,
            'event_url': CallbackUrl,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'answer_url': 'answer_url',
            'app_id': 'appId',
            'event_url': 'event_url',
            'name': 'name',
            'type': 'type'
        }

        self._account_id = account_id
        self._answer_url = answer_url
        self._app_id = app_id
        self._event_url = event_url
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContextAppCreateCreated':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContextAppCreate_created of this ContextAppCreateCreated.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this ContextAppCreateCreated.

        Which account the app is associated with

        :return: The account_id of this ContextAppCreateCreated.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this ContextAppCreateCreated.

        Which account the app is associated with

        :param account_id: The account_id of this ContextAppCreateCreated.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def answer_url(self):
        """Gets the answer_url of this ContextAppCreateCreated.


        :return: The answer_url of this ContextAppCreateCreated.
        :rtype: CallbackUrl
        """
        return self._answer_url

    @answer_url.setter
    def answer_url(self, answer_url):
        """Sets the answer_url of this ContextAppCreateCreated.


        :param answer_url: The answer_url of this ContextAppCreateCreated.
        :type answer_url: CallbackUrl
        """

        self._answer_url = answer_url

    @property
    def app_id(self):
        """Gets the app_id of this ContextAppCreateCreated.

        UUID of the app that was created

        :return: The app_id of this ContextAppCreateCreated.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this ContextAppCreateCreated.

        UUID of the app that was created

        :param app_id: The app_id of this ContextAppCreateCreated.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def event_url(self):
        """Gets the event_url of this ContextAppCreateCreated.


        :return: The event_url of this ContextAppCreateCreated.
        :rtype: CallbackUrl
        """
        return self._event_url

    @event_url.setter
    def event_url(self, event_url):
        """Sets the event_url of this ContextAppCreateCreated.


        :param event_url: The event_url of this ContextAppCreateCreated.
        :type event_url: CallbackUrl
        """

        self._event_url = event_url

    @property
    def name(self):
        """Gets the name of this ContextAppCreateCreated.

        The name of the application created

        :return: The name of this ContextAppCreateCreated.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContextAppCreateCreated.

        The name of the application created

        :param name: The name of this ContextAppCreateCreated.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this ContextAppCreateCreated.

        The type of application created

        :return: The type of this ContextAppCreateCreated.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ContextAppCreateCreated.

        The type of application created

        :param type: The type of this ContextAppCreateCreated.
        :type type: str
        """

        self._type = type
