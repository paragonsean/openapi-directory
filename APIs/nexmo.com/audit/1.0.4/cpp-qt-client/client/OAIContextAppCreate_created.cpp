/**
 * Audit API
 * The Vonage Audit API allows you to view details of changes to your account. More information is available at <https://developer.nexmo.com/audit/overview>. _Please note that the Audit API is currently in Beta_ 
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContextAppCreate_created.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContextAppCreate_created::OAIContextAppCreate_created(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContextAppCreate_created::OAIContextAppCreate_created() {
    this->initializeModel();
}

OAIContextAppCreate_created::~OAIContextAppCreate_created() {}

void OAIContextAppCreate_created::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_answer_url_isSet = false;
    m_answer_url_isValid = false;

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_event_url_isSet = false;
    m_event_url_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIContextAppCreate_created::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContextAppCreate_created::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_answer_url_isValid = ::OpenAPI::fromJsonValue(m_answer_url, json[QString("answer_url")]);
    m_answer_url_isSet = !json[QString("answer_url")].isNull() && m_answer_url_isValid;

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_event_url_isValid = ::OpenAPI::fromJsonValue(m_event_url, json[QString("event_url")]);
    m_event_url_isSet = !json[QString("event_url")].isNull() && m_event_url_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIContextAppCreate_created::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContextAppCreate_created::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_answer_url.isSet()) {
        obj.insert(QString("answer_url"), ::OpenAPI::toJsonValue(m_answer_url));
    }
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_event_url.isSet()) {
        obj.insert(QString("event_url"), ::OpenAPI::toJsonValue(m_event_url));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIContextAppCreate_created::getAccountId() const {
    return m_account_id;
}
void OAIContextAppCreate_created::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIContextAppCreate_created::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIContextAppCreate_created::is_account_id_Valid() const{
    return m_account_id_isValid;
}

OAICallbackUrl OAIContextAppCreate_created::getAnswerUrl() const {
    return m_answer_url;
}
void OAIContextAppCreate_created::setAnswerUrl(const OAICallbackUrl &answer_url) {
    m_answer_url = answer_url;
    m_answer_url_isSet = true;
}

bool OAIContextAppCreate_created::is_answer_url_Set() const{
    return m_answer_url_isSet;
}

bool OAIContextAppCreate_created::is_answer_url_Valid() const{
    return m_answer_url_isValid;
}

QString OAIContextAppCreate_created::getAppId() const {
    return m_app_id;
}
void OAIContextAppCreate_created::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIContextAppCreate_created::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIContextAppCreate_created::is_app_id_Valid() const{
    return m_app_id_isValid;
}

OAICallbackUrl OAIContextAppCreate_created::getEventUrl() const {
    return m_event_url;
}
void OAIContextAppCreate_created::setEventUrl(const OAICallbackUrl &event_url) {
    m_event_url = event_url;
    m_event_url_isSet = true;
}

bool OAIContextAppCreate_created::is_event_url_Set() const{
    return m_event_url_isSet;
}

bool OAIContextAppCreate_created::is_event_url_Valid() const{
    return m_event_url_isValid;
}

QString OAIContextAppCreate_created::getName() const {
    return m_name;
}
void OAIContextAppCreate_created::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIContextAppCreate_created::is_name_Set() const{
    return m_name_isSet;
}

bool OAIContextAppCreate_created::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIContextAppCreate_created::getType() const {
    return m_type;
}
void OAIContextAppCreate_created::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIContextAppCreate_created::is_type_Set() const{
    return m_type_isSet;
}

bool OAIContextAppCreate_created::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIContextAppCreate_created::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_url.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_url.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContextAppCreate_created::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
