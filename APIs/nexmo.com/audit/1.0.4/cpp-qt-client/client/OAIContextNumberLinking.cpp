/**
 * Audit API
 * The Vonage Audit API allows you to view details of changes to your account. More information is available at <https://developer.nexmo.com/audit/overview>. _Please note that the Audit API is currently in Beta_ 
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContextNumberLinking.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContextNumberLinking::OAIContextNumberLinking(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContextNumberLinking::OAIContextNumberLinking() {
    this->initializeModel();
}

OAIContextNumberLinking::~OAIContextNumberLinking() {}

void OAIContextNumberLinking::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_application_id_isSet = false;
    m_application_id_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_msisdn_isSet = false;
    m_msisdn_isValid = false;
}

void OAIContextNumberLinking::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContextNumberLinking::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_application_id_isValid = ::OpenAPI::fromJsonValue(m_application_id, json[QString("applicationId")]);
    m_application_id_isSet = !json[QString("applicationId")].isNull() && m_application_id_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_msisdn_isValid = ::OpenAPI::fromJsonValue(m_msisdn, json[QString("msisdn")]);
    m_msisdn_isSet = !json[QString("msisdn")].isNull() && m_msisdn_isValid;
}

QString OAIContextNumberLinking::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContextNumberLinking::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_application_id_isSet) {
        obj.insert(QString("applicationId"), ::OpenAPI::toJsonValue(m_application_id));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_msisdn_isSet) {
        obj.insert(QString("msisdn"), ::OpenAPI::toJsonValue(m_msisdn));
    }
    return obj;
}

QString OAIContextNumberLinking::getAccount() const {
    return m_account;
}
void OAIContextNumberLinking::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIContextNumberLinking::is_account_Set() const{
    return m_account_isSet;
}

bool OAIContextNumberLinking::is_account_Valid() const{
    return m_account_isValid;
}

QString OAIContextNumberLinking::getApplicationId() const {
    return m_application_id;
}
void OAIContextNumberLinking::setApplicationId(const QString &application_id) {
    m_application_id = application_id;
    m_application_id_isSet = true;
}

bool OAIContextNumberLinking::is_application_id_Set() const{
    return m_application_id_isSet;
}

bool OAIContextNumberLinking::is_application_id_Valid() const{
    return m_application_id_isValid;
}

QString OAIContextNumberLinking::getCountry() const {
    return m_country;
}
void OAIContextNumberLinking::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIContextNumberLinking::is_country_Set() const{
    return m_country_isSet;
}

bool OAIContextNumberLinking::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIContextNumberLinking::getMsisdn() const {
    return m_msisdn;
}
void OAIContextNumberLinking::setMsisdn(const QString &msisdn) {
    m_msisdn = msisdn;
    m_msisdn_isSet = true;
}

bool OAIContextNumberLinking::is_msisdn_Set() const{
    return m_msisdn_isSet;
}

bool OAIContextNumberLinking::is_msisdn_Valid() const{
    return m_msisdn_isValid;
}

bool OAIContextNumberLinking::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_application_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_msisdn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContextNumberLinking::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
