/**
 * Audit API
 * The Vonage Audit API allows you to view details of changes to your account. More information is available at <https://developer.nexmo.com/audit/overview>. _Please note that the Audit API is currently in Beta_ 
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContextAppCreate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContextAppCreate::OAIContextAppCreate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContextAppCreate::OAIContextAppCreate() {
    this->initializeModel();
}

OAIContextAppCreate::~OAIContextAppCreate() {}

void OAIContextAppCreate::initializeModel() {

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;
}

void OAIContextAppCreate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContextAppCreate::fromJsonObject(QJsonObject json) {

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;
}

QString OAIContextAppCreate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContextAppCreate::asJsonObject() const {
    QJsonObject obj;
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_created.isSet()) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    return obj;
}

QString OAIContextAppCreate::getAppId() const {
    return m_app_id;
}
void OAIContextAppCreate::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIContextAppCreate::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIContextAppCreate::is_app_id_Valid() const{
    return m_app_id_isValid;
}

OAIContextAppCreate_created OAIContextAppCreate::getCreated() const {
    return m_created;
}
void OAIContextAppCreate::setCreated(const OAIContextAppCreate_created &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIContextAppCreate::is_created_Set() const{
    return m_created_isSet;
}

bool OAIContextAppCreate::is_created_Valid() const{
    return m_created_isValid;
}

bool OAIContextAppCreate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContextAppCreate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
