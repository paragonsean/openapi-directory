/**
 * Audit API
 * The Vonage Audit API allows you to view details of changes to your account. More information is available at <https://developer.nexmo.com/audit/overview>. _Please note that the Audit API is currently in Beta_ 
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContextNumberUpdate model module.
 * @module model/ContextNumberUpdate
 * @version 1.0.4
 */
class ContextNumberUpdate {
    /**
     * Constructs a new <code>ContextNumberUpdate</code>.
     * @alias module:model/ContextNumberUpdate
     */
    constructor() { 
        
        ContextNumberUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContextNumberUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContextNumberUpdate} obj Optional instance to populate.
     * @return {module:model/ContextNumberUpdate} The populated <code>ContextNumberUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContextNumberUpdate();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('http')) {
                obj['http'] = ApiClient.convertToType(data['http'], 'String');
            }
            if (data.hasOwnProperty('msisdn')) {
                obj['msisdn'] = ApiClient.convertToType(data['msisdn'], 'String');
            }
            if (data.hasOwnProperty('voice-type')) {
                obj['voice-type'] = ApiClient.convertToType(data['voice-type'], 'String');
            }
            if (data.hasOwnProperty('voice-value')) {
                obj['voice-value'] = ApiClient.convertToType(data['voice-value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContextNumberUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContextNumberUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['http'] && !(typeof data['http'] === 'string' || data['http'] instanceof String)) {
            throw new Error("Expected the field `http` to be a primitive type in the JSON string but got " + data['http']);
        }
        // ensure the json data is a string
        if (data['msisdn'] && !(typeof data['msisdn'] === 'string' || data['msisdn'] instanceof String)) {
            throw new Error("Expected the field `msisdn` to be a primitive type in the JSON string but got " + data['msisdn']);
        }
        // ensure the json data is a string
        if (data['voice-type'] && !(typeof data['voice-type'] === 'string' || data['voice-type'] instanceof String)) {
            throw new Error("Expected the field `voice-type` to be a primitive type in the JSON string but got " + data['voice-type']);
        }
        // ensure the json data is a string
        if (data['voice-value'] && !(typeof data['voice-value'] === 'string' || data['voice-value'] instanceof String)) {
            throw new Error("Expected the field `voice-value` to be a primitive type in the JSON string but got " + data['voice-value']);
        }

        return true;
    }


}



/**
 * The country of the number
 * @member {String} country
 */
ContextNumberUpdate.prototype['country'] = undefined;

/**
 * The URL of the endpoint the number has been forwarded to
 * @member {String} http
 */
ContextNumberUpdate.prototype['http'] = undefined;

/**
 * The phone number linked/unlinked to your application
 * @member {String} msisdn
 */
ContextNumberUpdate.prototype['msisdn'] = undefined;

/**
 * The type of endpoint the number has been forwarded to
 * @member {module:model/ContextNumberUpdate.VoiceTypeEnum} voice-type
 */
ContextNumberUpdate.prototype['voice-type'] = undefined;

/**
 * The value of the endpoint the number has been forwarded to
 * @member {String} voice-value
 */
ContextNumberUpdate.prototype['voice-value'] = undefined;





/**
 * Allowed values for the <code>voice-type</code> property.
 * @enum {String}
 * @readonly
 */
ContextNumberUpdate['VoiceTypeEnum'] = {

    /**
     * value: "tel"
     * @const
     */
    "tel": "tel",

    /**
     * value: "sip"
     * @const
     */
    "sip": "sip",

    /**
     * value: "vxml"
     * @const
     */
    "vxml": "vxml",

    /**
     * value: "app"
     * @const
     */
    "app": "app"
};



export default ContextNumberUpdate;

