/**
 * Audit API
 * The Vonage Audit API allows you to view details of changes to your account. More information is available at <https://developer.nexmo.com/audit/overview>. _Please note that the Audit API is currently in Beta_ 
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AuditApi);
  }
}(this, function(expect, AuditApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AuditApi.AuditEvent();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuditEvent', function() {
    it('should create an instance of AuditEvent', function() {
      // uncomment below and update the code to test AuditEvent
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be.a(AuditApi.AuditEvent);
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property accountId (base name: "account_id")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property context (base name: "context")', function() {
      // uncomment below and update the code to test the property context
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property eventType (base name: "event_type")', function() {
      // uncomment below and update the code to test the property eventType
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property eventTypeDescription (base name: "event_type_description")', function() {
      // uncomment below and update the code to test the property eventTypeDescription
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property sourceCountry (base name: "source_country")', function() {
      // uncomment below and update the code to test the property sourceCountry
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property sourceDescription (base name: "source_description")', function() {
      // uncomment below and update the code to test the property sourceDescription
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property sourceIp (base name: "source_ip")', function() {
      // uncomment below and update the code to test the property sourceIp
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property userEmail (base name: "user_email")', function() {
      // uncomment below and update the code to test the property userEmail
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "user_id")', function() {
      // uncomment below and update the code to test the property userId
      //var instance = new AuditApi.AuditEvent();
      //expect(instance).to.be();
    });

  });

}));
