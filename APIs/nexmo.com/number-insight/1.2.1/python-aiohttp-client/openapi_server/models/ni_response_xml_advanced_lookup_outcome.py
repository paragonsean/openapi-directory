# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NiResponseXmlAdvancedLookupOutcome(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: float=None, lookup_outcome_message: str=None):
        """NiResponseXmlAdvancedLookupOutcome - a model defined in OpenAPI

        :param code: The code of this NiResponseXmlAdvancedLookupOutcome.
        :param lookup_outcome_message: The lookup_outcome_message of this NiResponseXmlAdvancedLookupOutcome.
        """
        self.openapi_types = {
            'code': float,
            'lookup_outcome_message': str
        }

        self.attribute_map = {
            'code': 'code',
            'lookup_outcome_message': 'lookup_outcome_message'
        }

        self._code = code
        self._lookup_outcome_message = lookup_outcome_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NiResponseXmlAdvancedLookupOutcome':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The niResponseXmlAdvanced_lookup_outcome of this NiResponseXmlAdvancedLookupOutcome.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this NiResponseXmlAdvancedLookupOutcome.

        Shows if all information about a phone number has been returned. Possible values:  Code | Text -- | -- 0 | Success 1 | Partial success - some fields populated 2 | Failed 

        :return: The code of this NiResponseXmlAdvancedLookupOutcome.
        :rtype: float
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this NiResponseXmlAdvancedLookupOutcome.

        Shows if all information about a phone number has been returned. Possible values:  Code | Text -- | -- 0 | Success 1 | Partial success - some fields populated 2 | Failed 

        :param code: The code of this NiResponseXmlAdvancedLookupOutcome.
        :type code: float
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if code not in allowed_values:
            raise ValueError(
                "Invalid value for `code` ({0}), must be one of {1}"
                .format(code, allowed_values)
            )

        self._code = code

    @property
    def lookup_outcome_message(self):
        """Gets the lookup_outcome_message of this NiResponseXmlAdvancedLookupOutcome.

        Shows if all information about a phone number has been returned.

        :return: The lookup_outcome_message of this NiResponseXmlAdvancedLookupOutcome.
        :rtype: str
        """
        return self._lookup_outcome_message

    @lookup_outcome_message.setter
    def lookup_outcome_message(self, lookup_outcome_message):
        """Sets the lookup_outcome_message of this NiResponseXmlAdvancedLookupOutcome.

        Shows if all information about a phone number has been returned.

        :param lookup_outcome_message: The lookup_outcome_message of this NiResponseXmlAdvancedLookupOutcome.
        :type lookup_outcome_message: str
        """

        self._lookup_outcome_message = lookup_outcome_message
