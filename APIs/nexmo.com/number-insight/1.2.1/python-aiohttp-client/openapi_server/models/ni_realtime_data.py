# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NiRealtimeData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_status: str=None, handset_status: str=None):
        """NiRealtimeData - a model defined in OpenAPI

        :param active_status: The active_status of this NiRealtimeData.
        :param handset_status: The handset_status of this NiRealtimeData.
        """
        self.openapi_types = {
            'active_status': str,
            'handset_status': str
        }

        self.attribute_map = {
            'active_status': 'active_status',
            'handset_status': 'handset_status'
        }

        self._active_status = active_status
        self._handset_status = handset_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NiRealtimeData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The niRealtimeData of this NiRealtimeData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_status(self):
        """Gets the active_status of this NiRealtimeData.

        Whether the end-user's phone number is active within an operator's `network`. Can be `active`, `inactive` or null.

        :return: The active_status of this NiRealtimeData.
        :rtype: str
        """
        return self._active_status

    @active_status.setter
    def active_status(self, active_status):
        """Sets the active_status of this NiRealtimeData.

        Whether the end-user's phone number is active within an operator's `network`. Can be `active`, `inactive` or null.

        :param active_status: The active_status of this NiRealtimeData.
        :type active_status: str
        """

        self._active_status = active_status

    @property
    def handset_status(self):
        """Gets the handset_status of this NiRealtimeData.

        Whether the end-user's handset is turned on or off.

        :return: The handset_status of this NiRealtimeData.
        :rtype: str
        """
        return self._handset_status

    @handset_status.setter
    def handset_status(self, handset_status):
        """Sets the handset_status of this NiRealtimeData.

        Whether the end-user's handset is turned on or off.

        :param handset_status: The handset_status of this NiRealtimeData.
        :type handset_status: str
        """

        self._handset_status = handset_status
