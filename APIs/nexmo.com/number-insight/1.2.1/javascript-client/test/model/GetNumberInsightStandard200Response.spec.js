/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NumberInsightApi);
  }
}(this, function(expect, NumberInsightApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NumberInsightApi.GetNumberInsightStandard200Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetNumberInsightStandard200Response', function() {
    it('should create an instance of GetNumberInsightStandard200Response', function() {
      // uncomment below and update the code to test GetNumberInsightStandard200Response
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be.a(NumberInsightApi.GetNumberInsightStandard200Response);
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property countryCodeIso3 (base name: "country_code_iso3")', function() {
      // uncomment below and update the code to test the property countryCodeIso3
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property countryName (base name: "country_name")', function() {
      // uncomment below and update the code to test the property countryName
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property countryPrefix (base name: "country_prefix")', function() {
      // uncomment below and update the code to test the property countryPrefix
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property internationalFormatNumber (base name: "international_format_number")', function() {
      // uncomment below and update the code to test the property internationalFormatNumber
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property nationalFormatNumber (base name: "national_format_number")', function() {
      // uncomment below and update the code to test the property nationalFormatNumber
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property requestId (base name: "request_id")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property statusMessage (base name: "status_message")', function() {
      // uncomment below and update the code to test the property statusMessage
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property callerIdentity (base name: "caller_identity")', function() {
      // uncomment below and update the code to test the property callerIdentity
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property callerName (base name: "caller_name")', function() {
      // uncomment below and update the code to test the property callerName
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property callerType (base name: "caller_type")', function() {
      // uncomment below and update the code to test the property callerType
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property currentCarrier (base name: "current_carrier")', function() {
      // uncomment below and update the code to test the property currentCarrier
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property originalCarrier (base name: "original_carrier")', function() {
      // uncomment below and update the code to test the property originalCarrier
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property ported (base name: "ported")', function() {
      // uncomment below and update the code to test the property ported
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property refundPrice (base name: "refund_price")', function() {
      // uncomment below and update the code to test the property refundPrice
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property remainingBalance (base name: "remaining_balance")', function() {
      // uncomment below and update the code to test the property remainingBalance
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

    it('should have the property requestPrice (base name: "request_price")', function() {
      // uncomment below and update the code to test the property requestPrice
      //var instance = new NumberInsightApi.GetNumberInsightStandard200Response();
      //expect(instance).to.be();
    });

  });

}));
