/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetNumberInsightAdvanced200Response from '../model/GetNumberInsightAdvanced200Response';
import GetNumberInsightAsync200Response from '../model/GetNumberInsightAsync200Response';
import GetNumberInsightStandard200Response from '../model/GetNumberInsightStandard200Response';
import NiResponseAsync from '../model/NiResponseAsync';
import NiResponseJsonBasic from '../model/NiResponseJsonBasic';
import NiResponseXmlAdvanced from '../model/NiResponseXmlAdvanced';
import NiResponseXmlBasic from '../model/NiResponseXmlBasic';
import NiResponseXmlStandard from '../model/NiResponseXmlStandard';

/**
* Default service.
* @module api/DefaultApi
* @version 1.2.1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getNumberInsightAdvanced operation.
     * @callback module:api/DefaultApi~getNumberInsightAdvancedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNumberInsightAdvanced200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Advanced Number Insight (sync)
     * Provides [advanced number insight](/number-insight/overview#basic-standard-and-advanced-apis) information about a number synchronously, in the same way that the basic and standard endpoints do.  Vonage recommends accessing the Advanced API **asynchronously** using the `/advanced/async` endpoint, to avoid timeouts.  Note that this endpoint also supports `POST` requests. 
     * @param {module:model/String} format The format of the response
     * @param {String} number A single phone number that you need insight about in national or international format.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [realTimeData] A boolean to choose whether to get real time data back in the response.
     * @param {String} [country] If a number does not have a country code or is uncertain, set the two-character country code. This code must be in ISO 3166-1 alpha-2 format and in upper case. For example, GB or US. If you set country and number is already in [E.164](https://en.wikipedia.org/wiki/E.164) format, country must match the country code in number.
     * @param {Boolean} [cnam = false)] Indicates if the name of the person who owns the phone number should be looked up and returned in the response. Set to true to receive phone number owner name in the response. This features is available for US numbers only and incurs an additional charge.
     * @param {String} [ip] This parameter is deprecated as we are no longer able to retrieve reliable IP data globally from carriers. 
     * @param {module:api/DefaultApi~getNumberInsightAdvancedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNumberInsightAdvanced200Response}
     */
    getNumberInsightAdvanced(format, number, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling getNumberInsightAdvanced");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling getNumberInsightAdvanced");
      }

      let pathParams = {
        'format': format
      };
      let queryParams = {
        'real_time_data': opts['realTimeData'],
        'number': number,
        'country': opts['country'],
        'cnam': opts['cnam'],
        'ip': opts['ip']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'apiSecret'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/xml'];
      let returnType = GetNumberInsightAdvanced200Response;
      return this.apiClient.callApi(
        '/advanced/{format}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNumberInsightAsync operation.
     * @callback module:api/DefaultApi~getNumberInsightAsyncCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNumberInsightAsync200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Advanced Number Insight (async)
     * Provides [advanced number insight](/number-insight/overview#basic-standard-and-advanced-apis) number information **asynchronously** using the URL specified in the `callback` parameter.  recommends asynchronous use of the Number Insight Advanced API, to avoid timeouts.  Note that this endpoint also supports `POST` requests. 
     * @param {module:model/String} format The format of the response
     * @param {String} callback The callback URL
     * @param {String} number A single phone number that you need insight about in national or international format.
     * @param {Object} opts Optional parameters
     * @param {String} [country] If a number does not have a country code or is uncertain, set the two-character country code. This code must be in ISO 3166-1 alpha-2 format and in upper case. For example, GB or US. If you set country and number is already in [E.164](https://en.wikipedia.org/wiki/E.164) format, country must match the country code in number.
     * @param {Boolean} [cnam = false)] Indicates if the name of the person who owns the phone number should be looked up and returned in the response. Set to true to receive phone number owner name in the response. This features is available for US numbers only and incurs an additional charge.
     * @param {String} [ip] This parameter is deprecated as we are no longer able to retrieve reliable IP data globally from carriers. 
     * @param {module:api/DefaultApi~getNumberInsightAsyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNumberInsightAsync200Response}
     */
    getNumberInsightAsync(format, callback, number, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling getNumberInsightAsync");
      }
      // verify the required parameter 'callback' is set
      if (callback === undefined || callback === null) {
        throw new Error("Missing the required parameter 'callback' when calling getNumberInsightAsync");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling getNumberInsightAsync");
      }

      let pathParams = {
        'format': format
      };
      let queryParams = {
        'callback': callback,
        'number': number,
        'country': opts['country'],
        'cnam': opts['cnam'],
        'ip': opts['ip']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'apiSecret'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/xml'];
      let returnType = GetNumberInsightAsync200Response;
      return this.apiClient.callApi(
        '/advanced/async/{format}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNumberInsightBasic operation.
     * @callback module:api/DefaultApi~getNumberInsightBasicCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NiResponseJsonBasic} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Basic Number Insight
     * Provides [basic number insight](/number-insight/overview#basic-standard-and-advanced-apis) information about a number.  Note that this endpoint also supports `POST` requests. 
     * @param {module:model/String} format The format of the response
     * @param {String} number A single phone number that you need insight about in national or international format.
     * @param {Object} opts Optional parameters
     * @param {String} [country] If a number does not have a country code or is uncertain, set the two-character country code. This code must be in ISO 3166-1 alpha-2 format and in upper case. For example, GB or US. If you set country and number is already in [E.164](https://en.wikipedia.org/wiki/E.164) format, country must match the country code in number.
     * @param {module:api/DefaultApi~getNumberInsightBasicCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NiResponseJsonBasic}
     */
    getNumberInsightBasic(format, number, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling getNumberInsightBasic");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling getNumberInsightBasic");
      }

      let pathParams = {
        'format': format
      };
      let queryParams = {
        'number': number,
        'country': opts['country']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'apiSecret'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/xml'];
      let returnType = NiResponseJsonBasic;
      return this.apiClient.callApi(
        '/basic/{format}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNumberInsightStandard operation.
     * @callback module:api/DefaultApi~getNumberInsightStandardCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNumberInsightStandard200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Standard Number Insight
     * Provides [standard number insight](/number-insight/overview#basic-standard-and-advanced-apis) information about a number.  Note that this endpoint also supports `POST` requests. 
     * @param {module:model/String} format The format of the response
     * @param {String} number A single phone number that you need insight about in national or international format.
     * @param {Object} opts Optional parameters
     * @param {String} [country] If a number does not have a country code or is uncertain, set the two-character country code. This code must be in ISO 3166-1 alpha-2 format and in upper case. For example, GB or US. If you set country and number is already in [E.164](https://en.wikipedia.org/wiki/E.164) format, country must match the country code in number.
     * @param {Boolean} [cnam = false)] Indicates if the name of the person who owns the phone number should be looked up and returned in the response. Set to true to receive phone number owner name in the response. This features is available for US numbers only and incurs an additional charge.
     * @param {module:api/DefaultApi~getNumberInsightStandardCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNumberInsightStandard200Response}
     */
    getNumberInsightStandard(format, number, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling getNumberInsightStandard");
      }
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling getNumberInsightStandard");
      }

      let pathParams = {
        'format': format
      };
      let queryParams = {
        'number': number,
        'country': opts['country'],
        'cnam': opts['cnam']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'apiSecret'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/xml'];
      let returnType = GetNumberInsightStandard200Response;
      return this.apiClient.callApi(
        '/standard/{format}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
