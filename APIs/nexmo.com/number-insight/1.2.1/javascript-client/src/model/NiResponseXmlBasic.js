/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NiResponseXmlBasicError from './NiResponseXmlBasicError';
import NiResponseXmlBasicLocalNumber from './NiResponseXmlBasicLocalNumber';

/**
 * The NiResponseXmlBasic model module.
 * @module model/NiResponseXmlBasic
 * @version 1.2.1
 */
class NiResponseXmlBasic {
    /**
     * Constructs a new <code>NiResponseXmlBasic</code>.
     * Basic
     * @alias module:model/NiResponseXmlBasic
     */
    constructor() { 
        
        NiResponseXmlBasic.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NiResponseXmlBasic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NiResponseXmlBasic} obj Optional instance to populate.
     * @return {module:model/NiResponseXmlBasic} The populated <code>NiResponseXmlBasic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NiResponseXmlBasic();

            if (data.hasOwnProperty('error')) {
                obj['error'] = NiResponseXmlBasicError.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('international_format_number')) {
                obj['international_format_number'] = ApiClient.convertToType(data['international_format_number'], 'String');
            }
            if (data.hasOwnProperty('local_number')) {
                obj['local_number'] = NiResponseXmlBasicLocalNumber.constructFromObject(data['local_number']);
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NiResponseXmlBasic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NiResponseXmlBasic</code>.
     */
    static validateJSON(data) {
        // validate the optional field `error`
        if (data['error']) { // data not null
          NiResponseXmlBasicError.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['international_format_number'] && !(typeof data['international_format_number'] === 'string' || data['international_format_number'] instanceof String)) {
            throw new Error("Expected the field `international_format_number` to be a primitive type in the JSON string but got " + data['international_format_number']);
        }
        // validate the optional field `local_number`
        if (data['local_number']) { // data not null
          NiResponseXmlBasicLocalNumber.validateJSON(data['local_number']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }

        return true;
    }


}



/**
 * @member {module:model/NiResponseXmlBasicError} error
 */
NiResponseXmlBasic.prototype['error'] = undefined;

/**
 * The `number` in your request in international format.
 * @member {String} international_format_number
 */
NiResponseXmlBasic.prototype['international_format_number'] = undefined;

/**
 * @member {module:model/NiResponseXmlBasicLocalNumber} local_number
 */
NiResponseXmlBasic.prototype['local_number'] = undefined;

/**
 * The unique identifier for your request. This is a alphanumeric string up to 40 characters.
 * @member {String} request_id
 */
NiResponseXmlBasic.prototype['request_id'] = undefined;






export default NiResponseXmlBasic;

