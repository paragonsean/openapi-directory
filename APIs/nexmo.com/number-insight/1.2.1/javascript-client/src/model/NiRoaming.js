/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NiRoaming model module.
 * @module model/NiRoaming
 * @version 1.2.1
 */
class NiRoaming {
    /**
     * Constructs a new <code>NiRoaming</code>.
     * Information about the roaming status for &#x60;number&#x60;. This is applicable to mobile numbers only. If unknown, this may return a string of &#x60;unknown&#x60; instead of an object.
     * @alias module:model/NiRoaming
     */
    constructor() { 
        
        NiRoaming.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NiRoaming</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NiRoaming} obj Optional instance to populate.
     * @return {module:model/NiRoaming} The populated <code>NiRoaming</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NiRoaming();

            if (data.hasOwnProperty('roaming_country_code')) {
                obj['roaming_country_code'] = ApiClient.convertToType(data['roaming_country_code'], 'String');
            }
            if (data.hasOwnProperty('roaming_network_code')) {
                obj['roaming_network_code'] = ApiClient.convertToType(data['roaming_network_code'], 'String');
            }
            if (data.hasOwnProperty('roaming_network_name')) {
                obj['roaming_network_name'] = ApiClient.convertToType(data['roaming_network_name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NiRoaming</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NiRoaming</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['roaming_country_code'] && !(typeof data['roaming_country_code'] === 'string' || data['roaming_country_code'] instanceof String)) {
            throw new Error("Expected the field `roaming_country_code` to be a primitive type in the JSON string but got " + data['roaming_country_code']);
        }
        // ensure the json data is a string
        if (data['roaming_network_code'] && !(typeof data['roaming_network_code'] === 'string' || data['roaming_network_code'] instanceof String)) {
            throw new Error("Expected the field `roaming_network_code` to be a primitive type in the JSON string but got " + data['roaming_network_code']);
        }
        // ensure the json data is a string
        if (data['roaming_network_name'] && !(typeof data['roaming_network_name'] === 'string' || data['roaming_network_name'] instanceof String)) {
            throw new Error("Expected the field `roaming_network_name` to be a primitive type in the JSON string but got " + data['roaming_network_name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * If `number` is `roaming`, this is the [code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country `number` is roaming in.
 * @member {String} roaming_country_code
 */
NiRoaming.prototype['roaming_country_code'] = undefined;

/**
 * If `number` is `roaming`, this is the id of the carrier network `number` is roaming in.
 * @member {String} roaming_network_code
 */
NiRoaming.prototype['roaming_network_code'] = undefined;

/**
 * If `number` is `roaming`, this is the name of the carrier network `number` is roaming in.
 * @member {String} roaming_network_name
 */
NiRoaming.prototype['roaming_network_name'] = undefined;

/**
 * Is `number` outside its home carrier network.
 * @member {module:model/NiRoaming.StatusEnum} status
 */
NiRoaming.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
NiRoaming['StatusEnum'] = {

    /**
     * value: "roaming"
     * @const
     */
    "roaming": "roaming",

    /**
     * value: "not_roaming"
     * @const
     */
    "not_roaming": "not_roaming"
};



export default NiRoaming;

