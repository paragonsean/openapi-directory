/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NiCallerIdentity from './NiCallerIdentity';
import NiCurrentCarrierProperties from './NiCurrentCarrierProperties';
import NiInitialCarrierProperties from './NiInitialCarrierProperties';
import NiRealtimeData from './NiRealtimeData';
import NiResponseJsonAdvancedRoamingUnknown from './NiResponseJsonAdvancedRoamingUnknown';
import NiResponseJsonAdvancedSync from './NiResponseJsonAdvancedSync';
import NiStandardAdvancedStatus from './NiStandardAdvancedStatus';

/**
 * The GetNumberInsightAdvanced200Response model module.
 * @module model/GetNumberInsightAdvanced200Response
 * @version 1.2.1
 */
class GetNumberInsightAdvanced200Response {
    /**
     * Constructs a new <code>GetNumberInsightAdvanced200Response</code>.
     * @alias module:model/GetNumberInsightAdvanced200Response
     * @param {(module:model/NiResponseJsonAdvancedRoamingUnknown|module:model/NiResponseJsonAdvancedSync)} instance The actual instance to initialize GetNumberInsightAdvanced200Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "NiResponseJsonAdvancedSync") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                NiResponseJsonAdvancedSync.validateJSON(instance); // throw an exception if no match
                // create NiResponseJsonAdvancedSync from JS object
                this.actualInstance = NiResponseJsonAdvancedSync.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into NiResponseJsonAdvancedSync
            errorMessages.push("Failed to construct NiResponseJsonAdvancedSync: " + err)
        }

        try {
            if (typeof instance === "NiResponseJsonAdvancedRoamingUnknown") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                NiResponseJsonAdvancedRoamingUnknown.validateJSON(instance); // throw an exception if no match
                // create NiResponseJsonAdvancedRoamingUnknown from JS object
                this.actualInstance = NiResponseJsonAdvancedRoamingUnknown.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into NiResponseJsonAdvancedRoamingUnknown
            errorMessages.push("Failed to construct NiResponseJsonAdvancedRoamingUnknown: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GetNumberInsightAdvanced200Response` with oneOf schemas NiResponseJsonAdvancedRoamingUnknown, NiResponseJsonAdvancedSync. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GetNumberInsightAdvanced200Response` with oneOf schemas NiResponseJsonAdvancedRoamingUnknown, NiResponseJsonAdvancedSync. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GetNumberInsightAdvanced200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNumberInsightAdvanced200Response} obj Optional instance to populate.
     * @return {module:model/GetNumberInsightAdvanced200Response} The populated <code>GetNumberInsightAdvanced200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GetNumberInsightAdvanced200Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>NiResponseJsonAdvancedRoamingUnknown</code>, <code>NiResponseJsonAdvancedSync</code>.
     * @return {(module:model/NiResponseJsonAdvancedRoamingUnknown|module:model/NiResponseJsonAdvancedSync)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>NiResponseJsonAdvancedRoamingUnknown</code>, <code>NiResponseJsonAdvancedSync</code>.
     * @param {(module:model/NiResponseJsonAdvancedRoamingUnknown|module:model/NiResponseJsonAdvancedSync)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GetNumberInsightAdvanced200Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GetNumberInsightAdvanced200Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GetNumberInsightAdvanced200Response} An instance of GetNumberInsightAdvanced200Response.
     */
    static fromJSON = function(json_string){
        return GetNumberInsightAdvanced200Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/NiCallerIdentity} caller_identity
 */
GetNumberInsightAdvanced200Response.prototype['caller_identity'] = undefined;

/**
 * Two character country code for `number`. This is in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
 * @member {String} country_code
 */
GetNumberInsightAdvanced200Response.prototype['country_code'] = undefined;

/**
 * Three character country code for `number`. This is in [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.
 * @member {String} country_code_iso3
 */
GetNumberInsightAdvanced200Response.prototype['country_code_iso3'] = undefined;

/**
 * The full name of the country that `number` is registered in.
 * @member {String} country_name
 */
GetNumberInsightAdvanced200Response.prototype['country_name'] = undefined;

/**
 * The numeric prefix for the country that `number` is registered in.
 * @member {String} country_prefix
 */
GetNumberInsightAdvanced200Response.prototype['country_prefix'] = undefined;

/**
 * @member {module:model/NiCurrentCarrierProperties} current_carrier
 */
GetNumberInsightAdvanced200Response.prototype['current_carrier'] = undefined;

/**
 * The `number` in your request in international format.
 * @member {String} international_format_number
 */
GetNumberInsightAdvanced200Response.prototype['international_format_number'] = undefined;

/**
 * Shows if all information about a phone number has been returned. Possible values:  Code | Text --- | --- 0 | Success 1 | Partial success - some fields populated 2 | Failed 
 * @member {module:model/GetNumberInsightAdvanced200Response.LookupOutcomeEnum} lookup_outcome
 */
GetNumberInsightAdvanced200Response.prototype['lookup_outcome'] = undefined;

/**
 * Shows if all information about a phone number has been returned.
 * @member {String} lookup_outcome_message
 */
GetNumberInsightAdvanced200Response.prototype['lookup_outcome_message'] = undefined;

/**
 * The `number` in your request in the format used by the country the number belongs to.
 * @member {String} national_format_number
 */
GetNumberInsightAdvanced200Response.prototype['national_format_number'] = undefined;

/**
 * @member {module:model/NiInitialCarrierProperties} original_carrier
 */
GetNumberInsightAdvanced200Response.prototype['original_carrier'] = undefined;

/**
 * If the user has changed carrier for `number`. The assumed status means that the information supplier has replied to the request but has not said explicitly that the number is ported.
 * @member {module:model/GetNumberInsightAdvanced200Response.PortedEnum} ported
 */
GetNumberInsightAdvanced200Response.prototype['ported'] = undefined;

/**
 * Can you call `number` now. This is applicable to mobile numbers only.
 * @member {module:model/GetNumberInsightAdvanced200Response.ReachableEnum} reachable
 */
GetNumberInsightAdvanced200Response.prototype['reachable'] = undefined;

/**
 * @member {module:model/NiRealtimeData} real_time_data
 */
GetNumberInsightAdvanced200Response.prototype['real_time_data'] = undefined;

/**
 * If there is an internal lookup error, the `refund_price` will reflect the lookup price. If `cnam` is requested for a non-US number the `refund_price` will reflect the `cnam` price. If both of these conditions occur, `refund_price` is the sum of the lookup price and `cnam` price.
 * @member {String} refund_price
 */
GetNumberInsightAdvanced200Response.prototype['refund_price'] = undefined;

/**
 * Your account balance in EUR after this request.
 * @member {String} remaining_balance
 */
GetNumberInsightAdvanced200Response.prototype['remaining_balance'] = undefined;

/**
 * The unique identifier for your request. This is a alphanumeric string up to 40 characters.
 * @member {String} request_id
 */
GetNumberInsightAdvanced200Response.prototype['request_id'] = undefined;

/**
 * The amount in EUR charged to your account.
 * @member {String} request_price
 */
GetNumberInsightAdvanced200Response.prototype['request_price'] = undefined;

/**
 * @member {module:model/GetNumberInsightAdvanced200Response.RoamingEnum} roaming
 */
GetNumberInsightAdvanced200Response.prototype['roaming'] = undefined;

/**
 * @member {module:model/NiStandardAdvancedStatus} status
 */
GetNumberInsightAdvanced200Response.prototype['status'] = undefined;

/**
 * The status description of your request.
 * @member {String} status_message
 */
GetNumberInsightAdvanced200Response.prototype['status_message'] = undefined;

/**
 * Does `number` exist. `unknown` means the number could not be validated. `valid` means the number is valid. `not_valid` means the number is not valid. `inferred_not_valid` means that the number could not be determined as valid or invalid via an external system and the best guess is that the number is invalid. This is applicable to mobile numbers only.
 * @member {module:model/GetNumberInsightAdvanced200Response.ValidNumberEnum} valid_number
 */
GetNumberInsightAdvanced200Response.prototype['valid_number'] = undefined;


GetNumberInsightAdvanced200Response.OneOf = ["NiResponseJsonAdvancedRoamingUnknown", "NiResponseJsonAdvancedSync"];

export default GetNumberInsightAdvanced200Response;

