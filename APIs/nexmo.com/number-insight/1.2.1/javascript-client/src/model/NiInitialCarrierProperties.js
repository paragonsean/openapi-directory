/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NiInitialCarrierProperties model module.
 * @module model/NiInitialCarrierProperties
 * @version 1.2.1
 */
class NiInitialCarrierProperties {
    /**
     * Constructs a new <code>NiInitialCarrierProperties</code>.
     * Information about the network &#x60;number&#x60; was initially connected to.
     * @alias module:model/NiInitialCarrierProperties
     */
    constructor() { 
        
        NiInitialCarrierProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NiInitialCarrierProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NiInitialCarrierProperties} obj Optional instance to populate.
     * @return {module:model/NiInitialCarrierProperties} The populated <code>NiInitialCarrierProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NiInitialCarrierProperties();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('network_code')) {
                obj['network_code'] = ApiClient.convertToType(data['network_code'], 'String');
            }
            if (data.hasOwnProperty('network_type')) {
                obj['network_type'] = ApiClient.convertToType(data['network_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NiInitialCarrierProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NiInitialCarrierProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['network_code'] && !(typeof data['network_code'] === 'string' || data['network_code'] instanceof String)) {
            throw new Error("Expected the field `network_code` to be a primitive type in the JSON string but got " + data['network_code']);
        }
        // ensure the json data is a string
        if (data['network_type'] && !(typeof data['network_type'] === 'string' || data['network_type'] instanceof String)) {
            throw new Error("Expected the field `network_type` to be a primitive type in the JSON string but got " + data['network_type']);
        }

        return true;
    }


}



/**
 * The country that `number` is associated with. This is in ISO 3166-1 alpha-2   format.
 * @member {String} country
 */
NiInitialCarrierProperties.prototype['country'] = undefined;

/**
 * The full name of the carrier that `number` is associated with.
 * @member {String} name
 */
NiInitialCarrierProperties.prototype['name'] = undefined;

/**
 * The [https://en.wikipedia.org/wiki/Mobile_country_code](https://en.wikipedia.org/wiki/Mobile_country_code) for the carrier`number` is associated with. Unreal numbers are marked as`null` and the request is rejected altogether if the number is impossible according to the [E.164](https://en.wikipedia.org/wiki/E.164) guidelines.
 * @member {String} network_code
 */
NiInitialCarrierProperties.prototype['network_code'] = undefined;

/**
 * The type of network that `number` is associated with.
 * @member {module:model/NiInitialCarrierProperties.NetworkTypeEnum} network_type
 */
NiInitialCarrierProperties.prototype['network_type'] = undefined;





/**
 * Allowed values for the <code>network_type</code> property.
 * @enum {String}
 * @readonly
 */
NiInitialCarrierProperties['NetworkTypeEnum'] = {

    /**
     * value: "mobile"
     * @const
     */
    "mobile": "mobile",

    /**
     * value: "landline"
     * @const
     */
    "landline": "landline",

    /**
     * value: "landline_premium"
     * @const
     */
    "landline_premium": "landline_premium",

    /**
     * value: "landline_tollfree"
     * @const
     */
    "landline_tollfree": "landline_tollfree",

    /**
     * value: "virtual"
     * @const
     */
    "virtual": "virtual",

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",

    /**
     * value: "pager"
     * @const
     */
    "pager": "pager",

    /**
     * value: "null"
     * @const
     */
    "null": "null"
};



export default NiInitialCarrierProperties;

