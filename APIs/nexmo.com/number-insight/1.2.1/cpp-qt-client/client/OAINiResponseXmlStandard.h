/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINiResponseXmlStandard.h
 *
 * Standard
 */

#ifndef OAINiResponseXmlStandard_H
#define OAINiResponseXmlStandard_H

#include <QJsonObject>

#include "OAINiCurrentCarrierProperties.h"
#include "OAINiInitialCarrierProperties.h"
#include "OAINiResponseXmlBasic_error.h"
#include "OAINiResponseXmlBasic_local_number.h"
#include "OAINiResponseXmlStandard_caller_identity.h"
#include "OAINiResponseXmlStandard_ported.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINiResponseXmlStandard_caller_identity;
class OAINiCurrentCarrierProperties;
class OAINiResponseXmlBasic_error;
class OAINiResponseXmlBasic_local_number;
class OAINiInitialCarrierProperties;
class OAINiResponseXmlStandard_ported;

class OAINiResponseXmlStandard : public OAIObject {
public:
    OAINiResponseXmlStandard();
    OAINiResponseXmlStandard(QString json);
    ~OAINiResponseXmlStandard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINiResponseXmlStandard_caller_identity getCallerIdentity() const;
    void setCallerIdentity(const OAINiResponseXmlStandard_caller_identity &caller_identity);
    bool is_caller_identity_Set() const;
    bool is_caller_identity_Valid() const;

    OAINiCurrentCarrierProperties getCurrentCarrier() const;
    void setCurrentCarrier(const OAINiCurrentCarrierProperties &current_carrier);
    bool is_current_carrier_Set() const;
    bool is_current_carrier_Valid() const;

    OAINiResponseXmlBasic_error getError() const;
    void setError(const OAINiResponseXmlBasic_error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getInternationalFormatNumber() const;
    void setInternationalFormatNumber(const QString &international_format_number);
    bool is_international_format_number_Set() const;
    bool is_international_format_number_Valid() const;

    OAINiResponseXmlBasic_local_number getLocalNumber() const;
    void setLocalNumber(const OAINiResponseXmlBasic_local_number &local_number);
    bool is_local_number_Set() const;
    bool is_local_number_Valid() const;

    OAINiInitialCarrierProperties getOriginalCarrier() const;
    void setOriginalCarrier(const OAINiInitialCarrierProperties &original_carrier);
    bool is_original_carrier_Set() const;
    bool is_original_carrier_Valid() const;

    OAINiResponseXmlStandard_ported getPorted() const;
    void setPorted(const OAINiResponseXmlStandard_ported &ported);
    bool is_ported_Set() const;
    bool is_ported_Valid() const;

    QString getRemainingBalance() const;
    void setRemainingBalance(const QString &remaining_balance);
    bool is_remaining_balance_Set() const;
    bool is_remaining_balance_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getRequestPrice() const;
    void setRequestPrice(const QString &request_price);
    bool is_request_price_Set() const;
    bool is_request_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINiResponseXmlStandard_caller_identity m_caller_identity;
    bool m_caller_identity_isSet;
    bool m_caller_identity_isValid;

    OAINiCurrentCarrierProperties m_current_carrier;
    bool m_current_carrier_isSet;
    bool m_current_carrier_isValid;

    OAINiResponseXmlBasic_error m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_international_format_number;
    bool m_international_format_number_isSet;
    bool m_international_format_number_isValid;

    OAINiResponseXmlBasic_local_number m_local_number;
    bool m_local_number_isSet;
    bool m_local_number_isValid;

    OAINiInitialCarrierProperties m_original_carrier;
    bool m_original_carrier_isSet;
    bool m_original_carrier_isValid;

    OAINiResponseXmlStandard_ported m_ported;
    bool m_ported_isSet;
    bool m_ported_isValid;

    QString m_remaining_balance;
    bool m_remaining_balance_isSet;
    bool m_remaining_balance_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_request_price;
    bool m_request_price_isSet;
    bool m_request_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINiResponseXmlStandard)

#endif // OAINiResponseXmlStandard_H
