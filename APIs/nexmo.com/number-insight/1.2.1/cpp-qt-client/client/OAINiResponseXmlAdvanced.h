/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINiResponseXmlAdvanced.h
 *
 * Advanced
 */

#ifndef OAINiResponseXmlAdvanced_H
#define OAINiResponseXmlAdvanced_H

#include <QJsonObject>

#include "OAINiCurrentCarrierProperties.h"
#include "OAINiInitialCarrierProperties.h"
#include "OAINiResponseXmlAdvanced_caller_identity.h"
#include "OAINiResponseXmlAdvanced_error.h"
#include "OAINiResponseXmlAdvanced_local_number.h"
#include "OAINiResponseXmlAdvanced_lookup_outcome.h"
#include "OAINiResponseXmlAdvanced_ported.h"
#include "OAINiRoaming.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINiResponseXmlAdvanced_caller_identity;
class OAINiCurrentCarrierProperties;
class OAINiResponseXmlAdvanced_error;
class OAINiResponseXmlAdvanced_local_number;
class OAINiResponseXmlAdvanced_lookup_outcome;
class OAINiInitialCarrierProperties;
class OAINiResponseXmlAdvanced_ported;
class OAINiRoaming;

class OAINiResponseXmlAdvanced : public OAIObject {
public:
    OAINiResponseXmlAdvanced();
    OAINiResponseXmlAdvanced(QString json);
    ~OAINiResponseXmlAdvanced() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINiResponseXmlAdvanced_caller_identity getCallerIdentity() const;
    void setCallerIdentity(const OAINiResponseXmlAdvanced_caller_identity &caller_identity);
    bool is_caller_identity_Set() const;
    bool is_caller_identity_Valid() const;

    QString getCallerName() const;
    void setCallerName(const QString &caller_name);
    bool is_caller_name_Set() const;
    bool is_caller_name_Valid() const;

    QString getCallerType() const;
    void setCallerType(const QString &caller_type);
    bool is_caller_type_Set() const;
    bool is_caller_type_Valid() const;

    OAINiCurrentCarrierProperties getCurrentCarrier() const;
    void setCurrentCarrier(const OAINiCurrentCarrierProperties &current_carrier);
    bool is_current_carrier_Set() const;
    bool is_current_carrier_Valid() const;

    OAINiResponseXmlAdvanced_error getError() const;
    void setError(const OAINiResponseXmlAdvanced_error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getFirsName() const;
    void setFirsName(const QString &firs_name);
    bool is_firs_name_Set() const;
    bool is_firs_name_Valid() const;

    QString getInternationalFormatNumber() const;
    void setInternationalFormatNumber(const QString &international_format_number);
    bool is_international_format_number_Set() const;
    bool is_international_format_number_Valid() const;

    QString getIpWarnings() const;
    void setIpWarnings(const QString &ip_warnings);
    bool is_ip_warnings_Set() const;
    bool is_ip_warnings_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    OAINiResponseXmlAdvanced_local_number getLocalNumber() const;
    void setLocalNumber(const OAINiResponseXmlAdvanced_local_number &local_number);
    bool is_local_number_Set() const;
    bool is_local_number_Valid() const;

    OAINiResponseXmlAdvanced_lookup_outcome getLookupOutcome() const;
    void setLookupOutcome(const OAINiResponseXmlAdvanced_lookup_outcome &lookup_outcome);
    bool is_lookup_outcome_Set() const;
    bool is_lookup_outcome_Valid() const;

    OAINiInitialCarrierProperties getOriginalCarrier() const;
    void setOriginalCarrier(const OAINiInitialCarrierProperties &original_carrier);
    bool is_original_carrier_Set() const;
    bool is_original_carrier_Valid() const;

    OAINiResponseXmlAdvanced_ported getPorted() const;
    void setPorted(const OAINiResponseXmlAdvanced_ported &ported);
    bool is_ported_Set() const;
    bool is_ported_Valid() const;

    QString getReachable() const;
    void setReachable(const QString &reachable);
    bool is_reachable_Set() const;
    bool is_reachable_Valid() const;

    QString getRemainingBalance() const;
    void setRemainingBalance(const QString &remaining_balance);
    bool is_remaining_balance_Set() const;
    bool is_remaining_balance_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getRequestPrice() const;
    void setRequestPrice(const QString &request_price);
    bool is_request_price_Set() const;
    bool is_request_price_Valid() const;

    OAINiRoaming getRoaming() const;
    void setRoaming(const OAINiRoaming &roaming);
    bool is_roaming_Set() const;
    bool is_roaming_Valid() const;

    QString getValidNumber() const;
    void setValidNumber(const QString &valid_number);
    bool is_valid_number_Set() const;
    bool is_valid_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINiResponseXmlAdvanced_caller_identity m_caller_identity;
    bool m_caller_identity_isSet;
    bool m_caller_identity_isValid;

    QString m_caller_name;
    bool m_caller_name_isSet;
    bool m_caller_name_isValid;

    QString m_caller_type;
    bool m_caller_type_isSet;
    bool m_caller_type_isValid;

    OAINiCurrentCarrierProperties m_current_carrier;
    bool m_current_carrier_isSet;
    bool m_current_carrier_isValid;

    OAINiResponseXmlAdvanced_error m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_firs_name;
    bool m_firs_name_isSet;
    bool m_firs_name_isValid;

    QString m_international_format_number;
    bool m_international_format_number_isSet;
    bool m_international_format_number_isValid;

    QString m_ip_warnings;
    bool m_ip_warnings_isSet;
    bool m_ip_warnings_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    OAINiResponseXmlAdvanced_local_number m_local_number;
    bool m_local_number_isSet;
    bool m_local_number_isValid;

    OAINiResponseXmlAdvanced_lookup_outcome m_lookup_outcome;
    bool m_lookup_outcome_isSet;
    bool m_lookup_outcome_isValid;

    OAINiInitialCarrierProperties m_original_carrier;
    bool m_original_carrier_isSet;
    bool m_original_carrier_isValid;

    OAINiResponseXmlAdvanced_ported m_ported;
    bool m_ported_isSet;
    bool m_ported_isValid;

    QString m_reachable;
    bool m_reachable_isSet;
    bool m_reachable_isValid;

    QString m_remaining_balance;
    bool m_remaining_balance_isSet;
    bool m_remaining_balance_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_request_price;
    bool m_request_price_isSet;
    bool m_request_price_isValid;

    OAINiRoaming m_roaming;
    bool m_roaming_isSet;
    bool m_roaming_isValid;

    QString m_valid_number;
    bool m_valid_number_isSet;
    bool m_valid_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINiResponseXmlAdvanced)

#endif // OAINiResponseXmlAdvanced_H
