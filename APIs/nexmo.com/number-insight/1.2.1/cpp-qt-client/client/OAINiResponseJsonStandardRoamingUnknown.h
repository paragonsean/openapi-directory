/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINiResponseJsonStandardRoamingUnknown.h
 *
 * Unknown Roaming
 */

#ifndef OAINiResponseJsonStandardRoamingUnknown_H
#define OAINiResponseJsonStandardRoamingUnknown_H

#include <QJsonObject>

#include "OAINiBasicStatus.h"
#include "OAINiCallerIdentity.h"
#include "OAINiCurrentCarrierProperties.h"
#include "OAINiInitialCarrierProperties.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINiCallerIdentity;
class OAINiCurrentCarrierProperties;
class OAINiInitialCarrierProperties;

class OAINiResponseJsonStandardRoamingUnknown : public OAIObject {
public:
    OAINiResponseJsonStandardRoamingUnknown();
    OAINiResponseJsonStandardRoamingUnknown(QString json);
    ~OAINiResponseJsonStandardRoamingUnknown() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getCountryCodeIso3() const;
    void setCountryCodeIso3(const QString &country_code_iso3);
    bool is_country_code_iso3_Set() const;
    bool is_country_code_iso3_Valid() const;

    QString getCountryName() const;
    void setCountryName(const QString &country_name);
    bool is_country_name_Set() const;
    bool is_country_name_Valid() const;

    QString getCountryPrefix() const;
    void setCountryPrefix(const QString &country_prefix);
    bool is_country_prefix_Set() const;
    bool is_country_prefix_Valid() const;

    QString getInternationalFormatNumber() const;
    void setInternationalFormatNumber(const QString &international_format_number);
    bool is_international_format_number_Set() const;
    bool is_international_format_number_Valid() const;

    QString getNationalFormatNumber() const;
    void setNationalFormatNumber(const QString &national_format_number);
    bool is_national_format_number_Set() const;
    bool is_national_format_number_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    OAINiBasicStatus getStatus() const;
    void setStatus(const OAINiBasicStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    OAINiCallerIdentity getCallerIdentity() const;
    void setCallerIdentity(const OAINiCallerIdentity &caller_identity);
    bool is_caller_identity_Set() const;
    bool is_caller_identity_Valid() const;

    QString getCallerName() const;
    void setCallerName(const QString &caller_name);
    bool is_caller_name_Set() const;
    bool is_caller_name_Valid() const;

    QString getCallerType() const;
    void setCallerType(const QString &caller_type);
    bool is_caller_type_Set() const;
    bool is_caller_type_Valid() const;

    OAINiCurrentCarrierProperties getCurrentCarrier() const;
    void setCurrentCarrier(const OAINiCurrentCarrierProperties &current_carrier);
    bool is_current_carrier_Set() const;
    bool is_current_carrier_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    OAINiInitialCarrierProperties getOriginalCarrier() const;
    void setOriginalCarrier(const OAINiInitialCarrierProperties &original_carrier);
    bool is_original_carrier_Set() const;
    bool is_original_carrier_Valid() const;

    QString getPorted() const;
    void setPorted(const QString &ported);
    bool is_ported_Set() const;
    bool is_ported_Valid() const;

    QString getRefundPrice() const;
    void setRefundPrice(const QString &refund_price);
    bool is_refund_price_Set() const;
    bool is_refund_price_Valid() const;

    QString getRemainingBalance() const;
    void setRemainingBalance(const QString &remaining_balance);
    bool is_remaining_balance_Set() const;
    bool is_remaining_balance_Valid() const;

    QString getRequestPrice() const;
    void setRequestPrice(const QString &request_price);
    bool is_request_price_Set() const;
    bool is_request_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_country_code_iso3;
    bool m_country_code_iso3_isSet;
    bool m_country_code_iso3_isValid;

    QString m_country_name;
    bool m_country_name_isSet;
    bool m_country_name_isValid;

    QString m_country_prefix;
    bool m_country_prefix_isSet;
    bool m_country_prefix_isValid;

    QString m_international_format_number;
    bool m_international_format_number_isSet;
    bool m_international_format_number_isValid;

    QString m_national_format_number;
    bool m_national_format_number_isSet;
    bool m_national_format_number_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    OAINiBasicStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    OAINiCallerIdentity m_caller_identity;
    bool m_caller_identity_isSet;
    bool m_caller_identity_isValid;

    QString m_caller_name;
    bool m_caller_name_isSet;
    bool m_caller_name_isValid;

    QString m_caller_type;
    bool m_caller_type_isSet;
    bool m_caller_type_isValid;

    OAINiCurrentCarrierProperties m_current_carrier;
    bool m_current_carrier_isSet;
    bool m_current_carrier_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    OAINiInitialCarrierProperties m_original_carrier;
    bool m_original_carrier_isSet;
    bool m_original_carrier_isValid;

    QString m_ported;
    bool m_ported_isSet;
    bool m_ported_isValid;

    QString m_refund_price;
    bool m_refund_price_isSet;
    bool m_refund_price_isValid;

    QString m_remaining_balance;
    bool m_remaining_balance_isSet;
    bool m_remaining_balance_isValid;

    QString m_request_price;
    bool m_request_price_isSet;
    bool m_request_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINiResponseJsonStandardRoamingUnknown)

#endif // OAINiResponseJsonStandardRoamingUnknown_H
