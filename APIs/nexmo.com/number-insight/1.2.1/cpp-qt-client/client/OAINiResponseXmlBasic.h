/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINiResponseXmlBasic.h
 *
 * Basic
 */

#ifndef OAINiResponseXmlBasic_H
#define OAINiResponseXmlBasic_H

#include <QJsonObject>

#include "OAINiResponseXmlBasic_error.h"
#include "OAINiResponseXmlBasic_local_number.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINiResponseXmlBasic_error;
class OAINiResponseXmlBasic_local_number;

class OAINiResponseXmlBasic : public OAIObject {
public:
    OAINiResponseXmlBasic();
    OAINiResponseXmlBasic(QString json);
    ~OAINiResponseXmlBasic() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINiResponseXmlBasic_error getError() const;
    void setError(const OAINiResponseXmlBasic_error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getInternationalFormatNumber() const;
    void setInternationalFormatNumber(const QString &international_format_number);
    bool is_international_format_number_Set() const;
    bool is_international_format_number_Valid() const;

    OAINiResponseXmlBasic_local_number getLocalNumber() const;
    void setLocalNumber(const OAINiResponseXmlBasic_local_number &local_number);
    bool is_local_number_Set() const;
    bool is_local_number_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINiResponseXmlBasic_error m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_international_format_number;
    bool m_international_format_number_isSet;
    bool m_international_format_number_isValid;

    OAINiResponseXmlBasic_local_number m_local_number;
    bool m_local_number_isSet;
    bool m_local_number_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINiResponseXmlBasic)

#endif // OAINiResponseXmlBasic_H
