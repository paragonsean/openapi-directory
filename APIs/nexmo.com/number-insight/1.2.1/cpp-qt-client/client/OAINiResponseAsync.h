/**
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINiResponseAsync.h
 *
 * 
 */

#ifndef OAINiResponseAsync_H
#define OAINiResponseAsync_H

#include <QJsonObject>

#include "OAINiStandardAdvancedStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINiResponseAsync : public OAIObject {
public:
    OAINiResponseAsync();
    OAINiResponseAsync(QString json);
    ~OAINiResponseAsync() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getErrorText() const;
    void setErrorText(const QString &error_text);
    bool is_error_text_Set() const;
    bool is_error_text_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getRemainingBalance() const;
    void setRemainingBalance(const QString &remaining_balance);
    bool is_remaining_balance_Set() const;
    bool is_remaining_balance_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getRequestPrice() const;
    void setRequestPrice(const QString &request_price);
    bool is_request_price_Set() const;
    bool is_request_price_Valid() const;

    OAINiStandardAdvancedStatus getStatus() const;
    void setStatus(const OAINiStandardAdvancedStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_error_text;
    bool m_error_text_isSet;
    bool m_error_text_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_remaining_balance;
    bool m_remaining_balance_isSet;
    bool m_remaining_balance_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_request_price;
    bool m_request_price_isSet;
    bool m_request_price_isValid;

    OAINiStandardAdvancedStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINiResponseAsync)

#endif // OAINiResponseAsync_H
