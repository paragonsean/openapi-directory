/*
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.NiCurrentCarrierProperties;
import org.openapitools.client.model.NiInitialCarrierProperties;
import org.openapitools.client.model.NiResponseXmlBasicError;
import org.openapitools.client.model.NiResponseXmlBasicLocalNumber;
import org.openapitools.client.model.NiResponseXmlStandardCallerIdentity;
import org.openapitools.client.model.NiResponseXmlStandardPorted;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NiResponseXmlStandard
 */
public class NiResponseXmlStandardTest {
    private final NiResponseXmlStandard model = new NiResponseXmlStandard();

    /**
     * Model tests for NiResponseXmlStandard
     */
    @Test
    public void testNiResponseXmlStandard() {
        // TODO: test NiResponseXmlStandard
    }

    /**
     * Test the property 'callerIdentity'
     */
    @Test
    public void callerIdentityTest() {
        // TODO: test callerIdentity
    }

    /**
     * Test the property 'currentCarrier'
     */
    @Test
    public void currentCarrierTest() {
        // TODO: test currentCarrier
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

    /**
     * Test the property 'internationalFormatNumber'
     */
    @Test
    public void internationalFormatNumberTest() {
        // TODO: test internationalFormatNumber
    }

    /**
     * Test the property 'localNumber'
     */
    @Test
    public void localNumberTest() {
        // TODO: test localNumber
    }

    /**
     * Test the property 'originalCarrier'
     */
    @Test
    public void originalCarrierTest() {
        // TODO: test originalCarrier
    }

    /**
     * Test the property 'ported'
     */
    @Test
    public void portedTest() {
        // TODO: test ported
    }

    /**
     * Test the property 'remainingBalance'
     */
    @Test
    public void remainingBalanceTest() {
        // TODO: test remainingBalance
    }

    /**
     * Test the property 'requestId'
     */
    @Test
    public void requestIdTest() {
        // TODO: test requestId
    }

    /**
     * Test the property 'requestPrice'
     */
    @Test
    public void requestPriceTest() {
        // TODO: test requestPrice
    }

}
