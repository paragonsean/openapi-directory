/*
 * Number Insight API
 * The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@vonage.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Code | Text -- | -- 0 | Success - request accepted for delivery by . 1 | Busy - you have made more requests in the last second than are permitted by your account. Please retry. 3 | Invalid - your request is incomplete and missing some mandatory parameters. 4 | Invalid credentials - the _api_key_ or _api_secret_ you supplied is either not valid or has been disabled. 5 | Internal Error - the format of the recipient address is not valid. 9 | Partner quota exceeded - your account does not have sufficient credit to process this request. 19 | Facility Not Allowed - your request makes use of a facility that is not enabled on your account. 43, 44, 45 | Live mobile lookup not returned. Not all return parameters are available. 999 | Request unparseable. 
 */
@JsonAdapter(NiStandardAdvancedStatus.Adapter.class)
public enum NiStandardAdvancedStatus {
  
  NUMBER_0(0),
  
  NUMBER_1(1),
  
  NUMBER_3(3),
  
  NUMBER_4(4),
  
  NUMBER_5(5),
  
  NUMBER_9(9),
  
  NUMBER_19(19),
  
  NUMBER_43(43),
  
  NUMBER_44(44),
  
  NUMBER_45(45),
  
  NUMBER_999(999);

  private Integer value;

  NiStandardAdvancedStatus(Integer value) {
    this.value = value;
  }

  public Integer getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static NiStandardAdvancedStatus fromValue(Integer value) {
    for (NiStandardAdvancedStatus b : NiStandardAdvancedStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<NiStandardAdvancedStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final NiStandardAdvancedStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public NiStandardAdvancedStatus read(final JsonReader jsonReader) throws IOException {
      Integer value = jsonReader.nextInt();
      return NiStandardAdvancedStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    Integer value = jsonElement.getAsInt();
    NiStandardAdvancedStatus.fromValue(value);
  }
}

