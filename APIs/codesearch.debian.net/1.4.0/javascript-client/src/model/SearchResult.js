/**
 * Debian Code Search
 * OpenAPI for https://codesearch.debian.net/
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: stapelberg@debian.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SearchResult model module.
 * @module model/SearchResult
 * @version 1.4.0
 */
class SearchResult {
    /**
     * Constructs a new <code>SearchResult</code>.
     * A search result matching the specified query. You can use sources.debian.org to view the file contents. See https://github.com/Debian/dcs/blob/master/cmd/dcs-web/show/show.go for how to construct a sources.debian.org URL from a search result.
     * @alias module:model/SearchResult
     * @param context {String} The full line containing the search result.
     * @param line {Number} Line number containing the search result.
     * @param _package {String} The Debian source package containing this search result, including the full Debian version number.
     * @param path {String} Path to the file containing the this search result, starting with `package`.
     */
    constructor(context, line, _package, path) { 
        
        SearchResult.initialize(this, context, line, _package, path);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, context, line, _package, path) { 
        obj['context'] = context;
        obj['line'] = line;
        obj['package'] = _package;
        obj['path'] = path;
    }

    /**
     * Constructs a <code>SearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchResult} obj Optional instance to populate.
     * @return {module:model/SearchResult} The populated <code>SearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchResult();

            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], 'String');
            }
            if (data.hasOwnProperty('context_after')) {
                obj['context_after'] = ApiClient.convertToType(data['context_after'], ['String']);
            }
            if (data.hasOwnProperty('context_before')) {
                obj['context_before'] = ApiClient.convertToType(data['context_before'], ['String']);
            }
            if (data.hasOwnProperty('line')) {
                obj['line'] = ApiClient.convertToType(data['line'], 'Number');
            }
            if (data.hasOwnProperty('package')) {
                obj['package'] = ApiClient.convertToType(data['package'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['context'] && !(typeof data['context'] === 'string' || data['context'] instanceof String)) {
            throw new Error("Expected the field `context` to be a primitive type in the JSON string but got " + data['context']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['context_after'])) {
            throw new Error("Expected the field `context_after` to be an array in the JSON data but got " + data['context_after']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['context_before'])) {
            throw new Error("Expected the field `context_before` to be an array in the JSON data but got " + data['context_before']);
        }
        // ensure the json data is a string
        if (data['package'] && !(typeof data['package'] === 'string' || data['package'] instanceof String)) {
            throw new Error("Expected the field `package` to be a primitive type in the JSON string but got " + data['package']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}

SearchResult.RequiredProperties = ["context", "line", "package", "path"];

/**
 * The full line containing the search result.
 * @member {String} context
 */
SearchResult.prototype['context'] = undefined;

/**
 * Up to 2 full lines after the search result (see `context`).
 * @member {Array.<String>} context_after
 */
SearchResult.prototype['context_after'] = undefined;

/**
 * Up to 2 full lines before the search result (see `context`).
 * @member {Array.<String>} context_before
 */
SearchResult.prototype['context_before'] = undefined;

/**
 * Line number containing the search result.
 * @member {Number} line
 */
SearchResult.prototype['line'] = undefined;

/**
 * The Debian source package containing this search result, including the full Debian version number.
 * @member {String} package
 */
SearchResult.prototype['package'] = undefined;

/**
 * Path to the file containing the this search result, starting with `package`.
 * @member {String} path
 */
SearchResult.prototype['path'] = undefined;






export default SearchResult;

