/*
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ArticleReviewArticleSizeRatings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Zalando API Article Review Schema
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:04:09.117495-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ArticleReview {
  public static final String SERIALIZED_NAME_ARTICLE_ID = "articleId";
  @SerializedName(SERIALIZED_NAME_ARTICLE_ID)
  private String articleId;

  public static final String SERIALIZED_NAME_ARTICLE_MODEL_ID = "articleModelId";
  @SerializedName(SERIALIZED_NAME_ARTICLE_MODEL_ID)
  private String articleModelId;

  public static final String SERIALIZED_NAME_ARTICLE_SIZE_RATINGS = "articleSizeRatings";
  @SerializedName(SERIALIZED_NAME_ARTICLE_SIZE_RATINGS)
  private ArticleReviewArticleSizeRatings articleSizeRatings;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_CUSTOMER_CITY = "customerCity";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_CITY)
  private String customerCity;

  public static final String SERIALIZED_NAME_CUSTOMER_COUNTRY = "customerCountry";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_COUNTRY)
  private String customerCountry;

  public static final String SERIALIZED_NAME_CUSTOMER_NICKNAME = "customerNickname";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NICKNAME)
  private String customerNickname;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_HELPFUL_COUNT = "helpfulCount";
  @SerializedName(SERIALIZED_NAME_HELPFUL_COUNT)
  private Integer helpfulCount;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private Integer rating;

  public static final String SERIALIZED_NAME_RECOMMEND = "recommend";
  @SerializedName(SERIALIZED_NAME_RECOMMEND)
  private Boolean recommend;

  public static final String SERIALIZED_NAME_REVIEW_ID = "reviewId";
  @SerializedName(SERIALIZED_NAME_REVIEW_ID)
  private String reviewId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_UNHELPFUL_COUNT = "unhelpfulCount";
  @SerializedName(SERIALIZED_NAME_UNHELPFUL_COUNT)
  private Integer unhelpfulCount;

  public ArticleReview() {
  }

  public ArticleReview articleId(String articleId) {
    this.articleId = articleId;
    return this;
  }

  /**
   * Get articleId
   * @return articleId
   */
  @javax.annotation.Nonnull
  public String getArticleId() {
    return articleId;
  }

  public void setArticleId(String articleId) {
    this.articleId = articleId;
  }


  public ArticleReview articleModelId(String articleModelId) {
    this.articleModelId = articleModelId;
    return this;
  }

  /**
   * Get articleModelId
   * @return articleModelId
   */
  @javax.annotation.Nonnull
  public String getArticleModelId() {
    return articleModelId;
  }

  public void setArticleModelId(String articleModelId) {
    this.articleModelId = articleModelId;
  }


  public ArticleReview articleSizeRatings(ArticleReviewArticleSizeRatings articleSizeRatings) {
    this.articleSizeRatings = articleSizeRatings;
    return this;
  }

  /**
   * Get articleSizeRatings
   * @return articleSizeRatings
   */
  @javax.annotation.Nullable
  public ArticleReviewArticleSizeRatings getArticleSizeRatings() {
    return articleSizeRatings;
  }

  public void setArticleSizeRatings(ArticleReviewArticleSizeRatings articleSizeRatings) {
    this.articleSizeRatings = articleSizeRatings;
  }


  public ArticleReview created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * article review created date and time
   * @return created
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public ArticleReview customerCity(String customerCity) {
    this.customerCity = customerCity;
    return this;
  }

  /**
   * customer city in the article review
   * @return customerCity
   */
  @javax.annotation.Nullable
  public String getCustomerCity() {
    return customerCity;
  }

  public void setCustomerCity(String customerCity) {
    this.customerCity = customerCity;
  }


  public ArticleReview customerCountry(String customerCountry) {
    this.customerCountry = customerCountry;
    return this;
  }

  /**
   * customer country in the article review
   * @return customerCountry
   */
  @javax.annotation.Nullable
  public String getCustomerCountry() {
    return customerCountry;
  }

  public void setCustomerCountry(String customerCountry) {
    this.customerCountry = customerCountry;
  }


  public ArticleReview customerNickname(String customerNickname) {
    this.customerNickname = customerNickname;
    return this;
  }

  /**
   * Customer short name in the article review
   * @return customerNickname
   */
  @javax.annotation.Nullable
  public String getCustomerNickname() {
    return customerNickname;
  }

  public void setCustomerNickname(String customerNickname) {
    this.customerNickname = customerNickname;
  }


  public ArticleReview description(String description) {
    this.description = description;
    return this;
  }

  /**
   * description of the article review
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ArticleReview helpfulCount(Integer helpfulCount) {
    this.helpfulCount = helpfulCount;
    return this;
  }

  /**
   * customer review helpful count of the article
   * @return helpfulCount
   */
  @javax.annotation.Nonnull
  public Integer getHelpfulCount() {
    return helpfulCount;
  }

  public void setHelpfulCount(Integer helpfulCount) {
    this.helpfulCount = helpfulCount;
  }


  public ArticleReview language(String language) {
    this.language = language;
    return this;
  }

  /**
   * language in the article review
   * @return language
   */
  @javax.annotation.Nonnull
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public ArticleReview rating(Integer rating) {
    this.rating = rating;
    return this;
  }

  /**
   * customer rating of the article
   * @return rating
   */
  @javax.annotation.Nonnull
  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }


  public ArticleReview recommend(Boolean recommend) {
    this.recommend = recommend;
    return this;
  }

  /**
   * customer recommend to the article
   * @return recommend
   */
  @javax.annotation.Nullable
  public Boolean getRecommend() {
    return recommend;
  }

  public void setRecommend(Boolean recommend) {
    this.recommend = recommend;
  }


  public ArticleReview reviewId(String reviewId) {
    this.reviewId = reviewId;
    return this;
  }

  /**
   * unique article review id
   * @return reviewId
   */
  @javax.annotation.Nonnull
  public String getReviewId() {
    return reviewId;
  }

  public void setReviewId(String reviewId) {
    this.reviewId = reviewId;
  }


  public ArticleReview title(String title) {
    this.title = title;
    return this;
  }

  /**
   * title in the article review
   * @return title
   */
  @javax.annotation.Nonnull
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public ArticleReview unhelpfulCount(Integer unhelpfulCount) {
    this.unhelpfulCount = unhelpfulCount;
    return this;
  }

  /**
   * customer review unhelpful count of the article
   * @return unhelpfulCount
   */
  @javax.annotation.Nonnull
  public Integer getUnhelpfulCount() {
    return unhelpfulCount;
  }

  public void setUnhelpfulCount(Integer unhelpfulCount) {
    this.unhelpfulCount = unhelpfulCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArticleReview articleReview = (ArticleReview) o;
    return Objects.equals(this.articleId, articleReview.articleId) &&
        Objects.equals(this.articleModelId, articleReview.articleModelId) &&
        Objects.equals(this.articleSizeRatings, articleReview.articleSizeRatings) &&
        Objects.equals(this.created, articleReview.created) &&
        Objects.equals(this.customerCity, articleReview.customerCity) &&
        Objects.equals(this.customerCountry, articleReview.customerCountry) &&
        Objects.equals(this.customerNickname, articleReview.customerNickname) &&
        Objects.equals(this.description, articleReview.description) &&
        Objects.equals(this.helpfulCount, articleReview.helpfulCount) &&
        Objects.equals(this.language, articleReview.language) &&
        Objects.equals(this.rating, articleReview.rating) &&
        Objects.equals(this.recommend, articleReview.recommend) &&
        Objects.equals(this.reviewId, articleReview.reviewId) &&
        Objects.equals(this.title, articleReview.title) &&
        Objects.equals(this.unhelpfulCount, articleReview.unhelpfulCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(articleId, articleModelId, articleSizeRatings, created, customerCity, customerCountry, customerNickname, description, helpfulCount, language, rating, recommend, reviewId, title, unhelpfulCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArticleReview {\n");
    sb.append("    articleId: ").append(toIndentedString(articleId)).append("\n");
    sb.append("    articleModelId: ").append(toIndentedString(articleModelId)).append("\n");
    sb.append("    articleSizeRatings: ").append(toIndentedString(articleSizeRatings)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    customerCity: ").append(toIndentedString(customerCity)).append("\n");
    sb.append("    customerCountry: ").append(toIndentedString(customerCountry)).append("\n");
    sb.append("    customerNickname: ").append(toIndentedString(customerNickname)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    helpfulCount: ").append(toIndentedString(helpfulCount)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    recommend: ").append(toIndentedString(recommend)).append("\n");
    sb.append("    reviewId: ").append(toIndentedString(reviewId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    unhelpfulCount: ").append(toIndentedString(unhelpfulCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("articleId");
    openapiFields.add("articleModelId");
    openapiFields.add("articleSizeRatings");
    openapiFields.add("created");
    openapiFields.add("customerCity");
    openapiFields.add("customerCountry");
    openapiFields.add("customerNickname");
    openapiFields.add("description");
    openapiFields.add("helpfulCount");
    openapiFields.add("language");
    openapiFields.add("rating");
    openapiFields.add("recommend");
    openapiFields.add("reviewId");
    openapiFields.add("title");
    openapiFields.add("unhelpfulCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("articleId");
    openapiRequiredFields.add("articleModelId");
    openapiRequiredFields.add("created");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("helpfulCount");
    openapiRequiredFields.add("language");
    openapiRequiredFields.add("rating");
    openapiRequiredFields.add("reviewId");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("unhelpfulCount");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ArticleReview
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ArticleReview.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ArticleReview is not found in the empty JSON string", ArticleReview.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ArticleReview.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ArticleReview` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ArticleReview.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("articleId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `articleId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("articleId").toString()));
      }
      if (!jsonObj.get("articleModelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `articleModelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("articleModelId").toString()));
      }
      // validate the optional field `articleSizeRatings`
      if (jsonObj.get("articleSizeRatings") != null && !jsonObj.get("articleSizeRatings").isJsonNull()) {
        ArticleReviewArticleSizeRatings.validateJsonElement(jsonObj.get("articleSizeRatings"));
      }
      if ((jsonObj.get("customerCity") != null && !jsonObj.get("customerCity").isJsonNull()) && !jsonObj.get("customerCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerCity").toString()));
      }
      if ((jsonObj.get("customerCountry") != null && !jsonObj.get("customerCountry").isJsonNull()) && !jsonObj.get("customerCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerCountry").toString()));
      }
      if ((jsonObj.get("customerNickname") != null && !jsonObj.get("customerNickname").isJsonNull()) && !jsonObj.get("customerNickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerNickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerNickname").toString()));
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if (!jsonObj.get("reviewId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reviewId").toString()));
      }
      if (!jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ArticleReview.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ArticleReview' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ArticleReview> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ArticleReview.class));

       return (TypeAdapter<T>) new TypeAdapter<ArticleReview>() {
           @Override
           public void write(JsonWriter out, ArticleReview value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ArticleReview read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ArticleReview given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ArticleReview
   * @throws IOException if the JSON string is invalid with respect to ArticleReview
   */
  public static ArticleReview fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ArticleReview.class);
  }

  /**
   * Convert an instance of ArticleReview to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

