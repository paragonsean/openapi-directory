openapi: 3.0.1
info:
  description: The shop API empowers developers to build amazing new apps or websites
    using Zalando shop data and services.
  title: Zalando Shop
  version: v1.0
  x-apisguru-categories:
  - ecommerce
  x-logo:
    url: https://twitter.com/Zalando/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://api.zalando.com/schema/swagger.json
    version: "2.0"
  x-providerName: zalando.com
servers:
- url: https://api.zalando.com/
paths:
  /article-reviews:
    get:
      description: Zalando API Article Reviews Schema
      operationId: article_reviews_get
      parameters:
      - description: |
          Article IDs. A list of config SKUs for which the article reviews will be returned.
          Required if articleModelId is empty.
        explode: true
        in: query
        name: articleId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Article model IDs. A list of model SKUs for which the article reviews will be returned.
          Required if articleId is empty.
        explode: true
        in: query
        name: articleModelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: To get reviews with minimum star rating.
        in: query
        name: minStarRating
        schema:
          type: string
      - description: To get reviews with maximum star rating.
        in: query
        name: maxStarRating
        schema:
          type: string
      - description: "articles are sorted on reviews provided by customers (eg: best)"
        in: query
        name: sort
        schema:
          default: newest
          enum:
          - newest
          - best
          - worst
          - most_helpful
          type: string
      - description: to request with required page number or pagination
        in: query
        name: page
        schema:
          type: string
      - description: to request with required page size in a page
        in: query
        name: pageSize
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: Accept-Language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                content:
                - articleId: EW012B00C-C11
                  articleModelId: EW012B00C
                  articleSizeRatings:
                    OVERALL: 3
                    SHOE_WIDTH: 3
                  created: 2015-07-23T17:52:14+02:00
                  customerCity: Brixton
                  customerCountry: GB
                  description: "Very nice trainers, with an extremely prompt arrival... "
                  helpfulCount: 0
                  language: en
                  rating: 5
                  recommend: false
                  reviewId: 4405383-EW012B00C-C11
                  title: Dream turned to reality in the blink of an eye!
                  unhelpfulCount: 0
              schema:
                $ref: '#/components/schemas/Article-Reviews'
          description: Articles Reviews response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
      summary: Get Article Reviews
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /article-reviews-summaries:
    get:
      description: Zalando API Article Reviews Summaries Schema
      operationId: article_reviews_summaries_get
      parameters:
      - description: Article model IDs. A list of model SKUs for which the article
          review summaries will be returned.
        explode: true
        in: query
        name: articleModelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: to request with required page number or pagination
        in: query
        name: page
        schema:
          type: string
      - description: to request with required page size in a page
        in: query
        name: page_size
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                content:
                - articleModelId: K4411C00Y
                  averageStarRating: 4
                  numberOfUserPositiveRecommendations: 0
                  numberOfUserRecommendations: 0
                  numberOfUserReviews: 1
                  starRatingDistribution:
                    "1": 0
                    "2": 0
                    "3": 0
                    "4": 1
                    "5": 0
              schema:
                $ref: '#/components/schemas/Article-Reviews-Summaries'
          description: Articles Reviews Summaries response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
      summary: Get Article Reviews Summaries
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /article-reviews-summaries/{articleModelId}:
    get:
      description: Zalando API ArticleReviewsSummaries Schema
      operationId: article_reviews_summaries_article_model_id_get
      parameters:
      - description: To get unique reviews summary from article model Id.
        in: path
        name: articleModelId
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                articleModelId: K4411C00Y
                averageStarRating: 4
                numberOfUserPositiveRecommendations: 0
                numberOfUserRecommendations: 0
                numberOfUserReviews: 1
                starRatingDistribution:
                  "1": 0
                  "2": 0
                  "3": 0
                  "4": 1
                  "5": 0
              schema:
                $ref: '#/components/schemas/Article-Reviews-Summary'
          description: Articles Reviews Summaries by articleModelId response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Get Article Reviews Summaries by articleModelId
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /article-reviews/{reviewId}:
    get:
      description: Zalando API ArticleReviews Schema
      operationId: article_reviews_review_id_get
      parameters:
      - description: To get unique review by review Id.
        in: path
        name: reviewId
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                articleId: EW012B00C-C11
                articleModelId: EW012B00C
                articleSizeRatings:
                  OVERALL: 3
                  SHOE_WIDTH: 3
                created: 2015-07-23T17:52:14+02:00
                customerCity: Brixton
                customerCountry: GB
                description: "Very nice trainers, with an extremely prompt arrival..."
                helpfulCount: 0
                language: en
                rating: 5
                recommend: false
                reviewId: 4405383-EW012B00C-C11
                title: Dream turned to reality in the blink of an eye!
                unhelpfulCount: 0
              schema:
                $ref: '#/components/schemas/Article-Review'
          description: Articles Reviews by reviewId response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Get Article Reviews by reviewId
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles:
    get:
      description: |-
        Search for articles based on various different possible filter like e.g. the `brandFamily`, the `catagory` or a
        specific `color`. See [Filters](https://todo) for a list of all available filter options.

        The default `pageSize` for responses is set to `20`. You can add a `pageSize` request parameter to adjust that.
        Please keep in mind that the maximum `pageSize` for this resource is `200`.

        The endpoint also supports reducing the fields returned for each article via the `fields` parameter. Please
        refer to [fields parameter](https://todo) for more details.
      operationId: articles_get
      parameters:
      - description: |-
          The `articleIds` to use use for filtering.

          One or more `articleIds` might be used as a filter criteria. Submit multiple `articleId` request parameters for
          more than one to be used. They will be treated as `OR` criteria.
        explode: true
        in: query
        name: articleId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filters by article ModelId
        explode: true
        in: query
        name: articleModelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filters by article's unit id
        explode: true
        in: query
        name: articleUnitId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: period or time the articles are activated for selling in the
          shop
        explode: true
        in: query
        name: activationDate
        schema:
          items:
            enum:
            - thisWeek
            - lastWeek
            - lastMonth
            type: string
          type: array
        style: form
      - description: "filters by age group (eg: kids)"
        explode: true
        in: query
        name: ageGroup
        schema:
          items:
            enum:
            - babies
            - kids
            - teen
            - adult
            type: string
          type: array
        style: form
      - description: "filters by classification of articles (eg: maternity) "
        explode: true
        in: query
        name: assortmentArea
        schema:
          items:
            enum:
            - standard
            - maternity
            - plusSize
            - petite
            type: string
          type: array
        style: form
      - description: "filters by brand key given by user (eg: SA5)"
        explode: true
        in: query
        name: brand
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "filters by brand family key (eg: nike) "
        explode: true
        in: query
        name: brandfamily
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "filters by category (eg: Socks, Rain Coats)"
        explode: true
        in: query
        name: category
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "filters by color (eg: red, blue)"
        explode: true
        in: query
        name: color
        schema:
          items:
            enum:
            - black
            - brown
            - beige
            - gray
            - white
            - blue
            - petrol
            - turquoise
            - green
            - olive
            - yellow
            - orange
            - red
            - pink
            - purple
            - gold
            - silver
            - multicolored
            type: string
          type: array
        style: form
      - description: 'filters by den '
        explode: true
        in: query
        name: den
        schema:
          items:
            enum:
            - den15
            - den20
            - den40
            - den60
            - den80
            - den100
            - den200
            - den120
            - den12
            - den50
            type: string
          type: array
        style: form
      - description: "filters by different kinds of garment filling materials (eg:\
          \ satin, wolle)"
        explode: true
        in: query
        name: filling
        schema:
          items:
            enum:
            - angora
            - baumwolle
            - daunen
            - fell
            - fleece
            - frottee
            - kaschmir
            - lammfell
            - leder
            - lederimitat
            - merinowolle
            - microfaser
            - mohair
            - satin
            - schurwolle
            - seide
            - sonstige
            - textil
            - warm
            - wolle
            type: string
          type: array
        style: form
      - description: "filters by text (eg: search by 'as' gives result with articles\
          \ of brand Sass)"
        in: query
        name: fullText
        schema:
          type: string
      - description: filters by gender
        explode: true
        in: query
        name: gender
        schema:
          items:
            enum:
            - male
            - female
            type: string
          type: array
        style: form
      - description: "filters by heel form (eg: flat)"
        explode: true
        in: query
        name: heelForm
        schema:
          items:
            enum:
            - block
            - flat
            - wedge
            - penny
            - funnel
            - plateau
            - plateauBoots
            - wedgeHidden
            - plateauHidden
            - plateauHeels
            type: string
          type: array
        style: form
      - description: "filters by height of the heel size or length (eg: xs)"
        explode: true
        in: query
        name: heelHeight
        schema:
          items:
            enum:
            - xs
            - s
            - m
            type: string
          type: array
        style: form
      - description: "filters by garments length (eg: 3/4 length, knee-length)"
        in: query
        name: length
        schema:
          type: string
      - description: "filters by type of occasion (eg: party, business)"
        explode: true
        in: query
        name: occasion
        schema:
          items:
            enum:
            - business
            - octoberFest
            - loungeWear
            - evening
            - party
            - leisure
            type: string
          type: array
        style: form
      - description: "filters by pattern on the garments (eg: animal print, plain)"
        explode: true
        in: query
        name: pattern
        schema:
          items:
            enum:
            - animalPrint
            - checkered
            - colored
            - floral
            - polkaDot
            - striped
            - paisley
            - plain
            - print
            - burnout
            - herringBone
            - camouflage
            - flecked
            - pinstripe
            - gradient
            - photoPrint
            type: string
          type: array
        style: form
      - description: "filters all articles in price range (eg: 9-90)"
        in: query
        name: price
        schema:
          type: string
      - description: filters discounted articles marked as sale
        explode: false
        in: query
        name: sale
        schema:
          items:
            enum:
            - sale
            type: string
          type: array
        style: form
      - description: filters by season (Autumn/Winter or Spring/Summer)
        explode: true
        in: query
        name: season
        schema:
          items:
            enum:
            - winter
            - summer
            type: string
          type: array
        style: form
      - description: "filters by shaft height (eg: s, xs)"
        explode: true
        in: query
        name: shaftHeight
        schema:
          items:
            enum:
            - xs
            - s
            - m
            - l
            type: string
          type: array
        style: form
      - description: "filters by shaft width (eg: s, l)"
        explode: true
        in: query
        name: shaftWidth
        schema:
          items:
            enum:
            - s
            - m
            - l
            type: string
          type: array
        style: form
      - description: "filters by shirt collar styles (eg: low V neck, lined collar)"
        explode: true
        in: query
        name: shirtCollar
        schema:
          items:
            enum:
            - lapelCollar
            - mandarinCollar
            - hood
            - poloNeck
            - poloShirt
            - cowlNeck
            - roundNeck
            - scarfCollar
            - boatNeck
            - vNeck
            - buttonDown
            - turnDownCollar
            - highCollar
            - linedCollar
            - shirtCollar
            - cutawayCollar
            - doubleCollar
            - peterPanCollar
            - kentCollar
            - cupShapedCollar
            - contrastCollar
            - maoCollar
            - wingCollar
            - tabCollar
            - volantCollar
            - shawlCollar
            - envelope
            - lowVNeck
            - cacheCeour
            - lowRoundNeck
            - backless
            - henley
            - squareNeck
            - offTheShoulder
            type: string
          type: array
        style: form
      - description: "filters by shoe fastener types (eg: buckle, lacing)"
        explode: true
        in: query
        name: shoeFastener
        schema:
          items:
            enum:
            - buckle
            - belt
            - lacing
            - open
            - zipper
            - velcro
            type: string
          type: array
        style: form
      - description: "filters by shoe toe cap variants (eg: pointed, square)"
        explode: true
        in: query
        name: shoeToecap
        schema:
          items:
            enum:
            - round
            - pointed
            - open
            - square
            type: string
          type: array
        style: form
      - description: filters by classification of articles
        explode: true
        in: query
        name: shopArea
        schema:
          items:
            enum:
            - shop
            - sale
            type: string
          type: array
        style: form
      - description: filters by size
        in: query
        name: size
        schema:
          type: string
      - description: "filters by different sport activities (eg: football)"
        explode: true
        in: query
        name: sports
        schema:
          items:
            enum:
            - outdoor
            - skiSnow
            - running
            - training
            - football
            - handball
            - basketball
            - volleyball
            - golf
            - tennis
            - beach
            - skate
            - riding
            - cycling
            - sailing
            - badminton
            - dancing
            - snowboard
            - swimming
            type: string
          type: array
        style: form
      - description: filters by technology used to produce the articles
        explode: true
        in: query
        name: technology
        schema:
          items:
            enum:
            - clima365
            - climacool
            - climalite
            - climaproof
            - climawarm
            - driFit
            - flywire
            - formotion
            - omniHeat
            - polartec
            - primaloft
            - staywarm
            - techfit
            - thinsulate
            - venturi
            - h2no
            - dermizax
            - performanceShell
            - softShell
            - windstopper
            - proShell
            - hydratic
            - pacliteShell
            - activeShell
            - goreTex
            - hyvent
            - texapore
            - precip
            type: string
          type: array
        style: form
      - description: filters by trouser rise
        explode: true
        in: query
        name: trouserRise
        schema:
          items:
            enum:
            - high
            - medium
            - low
            type: string
          type: array
        style: form
      - description: "filters by different type of upper material used on garments\
          \ (eg: lace)"
        explode: true
        in: query
        name: upperMaterial
        schema:
          items:
            enum:
            - batiste
            - caoutchouc
            - cashmere
            - damask
            - down
            - feathers
            - felt
            - flanelette
            - flannel
            - fleece
            - imitationLeather
            - jacquard
            - jersey
            - leather
            - linen
            - linon
            - mesh
            - microfiber
            - mohair
            - other
            - percale
            - polyester
            - renforce
            - satin
            - seersucker
            - silk
            - synthetic
            - textile
            - towelling
            - varnish
            - velours
            - viscose
            - wool
            - cord
            - denim
            - rib
            - braided
            - crocheted
            - hardshell
            - softshell
            - lace
            - sweat
            type: string
          type: array
        style: form
      - description: filters by volume
        explode: true
        in: query
        name: volume
        schema:
          items:
            enum:
            - smallest
            - small
            - medium
            - large
            - largest
            type: string
          type: array
        style: form
      - description: to request with required page number or pagination
        in: query
        name: page
        schema:
          type: string
      - description: to request with required page size in a page
        in: query
        name: page_size
        schema:
          type: string
      - description: "sorting order (eg: popularity)"
        in: query
        name: sort
        schema:
          enum:
          - popularity
          - activationdate
          - pricedesc
          - priceasc
          - sale
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                content:
                - activationDate: 2015-01-12T17:12:15+01:00
                  additionalInfos: []
                  ageGroups:
                  - BABY
                  attributes:
                  - name: Total length
                    values:
                    - 10.0 " (Size 50)
                  - name: Fabric
                    values:
                    - Jersey
                  - name: Length
                    values:
                    - Standard
                  - name: Pattern
                    values:
                    - Print
                  - name: Fit
                    values:
                    - normal
                  - name: Occasion
                    values:
                    - Leisure
                  - name: Neckline
                    values:
                    - Envelope
                  - name: sleeve length
                    values:
                    - 8.0 " (Size 50)
                  - name: outer fabric material
                    values:
                    - 100% cotton
                  - name: Sleeve length
                    values:
                    - Long sleeve
                  available: false
                  brand:
                    key: BE8
                    logoLargeUrl: https://i2.ztat.net/brandxl/belly-button-1.jpg
                    logoUrl: https://i2.ztat.net/brand/belly-button-1.jpg
                    name: bellybutton
                    shopUrl: https://www.zalando.co.uk/belly-button
                  categoryKeys:
                  - catalog
                  - kids
                  - childrens-clothing
                  - kids-clothing-shirts-tops
                  - kids-clothing-long-sleeve-tops
                  - all
                  - clothing
                  color: Grey
                  genders:
                  - MALE
                  id: BE824G002-C11
                  media:
                    images:
                    - largeHdUrl: https://i2.ztat.net/large_hd/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                      largeUrl: https://i2.ztat.net/large/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                      mediumHdUrl: https://i2.ztat.net/detail_hd/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                      mediumUrl: https://i2.ztat.net/detail/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                      orderNumber: 1
                      smallHdUrl: https://i2.ztat.net/catalog_hd/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                      smallUrl: https://i2.ztat.net/catalog/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                      thumbnailHdUrl: https://i2.ztat.net/thumb_hd/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                      type: NON_MODEL
                    - largeHdUrl: https://i1.ztat.net/large_hd/BE/82/4G/00/2C/11/BE824G002-C11@7.jpg
                      largeUrl: https://i1.ztat.net/large/BE/82/4G/00/2C/11/BE824G002-C11@7.jpg
                      mediumHdUrl: https://i1.ztat.net/detail_hd/BE/82/4G/00/2C/11/BE824G002-C11@7.jpg
                      mediumUrl: https://i1.ztat.net/detail/BE/82/4G/00/2C/11/BE824G002-C11@7.jpg
                      orderNumber: 2
                      smallHdUrl: https://i1.ztat.net/catalog_hd/BE/82/4G/00/2C/11/BE824G002-C11@7.jpg
                      smallUrl: https://i1.ztat.net/catalog/BE/82/4G/00/2C/11/BE824G002-C11@7.jpg
                      thumbnailHdUrl: https://i1.ztat.net/thumb_hd/BE/82/4G/00/2C/11/BE824G002-C11@7.jpg
                      type: NON_MODEL
                    - largeHdUrl: https://i2.ztat.net/large_hd/BE/82/4G/00/2C/11/BE824G002-C11@6.jpg
                      largeUrl: https://i2.ztat.net/large/BE/82/4G/00/2C/11/BE824G002-C11@6.jpg
                      mediumHdUrl: https://i2.ztat.net/detail_hd/BE/82/4G/00/2C/11/BE824G002-C11@6.jpg
                      mediumUrl: https://i2.ztat.net/detail/BE/82/4G/00/2C/11/BE824G002-C11@6.jpg
                      orderNumber: 3
                      smallHdUrl: https://i2.ztat.net/catalog_hd/BE/82/4G/00/2C/11/BE824G002-C11@6.jpg
                      smallUrl: https://i2.ztat.net/catalog/BE/82/4G/00/2C/11/BE824G002-C11@6.jpg
                      thumbnailHdUrl: https://i2.ztat.net/thumb_hd/BE/82/4G/00/2C/11/BE824G002-C11@6.jpg
                      type: NON_MODEL
                    - largeHdUrl: https://i3.ztat.net/large_hd/BE/82/4G/00/2C/11/BE824G002-C11@5.jpg
                      largeUrl: https://i3.ztat.net/large/BE/82/4G/00/2C/11/BE824G002-C11@5.jpg
                      mediumHdUrl: https://i3.ztat.net/detail_hd/BE/82/4G/00/2C/11/BE824G002-C11@5.jpg
                      mediumUrl: https://i3.ztat.net/detail/BE/82/4G/00/2C/11/BE824G002-C11@5.jpg
                      orderNumber: 4
                      smallHdUrl: https://i3.ztat.net/catalog_hd/BE/82/4G/00/2C/11/BE824G002-C11@5.jpg
                      smallUrl: https://i3.ztat.net/catalog/BE/82/4G/00/2C/11/BE824G002-C11@5.jpg
                      thumbnailHdUrl: https://i3.ztat.net/thumb_hd/BE/82/4G/00/2C/11/BE824G002-C11@5.jpg
                      type: NON_MODEL
                  modelId: BE824G002
                  name: Long sleeved top - stormy weather
                  season: SUMMER
                  seasonYear: "2015"
                  shopUrl: https://www.zalando.co.uk/bellybutton-long-sleeved-top-grey-be824g002-c11.html
                  units:
                  - available: false
                    id: BE824G002-C110068000
                    originalPrice:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    price:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    size: 4-6m
                    stock: 0
                  - available: false
                    id: BE824G002-C110062000
                    originalPrice:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    price:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    size: 2-4m
                    stock: 0
                  - available: false
                    id: BE824G002-C110074000
                    originalPrice:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    price:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    size: 6-9m
                    stock: 0
                  - available: false
                    id: BE824G002-C110050000
                    originalPrice:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    price:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    size: 1m
                    stock: 0
                  - available: false
                    id: BE824G002-C110056000
                    originalPrice:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    price:
                      currency: GBP
                      formatted: £11.00
                      value: 11
                    size: 2m
                    stock: 0
              schema:
                $ref: '#/components/schemas/Articles'
          description: Articles response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Search for Articles
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{articleId}:
    get:
      description: Zalando API Article Schema
      operationId: articles_article_id_get
      parameters:
      - description: To get unique article for article Id.
        in: path
        name: articleId
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                activationDate: 2015-04-30T16:52:52+02:00
                additionalInfos: []
                ageGroups:
                - ADULT
                attributes:
                - name: Neckline
                  values:
                  - Crew neck
                - name: Fit
                  values:
                  - Waisted
                available: true
                brand:
                  key: AN6
                  logoUrl: https://i6.ztat.net/brand/anna-field.jpg
                  name: Anna Field
                  shopUrl: https://www.zalando.co.uk/anna-field
                categoryKeys:
                - catalog
                - women
                - womens-clothing
                - womens-clothing-dresses
                - summer-dresses
                - all
                - clothing
                color: Blue
                genders:
                - FEMALE
                id: AN621C0S5-K11
                media:
                  images:
                  - largeHdUrl: https://i2.ztat.net/large_hd/AN/62/1C/0S/5K/11/AN621C0S5-K11@16.jpg
                    largeUrl: https://i2.ztat.net/large/AN/62/1C/0S/5K/11/AN621C0S5-K11@16.jpg
                    mediumHdUrl: https://i2.ztat.net/detail_hd/AN/62/1C/0S/5K/11/AN621C0S5-K11@16.jpg
                    mediumUrl: https://i2.ztat.net/detail/AN/62/1C/0S/5K/11/AN621C0S5-K11@16.jpg
                    orderNumber: 1
                    smallHdUrl: https://i2.ztat.net/catalog_hd/AN/62/1C/0S/5K/11/AN621C0S5-K11@16.jpg
                    smallUrl: https://i2.ztat.net/catalog/AN/62/1C/0S/5K/11/AN621C0S5-K11@16.jpg
                    thumbnailHdUrl: https://i2.ztat.net/thumb_hd/AN/62/1C/0S/5K/11/AN621C0S5-K11@16.jpg
                    type: NON_MODEL
                  - largeHdUrl: https://i3.ztat.net/large_hd/AN/62/1C/0S/5K/11/AN621C0S5-K11@15.jpg
                    largeUrl: https://i3.ztat.net/large/AN/62/1C/0S/5K/11/AN621C0S5-K11@15.jpg
                    mediumHdUrl: https://i3.ztat.net/detail_hd/AN/62/1C/0S/5K/11/AN621C0S5-K11@15.jpg
                    mediumUrl: https://i3.ztat.net/detail/AN/62/1C/0S/5K/11/AN621C0S5-K11@15.jpg
                    orderNumber: 2
                    smallHdUrl: https://i3.ztat.net/catalog_hd/AN/62/1C/0S/5K/11/AN621C0S5-K11@15.jpg
                    smallUrl: https://i3.ztat.net/catalog/AN/62/1C/0S/5K/11/AN621C0S5-K11@15.jpg
                    thumbnailHdUrl: https://i3.ztat.net/thumb_hd/AN/62/1C/0S/5K/11/AN621C0S5-K11@15.jpg
                    type: STYLE
                modelId: AN621C0S5
                name: Summer dress - blue/white
                season: SUMMER
                seasonYear: "2015"
                shopUrl: https://www.zalando.co.uk/anna-field-summer-dress-blue-white-an621c0s5-k11.html
                units:
                - available: true
                  id: AN621C0S5-K110420000
                  originalPrice:
                    currency: GBP
                    formatted: £21.00
                    value: 21
                  price:
                    currency: GBP
                    formatted: £21.00
                    value: 21
                  size: "16"
                  stock: 3
              schema:
                $ref: '#/components/schemas/Article'
          description: Article response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Get Article by articleId
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{articleId}/media:
    get:
      description: Zalando API Article Schema
      operationId: articles_article_id_media_get
      parameters:
      - description: To get unique article for article Id media.
        in: path
        name: articleId
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                images:
                - largeHdUrl: https://i2.ztat.net/large_hd/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                  largeUrl: https://i2.ztat.net/large/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                  mediumHdUrl: https://i2.ztat.net/detail_hd/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                  mediumUrl: https://i2.ztat.net/detail/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                  orderNumber: 1
                  smallHdUrl: https://i2.ztat.net/catalog_hd/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                  smallUrl: https://i2.ztat.net/catalog/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                  thumbnailHdUrl: https://i2.ztat.net/thumb_hd/BE/82/4G/00/2C/11/BE824G002-C11@8.jpg
                  type: NON_MODEL
              schema:
                $ref: '#/components/schemas/Article-Media'
          description: Article response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Get Article media by articleId
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{articleId}/reviews:
    get:
      description: Zalando API Article Schema
      operationId: articles_article_id_reviews_get
      parameters:
      - description: To get unique article for article Id reviews.
        in: path
        name: articleId
        required: true
        schema:
          type: string
      - description: To get reviews with minimum star rating.
        in: query
        name: min_star_rating
        schema:
          type: string
      - description: To get reviews with maximum star rating.
        in: query
        name: max_star_rating
        schema:
          type: string
      - description: "articles are sorted on reviews provided by customers (eg: best)"
        in: query
        name: sort
        schema:
          default: newest
          enum:
          - newest
          - best
          - worst
          - most_helpful
          type: string
      - description: to request with required page number or pagination
        in: query
        name: page
        schema:
          type: string
      - description: to request with required page size in a page
        in: query
        name: page_size
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                content:
                - articleId: EW012B00C-C11
                  articleModelId: EW012B00C
                  articleSizeRatings:
                    OVERALL: 3
                    SHOE_WIDTH: 3
                  created: 2015-07-23T17:52:14+02:00
                  customerCity: Brixton
                  customerCountry: GB
                  description: "Very nice trainers, with an extremely prompt arrival..."
                  helpfulCount: 0
                  language: en
                  rating: 5
                  recommend: false
                  reviewId: 4405383-EW012B00C-C11
                  title: Dream turned to reality in the blink of an eye!
                  unhelpfulCount: 0
                page: 1
                size: 1
                totalElements: 1
                totalPages: 1
              schema:
                $ref: '#/components/schemas/Article-Reviews'
          description: Article response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Get Article reviews by articleId
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{articleId}/reviews-summary:
    get:
      description: Zalando API Article Schema
      operationId: articles_article_id_reviews_summary_get
      parameters:
      - description: To get unique article for article Id reviews summary.
        in: path
        name: articleId
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                articleModelId: EW012B00C
                articleSizeRatings:
                  OVERALL: 3
                  SHOE_WIDTH: 3
                averageStarRating: 5
                numberOfUserPositiveRecommendations: 0
                numberOfUserRecommendations: 1
                numberOfUserReviews: 1
                starRatingDistribution:
                  "1": 0
                  "2": 0
                  "3": 0
                  "4": 0
                  "5": 1
              schema:
                $ref: '#/components/schemas/Article-Reviews-Summary'
          description: Article response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Get Article reviews summary by articleId
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{articleId}/units:
    get:
      description: Zalando API Article Schema
      operationId: articles_article_id_units_get
      parameters:
      - description: To get unique article for article Id units.
        in: path
        name: articleId
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - available: false
                id: TC021A00J-A110040000
                originalPrice:
                  currency: GBP
                  formatted: £130.00
                  value: 130
                price:
                  currency: GBP
                  formatted: £65.00
                  value: 65
                size: "14"
                stock: 0
              schema:
                $ref: '#/components/schemas/Article-Units'
          description: Article response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Get Article units by articleId
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /articles/{articleId}/units/{unitId}:
    get:
      description: Zalando API Article Schema
      operationId: articles_article_id_units_unit_id_get
      parameters:
      - description: To get unique article for article Id.
        in: path
        name: articleId
        required: true
        schema:
          type: string
      - description: To get unique article for article Id unit.
        in: path
        name: unitId
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                available: false
                id: TC021A00J-A110040000
                originalPrice:
                  currency: GBP
                  formatted: £130.00
                  value: 130
                price:
                  currency: GBP
                  formatted: £65.00
                  value: 65
                size: "14"
                stock: 0
              schema:
                $ref: '#/components/schemas/Article-Unit'
          description: Article response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Get Article units by articleId snd unitId
      tags:
      - articles
      x-openapi-router-controller: openapi_server.controllers.articles_controller
  /brands:
    get:
      description: Zalando API Brands Schema
      operationId: brands_get
      parameters:
      - description: Request Brand by key
        explode: true
        in: query
        name: key
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Request Brand by name
        explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Request Brand by brandFamilyName
        explode: true
        in: query
        name: brandFamilyName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Request Brand by brandFamilyKey
        explode: true
        in: query
        name: brandFamilyKey
        schema:
          items:
            type: string
          type: array
        style: form
      - description: to request with required page number or pagination
        in: query
        name: page
        schema:
          type: string
      - description: to request with required page size in a page
        in: query
        name: page_size
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                content:
                - key: NV3
                  name: Nike Vision
                  shopUrl: https://www.zalando.co.uk/nike-vision
                - brandFamily:
                    key: NIKE
                    name: Nike
                    shopUrl: https://www.zalando.co.uk/nike
                  key: N12
                  logoLargeUrl: https://i1.ztat.net/brandxl/nike-performance.jpg
                  logoUrl: https://i1.ztat.net/brand/nike-performance.jpg
                  name: Nike Performance
                  shopUrl: https://www.zalando.co.uk/nike-performance
                page: 1
                size: 2
                totalElements: 6
                totalPages: 3
              schema:
                $ref: '#/components/schemas/Brands'
          description: Brands response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not found.
      summary: Shop Brands
      tags:
      - brands
      x-openapi-router-controller: openapi_server.controllers.brands_controller
  /brands/{key}:
    get:
      description: Zalando API Brand Schema
      operationId: brands_key_get
      parameters:
      - description: To get unique Brand by key.
        in: path
        name: key
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                brandFamily:
                  key: NIKE
                  name: Nike
                  shopUrl: https://www.zalando.co.uk/nike
                key: N12
                logoLargeUrl: https://i1.ztat.net/brandxl/nike-performance.jpg
                logoUrl: https://i1.ztat.net/brand/nike-performance.jpg
                name: Nike Performance
                shopUrl: https://www.zalando.co.uk/nike-performance
              schema:
                $ref: '#/components/schemas/Brand'
          description: Brand Key response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Brand not found.
      summary: Get Single Brand by Key
      tags:
      - brands
      x-openapi-router-controller: openapi_server.controllers.brands_controller
  /categories:
    get:
      description: Zalando API Categories Schema
      operationId: categories_get
      parameters:
      - description: Request Categories by names
        explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Request Categories by type
        in: query
        name: type
        schema:
          type: string
      - description: Request Categories by outlet
        in: query
        name: outlet
        schema:
          type: string
      - description: Request Categories by hidden
        in: query
        name: hidden
        schema:
          type: string
      - description: Request Categories by target group
        in: query
        name: targetGroup
        schema:
          type: string
      - description: Request Categories by keys
        explode: true
        in: query
        name: key
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Request Categories by parent keys
        explode: true
        in: query
        name: parentKey
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Request Categories by child keys
        explode: true
        in: query
        name: childKey
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Request Categories by suggested filters
        explode: true
        in: query
        name: suggestedFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: to request with required page number or pagination
        in: query
        name: page
        schema:
          type: string
      - description: to request with required page size in a page
        in: query
        name: page_size
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                content:
                - childKeys:
                  - all
                  - women
                  - men
                  - kids
                  - home
                  hidden: false
                  key: catalog
                  name: Catalog
                  outlet: false
                  suggestedFilters:
                  - category
                  - brand
                  - color
                  - price
                  - activationDate
                  targetGroup: ALL
                  type: default
                - childKeys:
                  - womens-shoes
                  - womens-clothing
                  - sports-womens
                  - premium-womens
                  hidden: false
                  key: women
                  name: Women
                  outlet: false
                  parentKey: catalog
                  suggestedFilters:
                  - brandfamily
                  - sale
                  - upperMaterial
                  - season
                  targetGroup: WOMEN
                  type: default
                page: 1
                size: 2
                totalElements: 2263
                totalPages: 1132
              schema:
                $ref: '#/components/schemas/Categories'
          description: Categories response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Categories Not found.
      summary: Shop Categories
      tags:
      - categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /categories/{key}:
    get:
      description: Zalando API Category Schema
      operationId: categories_key_get
      parameters:
      - description: To get unique Category by key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          items:
            type: string
          type: array
        style: simple
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                content:
                - childKeys:
                  - womens-shoes
                  - womens-clothing
                  - sports-womens
                  - premium-womens
                  hidden: false
                  key: women
                  name: Women
                  outlet: false
                  parentKey: catalog
                  targetGroup: WOMEN
                  type: default
              schema:
                $ref: '#/components/schemas/Category'
          description: Category Key response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category not found.
      summary: Get Single Category by Key
      tags:
      - categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /domains:
    get:
      description: Zalando API Domains Schema
      operationId: domains_get
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Zalando API Domains Schema
                items:
                  $ref: '#/components/schemas/Domain'
                type: array
          description: Domains response.
      summary: Shop Domains
      tags:
      - domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
  /facets:
    get:
      description: Zalando API Facets Schema
      operationId: facets_get
      parameters:
      - description: "filters by age group (eg: kids)"
        explode: true
        in: query
        name: age_group
        schema:
          items:
            enum:
            - babies
            - kids
            - teen
            - adult
            type: string
          type: array
        style: form
      - description: |-
          The `articleIds` to use use for filtering.

          One or more `articleIds` might be used as a filter criteria. Submit multiple `articleId` request parameters for
          more than one to be used. They will be treated as `OR` criteria.
        explode: true
        in: query
        name: article_id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: period or time the articles are activated for selling in the
          shop
        explode: true
        in: query
        name: activation_date
        schema:
          items:
            enum:
            - thisWeek
            - lastWeek
            - lastMonth
            type: string
          type: array
        style: form
      - description: filters by article ModelId
        explode: true
        in: query
        name: article_model_id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "filters by classification of articles (eg: maternity) "
        explode: true
        in: query
        name: assortment_area
        schema:
          items:
            enum:
            - standard
            - maternity
            - plusSize
            - petite
            type: string
          type: array
        style: form
      - description: "filters by brand key given by user (eg: SA5)"
        explode: true
        in: query
        name: brand
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "filters by brand family key (eg: nike) "
        explode: true
        in: query
        name: brandfamily
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "filters by category (eg: Socks, Rain Coats)"
        explode: true
        in: query
        name: category
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "filters by color (eg: red, blue)"
        explode: true
        in: query
        name: color
        schema:
          items:
            enum:
            - black
            - brown
            - beige
            - gray
            - white
            - blue
            - petrol
            - turquoise
            - green
            - olive
            - yellow
            - orange
            - red
            - pink
            - purple
            - gold
            - silver
            - multicolored
            type: string
          type: array
        style: form
      - description: 'filters by den '
        explode: true
        in: query
        name: den
        schema:
          items:
            enum:
            - den15
            - den20
            - den40
            - den60
            - den80
            - den100
            - den200
            - den120
            - den12
            - den50
            type: string
          type: array
        style: form
      - description: "filters by different kinds of garment filling materials (eg:\
          \ satin, wolle)"
        explode: true
        in: query
        name: filling
        schema:
          items:
            enum:
            - angora
            - baumwolle
            - daunen
            - fell
            - fleece
            - frottee
            - kaschmir
            - lammfell
            - leder
            - lederimitat
            - merinowolle
            - microfaser
            - mohair
            - satin
            - schurwolle
            - seide
            - sonstige
            - textil
            - warm
            - wolle
            type: string
          type: array
        style: form
      - description: filters by gender
        explode: true
        in: query
        name: gender
        schema:
          items:
            enum:
            - male
            - female
            type: string
          type: array
        style: form
      - description: "filters by heel form (eg: flat)"
        explode: true
        in: query
        name: heel_form
        schema:
          items:
            enum:
            - block
            - flat
            - wedge
            - penny
            - funnel
            - plateau
            - plateauBoots
            - wedgeHidden
            - plateauHidden
            - plateauHeels
            type: string
          type: array
        style: form
      - description: "filters by height of the heel size or length (eg: xs)"
        explode: true
        in: query
        name: heel_height
        schema:
          items:
            enum:
            - xs
            - s
            - m
            type: string
          type: array
        style: form
      - description: "filters by garments length (eg: 3/4 length, knee-length)"
        in: query
        name: length
        schema:
          type: string
      - description: "filters by type of occasion (eg: party, business)"
        explode: true
        in: query
        name: occasion
        schema:
          items:
            enum:
            - business
            - octoberFest
            - loungeWear
            - evening
            - party
            - leisure
            type: string
          type: array
        style: form
      - description: "filters by pattern on the garments (eg: animal print, plain)"
        explode: true
        in: query
        name: pattern
        schema:
          items:
            enum:
            - animalPrint
            - checkered
            - colored
            - floral
            - polkaDot
            - striped
            - paisley
            - plain
            - print
            - burnout
            - herringBone
            - camouflage
            - flecked
            - pinstripe
            - gradient
            - photoPrint
            type: string
          type: array
        style: form
      - description: "filters all articles in price range (eg: 9-90)"
        in: query
        name: price
        schema:
          type: string
      - description: filters discounted articles marked as sale
        explode: false
        in: query
        name: sale
        schema:
          items:
            enum:
            - sale
            type: string
          type: array
        style: form
      - description: filters by season (Autumn/Winter or Spring/Summer)
        explode: true
        in: query
        name: season
        schema:
          items:
            enum:
            - winter
            - summer
            type: string
          type: array
        style: form
      - description: "filters by shaft height (eg: s, xs)"
        explode: true
        in: query
        name: shaft_height
        schema:
          items:
            enum:
            - xs
            - s
            - m
            - l
            type: string
          type: array
        style: form
      - description: "filters by shaft width (eg: s, l)"
        explode: true
        in: query
        name: shaft_width
        schema:
          items:
            enum:
            - s
            - m
            - l
            type: string
          type: array
        style: form
      - description: "filters by shirt collar styles (eg: low V neck, lined collar)"
        explode: true
        in: query
        name: shirt_collar
        schema:
          items:
            enum:
            - lapelCollar
            - mandarinCollar
            - hood
            - poloNeck
            - poloShirt
            - cowlNeck
            - roundNeck
            - scarfCollar
            - boatNeck
            - vNeck
            - buttonDown
            - turnDownCollar
            - highCollar
            - linedCollar
            - shirtCollar
            - cutawayCollar
            - doubleCollar
            - peterPanCollar
            - kentCollar
            - cupShapedCollar
            - contrastCollar
            - maoCollar
            - wingCollar
            - tabCollar
            - volantCollar
            - shawlCollar
            - envelope
            - lowVNeck
            - cacheCeour
            - lowRoundNeck
            - backless
            - henley
            - squareNeck
            - offTheShoulder
            type: string
          type: array
        style: form
      - description: "filters by shoe fastener types (eg: buckle, lacing)"
        explode: true
        in: query
        name: shoe_fastener
        schema:
          items:
            enum:
            - buckle
            - belt
            - lacing
            - open
            - zipper
            - velcro
            type: string
          type: array
        style: form
      - description: "filters by shoe toe cap variants (eg: pointed, square)"
        explode: true
        in: query
        name: shoe_toecap
        schema:
          items:
            enum:
            - round
            - pointed
            - open
            - square
            type: string
          type: array
        style: form
      - description: filters by classification of articles
        explode: true
        in: query
        name: shop_area
        schema:
          items:
            enum:
            - shop
            - sale
            type: string
          type: array
        style: form
      - description: filters by size
        in: query
        name: size
        schema:
          type: string
      - description: "filters by different sport activities (eg: football)"
        explode: true
        in: query
        name: sports
        schema:
          items:
            enum:
            - outdoor
            - skiSnow
            - running
            - training
            - football
            - handball
            - basketball
            - volleyball
            - golf
            - tennis
            - beach
            - skate
            - riding
            - cycling
            - sailing
            - badminton
            - dancing
            - snowboard
            - swimming
            type: string
          type: array
        style: form
      - description: filters by technology used to produce the articles
        explode: true
        in: query
        name: technology
        schema:
          items:
            enum:
            - clima365
            - climacool
            - climalite
            - climaproof
            - climawarm
            - driFit
            - flywire
            - formotion
            - omniHeat
            - polartec
            - primaloft
            - staywarm
            - techfit
            - thinsulate
            - venturi
            - h2no
            - dermizax
            - performanceShell
            - softShell
            - windstopper
            - proShell
            - hydratic
            - pacliteShell
            - activeShell
            - goreTex
            - hyvent
            - texapore
            - precip
            type: string
          type: array
        style: form
      - description: filters by trouser rise
        explode: true
        in: query
        name: trouser_rise
        schema:
          items:
            enum:
            - high
            - medium
            - low
            type: string
          type: array
        style: form
      - description: "filters by different type of upper material used on garments\
          \ (eg: lace)"
        explode: true
        in: query
        name: upper_material
        schema:
          items:
            enum:
            - batiste
            - caoutchouc
            - cashmere
            - damask
            - down
            - feathers
            - felt
            - flanelette
            - flannel
            - fleece
            - imitationLeather
            - jacquard
            - jersey
            - leather
            - linen
            - linon
            - mesh
            - microfiber
            - mohair
            - other
            - percale
            - polyester
            - renforce
            - satin
            - seersucker
            - silk
            - synthetic
            - textile
            - towelling
            - varnish
            - velours
            - viscose
            - wool
            - cord
            - denim
            - rib
            - braided
            - crocheted
            - hardshell
            - softshell
            - lace
            - sweat
            type: string
          type: array
        style: form
      - description: filters by volume
        explode: true
        in: query
        name: volume
        schema:
          items:
            enum:
            - smallest
            - small
            - medium
            - large
            - largest
            type: string
          type: array
        style: form
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - facets:
                - count: 2080
                  displayName: Sports Shoes
                  key: childrens-sports-shoes
                - count: 273
                  displayName: Outdoor Shoes
                  key: childrens-outdoor-shoes
                - count: 1365
                  displayName: Sandals & Flip Flops
                  key: kids-shoes-sandals-flip-flops
                filter: category
              - facets:
                - count: 190247
                  displayName: female
                  key: female
                - count: 117211
                  displayName: male
                  key: male
                filter: gender
              - facets:
                - count: 17844
                  displayName: allSeason
                  key: allSeason
                - count: 155667
                  displayName: summer
                  key: summer
                - count: 116763
                  displayName: winter
                  key: winter
                filter: season
              schema:
                $ref: '#/components/schemas/Facets'
          description: Facets response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
      summary: Shop Facets
      tags:
      - facets
      x-openapi-router-controller: openapi_server.controllers.facets_controller
  /filters:
    get:
      description: Zalando API Filters Schema
      operationId: filters_get
      parameters:
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - multiValue: true
                name: ageGroup
                type: ENUM
                values:
                - displayName: babies
                  key: babies
                - displayName: kids
                  key: kids
                - displayName: teen
                  key: teen
                - displayName: adult
                  key: adult
              - multiValue: true
                name: brand
                type: KEY
                values: []
              schema:
                $ref: '#/components/schemas/Filters'
          description: Filters response.
      summary: Shop Filters
      tags:
      - filters
      x-openapi-router-controller: openapi_server.controllers.filters_controller
  /filters/{filterName}:
    get:
      description: Zalando API Filters Schema
      operationId: filters_filter_name_get
      parameters:
      - description: To get Filter by filterName.
        in: path
        name: filterName
        required: true
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                multiValue: true
                name: ageGroup
                type: ENUM
                values:
                - displayName: babies
                  key: babies
                - displayName: kids
                  key: kids
                - displayName: teen
                  key: teen
                - displayName: adult
                  key: adult
              schema:
                $ref: '#/components/schemas/Filter'
          description: Filters response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Filter not found.
      summary: Get Single Filter by filterName
      tags:
      - filters
      x-openapi-router-controller: openapi_server.controllers.filters_controller
  /recommendations/{articleIds}:
    get:
      description: Zalando API Recommendations Schema
      operationId: recommendations_article_ids_get
      parameters:
      - description: To get Recommendations by articleIds.
        explode: false
        in: path
        name: articleIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: simple
      - description: To get maximum results of Recommendations by articleId.
        in: query
        name: maxResults
        schema:
          type: string
      - description: |-
          Specify which Shop to use.

          A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
          shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

          The shop choosen will e.g. define the currency used for prices as well as the language for product names and
          descriptions. Furthermore it will impact which articles are available as they might differ between countries.
        in: header
        name: accept_language
        schema:
          enum:
          - da-DK
          - de-AT
          - de-CH
          - de-DE
          - en-GB
          - es-ES
          - fi-FI
          - fr-BE
          - fr-CH
          - fr-FR
          - it-IT
          - nl-BE
          - nl-NL
          - no-NO
          - pl-PL
          - sv-SE
          type: string
      - description: |-
          Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

          Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
        explode: true
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                id: TC021A00J-A11
                media:
                  images:
                  - largeHdUrl: https://i5.ztat.net/large_hd/TC/02/1A/00/JA/11/TC021A00J-A11@12.jpg
                    largeUrl: https://i5.ztat.net/large/TC/02/1A/00/JA/11/TC021A00J-A11@12.jpg
                    mediumHdUrl: https://i5.ztat.net/detail_hd/TC/02/1A/00/JA/11/TC021A00J-A11@12.jpg
                    mediumUrl: https://i5.ztat.net/detail/TC/02/1A/00/JA/11/TC021A00J-A11@12.jpg
                    orderNumber: 1
                    smallHdUrl: https://i5.ztat.net/catalog_hd/TC/02/1A/00/JA/11/TC021A00J-A11@12.jpg
                    smallUrl: https://i5.ztat.net/catalog/TC/02/1A/00/JA/11/TC021A00J-A11@12.jpg
                    thumbnailHdUrl: https://i5.ztat.net/thumb_hd/TC/02/1A/00/JA/11/TC021A00J-A11@12.jpg
                    type: UNSPECIFIED
                modelId: TC021A00J
                name: MADDY - Jumpsuit - waterlilly/noir
                shopUrl: https://www.zalando.co.uk/2-love-tony-cohen-maddy-jumpsuit-white-tc021a00j-a11.html
              schema:
                $ref: '#/components/schemas/Recommendations'
          description: Recommendations response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request.
      summary: Get Recommendations by articleId
      tags:
      - recommendations
      x-openapi-router-controller: openapi_server.controllers.recommendations_controller
components:
  parameters:
    acceptLanguage:
      description: |-
        Specify which Shop to use.

        A standard `Accept-Language` header which specifies the shop that should be used. E.g. `de-DE` will use the German
        shop (as does [https://www.zalando.de](https://www/zalando.de) and `de-AT` will use the Austrian one.

        The shop choosen will e.g. define the currency used for prices as well as the language for product names and
        descriptions. Furthermore it will impact which articles are available as they might differ between countries.
      in: header
      name: Accept-Language
      schema:
        enum:
        - da-DK
        - de-AT
        - de-CH
        - de-DE
        - en-GB
        - es-ES
        - fi-FI
        - fr-BE
        - fr-CH
        - fr-FR
        - it-IT
        - nl-BE
        - nl-NL
        - no-NO
        - pl-PL
        - sv-SE
        type: string
    activationDate:
      description: period or time the articles are activated for selling in the shop
      explode: true
      in: query
      name: activationDate
      schema:
        items:
          enum:
          - thisWeek
          - lastWeek
          - lastMonth
          type: string
        type: array
      style: form
    ageGroup:
      description: "filters by age group (eg: kids)"
      explode: true
      in: query
      name: ageGroup
      schema:
        items:
          enum:
          - babies
          - kids
          - teen
          - adult
          type: string
        type: array
      style: form
    articleId:
      description: |-
        The `articleIds` to use use for filtering.

        One or more `articleIds` might be used as a filter criteria. Submit multiple `articleId` request parameters for
        more than one to be used. They will be treated as `OR` criteria.
      explode: true
      in: query
      name: articleId
      schema:
        items:
          type: string
        type: array
      style: form
    articleModelId:
      description: filters by article ModelId
      explode: true
      in: query
      name: articleModelId
      schema:
        items:
          type: string
        type: array
      style: form
    articleReviewSort:
      description: "articles are sorted on reviews provided by customers (eg: best)"
      in: query
      name: sort
      schema:
        default: newest
        enum:
        - newest
        - best
        - worst
        - most_helpful
        type: string
    articleUnitId:
      description: filters by article's unit id
      explode: true
      in: query
      name: articleUnitId
      schema:
        items:
          type: string
        type: array
      style: form
    assortmentArea:
      description: "filters by classification of articles (eg: maternity) "
      explode: true
      in: query
      name: assortmentArea
      schema:
        items:
          enum:
          - standard
          - maternity
          - plusSize
          - petite
          type: string
        type: array
      style: form
    brand:
      description: "filters by brand key given by user (eg: SA5)"
      explode: true
      in: query
      name: brand
      schema:
        items:
          type: string
        type: array
      style: form
    brandfamily:
      description: "filters by brand family key (eg: nike) "
      explode: true
      in: query
      name: brandfamily
      schema:
        items:
          type: string
        type: array
      style: form
    category:
      description: "filters by category (eg: Socks, Rain Coats)"
      explode: true
      in: query
      name: category
      schema:
        items:
          type: string
        type: array
      style: form
    color:
      description: "filters by color (eg: red, blue)"
      explode: true
      in: query
      name: color
      schema:
        items:
          enum:
          - black
          - brown
          - beige
          - gray
          - white
          - blue
          - petrol
          - turquoise
          - green
          - olive
          - yellow
          - orange
          - red
          - pink
          - purple
          - gold
          - silver
          - multicolored
          type: string
        type: array
      style: form
    den:
      description: 'filters by den '
      explode: true
      in: query
      name: den
      schema:
        items:
          enum:
          - den15
          - den20
          - den40
          - den60
          - den80
          - den100
          - den200
          - den120
          - den12
          - den50
          type: string
        type: array
      style: form
    fields:
      description: |-
        Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.

        Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted
      explode: true
      in: query
      name: fields
      schema:
        items:
          type: string
        type: array
      style: form
    filling:
      description: "filters by different kinds of garment filling materials (eg: satin,\
        \ wolle)"
      explode: true
      in: query
      name: filling
      schema:
        items:
          enum:
          - angora
          - baumwolle
          - daunen
          - fell
          - fleece
          - frottee
          - kaschmir
          - lammfell
          - leder
          - lederimitat
          - merinowolle
          - microfaser
          - mohair
          - satin
          - schurwolle
          - seide
          - sonstige
          - textil
          - warm
          - wolle
          type: string
        type: array
      style: form
    fullText:
      description: "filters by text (eg: search by 'as' gives result with articles\
        \ of brand Sass)"
      in: query
      name: fullText
      schema:
        type: string
    gender:
      description: filters by gender
      explode: true
      in: query
      name: gender
      schema:
        items:
          enum:
          - male
          - female
          type: string
        type: array
      style: form
    heelForm:
      description: "filters by heel form (eg: flat)"
      explode: true
      in: query
      name: heelForm
      schema:
        items:
          enum:
          - block
          - flat
          - wedge
          - penny
          - funnel
          - plateau
          - plateauBoots
          - wedgeHidden
          - plateauHidden
          - plateauHeels
          type: string
        type: array
      style: form
    heelHeight:
      description: "filters by height of the heel size or length (eg: xs)"
      explode: true
      in: query
      name: heelHeight
      schema:
        items:
          enum:
          - xs
          - s
          - m
          type: string
        type: array
      style: form
    length:
      description: "filters by garments length (eg: 3/4 length, knee-length)"
      in: query
      name: length
      schema:
        type: string
    maxStarRating:
      description: To get reviews with maximum star rating.
      in: query
      name: maxStarRating
      schema:
        type: string
    minStarRating:
      description: To get reviews with minimum star rating.
      in: query
      name: minStarRating
      schema:
        type: string
    occasion:
      description: "filters by type of occasion (eg: party, business)"
      explode: true
      in: query
      name: occasion
      schema:
        items:
          enum:
          - business
          - octoberFest
          - loungeWear
          - evening
          - party
          - leisure
          type: string
        type: array
      style: form
    page:
      description: to request with required page number or pagination
      in: query
      name: page
      schema:
        type: string
    pageSize:
      description: to request with required page size in a page
      in: query
      name: pageSize
      schema:
        type: string
    pattern:
      description: "filters by pattern on the garments (eg: animal print, plain)"
      explode: true
      in: query
      name: pattern
      schema:
        items:
          enum:
          - animalPrint
          - checkered
          - colored
          - floral
          - polkaDot
          - striped
          - paisley
          - plain
          - print
          - burnout
          - herringBone
          - camouflage
          - flecked
          - pinstripe
          - gradient
          - photoPrint
          type: string
        type: array
      style: form
    price:
      description: "filters all articles in price range (eg: 9-90)"
      in: query
      name: price
      schema:
        type: string
    sale:
      description: filters discounted articles marked as sale
      explode: false
      in: query
      name: sale
      schema:
        items:
          enum:
          - sale
          type: string
        type: array
      style: form
    season:
      description: filters by season (Autumn/Winter or Spring/Summer)
      explode: true
      in: query
      name: season
      schema:
        items:
          enum:
          - winter
          - summer
          type: string
        type: array
      style: form
    shaftHeight:
      description: "filters by shaft height (eg: s, xs)"
      explode: true
      in: query
      name: shaftHeight
      schema:
        items:
          enum:
          - xs
          - s
          - m
          - l
          type: string
        type: array
      style: form
    shaftWidth:
      description: "filters by shaft width (eg: s, l)"
      explode: true
      in: query
      name: shaftWidth
      schema:
        items:
          enum:
          - s
          - m
          - l
          type: string
        type: array
      style: form
    shirtCollar:
      description: "filters by shirt collar styles (eg: low V neck, lined collar)"
      explode: true
      in: query
      name: shirtCollar
      schema:
        items:
          enum:
          - lapelCollar
          - mandarinCollar
          - hood
          - poloNeck
          - poloShirt
          - cowlNeck
          - roundNeck
          - scarfCollar
          - boatNeck
          - vNeck
          - buttonDown
          - turnDownCollar
          - highCollar
          - linedCollar
          - shirtCollar
          - cutawayCollar
          - doubleCollar
          - peterPanCollar
          - kentCollar
          - cupShapedCollar
          - contrastCollar
          - maoCollar
          - wingCollar
          - tabCollar
          - volantCollar
          - shawlCollar
          - envelope
          - lowVNeck
          - cacheCeour
          - lowRoundNeck
          - backless
          - henley
          - squareNeck
          - offTheShoulder
          type: string
        type: array
      style: form
    shoeFastener:
      description: "filters by shoe fastener types (eg: buckle, lacing)"
      explode: true
      in: query
      name: shoeFastener
      schema:
        items:
          enum:
          - buckle
          - belt
          - lacing
          - open
          - zipper
          - velcro
          type: string
        type: array
      style: form
    shoeToecap:
      description: "filters by shoe toe cap variants (eg: pointed, square)"
      explode: true
      in: query
      name: shoeToecap
      schema:
        items:
          enum:
          - round
          - pointed
          - open
          - square
          type: string
        type: array
      style: form
    shopArea:
      description: filters by classification of articles
      explode: true
      in: query
      name: shopArea
      schema:
        items:
          enum:
          - shop
          - sale
          type: string
        type: array
      style: form
    size:
      description: filters by size
      in: query
      name: size
      schema:
        type: string
    sort:
      description: "sorting order (eg: popularity)"
      in: query
      name: sort
      schema:
        enum:
        - popularity
        - activationdate
        - pricedesc
        - priceasc
        - sale
        type: string
    sports:
      description: "filters by different sport activities (eg: football)"
      explode: true
      in: query
      name: sports
      schema:
        items:
          enum:
          - outdoor
          - skiSnow
          - running
          - training
          - football
          - handball
          - basketball
          - volleyball
          - golf
          - tennis
          - beach
          - skate
          - riding
          - cycling
          - sailing
          - badminton
          - dancing
          - snowboard
          - swimming
          type: string
        type: array
      style: form
    technology:
      description: filters by technology used to produce the articles
      explode: true
      in: query
      name: technology
      schema:
        items:
          enum:
          - clima365
          - climacool
          - climalite
          - climaproof
          - climawarm
          - driFit
          - flywire
          - formotion
          - omniHeat
          - polartec
          - primaloft
          - staywarm
          - techfit
          - thinsulate
          - venturi
          - h2no
          - dermizax
          - performanceShell
          - softShell
          - windstopper
          - proShell
          - hydratic
          - pacliteShell
          - activeShell
          - goreTex
          - hyvent
          - texapore
          - precip
          type: string
        type: array
      style: form
    trouserRise:
      description: filters by trouser rise
      explode: true
      in: query
      name: trouserRise
      schema:
        items:
          enum:
          - high
          - medium
          - low
          type: string
        type: array
      style: form
    upperMaterial:
      description: "filters by different type of upper material used on garments (eg:\
        \ lace)"
      explode: true
      in: query
      name: upperMaterial
      schema:
        items:
          enum:
          - batiste
          - caoutchouc
          - cashmere
          - damask
          - down
          - feathers
          - felt
          - flanelette
          - flannel
          - fleece
          - imitationLeather
          - jacquard
          - jersey
          - leather
          - linen
          - linon
          - mesh
          - microfiber
          - mohair
          - other
          - percale
          - polyester
          - renforce
          - satin
          - seersucker
          - silk
          - synthetic
          - textile
          - towelling
          - varnish
          - velours
          - viscose
          - wool
          - cord
          - denim
          - rib
          - braided
          - crocheted
          - hardshell
          - softshell
          - lace
          - sweat
          type: string
        type: array
      style: form
    volume:
      description: filters by volume
      explode: true
      in: query
      name: volume
      schema:
        items:
          enum:
          - smallest
          - small
          - medium
          - large
          - largest
          type: string
        type: array
      style: form
  schemas:
    Article:
      description: A single article
      example:
        additionalInfos:
        - additionalInfos
        - additionalInfos
        color: color
        modelId: modelId
        available: true
        genders:
        - MALE
        - MALE
        media:
          images:
          - smallUrl: https://openapi-generator.tech
            mediumHdUrl: https://openapi-generator.tech
            mediumUrl: https://openapi-generator.tech
            orderNumber: 5
            thumbnailHdUrl: https://openapi-generator.tech
            largeHdUrl: https://openapi-generator.tech
            smallHdUrl: https://openapi-generator.tech
            largeUrl: https://openapi-generator.tech
            type: type
          - smallUrl: https://openapi-generator.tech
            mediumHdUrl: https://openapi-generator.tech
            mediumUrl: https://openapi-generator.tech
            orderNumber: 5
            thumbnailHdUrl: https://openapi-generator.tech
            largeHdUrl: https://openapi-generator.tech
            smallHdUrl: https://openapi-generator.tech
            largeUrl: https://openapi-generator.tech
            type: type
        units:
        - originalPrice:
            formatted: formatted
            currency: currency
            value: 2.3021358869347655
          size: size
          price:
            formatted: formatted
            currency: currency
            value: 2.3021358869347655
          available: true
          id: id
          partnerId: partnerId
          stock: 7
        - originalPrice:
            formatted: formatted
            currency: currency
            value: 2.3021358869347655
          size: size
          price:
            formatted: formatted
            currency: currency
            value: 2.3021358869347655
          available: true
          id: id
          partnerId: partnerId
          stock: 7
        ageGroups:
        - BABY
        - BABY
        shopUrl: https://openapi-generator.tech
        tags:
        - tags
        - tags
        categoryKeys:
        - categoryKeys
        - categoryKeys
        name: name
        season: SUMMER
        attributes:
        - values:
          - values
          - values
          name: name
        - values:
          - values
          - values
          name: name
        id: id
        activationDate: 2000-01-23T04:56:07.000+00:00
        brand:
          logoLargeUrl: https://openapi-generator.tech
          brandFamily:
            name: name
            shopUrl: https://openapi-generator.tech
            key: key
          name: name
          shopUrl: https://openapi-generator.tech
          key: key
          logoUrl: https://openapi-generator.tech
        seasonYear: seasonYear
      properties:
        activationDate:
          description: timestamp the article was available in the Zalando webshop
          format: date-time
          title: activationDate
          type: string
        additionalInfos:
          description: 'any additional information of the article '
          items:
            type: string
          minItems: 0
          title: additionalInfos
          type: array
        ageGroups:
          description: age group of the article belongs to
          items:
            enum:
            - BABY
            - CHILD
            - TEEN
            - ADULT
            type: string
          minItems: 1
          title: ageGroups
          type: array
        attributes:
          description: article attributes
          items:
            $ref: '#/components/schemas/Article-Attribute'
          minItems: 0
          title: attributes
          type: array
        available:
          description: will be true if at least one article unit is available
          title: available
          type: boolean
        brand:
          $ref: '#/components/schemas/Brand'
        categoryKeys:
          description: category keys of the article belongs to
          items:
            type: string
          minItems: 1
          title: categoryKeys
          type: array
        color:
          description: the main color of the article
          title: color
          type: string
        genders:
          description: gender of the article belongs to
          items:
            enum:
            - MALE
            - FEMALE
            type: string
          minItems: 1
          title: genders
          type: array
        id:
          description: unique article id
          title: id
          type: string
        media:
          $ref: '#/components/schemas/Article-Media'
        modelId:
          description: unique article model id
          title: modelId
          type: string
        name:
          description: article name
          title: name
          type: string
        season:
          description: collection season the article belongs to
          enum:
          - SUMMER
          - WINTER
          - ALL
          title: season
          type: string
        seasonYear:
          description: collection year the article belongs to. Could be either a year
            or 'ALL'
          pattern: "^ALL$|^20[0-9]{2}$"
          title: seasonYear
          type: string
        shopUrl:
          description: url of the article within the Zalando webshop
          format: uri
          title: shopUrl
          type: string
        tags:
          items:
            type: string
          title: tags
          type: array
        units:
          description: price of the article
          items:
            $ref: '#/components/schemas/Article-Unit'
          minItems: 1
          title: units
          type: array
      required:
      - activationDate
      - additionalInfos
      - ageGroups
      - attributes
      - available
      - brand
      - categoryKeys
      - color
      - genders
      - id
      - media
      - modelId
      - name
      - season
      - seasonYear
      - shopUrl
      - units
      title: Article
      type: object
    Article-Attribute:
      description: Zalando API Article Attribute Schema
      example:
        values:
        - values
        - values
        name: name
      properties:
        name:
          description: name of the article attribute
          title: name
          type: string
        values:
          description: value of the article attribute
          items:
            type: string
          minItems: 1
          title: values
          type: array
      required:
      - name
      - values
      title: Article-Attribute
      type: object
    Article-Image:
      description: Zalando API Article Image Schema
      example:
        smallUrl: https://openapi-generator.tech
        mediumHdUrl: https://openapi-generator.tech
        mediumUrl: https://openapi-generator.tech
        orderNumber: 5
        thumbnailHdUrl: https://openapi-generator.tech
        largeHdUrl: https://openapi-generator.tech
        smallHdUrl: https://openapi-generator.tech
        largeUrl: https://openapi-generator.tech
        type: type
      properties:
        largeHdUrl:
          description: large HD image of the article
          format: uri
          title: largeHdUrl
          type: string
        largeUrl:
          description: large image of the article
          format: uri
          title: largeUrl
          type: string
        mediumHdUrl:
          description: medium HD image of the article
          format: uri
          title: mediumHdUrl
          type: string
        mediumUrl:
          description: medium image of the article
          format: uri
          title: mediumUrl
          type: string
        orderNumber:
          description: sequence of the article images
          title: orderNumber
          type: integer
        smallHdUrl:
          description: small HD image of the article
          format: uri
          title: smallHdUrl
          type: string
        smallUrl:
          description: small image of the article
          format: uri
          title: smallUrl
          type: string
        thumbnailHdUrl:
          description: thumbnail HD url of the article images
          format: uri
          title: thumbnailHdUrl
          type: string
        type:
          description: model or non model type article images
          title: type
          type: string
      required:
      - largeHdUrl
      - largeUrl
      - mediumHdUrl
      - mediumUrl
      - orderNumber
      - smallHdUrl
      - smallUrl
      - thumbnailHdUrl
      - type
      title: Article-Image
      type: object
    Article-Media:
      description: Zalando API Article Media Schema
      example:
        images:
        - smallUrl: https://openapi-generator.tech
          mediumHdUrl: https://openapi-generator.tech
          mediumUrl: https://openapi-generator.tech
          orderNumber: 5
          thumbnailHdUrl: https://openapi-generator.tech
          largeHdUrl: https://openapi-generator.tech
          smallHdUrl: https://openapi-generator.tech
          largeUrl: https://openapi-generator.tech
          type: type
        - smallUrl: https://openapi-generator.tech
          mediumHdUrl: https://openapi-generator.tech
          mediumUrl: https://openapi-generator.tech
          orderNumber: 5
          thumbnailHdUrl: https://openapi-generator.tech
          largeHdUrl: https://openapi-generator.tech
          smallHdUrl: https://openapi-generator.tech
          largeUrl: https://openapi-generator.tech
          type: type
      properties:
        images:
          items:
            $ref: '#/components/schemas/Article-Image'
          minItems: 0
          title: images
          type: array
      required:
      - images
      title: Article-Media
      type: object
    Article-Price:
      description: Zalando API Article Price Schema
      example:
        formatted: formatted
        currency: currency
        value: 2.3021358869347655
      properties:
        currency:
          description: ""
          title: currency
          type: string
        formatted:
          description: ""
          title: formatted
          type: string
        value:
          description: ""
          title: value
          type: number
      required:
      - currency
      - formatted
      - value
      title: Article-Price
      type: object
    Article-Review:
      description: Zalando API Article Review Schema
      example:
        helpfulCount: 7
        created: 2000-01-23T04:56:07.000+00:00
        articleId: articleId
        rating: 1
        articleSizeRatings:
          CHEST: 2
          SHOE_WIDTH: 1
          COLLAR_SIZE: 9
          OVERALL: 1
          CUP_SIZE: 3
          LENGTH: 7
          BOOTLEG_WIDTH: 5
          SHOULDERS: 1
          SLEEVES: 6
          LEG_FIT: 4
          CHEST_GIRTH: 7
          HIPS_OR_REAR: 2
        description: description
        language: language
        recommend: true
        articleModelId: articleModelId
        customerCity: customerCity
        title: title
        customerCountry: customerCountry
        unhelpfulCount: 4
        customerNickname: customerNickname
        reviewId: reviewId
      properties:
        articleId:
          title: articleId
          type: string
        articleModelId:
          title: articleModelId
          type: string
        articleSizeRatings:
          $ref: '#/components/schemas/Article_Review_articleSizeRatings'
        created:
          description: article review created date and time
          format: date-time
          title: created
          type: string
        customerCity:
          description: customer city in the article review
          title: customerCity
          type: string
        customerCountry:
          description: customer country in the article review
          title: customerCountry
          type: string
        customerNickname:
          description: Customer short name in the article review
          title: customerNickname
          type: string
        description:
          description: description of the article review
          title: description
          type: string
        helpfulCount:
          description: customer review helpful count of the article
          title: helpfulCount
          type: integer
        language:
          description: language in the article review
          title: language
          type: string
        rating:
          description: customer rating of the article
          title: rating
          type: integer
        recommend:
          description: customer recommend to the article
          title: recommend
          type: boolean
        reviewId:
          description: unique article review id
          title: reviewId
          type: string
        title:
          description: title in the article review
          title: title
          type: string
        unhelpfulCount:
          description: customer review unhelpful count of the article
          title: unhelpfulCount
          type: integer
      required:
      - articleId
      - articleModelId
      - created
      - description
      - helpfulCount
      - language
      - rating
      - reviewId
      - title
      - unhelpfulCount
      title: Article-Review
      type: object
    Article-Reviews:
      allOf:
      - $ref: '#/components/schemas/Page'
      - properties:
          content:
            items:
              $ref: '#/components/schemas/Article-Review'
            minItems: 0
            type: array
        type: object
      description: Zalando API Paged Article Reviews Schema
      example:
        size: 6
        totalPages: 5
        page: 0
        content:
        - helpfulCount: 7
          created: 2000-01-23T04:56:07.000+00:00
          articleId: articleId
          rating: 1
          articleSizeRatings:
            CHEST: 2
            SHOE_WIDTH: 1
            COLLAR_SIZE: 9
            OVERALL: 1
            CUP_SIZE: 3
            LENGTH: 7
            BOOTLEG_WIDTH: 5
            SHOULDERS: 1
            SLEEVES: 6
            LEG_FIT: 4
            CHEST_GIRTH: 7
            HIPS_OR_REAR: 2
          description: description
          language: language
          recommend: true
          articleModelId: articleModelId
          customerCity: customerCity
          title: title
          customerCountry: customerCountry
          unhelpfulCount: 4
          customerNickname: customerNickname
          reviewId: reviewId
        - helpfulCount: 7
          created: 2000-01-23T04:56:07.000+00:00
          articleId: articleId
          rating: 1
          articleSizeRatings:
            CHEST: 2
            SHOE_WIDTH: 1
            COLLAR_SIZE: 9
            OVERALL: 1
            CUP_SIZE: 3
            LENGTH: 7
            BOOTLEG_WIDTH: 5
            SHOULDERS: 1
            SLEEVES: 6
            LEG_FIT: 4
            CHEST_GIRTH: 7
            HIPS_OR_REAR: 2
          description: description
          language: language
          recommend: true
          articleModelId: articleModelId
          customerCity: customerCity
          title: title
          customerCountry: customerCountry
          unhelpfulCount: 4
          customerNickname: customerNickname
          reviewId: reviewId
        totalElements: 1
      title: Article-Reviews
    Article-Reviews-Summaries:
      allOf:
      - $ref: '#/components/schemas/Page'
      - properties:
          content:
            items:
              $ref: '#/components/schemas/Article-Reviews-Summary'
            minItems: 0
            type: array
        type: object
      description: Zalando API Paged Article Reviews Summaries Schema
      example:
        size: 6
        totalPages: 5
        page: 0
        content:
        - averageStarRating: 7.457744773683766
          numberOfUserRecommendations: 4
          numberOfUserReviews: 5
          numberOfUserPositiveRecommendations: 1
          articleSizeRatings:
            CHEST: 2.3021358869347655
            SHOE_WIDTH: 1.0246457001441578
            COLLAR_SIZE: 9.301444243932576
            OVERALL: 1.2315135367772556
            CUP_SIZE: 3.616076749251911
            LENGTH: 7.386281948385884
            BOOTLEG_WIDTH: 5.637376656633329
            SHOULDERS: 1.4894159098541704
            SLEEVES: 6.84685269835264
            LEG_FIT: 4.145608029883936
            CHEST_GIRTH: 7.061401241503109
            HIPS_OR_REAR: 2.027123023002322
          starRatingDistribution:
            "1": 9
            "2": 9
            "3": 6
            "4": 8
            "5": 9
          articleModelId: articleModelId
        - averageStarRating: 7.457744773683766
          numberOfUserRecommendations: 4
          numberOfUserReviews: 5
          numberOfUserPositiveRecommendations: 1
          articleSizeRatings:
            CHEST: 2.3021358869347655
            SHOE_WIDTH: 1.0246457001441578
            COLLAR_SIZE: 9.301444243932576
            OVERALL: 1.2315135367772556
            CUP_SIZE: 3.616076749251911
            LENGTH: 7.386281948385884
            BOOTLEG_WIDTH: 5.637376656633329
            SHOULDERS: 1.4894159098541704
            SLEEVES: 6.84685269835264
            LEG_FIT: 4.145608029883936
            CHEST_GIRTH: 7.061401241503109
            HIPS_OR_REAR: 2.027123023002322
          starRatingDistribution:
            "1": 9
            "2": 9
            "3": 6
            "4": 8
            "5": 9
          articleModelId: articleModelId
        totalElements: 1
      title: Article-Reviews-Summaries
    Article-Reviews-Summary:
      description: Zalando API Article Reviews Summary Schema
      example:
        averageStarRating: 7.457744773683766
        numberOfUserRecommendations: 4
        numberOfUserReviews: 5
        numberOfUserPositiveRecommendations: 1
        articleSizeRatings:
          CHEST: 2.3021358869347655
          SHOE_WIDTH: 1.0246457001441578
          COLLAR_SIZE: 9.301444243932576
          OVERALL: 1.2315135367772556
          CUP_SIZE: 3.616076749251911
          LENGTH: 7.386281948385884
          BOOTLEG_WIDTH: 5.637376656633329
          SHOULDERS: 1.4894159098541704
          SLEEVES: 6.84685269835264
          LEG_FIT: 4.145608029883936
          CHEST_GIRTH: 7.061401241503109
          HIPS_OR_REAR: 2.027123023002322
        starRatingDistribution:
          "1": 9
          "2": 9
          "3": 6
          "4": 8
          "5": 9
        articleModelId: articleModelId
      properties:
        articleModelId:
          title: articleModelId
          type: string
        articleSizeRatings:
          $ref: '#/components/schemas/Article_Reviews_Summary_articleSizeRatings'
        averageStarRating:
          description: average star rating of the article
          title: averageStarRating
          type: number
        numberOfUserPositiveRecommendations:
          description: number of positive recommendations to the article
          title: numberOfUserPositiveRecommendations
          type: integer
        numberOfUserRecommendations:
          description: number of users recommended to the article
          title: numberOfUserRecommendations
          type: integer
        numberOfUserReviews:
          description: number of user reviews of the article
          title: numberOfUserReviews
          type: integer
        starRatingDistribution:
          $ref: '#/components/schemas/Article_Reviews_Summary_starRatingDistribution'
      required:
      - articleModelId
      - averageStarRating
      - numberOfUserPositiveRecommendations
      - numberOfUserRecommendations
      - numberOfUserReviews
      - starRatingDistribution
      title: Article-Reviews-Summary
      type: object
    Article-Unit:
      description: Zalando API Article Unit Schema
      example:
        originalPrice:
          formatted: formatted
          currency: currency
          value: 2.3021358869347655
        size: size
        price:
          formatted: formatted
          currency: currency
          value: 2.3021358869347655
        available: true
        id: id
        partnerId: partnerId
        stock: 7
      properties:
        available:
          description: availability of the article
          title: available
          type: boolean
        id:
          description: article id (sku)
          title: id
          type: string
        originalPrice:
          $ref: '#/components/schemas/Article-Price'
        partnerId:
          description: partner id (vendor id) of the article
          title: partnerId
          type: string
        price:
          $ref: '#/components/schemas/Article-Price'
        size:
          description: article size
          title: size
          type: string
        stock:
          description: stock of the article
          title: stock
          type: integer
      required:
      - available
      - id
      - originalPrice
      - price
      - size
      - stock
      title: Article-Unit
      type: object
    Article-Units:
      description: Zalando API Article Units Schema
      items:
        $ref: '#/components/schemas/Article-Unit'
      minItems: 1
      type: array
    Articles:
      allOf:
      - $ref: '#/components/schemas/Page'
      - properties:
          content:
            items:
              $ref: '#/components/schemas/Article'
            minItems: 0
            type: array
        type: object
      description: A simple container object that carries paging information as well
        as a list of articles on the `content` property.
      example:
        size: 6
        totalPages: 5
        page: 0
        content:
        - additionalInfos:
          - additionalInfos
          - additionalInfos
          color: color
          modelId: modelId
          available: true
          genders:
          - MALE
          - MALE
          media:
            images:
            - smallUrl: https://openapi-generator.tech
              mediumHdUrl: https://openapi-generator.tech
              mediumUrl: https://openapi-generator.tech
              orderNumber: 5
              thumbnailHdUrl: https://openapi-generator.tech
              largeHdUrl: https://openapi-generator.tech
              smallHdUrl: https://openapi-generator.tech
              largeUrl: https://openapi-generator.tech
              type: type
            - smallUrl: https://openapi-generator.tech
              mediumHdUrl: https://openapi-generator.tech
              mediumUrl: https://openapi-generator.tech
              orderNumber: 5
              thumbnailHdUrl: https://openapi-generator.tech
              largeHdUrl: https://openapi-generator.tech
              smallHdUrl: https://openapi-generator.tech
              largeUrl: https://openapi-generator.tech
              type: type
          units:
          - originalPrice:
              formatted: formatted
              currency: currency
              value: 2.3021358869347655
            size: size
            price:
              formatted: formatted
              currency: currency
              value: 2.3021358869347655
            available: true
            id: id
            partnerId: partnerId
            stock: 7
          - originalPrice:
              formatted: formatted
              currency: currency
              value: 2.3021358869347655
            size: size
            price:
              formatted: formatted
              currency: currency
              value: 2.3021358869347655
            available: true
            id: id
            partnerId: partnerId
            stock: 7
          ageGroups:
          - BABY
          - BABY
          shopUrl: https://openapi-generator.tech
          tags:
          - tags
          - tags
          categoryKeys:
          - categoryKeys
          - categoryKeys
          name: name
          season: SUMMER
          attributes:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          id: id
          activationDate: 2000-01-23T04:56:07.000+00:00
          brand:
            logoLargeUrl: https://openapi-generator.tech
            brandFamily:
              name: name
              shopUrl: https://openapi-generator.tech
              key: key
            name: name
            shopUrl: https://openapi-generator.tech
            key: key
            logoUrl: https://openapi-generator.tech
          seasonYear: seasonYear
        - additionalInfos:
          - additionalInfos
          - additionalInfos
          color: color
          modelId: modelId
          available: true
          genders:
          - MALE
          - MALE
          media:
            images:
            - smallUrl: https://openapi-generator.tech
              mediumHdUrl: https://openapi-generator.tech
              mediumUrl: https://openapi-generator.tech
              orderNumber: 5
              thumbnailHdUrl: https://openapi-generator.tech
              largeHdUrl: https://openapi-generator.tech
              smallHdUrl: https://openapi-generator.tech
              largeUrl: https://openapi-generator.tech
              type: type
            - smallUrl: https://openapi-generator.tech
              mediumHdUrl: https://openapi-generator.tech
              mediumUrl: https://openapi-generator.tech
              orderNumber: 5
              thumbnailHdUrl: https://openapi-generator.tech
              largeHdUrl: https://openapi-generator.tech
              smallHdUrl: https://openapi-generator.tech
              largeUrl: https://openapi-generator.tech
              type: type
          units:
          - originalPrice:
              formatted: formatted
              currency: currency
              value: 2.3021358869347655
            size: size
            price:
              formatted: formatted
              currency: currency
              value: 2.3021358869347655
            available: true
            id: id
            partnerId: partnerId
            stock: 7
          - originalPrice:
              formatted: formatted
              currency: currency
              value: 2.3021358869347655
            size: size
            price:
              formatted: formatted
              currency: currency
              value: 2.3021358869347655
            available: true
            id: id
            partnerId: partnerId
            stock: 7
          ageGroups:
          - BABY
          - BABY
          shopUrl: https://openapi-generator.tech
          tags:
          - tags
          - tags
          categoryKeys:
          - categoryKeys
          - categoryKeys
          name: name
          season: SUMMER
          attributes:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          id: id
          activationDate: 2000-01-23T04:56:07.000+00:00
          brand:
            logoLargeUrl: https://openapi-generator.tech
            brandFamily:
              name: name
              shopUrl: https://openapi-generator.tech
              key: key
            name: name
            shopUrl: https://openapi-generator.tech
            key: key
            logoUrl: https://openapi-generator.tech
          seasonYear: seasonYear
        totalElements: 1
      title: Articles
    Brand:
      description: Zalando API Brand Schema
      example:
        logoLargeUrl: https://openapi-generator.tech
        brandFamily:
          name: name
          shopUrl: https://openapi-generator.tech
          key: key
        name: name
        shopUrl: https://openapi-generator.tech
        key: key
        logoUrl: https://openapi-generator.tech
      properties:
        brandFamily:
          $ref: '#/components/schemas/BrandFamily'
        key:
          description: The unique key for a brand
          title: key
          type: string
        logoLargeUrl:
          description: The url of the large brand logo within the Zalando web shop
          format: uri
          title: logoLargeUrl
          type: string
        logoUrl:
          description: The url of the brand logo within the Zalando web shop
          format: uri
          title: logoUrl
          type: string
        name:
          description: Name of the brand
          title: name
          type: string
        shopUrl:
          description: The url of the brand within the Zalando web shop
          format: uri
          title: shopUrl
          type: string
      required:
      - key
      - name
      - shopUrl
      title: Brand
      type: object
    BrandFamily:
      description: Zalando API BrandFamily Schema
      example:
        name: name
        shopUrl: https://openapi-generator.tech
        key: key
      properties:
        key:
          description: The unique key for a brandFamily
          title: key
          type: string
        name:
          description: Name of the brandFamily
          title: name
          type: string
        shopUrl:
          description: The url of the brandFamily within the Zalando web shop
          format: uri
          title: shopUrl
          type: string
      required:
      - key
      - name
      - shopUrl
      title: BrandFamily
      type: object
    Brands:
      allOf:
      - $ref: '#/components/schemas/Page'
      - properties:
          content:
            items:
              $ref: '#/components/schemas/Brand'
            minItems: 0
            type: array
        type: object
      description: Zalando API Paged Brands Schema
      example:
        size: 6
        totalPages: 5
        page: 0
        content:
        - logoLargeUrl: https://openapi-generator.tech
          brandFamily:
            name: name
            shopUrl: https://openapi-generator.tech
            key: key
          name: name
          shopUrl: https://openapi-generator.tech
          key: key
          logoUrl: https://openapi-generator.tech
        - logoLargeUrl: https://openapi-generator.tech
          brandFamily:
            name: name
            shopUrl: https://openapi-generator.tech
            key: key
          name: name
          shopUrl: https://openapi-generator.tech
          key: key
          logoUrl: https://openapi-generator.tech
        totalElements: 1
      title: Brands
    Categories:
      allOf:
      - $ref: '#/components/schemas/Page'
      - properties:
          content:
            items:
              $ref: '#/components/schemas/Category'
            minItems: 0
            type: array
        type: object
      description: Zalando API Paged Categories Schema
      example:
        size: 6
        totalPages: 5
        page: 0
        content:
        - suggestedFilters:
          - suggestedFilters
          - suggestedFilters
          targetGroup: ALL
          parentKey: parentKey
          hidden: true
          name: name
          outlet: true
          type: type
          key: key
          childKeys:
          - childKeys
          - childKeys
          cid: 5
        - suggestedFilters:
          - suggestedFilters
          - suggestedFilters
          targetGroup: ALL
          parentKey: parentKey
          hidden: true
          name: name
          outlet: true
          type: type
          key: key
          childKeys:
          - childKeys
          - childKeys
          cid: 5
        totalElements: 1
      title: Categories
    Category:
      description: Zalando API Category Schema
      example:
        suggestedFilters:
        - suggestedFilters
        - suggestedFilters
        targetGroup: ALL
        parentKey: parentKey
        hidden: true
        name: name
        outlet: true
        type: type
        key: key
        childKeys:
        - childKeys
        - childKeys
        cid: 5
      properties:
        childKeys:
          description: The list of keys of the child categories
          items:
            type: string
          minItems: 0
          title: childKeys
          type: array
        cid:
          description: The numeric ID for a category.
          title: cid
          type: integer
        hidden:
          description: The category is hidden and not shown on the Zalando web shop
          title: hidden
          type: boolean
        key:
          description: The unique key for a category
          title: key
          type: string
        name:
          description: Name of the category
          title: name
          type: string
        outlet:
          description: Containing articles are from last seasons
          title: outlet
          type: boolean
        parentKey:
          description: The key of the parent category
          title: parentKey
          type: string
        suggestedFilters:
          description: list of filter names that are reasonable to use within this
            category
          items:
            type: string
          minItems: 1
          title: suggestedFilters
          type: array
        targetGroup:
          description: The target group of the articles from this category
          enum:
          - ALL
          - WOMEN
          - MEN
          - KIDS
          title: targetGroup
          type: string
        type:
          description: The type of the category.
          title: type
          type: string
      required:
      - childKeys
      - key
      - name
      - suggestedFilters
      - targetGroup
      title: Category
      type: object
    Domain:
      description: Zalando API Domain Schema
      example:
        taxRate: 0.08008281904610115
        countryCode: countryCode
        languageCode: languageCode
        shopUrl: shopUrl
        currencyCode: currencyCode
        rootCategoryKey: rootCategoryKey
      properties:
        countryCode:
          description: domain country code
          title: countryCode
          type: string
        currencyCode:
          description: domain currency code
          title: currencyCode
          type: string
        languageCode:
          description: domain language
          title: languageCode
          type: string
        rootCategoryKey:
          description: domain root category
          title: rootCategoryKey
          type: string
        shopUrl:
          description: domain specific url
          title: shopUrl
          type: string
        taxRate:
          description: domain tax rate
          exclusiveMaximum: true
          exclusiveMinimum: true
          maximum: 1
          minimum: 0
          title: taxRate
          type: number
      required:
      - countryCode
      - currencyCode
      - languageCode
      - rootCategoryKey
      - shopUrl
      - taxRate
      title: Domain
      type: object
    ErrorDetail:
      example:
        name: name
        invalidValues:
        - invalidValues
        - invalidValues
        value: value
        key: key
        invalidName: true
      properties:
        invalidName:
          title: invalidName
          type: boolean
        invalidValues:
          items:
            type: string
          title: invalidValues
          type: array
        key:
          title: key
          type: string
        name:
          title: name
          type: string
        value:
          title: value
          type: string
      title: ErrorDetail
      type: object
    ErrorMessage:
      example:
        message: message
        errors:
        - name: name
          invalidValues:
          - invalidValues
          - invalidValues
          value: value
          key: key
          invalidName: true
        - name: name
          invalidValues:
          - invalidValues
          - invalidValues
          value: value
          key: key
          invalidName: true
        status: 5
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ErrorDetail'
          title: errors
          type: array
        message:
          title: message
          type: string
        status:
          title: status
          type: integer
      required:
      - message
      - status
      title: ErrorMessage
      type: object
    Facet:
      description: Zalando API Facet Schema
      example:
        filter: filter
        facets:
        - displayName: displayName
          count: 0
          key: key
        - displayName: displayName
          count: 0
          key: key
      properties:
        facets:
          description: list of the calculated article counts for each filter value
          items:
            $ref: '#/components/schemas/Facet-Value'
          minItems: 1
          title: facets
          type: array
        filter:
          title: filter
          type: string
      required:
      - facets
      - filter
      title: Facet
      type: object
    Facet-Value:
      description: Zalando API FacetValue Schema
      example:
        displayName: displayName
        count: 0
        key: key
      properties:
        count:
          description: number of articles matching this filter value
          title: count
          type: integer
        displayName:
          title: displayName
          type: string
        key:
          title: key
          type: string
      required:
      - count
      - displayName
      - key
      title: Facet-Value
      type: object
    Facets:
      description: Zalando API Facets Schema
      items:
        $ref: '#/components/schemas/Facet'
      minItems: 0
      type: array
    Filter:
      description: Zalando API Filter Schema
      example:
        values:
        - displayName: displayName
          key: key
        - displayName: displayName
          key: key
        name: name
        multiValue: true
        type: SKU
      properties:
        multiValue:
          description: can this filter be used multiple times with different values
            in one search request
          title: multiValue
          type: boolean
        name:
          description: The unique name for a filter
          title: name
          type: string
        type:
          description: filter enum types
          enum:
          - SKU
          - KEY
          - ENUM
          - STRING
          - RANGE
          title: type
          type: string
        values:
          description: only if type is 'enum' this list contains all possible filter
            values
          items:
            $ref: '#/components/schemas/Filter-Value'
          minItems: 0
          title: values
          type: array
      required:
      - multiValue
      - name
      - type
      - values
      title: Filter
      type: object
    Filter-Value:
      description: Zalando API FilterValue Schema
      example:
        displayName: displayName
        key: key
      properties:
        displayName:
          description: translated display name
          title: displayName
          type: string
        key:
          description: The key for a filterValue. Only unique within one filter
          title: key
          type: string
      required:
      - displayName
      - key
      title: Filter-Value
      type: object
    Filters:
      items:
        $ref: '#/components/schemas/Filter'
      minItems: 0
      type: array
    Page:
      description: wrapper object for paged responses
      discriminator:
        propertyName: content
      properties:
        content:
          description: page content
          items:
            type: object
          minItems: 0
          title: content
          type: array
        page:
          description: page number
          title: page
          type: integer
        size:
          description: total number of elements in a page
          title: size
          type: integer
        totalElements:
          description: total elements in the response
          title: totalElements
          type: integer
        totalPages:
          description: total number of pages in the response
          title: totalPages
          type: integer
      required:
      - content
      - page
      - size
      - totalElements
      - totalPages
      title: Page
      type: object
    Recommendations:
      description: Zalando API Recommendations Schema
      items:
        $ref: '#/components/schemas/Recommendations-Article'
      minItems: 0
      type: array
    Recommendations-Article:
      description: Zalando API Recommendation Article Schema
      example:
        modelId: modelId
        name: name
        id: id
        media:
          images:
          - smallUrl: https://openapi-generator.tech
            mediumHdUrl: https://openapi-generator.tech
            mediumUrl: https://openapi-generator.tech
            orderNumber: 5
            thumbnailHdUrl: https://openapi-generator.tech
            largeHdUrl: https://openapi-generator.tech
            smallHdUrl: https://openapi-generator.tech
            largeUrl: https://openapi-generator.tech
            type: type
          - smallUrl: https://openapi-generator.tech
            mediumHdUrl: https://openapi-generator.tech
            mediumUrl: https://openapi-generator.tech
            orderNumber: 5
            thumbnailHdUrl: https://openapi-generator.tech
            largeHdUrl: https://openapi-generator.tech
            smallHdUrl: https://openapi-generator.tech
            largeUrl: https://openapi-generator.tech
            type: type
        shopUrl: shopUrl
      properties:
        id:
          title: id
          type: string
        media:
          $ref: '#/components/schemas/Article-Media'
        modelId:
          title: modelId
          type: string
        name:
          title: name
          type: string
        shopUrl:
          title: shopUrl
          type: string
      required:
      - id
      - media
      - modelId
      - name
      - shopUrl
      title: Recommendations-Article
      type: object
    Article_Review_articleSizeRatings:
      description: ""
      example:
        CHEST: 2
        SHOE_WIDTH: 1
        COLLAR_SIZE: 9
        OVERALL: 1
        CUP_SIZE: 3
        LENGTH: 7
        BOOTLEG_WIDTH: 5
        SHOULDERS: 1
        SLEEVES: 6
        LEG_FIT: 4
        CHEST_GIRTH: 7
        HIPS_OR_REAR: 2
      properties:
        BOOTLEG_WIDTH:
          title: BOOTLEG_WIDTH
          type: integer
        CHEST:
          title: CHEST
          type: integer
        CHEST_GIRTH:
          title: CHEST_GIRTH
          type: integer
        COLLAR_SIZE:
          title: COLLAR_SIZE
          type: integer
        CUP_SIZE:
          title: CUP_SIZE
          type: integer
        HIPS_OR_REAR:
          title: HIPS_OR_REAR
          type: integer
        LEG_FIT:
          title: LEG_FIT
          type: integer
        LENGTH:
          title: LENGTH
          type: integer
        OVERALL:
          title: OVERALL
          type: integer
        SHOE_WIDTH:
          title: SHOE_WIDTH
          type: integer
        SHOULDERS:
          title: SHOULDERS
          type: integer
        SLEEVES:
          title: SLEEVES
          type: integer
      title: Article_Review_articleSizeRatings
      type: object
    Article_Reviews_Summary_articleSizeRatings:
      description: size rating of the article
      example:
        CHEST: 2.3021358869347655
        SHOE_WIDTH: 1.0246457001441578
        COLLAR_SIZE: 9.301444243932576
        OVERALL: 1.2315135367772556
        CUP_SIZE: 3.616076749251911
        LENGTH: 7.386281948385884
        BOOTLEG_WIDTH: 5.637376656633329
        SHOULDERS: 1.4894159098541704
        SLEEVES: 6.84685269835264
        LEG_FIT: 4.145608029883936
        CHEST_GIRTH: 7.061401241503109
        HIPS_OR_REAR: 2.027123023002322
      properties:
        BOOTLEG_WIDTH:
          title: BOOTLEG_WIDTH
          type: number
        CHEST:
          title: CHEST
          type: number
        CHEST_GIRTH:
          title: CHEST_GIRTH
          type: number
        COLLAR_SIZE:
          title: COLLAR_SIZE
          type: number
        CUP_SIZE:
          title: CUP_SIZE
          type: number
        HIPS_OR_REAR:
          title: HIPS_OR_REAR
          type: number
        LEG_FIT:
          title: LEG_FIT
          type: number
        LENGTH:
          title: LENGTH
          type: number
        OVERALL:
          title: OVERALL
          type: number
        SHOE_WIDTH:
          title: SHOE_WIDTH
          type: number
        SHOULDERS:
          title: SHOULDERS
          type: number
        SLEEVES:
          title: SLEEVES
          type: number
      title: Article_Reviews_Summary_articleSizeRatings
      type: object
    Article_Reviews_Summary_starRatingDistribution:
      description: start rating distribution of the article
      example:
        "1": 9
        "2": 9
        "3": 6
        "4": 8
        "5": 9
      properties:
        "1":
          title: "1"
          type: integer
        "2":
          title: "2"
          type: integer
        "3":
          title: "3"
          type: integer
        "4":
          title: "4"
          type: integer
        "5":
          title: "5"
          type: integer
      required:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      title: Article_Reviews_Summary_starRatingDistribution
      type: object
x-original-swagger-version: "2.0"
