/**
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ArticleMedia from './ArticleMedia';

/**
 * The RecommendationsArticle model module.
 * @module model/RecommendationsArticle
 * @version v1.0
 */
class RecommendationsArticle {
    /**
     * Constructs a new <code>RecommendationsArticle</code>.
     * Zalando API Recommendation Article Schema
     * @alias module:model/RecommendationsArticle
     * @param id {String} 
     * @param media {module:model/ArticleMedia} 
     * @param modelId {String} 
     * @param name {String} 
     * @param shopUrl {String} 
     */
    constructor(id, media, modelId, name, shopUrl) { 
        
        RecommendationsArticle.initialize(this, id, media, modelId, name, shopUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, media, modelId, name, shopUrl) { 
        obj['id'] = id;
        obj['media'] = media;
        obj['modelId'] = modelId;
        obj['name'] = name;
        obj['shopUrl'] = shopUrl;
    }

    /**
     * Constructs a <code>RecommendationsArticle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecommendationsArticle} obj Optional instance to populate.
     * @return {module:model/RecommendationsArticle} The populated <code>RecommendationsArticle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecommendationsArticle();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ArticleMedia.constructFromObject(data['media']);
            }
            if (data.hasOwnProperty('modelId')) {
                obj['modelId'] = ApiClient.convertToType(data['modelId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('shopUrl')) {
                obj['shopUrl'] = ApiClient.convertToType(data['shopUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecommendationsArticle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecommendationsArticle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RecommendationsArticle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `media`
        if (data['media']) { // data not null
          ArticleMedia.validateJSON(data['media']);
        }
        // ensure the json data is a string
        if (data['modelId'] && !(typeof data['modelId'] === 'string' || data['modelId'] instanceof String)) {
            throw new Error("Expected the field `modelId` to be a primitive type in the JSON string but got " + data['modelId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['shopUrl'] && !(typeof data['shopUrl'] === 'string' || data['shopUrl'] instanceof String)) {
            throw new Error("Expected the field `shopUrl` to be a primitive type in the JSON string but got " + data['shopUrl']);
        }

        return true;
    }


}

RecommendationsArticle.RequiredProperties = ["id", "media", "modelId", "name", "shopUrl"];

/**
 * @member {String} id
 */
RecommendationsArticle.prototype['id'] = undefined;

/**
 * @member {module:model/ArticleMedia} media
 */
RecommendationsArticle.prototype['media'] = undefined;

/**
 * @member {String} modelId
 */
RecommendationsArticle.prototype['modelId'] = undefined;

/**
 * @member {String} name
 */
RecommendationsArticle.prototype['name'] = undefined;

/**
 * @member {String} shopUrl
 */
RecommendationsArticle.prototype['shopUrl'] = undefined;






export default RecommendationsArticle;

