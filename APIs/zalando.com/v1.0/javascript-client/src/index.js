/**
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Article from './model/Article';
import ArticleAttribute from './model/ArticleAttribute';
import ArticleImage from './model/ArticleImage';
import ArticleMedia from './model/ArticleMedia';
import ArticlePrice from './model/ArticlePrice';
import ArticleReview from './model/ArticleReview';
import ArticleReviewArticleSizeRatings from './model/ArticleReviewArticleSizeRatings';
import ArticleReviews from './model/ArticleReviews';
import ArticleReviewsSummaries from './model/ArticleReviewsSummaries';
import ArticleReviewsSummary from './model/ArticleReviewsSummary';
import ArticleReviewsSummaryArticleSizeRatings from './model/ArticleReviewsSummaryArticleSizeRatings';
import ArticleReviewsSummaryStarRatingDistribution from './model/ArticleReviewsSummaryStarRatingDistribution';
import ArticleUnit from './model/ArticleUnit';
import Articles from './model/Articles';
import Brand from './model/Brand';
import BrandFamily from './model/BrandFamily';
import Brands from './model/Brands';
import Categories from './model/Categories';
import Category from './model/Category';
import Domain from './model/Domain';
import ErrorDetail from './model/ErrorDetail';
import ErrorMessage from './model/ErrorMessage';
import Facet from './model/Facet';
import FacetValue from './model/FacetValue';
import Filter from './model/Filter';
import FilterValue from './model/FilterValue';
import Page from './model/Page';
import RecommendationsArticle from './model/RecommendationsArticle';
import ArticlesApi from './api/ArticlesApi';
import BrandsApi from './api/BrandsApi';
import CategoriesApi from './api/CategoriesApi';
import DomainsApi from './api/DomainsApi';
import FacetsApi from './api/FacetsApi';
import FiltersApi from './api/FiltersApi';
import RecommendationsApi from './api/RecommendationsApi';


/**
* The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ZalandoShop = require('index'); // See note below*.
* var xxxSvc = new ZalandoShop.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ZalandoShop.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ZalandoShop.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ZalandoShop.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Article model constructor.
     * @property {module:model/Article}
     */
    Article,

    /**
     * The ArticleAttribute model constructor.
     * @property {module:model/ArticleAttribute}
     */
    ArticleAttribute,

    /**
     * The ArticleImage model constructor.
     * @property {module:model/ArticleImage}
     */
    ArticleImage,

    /**
     * The ArticleMedia model constructor.
     * @property {module:model/ArticleMedia}
     */
    ArticleMedia,

    /**
     * The ArticlePrice model constructor.
     * @property {module:model/ArticlePrice}
     */
    ArticlePrice,

    /**
     * The ArticleReview model constructor.
     * @property {module:model/ArticleReview}
     */
    ArticleReview,

    /**
     * The ArticleReviewArticleSizeRatings model constructor.
     * @property {module:model/ArticleReviewArticleSizeRatings}
     */
    ArticleReviewArticleSizeRatings,

    /**
     * The ArticleReviews model constructor.
     * @property {module:model/ArticleReviews}
     */
    ArticleReviews,

    /**
     * The ArticleReviewsSummaries model constructor.
     * @property {module:model/ArticleReviewsSummaries}
     */
    ArticleReviewsSummaries,

    /**
     * The ArticleReviewsSummary model constructor.
     * @property {module:model/ArticleReviewsSummary}
     */
    ArticleReviewsSummary,

    /**
     * The ArticleReviewsSummaryArticleSizeRatings model constructor.
     * @property {module:model/ArticleReviewsSummaryArticleSizeRatings}
     */
    ArticleReviewsSummaryArticleSizeRatings,

    /**
     * The ArticleReviewsSummaryStarRatingDistribution model constructor.
     * @property {module:model/ArticleReviewsSummaryStarRatingDistribution}
     */
    ArticleReviewsSummaryStarRatingDistribution,

    /**
     * The ArticleUnit model constructor.
     * @property {module:model/ArticleUnit}
     */
    ArticleUnit,

    /**
     * The Articles model constructor.
     * @property {module:model/Articles}
     */
    Articles,

    /**
     * The Brand model constructor.
     * @property {module:model/Brand}
     */
    Brand,

    /**
     * The BrandFamily model constructor.
     * @property {module:model/BrandFamily}
     */
    BrandFamily,

    /**
     * The Brands model constructor.
     * @property {module:model/Brands}
     */
    Brands,

    /**
     * The Categories model constructor.
     * @property {module:model/Categories}
     */
    Categories,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The Domain model constructor.
     * @property {module:model/Domain}
     */
    Domain,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage,

    /**
     * The Facet model constructor.
     * @property {module:model/Facet}
     */
    Facet,

    /**
     * The FacetValue model constructor.
     * @property {module:model/FacetValue}
     */
    FacetValue,

    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter,

    /**
     * The FilterValue model constructor.
     * @property {module:model/FilterValue}
     */
    FilterValue,

    /**
     * The Page model constructor.
     * @property {module:model/Page}
     */
    Page,

    /**
     * The RecommendationsArticle model constructor.
     * @property {module:model/RecommendationsArticle}
     */
    RecommendationsArticle,

    /**
    * The ArticlesApi service constructor.
    * @property {module:api/ArticlesApi}
    */
    ArticlesApi,

    /**
    * The BrandsApi service constructor.
    * @property {module:api/BrandsApi}
    */
    BrandsApi,

    /**
    * The CategoriesApi service constructor.
    * @property {module:api/CategoriesApi}
    */
    CategoriesApi,

    /**
    * The DomainsApi service constructor.
    * @property {module:api/DomainsApi}
    */
    DomainsApi,

    /**
    * The FacetsApi service constructor.
    * @property {module:api/FacetsApi}
    */
    FacetsApi,

    /**
    * The FiltersApi service constructor.
    * @property {module:api/FiltersApi}
    */
    FiltersApi,

    /**
    * The RecommendationsApi service constructor.
    * @property {module:api/RecommendationsApi}
    */
    RecommendationsApi
};
