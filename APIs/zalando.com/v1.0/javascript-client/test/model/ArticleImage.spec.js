/**
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ZalandoShop);
  }
}(this, function(expect, ZalandoShop) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ZalandoShop.ArticleImage();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ArticleImage', function() {
    it('should create an instance of ArticleImage', function() {
      // uncomment below and update the code to test ArticleImage
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be.a(ZalandoShop.ArticleImage);
    });

    it('should have the property largeHdUrl (base name: "largeHdUrl")', function() {
      // uncomment below and update the code to test the property largeHdUrl
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

    it('should have the property largeUrl (base name: "largeUrl")', function() {
      // uncomment below and update the code to test the property largeUrl
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

    it('should have the property mediumHdUrl (base name: "mediumHdUrl")', function() {
      // uncomment below and update the code to test the property mediumHdUrl
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

    it('should have the property mediumUrl (base name: "mediumUrl")', function() {
      // uncomment below and update the code to test the property mediumUrl
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

    it('should have the property orderNumber (base name: "orderNumber")', function() {
      // uncomment below and update the code to test the property orderNumber
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

    it('should have the property smallHdUrl (base name: "smallHdUrl")', function() {
      // uncomment below and update the code to test the property smallHdUrl
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

    it('should have the property smallUrl (base name: "smallUrl")', function() {
      // uncomment below and update the code to test the property smallUrl
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

    it('should have the property thumbnailHdUrl (base name: "thumbnailHdUrl")', function() {
      // uncomment below and update the code to test the property thumbnailHdUrl
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new ZalandoShop.ArticleImage();
      //expect(instance).to.be();
    });

  });

}));
