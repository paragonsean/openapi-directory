/**
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ZalandoShop);
  }
}(this, function(expect, ZalandoShop) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ZalandoShop.ArticleReview();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ArticleReview', function() {
    it('should create an instance of ArticleReview', function() {
      // uncomment below and update the code to test ArticleReview
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be.a(ZalandoShop.ArticleReview);
    });

    it('should have the property articleId (base name: "articleId")', function() {
      // uncomment below and update the code to test the property articleId
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property articleModelId (base name: "articleModelId")', function() {
      // uncomment below and update the code to test the property articleModelId
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property articleSizeRatings (base name: "articleSizeRatings")', function() {
      // uncomment below and update the code to test the property articleSizeRatings
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property customerCity (base name: "customerCity")', function() {
      // uncomment below and update the code to test the property customerCity
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property customerCountry (base name: "customerCountry")', function() {
      // uncomment below and update the code to test the property customerCountry
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property customerNickname (base name: "customerNickname")', function() {
      // uncomment below and update the code to test the property customerNickname
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property helpfulCount (base name: "helpfulCount")', function() {
      // uncomment below and update the code to test the property helpfulCount
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property rating (base name: "rating")', function() {
      // uncomment below and update the code to test the property rating
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property recommend (base name: "recommend")', function() {
      // uncomment below and update the code to test the property recommend
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property reviewId (base name: "reviewId")', function() {
      // uncomment below and update the code to test the property reviewId
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

    it('should have the property unhelpfulCount (base name: "unhelpfulCount")', function() {
      // uncomment below and update the code to test the property unhelpfulCount
      //var instance = new ZalandoShop.ArticleReview();
      //expect(instance).to.be();
    });

  });

}));
