/**
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendations_Article.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendations_Article::OAIRecommendations_Article(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendations_Article::OAIRecommendations_Article() {
    this->initializeModel();
}

OAIRecommendations_Article::~OAIRecommendations_Article() {}

void OAIRecommendations_Article::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_media_isSet = false;
    m_media_isValid = false;

    m_model_id_isSet = false;
    m_model_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_shop_url_isSet = false;
    m_shop_url_isValid = false;
}

void OAIRecommendations_Article::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecommendations_Article::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_media_isValid = ::OpenAPI::fromJsonValue(m_media, json[QString("media")]);
    m_media_isSet = !json[QString("media")].isNull() && m_media_isValid;

    m_model_id_isValid = ::OpenAPI::fromJsonValue(m_model_id, json[QString("modelId")]);
    m_model_id_isSet = !json[QString("modelId")].isNull() && m_model_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_shop_url_isValid = ::OpenAPI::fromJsonValue(m_shop_url, json[QString("shopUrl")]);
    m_shop_url_isSet = !json[QString("shopUrl")].isNull() && m_shop_url_isValid;
}

QString OAIRecommendations_Article::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecommendations_Article::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_media.isSet()) {
        obj.insert(QString("media"), ::OpenAPI::toJsonValue(m_media));
    }
    if (m_model_id_isSet) {
        obj.insert(QString("modelId"), ::OpenAPI::toJsonValue(m_model_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_shop_url_isSet) {
        obj.insert(QString("shopUrl"), ::OpenAPI::toJsonValue(m_shop_url));
    }
    return obj;
}

QString OAIRecommendations_Article::getId() const {
    return m_id;
}
void OAIRecommendations_Article::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIRecommendations_Article::is_id_Set() const{
    return m_id_isSet;
}

bool OAIRecommendations_Article::is_id_Valid() const{
    return m_id_isValid;
}

OAIArticle_Media OAIRecommendations_Article::getMedia() const {
    return m_media;
}
void OAIRecommendations_Article::setMedia(const OAIArticle_Media &media) {
    m_media = media;
    m_media_isSet = true;
}

bool OAIRecommendations_Article::is_media_Set() const{
    return m_media_isSet;
}

bool OAIRecommendations_Article::is_media_Valid() const{
    return m_media_isValid;
}

QString OAIRecommendations_Article::getModelId() const {
    return m_model_id;
}
void OAIRecommendations_Article::setModelId(const QString &model_id) {
    m_model_id = model_id;
    m_model_id_isSet = true;
}

bool OAIRecommendations_Article::is_model_id_Set() const{
    return m_model_id_isSet;
}

bool OAIRecommendations_Article::is_model_id_Valid() const{
    return m_model_id_isValid;
}

QString OAIRecommendations_Article::getName() const {
    return m_name;
}
void OAIRecommendations_Article::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRecommendations_Article::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRecommendations_Article::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRecommendations_Article::getShopUrl() const {
    return m_shop_url;
}
void OAIRecommendations_Article::setShopUrl(const QString &shop_url) {
    m_shop_url = shop_url;
    m_shop_url_isSet = true;
}

bool OAIRecommendations_Article::is_shop_url_Set() const{
    return m_shop_url_isSet;
}

bool OAIRecommendations_Article::is_shop_url_Valid() const{
    return m_shop_url_isValid;
}

bool OAIRecommendations_Article::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shop_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecommendations_Article::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_media_isValid && m_model_id_isValid && m_name_isValid && m_shop_url_isValid && true;
}

} // namespace OpenAPI
