/**
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBrand.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBrand::OAIBrand(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBrand::OAIBrand() {
    this->initializeModel();
}

OAIBrand::~OAIBrand() {}

void OAIBrand::initializeModel() {

    m_brand_family_isSet = false;
    m_brand_family_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_logo_large_url_isSet = false;
    m_logo_large_url_isValid = false;

    m_logo_url_isSet = false;
    m_logo_url_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_shop_url_isSet = false;
    m_shop_url_isValid = false;
}

void OAIBrand::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBrand::fromJsonObject(QJsonObject json) {

    m_brand_family_isValid = ::OpenAPI::fromJsonValue(m_brand_family, json[QString("brandFamily")]);
    m_brand_family_isSet = !json[QString("brandFamily")].isNull() && m_brand_family_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_logo_large_url_isValid = ::OpenAPI::fromJsonValue(m_logo_large_url, json[QString("logoLargeUrl")]);
    m_logo_large_url_isSet = !json[QString("logoLargeUrl")].isNull() && m_logo_large_url_isValid;

    m_logo_url_isValid = ::OpenAPI::fromJsonValue(m_logo_url, json[QString("logoUrl")]);
    m_logo_url_isSet = !json[QString("logoUrl")].isNull() && m_logo_url_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_shop_url_isValid = ::OpenAPI::fromJsonValue(m_shop_url, json[QString("shopUrl")]);
    m_shop_url_isSet = !json[QString("shopUrl")].isNull() && m_shop_url_isValid;
}

QString OAIBrand::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBrand::asJsonObject() const {
    QJsonObject obj;
    if (m_brand_family.isSet()) {
        obj.insert(QString("brandFamily"), ::OpenAPI::toJsonValue(m_brand_family));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_logo_large_url_isSet) {
        obj.insert(QString("logoLargeUrl"), ::OpenAPI::toJsonValue(m_logo_large_url));
    }
    if (m_logo_url_isSet) {
        obj.insert(QString("logoUrl"), ::OpenAPI::toJsonValue(m_logo_url));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_shop_url_isSet) {
        obj.insert(QString("shopUrl"), ::OpenAPI::toJsonValue(m_shop_url));
    }
    return obj;
}

OAIBrandFamily OAIBrand::getBrandFamily() const {
    return m_brand_family;
}
void OAIBrand::setBrandFamily(const OAIBrandFamily &brand_family) {
    m_brand_family = brand_family;
    m_brand_family_isSet = true;
}

bool OAIBrand::is_brand_family_Set() const{
    return m_brand_family_isSet;
}

bool OAIBrand::is_brand_family_Valid() const{
    return m_brand_family_isValid;
}

QString OAIBrand::getKey() const {
    return m_key;
}
void OAIBrand::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIBrand::is_key_Set() const{
    return m_key_isSet;
}

bool OAIBrand::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIBrand::getLogoLargeUrl() const {
    return m_logo_large_url;
}
void OAIBrand::setLogoLargeUrl(const QString &logo_large_url) {
    m_logo_large_url = logo_large_url;
    m_logo_large_url_isSet = true;
}

bool OAIBrand::is_logo_large_url_Set() const{
    return m_logo_large_url_isSet;
}

bool OAIBrand::is_logo_large_url_Valid() const{
    return m_logo_large_url_isValid;
}

QString OAIBrand::getLogoUrl() const {
    return m_logo_url;
}
void OAIBrand::setLogoUrl(const QString &logo_url) {
    m_logo_url = logo_url;
    m_logo_url_isSet = true;
}

bool OAIBrand::is_logo_url_Set() const{
    return m_logo_url_isSet;
}

bool OAIBrand::is_logo_url_Valid() const{
    return m_logo_url_isValid;
}

QString OAIBrand::getName() const {
    return m_name;
}
void OAIBrand::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBrand::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBrand::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIBrand::getShopUrl() const {
    return m_shop_url;
}
void OAIBrand::setShopUrl(const QString &shop_url) {
    m_shop_url = shop_url;
    m_shop_url_isSet = true;
}

bool OAIBrand::is_shop_url_Set() const{
    return m_shop_url_isSet;
}

bool OAIBrand::is_shop_url_Valid() const{
    return m_shop_url_isValid;
}

bool OAIBrand::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_brand_family.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_large_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shop_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBrand::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_key_isValid && m_name_isValid && m_shop_url_isValid && true;
}

} // namespace OpenAPI
