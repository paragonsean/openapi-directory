/**
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArticles.h
 *
 * A simple container object that carries paging information as well as a list of articles on the &#x60;content&#x60; property.
 */

#ifndef OAIArticles_H
#define OAIArticles_H

#include <QJsonObject>

#include "OAIArticle.h"
#include "OAIPage.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArticle;

class OAIArticles : public OAIObject {
public:
    OAIArticles();
    OAIArticles(QString json);
    ~OAIArticles() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIArticle> getContent() const;
    void setContent(const QList<OAIArticle> &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    qint32 getTotalElements() const;
    void setTotalElements(const qint32 &total_elements);
    bool is_total_elements_Set() const;
    bool is_total_elements_Valid() const;

    qint32 getTotalPages() const;
    void setTotalPages(const qint32 &total_pages);
    bool is_total_pages_Set() const;
    bool is_total_pages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIArticle> m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    qint32 m_total_elements;
    bool m_total_elements_isSet;
    bool m_total_elements_isValid;

    qint32 m_total_pages;
    bool m_total_pages_isSet;
    bool m_total_pages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArticles)

#endif // OAIArticles_H
