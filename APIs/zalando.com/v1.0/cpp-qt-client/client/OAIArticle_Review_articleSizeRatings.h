/**
 * Zalando Shop
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * The version of the OpenAPI document: v1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArticle_Review_articleSizeRatings.h
 *
 * 
 */

#ifndef OAIArticle_Review_articleSizeRatings_H
#define OAIArticle_Review_articleSizeRatings_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIArticle_Review_articleSizeRatings : public OAIObject {
public:
    OAIArticle_Review_articleSizeRatings();
    OAIArticle_Review_articleSizeRatings(QString json);
    ~OAIArticle_Review_articleSizeRatings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBootlegWidth() const;
    void setBootlegWidth(const qint32 &bootleg_width);
    bool is_bootleg_width_Set() const;
    bool is_bootleg_width_Valid() const;

    qint32 getChest() const;
    void setChest(const qint32 &chest);
    bool is_chest_Set() const;
    bool is_chest_Valid() const;

    qint32 getChestGirth() const;
    void setChestGirth(const qint32 &chest_girth);
    bool is_chest_girth_Set() const;
    bool is_chest_girth_Valid() const;

    qint32 getCollarSize() const;
    void setCollarSize(const qint32 &collar_size);
    bool is_collar_size_Set() const;
    bool is_collar_size_Valid() const;

    qint32 getCupSize() const;
    void setCupSize(const qint32 &cup_size);
    bool is_cup_size_Set() const;
    bool is_cup_size_Valid() const;

    qint32 getHipsOrRear() const;
    void setHipsOrRear(const qint32 &hips_or_rear);
    bool is_hips_or_rear_Set() const;
    bool is_hips_or_rear_Valid() const;

    qint32 getLegFit() const;
    void setLegFit(const qint32 &leg_fit);
    bool is_leg_fit_Set() const;
    bool is_leg_fit_Valid() const;

    qint32 getLength() const;
    void setLength(const qint32 &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    qint32 getOverall() const;
    void setOverall(const qint32 &overall);
    bool is_overall_Set() const;
    bool is_overall_Valid() const;

    qint32 getShoeWidth() const;
    void setShoeWidth(const qint32 &shoe_width);
    bool is_shoe_width_Set() const;
    bool is_shoe_width_Valid() const;

    qint32 getShoulders() const;
    void setShoulders(const qint32 &shoulders);
    bool is_shoulders_Set() const;
    bool is_shoulders_Valid() const;

    qint32 getSleeves() const;
    void setSleeves(const qint32 &sleeves);
    bool is_sleeves_Set() const;
    bool is_sleeves_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_bootleg_width;
    bool m_bootleg_width_isSet;
    bool m_bootleg_width_isValid;

    qint32 m_chest;
    bool m_chest_isSet;
    bool m_chest_isValid;

    qint32 m_chest_girth;
    bool m_chest_girth_isSet;
    bool m_chest_girth_isValid;

    qint32 m_collar_size;
    bool m_collar_size_isSet;
    bool m_collar_size_isValid;

    qint32 m_cup_size;
    bool m_cup_size_isSet;
    bool m_cup_size_isValid;

    qint32 m_hips_or_rear;
    bool m_hips_or_rear_isSet;
    bool m_hips_or_rear_isValid;

    qint32 m_leg_fit;
    bool m_leg_fit_isSet;
    bool m_leg_fit_isValid;

    qint32 m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    qint32 m_overall;
    bool m_overall_isSet;
    bool m_overall_isValid;

    qint32 m_shoe_width;
    bool m_shoe_width_isSet;
    bool m_shoe_width_isValid;

    qint32 m_shoulders;
    bool m_shoulders_isSet;
    bool m_shoulders_isValid;

    qint32 m_sleeves;
    bool m_sleeves_isSet;
    bool m_sleeves_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArticle_Review_articleSizeRatings)

#endif // OAIArticle_Review_articleSizeRatings_H
