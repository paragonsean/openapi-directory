/**
 * EmailVerify
 * OTP email verification API by PayPI. <br/><br/> EmailVerify provides a simple way to verify email addresses. We send emails ourselves taking the burden of setting up email systems and tracking codes. <br/><br/> To learn more about this API, check out [EmailVerify documentation](https://emailverify.paypi.dev/) <br/><br/>  ## Authentication All requests to the EmailVerify API must be authenticated with an API Key. To get an API key, subscribe to the EmailVerify [here](https://app.paypi.dev/subscribe/c2VydmljZTo1OGQxZDNmMy05OWQ5LTQ3ZjYtOWJkNi02OWNkMTY1OGFmOWU=).  \\ Set your `Authorization` header to `Bearer YOUR-API-KEY`.  ``` curl -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer YOUR-API-KEY\" \\ ... ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@paypi.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CheckCodePost200Response from './model/CheckCodePost200Response';
import CheckCodePost401Response from './model/CheckCodePost401Response';
import CheckCodePost403Response from './model/CheckCodePost403Response';
import CheckCodePostRequest from './model/CheckCodePostRequest';
import SendCodePost200Response from './model/SendCodePost200Response';
import SendCodePost400Response from './model/SendCodePost400Response';
import SendCodePostRequest from './model/SendCodePostRequest';
import DefaultApi from './api/DefaultApi';


/**
* OTP email verification API by PayPI. &lt;br/&gt;&lt;br/&gt; EmailVerify provides a simple way to verify email addresses. We send emails ourselves taking the burden of setting up email systems and tracking codes. &lt;br/&gt;&lt;br/&gt; To learn more about this API, check out [EmailVerify documentation](https://emailverify.paypi.dev/) &lt;br/&gt;&lt;br/&gt;  ## Authentication All requests to the EmailVerify API must be authenticated with an API Key. To get an API key, subscribe to the EmailVerify [here](https://app.paypi.dev/subscribe/c2VydmljZTo1OGQxZDNmMy05OWQ5LTQ3ZjYtOWJkNi02OWNkMTY1OGFmOWU&#x3D;).  \\ Set your &#x60;Authorization&#x60; header to &#x60;Bearer YOUR-API-KEY&#x60;.  &#x60;&#x60;&#x60; curl -H \&quot;Content-Type: application/json\&quot; \\ -H \&quot;Authorization: Bearer YOUR-API-KEY\&quot; \\ ... &#x60;&#x60;&#x60; .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var EmailVerify = require('index'); // See note below*.
* var xxxSvc = new EmailVerify.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new EmailVerify.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new EmailVerify.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new EmailVerify.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CheckCodePost200Response model constructor.
     * @property {module:model/CheckCodePost200Response}
     */
    CheckCodePost200Response,

    /**
     * The CheckCodePost401Response model constructor.
     * @property {module:model/CheckCodePost401Response}
     */
    CheckCodePost401Response,

    /**
     * The CheckCodePost403Response model constructor.
     * @property {module:model/CheckCodePost403Response}
     */
    CheckCodePost403Response,

    /**
     * The CheckCodePostRequest model constructor.
     * @property {module:model/CheckCodePostRequest}
     */
    CheckCodePostRequest,

    /**
     * The SendCodePost200Response model constructor.
     * @property {module:model/SendCodePost200Response}
     */
    SendCodePost200Response,

    /**
     * The SendCodePost400Response model constructor.
     * @property {module:model/SendCodePost400Response}
     */
    SendCodePost400Response,

    /**
     * The SendCodePostRequest model constructor.
     * @property {module:model/SendCodePostRequest}
     */
    SendCodePostRequest,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
