/*
 * DropX
 * dropX.io API provides programmatic access to the e-commerce intelligence data.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LookUpApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public LookUpApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LookUpApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for productsLinkSearchGet
     * @param url URL must be a url encoded value (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsLinkSearchGetCall(String url, String providers, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/products/link-search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        if (providers != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("providers", providers));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call productsLinkSearchGetValidateBeforeCall(String url, String providers, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling productsLinkSearchGet(Async)");
        }

        return productsLinkSearchGetCall(url, providers, _callback);

    }

    /**
     * Search for similar products by providing a link to any e-commerce product.
     * Returns list of e-commerce product that are close to the one provided -- one from each provider
     * @param url URL must be a url encoded value (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public void productsLinkSearchGet(String url, String providers) throws ApiException {
        productsLinkSearchGetWithHttpInfo(url, providers);
    }

    /**
     * Search for similar products by providing a link to any e-commerce product.
     * Returns list of e-commerce product that are close to the one provided -- one from each provider
     * @param url URL must be a url encoded value (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> productsLinkSearchGetWithHttpInfo(String url, String providers) throws ApiException {
        okhttp3.Call localVarCall = productsLinkSearchGetValidateBeforeCall(url, providers, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search for similar products by providing a link to any e-commerce product. (asynchronously)
     * Returns list of e-commerce product that are close to the one provided -- one from each provider
     * @param url URL must be a url encoded value (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsLinkSearchGetAsync(String url, String providers, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = productsLinkSearchGetValidateBeforeCall(url, providers, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for productsLinkSearchV2Get
     * @param url URL must be a url encoded value (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsLinkSearchV2GetCall(String url, String providers, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/products/link-search-v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        if (providers != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("providers", providers));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call productsLinkSearchV2GetValidateBeforeCall(String url, String providers, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling productsLinkSearchV2Get(Async)");
        }

        return productsLinkSearchV2GetCall(url, providers, _callback);

    }

    /**
     * Search for similar products by providing a link to any e-commerce product.
     * Returns list of e-commerce product that are close to the one provided -- one from each provider
     * @param url URL must be a url encoded value (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public void productsLinkSearchV2Get(String url, String providers) throws ApiException {
        productsLinkSearchV2GetWithHttpInfo(url, providers);
    }

    /**
     * Search for similar products by providing a link to any e-commerce product.
     * Returns list of e-commerce product that are close to the one provided -- one from each provider
     * @param url URL must be a url encoded value (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> productsLinkSearchV2GetWithHttpInfo(String url, String providers) throws ApiException {
        okhttp3.Call localVarCall = productsLinkSearchV2GetValidateBeforeCall(url, providers, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search for similar products by providing a link to any e-commerce product. (asynchronously)
     * Returns list of e-commerce product that are close to the one provided -- one from each provider
     * @param url URL must be a url encoded value (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsLinkSearchV2GetAsync(String url, String providers, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = productsLinkSearchV2GetValidateBeforeCall(url, providers, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for productsSearchGet
     * @param term search terms giving any title of products that are sold online (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsSearchGetCall(String term, String providers, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/products/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (term != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("term", term));
        }

        if (providers != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("providers", providers));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call productsSearchGetValidateBeforeCall(String term, String providers, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'term' is set
        if (term == null) {
            throw new ApiException("Missing the required parameter 'term' when calling productsSearchGet(Async)");
        }

        return productsSearchGetCall(term, providers, _callback);

    }

    /**
     * Search for any product using title
     * Returns one unique result from every provider that dropx.io tracks
     * @param term search terms giving any title of products that are sold online (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public void productsSearchGet(String term, String providers) throws ApiException {
        productsSearchGetWithHttpInfo(term, providers);
    }

    /**
     * Search for any product using title
     * Returns one unique result from every provider that dropx.io tracks
     * @param term search terms giving any title of products that are sold online (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> productsSearchGetWithHttpInfo(String term, String providers) throws ApiException {
        okhttp3.Call localVarCall = productsSearchGetValidateBeforeCall(term, providers, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search for any product using title (asynchronously)
     * Returns one unique result from every provider that dropx.io tracks
     * @param term search terms giving any title of products that are sold online (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsSearchGetAsync(String term, String providers, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = productsSearchGetValidateBeforeCall(term, providers, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for productsSearchV2Get
     * @param term search terms giving any title of products that are sold online (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsSearchV2GetCall(String term, String providers, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/products/search-v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (term != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("term", term));
        }

        if (providers != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("providers", providers));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call productsSearchV2GetValidateBeforeCall(String term, String providers, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'term' is set
        if (term == null) {
            throw new ApiException("Missing the required parameter 'term' when calling productsSearchV2Get(Async)");
        }

        return productsSearchV2GetCall(term, providers, _callback);

    }

    /**
     * Search for any product using title
     * Returns one unique result from every provider that dropx.io tracks
     * @param term search terms giving any title of products that are sold online (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public void productsSearchV2Get(String term, String providers) throws ApiException {
        productsSearchV2GetWithHttpInfo(term, providers);
    }

    /**
     * Search for any product using title
     * Returns one unique result from every provider that dropx.io tracks
     * @param term search terms giving any title of products that are sold online (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> productsSearchV2GetWithHttpInfo(String term, String providers) throws ApiException {
        okhttp3.Call localVarCall = productsSearchV2GetValidateBeforeCall(term, providers, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search for any product using title (asynchronously)
     * Returns one unique result from every provider that dropx.io tracks
     * @param term search terms giving any title of products that are sold online (required)
     * @param providers A valid e commerce website link(eg. www.flipkart.com or http://www.amazon.in) by a &#39;,&#39; seperated values to filter response by required e-commerce providers (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of search details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 452 </td><td> Requested url parameter value is not a valid url </td><td>  -  </td></tr>
        <tr><td> 453 </td><td> Requested ip is not white listed app token assigned ip list </td><td>  -  </td></tr>
        <tr><td> 454 </td><td> App does not have any IP </td><td>  -  </td></tr>
        <tr><td> 455 </td><td> User requested with invalid app token </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> User reached maximum allow limit according to his plan </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Requested search does not have any response </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Requested search products api required parameter \&quot;term\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 460 </td><td> Requested similar search products api required parameter \&quot;url\&quot; is missing </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Requested search product api required \&quot;term\&quot; parameter does not have valid value or empty value passed </td><td>  -  </td></tr>
        <tr><td> 462 </td><td> Requested similar search product api required \&quot;url\&quot; parameter does not have valid url or empty value passed </td><td>  -  </td></tr>
        <tr><td> 463 </td><td> Error in processing search request in elastic search </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> some unexpected error raised in processing user request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsSearchV2GetAsync(String term, String providers, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = productsSearchV2GetValidateBeforeCall(term, providers, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for productsTitleSearchGet
     * @param term search terms giving any title of products that are sold online (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of product details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> We are sorry, You have reached your limit </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Oops...! we don\\&#39;t have enough data to serve your request </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Oops...! Missing reqired \&quot;term\&quot; parameter to serve your request </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Oops...! Required \&quot;term\&quot; parameter should not be empty </td><td>  -  </td></tr>
        <tr><td> 464 </td><td> Error in finding default plan </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> Unexpected error occurred while processing your request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsTitleSearchGetCall(String term, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/products/title-search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (term != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("term", term));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call productsTitleSearchGetValidateBeforeCall(String term, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'term' is set
        if (term == null) {
            throw new ApiException("Missing the required parameter 'term' when calling productsTitleSearchGet(Async)");
        }

        return productsTitleSearchGetCall(term, _callback);

    }

    /**
     * Search for any product using title
     * Returns list of product ids
     * @param term search terms giving any title of products that are sold online (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of product details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> We are sorry, You have reached your limit </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Oops...! we don\\&#39;t have enough data to serve your request </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Oops...! Missing reqired \&quot;term\&quot; parameter to serve your request </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Oops...! Required \&quot;term\&quot; parameter should not be empty </td><td>  -  </td></tr>
        <tr><td> 464 </td><td> Error in finding default plan </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> Unexpected error occurred while processing your request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public void productsTitleSearchGet(String term) throws ApiException {
        productsTitleSearchGetWithHttpInfo(term);
    }

    /**
     * Search for any product using title
     * Returns list of product ids
     * @param term search terms giving any title of products that are sold online (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of product details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> We are sorry, You have reached your limit </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Oops...! we don\\&#39;t have enough data to serve your request </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Oops...! Missing reqired \&quot;term\&quot; parameter to serve your request </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Oops...! Required \&quot;term\&quot; parameter should not be empty </td><td>  -  </td></tr>
        <tr><td> 464 </td><td> Error in finding default plan </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> Unexpected error occurred while processing your request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> productsTitleSearchGetWithHttpInfo(String term) throws ApiException {
        okhttp3.Call localVarCall = productsTitleSearchGetValidateBeforeCall(term, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search for any product using title (asynchronously)
     * Returns list of product ids
     * @param term search terms giving any title of products that are sold online (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of product details </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Invalid authentication </td><td>  -  </td></tr>
        <tr><td> 456 </td><td> We are sorry, You have reached your limit </td><td>  -  </td></tr>
        <tr><td> 458 </td><td> Oops...! we don\\&#39;t have enough data to serve your request </td><td>  -  </td></tr>
        <tr><td> 459 </td><td> Oops...! Missing reqired \&quot;term\&quot; parameter to serve your request </td><td>  -  </td></tr>
        <tr><td> 461 </td><td> Oops...! Required \&quot;term\&quot; parameter should not be empty </td><td>  -  </td></tr>
        <tr><td> 464 </td><td> Error in finding default plan </td><td>  -  </td></tr>
        <tr><td> 490 </td><td> Unexpected error occurred while processing your request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> internal server error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call productsTitleSearchGetAsync(String term, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = productsTitleSearchGetValidateBeforeCall(term, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
