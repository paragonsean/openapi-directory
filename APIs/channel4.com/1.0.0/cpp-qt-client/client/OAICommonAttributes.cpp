/**
 * Channel 4 API
 * This is the place to come for all the technical details you need to power your applications with Channel 4's deep programmes data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer@channel4.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommonAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommonAttributes::OAICommonAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommonAttributes::OAICommonAttributes() {
    this->initializeModel();
}

OAICommonAttributes::~OAICommonAttributes() {}

void OAICommonAttributes::initializeModel() {

    m_xmlbase_isSet = false;
    m_xmlbase_isValid = false;

    m_xmllang_isSet = false;
    m_xmllang_isValid = false;
}

void OAICommonAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommonAttributes::fromJsonObject(QJsonObject json) {

    m_xmlbase_isValid = ::OpenAPI::fromJsonValue(m_xmlbase, json[QString("xml:base")]);
    m_xmlbase_isSet = !json[QString("xml:base")].isNull() && m_xmlbase_isValid;

    m_xmllang_isValid = ::OpenAPI::fromJsonValue(m_xmllang, json[QString("xml:lang")]);
    m_xmllang_isSet = !json[QString("xml:lang")].isNull() && m_xmllang_isValid;
}

QString OAICommonAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommonAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_xmlbase_isSet) {
        obj.insert(QString("xml:base"), ::OpenAPI::toJsonValue(m_xmlbase));
    }
    if (m_xmllang_isSet) {
        obj.insert(QString("xml:lang"), ::OpenAPI::toJsonValue(m_xmllang));
    }
    return obj;
}

QString OAICommonAttributes::getXmlbase() const {
    return m_xmlbase;
}
void OAICommonAttributes::setXmlbase(const QString &xmlbase) {
    m_xmlbase = xmlbase;
    m_xmlbase_isSet = true;
}

bool OAICommonAttributes::is_xmlbase_Set() const{
    return m_xmlbase_isSet;
}

bool OAICommonAttributes::is_xmlbase_Valid() const{
    return m_xmlbase_isValid;
}

QString OAICommonAttributes::getXmllang() const {
    return m_xmllang;
}
void OAICommonAttributes::setXmllang(const QString &xmllang) {
    m_xmllang = xmllang;
    m_xmllang_isSet = true;
}

bool OAICommonAttributes::is_xmllang_Set() const{
    return m_xmllang_isSet;
}

bool OAICommonAttributes::is_xmllang_Valid() const{
    return m_xmllang_isValid;
}

bool OAICommonAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_xmlbase_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_xmllang_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommonAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
