/**
 * Channel 4 API
 * This is the place to come for all the technical details you need to power your applications with Channel 4's deep programmes data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer@channel4.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKnownRelCodeType.h
 *
 * alternate: The value \&quot;alternate\&quot; signifies that the IRI in the value of the href attribute identifies an alternate version of the resource described by the containing element.related: The value \&quot;related\&quot; signifies that the IRI in the value of the href attribute identifies a resource related to the resource described by the containing element. For example, the feed for a site that discusses the performance of the search engine at \&quot;http://search.example.com\&quot; might contain, as a child of atom:feed. An identical link might appear as a child of any atom:entry whose content contains a discussion of that same search engine.self: The value \&quot;self\&quot; signifies that the IRI in the value of the href attribute identifies a resource equivalent to the containing element.enclosure: The value \&quot;enclosure\&quot; signifies that the IRI in the value of the href attribute identifies a related resource that is potentially large in size and might require special handling. For atom:link elements with rel&#x3D;\&quot;enclosure\&quot;, the length attribute SHOULD be provided.via: The value \&quot;via\&quot; signifies that the IRI in the value of the href attribute identifies a resource that is the source of the information provided in the containing element.
 */

#ifndef OAIKnownRelCodeType_H
#define OAIKnownRelCodeType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKnownRelCodeType : public OAIObject {
public:
    OAIKnownRelCodeType();
    OAIKnownRelCodeType(QString json);
    ~OAIKnownRelCodeType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKnownRelCodeType)

#endif // OAIKnownRelCodeType_H
