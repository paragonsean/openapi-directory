/*
 * Channel 4 API
 * This is the place to come for all the technical details you need to power your applications with Channel 4's deep programmes data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer@channel4.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Atom;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiscoveryresourcesApi
 */
@Disabled
public class DiscoveryresourcesApiTest {

    private final DiscoveryresourcesApi api = new DiscoveryresourcesApi();

    /**
     * A to Z Landing Feed
     *
     * Lists Channel 4 programmes alphabetically from A to Z, providing the same    functionality and information as is available in the A to Z section of the    Channel 4 Programmes page, http://www.channel4.com/programmes.    http://api.channel4.com/pmlsd/atoz.atom    http://api.channel4.com/pmlsd/atoz.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aToZLandingFeedTest() throws ApiException {
        String platform = null;
        Atom response = api.aToZLandingFeed(platform);
        // TODO: test validations
    }

    /**
     * A to Z Letter Feed
     *
     * Lists Channel 4 programmes whose names begin with the associated letter.    http://api.channel4.com/pmlsd/atoz/start_letter.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/atoz/a.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aToZLetterFeedTest() throws ApiException {
        String startLetter = null;
        String platform = null;
        Atom response = api.aToZLetterFeed(startLetter, platform);
        // TODO: test validations
    }

    /**
     * A to Z Letter Feed(2)
     *
     * Lists Channel 4 programmes whose names begin with the associated letter.    http://api.channel4.com/pmlsd/atoz/start_letter/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/atoz/a.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aToZLetterFeed2Test() throws ApiException {
        String startLetter = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.aToZLetterFeed2(startLetter, pageno, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by TX Date
     *
     * Lists all Channel 4 programmes associated with the specified category (tag).     By default, the programmes are listed in order of Transmission (TX) Date,    with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTXDateTest() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.allProgrammesByTXDate(category, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by TX Date(2)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag).     By default, the programmes are listed in order of Transmission (TX) Date,    with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/channel/[channel].atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTXDate2Test() throws ApiException {
        String category = null;
        String channel = null;
        String platform = null;
        Atom response = api.allProgrammesByTXDate2(category, channel, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by TX Date(3)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag).     By default, the programmes are listed in order of Transmission (TX) Date,    with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/derived/ad.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTXDate3Test() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.allProgrammesByTXDate3(category, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by TX Date(4)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag).     By default, the programmes are listed in order of Transmission (TX) Date,    with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTXDate4Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.allProgrammesByTXDate4(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by TX Date(5)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag).     By default, the programmes are listed in order of Transmission (TX) Date,    with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTXDate5Test() throws ApiException {
        String category = null;
        String channel = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.allProgrammesByTXDate5(category, channel, pageno, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by TX Date(6)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag).     By default, the programmes are listed in order of Transmission (TX) Date,    with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/derived/ad/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTXDate6Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.allProgrammesByTXDate6(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by Title
     *
     * Lists all Channel 4 programmes associated with the specified category (tag),    alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/history/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTitleTest() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.allProgrammesByTitle(category, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by Title(2)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag),    alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/history/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTitle2Test() throws ApiException {
        String category = null;
        String channel = null;
        String platform = null;
        Atom response = api.allProgrammesByTitle2(category, channel, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by Title(3)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag),    alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/derived/ad/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/history/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTitle3Test() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.allProgrammesByTitle3(category, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by Title(4)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag),    alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/title/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/history/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTitle4Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.allProgrammesByTitle4(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by Title(5)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag),    alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/title/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/history/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTitle5Test() throws ApiException {
        String category = null;
        String channel = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.allProgrammesByTitle5(category, channel, pageno, platform);
        // TODO: test validations
    }

    /**
     * All Programmes by Title(6)
     *
     * Lists all Channel 4 programmes associated with the specified category (tag),    alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/derived/ad/title/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/history/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allProgrammesByTitle6Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.allProgrammesByTitle6(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * 4oD Browse by Date Feed
     *
     * Information of daily broadcast content available on 4oD, according to    broadcast date    http://api.channel4.com/pmlsd/4od/episode-list/date/[yyyy]/[mm]/[dd].atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/4od/episode-list/date/2010/11/28.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDBrowseByDateFeedTest() throws ApiException {
        String yyyy = null;
        String mm = null;
        String dd = null;
        String platform = null;
        Atom response = api.call4oDBrowseByDateFeed(yyyy, mm, dd, platform);
        // TODO: test validations
    }

    /**
     * 4oD Clips Catch Up Feed
     *
     * A feed containing metadata about short-form content relating to 4oD Episodes    recently added to 4oD based on linear transmission. The entries for the    Clips Landing Feed contain references to each short-form asset. It will    return up to 20 entries.    http://api.channel4.com/pmlsd/4od/recently-added/videos.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/4od/episode-list/videos.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDClipsCatchUpFeedTest() throws ApiException {
        String platform = null;
        Atom response = api.call4oDClipsCatchUpFeed(platform);
        // TODO: test validations
    }

    /**
     * 4oD Most Popular Episodes Feed
     *
     * Information of the most popular content available on 4oD, according to user    data driven.    http://api.channel4.com/pmlsd/4od/episode-list/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/4od/episode-list/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDMostPopularEpisodesFeedTest() throws ApiException {
        String platform = null;
        Atom response = api.call4oDMostPopularEpisodesFeed(platform);
        // TODO: test validations
    }

    /**
     * 4oD Popular All Brands Feed
     *
     * Lists all Channel 4 programmes available on 4oD by popularity considering    the data gathered within the last 7 days.    http://api.channel4.com/pmlsd/brands/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/brands/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDPopularAllBrandsFeedTest() throws ApiException {
        String platform = null;
        Atom response = api.call4oDPopularAllBrandsFeed(platform);
        // TODO: test validations
    }

    /**
     * 4oD Popular All Brands Feed(2)
     *
     * Lists all Channel 4 programmes available on 4oD by popularity considering    the data gathered within the last 7 days.    http://api.channel4.com/pmlsd/brands/4od/popular/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/brands/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDPopularAllBrandsFeed2Test() throws ApiException {
        Integer pageno = null;
        String platform = null;
        Atom response = api.call4oDPopularAllBrandsFeed2(pageno, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by TX Date
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag).By default, the programmes are listed in order of Transmission (TX)    Date, with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTXDateTest() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTXDate(category, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by TX Date(2)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag).By default, the programmes are listed in order of Transmission (TX)    Date, with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTXDate2Test() throws ApiException {
        String category = null;
        String channel = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTXDate2(category, channel, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by TX Date(3)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag).By default, the programmes are listed in order of Transmission (TX)    Date, with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/derived/ad/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTXDate3Test() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTXDate3(category, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by TX Date(4)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag).By default, the programmes are listed in order of Transmission (TX)    Date, with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/4od/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTXDate4Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTXDate4(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by TX Date(5)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag).By default, the programmes are listed in order of Transmission (TX)    Date, with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTXDate5Test() throws ApiException {
        String category = null;
        String channel = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTXDate5(category, channel, pageno, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by TX Date(6)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag).By default, the programmes are listed in order of Transmission (TX)    Date, with the most-recently-transmitted programmes listed first.    http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTXDate6Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTXDate6(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by Title
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag), alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/4od/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTitleTest() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTitle(category, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by Title(2)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag), alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTitle2Test() throws ApiException {
        String category = null;
        String channel = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTitle2(category, channel, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by Title(3)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag), alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTitle3Test() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTitle3(category, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by Title(4)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag), alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/4od/title/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTitle4Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTitle4(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by Title(5)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag), alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/title/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTitle5Test() throws ApiException {
        String category = null;
        String channel = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTitle5(category, channel, pageno, platform);
        // TODO: test validations
    }

    /**
     * 4oD Programmes by Title(6)
     *
     * Lists all Channel 4oD programmes associated with the specified category    (tag), alphanumerically in order of Title.    http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/title/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDProgrammesByTitle6Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.call4oDProgrammesByTitle6(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * 4oD Title All Brands Feed
     *
     * Lists all Channel 4 programmes available on 4oD.  By default, the programmes    are listed by title in alphabetical order (case unsensitive).    http://api.channel4.com/pmlsd/brands/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/brands/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDTitleAllBrandsFeedTest() throws ApiException {
        String platform = null;
        Atom response = api.call4oDTitleAllBrandsFeed(platform);
        // TODO: test validations
    }

    /**
     * 4oD Title All Brands Feed(2)
     *
     * Lists all Channel 4 programmes available on 4oD.  By default, the programmes    are listed by title in alphabetical order (case unsensitive).    http://api.channel4.com/pmlsd/brands/4od/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/brands/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void call4oDTitleAllBrandsFeed2Test() throws ApiException {
        Integer pageno = null;
        String platform = null;
        Atom response = api.call4oDTitleAllBrandsFeed2(pageno, platform);
        // TODO: test validations
    }

    /**
     * Categories Landing Feed
     *
     * Lists Channel 4 programmes by category (/ tag).    http://api.channel4.com/pmlsd/categories.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void categoriesLandingFeedTest() throws ApiException {
        String platform = null;
        Atom response = api.categoriesLandingFeed(platform);
        // TODO: test validations
    }

    /**
     * Collections Feed
     *
     * Collections are editorially controlled groups of brands, series, episodes or    other collections used for promotion and discovery of content. A SIMPLE    collection can contain an assortment of Brands, Series, Episodes or Freeform    items. A GROUP collection contains other collections.    http://api.channel4.com/pmlsd/collections/collection_name/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/collections/4od-home-promo/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collectionsFeedTest() throws ApiException {
        String collectionName = null;
        String platform = null;
        Atom response = api.collectionsFeed(collectionName, platform);
        // TODO: test validations
    }

    /**
     * Collections Feed(2)
     *
     * Collections are editorially controlled groups of brands, series, episodes or    other collections used for promotion and discovery of content. A SIMPLE    collection can contain an assortment of Brands, Series, Episodes or Freeform    items. A GROUP collection contains other collections.    http://api.channel4.com/pmlsd/collections/collection_name.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/collections/4od-home-promo/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collectionsFeed2Test() throws ApiException {
        String collectionName = null;
        String platform = null;
        Atom response = api.collectionsFeed2(collectionName, platform);
        // TODO: test validations
    }

    /**
     * Flattened Collection Feed
     *
     * The Flattened Collections Feed is only applicable for GROUP collections and    its purpose is mainly return 3 items (BRAND, SERIES or EPSIODE) of each of    the simple collections assigned to the GROUP.    http://api.channel4.com/pmlsd/collections/collection_name/flattened/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/collections/4od-home-promo/flattened/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void flattenedCollectionFeedTest() throws ApiException {
        String collectionName = null;
        String platform = null;
        Atom response = api.flattenedCollectionFeed(collectionName, platform);
        // TODO: test validations
    }

    /**
     * Flattened Collection Feed(2)
     *
     * The Flattened Collections Feed is only applicable for GROUP collections and    its purpose is mainly return 3 items (BRAND, SERIES or EPSIODE) of each of    the simple collections assigned to the GROUP.    http://api.channel4.com/pmlsd/collections/collection_name/flattened.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/collections/4od-home-promo/flattened/4od.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void flattenedCollectionFeed2Test() throws ApiException {
        String collectionName = null;
        String platform = null;
        Atom response = api.flattenedCollectionFeed2(collectionName, platform);
        // TODO: test validations
    }

    /**
     * Most Popular Brands Feed
     *
     * Lists all Channel 4oD most popular brands for the given category within the    last 7 days, in order of popularity.    http://api.channel4.com/pmlsd/categories/category/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mostPopularBrandsFeedTest() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.mostPopularBrandsFeed(category, platform);
        // TODO: test validations
    }

    /**
     * Most Popular Brands Feed(2)
     *
     * Lists all Channel 4oD most popular brands for the given category within the    last 7 days, in order of popularity.    http://api.channel4.com/pmlsd/categories/category/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mostPopularBrandsFeed2Test() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.mostPopularBrandsFeed2(category, platform);
        // TODO: test validations
    }

    /**
     * Most Popular Brands Feed(3)
     *
     * Lists all Channel 4oD most popular brands for the given category within the    last 7 days, in order of popularity.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mostPopularBrandsFeed3Test() throws ApiException {
        String category = null;
        String channel = null;
        String platform = null;
        Atom response = api.mostPopularBrandsFeed3(category, channel, platform);
        // TODO: test validations
    }

    /**
     * Most Popular Brands Feed(4)
     *
     * Lists all Channel 4oD most popular brands for the given category within the    last 7 days, in order of popularity.    http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mostPopularBrandsFeed4Test() throws ApiException {
        String category = null;
        String platform = null;
        Atom response = api.mostPopularBrandsFeed4(category, platform);
        // TODO: test validations
    }

    /**
     * Most Popular Brands Feed(5)
     *
     * Lists all Channel 4oD most popular brands for the given category within the    last 7 days, in order of popularity.    http://api.channel4.com/pmlsd/categories/category/4od/popular/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mostPopularBrandsFeed5Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.mostPopularBrandsFeed5(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * Most Popular Brands Feed(6)
     *
     * Lists all Channel 4oD most popular brands for the given category within the    last 7 days, in order of popularity.    http://api.channel4.com/pmlsd/categories/category/popular/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mostPopularBrandsFeed6Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.mostPopularBrandsFeed6(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * Most Popular Brands Feed(7)
     *
     * Lists all Channel 4oD most popular brands for the given category within the    last 7 days, in order of popularity.    http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/popular/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mostPopularBrandsFeed7Test() throws ApiException {
        String category = null;
        String channel = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.mostPopularBrandsFeed7(category, channel, pageno, platform);
        // TODO: test validations
    }

    /**
     * Most Popular Brands Feed(8)
     *
     * Lists all Channel 4oD most popular brands for the given category within the    last 7 days, in order of popularity.    http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/popular/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mostPopularBrandsFeed8Test() throws ApiException {
        String category = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.mostPopularBrandsFeed8(category, pageno, platform);
        // TODO: test validations
    }

    /**
     * Popular Brands Feed
     *
     * Lists all Channel 4 programmes by popularity considering the data gathered    within the last 7 days.    http://api.channel4.com/pmlsd/brands/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/brands/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void popularBrandsFeedTest() throws ApiException {
        String platform = null;
        Atom response = api.popularBrandsFeed(platform);
        // TODO: test validations
    }

    /**
     * Popular Brands Feed(2)
     *
     * Lists all Channel 4 programmes by popularity considering the data gathered    within the last 7 days.    http://api.channel4.com/pmlsd/brands/popular/page-{pageno}.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/brands/popular.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void popularBrandsFeed2Test() throws ApiException {
        Integer pageno = null;
        String platform = null;
        Atom response = api.popularBrandsFeed2(pageno, platform);
        // TODO: test validations
    }

    /**
     * Search Feed
     *
     * Lists all Channel 4 programmes where title (brand name) matching the search    term. Matches are made from the beginning of individual words in the title.    http://api.channel4.com/pmlsd/search.atom?q&#x3D;search-term&amp;apikey&#x3D;xxx    http://api.channel4.com/pmlsd/search.atom?q&#x3D;the+it+crowd&amp;apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchFeedTest() throws ApiException {
        String q = null;
        String platform = null;
        Atom response = api.searchFeed(q, platform);
        // TODO: test validations
    }

    /**
     * Search Feed(2)
     *
     * Lists all Channel 4 programmes where title (brand name) matching the search    term. Matches are made from the beginning of individual words in the title.    http://api.channel4.com/pmlsd/search/search-term.atom?apikey&#x3D;xxx    http://api.channel4.com/pmlsd/search.atom?q&#x3D;the+it+crowd&amp;apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchFeed2Test() throws ApiException {
        String q = null;
        String platform = null;
        Atom response = api.searchFeed2(q, platform);
        // TODO: test validations
    }

    /**
     * Search Feed(3)
     *
     * Lists all Channel 4 programmes where title (brand name) matching the search    term. Matches are made from the beginning of individual words in the title.    http://api.channel4.com/pmlsd/search/page-{pageno}.atom?q&#x3D;search-term&amp;apikey&#x3D;xxx    http://api.channel4.com/pmlsd/search.atom?q&#x3D;the+it+crowd&amp;apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchFeed3Test() throws ApiException {
        String q = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.searchFeed3(q, pageno, platform);
        // TODO: test validations
    }

    /**
     * Search Feed(4)
     *
     * Lists all Channel 4 programmes where title (brand name) matching the search    term. Matches are made from the beginning of individual words in the title.    http://api.channel4.com/pmlsd/search/search-term/page-{pageno}.atom?apikey&#x3D;xxx    http://api.channel4.com/pmlsd/search.atom?q&#x3D;the+it+crowd&amp;apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchFeed4Test() throws ApiException {
        String q = null;
        Integer pageno = null;
        String platform = null;
        Atom response = api.searchFeed4(q, pageno, platform);
        // TODO: test validations
    }

    /**
     * TV Listings Feed
     *
     * EPG Information of daily broadcast content aired per channels, according to    broadcast date    http://api.channel4.com/pmlsd/tv-listings/daily/[yyyy]/[mm]/[dd].atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/tv-listings/daily/2010/11/28.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tVListingsFeedTest() throws ApiException {
        String yyyy = null;
        String mm = null;
        String dd = null;
        String platform = null;
        Atom response = api.tVListingsFeed(yyyy, mm, dd, platform);
        // TODO: test validations
    }

    /**
     * TV Listings Feed(2)
     *
     * EPG Information of daily broadcast content aired per channels, according to    broadcast date    http://api.channel4.com/pmlsd/tv-listings/daily/[yyyy]/[mm]/[dd]/[channel].atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx    http://api.channel4.com/pmlsd/tv-listings/daily/2010/11/28.atom?apikey&#x3D;xxxxxxxxxxxxxxxxxxxxxxxx
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tVListingsFeed2Test() throws ApiException {
        String yyyy = null;
        String mm = null;
        String dd = null;
        String channel = null;
        String platform = null;
        Atom response = api.tVListingsFeed2(yyyy, mm, dd, channel, platform);
        // TODO: test validations
    }

}
