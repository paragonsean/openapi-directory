/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBudgetAnalysisPackage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBudgetAnalysisPackage::OAIBudgetAnalysisPackage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBudgetAnalysisPackage::OAIBudgetAnalysisPackage() {
    this->initializeModel();
}

OAIBudgetAnalysisPackage::~OAIBudgetAnalysisPackage() {}

void OAIBudgetAnalysisPackage::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_expense_isSet = false;
    m_expense_isValid = false;

    m_income_isSet = false;
    m_income_isValid = false;

    m_is_transfer_isSet = false;
    m_is_transfer_isValid = false;
}

void OAIBudgetAnalysisPackage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBudgetAnalysisPackage::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_expense_isValid = ::OpenAPI::fromJsonValue(m_expense, json[QString("expense")]);
    m_expense_isSet = !json[QString("expense")].isNull() && m_expense_isValid;

    m_income_isValid = ::OpenAPI::fromJsonValue(m_income, json[QString("income")]);
    m_income_isSet = !json[QString("income")].isNull() && m_income_isValid;

    m_is_transfer_isValid = ::OpenAPI::fromJsonValue(m_is_transfer, json[QString("is_transfer")]);
    m_is_transfer_isSet = !json[QString("is_transfer")].isNull() && m_is_transfer_isValid;
}

QString OAIBudgetAnalysisPackage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBudgetAnalysisPackage::asJsonObject() const {
    QJsonObject obj;
    if (m_category.isSet()) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_expense.isSet()) {
        obj.insert(QString("expense"), ::OpenAPI::toJsonValue(m_expense));
    }
    if (m_income.isSet()) {
        obj.insert(QString("income"), ::OpenAPI::toJsonValue(m_income));
    }
    if (m_is_transfer_isSet) {
        obj.insert(QString("is_transfer"), ::OpenAPI::toJsonValue(m_is_transfer));
    }
    return obj;
}

OAICategory OAIBudgetAnalysisPackage::getCategory() const {
    return m_category;
}
void OAIBudgetAnalysisPackage::setCategory(const OAICategory &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIBudgetAnalysisPackage::is_category_Set() const{
    return m_category_isSet;
}

bool OAIBudgetAnalysisPackage::is_category_Valid() const{
    return m_category_isValid;
}

OAIBudgetAnalysis OAIBudgetAnalysisPackage::getExpense() const {
    return m_expense;
}
void OAIBudgetAnalysisPackage::setExpense(const OAIBudgetAnalysis &expense) {
    m_expense = expense;
    m_expense_isSet = true;
}

bool OAIBudgetAnalysisPackage::is_expense_Set() const{
    return m_expense_isSet;
}

bool OAIBudgetAnalysisPackage::is_expense_Valid() const{
    return m_expense_isValid;
}

OAIBudgetAnalysis OAIBudgetAnalysisPackage::getIncome() const {
    return m_income;
}
void OAIBudgetAnalysisPackage::setIncome(const OAIBudgetAnalysis &income) {
    m_income = income;
    m_income_isSet = true;
}

bool OAIBudgetAnalysisPackage::is_income_Set() const{
    return m_income_isSet;
}

bool OAIBudgetAnalysisPackage::is_income_Valid() const{
    return m_income_isValid;
}

bool OAIBudgetAnalysisPackage::isIsTransfer() const {
    return m_is_transfer;
}
void OAIBudgetAnalysisPackage::setIsTransfer(const bool &is_transfer) {
    m_is_transfer = is_transfer;
    m_is_transfer_isSet = true;
}

bool OAIBudgetAnalysisPackage::is_is_transfer_Set() const{
    return m_is_transfer_isSet;
}

bool OAIBudgetAnalysisPackage::is_is_transfer_Valid() const{
    return m_is_transfer_isValid;
}

bool OAIBudgetAnalysisPackage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_expense.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_income.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_transfer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBudgetAnalysisPackage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
