/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_transactions__id__put_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_transactions__id__put_request::OAI_transactions__id__put_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_transactions__id__put_request::OAI_transactions__id__put_request() {
    this->initializeModel();
}

OAI_transactions__id__put_request::~OAI_transactions__id__put_request() {}

void OAI_transactions__id__put_request::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_category_id_isSet = false;
    m_category_id_isValid = false;

    m_cheque_number_isSet = false;
    m_cheque_number_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_is_transfer_isSet = false;
    m_is_transfer_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_memo_isSet = false;
    m_memo_isValid = false;

    m_needs_review_isSet = false;
    m_needs_review_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_payee_isSet = false;
    m_payee_isValid = false;
}

void OAI_transactions__id__put_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_transactions__id__put_request::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_category_id_isValid = ::OpenAPI::fromJsonValue(m_category_id, json[QString("category_id")]);
    m_category_id_isSet = !json[QString("category_id")].isNull() && m_category_id_isValid;

    m_cheque_number_isValid = ::OpenAPI::fromJsonValue(m_cheque_number, json[QString("cheque_number")]);
    m_cheque_number_isSet = !json[QString("cheque_number")].isNull() && m_cheque_number_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_is_transfer_isValid = ::OpenAPI::fromJsonValue(m_is_transfer, json[QString("is_transfer")]);
    m_is_transfer_isSet = !json[QString("is_transfer")].isNull() && m_is_transfer_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_memo_isValid = ::OpenAPI::fromJsonValue(m_memo, json[QString("memo")]);
    m_memo_isSet = !json[QString("memo")].isNull() && m_memo_isValid;

    m_needs_review_isValid = ::OpenAPI::fromJsonValue(m_needs_review, json[QString("needs_review")]);
    m_needs_review_isSet = !json[QString("needs_review")].isNull() && m_needs_review_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_payee_isValid = ::OpenAPI::fromJsonValue(m_payee, json[QString("payee")]);
    m_payee_isSet = !json[QString("payee")].isNull() && m_payee_isValid;
}

QString OAI_transactions__id__put_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_transactions__id__put_request::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_category_id_isSet) {
        obj.insert(QString("category_id"), ::OpenAPI::toJsonValue(m_category_id));
    }
    if (m_cheque_number_isSet) {
        obj.insert(QString("cheque_number"), ::OpenAPI::toJsonValue(m_cheque_number));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_is_transfer_isSet) {
        obj.insert(QString("is_transfer"), ::OpenAPI::toJsonValue(m_is_transfer));
    }
    if (m_labels_isSet) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_memo_isSet) {
        obj.insert(QString("memo"), ::OpenAPI::toJsonValue(m_memo));
    }
    if (m_needs_review_isSet) {
        obj.insert(QString("needs_review"), ::OpenAPI::toJsonValue(m_needs_review));
    }
    if (m_note_isSet) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_payee_isSet) {
        obj.insert(QString("payee"), ::OpenAPI::toJsonValue(m_payee));
    }
    return obj;
}

double OAI_transactions__id__put_request::getAmount() const {
    return m_amount;
}
void OAI_transactions__id__put_request::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAI_transactions__id__put_request::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAI_transactions__id__put_request::is_amount_Valid() const{
    return m_amount_isValid;
}

qint32 OAI_transactions__id__put_request::getCategoryId() const {
    return m_category_id;
}
void OAI_transactions__id__put_request::setCategoryId(const qint32 &category_id) {
    m_category_id = category_id;
    m_category_id_isSet = true;
}

bool OAI_transactions__id__put_request::is_category_id_Set() const{
    return m_category_id_isSet;
}

bool OAI_transactions__id__put_request::is_category_id_Valid() const{
    return m_category_id_isValid;
}

QString OAI_transactions__id__put_request::getChequeNumber() const {
    return m_cheque_number;
}
void OAI_transactions__id__put_request::setChequeNumber(const QString &cheque_number) {
    m_cheque_number = cheque_number;
    m_cheque_number_isSet = true;
}

bool OAI_transactions__id__put_request::is_cheque_number_Set() const{
    return m_cheque_number_isSet;
}

bool OAI_transactions__id__put_request::is_cheque_number_Valid() const{
    return m_cheque_number_isValid;
}

QString OAI_transactions__id__put_request::getDate() const {
    return m_date;
}
void OAI_transactions__id__put_request::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAI_transactions__id__put_request::is_date_Set() const{
    return m_date_isSet;
}

bool OAI_transactions__id__put_request::is_date_Valid() const{
    return m_date_isValid;
}

bool OAI_transactions__id__put_request::isIsTransfer() const {
    return m_is_transfer;
}
void OAI_transactions__id__put_request::setIsTransfer(const bool &is_transfer) {
    m_is_transfer = is_transfer;
    m_is_transfer_isSet = true;
}

bool OAI_transactions__id__put_request::is_is_transfer_Set() const{
    return m_is_transfer_isSet;
}

bool OAI_transactions__id__put_request::is_is_transfer_Valid() const{
    return m_is_transfer_isValid;
}

QString OAI_transactions__id__put_request::getLabels() const {
    return m_labels;
}
void OAI_transactions__id__put_request::setLabels(const QString &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAI_transactions__id__put_request::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAI_transactions__id__put_request::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAI_transactions__id__put_request::getMemo() const {
    return m_memo;
}
void OAI_transactions__id__put_request::setMemo(const QString &memo) {
    m_memo = memo;
    m_memo_isSet = true;
}

bool OAI_transactions__id__put_request::is_memo_Set() const{
    return m_memo_isSet;
}

bool OAI_transactions__id__put_request::is_memo_Valid() const{
    return m_memo_isValid;
}

bool OAI_transactions__id__put_request::isNeedsReview() const {
    return m_needs_review;
}
void OAI_transactions__id__put_request::setNeedsReview(const bool &needs_review) {
    m_needs_review = needs_review;
    m_needs_review_isSet = true;
}

bool OAI_transactions__id__put_request::is_needs_review_Set() const{
    return m_needs_review_isSet;
}

bool OAI_transactions__id__put_request::is_needs_review_Valid() const{
    return m_needs_review_isValid;
}

QString OAI_transactions__id__put_request::getNote() const {
    return m_note;
}
void OAI_transactions__id__put_request::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAI_transactions__id__put_request::is_note_Set() const{
    return m_note_isSet;
}

bool OAI_transactions__id__put_request::is_note_Valid() const{
    return m_note_isValid;
}

QString OAI_transactions__id__put_request::getPayee() const {
    return m_payee;
}
void OAI_transactions__id__put_request::setPayee(const QString &payee) {
    m_payee = payee;
    m_payee_isSet = true;
}

bool OAI_transactions__id__put_request::is_payee_Set() const{
    return m_payee_isSet;
}

bool OAI_transactions__id__put_request::is_payee_Valid() const{
    return m_payee_isValid;
}

bool OAI_transactions__id__put_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cheque_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_transfer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_memo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_needs_review_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payee_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_transactions__id__put_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
