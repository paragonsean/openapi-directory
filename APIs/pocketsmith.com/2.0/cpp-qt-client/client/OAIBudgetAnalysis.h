/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBudgetAnalysis.h
 *
 * 
 */

#ifndef OAIBudgetAnalysis_H
#define OAIBudgetAnalysis_H

#include <QJsonObject>

#include "OAIPeriod.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPeriod;

class OAIBudgetAnalysis : public OAIObject {
public:
    OAIBudgetAnalysis();
    OAIBudgetAnalysis(QString json);
    ~OAIBudgetAnalysis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAverageActualAmount() const;
    void setAverageActualAmount(const double &average_actual_amount);
    bool is_average_actual_amount_Set() const;
    bool is_average_actual_amount_Valid() const;

    double getAverageForecastAmount() const;
    void setAverageForecastAmount(const double &average_forecast_amount);
    bool is_average_forecast_amount_Set() const;
    bool is_average_forecast_amount_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QList<OAIPeriod> getPeriods() const;
    void setPeriods(const QList<OAIPeriod> &periods);
    bool is_periods_Set() const;
    bool is_periods_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    double getTotalActualAmount() const;
    void setTotalActualAmount(const double &total_actual_amount);
    bool is_total_actual_amount_Set() const;
    bool is_total_actual_amount_Valid() const;

    double getTotalForecastAmount() const;
    void setTotalForecastAmount(const double &total_forecast_amount);
    bool is_total_forecast_amount_Set() const;
    bool is_total_forecast_amount_Valid() const;

    double getTotalOverBy() const;
    void setTotalOverBy(const double &total_over_by);
    bool is_total_over_by_Set() const;
    bool is_total_over_by_Valid() const;

    double getTotalUnderBy() const;
    void setTotalUnderBy(const double &total_under_by);
    bool is_total_under_by_Set() const;
    bool is_total_under_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_average_actual_amount;
    bool m_average_actual_amount_isSet;
    bool m_average_actual_amount_isValid;

    double m_average_forecast_amount;
    bool m_average_forecast_amount_isSet;
    bool m_average_forecast_amount_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QList<OAIPeriod> m_periods;
    bool m_periods_isSet;
    bool m_periods_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    double m_total_actual_amount;
    bool m_total_actual_amount_isSet;
    bool m_total_actual_amount_isValid;

    double m_total_forecast_amount;
    bool m_total_forecast_amount_isSet;
    bool m_total_forecast_amount_isValid;

    double m_total_over_by;
    bool m_total_over_by_isSet;
    bool m_total_over_by_isValid;

    double m_total_under_by;
    bool m_total_under_by_isSet;
    bool m_total_under_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBudgetAnalysis)

#endif // OAIBudgetAnalysis_H
