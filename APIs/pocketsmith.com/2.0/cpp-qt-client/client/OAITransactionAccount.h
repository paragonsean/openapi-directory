/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionAccount.h
 *
 * 
 */

#ifndef OAITransactionAccount_H
#define OAITransactionAccount_H

#include <QJsonObject>

#include "OAIInstitution.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstitution;

class OAITransactionAccount : public OAIObject {
public:
    OAITransactionAccount();
    OAITransactionAccount(QString json);
    ~OAITransactionAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    double getCurrentBalance() const;
    void setCurrentBalance(const double &current_balance);
    bool is_current_balance_Set() const;
    bool is_current_balance_Valid() const;

    QString getCurrentBalanceDate() const;
    void setCurrentBalanceDate(const QString &current_balance_date);
    bool is_current_balance_date_Set() const;
    bool is_current_balance_date_Valid() const;

    double getCurrentBalanceExchangeRate() const;
    void setCurrentBalanceExchangeRate(const double &current_balance_exchange_rate);
    bool is_current_balance_exchange_rate_Set() const;
    bool is_current_balance_exchange_rate_Valid() const;

    double getCurrentBalanceInBaseCurrency() const;
    void setCurrentBalanceInBaseCurrency(const double &current_balance_in_base_currency);
    bool is_current_balance_in_base_currency_Set() const;
    bool is_current_balance_in_base_currency_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIInstitution getInstitution() const;
    void setInstitution(const OAIInstitution &institution);
    bool is_institution_Set() const;
    bool is_institution_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    double getSafeBalance() const;
    void setSafeBalance(const double &safe_balance);
    bool is_safe_balance_Set() const;
    bool is_safe_balance_Valid() const;

    double getSafeBalanceInBaseCurrency() const;
    void setSafeBalanceInBaseCurrency(const double &safe_balance_in_base_currency);
    bool is_safe_balance_in_base_currency_Set() const;
    bool is_safe_balance_in_base_currency_Valid() const;

    double getStartingBalance() const;
    void setStartingBalance(const double &starting_balance);
    bool is_starting_balance_Set() const;
    bool is_starting_balance_Valid() const;

    QString getStartingBalanceDate() const;
    void setStartingBalanceDate(const QString &starting_balance_date);
    bool is_starting_balance_date_Set() const;
    bool is_starting_balance_date_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    double m_current_balance;
    bool m_current_balance_isSet;
    bool m_current_balance_isValid;

    QString m_current_balance_date;
    bool m_current_balance_date_isSet;
    bool m_current_balance_date_isValid;

    double m_current_balance_exchange_rate;
    bool m_current_balance_exchange_rate_isSet;
    bool m_current_balance_exchange_rate_isValid;

    double m_current_balance_in_base_currency;
    bool m_current_balance_in_base_currency_isSet;
    bool m_current_balance_in_base_currency_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIInstitution m_institution;
    bool m_institution_isSet;
    bool m_institution_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    double m_safe_balance;
    bool m_safe_balance_isSet;
    bool m_safe_balance_isValid;

    double m_safe_balance_in_base_currency;
    bool m_safe_balance_in_base_currency_isSet;
    bool m_safe_balance_in_base_currency_isValid;

    double m_starting_balance;
    bool m_starting_balance_isSet;
    bool m_starting_balance_isValid;

    QString m_starting_balance_date;
    bool m_starting_balance_date_isSet;
    bool m_starting_balance_date_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionAccount)

#endif // OAITransactionAccount_H
