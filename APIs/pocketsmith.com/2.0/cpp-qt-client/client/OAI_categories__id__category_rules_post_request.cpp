/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_categories__id__category_rules_post_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_categories__id__category_rules_post_request::OAI_categories__id__category_rules_post_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_categories__id__category_rules_post_request::OAI_categories__id__category_rules_post_request() {
    this->initializeModel();
}

OAI_categories__id__category_rules_post_request::~OAI_categories__id__category_rules_post_request() {}

void OAI_categories__id__category_rules_post_request::initializeModel() {

    m_apply_to_all_isSet = false;
    m_apply_to_all_isValid = false;

    m_apply_to_uncategorised_isSet = false;
    m_apply_to_uncategorised_isValid = false;

    m_payee_matches_isSet = false;
    m_payee_matches_isValid = false;
}

void OAI_categories__id__category_rules_post_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_categories__id__category_rules_post_request::fromJsonObject(QJsonObject json) {

    m_apply_to_all_isValid = ::OpenAPI::fromJsonValue(m_apply_to_all, json[QString("apply_to_all")]);
    m_apply_to_all_isSet = !json[QString("apply_to_all")].isNull() && m_apply_to_all_isValid;

    m_apply_to_uncategorised_isValid = ::OpenAPI::fromJsonValue(m_apply_to_uncategorised, json[QString("apply_to_uncategorised")]);
    m_apply_to_uncategorised_isSet = !json[QString("apply_to_uncategorised")].isNull() && m_apply_to_uncategorised_isValid;

    m_payee_matches_isValid = ::OpenAPI::fromJsonValue(m_payee_matches, json[QString("payee_matches")]);
    m_payee_matches_isSet = !json[QString("payee_matches")].isNull() && m_payee_matches_isValid;
}

QString OAI_categories__id__category_rules_post_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_categories__id__category_rules_post_request::asJsonObject() const {
    QJsonObject obj;
    if (m_apply_to_all_isSet) {
        obj.insert(QString("apply_to_all"), ::OpenAPI::toJsonValue(m_apply_to_all));
    }
    if (m_apply_to_uncategorised_isSet) {
        obj.insert(QString("apply_to_uncategorised"), ::OpenAPI::toJsonValue(m_apply_to_uncategorised));
    }
    if (m_payee_matches_isSet) {
        obj.insert(QString("payee_matches"), ::OpenAPI::toJsonValue(m_payee_matches));
    }
    return obj;
}

bool OAI_categories__id__category_rules_post_request::isApplyToAll() const {
    return m_apply_to_all;
}
void OAI_categories__id__category_rules_post_request::setApplyToAll(const bool &apply_to_all) {
    m_apply_to_all = apply_to_all;
    m_apply_to_all_isSet = true;
}

bool OAI_categories__id__category_rules_post_request::is_apply_to_all_Set() const{
    return m_apply_to_all_isSet;
}

bool OAI_categories__id__category_rules_post_request::is_apply_to_all_Valid() const{
    return m_apply_to_all_isValid;
}

bool OAI_categories__id__category_rules_post_request::isApplyToUncategorised() const {
    return m_apply_to_uncategorised;
}
void OAI_categories__id__category_rules_post_request::setApplyToUncategorised(const bool &apply_to_uncategorised) {
    m_apply_to_uncategorised = apply_to_uncategorised;
    m_apply_to_uncategorised_isSet = true;
}

bool OAI_categories__id__category_rules_post_request::is_apply_to_uncategorised_Set() const{
    return m_apply_to_uncategorised_isSet;
}

bool OAI_categories__id__category_rules_post_request::is_apply_to_uncategorised_Valid() const{
    return m_apply_to_uncategorised_isValid;
}

QString OAI_categories__id__category_rules_post_request::getPayeeMatches() const {
    return m_payee_matches;
}
void OAI_categories__id__category_rules_post_request::setPayeeMatches(const QString &payee_matches) {
    m_payee_matches = payee_matches;
    m_payee_matches_isSet = true;
}

bool OAI_categories__id__category_rules_post_request::is_payee_matches_Set() const{
    return m_payee_matches_isSet;
}

bool OAI_categories__id__category_rules_post_request::is_payee_matches_Valid() const{
    return m_payee_matches_isValid;
}

bool OAI_categories__id__category_rules_post_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apply_to_all_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apply_to_uncategorised_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payee_matches_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_categories__id__category_rules_post_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_payee_matches_isValid && true;
}

} // namespace OpenAPI
