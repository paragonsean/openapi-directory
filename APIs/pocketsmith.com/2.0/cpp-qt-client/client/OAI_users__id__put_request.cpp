/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_users__id__put_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_users__id__put_request::OAI_users__id__put_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_users__id__put_request::OAI_users__id__put_request() {
    this->initializeModel();
}

OAI_users__id__put_request::~OAI_users__id__put_request() {}

void OAI_users__id__put_request::initializeModel() {

    m_always_show_base_currency_isSet = false;
    m_always_show_base_currency_isValid = false;

    m_base_currency_code_isSet = false;
    m_base_currency_code_isValid = false;

    m_beta_user_isSet = false;
    m_beta_user_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;

    m_week_start_day_isSet = false;
    m_week_start_day_isValid = false;
}

void OAI_users__id__put_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_users__id__put_request::fromJsonObject(QJsonObject json) {

    m_always_show_base_currency_isValid = ::OpenAPI::fromJsonValue(m_always_show_base_currency, json[QString("always_show_base_currency")]);
    m_always_show_base_currency_isSet = !json[QString("always_show_base_currency")].isNull() && m_always_show_base_currency_isValid;

    m_base_currency_code_isValid = ::OpenAPI::fromJsonValue(m_base_currency_code, json[QString("base_currency_code")]);
    m_base_currency_code_isSet = !json[QString("base_currency_code")].isNull() && m_base_currency_code_isValid;

    m_beta_user_isValid = ::OpenAPI::fromJsonValue(m_beta_user, json[QString("beta_user")]);
    m_beta_user_isSet = !json[QString("beta_user")].isNull() && m_beta_user_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("time_zone")]);
    m_time_zone_isSet = !json[QString("time_zone")].isNull() && m_time_zone_isValid;

    m_week_start_day_isValid = ::OpenAPI::fromJsonValue(m_week_start_day, json[QString("week_start_day")]);
    m_week_start_day_isSet = !json[QString("week_start_day")].isNull() && m_week_start_day_isValid;
}

QString OAI_users__id__put_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_users__id__put_request::asJsonObject() const {
    QJsonObject obj;
    if (m_always_show_base_currency_isSet) {
        obj.insert(QString("always_show_base_currency"), ::OpenAPI::toJsonValue(m_always_show_base_currency));
    }
    if (m_base_currency_code_isSet) {
        obj.insert(QString("base_currency_code"), ::OpenAPI::toJsonValue(m_base_currency_code));
    }
    if (m_beta_user_isSet) {
        obj.insert(QString("beta_user"), ::OpenAPI::toJsonValue(m_beta_user));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("time_zone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    if (m_week_start_day_isSet) {
        obj.insert(QString("week_start_day"), ::OpenAPI::toJsonValue(m_week_start_day));
    }
    return obj;
}

bool OAI_users__id__put_request::isAlwaysShowBaseCurrency() const {
    return m_always_show_base_currency;
}
void OAI_users__id__put_request::setAlwaysShowBaseCurrency(const bool &always_show_base_currency) {
    m_always_show_base_currency = always_show_base_currency;
    m_always_show_base_currency_isSet = true;
}

bool OAI_users__id__put_request::is_always_show_base_currency_Set() const{
    return m_always_show_base_currency_isSet;
}

bool OAI_users__id__put_request::is_always_show_base_currency_Valid() const{
    return m_always_show_base_currency_isValid;
}

QString OAI_users__id__put_request::getBaseCurrencyCode() const {
    return m_base_currency_code;
}
void OAI_users__id__put_request::setBaseCurrencyCode(const QString &base_currency_code) {
    m_base_currency_code = base_currency_code;
    m_base_currency_code_isSet = true;
}

bool OAI_users__id__put_request::is_base_currency_code_Set() const{
    return m_base_currency_code_isSet;
}

bool OAI_users__id__put_request::is_base_currency_code_Valid() const{
    return m_base_currency_code_isValid;
}

bool OAI_users__id__put_request::isBetaUser() const {
    return m_beta_user;
}
void OAI_users__id__put_request::setBetaUser(const bool &beta_user) {
    m_beta_user = beta_user;
    m_beta_user_isSet = true;
}

bool OAI_users__id__put_request::is_beta_user_Set() const{
    return m_beta_user_isSet;
}

bool OAI_users__id__put_request::is_beta_user_Valid() const{
    return m_beta_user_isValid;
}

QString OAI_users__id__put_request::getEmail() const {
    return m_email;
}
void OAI_users__id__put_request::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAI_users__id__put_request::is_email_Set() const{
    return m_email_isSet;
}

bool OAI_users__id__put_request::is_email_Valid() const{
    return m_email_isValid;
}

QString OAI_users__id__put_request::getName() const {
    return m_name;
}
void OAI_users__id__put_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAI_users__id__put_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAI_users__id__put_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAI_users__id__put_request::getTimeZone() const {
    return m_time_zone;
}
void OAI_users__id__put_request::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAI_users__id__put_request::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAI_users__id__put_request::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

qint32 OAI_users__id__put_request::getWeekStartDay() const {
    return m_week_start_day;
}
void OAI_users__id__put_request::setWeekStartDay(const qint32 &week_start_day) {
    m_week_start_day = week_start_day;
    m_week_start_day_isSet = true;
}

bool OAI_users__id__put_request::is_week_start_day_Set() const{
    return m_week_start_day_isSet;
}

bool OAI_users__id__put_request::is_week_start_day_Valid() const{
    return m_week_start_day_isValid;
}

bool OAI_users__id__put_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_always_show_base_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beta_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_week_start_day_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_users__id__put_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
