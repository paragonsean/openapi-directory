/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICurrencySeparators.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICurrencySeparators::OAICurrencySeparators(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICurrencySeparators::OAICurrencySeparators() {
    this->initializeModel();
}

OAICurrencySeparators::~OAICurrencySeparators() {}

void OAICurrencySeparators::initializeModel() {

    m_major_isSet = false;
    m_major_isValid = false;

    m_minor_isSet = false;
    m_minor_isValid = false;
}

void OAICurrencySeparators::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICurrencySeparators::fromJsonObject(QJsonObject json) {

    m_major_isValid = ::OpenAPI::fromJsonValue(m_major, json[QString("major")]);
    m_major_isSet = !json[QString("major")].isNull() && m_major_isValid;

    m_minor_isValid = ::OpenAPI::fromJsonValue(m_minor, json[QString("minor")]);
    m_minor_isSet = !json[QString("minor")].isNull() && m_minor_isValid;
}

QString OAICurrencySeparators::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICurrencySeparators::asJsonObject() const {
    QJsonObject obj;
    if (m_major_isSet) {
        obj.insert(QString("major"), ::OpenAPI::toJsonValue(m_major));
    }
    if (m_minor_isSet) {
        obj.insert(QString("minor"), ::OpenAPI::toJsonValue(m_minor));
    }
    return obj;
}

QString OAICurrencySeparators::getMajor() const {
    return m_major;
}
void OAICurrencySeparators::setMajor(const QString &major) {
    m_major = major;
    m_major_isSet = true;
}

bool OAICurrencySeparators::is_major_Set() const{
    return m_major_isSet;
}

bool OAICurrencySeparators::is_major_Valid() const{
    return m_major_isValid;
}

QString OAICurrencySeparators::getMinor() const {
    return m_minor;
}
void OAICurrencySeparators::setMinor(const QString &minor) {
    m_minor = minor;
    m_minor_isSet = true;
}

bool OAICurrencySeparators::is_minor_Set() const{
    return m_minor_isSet;
}

bool OAICurrencySeparators::is_minor_Valid() const{
    return m_minor_isValid;
}

bool OAICurrencySeparators::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_major_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minor_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICurrencySeparators::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
