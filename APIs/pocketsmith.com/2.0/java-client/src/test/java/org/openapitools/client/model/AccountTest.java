/*
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Scenario;
import org.openapitools.client.model.TransactionAccount;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Account
 */
public class AccountTest {
    private final Account model = new Account();

    /**
     * Model tests for Account
     */
    @Test
    public void testAccount() {
        // TODO: test Account
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'currentBalance'
     */
    @Test
    public void currentBalanceTest() {
        // TODO: test currentBalance
    }

    /**
     * Test the property 'currentBalanceDate'
     */
    @Test
    public void currentBalanceDateTest() {
        // TODO: test currentBalanceDate
    }

    /**
     * Test the property 'currentBalanceExchangeRate'
     */
    @Test
    public void currentBalanceExchangeRateTest() {
        // TODO: test currentBalanceExchangeRate
    }

    /**
     * Test the property 'currentBalanceInBaseCurrency'
     */
    @Test
    public void currentBalanceInBaseCurrencyTest() {
        // TODO: test currentBalanceInBaseCurrency
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isNetWorth'
     */
    @Test
    public void isNetWorthTest() {
        // TODO: test isNetWorth
    }

    /**
     * Test the property 'primaryScenario'
     */
    @Test
    public void primaryScenarioTest() {
        // TODO: test primaryScenario
    }

    /**
     * Test the property 'primaryTransactionAccount'
     */
    @Test
    public void primaryTransactionAccountTest() {
        // TODO: test primaryTransactionAccount
    }

    /**
     * Test the property 'safeBalance'
     */
    @Test
    public void safeBalanceTest() {
        // TODO: test safeBalance
    }

    /**
     * Test the property 'safeBalanceInBaseCurrency'
     */
    @Test
    public void safeBalanceInBaseCurrencyTest() {
        // TODO: test safeBalanceInBaseCurrency
    }

    /**
     * Test the property 'scenarios'
     */
    @Test
    public void scenariosTest() {
        // TODO: test scenarios
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'transactionAccounts'
     */
    @Test
    public void transactionAccountsTest() {
        // TODO: test transactionAccounts
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
