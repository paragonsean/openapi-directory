/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CategoriesIdCategoryRulesPostRequest from '../model/CategoriesIdCategoryRulesPostRequest';
import CategoryRule from '../model/CategoryRule';
import Error from '../model/Error';

/**
* CategoryRules service.
* @module api/CategoryRulesApi
* @version 2.0
*/
export default class CategoryRulesApi {

    /**
    * Constructs a new CategoryRulesApi. 
    * @alias module:api/CategoryRulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the categoriesIdCategoryRulesPost operation.
     * @callback module:api/CategoryRulesApi~categoriesIdCategoryRulesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoryRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create category rule in category
     * Creates a rule to allocate a category to transactions.
     * @param {Number} id The unique identifier of the category.
     * @param {Object} opts Optional parameters
     * @param {module:model/CategoriesIdCategoryRulesPostRequest} [categoriesIdCategoryRulesPostRequest] 
     * @param {module:api/CategoryRulesApi~categoriesIdCategoryRulesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoryRule}
     */
    categoriesIdCategoryRulesPost(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['categoriesIdCategoryRulesPostRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling categoriesIdCategoryRulesPost");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['developerKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CategoryRule;
      return this.apiClient.callApi(
        '/categories/{id}/category_rules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usersIdCategoryRulesGet operation.
     * @callback module:api/CategoryRulesApi~usersIdCategoryRulesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CategoryRule>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List category rules in user
     * Lists all category rules belonging to a user by their ID.
     * @param {Number} id The unique identifier of the user.
     * @param {module:api/CategoryRulesApi~usersIdCategoryRulesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CategoryRule>}
     */
    usersIdCategoryRulesGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling usersIdCategoryRulesGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['developerKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [CategoryRule];
      return this.apiClient.callApi(
        '/users/{id}/category_rules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
