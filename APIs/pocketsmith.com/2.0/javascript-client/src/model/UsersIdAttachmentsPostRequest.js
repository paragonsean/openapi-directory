/**
 * PocketSmith
 * The PocketSmith API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: api@pocketsmith.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsersIdAttachmentsPostRequest model module.
 * @module model/UsersIdAttachmentsPostRequest
 * @version 2.0
 */
class UsersIdAttachmentsPostRequest {
    /**
     * Constructs a new <code>UsersIdAttachmentsPostRequest</code>.
     * @alias module:model/UsersIdAttachmentsPostRequest
     */
    constructor() { 
        
        UsersIdAttachmentsPostRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsersIdAttachmentsPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsersIdAttachmentsPostRequest} obj Optional instance to populate.
     * @return {module:model/UsersIdAttachmentsPostRequest} The populated <code>UsersIdAttachmentsPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsersIdAttachmentsPostRequest();

            if (data.hasOwnProperty('file_data')) {
                obj['file_data'] = ApiClient.convertToType(data['file_data'], 'String');
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsersIdAttachmentsPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsersIdAttachmentsPostRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['file_data'] && !(typeof data['file_data'] === 'string' || data['file_data'] instanceof String)) {
            throw new Error("Expected the field `file_data` to be a primitive type in the JSON string but got " + data['file_data']);
        }
        // ensure the json data is a string
        if (data['file_name'] && !(typeof data['file_name'] === 'string' || data['file_name'] instanceof String)) {
            throw new Error("Expected the field `file_name` to be a primitive type in the JSON string but got " + data['file_name']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * The base64-encoded contents of the source file. The supported file types are png, jpg, pdf, xls, xlsx, doc, docx.
 * @member {String} file_data
 */
UsersIdAttachmentsPostRequest.prototype['file_data'] = undefined;

/**
 * The file name of the attachment.
 * @member {String} file_name
 */
UsersIdAttachmentsPostRequest.prototype['file_name'] = undefined;

/**
 * The title of the attachment. If the title is blank or not provided, the title will derived from the file name.
 * @member {String} title
 */
UsersIdAttachmentsPostRequest.prototype['title'] = undefined;






export default UsersIdAttachmentsPostRequest;

