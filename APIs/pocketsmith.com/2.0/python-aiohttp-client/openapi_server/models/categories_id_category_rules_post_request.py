# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CategoriesIdCategoryRulesPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apply_to_all: bool=None, apply_to_uncategorised: bool=None, payee_matches: str=None):
        """CategoriesIdCategoryRulesPostRequest - a model defined in OpenAPI

        :param apply_to_all: The apply_to_all of this CategoriesIdCategoryRulesPostRequest.
        :param apply_to_uncategorised: The apply_to_uncategorised of this CategoriesIdCategoryRulesPostRequest.
        :param payee_matches: The payee_matches of this CategoriesIdCategoryRulesPostRequest.
        """
        self.openapi_types = {
            'apply_to_all': bool,
            'apply_to_uncategorised': bool,
            'payee_matches': str
        }

        self.attribute_map = {
            'apply_to_all': 'apply_to_all',
            'apply_to_uncategorised': 'apply_to_uncategorised',
            'payee_matches': 'payee_matches'
        }

        self._apply_to_all = apply_to_all
        self._apply_to_uncategorised = apply_to_uncategorised
        self._payee_matches = payee_matches

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CategoriesIdCategoryRulesPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _categories__id__category_rules_post_request of this CategoriesIdCategoryRulesPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apply_to_all(self):
        """Gets the apply_to_all of this CategoriesIdCategoryRulesPostRequest.

        Apply the created category rule to all transactions.

        :return: The apply_to_all of this CategoriesIdCategoryRulesPostRequest.
        :rtype: bool
        """
        return self._apply_to_all

    @apply_to_all.setter
    def apply_to_all(self, apply_to_all):
        """Sets the apply_to_all of this CategoriesIdCategoryRulesPostRequest.

        Apply the created category rule to all transactions.

        :param apply_to_all: The apply_to_all of this CategoriesIdCategoryRulesPostRequest.
        :type apply_to_all: bool
        """

        self._apply_to_all = apply_to_all

    @property
    def apply_to_uncategorised(self):
        """Gets the apply_to_uncategorised of this CategoriesIdCategoryRulesPostRequest.

        Apply the created category rule to all uncategorised transactions.

        :return: The apply_to_uncategorised of this CategoriesIdCategoryRulesPostRequest.
        :rtype: bool
        """
        return self._apply_to_uncategorised

    @apply_to_uncategorised.setter
    def apply_to_uncategorised(self, apply_to_uncategorised):
        """Sets the apply_to_uncategorised of this CategoriesIdCategoryRulesPostRequest.

        Apply the created category rule to all uncategorised transactions.

        :param apply_to_uncategorised: The apply_to_uncategorised of this CategoriesIdCategoryRulesPostRequest.
        :type apply_to_uncategorised: bool
        """

        self._apply_to_uncategorised = apply_to_uncategorised

    @property
    def payee_matches(self):
        """Gets the payee_matches of this CategoriesIdCategoryRulesPostRequest.

        The keyword/s to match the transaction payees.

        :return: The payee_matches of this CategoriesIdCategoryRulesPostRequest.
        :rtype: str
        """
        return self._payee_matches

    @payee_matches.setter
    def payee_matches(self, payee_matches):
        """Sets the payee_matches of this CategoriesIdCategoryRulesPostRequest.

        The keyword/s to match the transaction payees.

        :param payee_matches: The payee_matches of this CategoriesIdCategoryRulesPostRequest.
        :type payee_matches: str
        """
        if payee_matches is None:
            raise ValueError("Invalid value for `payee_matches`, must not be `None`")

        self._payee_matches = payee_matches
