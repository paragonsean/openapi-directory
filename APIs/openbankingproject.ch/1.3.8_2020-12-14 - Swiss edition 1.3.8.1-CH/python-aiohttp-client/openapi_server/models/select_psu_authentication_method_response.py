# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server.models.authentication_object import AuthenticationObject
from openapi_server.models.challenge_data import ChallengeData
from openapi_server.models.links_select_psu_authentication_method import LinksSelectPsuAuthenticationMethod
from openapi_server.models.sca_status import ScaStatus
from openapi_server import util


class SelectPsuAuthenticationMethodResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: LinksSelectPsuAuthenticationMethod=None, challenge_data: ChallengeData=None, chosen_sca_method: AuthenticationObject=None, currency_conversion_fees: Amount=None, estimated_interbank_settlement_amount: Amount=None, estimated_total_amount: Amount=None, psu_message: str=None, sca_status: ScaStatus=None, transaction_fees: Amount=None):
        """SelectPsuAuthenticationMethodResponse - a model defined in OpenAPI

        :param links: The links of this SelectPsuAuthenticationMethodResponse.
        :param challenge_data: The challenge_data of this SelectPsuAuthenticationMethodResponse.
        :param chosen_sca_method: The chosen_sca_method of this SelectPsuAuthenticationMethodResponse.
        :param currency_conversion_fees: The currency_conversion_fees of this SelectPsuAuthenticationMethodResponse.
        :param estimated_interbank_settlement_amount: The estimated_interbank_settlement_amount of this SelectPsuAuthenticationMethodResponse.
        :param estimated_total_amount: The estimated_total_amount of this SelectPsuAuthenticationMethodResponse.
        :param psu_message: The psu_message of this SelectPsuAuthenticationMethodResponse.
        :param sca_status: The sca_status of this SelectPsuAuthenticationMethodResponse.
        :param transaction_fees: The transaction_fees of this SelectPsuAuthenticationMethodResponse.
        """
        self.openapi_types = {
            'links': LinksSelectPsuAuthenticationMethod,
            'challenge_data': ChallengeData,
            'chosen_sca_method': AuthenticationObject,
            'currency_conversion_fees': Amount,
            'estimated_interbank_settlement_amount': Amount,
            'estimated_total_amount': Amount,
            'psu_message': str,
            'sca_status': ScaStatus,
            'transaction_fees': Amount
        }

        self.attribute_map = {
            'links': '_links',
            'challenge_data': 'challengeData',
            'chosen_sca_method': 'chosenScaMethod',
            'currency_conversion_fees': 'currencyConversionFees',
            'estimated_interbank_settlement_amount': 'estimatedInterbankSettlementAmount',
            'estimated_total_amount': 'estimatedTotalAmount',
            'psu_message': 'psuMessage',
            'sca_status': 'scaStatus',
            'transaction_fees': 'transactionFees'
        }

        self._links = links
        self._challenge_data = challenge_data
        self._chosen_sca_method = chosen_sca_method
        self._currency_conversion_fees = currency_conversion_fees
        self._estimated_interbank_settlement_amount = estimated_interbank_settlement_amount
        self._estimated_total_amount = estimated_total_amount
        self._psu_message = psu_message
        self._sca_status = sca_status
        self._transaction_fees = transaction_fees

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SelectPsuAuthenticationMethodResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The selectPsuAuthenticationMethodResponse of this SelectPsuAuthenticationMethodResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this SelectPsuAuthenticationMethodResponse.


        :return: The links of this SelectPsuAuthenticationMethodResponse.
        :rtype: LinksSelectPsuAuthenticationMethod
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this SelectPsuAuthenticationMethodResponse.


        :param links: The links of this SelectPsuAuthenticationMethodResponse.
        :type links: LinksSelectPsuAuthenticationMethod
        """

        self._links = links

    @property
    def challenge_data(self):
        """Gets the challenge_data of this SelectPsuAuthenticationMethodResponse.


        :return: The challenge_data of this SelectPsuAuthenticationMethodResponse.
        :rtype: ChallengeData
        """
        return self._challenge_data

    @challenge_data.setter
    def challenge_data(self, challenge_data):
        """Sets the challenge_data of this SelectPsuAuthenticationMethodResponse.


        :param challenge_data: The challenge_data of this SelectPsuAuthenticationMethodResponse.
        :type challenge_data: ChallengeData
        """

        self._challenge_data = challenge_data

    @property
    def chosen_sca_method(self):
        """Gets the chosen_sca_method of this SelectPsuAuthenticationMethodResponse.


        :return: The chosen_sca_method of this SelectPsuAuthenticationMethodResponse.
        :rtype: AuthenticationObject
        """
        return self._chosen_sca_method

    @chosen_sca_method.setter
    def chosen_sca_method(self, chosen_sca_method):
        """Sets the chosen_sca_method of this SelectPsuAuthenticationMethodResponse.


        :param chosen_sca_method: The chosen_sca_method of this SelectPsuAuthenticationMethodResponse.
        :type chosen_sca_method: AuthenticationObject
        """

        self._chosen_sca_method = chosen_sca_method

    @property
    def currency_conversion_fees(self):
        """Gets the currency_conversion_fees of this SelectPsuAuthenticationMethodResponse.


        :return: The currency_conversion_fees of this SelectPsuAuthenticationMethodResponse.
        :rtype: Amount
        """
        return self._currency_conversion_fees

    @currency_conversion_fees.setter
    def currency_conversion_fees(self, currency_conversion_fees):
        """Sets the currency_conversion_fees of this SelectPsuAuthenticationMethodResponse.


        :param currency_conversion_fees: The currency_conversion_fees of this SelectPsuAuthenticationMethodResponse.
        :type currency_conversion_fees: Amount
        """

        self._currency_conversion_fees = currency_conversion_fees

    @property
    def estimated_interbank_settlement_amount(self):
        """Gets the estimated_interbank_settlement_amount of this SelectPsuAuthenticationMethodResponse.


        :return: The estimated_interbank_settlement_amount of this SelectPsuAuthenticationMethodResponse.
        :rtype: Amount
        """
        return self._estimated_interbank_settlement_amount

    @estimated_interbank_settlement_amount.setter
    def estimated_interbank_settlement_amount(self, estimated_interbank_settlement_amount):
        """Sets the estimated_interbank_settlement_amount of this SelectPsuAuthenticationMethodResponse.


        :param estimated_interbank_settlement_amount: The estimated_interbank_settlement_amount of this SelectPsuAuthenticationMethodResponse.
        :type estimated_interbank_settlement_amount: Amount
        """

        self._estimated_interbank_settlement_amount = estimated_interbank_settlement_amount

    @property
    def estimated_total_amount(self):
        """Gets the estimated_total_amount of this SelectPsuAuthenticationMethodResponse.


        :return: The estimated_total_amount of this SelectPsuAuthenticationMethodResponse.
        :rtype: Amount
        """
        return self._estimated_total_amount

    @estimated_total_amount.setter
    def estimated_total_amount(self, estimated_total_amount):
        """Sets the estimated_total_amount of this SelectPsuAuthenticationMethodResponse.


        :param estimated_total_amount: The estimated_total_amount of this SelectPsuAuthenticationMethodResponse.
        :type estimated_total_amount: Amount
        """

        self._estimated_total_amount = estimated_total_amount

    @property
    def psu_message(self):
        """Gets the psu_message of this SelectPsuAuthenticationMethodResponse.

        Text to be displayed to the PSU.

        :return: The psu_message of this SelectPsuAuthenticationMethodResponse.
        :rtype: str
        """
        return self._psu_message

    @psu_message.setter
    def psu_message(self, psu_message):
        """Sets the psu_message of this SelectPsuAuthenticationMethodResponse.

        Text to be displayed to the PSU.

        :param psu_message: The psu_message of this SelectPsuAuthenticationMethodResponse.
        :type psu_message: str
        """
        if psu_message is not None and len(psu_message) > 500:
            raise ValueError("Invalid value for `psu_message`, length must be less than or equal to `500`")

        self._psu_message = psu_message

    @property
    def sca_status(self):
        """Gets the sca_status of this SelectPsuAuthenticationMethodResponse.


        :return: The sca_status of this SelectPsuAuthenticationMethodResponse.
        :rtype: ScaStatus
        """
        return self._sca_status

    @sca_status.setter
    def sca_status(self, sca_status):
        """Sets the sca_status of this SelectPsuAuthenticationMethodResponse.


        :param sca_status: The sca_status of this SelectPsuAuthenticationMethodResponse.
        :type sca_status: ScaStatus
        """
        if sca_status is None:
            raise ValueError("Invalid value for `sca_status`, must not be `None`")

        self._sca_status = sca_status

    @property
    def transaction_fees(self):
        """Gets the transaction_fees of this SelectPsuAuthenticationMethodResponse.


        :return: The transaction_fees of this SelectPsuAuthenticationMethodResponse.
        :rtype: Amount
        """
        return self._transaction_fees

    @transaction_fees.setter
    def transaction_fees(self, transaction_fees):
        """Sets the transaction_fees of this SelectPsuAuthenticationMethodResponse.


        :param transaction_fees: The transaction_fees of this SelectPsuAuthenticationMethodResponse.
        :type transaction_fees: Amount
        """

        self._transaction_fees = transaction_fees
