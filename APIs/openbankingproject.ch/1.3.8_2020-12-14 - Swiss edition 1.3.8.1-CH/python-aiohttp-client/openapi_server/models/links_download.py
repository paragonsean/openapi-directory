# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.href_type import HrefType
from openapi_server import util


class LinksDownload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, download: HrefType=None):
        """LinksDownload - a model defined in OpenAPI

        :param download: The download of this LinksDownload.
        """
        self.openapi_types = {
            'download': HrefType
        }

        self.attribute_map = {
            'download': 'download'
        }

        self._download = download

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinksDownload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _linksDownload of this LinksDownload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def download(self):
        """Gets the download of this LinksDownload.


        :return: The download of this LinksDownload.
        :rtype: HrefType
        """
        return self._download

    @download.setter
    def download(self, download):
        """Sets the download of this LinksDownload.


        :param download: The download of this LinksDownload.
        :type download: HrefType
        """
        if download is None:
            raise ValueError("Invalid value for `download`, must not be `None`")

        self._download = download
