# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_reference16_ch import AccountReference16CH
from openapi_server.models.debtor_agent7_ch import DebtorAgent7CH
from openapi_server.models.payment_initiation_bulk_element_json import PaymentInitiationBulkElementJson
from openapi_server import util


class BulkPaymentInitiationJson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_booking_preferred: bool=None, debtor_account: AccountReference16CH=None, debtor_agent: DebtorAgent7CH=None, payments: List[PaymentInitiationBulkElementJson]=None, requested_execution_date: date=None, requested_execution_time: datetime=None):
        """BulkPaymentInitiationJson - a model defined in OpenAPI

        :param batch_booking_preferred: The batch_booking_preferred of this BulkPaymentInitiationJson.
        :param debtor_account: The debtor_account of this BulkPaymentInitiationJson.
        :param debtor_agent: The debtor_agent of this BulkPaymentInitiationJson.
        :param payments: The payments of this BulkPaymentInitiationJson.
        :param requested_execution_date: The requested_execution_date of this BulkPaymentInitiationJson.
        :param requested_execution_time: The requested_execution_time of this BulkPaymentInitiationJson.
        """
        self.openapi_types = {
            'batch_booking_preferred': bool,
            'debtor_account': AccountReference16CH,
            'debtor_agent': DebtorAgent7CH,
            'payments': List[PaymentInitiationBulkElementJson],
            'requested_execution_date': date,
            'requested_execution_time': datetime
        }

        self.attribute_map = {
            'batch_booking_preferred': 'batchBookingPreferred',
            'debtor_account': 'debtorAccount',
            'debtor_agent': 'debtorAgent',
            'payments': 'payments',
            'requested_execution_date': 'requestedExecutionDate',
            'requested_execution_time': 'requestedExecutionTime'
        }

        self._batch_booking_preferred = batch_booking_preferred
        self._debtor_account = debtor_account
        self._debtor_agent = debtor_agent
        self._payments = payments
        self._requested_execution_date = requested_execution_date
        self._requested_execution_time = requested_execution_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkPaymentInitiationJson':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bulkPaymentInitiation_json of this BulkPaymentInitiationJson.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_booking_preferred(self):
        """Gets the batch_booking_preferred of this BulkPaymentInitiationJson.

        If this element equals 'true', the PSU prefers only one booking entry. If this element equals 'false', the PSU prefers individual booking of all contained individual transactions.  The ASPSP will follow this preference according to contracts agreed on with the PSU. 

        :return: The batch_booking_preferred of this BulkPaymentInitiationJson.
        :rtype: bool
        """
        return self._batch_booking_preferred

    @batch_booking_preferred.setter
    def batch_booking_preferred(self, batch_booking_preferred):
        """Sets the batch_booking_preferred of this BulkPaymentInitiationJson.

        If this element equals 'true', the PSU prefers only one booking entry. If this element equals 'false', the PSU prefers individual booking of all contained individual transactions.  The ASPSP will follow this preference according to contracts agreed on with the PSU. 

        :param batch_booking_preferred: The batch_booking_preferred of this BulkPaymentInitiationJson.
        :type batch_booking_preferred: bool
        """

        self._batch_booking_preferred = batch_booking_preferred

    @property
    def debtor_account(self):
        """Gets the debtor_account of this BulkPaymentInitiationJson.


        :return: The debtor_account of this BulkPaymentInitiationJson.
        :rtype: AccountReference16CH
        """
        return self._debtor_account

    @debtor_account.setter
    def debtor_account(self, debtor_account):
        """Sets the debtor_account of this BulkPaymentInitiationJson.


        :param debtor_account: The debtor_account of this BulkPaymentInitiationJson.
        :type debtor_account: AccountReference16CH
        """
        if debtor_account is None:
            raise ValueError("Invalid value for `debtor_account`, must not be `None`")

        self._debtor_account = debtor_account

    @property
    def debtor_agent(self):
        """Gets the debtor_agent of this BulkPaymentInitiationJson.


        :return: The debtor_agent of this BulkPaymentInitiationJson.
        :rtype: DebtorAgent7CH
        """
        return self._debtor_agent

    @debtor_agent.setter
    def debtor_agent(self, debtor_agent):
        """Sets the debtor_agent of this BulkPaymentInitiationJson.


        :param debtor_agent: The debtor_agent of this BulkPaymentInitiationJson.
        :type debtor_agent: DebtorAgent7CH
        """
        if debtor_agent is None:
            raise ValueError("Invalid value for `debtor_agent`, must not be `None`")

        self._debtor_agent = debtor_agent

    @property
    def payments(self):
        """Gets the payments of this BulkPaymentInitiationJson.

        A list of generic JSON bodies payment initations for bulk payments via JSON.  Note: Some fields from single payments do not occcur in a bulk payment element 

        :return: The payments of this BulkPaymentInitiationJson.
        :rtype: List[PaymentInitiationBulkElementJson]
        """
        return self._payments

    @payments.setter
    def payments(self, payments):
        """Sets the payments of this BulkPaymentInitiationJson.

        A list of generic JSON bodies payment initations for bulk payments via JSON.  Note: Some fields from single payments do not occcur in a bulk payment element 

        :param payments: The payments of this BulkPaymentInitiationJson.
        :type payments: List[PaymentInitiationBulkElementJson]
        """
        if payments is None:
            raise ValueError("Invalid value for `payments`, must not be `None`")

        self._payments = payments

    @property
    def requested_execution_date(self):
        """Gets the requested_execution_date of this BulkPaymentInitiationJson.


        :return: The requested_execution_date of this BulkPaymentInitiationJson.
        :rtype: date
        """
        return self._requested_execution_date

    @requested_execution_date.setter
    def requested_execution_date(self, requested_execution_date):
        """Sets the requested_execution_date of this BulkPaymentInitiationJson.


        :param requested_execution_date: The requested_execution_date of this BulkPaymentInitiationJson.
        :type requested_execution_date: date
        """

        self._requested_execution_date = requested_execution_date

    @property
    def requested_execution_time(self):
        """Gets the requested_execution_time of this BulkPaymentInitiationJson.


        :return: The requested_execution_time of this BulkPaymentInitiationJson.
        :rtype: datetime
        """
        return self._requested_execution_time

    @requested_execution_time.setter
    def requested_execution_time(self, requested_execution_time):
        """Sets the requested_execution_time of this BulkPaymentInitiationJson.


        :param requested_execution_time: The requested_execution_time of this BulkPaymentInitiationJson.
        :type requested_execution_time: datetime
        """

        self._requested_execution_time = requested_execution_time
