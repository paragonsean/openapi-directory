# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessageCode401AIS(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CERTIFICATE_INVALID = 'CERTIFICATE_INVALID'
    ROLE_INVALID = 'ROLE_INVALID'
    CERTIFICATE_EXPIRED = 'CERTIFICATE_EXPIRED'
    CERTIFICATE_BLOCKED = 'CERTIFICATE_BLOCKED'
    CERTIFICATE_REVOKE = 'CERTIFICATE_REVOKE'
    CERTIFICATE_MISSING = 'CERTIFICATE_MISSING'
    SIGNATURE_INVALID = 'SIGNATURE_INVALID'
    SIGNATURE_MISSING = 'SIGNATURE_MISSING'
    CORPORATE_ID_INVALID = 'CORPORATE_ID_INVALID'
    PSU_CREDENTIALS_INVALID = 'PSU_CREDENTIALS_INVALID'
    CONSENT_INVALID = 'CONSENT_INVALID'
    CONSENT_EXPIRED = 'CONSENT_EXPIRED'
    TOKEN_UNKNOWN = 'TOKEN_UNKNOWN'
    TOKEN_INVALID = 'TOKEN_INVALID'
    TOKEN_EXPIRED = 'TOKEN_EXPIRED'

    def __init__(self):
        """MessageCode401AIS - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageCode401AIS':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageCode401_AIS of this MessageCode401AIS.
        """
        return util.deserialize_model(dikt, cls)
