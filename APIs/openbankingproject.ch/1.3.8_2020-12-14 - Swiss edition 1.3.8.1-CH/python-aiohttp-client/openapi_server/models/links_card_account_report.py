# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.href_type import HrefType
from openapi_server import util


class LinksCardAccountReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card: HrefType=None, card_account: HrefType=None, first: HrefType=None, last: HrefType=None, next: HrefType=None, previous: HrefType=None):
        """LinksCardAccountReport - a model defined in OpenAPI

        :param card: The card of this LinksCardAccountReport.
        :param card_account: The card_account of this LinksCardAccountReport.
        :param first: The first of this LinksCardAccountReport.
        :param last: The last of this LinksCardAccountReport.
        :param next: The next of this LinksCardAccountReport.
        :param previous: The previous of this LinksCardAccountReport.
        """
        self.openapi_types = {
            'card': HrefType,
            'card_account': HrefType,
            'first': HrefType,
            'last': HrefType,
            'next': HrefType,
            'previous': HrefType
        }

        self.attribute_map = {
            'card': 'card',
            'card_account': 'cardAccount',
            'first': 'first',
            'last': 'last',
            'next': 'next',
            'previous': 'previous'
        }

        self._card = card
        self._card_account = card_account
        self._first = first
        self._last = last
        self._next = next
        self._previous = previous

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinksCardAccountReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _linksCardAccountReport of this LinksCardAccountReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card(self):
        """Gets the card of this LinksCardAccountReport.


        :return: The card of this LinksCardAccountReport.
        :rtype: HrefType
        """
        return self._card

    @card.setter
    def card(self, card):
        """Sets the card of this LinksCardAccountReport.


        :param card: The card of this LinksCardAccountReport.
        :type card: HrefType
        """

        self._card = card

    @property
    def card_account(self):
        """Gets the card_account of this LinksCardAccountReport.


        :return: The card_account of this LinksCardAccountReport.
        :rtype: HrefType
        """
        return self._card_account

    @card_account.setter
    def card_account(self, card_account):
        """Sets the card_account of this LinksCardAccountReport.


        :param card_account: The card_account of this LinksCardAccountReport.
        :type card_account: HrefType
        """

        self._card_account = card_account

    @property
    def first(self):
        """Gets the first of this LinksCardAccountReport.


        :return: The first of this LinksCardAccountReport.
        :rtype: HrefType
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this LinksCardAccountReport.


        :param first: The first of this LinksCardAccountReport.
        :type first: HrefType
        """

        self._first = first

    @property
    def last(self):
        """Gets the last of this LinksCardAccountReport.


        :return: The last of this LinksCardAccountReport.
        :rtype: HrefType
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this LinksCardAccountReport.


        :param last: The last of this LinksCardAccountReport.
        :type last: HrefType
        """

        self._last = last

    @property
    def next(self):
        """Gets the next of this LinksCardAccountReport.


        :return: The next of this LinksCardAccountReport.
        :rtype: HrefType
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this LinksCardAccountReport.


        :param next: The next of this LinksCardAccountReport.
        :type next: HrefType
        """

        self._next = next

    @property
    def previous(self):
        """Gets the previous of this LinksCardAccountReport.


        :return: The previous of this LinksCardAccountReport.
        :rtype: HrefType
        """
        return self._previous

    @previous.setter
    def previous(self, previous):
        """Sets the previous of this LinksCardAccountReport.


        :param previous: The previous of this LinksCardAccountReport.
        :type previous: HrefType
        """

        self._previous = previous
