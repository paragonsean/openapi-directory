# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PsuData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_encrypted_password: str=None, additional_password: str=None, encrypted_password: str=None, password: str=None):
        """PsuData - a model defined in OpenAPI

        :param additional_encrypted_password: The additional_encrypted_password of this PsuData.
        :param additional_password: The additional_password of this PsuData.
        :param encrypted_password: The encrypted_password of this PsuData.
        :param password: The password of this PsuData.
        """
        self.openapi_types = {
            'additional_encrypted_password': str,
            'additional_password': str,
            'encrypted_password': str,
            'password': str
        }

        self.attribute_map = {
            'additional_encrypted_password': 'additionalEncryptedPassword',
            'additional_password': 'additionalPassword',
            'encrypted_password': 'encryptedPassword',
            'password': 'password'
        }

        self._additional_encrypted_password = additional_encrypted_password
        self._additional_password = additional_password
        self._encrypted_password = encrypted_password
        self._password = password

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PsuData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The psuData of this PsuData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_encrypted_password(self):
        """Gets the additional_encrypted_password of this PsuData.

        Additional encrypted password.

        :return: The additional_encrypted_password of this PsuData.
        :rtype: str
        """
        return self._additional_encrypted_password

    @additional_encrypted_password.setter
    def additional_encrypted_password(self, additional_encrypted_password):
        """Sets the additional_encrypted_password of this PsuData.

        Additional encrypted password.

        :param additional_encrypted_password: The additional_encrypted_password of this PsuData.
        :type additional_encrypted_password: str
        """

        self._additional_encrypted_password = additional_encrypted_password

    @property
    def additional_password(self):
        """Gets the additional_password of this PsuData.

        Additional password in plaintext.

        :return: The additional_password of this PsuData.
        :rtype: str
        """
        return self._additional_password

    @additional_password.setter
    def additional_password(self, additional_password):
        """Sets the additional_password of this PsuData.

        Additional password in plaintext.

        :param additional_password: The additional_password of this PsuData.
        :type additional_password: str
        """

        self._additional_password = additional_password

    @property
    def encrypted_password(self):
        """Gets the encrypted_password of this PsuData.

        Encrypted password.

        :return: The encrypted_password of this PsuData.
        :rtype: str
        """
        return self._encrypted_password

    @encrypted_password.setter
    def encrypted_password(self, encrypted_password):
        """Sets the encrypted_password of this PsuData.

        Encrypted password.

        :param encrypted_password: The encrypted_password of this PsuData.
        :type encrypted_password: str
        """

        self._encrypted_password = encrypted_password

    @property
    def password(self):
        """Gets the password of this PsuData.

        Password.

        :return: The password of this PsuData.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this PsuData.

        Password.

        :param password: The password of this PsuData.
        :type password: str
        """

        self._password = password
