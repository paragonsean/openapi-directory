# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuthorisationConfirmation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confirmation_code: str=None):
        """AuthorisationConfirmation - a model defined in OpenAPI

        :param confirmation_code: The confirmation_code of this AuthorisationConfirmation.
        """
        self.openapi_types = {
            'confirmation_code': str
        }

        self.attribute_map = {
            'confirmation_code': 'confirmationCode'
        }

        self._confirmation_code = confirmation_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthorisationConfirmation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The authorisationConfirmation of this AuthorisationConfirmation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confirmation_code(self):
        """Gets the confirmation_code of this AuthorisationConfirmation.

        Confirmation Code as retrieved by the TPP from the redirect based SCA process.

        :return: The confirmation_code of this AuthorisationConfirmation.
        :rtype: str
        """
        return self._confirmation_code

    @confirmation_code.setter
    def confirmation_code(self, confirmation_code):
        """Sets the confirmation_code of this AuthorisationConfirmation.

        Confirmation Code as retrieved by the TPP from the redirect based SCA process.

        :param confirmation_code: The confirmation_code of this AuthorisationConfirmation.
        :type confirmation_code: str
        """
        if confirmation_code is None:
            raise ValueError("Invalid value for `confirmation_code`, must not be `None`")

        self._confirmation_code = confirmation_code
