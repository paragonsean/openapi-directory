# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorsGetRetentionSettings200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retention_in_days: int=None):
        """ErrorsGetRetentionSettings200Response - a model defined in OpenAPI

        :param retention_in_days: The retention_in_days of this ErrorsGetRetentionSettings200Response.
        """
        self.openapi_types = {
            'retention_in_days': int
        }

        self.attribute_map = {
            'retention_in_days': 'retention_in_days'
        }

        self._retention_in_days = retention_in_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorsGetRetentionSettings200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The errors_getRetentionSettings_200_response of this ErrorsGetRetentionSettings200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retention_in_days(self):
        """Gets the retention_in_days of this ErrorsGetRetentionSettings200Response.


        :return: The retention_in_days of this ErrorsGetRetentionSettings200Response.
        :rtype: int
        """
        return self._retention_in_days

    @retention_in_days.setter
    def retention_in_days(self, retention_in_days):
        """Sets the retention_in_days of this ErrorsGetRetentionSettings200Response.


        :param retention_in_days: The retention_in_days of this ErrorsGetRetentionSettings200Response.
        :type retention_in_days: int
        """
        allowed_values = [28]  # noqa: E501
        if retention_in_days not in allowed_values:
            raise ValueError(
                "Invalid value for `retention_in_days` ({0}), must be one of {1}"
                .format(retention_in_days, allowed_values)
            )

        self._retention_in_days = retention_in_days
