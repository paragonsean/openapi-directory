# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stores_list200_response_inner_intune_details import StoresList200ResponseInnerIntuneDetails
from openapi_server import util


class StoresList200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by: str=None, created_by_principal_type: str=None, id: str=None, intune_details: StoresList200ResponseInnerIntuneDetails=None, name: str=None, service_connection_id: str=None, track: str=None, type: str=None):
        """StoresList200ResponseInner - a model defined in OpenAPI

        :param created_by: The created_by of this StoresList200ResponseInner.
        :param created_by_principal_type: The created_by_principal_type of this StoresList200ResponseInner.
        :param id: The id of this StoresList200ResponseInner.
        :param intune_details: The intune_details of this StoresList200ResponseInner.
        :param name: The name of this StoresList200ResponseInner.
        :param service_connection_id: The service_connection_id of this StoresList200ResponseInner.
        :param track: The track of this StoresList200ResponseInner.
        :param type: The type of this StoresList200ResponseInner.
        """
        self.openapi_types = {
            'created_by': str,
            'created_by_principal_type': str,
            'id': str,
            'intune_details': StoresList200ResponseInnerIntuneDetails,
            'name': str,
            'service_connection_id': str,
            'track': str,
            'type': str
        }

        self.attribute_map = {
            'created_by': 'created_by',
            'created_by_principal_type': 'created_by_principal_type',
            'id': 'id',
            'intune_details': 'intune_details',
            'name': 'name',
            'service_connection_id': 'service_connection_id',
            'track': 'track',
            'type': 'type'
        }

        self._created_by = created_by
        self._created_by_principal_type = created_by_principal_type
        self._id = id
        self._intune_details = intune_details
        self._name = name
        self._service_connection_id = service_connection_id
        self._track = track
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoresList200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The stores_list_200_response_inner of this StoresList200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by(self):
        """Gets the created_by of this StoresList200ResponseInner.

        The ID of the principal that created the store.

        :return: The created_by of this StoresList200ResponseInner.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this StoresList200ResponseInner.

        The ID of the principal that created the store.

        :param created_by: The created_by of this StoresList200ResponseInner.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def created_by_principal_type(self):
        """Gets the created_by_principal_type of this StoresList200ResponseInner.

        The type of the principal that created the store.

        :return: The created_by_principal_type of this StoresList200ResponseInner.
        :rtype: str
        """
        return self._created_by_principal_type

    @created_by_principal_type.setter
    def created_by_principal_type(self, created_by_principal_type):
        """Sets the created_by_principal_type of this StoresList200ResponseInner.

        The type of the principal that created the store.

        :param created_by_principal_type: The created_by_principal_type of this StoresList200ResponseInner.
        :type created_by_principal_type: str
        """

        self._created_by_principal_type = created_by_principal_type

    @property
    def id(self):
        """Gets the id of this StoresList200ResponseInner.

        Store id

        :return: The id of this StoresList200ResponseInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StoresList200ResponseInner.

        Store id

        :param id: The id of this StoresList200ResponseInner.
        :type id: str
        """

        self._id = id

    @property
    def intune_details(self):
        """Gets the intune_details of this StoresList200ResponseInner.


        :return: The intune_details of this StoresList200ResponseInner.
        :rtype: StoresList200ResponseInnerIntuneDetails
        """
        return self._intune_details

    @intune_details.setter
    def intune_details(self, intune_details):
        """Sets the intune_details of this StoresList200ResponseInner.


        :param intune_details: The intune_details of this StoresList200ResponseInner.
        :type intune_details: StoresList200ResponseInnerIntuneDetails
        """

        self._intune_details = intune_details

    @property
    def name(self):
        """Gets the name of this StoresList200ResponseInner.

        Store Name

        :return: The name of this StoresList200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StoresList200ResponseInner.

        Store Name

        :param name: The name of this StoresList200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def service_connection_id(self):
        """Gets the service_connection_id of this StoresList200ResponseInner.

        Id for the shared service connection. In case of Apple / GooglePlay stores, this connection will be used to connect to the Apple / Google stores in App Center.

        :return: The service_connection_id of this StoresList200ResponseInner.
        :rtype: str
        """
        return self._service_connection_id

    @service_connection_id.setter
    def service_connection_id(self, service_connection_id):
        """Sets the service_connection_id of this StoresList200ResponseInner.

        Id for the shared service connection. In case of Apple / GooglePlay stores, this connection will be used to connect to the Apple / Google stores in App Center.

        :param service_connection_id: The service_connection_id of this StoresList200ResponseInner.
        :type service_connection_id: str
        """

        self._service_connection_id = service_connection_id

    @property
    def track(self):
        """Gets the track of this StoresList200ResponseInner.

        Store track

        :return: The track of this StoresList200ResponseInner.
        :rtype: str
        """
        return self._track

    @track.setter
    def track(self, track):
        """Sets the track of this StoresList200ResponseInner.

        Store track

        :param track: The track of this StoresList200ResponseInner.
        :type track: str
        """
        allowed_values = ["production", "alpha", "beta", "testflight-internal", "testflight-external"]  # noqa: E501
        if track not in allowed_values:
            raise ValueError(
                "Invalid value for `track` ({0}), must be one of {1}"
                .format(track, allowed_values)
            )

        self._track = track

    @property
    def type(self):
        """Gets the type of this StoresList200ResponseInner.

        Store Type

        :return: The type of this StoresList200ResponseInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StoresList200ResponseInner.

        Store Type

        :param type: The type of this StoresList200ResponseInner.
        :type type: str
        """

        self._type = type
