# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.new_crash_group_alerting_event_all_of_crash_group_properties import NewCrashGroupAlertingEventAllOfCrashGroupProperties
from openapi_server import util


class NewCrashGroupAlertingEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_id: str=None, event_timestamp: str=None, properties: object=None, crash_group_properties: NewCrashGroupAlertingEventAllOfCrashGroupProperties=None):
        """NewCrashGroupAlertingEvent - a model defined in OpenAPI

        :param event_id: The event_id of this NewCrashGroupAlertingEvent.
        :param event_timestamp: The event_timestamp of this NewCrashGroupAlertingEvent.
        :param properties: The properties of this NewCrashGroupAlertingEvent.
        :param crash_group_properties: The crash_group_properties of this NewCrashGroupAlertingEvent.
        """
        self.openapi_types = {
            'event_id': str,
            'event_timestamp': str,
            'properties': object,
            'crash_group_properties': NewCrashGroupAlertingEventAllOfCrashGroupProperties
        }

        self.attribute_map = {
            'event_id': 'event_id',
            'event_timestamp': 'event_timestamp',
            'properties': 'properties',
            'crash_group_properties': 'crash_group_properties'
        }

        self._event_id = event_id
        self._event_timestamp = event_timestamp
        self._properties = properties
        self._crash_group_properties = crash_group_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewCrashGroupAlertingEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewCrashGroupAlertingEvent of this NewCrashGroupAlertingEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_id(self):
        """Gets the event_id of this NewCrashGroupAlertingEvent.

        A unique identifier for this event instance. Useful for deduplication

        :return: The event_id of this NewCrashGroupAlertingEvent.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this NewCrashGroupAlertingEvent.

        A unique identifier for this event instance. Useful for deduplication

        :param event_id: The event_id of this NewCrashGroupAlertingEvent.
        :type event_id: str
        """
        if event_id is None:
            raise ValueError("Invalid value for `event_id`, must not be `None`")

        self._event_id = event_id

    @property
    def event_timestamp(self):
        """Gets the event_timestamp of this NewCrashGroupAlertingEvent.

        ISO 8601 date time when event was generated

        :return: The event_timestamp of this NewCrashGroupAlertingEvent.
        :rtype: str
        """
        return self._event_timestamp

    @event_timestamp.setter
    def event_timestamp(self, event_timestamp):
        """Sets the event_timestamp of this NewCrashGroupAlertingEvent.

        ISO 8601 date time when event was generated

        :param event_timestamp: The event_timestamp of this NewCrashGroupAlertingEvent.
        :type event_timestamp: str
        """
        if event_timestamp is None:
            raise ValueError("Invalid value for `event_timestamp`, must not be `None`")

        self._event_timestamp = event_timestamp

    @property
    def properties(self):
        """Gets the properties of this NewCrashGroupAlertingEvent.

        Obsolete. Use emailProperties.

        :return: The properties of this NewCrashGroupAlertingEvent.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this NewCrashGroupAlertingEvent.

        Obsolete. Use emailProperties.

        :param properties: The properties of this NewCrashGroupAlertingEvent.
        :type properties: object
        """

        self._properties = properties

    @property
    def crash_group_properties(self):
        """Gets the crash_group_properties of this NewCrashGroupAlertingEvent.


        :return: The crash_group_properties of this NewCrashGroupAlertingEvent.
        :rtype: NewCrashGroupAlertingEventAllOfCrashGroupProperties
        """
        return self._crash_group_properties

    @crash_group_properties.setter
    def crash_group_properties(self, crash_group_properties):
        """Sets the crash_group_properties of this NewCrashGroupAlertingEvent.


        :param crash_group_properties: The crash_group_properties of this NewCrashGroupAlertingEvent.
        :type crash_group_properties: NewCrashGroupAlertingEventAllOfCrashGroupProperties
        """

        self._crash_group_properties = crash_group_properties
