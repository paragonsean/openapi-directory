# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.analytics_list_audiences200_response_values_inner import AnalyticsListAudiences200ResponseValuesInner
from openapi_server import util


class AudienceListResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_link: str=None, values: List[AnalyticsListAudiences200ResponseValuesInner]=None):
        """AudienceListResult - a model defined in OpenAPI

        :param next_link: The next_link of this AudienceListResult.
        :param values: The values of this AudienceListResult.
        """
        self.openapi_types = {
            'next_link': str,
            'values': List[AnalyticsListAudiences200ResponseValuesInner]
        }

        self.attribute_map = {
            'next_link': 'nextLink',
            'values': 'values'
        }

        self._next_link = next_link
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudienceListResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudienceListResult of this AudienceListResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_link(self):
        """Gets the next_link of this AudienceListResult.


        :return: The next_link of this AudienceListResult.
        :rtype: str
        """
        return self._next_link

    @next_link.setter
    def next_link(self, next_link):
        """Sets the next_link of this AudienceListResult.


        :param next_link: The next_link of this AudienceListResult.
        :type next_link: str
        """

        self._next_link = next_link

    @property
    def values(self):
        """Gets the values of this AudienceListResult.

        List of audiences.

        :return: The values of this AudienceListResult.
        :rtype: List[AnalyticsListAudiences200ResponseValuesInner]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this AudienceListResult.

        List of audiences.

        :param values: The values of this AudienceListResult.
        :type values: List[AnalyticsListAudiences200ResponseValuesInner]
        """
        if values is None:
            raise ValueError("Invalid value for `values`, must not be `None`")

        self._values = values
