# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AvailabilityOfDevicesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, password: str=None, service_connection_id: str=None, username: str=None):
        """AvailabilityOfDevicesRequest - a model defined in OpenAPI

        :param password: The password of this AvailabilityOfDevicesRequest.
        :param service_connection_id: The service_connection_id of this AvailabilityOfDevicesRequest.
        :param username: The username of this AvailabilityOfDevicesRequest.
        """
        self.openapi_types = {
            'password': str,
            'service_connection_id': str,
            'username': str
        }

        self.attribute_map = {
            'password': 'password',
            'service_connection_id': 'service_connection_id',
            'username': 'username'
        }

        self._password = password
        self._service_connection_id = service_connection_id
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailabilityOfDevicesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailabilityOfDevicesRequest of this AvailabilityOfDevicesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def password(self):
        """Gets the password of this AvailabilityOfDevicesRequest.

        The password for the Apple Developer account.

        :return: The password of this AvailabilityOfDevicesRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this AvailabilityOfDevicesRequest.

        The password for the Apple Developer account.

        :param password: The password of this AvailabilityOfDevicesRequest.
        :type password: str
        """

        self._password = password

    @property
    def service_connection_id(self):
        """Gets the service_connection_id of this AvailabilityOfDevicesRequest.

        The service_connection_id of the stored Apple credentials instad of username, password.

        :return: The service_connection_id of this AvailabilityOfDevicesRequest.
        :rtype: str
        """
        return self._service_connection_id

    @service_connection_id.setter
    def service_connection_id(self, service_connection_id):
        """Sets the service_connection_id of this AvailabilityOfDevicesRequest.

        The service_connection_id of the stored Apple credentials instad of username, password.

        :param service_connection_id: The service_connection_id of this AvailabilityOfDevicesRequest.
        :type service_connection_id: str
        """

        self._service_connection_id = service_connection_id

    @property
    def username(self):
        """Gets the username of this AvailabilityOfDevicesRequest.

        The username for the Apple Developer account.

        :return: The username of this AvailabilityOfDevicesRequest.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this AvailabilityOfDevicesRequest.

        The username for the Apple Developer account.

        :param username: The username of this AvailabilityOfDevicesRequest.
        :type username: str
        """

        self._username = username
