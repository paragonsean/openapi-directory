# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tester_app_with_release_response_owner import TesterAppWithReleaseResponseOwner
from openapi_server.models.tester_app_with_release_response_release import TesterAppWithReleaseResponseRelease
from openapi_server import util


class TesterAppWithReleaseResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, icon_url: str=None, id: str=None, name: str=None, os: str=None, owner: TesterAppWithReleaseResponseOwner=None, release: TesterAppWithReleaseResponseRelease=None):
        """TesterAppWithReleaseResponse - a model defined in OpenAPI

        :param description: The description of this TesterAppWithReleaseResponse.
        :param display_name: The display_name of this TesterAppWithReleaseResponse.
        :param icon_url: The icon_url of this TesterAppWithReleaseResponse.
        :param id: The id of this TesterAppWithReleaseResponse.
        :param name: The name of this TesterAppWithReleaseResponse.
        :param os: The os of this TesterAppWithReleaseResponse.
        :param owner: The owner of this TesterAppWithReleaseResponse.
        :param release: The release of this TesterAppWithReleaseResponse.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'icon_url': str,
            'id': str,
            'name': str,
            'os': str,
            'owner': TesterAppWithReleaseResponseOwner,
            'release': TesterAppWithReleaseResponseRelease
        }

        self.attribute_map = {
            'description': 'description',
            'display_name': 'display_name',
            'icon_url': 'icon_url',
            'id': 'id',
            'name': 'name',
            'os': 'os',
            'owner': 'owner',
            'release': 'release'
        }

        self._description = description
        self._display_name = display_name
        self._icon_url = icon_url
        self._id = id
        self._name = name
        self._os = os
        self._owner = owner
        self._release = release

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TesterAppWithReleaseResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TesterAppWithReleaseResponse of this TesterAppWithReleaseResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this TesterAppWithReleaseResponse.

        The description of the app

        :return: The description of this TesterAppWithReleaseResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TesterAppWithReleaseResponse.

        The description of the app

        :param description: The description of this TesterAppWithReleaseResponse.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this TesterAppWithReleaseResponse.

        The app's display name.

        :return: The display_name of this TesterAppWithReleaseResponse.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this TesterAppWithReleaseResponse.

        The app's display name.

        :param display_name: The display_name of this TesterAppWithReleaseResponse.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def icon_url(self):
        """Gets the icon_url of this TesterAppWithReleaseResponse.

        A URL to the app's icon.

        :return: The icon_url of this TesterAppWithReleaseResponse.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this TesterAppWithReleaseResponse.

        A URL to the app's icon.

        :param icon_url: The icon_url of this TesterAppWithReleaseResponse.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def id(self):
        """Gets the id of this TesterAppWithReleaseResponse.

        The unique ID (UUID) of the app

        :return: The id of this TesterAppWithReleaseResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TesterAppWithReleaseResponse.

        The unique ID (UUID) of the app

        :param id: The id of this TesterAppWithReleaseResponse.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this TesterAppWithReleaseResponse.

        The app's name.

        :return: The name of this TesterAppWithReleaseResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TesterAppWithReleaseResponse.

        The app's name.

        :param name: The name of this TesterAppWithReleaseResponse.
        :type name: str
        """

        self._name = name

    @property
    def os(self):
        """Gets the os of this TesterAppWithReleaseResponse.

        The app's os.

        :return: The os of this TesterAppWithReleaseResponse.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this TesterAppWithReleaseResponse.

        The app's os.

        :param os: The os of this TesterAppWithReleaseResponse.
        :type os: str
        """

        self._os = os

    @property
    def owner(self):
        """Gets the owner of this TesterAppWithReleaseResponse.


        :return: The owner of this TesterAppWithReleaseResponse.
        :rtype: TesterAppWithReleaseResponseOwner
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this TesterAppWithReleaseResponse.


        :param owner: The owner of this TesterAppWithReleaseResponse.
        :type owner: TesterAppWithReleaseResponseOwner
        """

        self._owner = owner

    @property
    def release(self):
        """Gets the release of this TesterAppWithReleaseResponse.


        :return: The release of this TesterAppWithReleaseResponse.
        :rtype: TesterAppWithReleaseResponseRelease
        """
        return self._release

    @release.setter
    def release(self, release):
        """Sets the release of this TesterAppWithReleaseResponse.


        :param release: The release of this TesterAppWithReleaseResponse.
        :type release: TesterAppWithReleaseResponseRelease
        """

        self._release = release
