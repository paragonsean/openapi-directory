# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.builds_list_toolset_projects200_response_xcode_xcode_scheme_containers_inner import BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner
from openapi_server import util


class XcodeToolset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, xcode_scheme_containers: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner]=None):
        """XcodeToolset - a model defined in OpenAPI

        :param xcode_scheme_containers: The xcode_scheme_containers of this XcodeToolset.
        """
        self.openapi_types = {
            'xcode_scheme_containers': List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner]
        }

        self.attribute_map = {
            'xcode_scheme_containers': 'xcodeSchemeContainers'
        }

        self._xcode_scheme_containers = xcode_scheme_containers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'XcodeToolset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The XcodeToolset of this XcodeToolset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def xcode_scheme_containers(self):
        """Gets the xcode_scheme_containers of this XcodeToolset.

        The Xcode scheme containers

        :return: The xcode_scheme_containers of this XcodeToolset.
        :rtype: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner]
        """
        return self._xcode_scheme_containers

    @xcode_scheme_containers.setter
    def xcode_scheme_containers(self, xcode_scheme_containers):
        """Sets the xcode_scheme_containers of this XcodeToolset.

        The Xcode scheme containers

        :param xcode_scheme_containers: The xcode_scheme_containers of this XcodeToolset.
        :type xcode_scheme_containers: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner]
        """
        if xcode_scheme_containers is None:
            raise ValueError("Invalid value for `xcode_scheme_containers`, must not be `None`")

        self._xcode_scheme_containers = xcode_scheme_containers
