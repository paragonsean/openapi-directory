# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.builds_list_branches200_response_inner_last_build import BuildsListBranches200ResponseInnerLastBuild
from openapi_server.models.builds_list_branches200_response_inner_value import BuildsListBranches200ResponseInnerValue
from openapi_server import util


class BranchStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configured: bool=None, last_build: BuildsListBranches200ResponseInnerLastBuild=None):
        """BranchStatus - a model defined in OpenAPI

        :param configured: The configured of this BranchStatus.
        :param last_build: The last_build of this BranchStatus.
        """
        self.openapi_types = {
            'configured': bool,
            'last_build': BuildsListBranches200ResponseInnerLastBuild
        }

        self.attribute_map = {
            'configured': 'configured',
            'last_build': 'lastBuild'
        }

        self._configured = configured
        self._last_build = last_build

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BranchStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BranchStatus of this BranchStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configured(self):
        """Gets the configured of this BranchStatus.


        :return: The configured of this BranchStatus.
        :rtype: bool
        """
        return self._configured

    @configured.setter
    def configured(self, configured):
        """Sets the configured of this BranchStatus.


        :param configured: The configured of this BranchStatus.
        :type configured: bool
        """
        if configured is None:
            raise ValueError("Invalid value for `configured`, must not be `None`")

        self._configured = configured

    @property
    def last_build(self):
        """Gets the last_build of this BranchStatus.


        :return: The last_build of this BranchStatus.
        :rtype: BuildsListBranches200ResponseInnerLastBuild
        """
        return self._last_build

    @last_build.setter
    def last_build(self, last_build):
        """Sets the last_build of this BranchStatus.


        :param last_build: The last_build of this BranchStatus.
        :type last_build: BuildsListBranches200ResponseInnerLastBuild
        """

        self._last_build = last_build
