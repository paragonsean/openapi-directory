# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutoProvisioningConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_auto_provisioning: bool=None, apple_developer_account_key: str=None, apple_distribution_certificate_key: str=None):
        """AutoProvisioningConfigRequest - a model defined in OpenAPI

        :param allow_auto_provisioning: The allow_auto_provisioning of this AutoProvisioningConfigRequest.
        :param apple_developer_account_key: The apple_developer_account_key of this AutoProvisioningConfigRequest.
        :param apple_distribution_certificate_key: The apple_distribution_certificate_key of this AutoProvisioningConfigRequest.
        """
        self.openapi_types = {
            'allow_auto_provisioning': bool,
            'apple_developer_account_key': str,
            'apple_distribution_certificate_key': str
        }

        self.attribute_map = {
            'allow_auto_provisioning': 'allow_auto_provisioning',
            'apple_developer_account_key': 'apple_developer_account_key',
            'apple_distribution_certificate_key': 'apple_distribution_certificate_key'
        }

        self._allow_auto_provisioning = allow_auto_provisioning
        self._apple_developer_account_key = apple_developer_account_key
        self._apple_distribution_certificate_key = apple_distribution_certificate_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoProvisioningConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoProvisioningConfigRequest of this AutoProvisioningConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_auto_provisioning(self):
        """Gets the allow_auto_provisioning of this AutoProvisioningConfigRequest.

        When *true* enables auto provisioning

        :return: The allow_auto_provisioning of this AutoProvisioningConfigRequest.
        :rtype: bool
        """
        return self._allow_auto_provisioning

    @allow_auto_provisioning.setter
    def allow_auto_provisioning(self, allow_auto_provisioning):
        """Sets the allow_auto_provisioning of this AutoProvisioningConfigRequest.

        When *true* enables auto provisioning

        :param allow_auto_provisioning: The allow_auto_provisioning of this AutoProvisioningConfigRequest.
        :type allow_auto_provisioning: bool
        """

        self._allow_auto_provisioning = allow_auto_provisioning

    @property
    def apple_developer_account_key(self):
        """Gets the apple_developer_account_key of this AutoProvisioningConfigRequest.

        A key to a secret in customer-credential-store. apple_developer_account refers to the user's developer account that is used to log into https://developer.apple.com. Normally the user's email.

        :return: The apple_developer_account_key of this AutoProvisioningConfigRequest.
        :rtype: str
        """
        return self._apple_developer_account_key

    @apple_developer_account_key.setter
    def apple_developer_account_key(self, apple_developer_account_key):
        """Sets the apple_developer_account_key of this AutoProvisioningConfigRequest.

        A key to a secret in customer-credential-store. apple_developer_account refers to the user's developer account that is used to log into https://developer.apple.com. Normally the user's email.

        :param apple_developer_account_key: The apple_developer_account_key of this AutoProvisioningConfigRequest.
        :type apple_developer_account_key: str
        """

        self._apple_developer_account_key = apple_developer_account_key

    @property
    def apple_distribution_certificate_key(self):
        """Gets the apple_distribution_certificate_key of this AutoProvisioningConfigRequest.

        A key to a secret in customer-credential-store. distribution_certificate refers to the customer's certificate (that holds the private key) that will be used to sign the app.

        :return: The apple_distribution_certificate_key of this AutoProvisioningConfigRequest.
        :rtype: str
        """
        return self._apple_distribution_certificate_key

    @apple_distribution_certificate_key.setter
    def apple_distribution_certificate_key(self, apple_distribution_certificate_key):
        """Sets the apple_distribution_certificate_key of this AutoProvisioningConfigRequest.

        A key to a secret in customer-credential-store. distribution_certificate refers to the customer's certificate (that holds the private key) that will be used to sign the app.

        :param apple_distribution_certificate_key: The apple_distribution_certificate_key of this AutoProvisioningConfigRequest.
        :type apple_distribution_certificate_key: str
        """

        self._apple_distribution_certificate_key = apple_distribution_certificate_key
