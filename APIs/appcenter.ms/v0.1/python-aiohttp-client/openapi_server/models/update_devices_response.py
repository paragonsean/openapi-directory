# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateDevicesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status_url: str=None):
        """UpdateDevicesResponse - a model defined in OpenAPI

        :param status_url: The status_url of this UpdateDevicesResponse.
        """
        self.openapi_types = {
            'status_url': str
        }

        self.attribute_map = {
            'status_url': 'status_url'
        }

        self._status_url = status_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDevicesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDevicesResponse of this UpdateDevicesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status_url(self):
        """Gets the status_url of this UpdateDevicesResponse.

        URL that can be used to check the status of the update devices operation.

        :return: The status_url of this UpdateDevicesResponse.
        :rtype: str
        """
        return self._status_url

    @status_url.setter
    def status_url(self, status_url):
        """Sets the status_url of this UpdateDevicesResponse.

        URL that can be used to check the status of the update devices operation.

        :param status_url: The status_url of this UpdateDevicesResponse.
        :type status_url: str
        """
        if status_url is None:
            raise ValueError("Invalid value for `status_url`, must not be `None`")

        self._status_url = status_url
