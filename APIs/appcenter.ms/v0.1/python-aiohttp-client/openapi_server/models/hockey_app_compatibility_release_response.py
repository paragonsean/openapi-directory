# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HockeyAppCompatibilityReleaseResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appsize: int=None, bundle_identifier: str=None, device_family: str=None, external: bool=None, id: int=None, install_url: str=None, mandatory: bool=None, minimum_os_version: str=None, notes: str=None, shortversion: str=None, uploaded_at: str=None, version: str=None):
        """HockeyAppCompatibilityReleaseResponse - a model defined in OpenAPI

        :param appsize: The appsize of this HockeyAppCompatibilityReleaseResponse.
        :param bundle_identifier: The bundle_identifier of this HockeyAppCompatibilityReleaseResponse.
        :param device_family: The device_family of this HockeyAppCompatibilityReleaseResponse.
        :param external: The external of this HockeyAppCompatibilityReleaseResponse.
        :param id: The id of this HockeyAppCompatibilityReleaseResponse.
        :param install_url: The install_url of this HockeyAppCompatibilityReleaseResponse.
        :param mandatory: The mandatory of this HockeyAppCompatibilityReleaseResponse.
        :param minimum_os_version: The minimum_os_version of this HockeyAppCompatibilityReleaseResponse.
        :param notes: The notes of this HockeyAppCompatibilityReleaseResponse.
        :param shortversion: The shortversion of this HockeyAppCompatibilityReleaseResponse.
        :param uploaded_at: The uploaded_at of this HockeyAppCompatibilityReleaseResponse.
        :param version: The version of this HockeyAppCompatibilityReleaseResponse.
        """
        self.openapi_types = {
            'appsize': int,
            'bundle_identifier': str,
            'device_family': str,
            'external': bool,
            'id': int,
            'install_url': str,
            'mandatory': bool,
            'minimum_os_version': str,
            'notes': str,
            'shortversion': str,
            'uploaded_at': str,
            'version': str
        }

        self.attribute_map = {
            'appsize': 'appsize',
            'bundle_identifier': 'bundle_identifier',
            'device_family': 'device_family',
            'external': 'external',
            'id': 'id',
            'install_url': 'install_url',
            'mandatory': 'mandatory',
            'minimum_os_version': 'minimum_os_version',
            'notes': 'notes',
            'shortversion': 'shortversion',
            'uploaded_at': 'uploaded_at',
            'version': 'version'
        }

        self._appsize = appsize
        self._bundle_identifier = bundle_identifier
        self._device_family = device_family
        self._external = external
        self._id = id
        self._install_url = install_url
        self._mandatory = mandatory
        self._minimum_os_version = minimum_os_version
        self._notes = notes
        self._shortversion = shortversion
        self._uploaded_at = uploaded_at
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HockeyAppCompatibilityReleaseResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HockeyAppCompatibilityReleaseResponse of this HockeyAppCompatibilityReleaseResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appsize(self):
        """Gets the appsize of this HockeyAppCompatibilityReleaseResponse.


        :return: The appsize of this HockeyAppCompatibilityReleaseResponse.
        :rtype: int
        """
        return self._appsize

    @appsize.setter
    def appsize(self, appsize):
        """Sets the appsize of this HockeyAppCompatibilityReleaseResponse.


        :param appsize: The appsize of this HockeyAppCompatibilityReleaseResponse.
        :type appsize: int
        """

        self._appsize = appsize

    @property
    def bundle_identifier(self):
        """Gets the bundle_identifier of this HockeyAppCompatibilityReleaseResponse.


        :return: The bundle_identifier of this HockeyAppCompatibilityReleaseResponse.
        :rtype: str
        """
        return self._bundle_identifier

    @bundle_identifier.setter
    def bundle_identifier(self, bundle_identifier):
        """Sets the bundle_identifier of this HockeyAppCompatibilityReleaseResponse.


        :param bundle_identifier: The bundle_identifier of this HockeyAppCompatibilityReleaseResponse.
        :type bundle_identifier: str
        """

        self._bundle_identifier = bundle_identifier

    @property
    def device_family(self):
        """Gets the device_family of this HockeyAppCompatibilityReleaseResponse.


        :return: The device_family of this HockeyAppCompatibilityReleaseResponse.
        :rtype: str
        """
        return self._device_family

    @device_family.setter
    def device_family(self, device_family):
        """Sets the device_family of this HockeyAppCompatibilityReleaseResponse.


        :param device_family: The device_family of this HockeyAppCompatibilityReleaseResponse.
        :type device_family: str
        """

        self._device_family = device_family

    @property
    def external(self):
        """Gets the external of this HockeyAppCompatibilityReleaseResponse.


        :return: The external of this HockeyAppCompatibilityReleaseResponse.
        :rtype: bool
        """
        return self._external

    @external.setter
    def external(self, external):
        """Sets the external of this HockeyAppCompatibilityReleaseResponse.


        :param external: The external of this HockeyAppCompatibilityReleaseResponse.
        :type external: bool
        """

        self._external = external

    @property
    def id(self):
        """Gets the id of this HockeyAppCompatibilityReleaseResponse.


        :return: The id of this HockeyAppCompatibilityReleaseResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HockeyAppCompatibilityReleaseResponse.


        :param id: The id of this HockeyAppCompatibilityReleaseResponse.
        :type id: int
        """

        self._id = id

    @property
    def install_url(self):
        """Gets the install_url of this HockeyAppCompatibilityReleaseResponse.


        :return: The install_url of this HockeyAppCompatibilityReleaseResponse.
        :rtype: str
        """
        return self._install_url

    @install_url.setter
    def install_url(self, install_url):
        """Sets the install_url of this HockeyAppCompatibilityReleaseResponse.


        :param install_url: The install_url of this HockeyAppCompatibilityReleaseResponse.
        :type install_url: str
        """

        self._install_url = install_url

    @property
    def mandatory(self):
        """Gets the mandatory of this HockeyAppCompatibilityReleaseResponse.


        :return: The mandatory of this HockeyAppCompatibilityReleaseResponse.
        :rtype: bool
        """
        return self._mandatory

    @mandatory.setter
    def mandatory(self, mandatory):
        """Sets the mandatory of this HockeyAppCompatibilityReleaseResponse.


        :param mandatory: The mandatory of this HockeyAppCompatibilityReleaseResponse.
        :type mandatory: bool
        """

        self._mandatory = mandatory

    @property
    def minimum_os_version(self):
        """Gets the minimum_os_version of this HockeyAppCompatibilityReleaseResponse.


        :return: The minimum_os_version of this HockeyAppCompatibilityReleaseResponse.
        :rtype: str
        """
        return self._minimum_os_version

    @minimum_os_version.setter
    def minimum_os_version(self, minimum_os_version):
        """Sets the minimum_os_version of this HockeyAppCompatibilityReleaseResponse.


        :param minimum_os_version: The minimum_os_version of this HockeyAppCompatibilityReleaseResponse.
        :type minimum_os_version: str
        """

        self._minimum_os_version = minimum_os_version

    @property
    def notes(self):
        """Gets the notes of this HockeyAppCompatibilityReleaseResponse.


        :return: The notes of this HockeyAppCompatibilityReleaseResponse.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this HockeyAppCompatibilityReleaseResponse.


        :param notes: The notes of this HockeyAppCompatibilityReleaseResponse.
        :type notes: str
        """

        self._notes = notes

    @property
    def shortversion(self):
        """Gets the shortversion of this HockeyAppCompatibilityReleaseResponse.


        :return: The shortversion of this HockeyAppCompatibilityReleaseResponse.
        :rtype: str
        """
        return self._shortversion

    @shortversion.setter
    def shortversion(self, shortversion):
        """Sets the shortversion of this HockeyAppCompatibilityReleaseResponse.


        :param shortversion: The shortversion of this HockeyAppCompatibilityReleaseResponse.
        :type shortversion: str
        """

        self._shortversion = shortversion

    @property
    def uploaded_at(self):
        """Gets the uploaded_at of this HockeyAppCompatibilityReleaseResponse.


        :return: The uploaded_at of this HockeyAppCompatibilityReleaseResponse.
        :rtype: str
        """
        return self._uploaded_at

    @uploaded_at.setter
    def uploaded_at(self, uploaded_at):
        """Sets the uploaded_at of this HockeyAppCompatibilityReleaseResponse.


        :param uploaded_at: The uploaded_at of this HockeyAppCompatibilityReleaseResponse.
        :type uploaded_at: str
        """

        self._uploaded_at = uploaded_at

    @property
    def version(self):
        """Gets the version of this HockeyAppCompatibilityReleaseResponse.


        :return: The version of this HockeyAppCompatibilityReleaseResponse.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this HockeyAppCompatibilityReleaseResponse.


        :param version: The version of this HockeyAppCompatibilityReleaseResponse.
        :type version: str
        """

        self._version = version
