# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AzureSubscriptionAddRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_billing: bool=None, subscription_id: str=None, subscription_name: str=None, tenant_id: str=None):
        """AzureSubscriptionAddRequest - a model defined in OpenAPI

        :param is_billing: The is_billing of this AzureSubscriptionAddRequest.
        :param subscription_id: The subscription_id of this AzureSubscriptionAddRequest.
        :param subscription_name: The subscription_name of this AzureSubscriptionAddRequest.
        :param tenant_id: The tenant_id of this AzureSubscriptionAddRequest.
        """
        self.openapi_types = {
            'is_billing': bool,
            'subscription_id': str,
            'subscription_name': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'is_billing': 'is_billing',
            'subscription_id': 'subscription_id',
            'subscription_name': 'subscription_name',
            'tenant_id': 'tenant_id'
        }

        self._is_billing = is_billing
        self._subscription_id = subscription_id
        self._subscription_name = subscription_name
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureSubscriptionAddRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureSubscriptionAddRequest of this AzureSubscriptionAddRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_billing(self):
        """Gets the is_billing of this AzureSubscriptionAddRequest.

        If the subscription is used for billing

        :return: The is_billing of this AzureSubscriptionAddRequest.
        :rtype: bool
        """
        return self._is_billing

    @is_billing.setter
    def is_billing(self, is_billing):
        """Sets the is_billing of this AzureSubscriptionAddRequest.

        If the subscription is used for billing

        :param is_billing: The is_billing of this AzureSubscriptionAddRequest.
        :type is_billing: bool
        """

        self._is_billing = is_billing

    @property
    def subscription_id(self):
        """Gets the subscription_id of this AzureSubscriptionAddRequest.

        The azure subscription id

        :return: The subscription_id of this AzureSubscriptionAddRequest.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this AzureSubscriptionAddRequest.

        The azure subscription id

        :param subscription_id: The subscription_id of this AzureSubscriptionAddRequest.
        :type subscription_id: str
        """
        if subscription_id is None:
            raise ValueError("Invalid value for `subscription_id`, must not be `None`")

        self._subscription_id = subscription_id

    @property
    def subscription_name(self):
        """Gets the subscription_name of this AzureSubscriptionAddRequest.

        The name of the azure subscription

        :return: The subscription_name of this AzureSubscriptionAddRequest.
        :rtype: str
        """
        return self._subscription_name

    @subscription_name.setter
    def subscription_name(self, subscription_name):
        """Sets the subscription_name of this AzureSubscriptionAddRequest.

        The name of the azure subscription

        :param subscription_name: The subscription_name of this AzureSubscriptionAddRequest.
        :type subscription_name: str
        """
        if subscription_name is None:
            raise ValueError("Invalid value for `subscription_name`, must not be `None`")

        self._subscription_name = subscription_name

    @property
    def tenant_id(self):
        """Gets the tenant_id of this AzureSubscriptionAddRequest.

        The tenant id of the azure subscription belongs to

        :return: The tenant_id of this AzureSubscriptionAddRequest.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this AzureSubscriptionAddRequest.

        The tenant id of the azure subscription belongs to

        :param tenant_id: The tenant_id of this AzureSubscriptionAddRequest.
        :type tenant_id: str
        """
        if tenant_id is None:
            raise ValueError("Invalid value for `tenant_id`, must not be `None`")

        self._tenant_id = tenant_id
