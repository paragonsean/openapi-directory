# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReleasesUpdateReleaseUploadStatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upload_status: str=None):
        """ReleasesUpdateReleaseUploadStatusRequest - a model defined in OpenAPI

        :param upload_status: The upload_status of this ReleasesUpdateReleaseUploadStatusRequest.
        """
        self.openapi_types = {
            'upload_status': str
        }

        self.attribute_map = {
            'upload_status': 'upload_status'
        }

        self._upload_status = upload_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReleasesUpdateReleaseUploadStatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The releases_updateReleaseUploadStatus_request of this ReleasesUpdateReleaseUploadStatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upload_status(self):
        """Gets the upload_status of this ReleasesUpdateReleaseUploadStatusRequest.

        The new status of the release upload

        :return: The upload_status of this ReleasesUpdateReleaseUploadStatusRequest.
        :rtype: str
        """
        return self._upload_status

    @upload_status.setter
    def upload_status(self, upload_status):
        """Sets the upload_status of this ReleasesUpdateReleaseUploadStatusRequest.

        The new status of the release upload

        :param upload_status: The upload_status of this ReleasesUpdateReleaseUploadStatusRequest.
        :type upload_status: str
        """
        allowed_values = ["uploadFinished", "uploadCanceled"]  # noqa: E501
        if upload_status not in allowed_values:
            raise ValueError(
                "Invalid value for `upload_status` ({0}), must be one of {1}"
                .format(upload_status, allowed_values)
            )

        self._upload_status = upload_status
