# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.store_releases_list200_response_inner_distribution_stores_inner import StoreReleasesList200ResponseInnerDistributionStoresInner
from openapi_server import util


class StoresBasicReleaseDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_type: str=None, distribution_stores: List[StoreReleasesList200ResponseInnerDistributionStoresInner]=None, id: float=None, short_version: str=None, uploaded_at: str=None, version: str=None):
        """StoresBasicReleaseDetails - a model defined in OpenAPI

        :param destination_type: The destination_type of this StoresBasicReleaseDetails.
        :param distribution_stores: The distribution_stores of this StoresBasicReleaseDetails.
        :param id: The id of this StoresBasicReleaseDetails.
        :param short_version: The short_version of this StoresBasicReleaseDetails.
        :param uploaded_at: The uploaded_at of this StoresBasicReleaseDetails.
        :param version: The version of this StoresBasicReleaseDetails.
        """
        self.openapi_types = {
            'destination_type': str,
            'distribution_stores': List[StoreReleasesList200ResponseInnerDistributionStoresInner],
            'id': float,
            'short_version': str,
            'uploaded_at': str,
            'version': str
        }

        self.attribute_map = {
            'destination_type': 'destination_type',
            'distribution_stores': 'distribution_stores',
            'id': 'id',
            'short_version': 'short_version',
            'uploaded_at': 'uploaded_at',
            'version': 'version'
        }

        self._destination_type = destination_type
        self._distribution_stores = distribution_stores
        self._id = id
        self._short_version = short_version
        self._uploaded_at = uploaded_at
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoresBasicReleaseDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StoresBasicReleaseDetails of this StoresBasicReleaseDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_type(self):
        """Gets the destination_type of this StoresBasicReleaseDetails.

        Destination for this release.

        :return: The destination_type of this StoresBasicReleaseDetails.
        :rtype: str
        """
        return self._destination_type

    @destination_type.setter
    def destination_type(self, destination_type):
        """Sets the destination_type of this StoresBasicReleaseDetails.

        Destination for this release.

        :param destination_type: The destination_type of this StoresBasicReleaseDetails.
        :type destination_type: str
        """
        allowed_values = ["group", "store", "tester"]  # noqa: E501
        if destination_type not in allowed_values:
            raise ValueError(
                "Invalid value for `destination_type` ({0}), must be one of {1}"
                .format(destination_type, allowed_values)
            )

        self._destination_type = destination_type

    @property
    def distribution_stores(self):
        """Gets the distribution_stores of this StoresBasicReleaseDetails.

        a list of distribution stores that are associated with this release.

        :return: The distribution_stores of this StoresBasicReleaseDetails.
        :rtype: List[StoreReleasesList200ResponseInnerDistributionStoresInner]
        """
        return self._distribution_stores

    @distribution_stores.setter
    def distribution_stores(self, distribution_stores):
        """Sets the distribution_stores of this StoresBasicReleaseDetails.

        a list of distribution stores that are associated with this release.

        :param distribution_stores: The distribution_stores of this StoresBasicReleaseDetails.
        :type distribution_stores: List[StoreReleasesList200ResponseInnerDistributionStoresInner]
        """

        self._distribution_stores = distribution_stores

    @property
    def id(self):
        """Gets the id of this StoresBasicReleaseDetails.

        ID identifying this unique release.

        :return: The id of this StoresBasicReleaseDetails.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StoresBasicReleaseDetails.

        ID identifying this unique release.

        :param id: The id of this StoresBasicReleaseDetails.
        :type id: float
        """

        self._id = id

    @property
    def short_version(self):
        """Gets the short_version of this StoresBasicReleaseDetails.

        The release's short version. For iOS: CFBundleShortVersionString from info.plist. For Android: android:versionName from AppManifest.xml. 

        :return: The short_version of this StoresBasicReleaseDetails.
        :rtype: str
        """
        return self._short_version

    @short_version.setter
    def short_version(self, short_version):
        """Sets the short_version of this StoresBasicReleaseDetails.

        The release's short version. For iOS: CFBundleShortVersionString from info.plist. For Android: android:versionName from AppManifest.xml. 

        :param short_version: The short_version of this StoresBasicReleaseDetails.
        :type short_version: str
        """

        self._short_version = short_version

    @property
    def uploaded_at(self):
        """Gets the uploaded_at of this StoresBasicReleaseDetails.

        UTC time in ISO 8601 format of the uploaded time.

        :return: The uploaded_at of this StoresBasicReleaseDetails.
        :rtype: str
        """
        return self._uploaded_at

    @uploaded_at.setter
    def uploaded_at(self, uploaded_at):
        """Sets the uploaded_at of this StoresBasicReleaseDetails.

        UTC time in ISO 8601 format of the uploaded time.

        :param uploaded_at: The uploaded_at of this StoresBasicReleaseDetails.
        :type uploaded_at: str
        """

        self._uploaded_at = uploaded_at

    @property
    def version(self):
        """Gets the version of this StoresBasicReleaseDetails.

        The release's version. For iOS: CFBundleVersion from info.plist. For Android: android:versionCode from AppManifest.xml. 

        :return: The version of this StoresBasicReleaseDetails.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this StoresBasicReleaseDetails.

        The release's version. For iOS: CFBundleVersion from info.plist. For Android: android:versionCode from AppManifest.xml. 

        :param version: The version of this StoresBasicReleaseDetails.
        :type version: str
        """

        self._version = version
