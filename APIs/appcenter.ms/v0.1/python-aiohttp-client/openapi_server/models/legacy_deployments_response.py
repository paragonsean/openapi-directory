# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.legacy_deployment_response_deployment_value import LegacyDeploymentResponseDeploymentValue
from openapi_server import util


class LegacyDeploymentsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployments: List[LegacyDeploymentResponseDeploymentValue]=None):
        """LegacyDeploymentsResponse - a model defined in OpenAPI

        :param deployments: The deployments of this LegacyDeploymentsResponse.
        """
        self.openapi_types = {
            'deployments': List[LegacyDeploymentResponseDeploymentValue]
        }

        self.attribute_map = {
            'deployments': 'deployments'
        }

        self._deployments = deployments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegacyDeploymentsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LegacyDeploymentsResponse of this LegacyDeploymentsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployments(self):
        """Gets the deployments of this LegacyDeploymentsResponse.


        :return: The deployments of this LegacyDeploymentsResponse.
        :rtype: List[LegacyDeploymentResponseDeploymentValue]
        """
        return self._deployments

    @deployments.setter
    def deployments(self, deployments):
        """Sets the deployments of this LegacyDeploymentsResponse.


        :param deployments: The deployments of this LegacyDeploymentsResponse.
        :type deployments: List[LegacyDeploymentResponseDeploymentValue]
        """

        self._deployments = deployments
