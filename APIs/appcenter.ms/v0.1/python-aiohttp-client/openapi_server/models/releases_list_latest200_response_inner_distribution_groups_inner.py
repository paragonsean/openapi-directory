# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReleasesListLatest200ResponseInnerDistributionGroupsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, is_latest: bool=None):
        """ReleasesListLatest200ResponseInnerDistributionGroupsInner - a model defined in OpenAPI

        :param id: The id of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        :param name: The name of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        :param is_latest: The is_latest of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'is_latest': bool
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'is_latest': 'is_latest'
        }

        self._id = id
        self._name = name
        self._is_latest = is_latest

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReleasesListLatest200ResponseInnerDistributionGroupsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The releases_listLatest_200_response_inner_distribution_groups_inner of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.

        ID identifying a unique distribution group.

        :return: The id of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.

        ID identifying a unique distribution group.

        :param id: The id of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.

        A name identifying a unique distribution group.

        :return: The name of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.

        A name identifying a unique distribution group.

        :param name: The name of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        :type name: str
        """

        self._name = name

    @property
    def is_latest(self):
        """Gets the is_latest of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.

        Is the containing release the latest one in this distribution group.

        :return: The is_latest of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        :rtype: bool
        """
        return self._is_latest

    @is_latest.setter
    def is_latest(self, is_latest):
        """Sets the is_latest of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.

        Is the containing release the latest one in this distribution group.

        :param is_latest: The is_latest of this ReleasesListLatest200ResponseInnerDistributionGroupsInner.
        :type is_latest: bool
        """

        self._is_latest = is_latest
