# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublishDevicesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profile_file_name: str=None, profiles_zip_base64: str=None):
        """PublishDevicesResponse - a model defined in OpenAPI

        :param profile_file_name: The profile_file_name of this PublishDevicesResponse.
        :param profiles_zip_base64: The profiles_zip_base64 of this PublishDevicesResponse.
        """
        self.openapi_types = {
            'profile_file_name': str,
            'profiles_zip_base64': str
        }

        self.attribute_map = {
            'profile_file_name': 'profile_file_name',
            'profiles_zip_base64': 'profiles_zip_base64'
        }

        self._profile_file_name = profile_file_name
        self._profiles_zip_base64 = profiles_zip_base64

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishDevicesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishDevicesResponse of this PublishDevicesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profile_file_name(self):
        """Gets the profile_file_name of this PublishDevicesResponse.

        The file name for the provisioning profile.

        :return: The profile_file_name of this PublishDevicesResponse.
        :rtype: str
        """
        return self._profile_file_name

    @profile_file_name.setter
    def profile_file_name(self, profile_file_name):
        """Sets the profile_file_name of this PublishDevicesResponse.

        The file name for the provisioning profile.

        :param profile_file_name: The profile_file_name of this PublishDevicesResponse.
        :type profile_file_name: str
        """

        self._profile_file_name = profile_file_name

    @property
    def profiles_zip_base64(self):
        """Gets the profiles_zip_base64 of this PublishDevicesResponse.

        The updated provisioning profiles zip base64 encoded.

        :return: The profiles_zip_base64 of this PublishDevicesResponse.
        :rtype: str
        """
        return self._profiles_zip_base64

    @profiles_zip_base64.setter
    def profiles_zip_base64(self, profiles_zip_base64):
        """Sets the profiles_zip_base64 of this PublishDevicesResponse.

        The updated provisioning profiles zip base64 encoded.

        :param profiles_zip_base64: The profiles_zip_base64 of this PublishDevicesResponse.
        :type profiles_zip_base64: str
        """
        if profiles_zip_base64 is None:
            raise ValueError("Invalid value for `profiles_zip_base64`, must not be `None`")

        self._profiles_zip_base64 = profiles_zip_base64
