# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExternallyHostedReleaseCreateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_number: str=None, build_version: str=None, external_download_url: str=None):
        """ExternallyHostedReleaseCreateRequest - a model defined in OpenAPI

        :param build_number: The build_number of this ExternallyHostedReleaseCreateRequest.
        :param build_version: The build_version of this ExternallyHostedReleaseCreateRequest.
        :param external_download_url: The external_download_url of this ExternallyHostedReleaseCreateRequest.
        """
        self.openapi_types = {
            'build_number': str,
            'build_version': str,
            'external_download_url': str
        }

        self.attribute_map = {
            'build_number': 'build_number',
            'build_version': 'build_version',
            'external_download_url': 'external_download_url'
        }

        self._build_number = build_number
        self._build_version = build_version
        self._external_download_url = external_download_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExternallyHostedReleaseCreateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExternallyHostedReleaseCreateRequest of this ExternallyHostedReleaseCreateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_number(self):
        """Gets the build_number of this ExternallyHostedReleaseCreateRequest.

        The build number of the uploaded binary

        :return: The build_number of this ExternallyHostedReleaseCreateRequest.
        :rtype: str
        """
        return self._build_number

    @build_number.setter
    def build_number(self, build_number):
        """Sets the build_number of this ExternallyHostedReleaseCreateRequest.

        The build number of the uploaded binary

        :param build_number: The build_number of this ExternallyHostedReleaseCreateRequest.
        :type build_number: str
        """

        self._build_number = build_number

    @property
    def build_version(self):
        """Gets the build_version of this ExternallyHostedReleaseCreateRequest.

        The build version of the uploaded binary

        :return: The build_version of this ExternallyHostedReleaseCreateRequest.
        :rtype: str
        """
        return self._build_version

    @build_version.setter
    def build_version(self, build_version):
        """Sets the build_version of this ExternallyHostedReleaseCreateRequest.

        The build version of the uploaded binary

        :param build_version: The build_version of this ExternallyHostedReleaseCreateRequest.
        :type build_version: str
        """
        if build_version is None:
            raise ValueError("Invalid value for `build_version`, must not be `None`")

        self._build_version = build_version

    @property
    def external_download_url(self):
        """Gets the external_download_url of this ExternallyHostedReleaseCreateRequest.

        The external URL to the release's binary.

        :return: The external_download_url of this ExternallyHostedReleaseCreateRequest.
        :rtype: str
        """
        return self._external_download_url

    @external_download_url.setter
    def external_download_url(self, external_download_url):
        """Sets the external_download_url of this ExternallyHostedReleaseCreateRequest.

        The external URL to the release's binary.

        :param external_download_url: The external_download_url of this ExternallyHostedReleaseCreateRequest.
        :type external_download_url: str
        """
        if external_download_url is None:
            raise ValueError("Invalid value for `external_download_url`, must not be `None`")

        self._external_download_url = external_download_url
