# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AzureSubscriptionAddToAppRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscription_id: str=None):
        """AzureSubscriptionAddToAppRequest - a model defined in OpenAPI

        :param subscription_id: The subscription_id of this AzureSubscriptionAddToAppRequest.
        """
        self.openapi_types = {
            'subscription_id': str
        }

        self.attribute_map = {
            'subscription_id': 'subscription_id'
        }

        self._subscription_id = subscription_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureSubscriptionAddToAppRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureSubscriptionAddToAppRequest of this AzureSubscriptionAddToAppRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscription_id(self):
        """Gets the subscription_id of this AzureSubscriptionAddToAppRequest.

        The azure subscription id

        :return: The subscription_id of this AzureSubscriptionAddToAppRequest.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this AzureSubscriptionAddToAppRequest.

        The azure subscription id

        :param subscription_id: The subscription_id of this AzureSubscriptionAddToAppRequest.
        :type subscription_id: str
        """
        if subscription_id is None:
            raise ValueError("Invalid value for `subscription_id`, must not be `None`")

        self._subscription_id = subscription_id
