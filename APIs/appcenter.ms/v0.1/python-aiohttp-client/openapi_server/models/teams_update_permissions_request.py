# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeamsUpdatePermissionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permissions: List[str]=None):
        """TeamsUpdatePermissionsRequest - a model defined in OpenAPI

        :param permissions: The permissions of this TeamsUpdatePermissionsRequest.
        """
        self.openapi_types = {
            'permissions': List[str]
        }

        self.attribute_map = {
            'permissions': 'permissions'
        }

        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamsUpdatePermissionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The teams_updatePermissions_request of this TeamsUpdatePermissionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permissions(self):
        """Gets the permissions of this TeamsUpdatePermissionsRequest.

        The permissions all members of the team have on the app

        :return: The permissions of this TeamsUpdatePermissionsRequest.
        :rtype: List[str]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this TeamsUpdatePermissionsRequest.

        The permissions all members of the team have on the app

        :param permissions: The permissions of this TeamsUpdatePermissionsRequest.
        :type permissions: List[str]
        """
        allowed_values = ["manager", "developer", "viewer"]  # noqa: E501
        if not set(permissions).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `permissions` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(permissions) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._permissions = permissions
