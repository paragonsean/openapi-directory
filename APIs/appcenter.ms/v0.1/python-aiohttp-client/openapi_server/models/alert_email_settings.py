# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.notifications_get_app_email_settings200_response_all_of_all_of_settings_inner import NotificationsGetAppEmailSettings200ResponseAllOfAllOfSettingsInner
from openapi_server import util


class AlertEmailSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, settings: List[NotificationsGetAppEmailSettings200ResponseAllOfAllOfSettingsInner]=None):
        """AlertEmailSettings - a model defined in OpenAPI

        :param settings: The settings of this AlertEmailSettings.
        """
        self.openapi_types = {
            'settings': List[NotificationsGetAppEmailSettings200ResponseAllOfAllOfSettingsInner]
        }

        self.attribute_map = {
            'settings': 'settings'
        }

        self._settings = settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertEmailSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertEmailSettings of this AlertEmailSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def settings(self):
        """Gets the settings of this AlertEmailSettings.

        The settings the user has for the app

        :return: The settings of this AlertEmailSettings.
        :rtype: List[NotificationsGetAppEmailSettings200ResponseAllOfAllOfSettingsInner]
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this AlertEmailSettings.

        The settings the user has for the app

        :param settings: The settings of this AlertEmailSettings.
        :type settings: List[NotificationsGetAppEmailSettings200ResponseAllOfAllOfSettingsInner]
        """
        if settings is None:
            raise ValueError("Invalid value for `settings`, must not be `None`")

        self._settings = settings
