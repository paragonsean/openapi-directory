# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_releases_container_releases_inner import DeleteReleasesContainerReleasesInner
from openapi_server import util


class DeleteReleasesContainer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, releases: List[DeleteReleasesContainerReleasesInner]=None):
        """DeleteReleasesContainer - a model defined in OpenAPI

        :param releases: The releases of this DeleteReleasesContainer.
        """
        self.openapi_types = {
            'releases': List[DeleteReleasesContainerReleasesInner]
        }

        self.attribute_map = {
            'releases': 'releases'
        }

        self._releases = releases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteReleasesContainer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteReleasesContainer of this DeleteReleasesContainer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def releases(self):
        """Gets the releases of this DeleteReleasesContainer.


        :return: The releases of this DeleteReleasesContainer.
        :rtype: List[DeleteReleasesContainerReleasesInner]
        """
        return self._releases

    @releases.setter
    def releases(self, releases):
        """Sets the releases of this DeleteReleasesContainer.


        :param releases: The releases of this DeleteReleasesContainer.
        :type releases: List[DeleteReleasesContainerReleasesInner]
        """
        if releases is None:
            raise ValueError("Invalid value for `releases`, must not be `None`")
        if releases is not None and len(releases) < 1:
            raise ValueError("Invalid value for `releases`, number of items must be greater than or equal to `1`")

        self._releases = releases
