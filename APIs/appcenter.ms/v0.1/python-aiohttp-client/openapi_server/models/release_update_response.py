# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.releases_update_details200_response_destinations_inner import ReleasesUpdateDetails200ResponseDestinationsInner
from openapi_server import util


class ReleaseUpdateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destinations: List[ReleasesUpdateDetails200ResponseDestinationsInner]=None, enabled: bool=None, mandatory_update: bool=None, provisioning_status_url: str=None, release_notes: str=None):
        """ReleaseUpdateResponse - a model defined in OpenAPI

        :param destinations: The destinations of this ReleaseUpdateResponse.
        :param enabled: The enabled of this ReleaseUpdateResponse.
        :param mandatory_update: The mandatory_update of this ReleaseUpdateResponse.
        :param provisioning_status_url: The provisioning_status_url of this ReleaseUpdateResponse.
        :param release_notes: The release_notes of this ReleaseUpdateResponse.
        """
        self.openapi_types = {
            'destinations': List[ReleasesUpdateDetails200ResponseDestinationsInner],
            'enabled': bool,
            'mandatory_update': bool,
            'provisioning_status_url': str,
            'release_notes': str
        }

        self.attribute_map = {
            'destinations': 'destinations',
            'enabled': 'enabled',
            'mandatory_update': 'mandatory_update',
            'provisioning_status_url': 'provisioning_status_url',
            'release_notes': 'release_notes'
        }

        self._destinations = destinations
        self._enabled = enabled
        self._mandatory_update = mandatory_update
        self._provisioning_status_url = provisioning_status_url
        self._release_notes = release_notes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReleaseUpdateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReleaseUpdateResponse of this ReleaseUpdateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destinations(self):
        """Gets the destinations of this ReleaseUpdateResponse.


        :return: The destinations of this ReleaseUpdateResponse.
        :rtype: List[ReleasesUpdateDetails200ResponseDestinationsInner]
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this ReleaseUpdateResponse.


        :param destinations: The destinations of this ReleaseUpdateResponse.
        :type destinations: List[ReleasesUpdateDetails200ResponseDestinationsInner]
        """

        self._destinations = destinations

    @property
    def enabled(self):
        """Gets the enabled of this ReleaseUpdateResponse.


        :return: The enabled of this ReleaseUpdateResponse.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ReleaseUpdateResponse.


        :param enabled: The enabled of this ReleaseUpdateResponse.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def mandatory_update(self):
        """Gets the mandatory_update of this ReleaseUpdateResponse.


        :return: The mandatory_update of this ReleaseUpdateResponse.
        :rtype: bool
        """
        return self._mandatory_update

    @mandatory_update.setter
    def mandatory_update(self, mandatory_update):
        """Sets the mandatory_update of this ReleaseUpdateResponse.


        :param mandatory_update: The mandatory_update of this ReleaseUpdateResponse.
        :type mandatory_update: bool
        """

        self._mandatory_update = mandatory_update

    @property
    def provisioning_status_url(self):
        """Gets the provisioning_status_url of this ReleaseUpdateResponse.


        :return: The provisioning_status_url of this ReleaseUpdateResponse.
        :rtype: str
        """
        return self._provisioning_status_url

    @provisioning_status_url.setter
    def provisioning_status_url(self, provisioning_status_url):
        """Sets the provisioning_status_url of this ReleaseUpdateResponse.


        :param provisioning_status_url: The provisioning_status_url of this ReleaseUpdateResponse.
        :type provisioning_status_url: str
        """

        self._provisioning_status_url = provisioning_status_url

    @property
    def release_notes(self):
        """Gets the release_notes of this ReleaseUpdateResponse.


        :return: The release_notes of this ReleaseUpdateResponse.
        :rtype: str
        """
        return self._release_notes

    @release_notes.setter
    def release_notes(self, release_notes):
        """Sets the release_notes of this ReleaseUpdateResponse.


        :param release_notes: The release_notes of this ReleaseUpdateResponse.
        :type release_notes: str
        """

        self._release_notes = release_notes
