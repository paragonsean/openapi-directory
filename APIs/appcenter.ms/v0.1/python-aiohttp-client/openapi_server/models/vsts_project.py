# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VSTSProject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: str=None, name: str=None, state: str=None, url: str=None, visibility: str=None):
        """VSTSProject - a model defined in OpenAPI

        :param description: The description of this VSTSProject.
        :param id: The id of this VSTSProject.
        :param name: The name of this VSTSProject.
        :param state: The state of this VSTSProject.
        :param url: The url of this VSTSProject.
        :param visibility: The visibility of this VSTSProject.
        """
        self.openapi_types = {
            'description': str,
            'id': str,
            'name': str,
            'state': str,
            'url': str,
            'visibility': str
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'name': 'name',
            'state': 'state',
            'url': 'url',
            'visibility': 'visibility'
        }

        self._description = description
        self._id = id
        self._name = name
        self._state = state
        self._url = url
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VSTSProject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VSTSProject of this VSTSProject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this VSTSProject.

        Project description

        :return: The description of this VSTSProject.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VSTSProject.

        Project description

        :param description: The description of this VSTSProject.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this VSTSProject.

        Project id

        :return: The id of this VSTSProject.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VSTSProject.

        Project id

        :param id: The id of this VSTSProject.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this VSTSProject.

        Project name

        :return: The name of this VSTSProject.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VSTSProject.

        Project name

        :param name: The name of this VSTSProject.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this VSTSProject.

        Project state

        :return: The state of this VSTSProject.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this VSTSProject.

        Project state

        :param state: The state of this VSTSProject.
        :type state: str
        """

        self._state = state

    @property
    def url(self):
        """Gets the url of this VSTSProject.

        Project URL

        :return: The url of this VSTSProject.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VSTSProject.

        Project URL

        :param url: The url of this VSTSProject.
        :type url: str
        """

        self._url = url

    @property
    def visibility(self):
        """Gets the visibility of this VSTSProject.

        Project visibility

        :return: The visibility of this VSTSProject.
        :rtype: str
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this VSTSProject.

        Project visibility

        :param visibility: The visibility of this VSTSProject.
        :type visibility: str
        """

        self._visibility = visibility
