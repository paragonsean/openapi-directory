# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DistributionSettingsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_public: bool=None):
        """DistributionSettingsResponse - a model defined in OpenAPI

        :param default_public: The default_public of this DistributionSettingsResponse.
        """
        self.openapi_types = {
            'default_public': bool
        }

        self.attribute_map = {
            'default_public': 'default_public'
        }

        self._default_public = default_public

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DistributionSettingsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DistributionSettingsResponse of this DistributionSettingsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_public(self):
        """Gets the default_public of this DistributionSettingsResponse.

        Is this app using the \"Default to Public Distribution Groups\" logic

        :return: The default_public of this DistributionSettingsResponse.
        :rtype: bool
        """
        return self._default_public

    @default_public.setter
    def default_public(self, default_public):
        """Sets the default_public of this DistributionSettingsResponse.

        Is this app using the \"Default to Public Distribution Groups\" logic

        :param default_public: The default_public of this DistributionSettingsResponse.
        :type default_public: bool
        """
        if default_public is None:
            raise ValueError("Invalid value for `default_public`, must not be `None`")

        self._default_public = default_public
