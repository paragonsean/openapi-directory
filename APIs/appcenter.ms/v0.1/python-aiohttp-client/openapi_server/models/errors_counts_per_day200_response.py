# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.errors_counts_per_day200_response_errors_inner import ErrorsCountsPerDay200ResponseErrorsInner
from openapi_server import util


class ErrorsCountsPerDay200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, errors: List[ErrorsCountsPerDay200ResponseErrorsInner]=None):
        """ErrorsCountsPerDay200Response - a model defined in OpenAPI

        :param count: The count of this ErrorsCountsPerDay200Response.
        :param errors: The errors of this ErrorsCountsPerDay200Response.
        """
        self.openapi_types = {
            'count': int,
            'errors': List[ErrorsCountsPerDay200ResponseErrorsInner]
        }

        self.attribute_map = {
            'count': 'count',
            'errors': 'errors'
        }

        self._count = count
        self._errors = errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorsCountsPerDay200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Errors_CountsPerDay_200_response of this ErrorsCountsPerDay200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this ErrorsCountsPerDay200Response.

        total error count

        :return: The count of this ErrorsCountsPerDay200Response.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this ErrorsCountsPerDay200Response.

        total error count

        :param count: The count of this ErrorsCountsPerDay200Response.
        :type count: int
        """

        self._count = count

    @property
    def errors(self):
        """Gets the errors of this ErrorsCountsPerDay200Response.

        the total error count for day

        :return: The errors of this ErrorsCountsPerDay200Response.
        :rtype: List[ErrorsCountsPerDay200ResponseErrorsInner]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ErrorsCountsPerDay200Response.

        the total error count for day

        :param errors: The errors of this ErrorsCountsPerDay200Response.
        :type errors: List[ErrorsCountsPerDay200ResponseErrorsInner]
        """

        self._errors = errors
