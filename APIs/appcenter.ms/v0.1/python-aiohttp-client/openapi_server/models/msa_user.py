# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MSAUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hexcid: str=None):
        """MSAUser - a model defined in OpenAPI

        :param hexcid: The hexcid of this MSAUser.
        """
        self.openapi_types = {
            'hexcid': str
        }

        self.attribute_map = {
            'hexcid': 'hexcid'
        }

        self._hexcid = hexcid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MSAUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MSAUser of this MSAUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hexcid(self):
        """Gets the hexcid of this MSAUser.

        the user's CID

        :return: The hexcid of this MSAUser.
        :rtype: str
        """
        return self._hexcid

    @hexcid.setter
    def hexcid(self, hexcid):
        """Sets the hexcid of this MSAUser.

        the user's CID

        :param hexcid: The hexcid of this MSAUser.
        :type hexcid: str
        """
        if hexcid is None:
            raise ValueError("Invalid value for `hexcid`, must not be `None`")

        self._hexcid = hexcid
