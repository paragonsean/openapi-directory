# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.builds_list_toolset_projects200_response_android import BuildsListToolsetProjects200ResponseAndroid
from openapi_server.models.builds_list_toolset_projects200_response_buildscripts_value import BuildsListToolsetProjects200ResponseBuildscriptsValue
from openapi_server.models.builds_list_toolset_projects200_response_javascript import BuildsListToolsetProjects200ResponseJavascript
from openapi_server.models.builds_list_toolset_projects200_response_testcloud import BuildsListToolsetProjects200ResponseTestcloud
from openapi_server.models.builds_list_toolset_projects200_response_uwp import BuildsListToolsetProjects200ResponseUwp
from openapi_server.models.builds_list_toolset_projects200_response_xamarin import BuildsListToolsetProjects200ResponseXamarin
from openapi_server.models.builds_list_toolset_projects200_response_xcode import BuildsListToolsetProjects200ResponseXcode
from openapi_server import util


class ToolsetProjects(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android: BuildsListToolsetProjects200ResponseAndroid=None, buildscripts: Dict[str, BuildsListToolsetProjects200ResponseBuildscriptsValue]=None, commit: str=None, javascript: BuildsListToolsetProjects200ResponseJavascript=None, testcloud: BuildsListToolsetProjects200ResponseTestcloud=None, uwp: BuildsListToolsetProjects200ResponseUwp=None, xamarin: BuildsListToolsetProjects200ResponseXamarin=None, xcode: BuildsListToolsetProjects200ResponseXcode=None):
        """ToolsetProjects - a model defined in OpenAPI

        :param android: The android of this ToolsetProjects.
        :param buildscripts: The buildscripts of this ToolsetProjects.
        :param commit: The commit of this ToolsetProjects.
        :param javascript: The javascript of this ToolsetProjects.
        :param testcloud: The testcloud of this ToolsetProjects.
        :param uwp: The uwp of this ToolsetProjects.
        :param xamarin: The xamarin of this ToolsetProjects.
        :param xcode: The xcode of this ToolsetProjects.
        """
        self.openapi_types = {
            'android': BuildsListToolsetProjects200ResponseAndroid,
            'buildscripts': Dict[str, BuildsListToolsetProjects200ResponseBuildscriptsValue],
            'commit': str,
            'javascript': BuildsListToolsetProjects200ResponseJavascript,
            'testcloud': BuildsListToolsetProjects200ResponseTestcloud,
            'uwp': BuildsListToolsetProjects200ResponseUwp,
            'xamarin': BuildsListToolsetProjects200ResponseXamarin,
            'xcode': BuildsListToolsetProjects200ResponseXcode
        }

        self.attribute_map = {
            'android': 'android',
            'buildscripts': 'buildscripts',
            'commit': 'commit',
            'javascript': 'javascript',
            'testcloud': 'testcloud',
            'uwp': 'uwp',
            'xamarin': 'xamarin',
            'xcode': 'xcode'
        }

        self._android = android
        self._buildscripts = buildscripts
        self._commit = commit
        self._javascript = javascript
        self._testcloud = testcloud
        self._uwp = uwp
        self._xamarin = xamarin
        self._xcode = xcode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ToolsetProjects':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ToolsetProjects of this ToolsetProjects.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android(self):
        """Gets the android of this ToolsetProjects.


        :return: The android of this ToolsetProjects.
        :rtype: BuildsListToolsetProjects200ResponseAndroid
        """
        return self._android

    @android.setter
    def android(self, android):
        """Sets the android of this ToolsetProjects.


        :param android: The android of this ToolsetProjects.
        :type android: BuildsListToolsetProjects200ResponseAndroid
        """

        self._android = android

    @property
    def buildscripts(self):
        """Gets the buildscripts of this ToolsetProjects.

        A collection of detected pre/post buildscripts for current platform toolset

        :return: The buildscripts of this ToolsetProjects.
        :rtype: Dict[str, BuildsListToolsetProjects200ResponseBuildscriptsValue]
        """
        return self._buildscripts

    @buildscripts.setter
    def buildscripts(self, buildscripts):
        """Sets the buildscripts of this ToolsetProjects.

        A collection of detected pre/post buildscripts for current platform toolset

        :param buildscripts: The buildscripts of this ToolsetProjects.
        :type buildscripts: Dict[str, BuildsListToolsetProjects200ResponseBuildscriptsValue]
        """

        self._buildscripts = buildscripts

    @property
    def commit(self):
        """Gets the commit of this ToolsetProjects.

        The commit hash of the analyzed commit

        :return: The commit of this ToolsetProjects.
        :rtype: str
        """
        return self._commit

    @commit.setter
    def commit(self, commit):
        """Sets the commit of this ToolsetProjects.

        The commit hash of the analyzed commit

        :param commit: The commit of this ToolsetProjects.
        :type commit: str
        """

        self._commit = commit

    @property
    def javascript(self):
        """Gets the javascript of this ToolsetProjects.


        :return: The javascript of this ToolsetProjects.
        :rtype: BuildsListToolsetProjects200ResponseJavascript
        """
        return self._javascript

    @javascript.setter
    def javascript(self, javascript):
        """Sets the javascript of this ToolsetProjects.


        :param javascript: The javascript of this ToolsetProjects.
        :type javascript: BuildsListToolsetProjects200ResponseJavascript
        """

        self._javascript = javascript

    @property
    def testcloud(self):
        """Gets the testcloud of this ToolsetProjects.


        :return: The testcloud of this ToolsetProjects.
        :rtype: BuildsListToolsetProjects200ResponseTestcloud
        """
        return self._testcloud

    @testcloud.setter
    def testcloud(self, testcloud):
        """Sets the testcloud of this ToolsetProjects.


        :param testcloud: The testcloud of this ToolsetProjects.
        :type testcloud: BuildsListToolsetProjects200ResponseTestcloud
        """

        self._testcloud = testcloud

    @property
    def uwp(self):
        """Gets the uwp of this ToolsetProjects.


        :return: The uwp of this ToolsetProjects.
        :rtype: BuildsListToolsetProjects200ResponseUwp
        """
        return self._uwp

    @uwp.setter
    def uwp(self, uwp):
        """Sets the uwp of this ToolsetProjects.


        :param uwp: The uwp of this ToolsetProjects.
        :type uwp: BuildsListToolsetProjects200ResponseUwp
        """

        self._uwp = uwp

    @property
    def xamarin(self):
        """Gets the xamarin of this ToolsetProjects.


        :return: The xamarin of this ToolsetProjects.
        :rtype: BuildsListToolsetProjects200ResponseXamarin
        """
        return self._xamarin

    @xamarin.setter
    def xamarin(self, xamarin):
        """Sets the xamarin of this ToolsetProjects.


        :param xamarin: The xamarin of this ToolsetProjects.
        :type xamarin: BuildsListToolsetProjects200ResponseXamarin
        """

        self._xamarin = xamarin

    @property
    def xcode(self):
        """Gets the xcode of this ToolsetProjects.


        :return: The xcode of this ToolsetProjects.
        :rtype: BuildsListToolsetProjects200ResponseXcode
        """
        return self._xcode

    @xcode.setter
    def xcode(self, xcode):
        """Sets the xcode of this ToolsetProjects.


        :param xcode: The xcode of this ToolsetProjects.
        :type xcode: BuildsListToolsetProjects200ResponseXcode
        """

        self._xcode = xcode
