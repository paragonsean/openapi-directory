# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.new_app_release_alerting_event_all_of_app_release_properties import NewAppReleaseAlertingEventAllOfAppReleaseProperties
from openapi_server import util


class NewAppReleaseAlertingEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_id: str=None, event_timestamp: str=None, properties: object=None, app_release_properties: NewAppReleaseAlertingEventAllOfAppReleaseProperties=None, disable_webhook: bool=None, user_ids: List[str]=None):
        """NewAppReleaseAlertingEvent - a model defined in OpenAPI

        :param event_id: The event_id of this NewAppReleaseAlertingEvent.
        :param event_timestamp: The event_timestamp of this NewAppReleaseAlertingEvent.
        :param properties: The properties of this NewAppReleaseAlertingEvent.
        :param app_release_properties: The app_release_properties of this NewAppReleaseAlertingEvent.
        :param disable_webhook: The disable_webhook of this NewAppReleaseAlertingEvent.
        :param user_ids: The user_ids of this NewAppReleaseAlertingEvent.
        """
        self.openapi_types = {
            'event_id': str,
            'event_timestamp': str,
            'properties': object,
            'app_release_properties': NewAppReleaseAlertingEventAllOfAppReleaseProperties,
            'disable_webhook': bool,
            'user_ids': List[str]
        }

        self.attribute_map = {
            'event_id': 'event_id',
            'event_timestamp': 'event_timestamp',
            'properties': 'properties',
            'app_release_properties': 'app_release_properties',
            'disable_webhook': 'disable_webhook',
            'user_ids': 'user_ids'
        }

        self._event_id = event_id
        self._event_timestamp = event_timestamp
        self._properties = properties
        self._app_release_properties = app_release_properties
        self._disable_webhook = disable_webhook
        self._user_ids = user_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewAppReleaseAlertingEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewAppReleaseAlertingEvent of this NewAppReleaseAlertingEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_id(self):
        """Gets the event_id of this NewAppReleaseAlertingEvent.

        A unique identifier for this event instance. Useful for deduplication

        :return: The event_id of this NewAppReleaseAlertingEvent.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this NewAppReleaseAlertingEvent.

        A unique identifier for this event instance. Useful for deduplication

        :param event_id: The event_id of this NewAppReleaseAlertingEvent.
        :type event_id: str
        """
        if event_id is None:
            raise ValueError("Invalid value for `event_id`, must not be `None`")

        self._event_id = event_id

    @property
    def event_timestamp(self):
        """Gets the event_timestamp of this NewAppReleaseAlertingEvent.

        ISO 8601 date time when event was generated

        :return: The event_timestamp of this NewAppReleaseAlertingEvent.
        :rtype: str
        """
        return self._event_timestamp

    @event_timestamp.setter
    def event_timestamp(self, event_timestamp):
        """Sets the event_timestamp of this NewAppReleaseAlertingEvent.

        ISO 8601 date time when event was generated

        :param event_timestamp: The event_timestamp of this NewAppReleaseAlertingEvent.
        :type event_timestamp: str
        """
        if event_timestamp is None:
            raise ValueError("Invalid value for `event_timestamp`, must not be `None`")

        self._event_timestamp = event_timestamp

    @property
    def properties(self):
        """Gets the properties of this NewAppReleaseAlertingEvent.

        Obsolete. Use emailProperties.

        :return: The properties of this NewAppReleaseAlertingEvent.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this NewAppReleaseAlertingEvent.

        Obsolete. Use emailProperties.

        :param properties: The properties of this NewAppReleaseAlertingEvent.
        :type properties: object
        """

        self._properties = properties

    @property
    def app_release_properties(self):
        """Gets the app_release_properties of this NewAppReleaseAlertingEvent.


        :return: The app_release_properties of this NewAppReleaseAlertingEvent.
        :rtype: NewAppReleaseAlertingEventAllOfAppReleaseProperties
        """
        return self._app_release_properties

    @app_release_properties.setter
    def app_release_properties(self, app_release_properties):
        """Sets the app_release_properties of this NewAppReleaseAlertingEvent.


        :param app_release_properties: The app_release_properties of this NewAppReleaseAlertingEvent.
        :type app_release_properties: NewAppReleaseAlertingEventAllOfAppReleaseProperties
        """

        self._app_release_properties = app_release_properties

    @property
    def disable_webhook(self):
        """Gets the disable_webhook of this NewAppReleaseAlertingEvent.

        indicate whether notify via webhook or not

        :return: The disable_webhook of this NewAppReleaseAlertingEvent.
        :rtype: bool
        """
        return self._disable_webhook

    @disable_webhook.setter
    def disable_webhook(self, disable_webhook):
        """Sets the disable_webhook of this NewAppReleaseAlertingEvent.

        indicate whether notify via webhook or not

        :param disable_webhook: The disable_webhook of this NewAppReleaseAlertingEvent.
        :type disable_webhook: bool
        """

        self._disable_webhook = disable_webhook

    @property
    def user_ids(self):
        """Gets the user_ids of this NewAppReleaseAlertingEvent.

        List of users who need to receive an email notification. If this is not null, then only sending emails will be triggered even if the event requires calling webhooks or doing other actions.

        :return: The user_ids of this NewAppReleaseAlertingEvent.
        :rtype: List[str]
        """
        return self._user_ids

    @user_ids.setter
    def user_ids(self, user_ids):
        """Sets the user_ids of this NewAppReleaseAlertingEvent.

        List of users who need to receive an email notification. If this is not null, then only sending emails will be triggered even if the event requires calling webhooks or doing other actions.

        :param user_ids: The user_ids of this NewAppReleaseAlertingEvent.
        :type user_ids: List[str]
        """

        self._user_ids = user_ids
