# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.builds_list_toolset_projects200_response_android_android_modules_inner import BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner
from openapi_server import util


class BuildsListToolsetProjects200ResponseAndroid(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android_modules: List[BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner]=None, gradle_wrapper_path: str=None):
        """BuildsListToolsetProjects200ResponseAndroid - a model defined in OpenAPI

        :param android_modules: The android_modules of this BuildsListToolsetProjects200ResponseAndroid.
        :param gradle_wrapper_path: The gradle_wrapper_path of this BuildsListToolsetProjects200ResponseAndroid.
        """
        self.openapi_types = {
            'android_modules': List[BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner],
            'gradle_wrapper_path': str
        }

        self.attribute_map = {
            'android_modules': 'androidModules',
            'gradle_wrapper_path': 'gradleWrapperPath'
        }

        self._android_modules = android_modules
        self._gradle_wrapper_path = gradle_wrapper_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildsListToolsetProjects200ResponseAndroid':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The builds_listToolsetProjects_200_response_android of this BuildsListToolsetProjects200ResponseAndroid.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android_modules(self):
        """Gets the android_modules of this BuildsListToolsetProjects200ResponseAndroid.

        Android Gradle modules

        :return: The android_modules of this BuildsListToolsetProjects200ResponseAndroid.
        :rtype: List[BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner]
        """
        return self._android_modules

    @android_modules.setter
    def android_modules(self, android_modules):
        """Sets the android_modules of this BuildsListToolsetProjects200ResponseAndroid.

        Android Gradle modules

        :param android_modules: The android_modules of this BuildsListToolsetProjects200ResponseAndroid.
        :type android_modules: List[BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner]
        """
        if android_modules is None:
            raise ValueError("Invalid value for `android_modules`, must not be `None`")

        self._android_modules = android_modules

    @property
    def gradle_wrapper_path(self):
        """Gets the gradle_wrapper_path of this BuildsListToolsetProjects200ResponseAndroid.

        The path of the Gradle wrapper

        :return: The gradle_wrapper_path of this BuildsListToolsetProjects200ResponseAndroid.
        :rtype: str
        """
        return self._gradle_wrapper_path

    @gradle_wrapper_path.setter
    def gradle_wrapper_path(self, gradle_wrapper_path):
        """Sets the gradle_wrapper_path of this BuildsListToolsetProjects200ResponseAndroid.

        The path of the Gradle wrapper

        :param gradle_wrapper_path: The gradle_wrapper_path of this BuildsListToolsetProjects200ResponseAndroid.
        :type gradle_wrapper_path: str
        """

        self._gradle_wrapper_path = gradle_wrapper_path
