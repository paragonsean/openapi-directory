# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestGdprExportApp200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash_files_url: str=None):
        """TestGdprExportApp200Response - a model defined in OpenAPI

        :param hash_files_url: The hash_files_url of this TestGdprExportApp200Response.
        """
        self.openapi_types = {
            'hash_files_url': str
        }

        self.attribute_map = {
            'hash_files_url': 'hash_files_url'
        }

        self._hash_files_url = hash_files_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestGdprExportApp200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The test_gdprExportApp_200_response of this TestGdprExportApp200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash_files_url(self):
        """Gets the hash_files_url of this TestGdprExportApp200Response.


        :return: The hash_files_url of this TestGdprExportApp200Response.
        :rtype: str
        """
        return self._hash_files_url

    @hash_files_url.setter
    def hash_files_url(self, hash_files_url):
        """Sets the hash_files_url of this TestGdprExportApp200Response.


        :param hash_files_url: The hash_files_url of this TestGdprExportApp200Response.
        :type hash_files_url: str
        """

        self._hash_files_url = hash_files_url
