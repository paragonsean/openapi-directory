# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GDPRValidationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hockeyapp_release_ids: List[int]=None, release_ids: List[int]=None, release_upload_ids: List[str]=None):
        """GDPRValidationRequest - a model defined in OpenAPI

        :param hockeyapp_release_ids: The hockeyapp_release_ids of this GDPRValidationRequest.
        :param release_ids: The release_ids of this GDPRValidationRequest.
        :param release_upload_ids: The release_upload_ids of this GDPRValidationRequest.
        """
        self.openapi_types = {
            'hockeyapp_release_ids': List[int],
            'release_ids': List[int],
            'release_upload_ids': List[str]
        }

        self.attribute_map = {
            'hockeyapp_release_ids': 'hockeyapp_release_ids',
            'release_ids': 'release_ids',
            'release_upload_ids': 'release_upload_ids'
        }

        self._hockeyapp_release_ids = hockeyapp_release_ids
        self._release_ids = release_ids
        self._release_upload_ids = release_upload_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GDPRValidationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GDPRValidationRequest of this GDPRValidationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hockeyapp_release_ids(self):
        """Gets the hockeyapp_release_ids of this GDPRValidationRequest.

        a list of release ids to validate (HA flow)

        :return: The hockeyapp_release_ids of this GDPRValidationRequest.
        :rtype: List[int]
        """
        return self._hockeyapp_release_ids

    @hockeyapp_release_ids.setter
    def hockeyapp_release_ids(self, hockeyapp_release_ids):
        """Sets the hockeyapp_release_ids of this GDPRValidationRequest.

        a list of release ids to validate (HA flow)

        :param hockeyapp_release_ids: The hockeyapp_release_ids of this GDPRValidationRequest.
        :type hockeyapp_release_ids: List[int]
        """

        self._hockeyapp_release_ids = hockeyapp_release_ids

    @property
    def release_ids(self):
        """Gets the release_ids of this GDPRValidationRequest.

        a list of release ids to validate (AC flow)

        :return: The release_ids of this GDPRValidationRequest.
        :rtype: List[int]
        """
        return self._release_ids

    @release_ids.setter
    def release_ids(self, release_ids):
        """Sets the release_ids of this GDPRValidationRequest.

        a list of release ids to validate (AC flow)

        :param release_ids: The release_ids of this GDPRValidationRequest.
        :type release_ids: List[int]
        """
        if release_ids is None:
            raise ValueError("Invalid value for `release_ids`, must not be `None`")

        self._release_ids = release_ids

    @property
    def release_upload_ids(self):
        """Gets the release_upload_ids of this GDPRValidationRequest.

        a list of release uploads ids to validate

        :return: The release_upload_ids of this GDPRValidationRequest.
        :rtype: List[str]
        """
        return self._release_upload_ids

    @release_upload_ids.setter
    def release_upload_ids(self, release_upload_ids):
        """Sets the release_upload_ids of this GDPRValidationRequest.

        a list of release uploads ids to validate

        :param release_upload_ids: The release_upload_ids of this GDPRValidationRequest.
        :type release_upload_ids: List[str]
        """

        self._release_upload_ids = release_upload_ids
