# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataSubjectRighBlobContainerInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_path: str=None, sas_uri: str=None):
        """DataSubjectRighBlobContainerInfo - a model defined in OpenAPI

        :param blob_path: The blob_path of this DataSubjectRighBlobContainerInfo.
        :param sas_uri: The sas_uri of this DataSubjectRighBlobContainerInfo.
        """
        self.openapi_types = {
            'blob_path': str,
            'sas_uri': str
        }

        self.attribute_map = {
            'blob_path': 'blobPath',
            'sas_uri': 'sasUri'
        }

        self._blob_path = blob_path
        self._sas_uri = sas_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSubjectRighBlobContainerInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSubjectRighBlobContainerInfo of this DataSubjectRighBlobContainerInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_path(self):
        """Gets the blob_path of this DataSubjectRighBlobContainerInfo.


        :return: The blob_path of this DataSubjectRighBlobContainerInfo.
        :rtype: str
        """
        return self._blob_path

    @blob_path.setter
    def blob_path(self, blob_path):
        """Sets the blob_path of this DataSubjectRighBlobContainerInfo.


        :param blob_path: The blob_path of this DataSubjectRighBlobContainerInfo.
        :type blob_path: str
        """
        if blob_path is None:
            raise ValueError("Invalid value for `blob_path`, must not be `None`")

        self._blob_path = blob_path

    @property
    def sas_uri(self):
        """Gets the sas_uri of this DataSubjectRighBlobContainerInfo.


        :return: The sas_uri of this DataSubjectRighBlobContainerInfo.
        :rtype: str
        """
        return self._sas_uri

    @sas_uri.setter
    def sas_uri(self, sas_uri):
        """Sets the sas_uri of this DataSubjectRighBlobContainerInfo.


        :param sas_uri: The sas_uri of this DataSubjectRighBlobContainerInfo.
        :type sas_uri: str
        """
        if sas_uri is None:
            raise ValueError("Invalid value for `sas_uri`, must not be `None`")

        self._sas_uri = sas_uri
