# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrivateReleaseUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, publishing_status: str=None):
        """PrivateReleaseUpdateRequest - a model defined in OpenAPI

        :param publishing_status: The publishing_status of this PrivateReleaseUpdateRequest.
        """
        self.openapi_types = {
            'publishing_status': str
        }

        self.attribute_map = {
            'publishing_status': 'publishing_status'
        }

        self._publishing_status = publishing_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateReleaseUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateReleaseUpdateRequest of this PrivateReleaseUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def publishing_status(self):
        """Gets the publishing_status of this PrivateReleaseUpdateRequest.

        The store publishing status.

        :return: The publishing_status of this PrivateReleaseUpdateRequest.
        :rtype: str
        """
        return self._publishing_status

    @publishing_status.setter
    def publishing_status(self, publishing_status):
        """Sets the publishing_status of this PrivateReleaseUpdateRequest.

        The store publishing status.

        :param publishing_status: The publishing_status of this PrivateReleaseUpdateRequest.
        :type publishing_status: str
        """
        allowed_values = ["failed", "processing", "submitted", "timeout"]  # noqa: E501
        if publishing_status not in allowed_values:
            raise ValueError(
                "Invalid value for `publishing_status` ({0}), must be one of {1}"
                .format(publishing_status, allowed_values)
            )

        self._publishing_status = publishing_status
