# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlertWebhookPingResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_id: str=None, response_reason: str=None, response_status_code: int=None):
        """AlertWebhookPingResult - a model defined in OpenAPI

        :param request_id: The request_id of this AlertWebhookPingResult.
        :param response_reason: The response_reason of this AlertWebhookPingResult.
        :param response_status_code: The response_status_code of this AlertWebhookPingResult.
        """
        self.openapi_types = {
            'request_id': str,
            'response_reason': str,
            'response_status_code': int
        }

        self.attribute_map = {
            'request_id': 'request_id',
            'response_reason': 'response_reason',
            'response_status_code': 'response_status_code'
        }

        self._request_id = request_id
        self._response_reason = response_reason
        self._response_status_code = response_status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertWebhookPingResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertWebhookPingResult of this AlertWebhookPingResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_id(self):
        """Gets the request_id of this AlertWebhookPingResult.

        Unique request identifier for tracking

        :return: The request_id of this AlertWebhookPingResult.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this AlertWebhookPingResult.

        Unique request identifier for tracking

        :param request_id: The request_id of this AlertWebhookPingResult.
        :type request_id: str
        """
        if request_id is None:
            raise ValueError("Invalid value for `request_id`, must not be `None`")

        self._request_id = request_id

    @property
    def response_reason(self):
        """Gets the response_reason of this AlertWebhookPingResult.

        Reason returned in response from calling webhook

        :return: The response_reason of this AlertWebhookPingResult.
        :rtype: str
        """
        return self._response_reason

    @response_reason.setter
    def response_reason(self, response_reason):
        """Sets the response_reason of this AlertWebhookPingResult.

        Reason returned in response from calling webhook

        :param response_reason: The response_reason of this AlertWebhookPingResult.
        :type response_reason: str
        """

        self._response_reason = response_reason

    @property
    def response_status_code(self):
        """Gets the response_status_code of this AlertWebhookPingResult.

        HTTP status code returned in response from calling webhook

        :return: The response_status_code of this AlertWebhookPingResult.
        :rtype: int
        """
        return self._response_status_code

    @response_status_code.setter
    def response_status_code(self, response_status_code):
        """Sets the response_status_code of this AlertWebhookPingResult.

        HTTP status code returned in response from calling webhook

        :param response_status_code: The response_status_code of this AlertWebhookPingResult.
        :type response_status_code: int
        """
        if response_status_code is None:
            raise ValueError("Invalid value for `response_status_code`, must not be `None`")

        self._response_status_code = response_status_code
