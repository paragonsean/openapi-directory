# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GrantAdminRoleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_role: str=None):
        """GrantAdminRoleRequest - a model defined in OpenAPI

        :param admin_role: The admin_role of this GrantAdminRoleRequest.
        """
        self.openapi_types = {
            'admin_role': str
        }

        self.attribute_map = {
            'admin_role': 'admin_role'
        }

        self._admin_role = admin_role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GrantAdminRoleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GrantAdminRoleRequest of this GrantAdminRoleRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_role(self):
        """Gets the admin_role of this GrantAdminRoleRequest.

        The new admin_role

        :return: The admin_role of this GrantAdminRoleRequest.
        :rtype: str
        """
        return self._admin_role

    @admin_role.setter
    def admin_role(self, admin_role):
        """Sets the admin_role of this GrantAdminRoleRequest.

        The new admin_role

        :param admin_role: The admin_role of this GrantAdminRoleRequest.
        :type admin_role: str
        """
        allowed_values = ["superAdmin", "admin", "devOps", "customerSupport", "notAdmin"]  # noqa: E501
        if admin_role not in allowed_values:
            raise ValueError(
                "Invalid value for `admin_role` ({0}), must be one of {1}"
                .format(admin_role, allowed_values)
            )

        self._admin_role = admin_role
