# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_get_test_report200_response_features_inner_tests_inner import TestGetTestReport200ResponseFeaturesInnerTestsInner
from openapi_server import util


class TestGetTestReport200ResponseFeaturesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failed: float=None, name: str=None, peak_duration: float=None, peak_memory: float=None, skipped: float=None, tests: List[TestGetTestReport200ResponseFeaturesInnerTestsInner]=None):
        """TestGetTestReport200ResponseFeaturesInner - a model defined in OpenAPI

        :param failed: The failed of this TestGetTestReport200ResponseFeaturesInner.
        :param name: The name of this TestGetTestReport200ResponseFeaturesInner.
        :param peak_duration: The peak_duration of this TestGetTestReport200ResponseFeaturesInner.
        :param peak_memory: The peak_memory of this TestGetTestReport200ResponseFeaturesInner.
        :param skipped: The skipped of this TestGetTestReport200ResponseFeaturesInner.
        :param tests: The tests of this TestGetTestReport200ResponseFeaturesInner.
        """
        self.openapi_types = {
            'failed': float,
            'name': str,
            'peak_duration': float,
            'peak_memory': float,
            'skipped': float,
            'tests': List[TestGetTestReport200ResponseFeaturesInnerTestsInner]
        }

        self.attribute_map = {
            'failed': 'failed',
            'name': 'name',
            'peak_duration': 'peakDuration',
            'peak_memory': 'peakMemory',
            'skipped': 'skipped',
            'tests': 'tests'
        }

        self._failed = failed
        self._name = name
        self._peak_duration = peak_duration
        self._peak_memory = peak_memory
        self._skipped = skipped
        self._tests = tests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestGetTestReport200ResponseFeaturesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The test_getTestReport_200_response_features_inner of this TestGetTestReport200ResponseFeaturesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failed(self):
        """Gets the failed of this TestGetTestReport200ResponseFeaturesInner.


        :return: The failed of this TestGetTestReport200ResponseFeaturesInner.
        :rtype: float
        """
        return self._failed

    @failed.setter
    def failed(self, failed):
        """Sets the failed of this TestGetTestReport200ResponseFeaturesInner.


        :param failed: The failed of this TestGetTestReport200ResponseFeaturesInner.
        :type failed: float
        """

        self._failed = failed

    @property
    def name(self):
        """Gets the name of this TestGetTestReport200ResponseFeaturesInner.


        :return: The name of this TestGetTestReport200ResponseFeaturesInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TestGetTestReport200ResponseFeaturesInner.


        :param name: The name of this TestGetTestReport200ResponseFeaturesInner.
        :type name: str
        """

        self._name = name

    @property
    def peak_duration(self):
        """Gets the peak_duration of this TestGetTestReport200ResponseFeaturesInner.


        :return: The peak_duration of this TestGetTestReport200ResponseFeaturesInner.
        :rtype: float
        """
        return self._peak_duration

    @peak_duration.setter
    def peak_duration(self, peak_duration):
        """Sets the peak_duration of this TestGetTestReport200ResponseFeaturesInner.


        :param peak_duration: The peak_duration of this TestGetTestReport200ResponseFeaturesInner.
        :type peak_duration: float
        """

        self._peak_duration = peak_duration

    @property
    def peak_memory(self):
        """Gets the peak_memory of this TestGetTestReport200ResponseFeaturesInner.


        :return: The peak_memory of this TestGetTestReport200ResponseFeaturesInner.
        :rtype: float
        """
        return self._peak_memory

    @peak_memory.setter
    def peak_memory(self, peak_memory):
        """Sets the peak_memory of this TestGetTestReport200ResponseFeaturesInner.


        :param peak_memory: The peak_memory of this TestGetTestReport200ResponseFeaturesInner.
        :type peak_memory: float
        """

        self._peak_memory = peak_memory

    @property
    def skipped(self):
        """Gets the skipped of this TestGetTestReport200ResponseFeaturesInner.


        :return: The skipped of this TestGetTestReport200ResponseFeaturesInner.
        :rtype: float
        """
        return self._skipped

    @skipped.setter
    def skipped(self, skipped):
        """Sets the skipped of this TestGetTestReport200ResponseFeaturesInner.


        :param skipped: The skipped of this TestGetTestReport200ResponseFeaturesInner.
        :type skipped: float
        """

        self._skipped = skipped

    @property
    def tests(self):
        """Gets the tests of this TestGetTestReport200ResponseFeaturesInner.


        :return: The tests of this TestGetTestReport200ResponseFeaturesInner.
        :rtype: List[TestGetTestReport200ResponseFeaturesInnerTestsInner]
        """
        return self._tests

    @tests.setter
    def tests(self, tests):
        """Sets the tests of this TestGetTestReport200ResponseFeaturesInner.


        :param tests: The tests of this TestGetTestReport200ResponseFeaturesInner.
        :type tests: List[TestGetTestReport200ResponseFeaturesInnerTestsInner]
        """

        self._tests = tests
