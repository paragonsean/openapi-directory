# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LegacyDeploymentMetricsResponseMetricsValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: int=None, downloaded: int=None, failed: int=None, installed: int=None):
        """LegacyDeploymentMetricsResponseMetricsValue - a model defined in OpenAPI

        :param active: The active of this LegacyDeploymentMetricsResponseMetricsValue.
        :param downloaded: The downloaded of this LegacyDeploymentMetricsResponseMetricsValue.
        :param failed: The failed of this LegacyDeploymentMetricsResponseMetricsValue.
        :param installed: The installed of this LegacyDeploymentMetricsResponseMetricsValue.
        """
        self.openapi_types = {
            'active': int,
            'downloaded': int,
            'failed': int,
            'installed': int
        }

        self.attribute_map = {
            'active': 'active',
            'downloaded': 'downloaded',
            'failed': 'failed',
            'installed': 'installed'
        }

        self._active = active
        self._downloaded = downloaded
        self._failed = failed
        self._installed = installed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegacyDeploymentMetricsResponseMetricsValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LegacyDeploymentMetricsResponse_metrics_value of this LegacyDeploymentMetricsResponseMetricsValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this LegacyDeploymentMetricsResponseMetricsValue.

        The number of devices that have this release installed currently

        :return: The active of this LegacyDeploymentMetricsResponseMetricsValue.
        :rtype: int
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this LegacyDeploymentMetricsResponseMetricsValue.

        The number of devices that have this release installed currently

        :param active: The active of this LegacyDeploymentMetricsResponseMetricsValue.
        :type active: int
        """
        if active is None:
            raise ValueError("Invalid value for `active`, must not be `None`")

        self._active = active

    @property
    def downloaded(self):
        """Gets the downloaded of this LegacyDeploymentMetricsResponseMetricsValue.

        The number of times this release has been downloaded

        :return: The downloaded of this LegacyDeploymentMetricsResponseMetricsValue.
        :rtype: int
        """
        return self._downloaded

    @downloaded.setter
    def downloaded(self, downloaded):
        """Sets the downloaded of this LegacyDeploymentMetricsResponseMetricsValue.

        The number of times this release has been downloaded

        :param downloaded: The downloaded of this LegacyDeploymentMetricsResponseMetricsValue.
        :type downloaded: int
        """

        self._downloaded = downloaded

    @property
    def failed(self):
        """Gets the failed of this LegacyDeploymentMetricsResponseMetricsValue.

        The number of times this release has failed to be installed on a device

        :return: The failed of this LegacyDeploymentMetricsResponseMetricsValue.
        :rtype: int
        """
        return self._failed

    @failed.setter
    def failed(self, failed):
        """Sets the failed of this LegacyDeploymentMetricsResponseMetricsValue.

        The number of times this release has failed to be installed on a device

        :param failed: The failed of this LegacyDeploymentMetricsResponseMetricsValue.
        :type failed: int
        """

        self._failed = failed

    @property
    def installed(self):
        """Gets the installed of this LegacyDeploymentMetricsResponseMetricsValue.

        The number of times this release has been installed on a device

        :return: The installed of this LegacyDeploymentMetricsResponseMetricsValue.
        :rtype: int
        """
        return self._installed

    @installed.setter
    def installed(self, installed):
        """Sets the installed of this LegacyDeploymentMetricsResponseMetricsValue.

        The number of times this release has been installed on a device

        :param installed: The installed of this LegacyDeploymentMetricsResponseMetricsValue.
        :type installed: int
        """

        self._installed = installed
