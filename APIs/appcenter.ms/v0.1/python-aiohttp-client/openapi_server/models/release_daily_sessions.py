# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.release_daily_sessions_sessions_inner import ReleaseDailySessionsSessionsInner
from openapi_server import util


class ReleaseDailySessions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avg_sessions_per_day: float=None, sessions: List[ReleaseDailySessionsSessionsInner]=None, total_session_counts: int=None):
        """ReleaseDailySessions - a model defined in OpenAPI

        :param avg_sessions_per_day: The avg_sessions_per_day of this ReleaseDailySessions.
        :param sessions: The sessions of this ReleaseDailySessions.
        :param total_session_counts: The total_session_counts of this ReleaseDailySessions.
        """
        self.openapi_types = {
            'avg_sessions_per_day': float,
            'sessions': List[ReleaseDailySessionsSessionsInner],
            'total_session_counts': int
        }

        self.attribute_map = {
            'avg_sessions_per_day': 'avgSessionsPerDay',
            'sessions': 'sessions',
            'total_session_counts': 'totalSessionCounts'
        }

        self._avg_sessions_per_day = avg_sessions_per_day
        self._sessions = sessions
        self._total_session_counts = total_session_counts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReleaseDailySessions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReleaseDailySessions of this ReleaseDailySessions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avg_sessions_per_day(self):
        """Gets the avg_sessions_per_day of this ReleaseDailySessions.


        :return: The avg_sessions_per_day of this ReleaseDailySessions.
        :rtype: float
        """
        return self._avg_sessions_per_day

    @avg_sessions_per_day.setter
    def avg_sessions_per_day(self, avg_sessions_per_day):
        """Sets the avg_sessions_per_day of this ReleaseDailySessions.


        :param avg_sessions_per_day: The avg_sessions_per_day of this ReleaseDailySessions.
        :type avg_sessions_per_day: float
        """

        self._avg_sessions_per_day = avg_sessions_per_day

    @property
    def sessions(self):
        """Gets the sessions of this ReleaseDailySessions.

        Sessions per day.

        :return: The sessions of this ReleaseDailySessions.
        :rtype: List[ReleaseDailySessionsSessionsInner]
        """
        return self._sessions

    @sessions.setter
    def sessions(self, sessions):
        """Sets the sessions of this ReleaseDailySessions.

        Sessions per day.

        :param sessions: The sessions of this ReleaseDailySessions.
        :type sessions: List[ReleaseDailySessionsSessionsInner]
        """

        self._sessions = sessions

    @property
    def total_session_counts(self):
        """Gets the total_session_counts of this ReleaseDailySessions.


        :return: The total_session_counts of this ReleaseDailySessions.
        :rtype: int
        """
        return self._total_session_counts

    @total_session_counts.setter
    def total_session_counts(self, total_session_counts):
        """Sets the total_session_counts of this ReleaseDailySessions.


        :param total_session_counts: The total_session_counts of this ReleaseDailySessions.
        :type total_session_counts: int
        """

        self._total_session_counts = total_session_counts
