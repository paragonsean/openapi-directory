# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppleSecretDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_code: str=None, password: str=None, username: str=None):
        """AppleSecretDetails - a model defined in OpenAPI

        :param auth_code: The auth_code of this AppleSecretDetails.
        :param password: The password of this AppleSecretDetails.
        :param username: The username of this AppleSecretDetails.
        """
        self.openapi_types = {
            'auth_code': str,
            'password': str,
            'username': str
        }

        self.attribute_map = {
            'auth_code': 'authCode',
            'password': 'password',
            'username': 'username'
        }

        self._auth_code = auth_code
        self._password = password
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppleSecretDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppleSecretDetails of this AppleSecretDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_code(self):
        """Gets the auth_code of this AppleSecretDetails.

        6 digit auth code

        :return: The auth_code of this AppleSecretDetails.
        :rtype: str
        """
        return self._auth_code

    @auth_code.setter
    def auth_code(self, auth_code):
        """Sets the auth_code of this AppleSecretDetails.

        6 digit auth code

        :param auth_code: The auth_code of this AppleSecretDetails.
        :type auth_code: str
        """
        if auth_code is not None and len(auth_code) > 6:
            raise ValueError("Invalid value for `auth_code`, length must be less than or equal to `6`")
        if auth_code is not None and len(auth_code) < 6:
            raise ValueError("Invalid value for `auth_code`, length must be greater than or equal to `6`")

        self._auth_code = auth_code

    @property
    def password(self):
        """Gets the password of this AppleSecretDetails.

        password to connect to apple store.

        :return: The password of this AppleSecretDetails.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this AppleSecretDetails.

        password to connect to apple store.

        :param password: The password of this AppleSecretDetails.
        :type password: str
        """

        self._password = password

    @property
    def username(self):
        """Gets the username of this AppleSecretDetails.

        username to connect to apple store.

        :return: The username of this AppleSecretDetails.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this AppleSecretDetails.

        username to connect to apple store.

        :param username: The username of this AppleSecretDetails.
        :type username: str
        """

        self._username = username
