# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StoreReleasesGetPublishError200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_log_available: bool=None, message: str=None):
        """StoreReleasesGetPublishError200Response - a model defined in OpenAPI

        :param is_log_available: The is_log_available of this StoreReleasesGetPublishError200Response.
        :param message: The message of this StoreReleasesGetPublishError200Response.
        """
        self.openapi_types = {
            'is_log_available': bool,
            'message': str
        }

        self.attribute_map = {
            'is_log_available': 'is_log_available',
            'message': 'message'
        }

        self._is_log_available = is_log_available
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoreReleasesGetPublishError200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The storeReleases_getPublishError_200_response of this StoreReleasesGetPublishError200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_log_available(self):
        """Gets the is_log_available of this StoreReleasesGetPublishError200Response.

        boolean property to tell if logs are available for download

        :return: The is_log_available of this StoreReleasesGetPublishError200Response.
        :rtype: bool
        """
        return self._is_log_available

    @is_log_available.setter
    def is_log_available(self, is_log_available):
        """Sets the is_log_available of this StoreReleasesGetPublishError200Response.

        boolean property to tell if logs are available for download

        :param is_log_available: The is_log_available of this StoreReleasesGetPublishError200Response.
        :type is_log_available: bool
        """

        self._is_log_available = is_log_available

    @property
    def message(self):
        """Gets the message of this StoreReleasesGetPublishError200Response.

        error Details

        :return: The message of this StoreReleasesGetPublishError200Response.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this StoreReleasesGetPublishError200Response.

        error Details

        :param message: The message of this StoreReleasesGetPublishError200Response.
        :type message: str
        """

        self._message = message
