# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.crashes_get_app_crashes_info200_response_features import CrashesGetAppCrashesInfo200ResponseFeatures
from openapi_server import util


class CrashesGetAppCrashesInfo200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, features: CrashesGetAppCrashesInfo200ResponseFeatures=None, has_crashes: bool=None):
        """CrashesGetAppCrashesInfo200Response - a model defined in OpenAPI

        :param features: The features of this CrashesGetAppCrashesInfo200Response.
        :param has_crashes: The has_crashes of this CrashesGetAppCrashesInfo200Response.
        """
        self.openapi_types = {
            'features': CrashesGetAppCrashesInfo200ResponseFeatures,
            'has_crashes': bool
        }

        self.attribute_map = {
            'features': 'features',
            'has_crashes': 'has_crashes'
        }

        self._features = features
        self._has_crashes = has_crashes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrashesGetAppCrashesInfo200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The crashes_getAppCrashesInfo_200_response of this CrashesGetAppCrashesInfo200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def features(self):
        """Gets the features of this CrashesGetAppCrashesInfo200Response.


        :return: The features of this CrashesGetAppCrashesInfo200Response.
        :rtype: CrashesGetAppCrashesInfo200ResponseFeatures
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this CrashesGetAppCrashesInfo200Response.


        :param features: The features of this CrashesGetAppCrashesInfo200Response.
        :type features: CrashesGetAppCrashesInfo200ResponseFeatures
        """
        if features is None:
            raise ValueError("Invalid value for `features`, must not be `None`")

        self._features = features

    @property
    def has_crashes(self):
        """Gets the has_crashes of this CrashesGetAppCrashesInfo200Response.


        :return: The has_crashes of this CrashesGetAppCrashesInfo200Response.
        :rtype: bool
        """
        return self._has_crashes

    @has_crashes.setter
    def has_crashes(self, has_crashes):
        """Sets the has_crashes of this CrashesGetAppCrashesInfo200Response.


        :param has_crashes: The has_crashes of this CrashesGetAppCrashesInfo200Response.
        :type has_crashes: bool
        """
        if has_crashes is None:
            raise ValueError("Invalid value for `has_crashes`, must not be `None`")

        self._has_crashes = has_crashes
