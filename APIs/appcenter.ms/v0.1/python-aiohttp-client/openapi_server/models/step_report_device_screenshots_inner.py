# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.step_report_device_screenshots_inner_screenshot import StepReportDeviceScreenshotsInnerScreenshot
from openapi_server import util


class StepReportDeviceScreenshotsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appium_log_file: str=None, crash_data: List[str]=None, device_snapshot_id: str=None, id: str=None, log_file: str=None, raw_crash_data: List[str]=None, screenshot: StepReportDeviceScreenshotsInnerScreenshot=None, stacktrace: List[str]=None, status: str=None, title: str=None):
        """StepReportDeviceScreenshotsInner - a model defined in OpenAPI

        :param appium_log_file: The appium_log_file of this StepReportDeviceScreenshotsInner.
        :param crash_data: The crash_data of this StepReportDeviceScreenshotsInner.
        :param device_snapshot_id: The device_snapshot_id of this StepReportDeviceScreenshotsInner.
        :param id: The id of this StepReportDeviceScreenshotsInner.
        :param log_file: The log_file of this StepReportDeviceScreenshotsInner.
        :param raw_crash_data: The raw_crash_data of this StepReportDeviceScreenshotsInner.
        :param screenshot: The screenshot of this StepReportDeviceScreenshotsInner.
        :param stacktrace: The stacktrace of this StepReportDeviceScreenshotsInner.
        :param status: The status of this StepReportDeviceScreenshotsInner.
        :param title: The title of this StepReportDeviceScreenshotsInner.
        """
        self.openapi_types = {
            'appium_log_file': str,
            'crash_data': List[str],
            'device_snapshot_id': str,
            'id': str,
            'log_file': str,
            'raw_crash_data': List[str],
            'screenshot': StepReportDeviceScreenshotsInnerScreenshot,
            'stacktrace': List[str],
            'status': str,
            'title': str
        }

        self.attribute_map = {
            'appium_log_file': 'appium_log_file',
            'crash_data': 'crash_data',
            'device_snapshot_id': 'device_snapshot_id',
            'id': 'id',
            'log_file': 'log_file',
            'raw_crash_data': 'raw_crash_data',
            'screenshot': 'screenshot',
            'stacktrace': 'stacktrace',
            'status': 'status',
            'title': 'title'
        }

        self._appium_log_file = appium_log_file
        self._crash_data = crash_data
        self._device_snapshot_id = device_snapshot_id
        self._id = id
        self._log_file = log_file
        self._raw_crash_data = raw_crash_data
        self._screenshot = screenshot
        self._stacktrace = stacktrace
        self._status = status
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StepReportDeviceScreenshotsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StepReport_deviceScreenshots_inner of this StepReportDeviceScreenshotsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appium_log_file(self):
        """Gets the appium_log_file of this StepReportDeviceScreenshotsInner.


        :return: The appium_log_file of this StepReportDeviceScreenshotsInner.
        :rtype: str
        """
        return self._appium_log_file

    @appium_log_file.setter
    def appium_log_file(self, appium_log_file):
        """Sets the appium_log_file of this StepReportDeviceScreenshotsInner.


        :param appium_log_file: The appium_log_file of this StepReportDeviceScreenshotsInner.
        :type appium_log_file: str
        """

        self._appium_log_file = appium_log_file

    @property
    def crash_data(self):
        """Gets the crash_data of this StepReportDeviceScreenshotsInner.


        :return: The crash_data of this StepReportDeviceScreenshotsInner.
        :rtype: List[str]
        """
        return self._crash_data

    @crash_data.setter
    def crash_data(self, crash_data):
        """Sets the crash_data of this StepReportDeviceScreenshotsInner.


        :param crash_data: The crash_data of this StepReportDeviceScreenshotsInner.
        :type crash_data: List[str]
        """

        self._crash_data = crash_data

    @property
    def device_snapshot_id(self):
        """Gets the device_snapshot_id of this StepReportDeviceScreenshotsInner.


        :return: The device_snapshot_id of this StepReportDeviceScreenshotsInner.
        :rtype: str
        """
        return self._device_snapshot_id

    @device_snapshot_id.setter
    def device_snapshot_id(self, device_snapshot_id):
        """Sets the device_snapshot_id of this StepReportDeviceScreenshotsInner.


        :param device_snapshot_id: The device_snapshot_id of this StepReportDeviceScreenshotsInner.
        :type device_snapshot_id: str
        """

        self._device_snapshot_id = device_snapshot_id

    @property
    def id(self):
        """Gets the id of this StepReportDeviceScreenshotsInner.


        :return: The id of this StepReportDeviceScreenshotsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StepReportDeviceScreenshotsInner.


        :param id: The id of this StepReportDeviceScreenshotsInner.
        :type id: str
        """

        self._id = id

    @property
    def log_file(self):
        """Gets the log_file of this StepReportDeviceScreenshotsInner.


        :return: The log_file of this StepReportDeviceScreenshotsInner.
        :rtype: str
        """
        return self._log_file

    @log_file.setter
    def log_file(self, log_file):
        """Sets the log_file of this StepReportDeviceScreenshotsInner.


        :param log_file: The log_file of this StepReportDeviceScreenshotsInner.
        :type log_file: str
        """

        self._log_file = log_file

    @property
    def raw_crash_data(self):
        """Gets the raw_crash_data of this StepReportDeviceScreenshotsInner.


        :return: The raw_crash_data of this StepReportDeviceScreenshotsInner.
        :rtype: List[str]
        """
        return self._raw_crash_data

    @raw_crash_data.setter
    def raw_crash_data(self, raw_crash_data):
        """Sets the raw_crash_data of this StepReportDeviceScreenshotsInner.


        :param raw_crash_data: The raw_crash_data of this StepReportDeviceScreenshotsInner.
        :type raw_crash_data: List[str]
        """

        self._raw_crash_data = raw_crash_data

    @property
    def screenshot(self):
        """Gets the screenshot of this StepReportDeviceScreenshotsInner.


        :return: The screenshot of this StepReportDeviceScreenshotsInner.
        :rtype: StepReportDeviceScreenshotsInnerScreenshot
        """
        return self._screenshot

    @screenshot.setter
    def screenshot(self, screenshot):
        """Sets the screenshot of this StepReportDeviceScreenshotsInner.


        :param screenshot: The screenshot of this StepReportDeviceScreenshotsInner.
        :type screenshot: StepReportDeviceScreenshotsInnerScreenshot
        """

        self._screenshot = screenshot

    @property
    def stacktrace(self):
        """Gets the stacktrace of this StepReportDeviceScreenshotsInner.


        :return: The stacktrace of this StepReportDeviceScreenshotsInner.
        :rtype: List[str]
        """
        return self._stacktrace

    @stacktrace.setter
    def stacktrace(self, stacktrace):
        """Sets the stacktrace of this StepReportDeviceScreenshotsInner.


        :param stacktrace: The stacktrace of this StepReportDeviceScreenshotsInner.
        :type stacktrace: List[str]
        """

        self._stacktrace = stacktrace

    @property
    def status(self):
        """Gets the status of this StepReportDeviceScreenshotsInner.


        :return: The status of this StepReportDeviceScreenshotsInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StepReportDeviceScreenshotsInner.


        :param status: The status of this StepReportDeviceScreenshotsInner.
        :type status: str
        """

        self._status = status

    @property
    def title(self):
        """Gets the title of this StepReportDeviceScreenshotsInner.


        :return: The title of this StepReportDeviceScreenshotsInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this StepReportDeviceScreenshotsInner.


        :param title: The title of this StepReportDeviceScreenshotsInner.
        :type title: str
        """

        self._title = title
