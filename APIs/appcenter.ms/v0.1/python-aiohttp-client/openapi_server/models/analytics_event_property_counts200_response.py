# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.analytics_event_property_counts200_response_values_inner import AnalyticsEventPropertyCounts200ResponseValuesInner
from openapi_server import util


class AnalyticsEventPropertyCounts200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total: int=None, values: List[AnalyticsEventPropertyCounts200ResponseValuesInner]=None):
        """AnalyticsEventPropertyCounts200Response - a model defined in OpenAPI

        :param total: The total of this AnalyticsEventPropertyCounts200Response.
        :param values: The values of this AnalyticsEventPropertyCounts200Response.
        """
        self.openapi_types = {
            'total': int,
            'values': List[AnalyticsEventPropertyCounts200ResponseValuesInner]
        }

        self.attribute_map = {
            'total': 'total',
            'values': 'values'
        }

        self._total = total
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyticsEventPropertyCounts200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Analytics_EventPropertyCounts_200_response of this AnalyticsEventPropertyCounts200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self):
        """Gets the total of this AnalyticsEventPropertyCounts200Response.

        The total property value counts.

        :return: The total of this AnalyticsEventPropertyCounts200Response.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this AnalyticsEventPropertyCounts200Response.

        The total property value counts.

        :param total: The total of this AnalyticsEventPropertyCounts200Response.
        :type total: int
        """

        self._total = total

    @property
    def values(self):
        """Gets the values of this AnalyticsEventPropertyCounts200Response.

        The event property values.

        :return: The values of this AnalyticsEventPropertyCounts200Response.
        :rtype: List[AnalyticsEventPropertyCounts200ResponseValuesInner]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this AnalyticsEventPropertyCounts200Response.

        The event property values.

        :param values: The values of this AnalyticsEventPropertyCounts200Response.
        :type values: List[AnalyticsEventPropertyCounts200ResponseValuesInner]
        """

        self._values = values
