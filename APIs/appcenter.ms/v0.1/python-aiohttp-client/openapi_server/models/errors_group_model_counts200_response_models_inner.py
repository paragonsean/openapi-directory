# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorsGroupModelCounts200ResponseModelsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_count: int=None, model_code: str=None, model_name: str=None):
        """ErrorsGroupModelCounts200ResponseModelsInner - a model defined in OpenAPI

        :param error_count: The error_count of this ErrorsGroupModelCounts200ResponseModelsInner.
        :param model_code: The model_code of this ErrorsGroupModelCounts200ResponseModelsInner.
        :param model_name: The model_name of this ErrorsGroupModelCounts200ResponseModelsInner.
        """
        self.openapi_types = {
            'error_count': int,
            'model_code': str,
            'model_name': str
        }

        self.attribute_map = {
            'error_count': 'errorCount',
            'model_code': 'modelCode',
            'model_name': 'modelName'
        }

        self._error_count = error_count
        self._model_code = model_code
        self._model_name = model_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorsGroupModelCounts200ResponseModelsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Errors_GroupModelCounts_200_response_models_inner of this ErrorsGroupModelCounts200ResponseModelsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_count(self):
        """Gets the error_count of this ErrorsGroupModelCounts200ResponseModelsInner.

        count of errors in a model

        :return: The error_count of this ErrorsGroupModelCounts200ResponseModelsInner.
        :rtype: int
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count):
        """Sets the error_count of this ErrorsGroupModelCounts200ResponseModelsInner.

        count of errors in a model

        :param error_count: The error_count of this ErrorsGroupModelCounts200ResponseModelsInner.
        :type error_count: int
        """

        self._error_count = error_count

    @property
    def model_code(self):
        """Gets the model_code of this ErrorsGroupModelCounts200ResponseModelsInner.

        model code

        :return: The model_code of this ErrorsGroupModelCounts200ResponseModelsInner.
        :rtype: str
        """
        return self._model_code

    @model_code.setter
    def model_code(self, model_code):
        """Sets the model_code of this ErrorsGroupModelCounts200ResponseModelsInner.

        model code

        :param model_code: The model_code of this ErrorsGroupModelCounts200ResponseModelsInner.
        :type model_code: str
        """

        self._model_code = model_code

    @property
    def model_name(self):
        """Gets the model_name of this ErrorsGroupModelCounts200ResponseModelsInner.

        model name

        :return: The model_name of this ErrorsGroupModelCounts200ResponseModelsInner.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this ErrorsGroupModelCounts200ResponseModelsInner.

        model name

        :param model_name: The model_name of this ErrorsGroupModelCounts200ResponseModelsInner.
        :type model_name: str
        """

        self._model_name = model_name
