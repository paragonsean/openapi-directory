# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrgComplianceSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_connection_id: str=None):
        """OrgComplianceSettingsRequest - a model defined in OpenAPI

        :param certificate_connection_id: The certificate_connection_id of this OrgComplianceSettingsRequest.
        """
        self.openapi_types = {
            'certificate_connection_id': str
        }

        self.attribute_map = {
            'certificate_connection_id': 'certificate_connection_id'
        }

        self._certificate_connection_id = certificate_connection_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrgComplianceSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrgComplianceSettingsRequest of this OrgComplianceSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_connection_id(self):
        """Gets the certificate_connection_id of this OrgComplianceSettingsRequest.

        certificate connection id to wrap and resign the app after wrapping

        :return: The certificate_connection_id of this OrgComplianceSettingsRequest.
        :rtype: str
        """
        return self._certificate_connection_id

    @certificate_connection_id.setter
    def certificate_connection_id(self, certificate_connection_id):
        """Sets the certificate_connection_id of this OrgComplianceSettingsRequest.

        certificate connection id to wrap and resign the app after wrapping

        :param certificate_connection_id: The certificate_connection_id of this OrgComplianceSettingsRequest.
        :type certificate_connection_id: str
        """
        if certificate_connection_id is None:
            raise ValueError("Invalid value for `certificate_connection_id`, must not be `None`")

        self._certificate_connection_id = certificate_connection_id
