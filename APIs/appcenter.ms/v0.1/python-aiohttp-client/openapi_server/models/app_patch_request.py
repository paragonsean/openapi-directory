# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppPatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, icon_asset_id: str=None, icon_url: str=None, name: str=None, release_type: str=None):
        """AppPatchRequest - a model defined in OpenAPI

        :param description: The description of this AppPatchRequest.
        :param display_name: The display_name of this AppPatchRequest.
        :param icon_asset_id: The icon_asset_id of this AppPatchRequest.
        :param icon_url: The icon_url of this AppPatchRequest.
        :param name: The name of this AppPatchRequest.
        :param release_type: The release_type of this AppPatchRequest.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'icon_asset_id': str,
            'icon_url': str,
            'name': str,
            'release_type': str
        }

        self.attribute_map = {
            'description': 'description',
            'display_name': 'display_name',
            'icon_asset_id': 'icon_asset_id',
            'icon_url': 'icon_url',
            'name': 'name',
            'release_type': 'release_type'
        }

        self._description = description
        self._display_name = display_name
        self._icon_asset_id = icon_asset_id
        self._icon_url = icon_url
        self._name = name
        self._release_type = release_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppPatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppPatchRequest of this AppPatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this AppPatchRequest.

        A short text describing the app

        :return: The description of this AppPatchRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AppPatchRequest.

        A short text describing the app

        :param description: The description of this AppPatchRequest.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this AppPatchRequest.

        The display name of the app

        :return: The display_name of this AppPatchRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this AppPatchRequest.

        The display name of the app

        :param display_name: The display_name of this AppPatchRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def icon_asset_id(self):
        """Gets the icon_asset_id of this AppPatchRequest.

        The uuid for the icon's asset id from ACFUS

        :return: The icon_asset_id of this AppPatchRequest.
        :rtype: str
        """
        return self._icon_asset_id

    @icon_asset_id.setter
    def icon_asset_id(self, icon_asset_id):
        """Sets the icon_asset_id of this AppPatchRequest.

        The uuid for the icon's asset id from ACFUS

        :param icon_asset_id: The icon_asset_id of this AppPatchRequest.
        :type icon_asset_id: str
        """

        self._icon_asset_id = icon_asset_id

    @property
    def icon_url(self):
        """Gets the icon_url of this AppPatchRequest.

        The string representation of the URL pointing to the app's icon

        :return: The icon_url of this AppPatchRequest.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this AppPatchRequest.

        The string representation of the URL pointing to the app's icon

        :param icon_url: The icon_url of this AppPatchRequest.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def name(self):
        """Gets the name of this AppPatchRequest.

        The name of the app used in URLs

        :return: The name of this AppPatchRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AppPatchRequest.

        The name of the app used in URLs

        :param name: The name of this AppPatchRequest.
        :type name: str
        """

        self._name = name

    @property
    def release_type(self):
        """Gets the release_type of this AppPatchRequest.

        A one-word descriptive release type value that starts with a capital letter but is otherwise lowercase

        :return: The release_type of this AppPatchRequest.
        :rtype: str
        """
        return self._release_type

    @release_type.setter
    def release_type(self, release_type):
        """Sets the release_type of this AppPatchRequest.

        A one-word descriptive release type value that starts with a capital letter but is otherwise lowercase

        :param release_type: The release_type of this AppPatchRequest.
        :type release_type: str
        """

        self._release_type = release_type
