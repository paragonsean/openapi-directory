# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAccessKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by: str=None, friendly_name: str=None, ttl: float=None):
        """CreateAccessKeyRequest - a model defined in OpenAPI

        :param created_by: The created_by of this CreateAccessKeyRequest.
        :param friendly_name: The friendly_name of this CreateAccessKeyRequest.
        :param ttl: The ttl of this CreateAccessKeyRequest.
        """
        self.openapi_types = {
            'created_by': str,
            'friendly_name': str,
            'ttl': float
        }

        self.attribute_map = {
            'created_by': 'createdBy',
            'friendly_name': 'friendlyName',
            'ttl': 'ttl'
        }

        self._created_by = created_by
        self._friendly_name = friendly_name
        self._ttl = ttl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAccessKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAccessKeyRequest of this CreateAccessKeyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by(self):
        """Gets the created_by of this CreateAccessKeyRequest.

        Name of creator current access key

        :return: The created_by of this CreateAccessKeyRequest.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this CreateAccessKeyRequest.

        Name of creator current access key

        :param created_by: The created_by of this CreateAccessKeyRequest.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def friendly_name(self):
        """Gets the friendly_name of this CreateAccessKeyRequest.

        Friendly name of the access key

        :return: The friendly_name of this CreateAccessKeyRequest.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this CreateAccessKeyRequest.

        Friendly name of the access key

        :param friendly_name: The friendly_name of this CreateAccessKeyRequest.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def ttl(self):
        """Gets the ttl of this CreateAccessKeyRequest.

        Time to live of the access key

        :return: The ttl of this CreateAccessKeyRequest.
        :rtype: float
        """
        return self._ttl

    @ttl.setter
    def ttl(self, ttl):
        """Sets the ttl of this CreateAccessKeyRequest.

        Time to live of the access key

        :param ttl: The ttl of this CreateAccessKeyRequest.
        :type ttl: float
        """

        self._ttl = ttl
