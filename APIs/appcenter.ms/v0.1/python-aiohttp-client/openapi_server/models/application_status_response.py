# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, version: str=None, version_type: str=None):
        """ApplicationStatusResponse - a model defined in OpenAPI

        :param version: The version of this ApplicationStatusResponse.
        :param version_type: The version_type of this ApplicationStatusResponse.
        """
        self.openapi_types = {
            'version': str,
            'version_type': str
        }

        self.attribute_map = {
            'version': 'version',
            'version_type': 'version_type'
        }

        self._version = version
        self._version_type = version_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationStatusResponse of this ApplicationStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self):
        """Gets the version of this ApplicationStatusResponse.

        The version of the application

        :return: The version of this ApplicationStatusResponse.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ApplicationStatusResponse.

        The version of the application

        :param version: The version of this ApplicationStatusResponse.
        :type version: str
        """

        self._version = version

    @property
    def version_type(self):
        """Gets the version_type of this ApplicationStatusResponse.

        The type of version being returned (production/edit/test flight).

        :return: The version_type of this ApplicationStatusResponse.
        :rtype: str
        """
        return self._version_type

    @version_type.setter
    def version_type(self, version_type):
        """Sets the version_type of this ApplicationStatusResponse.

        The type of version being returned (production/edit/test flight).

        :param version_type: The version_type of this ApplicationStatusResponse.
        :type version_type: str
        """
        if version_type is None:
            raise ValueError("Invalid value for `version_type`, must not be `None`")

        self._version_type = version_type
