# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestGetTestReport200ResponseSnapshotFatalErrorsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_snapshot_id: str=None, error_message: str=None, error_title: str=None):
        """TestGetTestReport200ResponseSnapshotFatalErrorsInner - a model defined in OpenAPI

        :param device_snapshot_id: The device_snapshot_id of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        :param error_message: The error_message of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        :param error_title: The error_title of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        """
        self.openapi_types = {
            'device_snapshot_id': str,
            'error_message': str,
            'error_title': str
        }

        self.attribute_map = {
            'device_snapshot_id': 'device_snapshot_id',
            'error_message': 'error_message',
            'error_title': 'error_title'
        }

        self._device_snapshot_id = device_snapshot_id
        self._error_message = error_message
        self._error_title = error_title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestGetTestReport200ResponseSnapshotFatalErrorsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The test_getTestReport_200_response_snapshot_fatal_errors_inner of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_snapshot_id(self):
        """Gets the device_snapshot_id of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.


        :return: The device_snapshot_id of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        :rtype: str
        """
        return self._device_snapshot_id

    @device_snapshot_id.setter
    def device_snapshot_id(self, device_snapshot_id):
        """Sets the device_snapshot_id of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.


        :param device_snapshot_id: The device_snapshot_id of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        :type device_snapshot_id: str
        """

        self._device_snapshot_id = device_snapshot_id

    @property
    def error_message(self):
        """Gets the error_message of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.


        :return: The error_message of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.


        :param error_message: The error_message of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def error_title(self):
        """Gets the error_title of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.


        :return: The error_title of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        :rtype: str
        """
        return self._error_title

    @error_title.setter
    def error_title(self, error_title):
        """Sets the error_title of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.


        :param error_title: The error_title of this TestGetTestReport200ResponseSnapshotFatalErrorsInner.
        :type error_title: str
        """

        self._error_title = error_title
