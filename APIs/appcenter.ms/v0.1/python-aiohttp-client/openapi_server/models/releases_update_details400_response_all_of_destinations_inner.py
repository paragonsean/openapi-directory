# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReleasesUpdateDetails400ResponseAllOfDestinationsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, id: str=None, message: str=None, name: str=None):
        """ReleasesUpdateDetails400ResponseAllOfDestinationsInner - a model defined in OpenAPI

        :param code: The code of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :param id: The id of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :param message: The message of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :param name: The name of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        """
        self.openapi_types = {
            'code': str,
            'id': str,
            'message': str,
            'name': str
        }

        self.attribute_map = {
            'code': 'code',
            'id': 'id',
            'message': 'message',
            'name': 'name'
        }

        self._code = code
        self._id = id
        self._message = message
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReleasesUpdateDetails400ResponseAllOfDestinationsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The releases_updateDetails_400_response_allOf_destinations_inner of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.

        Error Codes:<br> <b>invalid_store_secrets</b>: While distributing to store, secrets provided for store are not valid.<br> <b>store_release_bad_request</b>: Proper package release details for the store is not provided.<br> <b>store_release_unauthorized</b>: User is not authorized to publish to store due to invalid developer credentials.<br> <b>store_release_forbidden</b>: Publish to store is forbidden due to conflicts/errors in the release version and already existing version in the store.<br> <b>store_release_promotion</b>: Release already distributed, promoting a release is not supported.<br> <b>store_track_deactivated</b>: One or more tracks would be deactivated with this release. This is not supported yet.<br> <b>store_release_not_found</b>: App with the given package name is not found in the store.<br> <b>store_release_not_available</b>: The release is not available.<br> <b>internal_server_error</b>: Failed to distribute to a destination due to an internal server error. 

        :return: The code of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.

        Error Codes:<br> <b>invalid_store_secrets</b>: While distributing to store, secrets provided for store are not valid.<br> <b>store_release_bad_request</b>: Proper package release details for the store is not provided.<br> <b>store_release_unauthorized</b>: User is not authorized to publish to store due to invalid developer credentials.<br> <b>store_release_forbidden</b>: Publish to store is forbidden due to conflicts/errors in the release version and already existing version in the store.<br> <b>store_release_promotion</b>: Release already distributed, promoting a release is not supported.<br> <b>store_track_deactivated</b>: One or more tracks would be deactivated with this release. This is not supported yet.<br> <b>store_release_not_found</b>: App with the given package name is not found in the store.<br> <b>store_release_not_available</b>: The release is not available.<br> <b>internal_server_error</b>: Failed to distribute to a destination due to an internal server error. 

        :param code: The code of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :type code: str
        """

        self._code = code

    @property
    def id(self):
        """Gets the id of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.


        :return: The id of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.


        :param id: The id of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :type id: str
        """

        self._id = id

    @property
    def message(self):
        """Gets the message of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.


        :return: The message of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.


        :param message: The message of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :type message: str
        """

        self._message = message

    @property
    def name(self):
        """Gets the name of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.


        :return: The name of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.


        :param name: The name of this ReleasesUpdateDetails400ResponseAllOfDestinationsInner.
        :type name: str
        """

        self._name = name
