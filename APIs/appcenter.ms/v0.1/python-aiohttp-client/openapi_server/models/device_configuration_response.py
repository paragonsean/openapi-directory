# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_url: str=None):
        """DeviceConfigurationResponse - a model defined in OpenAPI

        :param data_url: The data_url of this DeviceConfigurationResponse.
        """
        self.openapi_types = {
            'data_url': str
        }

        self.attribute_map = {
            'data_url': 'data_url'
        }

        self._data_url = data_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceConfigurationResponse of this DeviceConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_url(self):
        """Gets the data_url of this DeviceConfigurationResponse.

        A data URL containing a signed mobileconfig profile

        :return: The data_url of this DeviceConfigurationResponse.
        :rtype: str
        """
        return self._data_url

    @data_url.setter
    def data_url(self, data_url):
        """Sets the data_url of this DeviceConfigurationResponse.

        A data URL containing a signed mobileconfig profile

        :param data_url: The data_url of this DeviceConfigurationResponse.
        :type data_url: str
        """
        if data_url is None:
            raise ValueError("Invalid value for `data_url`, must not be `None`")

        self._data_url = data_url
