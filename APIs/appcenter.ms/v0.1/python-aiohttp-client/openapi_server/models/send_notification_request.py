# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendNotificationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_ids: List[str]=None):
        """SendNotificationRequest - a model defined in OpenAPI

        :param user_ids: The user_ids of this SendNotificationRequest.
        """
        self.openapi_types = {
            'user_ids': List[str]
        }

        self.attribute_map = {
            'user_ids': 'userIds'
        }

        self._user_ids = user_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendNotificationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendNotificationRequest of this SendNotificationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_ids(self):
        """Gets the user_ids of this SendNotificationRequest.

        user list to send email notification

        :return: The user_ids of this SendNotificationRequest.
        :rtype: List[str]
        """
        return self._user_ids

    @user_ids.setter
    def user_ids(self, user_ids):
        """Sets the user_ids of this SendNotificationRequest.

        user list to send email notification

        :param user_ids: The user_ids of this SendNotificationRequest.
        :type user_ids: List[str]
        """
        if user_ids is None:
            raise ValueError("Invalid value for `user_ids`, must not be `None`")

        self._user_ids = user_ids
