# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UsageRecordStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expected_latest_build_exists: bool=None, expected_latest_test_exists: bool=None, latest_build_usage_record_time: str=None, latest_test_usage_record_time: str=None):
        """UsageRecordStatus - a model defined in OpenAPI

        :param expected_latest_build_exists: The expected_latest_build_exists of this UsageRecordStatus.
        :param expected_latest_test_exists: The expected_latest_test_exists of this UsageRecordStatus.
        :param latest_build_usage_record_time: The latest_build_usage_record_time of this UsageRecordStatus.
        :param latest_test_usage_record_time: The latest_test_usage_record_time of this UsageRecordStatus.
        """
        self.openapi_types = {
            'expected_latest_build_exists': bool,
            'expected_latest_test_exists': bool,
            'latest_build_usage_record_time': str,
            'latest_test_usage_record_time': str
        }

        self.attribute_map = {
            'expected_latest_build_exists': 'expectedLatestBuildExists',
            'expected_latest_test_exists': 'expectedLatestTestExists',
            'latest_build_usage_record_time': 'latestBuildUsageRecordTime',
            'latest_test_usage_record_time': 'latestTestUsageRecordTime'
        }

        self._expected_latest_build_exists = expected_latest_build_exists
        self._expected_latest_test_exists = expected_latest_test_exists
        self._latest_build_usage_record_time = latest_build_usage_record_time
        self._latest_test_usage_record_time = latest_test_usage_record_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageRecordStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UsageRecordStatus of this UsageRecordStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expected_latest_build_exists(self):
        """Gets the expected_latest_build_exists of this UsageRecordStatus.

        Is the age of the most recent Build service usage record within expected limits

        :return: The expected_latest_build_exists of this UsageRecordStatus.
        :rtype: bool
        """
        return self._expected_latest_build_exists

    @expected_latest_build_exists.setter
    def expected_latest_build_exists(self, expected_latest_build_exists):
        """Sets the expected_latest_build_exists of this UsageRecordStatus.

        Is the age of the most recent Build service usage record within expected limits

        :param expected_latest_build_exists: The expected_latest_build_exists of this UsageRecordStatus.
        :type expected_latest_build_exists: bool
        """

        self._expected_latest_build_exists = expected_latest_build_exists

    @property
    def expected_latest_test_exists(self):
        """Gets the expected_latest_test_exists of this UsageRecordStatus.

        Is the age of the most recent Test service usage record within expected limits

        :return: The expected_latest_test_exists of this UsageRecordStatus.
        :rtype: bool
        """
        return self._expected_latest_test_exists

    @expected_latest_test_exists.setter
    def expected_latest_test_exists(self, expected_latest_test_exists):
        """Sets the expected_latest_test_exists of this UsageRecordStatus.

        Is the age of the most recent Test service usage record within expected limits

        :param expected_latest_test_exists: The expected_latest_test_exists of this UsageRecordStatus.
        :type expected_latest_test_exists: bool
        """

        self._expected_latest_test_exists = expected_latest_test_exists

    @property
    def latest_build_usage_record_time(self):
        """Gets the latest_build_usage_record_time of this UsageRecordStatus.

        The time of the most recent Build service usage record

        :return: The latest_build_usage_record_time of this UsageRecordStatus.
        :rtype: str
        """
        return self._latest_build_usage_record_time

    @latest_build_usage_record_time.setter
    def latest_build_usage_record_time(self, latest_build_usage_record_time):
        """Sets the latest_build_usage_record_time of this UsageRecordStatus.

        The time of the most recent Build service usage record

        :param latest_build_usage_record_time: The latest_build_usage_record_time of this UsageRecordStatus.
        :type latest_build_usage_record_time: str
        """

        self._latest_build_usage_record_time = latest_build_usage_record_time

    @property
    def latest_test_usage_record_time(self):
        """Gets the latest_test_usage_record_time of this UsageRecordStatus.

        The time of the most recent Test service usage record

        :return: The latest_test_usage_record_time of this UsageRecordStatus.
        :rtype: str
        """
        return self._latest_test_usage_record_time

    @latest_test_usage_record_time.setter
    def latest_test_usage_record_time(self, latest_test_usage_record_time):
        """Sets the latest_test_usage_record_time of this UsageRecordStatus.

        The time of the most recent Test service usage record

        :param latest_test_usage_record_time: The latest_test_usage_record_time of this UsageRecordStatus.
        :type latest_test_usage_record_time: str
        """

        self._latest_test_usage_record_time = latest_test_usage_record_time
