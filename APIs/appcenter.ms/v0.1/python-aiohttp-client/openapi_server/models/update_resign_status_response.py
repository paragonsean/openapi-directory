# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateResignStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profiles_zip_base64: str=None, status: str=None):
        """UpdateResignStatusResponse - a model defined in OpenAPI

        :param profiles_zip_base64: The profiles_zip_base64 of this UpdateResignStatusResponse.
        :param status: The status of this UpdateResignStatusResponse.
        """
        self.openapi_types = {
            'profiles_zip_base64': str,
            'status': str
        }

        self.attribute_map = {
            'profiles_zip_base64': 'profiles_zip_base64',
            'status': 'status'
        }

        self._profiles_zip_base64 = profiles_zip_base64
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateResignStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateResignStatusResponse of this UpdateResignStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profiles_zip_base64(self):
        """Gets the profiles_zip_base64 of this UpdateResignStatusResponse.

        A zip of the updated provisioning profiles. Base64 encoded.

        :return: The profiles_zip_base64 of this UpdateResignStatusResponse.
        :rtype: str
        """
        return self._profiles_zip_base64

    @profiles_zip_base64.setter
    def profiles_zip_base64(self, profiles_zip_base64):
        """Sets the profiles_zip_base64 of this UpdateResignStatusResponse.

        A zip of the updated provisioning profiles. Base64 encoded.

        :param profiles_zip_base64: The profiles_zip_base64 of this UpdateResignStatusResponse.
        :type profiles_zip_base64: str
        """

        self._profiles_zip_base64 = profiles_zip_base64

    @property
    def status(self):
        """Gets the status of this UpdateResignStatusResponse.

        The status.

        :return: The status of this UpdateResignStatusResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateResignStatusResponse.

        The status.

        :param status: The status of this UpdateResignStatusResponse.
        :type status: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status
