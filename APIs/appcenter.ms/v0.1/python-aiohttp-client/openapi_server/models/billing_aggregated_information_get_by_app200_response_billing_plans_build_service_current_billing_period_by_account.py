# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_aggregated_information_get_by_app200_response_billing_plans_build_service_current_billing_period_by_account_plan import BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan
from openapi_server import util


class BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, plan: BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan=None):
        """BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount - a model defined in OpenAPI

        :param count: The count of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.
        :param plan: The plan of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.
        """
        self.openapi_types = {
            'count': int,
            'plan': BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan
        }

        self.attribute_map = {
            'count': 'count',
            'plan': 'plan'
        }

        self._count = count
        self._plan = plan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The billingAggregatedInformation_getByApp_200_response_billingPlans_buildService_currentBillingPeriod_byAccount of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.

        Number of instances of the billing plan.

        :return: The count of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.

        Number of instances of the billing plan.

        :param count: The count of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.
        :type count: int
        """

        self._count = count

    @property
    def plan(self):
        """Gets the plan of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.


        :return: The plan of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.
        :rtype: BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.


        :param plan: The plan of this BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccount.
        :type plan: BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan
        """

        self._plan = plan
