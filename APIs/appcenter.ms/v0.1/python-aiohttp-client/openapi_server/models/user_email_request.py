# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserEmailRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_email: str=None):
        """UserEmailRequest - a model defined in OpenAPI

        :param user_email: The user_email of this UserEmailRequest.
        """
        self.openapi_types = {
            'user_email': str
        }

        self.attribute_map = {
            'user_email': 'user_email'
        }

        self._user_email = user_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserEmailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserEmailRequest of this UserEmailRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_email(self):
        """Gets the user_email of this UserEmailRequest.

        The user's email address

        :return: The user_email of this UserEmailRequest.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email):
        """Sets the user_email of this UserEmailRequest.

        The user's email address

        :param user_email: The user_email of this UserEmailRequest.
        :type user_email: str
        """
        if user_email is None:
            raise ValueError("Invalid value for `user_email`, must not be `None`")

        self._user_email = user_email
