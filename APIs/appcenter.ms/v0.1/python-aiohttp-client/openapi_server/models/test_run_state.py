# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestRunState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exit_code: int=None, message: List[str]=None, wait_time: int=None):
        """TestRunState - a model defined in OpenAPI

        :param exit_code: The exit_code of this TestRunState.
        :param message: The message of this TestRunState.
        :param wait_time: The wait_time of this TestRunState.
        """
        self.openapi_types = {
            'exit_code': int,
            'message': List[str],
            'wait_time': int
        }

        self.attribute_map = {
            'exit_code': 'exit_code',
            'message': 'message',
            'wait_time': 'wait_time'
        }

        self._exit_code = exit_code
        self._message = message
        self._wait_time = wait_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestRunState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Test_Run_State of this TestRunState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exit_code(self):
        """Gets the exit_code of this TestRunState.

        The exit code that the client should use when exiting. Used for indicating status to the caller of the client. 0: test run completes with no failing tests 1: test run completes with at least one failing test 2: test run failed to complete. Status for test run is unknown 

        :return: The exit_code of this TestRunState.
        :rtype: int
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code):
        """Sets the exit_code of this TestRunState.

        The exit code that the client should use when exiting. Used for indicating status to the caller of the client. 0: test run completes with no failing tests 1: test run completes with at least one failing test 2: test run failed to complete. Status for test run is unknown 

        :param exit_code: The exit_code of this TestRunState.
        :type exit_code: int
        """

        self._exit_code = exit_code

    @property
    def message(self):
        """Gets the message of this TestRunState.

        Multi-line message that describes the status

        :return: The message of this TestRunState.
        :rtype: List[str]
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TestRunState.

        Multi-line message that describes the status

        :param message: The message of this TestRunState.
        :type message: List[str]
        """

        self._message = message

    @property
    def wait_time(self):
        """Gets the wait_time of this TestRunState.

        Time (in seconds) that the client should wait for before checking the status again

        :return: The wait_time of this TestRunState.
        :rtype: int
        """
        return self._wait_time

    @wait_time.setter
    def wait_time(self, wait_time):
        """Sets the wait_time of this TestRunState.

        Time (in seconds) that the client should wait for before checking the status again

        :param wait_time: The wait_time of this TestRunState.
        :type wait_time: int
        """

        self._wait_time = wait_time
