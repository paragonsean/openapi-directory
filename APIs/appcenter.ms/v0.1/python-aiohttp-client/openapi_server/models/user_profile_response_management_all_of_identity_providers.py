# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserProfileResponseManagementAllOfIdentityProviders(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, origin: str=None, provider_name: str=None):
        """UserProfileResponseManagementAllOfIdentityProviders - a model defined in OpenAPI

        :param origin: The origin of this UserProfileResponseManagementAllOfIdentityProviders.
        :param provider_name: The provider_name of this UserProfileResponseManagementAllOfIdentityProviders.
        """
        self.openapi_types = {
            'origin': str,
            'provider_name': str
        }

        self.attribute_map = {
            'origin': 'origin',
            'provider_name': 'provider_name'
        }

        self._origin = origin
        self._provider_name = provider_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserProfileResponseManagementAllOfIdentityProviders':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserProfileResponseManagement_allOf_identity_providers of this UserProfileResponseManagementAllOfIdentityProviders.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def origin(self):
        """Gets the origin of this UserProfileResponseManagementAllOfIdentityProviders.

        Whether the identity provider originated in HockeyApp or App Center

        :return: The origin of this UserProfileResponseManagementAllOfIdentityProviders.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this UserProfileResponseManagementAllOfIdentityProviders.

        Whether the identity provider originated in HockeyApp or App Center

        :param origin: The origin of this UserProfileResponseManagementAllOfIdentityProviders.
        :type origin: str
        """

        self._origin = origin

    @property
    def provider_name(self):
        """Gets the provider_name of this UserProfileResponseManagementAllOfIdentityProviders.

        The name of the identity provider type

        :return: The provider_name of this UserProfileResponseManagementAllOfIdentityProviders.
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name):
        """Sets the provider_name of this UserProfileResponseManagementAllOfIdentityProviders.

        The name of the identity provider type

        :param provider_name: The provider_name of this UserProfileResponseManagementAllOfIdentityProviders.
        :type provider_name: str
        """
        allowed_values = ["github", "aad", "facebook", "google"]  # noqa: E501
        if provider_name not in allowed_values:
            raise ValueError(
                "Invalid value for `provider_name` ({0}), must be one of {1}"
                .format(provider_name, allowed_values)
            )

        self._provider_name = provider_name
