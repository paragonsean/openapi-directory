# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_properties: List[str]=None):
        """EventProperties - a model defined in OpenAPI

        :param event_properties: The event_properties of this EventProperties.
        """
        self.openapi_types = {
            'event_properties': List[str]
        }

        self.attribute_map = {
            'event_properties': 'event_properties'
        }

        self._event_properties = event_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventProperties of this EventProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_properties(self):
        """Gets the event_properties of this EventProperties.


        :return: The event_properties of this EventProperties.
        :rtype: List[str]
        """
        return self._event_properties

    @event_properties.setter
    def event_properties(self, event_properties):
        """Sets the event_properties of this EventProperties.


        :param event_properties: The event_properties of this EventProperties.
        :type event_properties: List[str]
        """

        self._event_properties = event_properties
