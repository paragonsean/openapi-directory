# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_version: str=None, description: str=None, is_disabled: bool=None, is_mandatory: bool=None, rollout: int=None, download_url: str=None, is_available: bool=None, label: str=None, package_hash: str=None, package_size: float=None, should_run_binary_version: bool=None, update_app_version: bool=None):
        """LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo - a model defined in OpenAPI

        :param app_version: The app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param description: The description of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param is_disabled: The is_disabled of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param is_mandatory: The is_mandatory of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param rollout: The rollout of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param download_url: The download_url of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param is_available: The is_available of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param label: The label of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param package_hash: The package_hash of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param package_size: The package_size of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param should_run_binary_version: The should_run_binary_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :param update_app_version: The update_app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        """
        self.openapi_types = {
            'app_version': str,
            'description': str,
            'is_disabled': bool,
            'is_mandatory': bool,
            'rollout': int,
            'download_url': str,
            'is_available': bool,
            'label': str,
            'package_hash': str,
            'package_size': float,
            'should_run_binary_version': bool,
            'update_app_version': bool
        }

        self.attribute_map = {
            'app_version': 'appVersion',
            'description': 'description',
            'is_disabled': 'isDisabled',
            'is_mandatory': 'isMandatory',
            'rollout': 'rollout',
            'download_url': 'downloadURL',
            'is_available': 'isAvailable',
            'label': 'label',
            'package_hash': 'packageHash',
            'package_size': 'packageSize',
            'should_run_binary_version': 'shouldRunBinaryVersion',
            'update_app_version': 'updateAppVersion'
        }

        self._app_version = app_version
        self._description = description
        self._is_disabled = is_disabled
        self._is_mandatory = is_mandatory
        self._rollout = rollout
        self._download_url = download_url
        self._is_available = is_available
        self._label = label
        self._package_hash = package_hash
        self._package_size = package_size
        self._should_run_binary_version = should_run_binary_version
        self._update_app_version = update_app_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The legacyCodePushAcquisition_updateCheck_200_response_updateInfo of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_version(self):
        """Gets the app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: str
        """
        return self._app_version

    @app_version.setter
    def app_version(self, app_version):
        """Sets the app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param app_version: The app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type app_version: str
        """

        self._app_version = app_version

    @property
    def description(self):
        """Gets the description of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The description of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param description: The description of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type description: str
        """

        self._description = description

    @property
    def is_disabled(self):
        """Gets the is_disabled of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The is_disabled of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: bool
        """
        return self._is_disabled

    @is_disabled.setter
    def is_disabled(self, is_disabled):
        """Sets the is_disabled of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param is_disabled: The is_disabled of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type is_disabled: bool
        """

        self._is_disabled = is_disabled

    @property
    def is_mandatory(self):
        """Gets the is_mandatory of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The is_mandatory of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: bool
        """
        return self._is_mandatory

    @is_mandatory.setter
    def is_mandatory(self, is_mandatory):
        """Sets the is_mandatory of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param is_mandatory: The is_mandatory of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type is_mandatory: bool
        """

        self._is_mandatory = is_mandatory

    @property
    def rollout(self):
        """Gets the rollout of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The rollout of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: int
        """
        return self._rollout

    @rollout.setter
    def rollout(self, rollout):
        """Sets the rollout of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param rollout: The rollout of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type rollout: int
        """

        self._rollout = rollout

    @property
    def download_url(self):
        """Gets the download_url of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The download_url of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param download_url: The download_url of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type download_url: str
        """

        self._download_url = download_url

    @property
    def is_available(self):
        """Gets the is_available of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The is_available of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: bool
        """
        return self._is_available

    @is_available.setter
    def is_available(self, is_available):
        """Sets the is_available of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param is_available: The is_available of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type is_available: bool
        """
        if is_available is None:
            raise ValueError("Invalid value for `is_available`, must not be `None`")

        self._is_available = is_available

    @property
    def label(self):
        """Gets the label of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The label of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param label: The label of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type label: str
        """

        self._label = label

    @property
    def package_hash(self):
        """Gets the package_hash of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The package_hash of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: str
        """
        return self._package_hash

    @package_hash.setter
    def package_hash(self, package_hash):
        """Sets the package_hash of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param package_hash: The package_hash of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type package_hash: str
        """

        self._package_hash = package_hash

    @property
    def package_size(self):
        """Gets the package_size of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The package_size of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: float
        """
        return self._package_size

    @package_size.setter
    def package_size(self, package_size):
        """Sets the package_size of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param package_size: The package_size of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type package_size: float
        """

        self._package_size = package_size

    @property
    def should_run_binary_version(self):
        """Gets the should_run_binary_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The should_run_binary_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: bool
        """
        return self._should_run_binary_version

    @should_run_binary_version.setter
    def should_run_binary_version(self, should_run_binary_version):
        """Sets the should_run_binary_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param should_run_binary_version: The should_run_binary_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type should_run_binary_version: bool
        """

        self._should_run_binary_version = should_run_binary_version

    @property
    def update_app_version(self):
        """Gets the update_app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :return: The update_app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :rtype: bool
        """
        return self._update_app_version

    @update_app_version.setter
    def update_app_version(self, update_app_version):
        """Sets the update_app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.


        :param update_app_version: The update_app_version of this LegacyCodePushAcquisitionUpdateCheck200ResponseUpdateInfo.
        :type update_app_version: bool
        """

        self._update_app_version = update_app_version
