# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organizations_list_administered200_response_organizations import OrganizationsListAdministered200ResponseOrganizations
from openapi_server import util


class AdministeredOrgsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organizations: OrganizationsListAdministered200ResponseOrganizations=None):
        """AdministeredOrgsResponse - a model defined in OpenAPI

        :param organizations: The organizations of this AdministeredOrgsResponse.
        """
        self.openapi_types = {
            'organizations': OrganizationsListAdministered200ResponseOrganizations
        }

        self.attribute_map = {
            'organizations': 'organizations'
        }

        self._organizations = organizations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdministeredOrgsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdministeredOrgsResponse of this AdministeredOrgsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organizations(self):
        """Gets the organizations of this AdministeredOrgsResponse.


        :return: The organizations of this AdministeredOrgsResponse.
        :rtype: OrganizationsListAdministered200ResponseOrganizations
        """
        return self._organizations

    @organizations.setter
    def organizations(self, organizations):
        """Sets the organizations of this AdministeredOrgsResponse.


        :param organizations: The organizations of this AdministeredOrgsResponse.
        :type organizations: OrganizationsListAdministered200ResponseOrganizations
        """
        if organizations is None:
            raise ValueError("Invalid value for `organizations`, must not be `None`")

        self._organizations = organizations
