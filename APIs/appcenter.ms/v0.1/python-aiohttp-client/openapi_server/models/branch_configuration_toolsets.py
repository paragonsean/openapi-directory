# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.branch_configurations_get200_response_all_of_toolsets_android import BranchConfigurationsGet200ResponseAllOfToolsetsAndroid
from openapi_server.models.branch_configurations_get200_response_all_of_toolsets_javascript import BranchConfigurationsGet200ResponseAllOfToolsetsJavascript
from openapi_server.models.branch_configurations_get200_response_all_of_toolsets_xamarin import BranchConfigurationsGet200ResponseAllOfToolsetsXamarin
from openapi_server.models.branch_configurations_get200_response_all_of_toolsets_xcode import BranchConfigurationsGet200ResponseAllOfToolsetsXcode
from openapi_server import util


class BranchConfigurationToolsets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android: BranchConfigurationsGet200ResponseAllOfToolsetsAndroid=None, javascript: BranchConfigurationsGet200ResponseAllOfToolsetsJavascript=None, xamarin: BranchConfigurationsGet200ResponseAllOfToolsetsXamarin=None, xcode: BranchConfigurationsGet200ResponseAllOfToolsetsXcode=None):
        """BranchConfigurationToolsets - a model defined in OpenAPI

        :param android: The android of this BranchConfigurationToolsets.
        :param javascript: The javascript of this BranchConfigurationToolsets.
        :param xamarin: The xamarin of this BranchConfigurationToolsets.
        :param xcode: The xcode of this BranchConfigurationToolsets.
        """
        self.openapi_types = {
            'android': BranchConfigurationsGet200ResponseAllOfToolsetsAndroid,
            'javascript': BranchConfigurationsGet200ResponseAllOfToolsetsJavascript,
            'xamarin': BranchConfigurationsGet200ResponseAllOfToolsetsXamarin,
            'xcode': BranchConfigurationsGet200ResponseAllOfToolsetsXcode
        }

        self.attribute_map = {
            'android': 'android',
            'javascript': 'javascript',
            'xamarin': 'xamarin',
            'xcode': 'xcode'
        }

        self._android = android
        self._javascript = javascript
        self._xamarin = xamarin
        self._xcode = xcode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BranchConfigurationToolsets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BranchConfigurationToolsets of this BranchConfigurationToolsets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android(self):
        """Gets the android of this BranchConfigurationToolsets.


        :return: The android of this BranchConfigurationToolsets.
        :rtype: BranchConfigurationsGet200ResponseAllOfToolsetsAndroid
        """
        return self._android

    @android.setter
    def android(self, android):
        """Sets the android of this BranchConfigurationToolsets.


        :param android: The android of this BranchConfigurationToolsets.
        :type android: BranchConfigurationsGet200ResponseAllOfToolsetsAndroid
        """

        self._android = android

    @property
    def javascript(self):
        """Gets the javascript of this BranchConfigurationToolsets.


        :return: The javascript of this BranchConfigurationToolsets.
        :rtype: BranchConfigurationsGet200ResponseAllOfToolsetsJavascript
        """
        return self._javascript

    @javascript.setter
    def javascript(self, javascript):
        """Sets the javascript of this BranchConfigurationToolsets.


        :param javascript: The javascript of this BranchConfigurationToolsets.
        :type javascript: BranchConfigurationsGet200ResponseAllOfToolsetsJavascript
        """

        self._javascript = javascript

    @property
    def xamarin(self):
        """Gets the xamarin of this BranchConfigurationToolsets.


        :return: The xamarin of this BranchConfigurationToolsets.
        :rtype: BranchConfigurationsGet200ResponseAllOfToolsetsXamarin
        """
        return self._xamarin

    @xamarin.setter
    def xamarin(self, xamarin):
        """Sets the xamarin of this BranchConfigurationToolsets.


        :param xamarin: The xamarin of this BranchConfigurationToolsets.
        :type xamarin: BranchConfigurationsGet200ResponseAllOfToolsetsXamarin
        """

        self._xamarin = xamarin

    @property
    def xcode(self):
        """Gets the xcode of this BranchConfigurationToolsets.


        :return: The xcode of this BranchConfigurationToolsets.
        :rtype: BranchConfigurationsGet200ResponseAllOfToolsetsXcode
        """
        return self._xcode

    @xcode.setter
    def xcode(self, xcode):
        """Sets the xcode of this BranchConfigurationToolsets.


        :param xcode: The xcode of this BranchConfigurationToolsets.
        :type xcode: BranchConfigurationsGet200ResponseAllOfToolsetsXcode
        """

        self._xcode = xcode
