# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataSubjectRightQueueInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expires_at: datetime=None, queue_name: str=None, sas_uri: str=None):
        """DataSubjectRightQueueInfo - a model defined in OpenAPI

        :param expires_at: The expires_at of this DataSubjectRightQueueInfo.
        :param queue_name: The queue_name of this DataSubjectRightQueueInfo.
        :param sas_uri: The sas_uri of this DataSubjectRightQueueInfo.
        """
        self.openapi_types = {
            'expires_at': datetime,
            'queue_name': str,
            'sas_uri': str
        }

        self.attribute_map = {
            'expires_at': 'expiresAt',
            'queue_name': 'queueName',
            'sas_uri': 'sasUri'
        }

        self._expires_at = expires_at
        self._queue_name = queue_name
        self._sas_uri = sas_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSubjectRightQueueInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSubjectRightQueueInfo of this DataSubjectRightQueueInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expires_at(self):
        """Gets the expires_at of this DataSubjectRightQueueInfo.


        :return: The expires_at of this DataSubjectRightQueueInfo.
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this DataSubjectRightQueueInfo.


        :param expires_at: The expires_at of this DataSubjectRightQueueInfo.
        :type expires_at: datetime
        """
        if expires_at is None:
            raise ValueError("Invalid value for `expires_at`, must not be `None`")

        self._expires_at = expires_at

    @property
    def queue_name(self):
        """Gets the queue_name of this DataSubjectRightQueueInfo.


        :return: The queue_name of this DataSubjectRightQueueInfo.
        :rtype: str
        """
        return self._queue_name

    @queue_name.setter
    def queue_name(self, queue_name):
        """Sets the queue_name of this DataSubjectRightQueueInfo.


        :param queue_name: The queue_name of this DataSubjectRightQueueInfo.
        :type queue_name: str
        """
        if queue_name is None:
            raise ValueError("Invalid value for `queue_name`, must not be `None`")

        self._queue_name = queue_name

    @property
    def sas_uri(self):
        """Gets the sas_uri of this DataSubjectRightQueueInfo.


        :return: The sas_uri of this DataSubjectRightQueueInfo.
        :rtype: str
        """
        return self._sas_uri

    @sas_uri.setter
    def sas_uri(self, sas_uri):
        """Sets the sas_uri of this DataSubjectRightQueueInfo.


        :param sas_uri: The sas_uri of this DataSubjectRightQueueInfo.
        :type sas_uri: str
        """
        if sas_uri is None:
            raise ValueError("Invalid value for `sas_uri`, must not be `None`")

        self._sas_uri = sas_uri
