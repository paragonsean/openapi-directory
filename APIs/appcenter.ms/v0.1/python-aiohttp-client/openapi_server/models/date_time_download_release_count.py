# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DateTimeDownloadReleaseCount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datetime: str=None, total: int=None, unique: int=None):
        """DateTimeDownloadReleaseCount - a model defined in OpenAPI

        :param datetime: The datetime of this DateTimeDownloadReleaseCount.
        :param total: The total of this DateTimeDownloadReleaseCount.
        :param unique: The unique of this DateTimeDownloadReleaseCount.
        """
        self.openapi_types = {
            'datetime': str,
            'total': int,
            'unique': int
        }

        self.attribute_map = {
            'datetime': 'datetime',
            'total': 'total',
            'unique': 'unique'
        }

        self._datetime = datetime
        self._total = total
        self._unique = unique

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DateTimeDownloadReleaseCount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DateTimeDownloadReleaseCount of this DateTimeDownloadReleaseCount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datetime(self):
        """Gets the datetime of this DateTimeDownloadReleaseCount.

        The ISO 8601 datetime.

        :return: The datetime of this DateTimeDownloadReleaseCount.
        :rtype: str
        """
        return self._datetime

    @datetime.setter
    def datetime(self, datetime):
        """Sets the datetime of this DateTimeDownloadReleaseCount.

        The ISO 8601 datetime.

        :param datetime: The datetime of this DateTimeDownloadReleaseCount.
        :type datetime: str
        """

        self._datetime = datetime

    @property
    def total(self):
        """Gets the total of this DateTimeDownloadReleaseCount.


        :return: The total of this DateTimeDownloadReleaseCount.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this DateTimeDownloadReleaseCount.


        :param total: The total of this DateTimeDownloadReleaseCount.
        :type total: int
        """

        self._total = total

    @property
    def unique(self):
        """Gets the unique of this DateTimeDownloadReleaseCount.


        :return: The unique of this DateTimeDownloadReleaseCount.
        :rtype: int
        """
        return self._unique

    @unique.setter
    def unique(self, unique):
        """Sets the unique of this DateTimeDownloadReleaseCount.


        :param unique: The unique of this DateTimeDownloadReleaseCount.
        :type unique: int
        """

        self._unique = unique
