# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.builds_list_toolset_projects200_response_xcode_xcode_scheme_containers_inner_app_extension_targets_inner import BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerAppExtensionTargetsInner
from openapi_server.models.builds_list_toolset_projects200_response_xcode_xcode_scheme_containers_inner_shared_schemes_inner import BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner
from openapi_server import util


class BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_extension_targets: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerAppExtensionTargetsInner]=None, cartfile_path: str=None, path: str=None, podfile_path: str=None, shared_schemes: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner]=None, workspace_project_paths: str=None, xcode_project_sha: str=None):
        """BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner - a model defined in OpenAPI

        :param app_extension_targets: The app_extension_targets of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :param cartfile_path: The cartfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :param path: The path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :param podfile_path: The podfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :param shared_schemes: The shared_schemes of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :param workspace_project_paths: The workspace_project_paths of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :param xcode_project_sha: The xcode_project_sha of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        """
        self.openapi_types = {
            'app_extension_targets': List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerAppExtensionTargetsInner],
            'cartfile_path': str,
            'path': str,
            'podfile_path': str,
            'shared_schemes': List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner],
            'workspace_project_paths': str,
            'xcode_project_sha': str
        }

        self.attribute_map = {
            'app_extension_targets': 'appExtensionTargets',
            'cartfile_path': 'cartfilePath',
            'path': 'path',
            'podfile_path': 'podfilePath',
            'shared_schemes': 'sharedSchemes',
            'workspace_project_paths': 'workspaceProjectPaths',
            'xcode_project_sha': 'xcodeProjectSha'
        }

        self._app_extension_targets = app_extension_targets
        self._cartfile_path = cartfile_path
        self._path = path
        self._podfile_path = podfile_path
        self._shared_schemes = shared_schemes
        self._workspace_project_paths = workspace_project_paths
        self._xcode_project_sha = xcode_project_sha

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_extension_targets(self):
        """Gets the app_extension_targets of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Information regarding project app extensions, if present

        :return: The app_extension_targets of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :rtype: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerAppExtensionTargetsInner]
        """
        return self._app_extension_targets

    @app_extension_targets.setter
    def app_extension_targets(self, app_extension_targets):
        """Sets the app_extension_targets of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Information regarding project app extensions, if present

        :param app_extension_targets: The app_extension_targets of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :type app_extension_targets: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerAppExtensionTargetsInner]
        """

        self._app_extension_targets = app_extension_targets

    @property
    def cartfile_path(self):
        """Gets the cartfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Path to Carthage file, if present

        :return: The cartfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :rtype: str
        """
        return self._cartfile_path

    @cartfile_path.setter
    def cartfile_path(self, cartfile_path):
        """Sets the cartfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Path to Carthage file, if present

        :param cartfile_path: The cartfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :type cartfile_path: str
        """

        self._cartfile_path = cartfile_path

    @property
    def path(self):
        """Gets the path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Path to project

        :return: The path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Path to project

        :param path: The path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")

        self._path = path

    @property
    def podfile_path(self):
        """Gets the podfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Path to CocoaPods file, if present

        :return: The podfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :rtype: str
        """
        return self._podfile_path

    @podfile_path.setter
    def podfile_path(self, podfile_path):
        """Sets the podfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Path to CocoaPods file, if present

        :param podfile_path: The podfile_path of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :type podfile_path: str
        """

        self._podfile_path = podfile_path

    @property
    def shared_schemes(self):
        """Gets the shared_schemes of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Project schemes

        :return: The shared_schemes of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :rtype: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner]
        """
        return self._shared_schemes

    @shared_schemes.setter
    def shared_schemes(self, shared_schemes):
        """Sets the shared_schemes of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Project schemes

        :param shared_schemes: The shared_schemes of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :type shared_schemes: List[BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner]
        """
        if shared_schemes is None:
            raise ValueError("Invalid value for `shared_schemes`, must not be `None`")

        self._shared_schemes = shared_schemes

    @property
    def workspace_project_paths(self):
        """Gets the workspace_project_paths of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Related projects paths for xcworkspace

        :return: The workspace_project_paths of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :rtype: str
        """
        return self._workspace_project_paths

    @workspace_project_paths.setter
    def workspace_project_paths(self, workspace_project_paths):
        """Sets the workspace_project_paths of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        Related projects paths for xcworkspace

        :param workspace_project_paths: The workspace_project_paths of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :type workspace_project_paths: str
        """

        self._workspace_project_paths = workspace_project_paths

    @property
    def xcode_project_sha(self):
        """Gets the xcode_project_sha of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        repo object Id of the pbxproject

        :return: The xcode_project_sha of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :rtype: str
        """
        return self._xcode_project_sha

    @xcode_project_sha.setter
    def xcode_project_sha(self, xcode_project_sha):
        """Sets the xcode_project_sha of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.

        repo object Id of the pbxproject

        :param xcode_project_sha: The xcode_project_sha of this BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInner.
        :type xcode_project_sha: str
        """

        self._xcode_project_sha = xcode_project_sha
