# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Release(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, release: str=None):
        """Release - a model defined in OpenAPI

        :param release: The release of this Release.
        """
        self.openapi_types = {
            'release': str
        }

        self.attribute_map = {
            'release': 'release'
        }

        self._release = release

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Release':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Release of this Release.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def release(self):
        """Gets the release of this Release.

        Release Id. 

        :return: The release of this Release.
        :rtype: str
        """
        return self._release

    @release.setter
    def release(self, release):
        """Sets the release of this Release.

        Release Id. 

        :param release: The release of this Release.
        :type release: str
        """
        if release is None:
            raise ValueError("Invalid value for `release`, must not be `None`")

        self._release = release
