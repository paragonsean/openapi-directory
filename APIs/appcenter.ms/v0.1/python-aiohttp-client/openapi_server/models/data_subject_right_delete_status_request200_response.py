# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataSubjectRightDeleteStatusRequest200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, sas_url: str=None, sas_url_expired: bool=None, status: str=None):
        """DataSubjectRightDeleteStatusRequest200Response - a model defined in OpenAPI

        :param message: The message of this DataSubjectRightDeleteStatusRequest200Response.
        :param sas_url: The sas_url of this DataSubjectRightDeleteStatusRequest200Response.
        :param sas_url_expired: The sas_url_expired of this DataSubjectRightDeleteStatusRequest200Response.
        :param status: The status of this DataSubjectRightDeleteStatusRequest200Response.
        """
        self.openapi_types = {
            'message': str,
            'sas_url': str,
            'sas_url_expired': bool,
            'status': str
        }

        self.attribute_map = {
            'message': 'message',
            'sas_url': 'sasUrl',
            'sas_url_expired': 'sasUrlExpired',
            'status': 'status'
        }

        self._message = message
        self._sas_url = sas_url
        self._sas_url_expired = sas_url_expired
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSubjectRightDeleteStatusRequest200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSubjectRight_DeleteStatusRequest_200_response of this DataSubjectRightDeleteStatusRequest200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this DataSubjectRightDeleteStatusRequest200Response.

        explanation message of the status

        :return: The message of this DataSubjectRightDeleteStatusRequest200Response.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DataSubjectRightDeleteStatusRequest200Response.

        explanation message of the status

        :param message: The message of this DataSubjectRightDeleteStatusRequest200Response.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def sas_url(self):
        """Gets the sas_url of this DataSubjectRightDeleteStatusRequest200Response.

        Azure Storage shared access signature (SAS) URL for exported user data.

        :return: The sas_url of this DataSubjectRightDeleteStatusRequest200Response.
        :rtype: str
        """
        return self._sas_url

    @sas_url.setter
    def sas_url(self, sas_url):
        """Sets the sas_url of this DataSubjectRightDeleteStatusRequest200Response.

        Azure Storage shared access signature (SAS) URL for exported user data.

        :param sas_url: The sas_url of this DataSubjectRightDeleteStatusRequest200Response.
        :type sas_url: str
        """

        self._sas_url = sas_url

    @property
    def sas_url_expired(self):
        """Gets the sas_url_expired of this DataSubjectRightDeleteStatusRequest200Response.

        Whether Azure Storage shared access signature (SAS) URL has expired or not.

        :return: The sas_url_expired of this DataSubjectRightDeleteStatusRequest200Response.
        :rtype: bool
        """
        return self._sas_url_expired

    @sas_url_expired.setter
    def sas_url_expired(self, sas_url_expired):
        """Sets the sas_url_expired of this DataSubjectRightDeleteStatusRequest200Response.

        Whether Azure Storage shared access signature (SAS) URL has expired or not.

        :param sas_url_expired: The sas_url_expired of this DataSubjectRightDeleteStatusRequest200Response.
        :type sas_url_expired: bool
        """

        self._sas_url_expired = sas_url_expired

    @property
    def status(self):
        """Gets the status of this DataSubjectRightDeleteStatusRequest200Response.

        Status of data subject right request

        :return: The status of this DataSubjectRightDeleteStatusRequest200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DataSubjectRightDeleteStatusRequest200Response.

        Status of data subject right request

        :param status: The status of this DataSubjectRightDeleteStatusRequest200Response.
        :type status: str
        """
        allowed_values = ["None", "Created", "Queued", "InProgress", "Completed", "Failed"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
