# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepositoriesList200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clone_url: str=None, name: str=None):
        """RepositoriesList200ResponseInner - a model defined in OpenAPI

        :param clone_url: The clone_url of this RepositoriesList200ResponseInner.
        :param name: The name of this RepositoriesList200ResponseInner.
        """
        self.openapi_types = {
            'clone_url': str,
            'name': str
        }

        self.attribute_map = {
            'clone_url': 'clone_url',
            'name': 'name'
        }

        self._clone_url = clone_url
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepositoriesList200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The repositories_list_200_response_inner of this RepositoriesList200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clone_url(self):
        """Gets the clone_url of this RepositoriesList200ResponseInner.

        URL used to clone the repository

        :return: The clone_url of this RepositoriesList200ResponseInner.
        :rtype: str
        """
        return self._clone_url

    @clone_url.setter
    def clone_url(self, clone_url):
        """Sets the clone_url of this RepositoriesList200ResponseInner.

        URL used to clone the repository

        :param clone_url: The clone_url of this RepositoriesList200ResponseInner.
        :type clone_url: str
        """

        self._clone_url = clone_url

    @property
    def name(self):
        """Gets the name of this RepositoriesList200ResponseInner.

        The repository name

        :return: The name of this RepositoriesList200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RepositoriesList200ResponseInner.

        The repository name

        :param name: The name of this RepositoriesList200ResponseInner.
        :type name: str
        """

        self._name = name
