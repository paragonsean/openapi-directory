# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PatchRepoInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_user_id: str=None):
        """PatchRepoInfo - a model defined in OpenAPI

        :param external_user_id: The external_user_id of this PatchRepoInfo.
        """
        self.openapi_types = {
            'external_user_id': str
        }

        self.attribute_map = {
            'external_user_id': 'external_user_id'
        }

        self._external_user_id = external_user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchRepoInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchRepoInfo of this PatchRepoInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_user_id(self):
        """Gets the external_user_id of this PatchRepoInfo.

        The external user ID

        :return: The external_user_id of this PatchRepoInfo.
        :rtype: str
        """
        return self._external_user_id

    @external_user_id.setter
    def external_user_id(self, external_user_id):
        """Sets the external_user_id of this PatchRepoInfo.

        The external user ID

        :param external_user_id: The external_user_id of this PatchRepoInfo.
        :type external_user_id: str
        """

        self._external_user_id = external_user_id
