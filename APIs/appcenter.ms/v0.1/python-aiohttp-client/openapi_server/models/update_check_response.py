# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.code_push_acquisition_update_check200_response_update_info import CodePushAcquisitionUpdateCheck200ResponseUpdateInfo
from openapi_server import util


class UpdateCheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_info: CodePushAcquisitionUpdateCheck200ResponseUpdateInfo=None):
        """UpdateCheckResponse - a model defined in OpenAPI

        :param update_info: The update_info of this UpdateCheckResponse.
        """
        self.openapi_types = {
            'update_info': CodePushAcquisitionUpdateCheck200ResponseUpdateInfo
        }

        self.attribute_map = {
            'update_info': 'update_info'
        }

        self._update_info = update_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCheckResponse of this UpdateCheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_info(self):
        """Gets the update_info of this UpdateCheckResponse.


        :return: The update_info of this UpdateCheckResponse.
        :rtype: CodePushAcquisitionUpdateCheck200ResponseUpdateInfo
        """
        return self._update_info

    @update_info.setter
    def update_info(self, update_info):
        """Sets the update_info of this UpdateCheckResponse.


        :param update_info: The update_info of this UpdateCheckResponse.
        :type update_info: CodePushAcquisitionUpdateCheck200ResponseUpdateInfo
        """
        if update_info is None:
            raise ValueError("Invalid value for `update_info`, must not be `None`")

        self._update_info = update_info
