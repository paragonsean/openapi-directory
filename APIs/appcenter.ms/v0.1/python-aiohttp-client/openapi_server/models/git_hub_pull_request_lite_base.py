# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.git_hub_branch_lite_repo import GitHubBranchLiteRepo
from openapi_server import util


class GitHubPullRequestLiteBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ref: str=None, repo: GitHubBranchLiteRepo=None, sha: str=None):
        """GitHubPullRequestLiteBase - a model defined in OpenAPI

        :param ref: The ref of this GitHubPullRequestLiteBase.
        :param repo: The repo of this GitHubPullRequestLiteBase.
        :param sha: The sha of this GitHubPullRequestLiteBase.
        """
        self.openapi_types = {
            'ref': str,
            'repo': GitHubBranchLiteRepo,
            'sha': str
        }

        self.attribute_map = {
            'ref': 'ref',
            'repo': 'repo',
            'sha': 'sha'
        }

        self._ref = ref
        self._repo = repo
        self._sha = sha

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GitHubPullRequestLiteBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GitHubPullRequestLite_base of this GitHubPullRequestLiteBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ref(self):
        """Gets the ref of this GitHubPullRequestLiteBase.

        The repository name

        :return: The ref of this GitHubPullRequestLiteBase.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this GitHubPullRequestLiteBase.

        The repository name

        :param ref: The ref of this GitHubPullRequestLiteBase.
        :type ref: str
        """

        self._ref = ref

    @property
    def repo(self):
        """Gets the repo of this GitHubPullRequestLiteBase.


        :return: The repo of this GitHubPullRequestLiteBase.
        :rtype: GitHubBranchLiteRepo
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this GitHubPullRequestLiteBase.


        :param repo: The repo of this GitHubPullRequestLiteBase.
        :type repo: GitHubBranchLiteRepo
        """

        self._repo = repo

    @property
    def sha(self):
        """Gets the sha of this GitHubPullRequestLiteBase.

        The discription of repository

        :return: The sha of this GitHubPullRequestLiteBase.
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this GitHubPullRequestLiteBase.

        The discription of repository

        :param sha: The sha of this GitHubPullRequestLiteBase.
        :type sha: str
        """

        self._sha = sha
