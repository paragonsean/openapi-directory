# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.legacy_code_push_release_response_package import LegacyCodePushReleaseResponsePackage
from openapi_server import util


class LegacyCodePushReleaseResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, package: LegacyCodePushReleaseResponsePackage=None):
        """LegacyCodePushReleaseResponse - a model defined in OpenAPI

        :param package: The package of this LegacyCodePushReleaseResponse.
        """
        self.openapi_types = {
            'package': LegacyCodePushReleaseResponsePackage
        }

        self.attribute_map = {
            'package': 'package'
        }

        self._package = package

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegacyCodePushReleaseResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LegacyCodePushReleaseResponse of this LegacyCodePushReleaseResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def package(self):
        """Gets the package of this LegacyCodePushReleaseResponse.


        :return: The package of this LegacyCodePushReleaseResponse.
        :rtype: LegacyCodePushReleaseResponsePackage
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this LegacyCodePushReleaseResponse.


        :param package: The package of this LegacyCodePushReleaseResponse.
        :type package: LegacyCodePushReleaseResponsePackage
        """
        if package is None:
            raise ValueError("Invalid value for `package`, must not be `None`")

        self._package = package
