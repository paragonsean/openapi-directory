# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppleMultifactorLoginResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cookie: str=None, expires: str=None, username: str=None):
        """AppleMultifactorLoginResponse - a model defined in OpenAPI

        :param cookie: The cookie of this AppleMultifactorLoginResponse.
        :param expires: The expires of this AppleMultifactorLoginResponse.
        :param username: The username of this AppleMultifactorLoginResponse.
        """
        self.openapi_types = {
            'cookie': str,
            'expires': str,
            'username': str
        }

        self.attribute_map = {
            'cookie': 'cookie',
            'expires': 'expires',
            'username': 'username'
        }

        self._cookie = cookie
        self._expires = expires
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppleMultifactorLoginResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppleMultifactorLoginResponse of this AppleMultifactorLoginResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cookie(self):
        """Gets the cookie of this AppleMultifactorLoginResponse.

        The 30-day session Token generated by apple after successfully logging in with Multifactor authentication.

        :return: The cookie of this AppleMultifactorLoginResponse.
        :rtype: str
        """
        return self._cookie

    @cookie.setter
    def cookie(self, cookie):
        """Sets the cookie of this AppleMultifactorLoginResponse.

        The 30-day session Token generated by apple after successfully logging in with Multifactor authentication.

        :param cookie: The cookie of this AppleMultifactorLoginResponse.
        :type cookie: str
        """

        self._cookie = cookie

    @property
    def expires(self):
        """Gets the expires of this AppleMultifactorLoginResponse.

        The expiry date of the cookie generated by apple

        :return: The expires of this AppleMultifactorLoginResponse.
        :rtype: str
        """
        return self._expires

    @expires.setter
    def expires(self, expires):
        """Sets the expires of this AppleMultifactorLoginResponse.

        The expiry date of the cookie generated by apple

        :param expires: The expires of this AppleMultifactorLoginResponse.
        :type expires: str
        """

        self._expires = expires

    @property
    def username(self):
        """Gets the username of this AppleMultifactorLoginResponse.

        the apple developer account.

        :return: The username of this AppleMultifactorLoginResponse.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this AppleMultifactorLoginResponse.

        the apple developer account.

        :param username: The username of this AppleMultifactorLoginResponse.
        :type username: str
        """

        self._username = username
