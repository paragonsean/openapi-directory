# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BranchConfigurationsGet200ResponseAllOfToolsetsJavascript(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, package_json_path: str=None, react_native_version: str=None, run_tests: bool=None):
        """BranchConfigurationsGet200ResponseAllOfToolsetsJavascript - a model defined in OpenAPI

        :param package_json_path: The package_json_path of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        :param react_native_version: The react_native_version of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        :param run_tests: The run_tests of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        """
        self.openapi_types = {
            'package_json_path': str,
            'react_native_version': str,
            'run_tests': bool
        }

        self.attribute_map = {
            'package_json_path': 'packageJsonPath',
            'react_native_version': 'reactNativeVersion',
            'run_tests': 'runTests'
        }

        self._package_json_path = package_json_path
        self._react_native_version = react_native_version
        self._run_tests = run_tests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BranchConfigurationsGet200ResponseAllOfToolsetsJavascript':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The branchConfigurations_get_200_response_allOf_toolsets_javascript of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def package_json_path(self):
        """Gets the package_json_path of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.

        Path to package.json file for the main project, e.g. \"package.json\" or \"myapp/package.json\"

        :return: The package_json_path of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        :rtype: str
        """
        return self._package_json_path

    @package_json_path.setter
    def package_json_path(self, package_json_path):
        """Sets the package_json_path of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.

        Path to package.json file for the main project, e.g. \"package.json\" or \"myapp/package.json\"

        :param package_json_path: The package_json_path of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        :type package_json_path: str
        """

        self._package_json_path = package_json_path

    @property
    def react_native_version(self):
        """Gets the react_native_version of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.

        Version of React Native from package.json files

        :return: The react_native_version of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        :rtype: str
        """
        return self._react_native_version

    @react_native_version.setter
    def react_native_version(self, react_native_version):
        """Sets the react_native_version of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.

        Version of React Native from package.json files

        :param react_native_version: The react_native_version of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        :type react_native_version: str
        """

        self._react_native_version = react_native_version

    @property
    def run_tests(self):
        """Gets the run_tests of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.

        Whether to run Jest unit tests, via npm test, during the build

        :return: The run_tests of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        :rtype: bool
        """
        return self._run_tests

    @run_tests.setter
    def run_tests(self, run_tests):
        """Sets the run_tests of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.

        Whether to run Jest unit tests, via npm test, during the build

        :param run_tests: The run_tests of this BranchConfigurationsGet200ResponseAllOfToolsetsJavascript.
        :type run_tests: bool
        """

        self._run_tests = run_tests
