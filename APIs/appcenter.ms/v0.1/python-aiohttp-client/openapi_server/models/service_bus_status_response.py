# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_bus_status_response_subscriptions_inner import ServiceBusStatusResponseSubscriptionsInner
from openapi_server import util


class ServiceBusStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, subscriptions: List[ServiceBusStatusResponseSubscriptionsInner]=None):
        """ServiceBusStatusResponse - a model defined in OpenAPI

        :param status: The status of this ServiceBusStatusResponse.
        :param subscriptions: The subscriptions of this ServiceBusStatusResponse.
        """
        self.openapi_types = {
            'status': str,
            'subscriptions': List[ServiceBusStatusResponseSubscriptionsInner]
        }

        self.attribute_map = {
            'status': 'status',
            'subscriptions': 'subscriptions'
        }

        self._status = status
        self._subscriptions = subscriptions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceBusStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceBusStatusResponse of this ServiceBusStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ServiceBusStatusResponse.


        :return: The status of this ServiceBusStatusResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServiceBusStatusResponse.


        :param status: The status of this ServiceBusStatusResponse.
        :type status: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def subscriptions(self):
        """Gets the subscriptions of this ServiceBusStatusResponse.


        :return: The subscriptions of this ServiceBusStatusResponse.
        :rtype: List[ServiceBusStatusResponseSubscriptionsInner]
        """
        return self._subscriptions

    @subscriptions.setter
    def subscriptions(self, subscriptions):
        """Sets the subscriptions of this ServiceBusStatusResponse.


        :param subscriptions: The subscriptions of this ServiceBusStatusResponse.
        :type subscriptions: List[ServiceBusStatusResponseSubscriptionsInner]
        """

        self._subscriptions = subscriptions
