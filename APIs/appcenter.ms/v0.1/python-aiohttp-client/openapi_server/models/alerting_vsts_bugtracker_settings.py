# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlertingVstsBugtrackerSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vsts_account_name: str=None, vsts_area_path: str=None, vsts_default_payload: object=None, vsts_project_id: str=None, vsts_project_name: str=None, vsts_project_uri: str=None, callback_url: str=None, owner_name: str=None, type: str=None):
        """AlertingVstsBugtrackerSettings - a model defined in OpenAPI

        :param vsts_account_name: The vsts_account_name of this AlertingVstsBugtrackerSettings.
        :param vsts_area_path: The vsts_area_path of this AlertingVstsBugtrackerSettings.
        :param vsts_default_payload: The vsts_default_payload of this AlertingVstsBugtrackerSettings.
        :param vsts_project_id: The vsts_project_id of this AlertingVstsBugtrackerSettings.
        :param vsts_project_name: The vsts_project_name of this AlertingVstsBugtrackerSettings.
        :param vsts_project_uri: The vsts_project_uri of this AlertingVstsBugtrackerSettings.
        :param callback_url: The callback_url of this AlertingVstsBugtrackerSettings.
        :param owner_name: The owner_name of this AlertingVstsBugtrackerSettings.
        :param type: The type of this AlertingVstsBugtrackerSettings.
        """
        self.openapi_types = {
            'vsts_account_name': str,
            'vsts_area_path': str,
            'vsts_default_payload': object,
            'vsts_project_id': str,
            'vsts_project_name': str,
            'vsts_project_uri': str,
            'callback_url': str,
            'owner_name': str,
            'type': str
        }

        self.attribute_map = {
            'vsts_account_name': 'vsts_account_name',
            'vsts_area_path': 'vsts_area_path',
            'vsts_default_payload': 'vsts_default_payload',
            'vsts_project_id': 'vsts_project_id',
            'vsts_project_name': 'vsts_project_name',
            'vsts_project_uri': 'vsts_project_uri',
            'callback_url': 'callback_url',
            'owner_name': 'owner_name',
            'type': 'type'
        }

        self._vsts_account_name = vsts_account_name
        self._vsts_area_path = vsts_area_path
        self._vsts_default_payload = vsts_default_payload
        self._vsts_project_id = vsts_project_id
        self._vsts_project_name = vsts_project_name
        self._vsts_project_uri = vsts_project_uri
        self._callback_url = callback_url
        self._owner_name = owner_name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertingVstsBugtrackerSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertingVstsBugtrackerSettings of this AlertingVstsBugtrackerSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vsts_account_name(self):
        """Gets the vsts_account_name of this AlertingVstsBugtrackerSettings.


        :return: The vsts_account_name of this AlertingVstsBugtrackerSettings.
        :rtype: str
        """
        return self._vsts_account_name

    @vsts_account_name.setter
    def vsts_account_name(self, vsts_account_name):
        """Sets the vsts_account_name of this AlertingVstsBugtrackerSettings.


        :param vsts_account_name: The vsts_account_name of this AlertingVstsBugtrackerSettings.
        :type vsts_account_name: str
        """

        self._vsts_account_name = vsts_account_name

    @property
    def vsts_area_path(self):
        """Gets the vsts_area_path of this AlertingVstsBugtrackerSettings.


        :return: The vsts_area_path of this AlertingVstsBugtrackerSettings.
        :rtype: str
        """
        return self._vsts_area_path

    @vsts_area_path.setter
    def vsts_area_path(self, vsts_area_path):
        """Sets the vsts_area_path of this AlertingVstsBugtrackerSettings.


        :param vsts_area_path: The vsts_area_path of this AlertingVstsBugtrackerSettings.
        :type vsts_area_path: str
        """

        self._vsts_area_path = vsts_area_path

    @property
    def vsts_default_payload(self):
        """Gets the vsts_default_payload of this AlertingVstsBugtrackerSettings.


        :return: The vsts_default_payload of this AlertingVstsBugtrackerSettings.
        :rtype: object
        """
        return self._vsts_default_payload

    @vsts_default_payload.setter
    def vsts_default_payload(self, vsts_default_payload):
        """Sets the vsts_default_payload of this AlertingVstsBugtrackerSettings.


        :param vsts_default_payload: The vsts_default_payload of this AlertingVstsBugtrackerSettings.
        :type vsts_default_payload: object
        """

        self._vsts_default_payload = vsts_default_payload

    @property
    def vsts_project_id(self):
        """Gets the vsts_project_id of this AlertingVstsBugtrackerSettings.


        :return: The vsts_project_id of this AlertingVstsBugtrackerSettings.
        :rtype: str
        """
        return self._vsts_project_id

    @vsts_project_id.setter
    def vsts_project_id(self, vsts_project_id):
        """Sets the vsts_project_id of this AlertingVstsBugtrackerSettings.


        :param vsts_project_id: The vsts_project_id of this AlertingVstsBugtrackerSettings.
        :type vsts_project_id: str
        """
        if vsts_project_id is None:
            raise ValueError("Invalid value for `vsts_project_id`, must not be `None`")

        self._vsts_project_id = vsts_project_id

    @property
    def vsts_project_name(self):
        """Gets the vsts_project_name of this AlertingVstsBugtrackerSettings.


        :return: The vsts_project_name of this AlertingVstsBugtrackerSettings.
        :rtype: str
        """
        return self._vsts_project_name

    @vsts_project_name.setter
    def vsts_project_name(self, vsts_project_name):
        """Sets the vsts_project_name of this AlertingVstsBugtrackerSettings.


        :param vsts_project_name: The vsts_project_name of this AlertingVstsBugtrackerSettings.
        :type vsts_project_name: str
        """

        self._vsts_project_name = vsts_project_name

    @property
    def vsts_project_uri(self):
        """Gets the vsts_project_uri of this AlertingVstsBugtrackerSettings.


        :return: The vsts_project_uri of this AlertingVstsBugtrackerSettings.
        :rtype: str
        """
        return self._vsts_project_uri

    @vsts_project_uri.setter
    def vsts_project_uri(self, vsts_project_uri):
        """Sets the vsts_project_uri of this AlertingVstsBugtrackerSettings.


        :param vsts_project_uri: The vsts_project_uri of this AlertingVstsBugtrackerSettings.
        :type vsts_project_uri: str
        """
        if vsts_project_uri is None:
            raise ValueError("Invalid value for `vsts_project_uri`, must not be `None`")

        self._vsts_project_uri = vsts_project_uri

    @property
    def callback_url(self):
        """Gets the callback_url of this AlertingVstsBugtrackerSettings.


        :return: The callback_url of this AlertingVstsBugtrackerSettings.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this AlertingVstsBugtrackerSettings.


        :param callback_url: The callback_url of this AlertingVstsBugtrackerSettings.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def owner_name(self):
        """Gets the owner_name of this AlertingVstsBugtrackerSettings.


        :return: The owner_name of this AlertingVstsBugtrackerSettings.
        :rtype: str
        """
        return self._owner_name

    @owner_name.setter
    def owner_name(self, owner_name):
        """Sets the owner_name of this AlertingVstsBugtrackerSettings.


        :param owner_name: The owner_name of this AlertingVstsBugtrackerSettings.
        :type owner_name: str
        """
        if owner_name is None:
            raise ValueError("Invalid value for `owner_name`, must not be `None`")

        self._owner_name = owner_name

    @property
    def type(self):
        """Gets the type of this AlertingVstsBugtrackerSettings.

        type of bugtracker

        :return: The type of this AlertingVstsBugtrackerSettings.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AlertingVstsBugtrackerSettings.

        type of bugtracker

        :param type: The type of this AlertingVstsBugtrackerSettings.
        :type type: str
        """
        allowed_values = ["github", "vsts", "jira"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
