/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppCenterClient);
  }
}(this, function(expect, AppCenterClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TestGetDeviceConfigurations200ResponseInnerModel', function() {
    it('should create an instance of TestGetDeviceConfigurations200ResponseInnerModel', function() {
      // uncomment below and update the code to test TestGetDeviceConfigurations200ResponseInnerModel
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be.a(AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel);
    });

    it('should have the property availabilityCount (base name: "availabilityCount")', function() {
      // uncomment below and update the code to test the property availabilityCount
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property cpu (base name: "cpu")', function() {
      // uncomment below and update the code to test the property cpu
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property deviceFrame (base name: "deviceFrame")', function() {
      // uncomment below and update the code to test the property deviceFrame
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property dimensions (base name: "dimensions")', function() {
      // uncomment below and update the code to test the property dimensions
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property formFactor (base name: "formFactor")', function() {
      // uncomment below and update the code to test the property formFactor
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property manufacturer (base name: "manufacturer")', function() {
      // uncomment below and update the code to test the property manufacturer
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property memory (base name: "memory")', function() {
      // uncomment below and update the code to test the property memory
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property platform (base name: "platform")', function() {
      // uncomment below and update the code to test the property platform
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property releaseDate (base name: "releaseDate")', function() {
      // uncomment below and update the code to test the property releaseDate
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property resolution (base name: "resolution")', function() {
      // uncomment below and update the code to test the property resolution
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property screenRotation (base name: "screenRotation")', function() {
      // uncomment below and update the code to test the property screenRotation
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

    it('should have the property screenSize (base name: "screenSize")', function() {
      // uncomment below and update the code to test the property screenSize
      //var instance = new AppCenterClient.TestGetDeviceConfigurations200ResponseInnerModel();
      //expect(instance).to.be();
    });

  });

}));
