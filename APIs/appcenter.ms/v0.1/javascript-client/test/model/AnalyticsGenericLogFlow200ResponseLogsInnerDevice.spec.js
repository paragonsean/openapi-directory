/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppCenterClient);
  }
}(this, function(expect, AppCenterClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AnalyticsGenericLogFlow200ResponseLogsInnerDevice', function() {
    it('should create an instance of AnalyticsGenericLogFlow200ResponseLogsInnerDevice', function() {
      // uncomment below and update the code to test AnalyticsGenericLogFlow200ResponseLogsInnerDevice
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be.a(AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice);
    });

    it('should have the property appBuild (base name: "app_build")', function() {
      // uncomment below and update the code to test the property appBuild
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property appNamespace (base name: "app_namespace")', function() {
      // uncomment below and update the code to test the property appNamespace
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property appVersion (base name: "app_version")', function() {
      // uncomment below and update the code to test the property appVersion
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property carrierCode (base name: "carrier_code")', function() {
      // uncomment below and update the code to test the property carrierCode
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property carrierCountry (base name: "carrier_country")', function() {
      // uncomment below and update the code to test the property carrierCountry
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property carrierName (base name: "carrier_name")', function() {
      // uncomment below and update the code to test the property carrierName
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property liveUpdateDeploymentKey (base name: "live_update_deployment_key")', function() {
      // uncomment below and update the code to test the property liveUpdateDeploymentKey
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property liveUpdatePackageHash (base name: "live_update_package_hash")', function() {
      // uncomment below and update the code to test the property liveUpdatePackageHash
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property liveUpdateReleaseLabel (base name: "live_update_release_label")', function() {
      // uncomment below and update the code to test the property liveUpdateReleaseLabel
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property oemName (base name: "oem_name")', function() {
      // uncomment below and update the code to test the property oemName
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property osApiLevel (base name: "os_api_level")', function() {
      // uncomment below and update the code to test the property osApiLevel
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property osBuild (base name: "os_build")', function() {
      // uncomment below and update the code to test the property osBuild
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property osName (base name: "os_name")', function() {
      // uncomment below and update the code to test the property osName
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property osVersion (base name: "os_version")', function() {
      // uncomment below and update the code to test the property osVersion
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property screenSize (base name: "screen_size")', function() {
      // uncomment below and update the code to test the property screenSize
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property sdkName (base name: "sdk_name")', function() {
      // uncomment below and update the code to test the property sdkName
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property sdkVersion (base name: "sdk_version")', function() {
      // uncomment below and update the code to test the property sdkVersion
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property timeZoneOffset (base name: "time_zone_offset")', function() {
      // uncomment below and update the code to test the property timeZoneOffset
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property wrapperRuntimeVersion (base name: "wrapper_runtime_version")', function() {
      // uncomment below and update the code to test the property wrapperRuntimeVersion
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property wrapperSdkName (base name: "wrapper_sdk_name")', function() {
      // uncomment below and update the code to test the property wrapperSdkName
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

    it('should have the property wrapperSdkVersion (base name: "wrapper_sdk_version")', function() {
      // uncomment below and update the code to test the property wrapperSdkVersion
      //var instance = new AppCenterClient.AnalyticsGenericLogFlow200ResponseLogsInnerDevice();
      //expect(instance).to.be();
    });

  });

}));
