/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppCenterClient);
  }
}(this, function(expect, AppCenterClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppCenterClient.XcodeBranchConfigurationProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('XcodeBranchConfigurationProperties', function() {
    it('should create an instance of XcodeBranchConfigurationProperties', function() {
      // uncomment below and update the code to test XcodeBranchConfigurationProperties
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be.a(AppCenterClient.XcodeBranchConfigurationProperties);
    });

    it('should have the property appExtensionProvisioningProfileFiles (base name: "appExtensionProvisioningProfileFiles")', function() {
      // uncomment below and update the code to test the property appExtensionProvisioningProfileFiles
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property archiveConfiguration (base name: "archiveConfiguration")', function() {
      // uncomment below and update the code to test the property archiveConfiguration
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property automaticSigning (base name: "automaticSigning")', function() {
      // uncomment below and update the code to test the property automaticSigning
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property cartfilePath (base name: "cartfilePath")', function() {
      // uncomment below and update the code to test the property cartfilePath
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property certificateEncoded (base name: "certificateEncoded")', function() {
      // uncomment below and update the code to test the property certificateEncoded
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property certificateFileId (base name: "certificateFileId")', function() {
      // uncomment below and update the code to test the property certificateFileId
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property certificateFilename (base name: "certificateFilename")', function() {
      // uncomment below and update the code to test the property certificateFilename
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property certificatePassword (base name: "certificatePassword")', function() {
      // uncomment below and update the code to test the property certificatePassword
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property certificateUploadId (base name: "certificateUploadId")', function() {
      // uncomment below and update the code to test the property certificateUploadId
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property forceLegacyBuildSystem (base name: "forceLegacyBuildSystem")', function() {
      // uncomment below and update the code to test the property forceLegacyBuildSystem
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property podfilePath (base name: "podfilePath")', function() {
      // uncomment below and update the code to test the property podfilePath
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property projectOrWorkspacePath (base name: "projectOrWorkspacePath")', function() {
      // uncomment below and update the code to test the property projectOrWorkspacePath
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningProfileEncoded (base name: "provisioningProfileEncoded")', function() {
      // uncomment below and update the code to test the property provisioningProfileEncoded
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningProfileFileId (base name: "provisioningProfileFileId")', function() {
      // uncomment below and update the code to test the property provisioningProfileFileId
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningProfileFilename (base name: "provisioningProfileFilename")', function() {
      // uncomment below and update the code to test the property provisioningProfileFilename
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningProfileUploadId (base name: "provisioningProfileUploadId")', function() {
      // uncomment below and update the code to test the property provisioningProfileUploadId
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property scheme (base name: "scheme")', function() {
      // uncomment below and update the code to test the property scheme
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property targetToArchive (base name: "targetToArchive")', function() {
      // uncomment below and update the code to test the property targetToArchive
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property teamId (base name: "teamId")', function() {
      // uncomment below and update the code to test the property teamId
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property xcodeProjectSha (base name: "xcodeProjectSha")', function() {
      // uncomment below and update the code to test the property xcodeProjectSha
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

    it('should have the property xcodeVersion (base name: "xcodeVersion")', function() {
      // uncomment below and update the code to test the property xcodeVersion
      //var instance = new AppCenterClient.XcodeBranchConfigurationProperties();
      //expect(instance).to.be();
    });

  });

}));
