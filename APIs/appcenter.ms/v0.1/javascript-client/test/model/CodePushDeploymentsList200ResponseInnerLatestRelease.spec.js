/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppCenterClient);
  }
}(this, function(expect, AppCenterClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CodePushDeploymentsList200ResponseInnerLatestRelease', function() {
    it('should create an instance of CodePushDeploymentsList200ResponseInnerLatestRelease', function() {
      // uncomment below and update the code to test CodePushDeploymentsList200ResponseInnerLatestRelease
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be.a(AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease);
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property isDisabled (base name: "is_disabled")', function() {
      // uncomment below and update the code to test the property isDisabled
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property isMandatory (base name: "is_mandatory")', function() {
      // uncomment below and update the code to test the property isMandatory
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property rollout (base name: "rollout")', function() {
      // uncomment below and update the code to test the property rollout
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property targetBinaryRange (base name: "target_binary_range")', function() {
      // uncomment below and update the code to test the property targetBinaryRange
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property blobUrl (base name: "blob_url")', function() {
      // uncomment below and update the code to test the property blobUrl
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property diffPackageMap (base name: "diff_package_map")', function() {
      // uncomment below and update the code to test the property diffPackageMap
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property originalDeployment (base name: "original_deployment")', function() {
      // uncomment below and update the code to test the property originalDeployment
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property originalLabel (base name: "original_label")', function() {
      // uncomment below and update the code to test the property originalLabel
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property packageHash (base name: "package_hash")', function() {
      // uncomment below and update the code to test the property packageHash
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property releaseMethod (base name: "release_method")', function() {
      // uncomment below and update the code to test the property releaseMethod
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property releasedBy (base name: "released_by")', function() {
      // uncomment below and update the code to test the property releasedBy
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

    it('should have the property uploadTime (base name: "upload_time")', function() {
      // uncomment below and update the code to test the property uploadTime
      //var instance = new AppCenterClient.CodePushDeploymentsList200ResponseInnerLatestRelease();
      //expect(instance).to.be();
    });

  });

}));
