/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppCenterClient);
  }
}(this, function(expect, AppCenterClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppCenterClient.ErrorsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ErrorsApi', function() {
    describe('errorsAppBuildsList', function() {
      it('should call errorsAppBuildsList successfully', function(done) {
        //uncomment below and update the code to test errorsAppBuildsList
        //instance.errorsAppBuildsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsAvailableVersions', function() {
      it('should call errorsAvailableVersions successfully', function(done) {
        //uncomment below and update the code to test errorsAvailableVersions
        //instance.errorsAvailableVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsCountsPerDay', function() {
      it('should call errorsCountsPerDay successfully', function(done) {
        //uncomment below and update the code to test errorsCountsPerDay
        //instance.errorsCountsPerDay(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsDeleteError', function() {
      it('should call errorsDeleteError successfully', function(done) {
        //uncomment below and update the code to test errorsDeleteError
        //instance.errorsDeleteError(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorAttachmentLocation', function() {
      it('should call errorsErrorAttachmentLocation successfully', function(done) {
        //uncomment below and update the code to test errorsErrorAttachmentLocation
        //instance.errorsErrorAttachmentLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorAttachmentText', function() {
      it('should call errorsErrorAttachmentText successfully', function(done) {
        //uncomment below and update the code to test errorsErrorAttachmentText
        //instance.errorsErrorAttachmentText(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorAttachments', function() {
      it('should call errorsErrorAttachments successfully', function(done) {
        //uncomment below and update the code to test errorsErrorAttachments
        //instance.errorsErrorAttachments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorDownload', function() {
      it('should call errorsErrorDownload successfully', function(done) {
        //uncomment below and update the code to test errorsErrorDownload
        //instance.errorsErrorDownload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorFreeDevicePercentages', function() {
      it('should call errorsErrorFreeDevicePercentages successfully', function(done) {
        //uncomment below and update the code to test errorsErrorFreeDevicePercentages
        //instance.errorsErrorFreeDevicePercentages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorGroupsSearch', function() {
      it('should call errorsErrorGroupsSearch successfully', function(done) {
        //uncomment below and update the code to test errorsErrorGroupsSearch
        //instance.errorsErrorGroupsSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorLocation', function() {
      it('should call errorsErrorLocation successfully', function(done) {
        //uncomment below and update the code to test errorsErrorLocation
        //instance.errorsErrorLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorSearch', function() {
      it('should call errorsErrorSearch successfully', function(done) {
        //uncomment below and update the code to test errorsErrorSearch
        //instance.errorsErrorSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsErrorStackTrace', function() {
      it('should call errorsErrorStackTrace successfully', function(done) {
        //uncomment below and update the code to test errorsErrorStackTrace
        //instance.errorsErrorStackTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGetErrorDetails', function() {
      it('should call errorsGetErrorDetails successfully', function(done) {
        //uncomment below and update the code to test errorsGetErrorDetails
        //instance.errorsGetErrorDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGetRetentionSettings', function() {
      it('should call errorsGetRetentionSettings successfully', function(done) {
        //uncomment below and update the code to test errorsGetRetentionSettings
        //instance.errorsGetRetentionSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGroupCountsPerDay', function() {
      it('should call errorsGroupCountsPerDay successfully', function(done) {
        //uncomment below and update the code to test errorsGroupCountsPerDay
        //instance.errorsGroupCountsPerDay(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGroupDetails', function() {
      it('should call errorsGroupDetails successfully', function(done) {
        //uncomment below and update the code to test errorsGroupDetails
        //instance.errorsGroupDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGroupErrorFreeDevicePercentages', function() {
      it('should call errorsGroupErrorFreeDevicePercentages successfully', function(done) {
        //uncomment below and update the code to test errorsGroupErrorFreeDevicePercentages
        //instance.errorsGroupErrorFreeDevicePercentages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGroupErrorStackTrace', function() {
      it('should call errorsGroupErrorStackTrace successfully', function(done) {
        //uncomment below and update the code to test errorsGroupErrorStackTrace
        //instance.errorsGroupErrorStackTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGroupList', function() {
      it('should call errorsGroupList successfully', function(done) {
        //uncomment below and update the code to test errorsGroupList
        //instance.errorsGroupList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGroupModelCounts', function() {
      it('should call errorsGroupModelCounts successfully', function(done) {
        //uncomment below and update the code to test errorsGroupModelCounts
        //instance.errorsGroupModelCounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsGroupOperatingSystemCounts', function() {
      it('should call errorsGroupOperatingSystemCounts successfully', function(done) {
        //uncomment below and update the code to test errorsGroupOperatingSystemCounts
        //instance.errorsGroupOperatingSystemCounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsLatestErrorDetails', function() {
      it('should call errorsLatestErrorDetails successfully', function(done) {
        //uncomment below and update the code to test errorsLatestErrorDetails
        //instance.errorsLatestErrorDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsListForGroup', function() {
      it('should call errorsListForGroup successfully', function(done) {
        //uncomment below and update the code to test errorsListForGroup
        //instance.errorsListForGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsListSessionLogs', function() {
      it('should call errorsListSessionLogs successfully', function(done) {
        //uncomment below and update the code to test errorsListSessionLogs
        //instance.errorsListSessionLogs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('errorsUpdateState', function() {
      it('should call errorsUpdateState successfully', function(done) {
        //uncomment below and update the code to test errorsUpdateState
        //instance.errorsUpdateState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
