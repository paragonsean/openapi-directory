/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppCenterClient);
  }
}(this, function(expect, AppCenterClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppCenterClient.AccountApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountApi', function() {
    describe('appApiTokensDelete', function() {
      it('should call appApiTokensDelete successfully', function(done) {
        //uncomment below and update the code to test appApiTokensDelete
        //instance.appApiTokensDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appApiTokensList', function() {
      it('should call appApiTokensList successfully', function(done) {
        //uncomment below and update the code to test appApiTokensList
        //instance.appApiTokensList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appApiTokensNew', function() {
      it('should call appApiTokensNew successfully', function(done) {
        //uncomment below and update the code to test appApiTokensNew
        //instance.appApiTokensNew(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appInvitationsAccept', function() {
      it('should call appInvitationsAccept successfully', function(done) {
        //uncomment below and update the code to test appInvitationsAccept
        //instance.appInvitationsAccept(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appInvitationsCreate', function() {
      it('should call appInvitationsCreate successfully', function(done) {
        //uncomment below and update the code to test appInvitationsCreate
        //instance.appInvitationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appInvitationsCreateByEmail', function() {
      it('should call appInvitationsCreateByEmail successfully', function(done) {
        //uncomment below and update the code to test appInvitationsCreateByEmail
        //instance.appInvitationsCreateByEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appInvitationsDelete', function() {
      it('should call appInvitationsDelete successfully', function(done) {
        //uncomment below and update the code to test appInvitationsDelete
        //instance.appInvitationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appInvitationsList', function() {
      it('should call appInvitationsList successfully', function(done) {
        //uncomment below and update the code to test appInvitationsList
        //instance.appInvitationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appInvitationsReject', function() {
      it('should call appInvitationsReject successfully', function(done) {
        //uncomment below and update the code to test appInvitationsReject
        //instance.appInvitationsReject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appInvitationsUpdatePermissions', function() {
      it('should call appInvitationsUpdatePermissions successfully', function(done) {
        //uncomment below and update the code to test appInvitationsUpdatePermissions
        //instance.appInvitationsUpdatePermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsCreate', function() {
      it('should call appsCreate successfully', function(done) {
        //uncomment below and update the code to test appsCreate
        //instance.appsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsCreateForOrg', function() {
      it('should call appsCreateForOrg successfully', function(done) {
        //uncomment below and update the code to test appsCreateForOrg
        //instance.appsCreateForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsDelete', function() {
      it('should call appsDelete successfully', function(done) {
        //uncomment below and update the code to test appsDelete
        //instance.appsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsDeleteAvatar', function() {
      it('should call appsDeleteAvatar successfully', function(done) {
        //uncomment below and update the code to test appsDeleteAvatar
        //instance.appsDeleteAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsGet', function() {
      it('should call appsGet successfully', function(done) {
        //uncomment below and update the code to test appsGet
        //instance.appsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsGetForOrgUser', function() {
      it('should call appsGetForOrgUser successfully', function(done) {
        //uncomment below and update the code to test appsGetForOrgUser
        //instance.appsGetForOrgUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsGetTeams', function() {
      it('should call appsGetTeams successfully', function(done) {
        //uncomment below and update the code to test appsGetTeams
        //instance.appsGetTeams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsList', function() {
      it('should call appsList successfully', function(done) {
        //uncomment below and update the code to test appsList
        //instance.appsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsListForOrg', function() {
      it('should call appsListForOrg successfully', function(done) {
        //uncomment below and update the code to test appsListForOrg
        //instance.appsListForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsListTesters', function() {
      it('should call appsListTesters successfully', function(done) {
        //uncomment below and update the code to test appsListTesters
        //instance.appsListTesters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsRemoveUser', function() {
      it('should call appsRemoveUser successfully', function(done) {
        //uncomment below and update the code to test appsRemoveUser
        //instance.appsRemoveUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsTransferOwnership', function() {
      it('should call appsTransferOwnership successfully', function(done) {
        //uncomment below and update the code to test appsTransferOwnership
        //instance.appsTransferOwnership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsTransferToOrg', function() {
      it('should call appsTransferToOrg successfully', function(done) {
        //uncomment below and update the code to test appsTransferToOrg
        //instance.appsTransferToOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsUpdate', function() {
      it('should call appsUpdate successfully', function(done) {
        //uncomment below and update the code to test appsUpdate
        //instance.appsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsUpdateAvatar', function() {
      it('should call appsUpdateAvatar successfully', function(done) {
        //uncomment below and update the code to test appsUpdateAvatar
        //instance.appsUpdateAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsUpdateUserPermissions', function() {
      it('should call appsUpdateUserPermissions successfully', function(done) {
        //uncomment below and update the code to test appsUpdateUserPermissions
        //instance.appsUpdateUserPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('azureSubscriptionDeleteForApp', function() {
      it('should call azureSubscriptionDeleteForApp successfully', function(done) {
        //uncomment below and update the code to test azureSubscriptionDeleteForApp
        //instance.azureSubscriptionDeleteForApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('azureSubscriptionLinkForApp', function() {
      it('should call azureSubscriptionLinkForApp successfully', function(done) {
        //uncomment below and update the code to test azureSubscriptionLinkForApp
        //instance.azureSubscriptionLinkForApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('azureSubscriptionListForApp', function() {
      it('should call azureSubscriptionListForApp successfully', function(done) {
        //uncomment below and update the code to test azureSubscriptionListForApp
        //instance.azureSubscriptionListForApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('azureSubscriptionListForOrg', function() {
      it('should call azureSubscriptionListForOrg successfully', function(done) {
        //uncomment below and update the code to test azureSubscriptionListForOrg
        //instance.azureSubscriptionListForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('azureSubscriptionListForUser', function() {
      it('should call azureSubscriptionListForUser successfully', function(done) {
        //uncomment below and update the code to test azureSubscriptionListForUser
        //instance.azureSubscriptionListForUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupInvitationsAcceptAll', function() {
      it('should call distributionGroupInvitationsAcceptAll successfully', function(done) {
        //uncomment below and update the code to test distributionGroupInvitationsAcceptAll
        //instance.distributionGroupInvitationsAcceptAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsAddApps', function() {
      it('should call distributionGroupsAddApps successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsAddApps
        //instance.distributionGroupsAddApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsAddUser', function() {
      it('should call distributionGroupsAddUser successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsAddUser
        //instance.distributionGroupsAddUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsAddUsersForOrg', function() {
      it('should call distributionGroupsAddUsersForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsAddUsersForOrg
        //instance.distributionGroupsAddUsersForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsBulkDeleteApps', function() {
      it('should call distributionGroupsBulkDeleteApps successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsBulkDeleteApps
        //instance.distributionGroupsBulkDeleteApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsBulkDeleteUsers', function() {
      it('should call distributionGroupsBulkDeleteUsers successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsBulkDeleteUsers
        //instance.distributionGroupsBulkDeleteUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsCreate', function() {
      it('should call distributionGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsCreate
        //instance.distributionGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsCreateForOrg', function() {
      it('should call distributionGroupsCreateForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsCreateForOrg
        //instance.distributionGroupsCreateForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsDelete', function() {
      it('should call distributionGroupsDelete successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsDelete
        //instance.distributionGroupsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsDeleteForOrg', function() {
      it('should call distributionGroupsDeleteForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsDeleteForOrg
        //instance.distributionGroupsDeleteForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsDetailsForOrg', function() {
      it('should call distributionGroupsDetailsForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsDetailsForOrg
        //instance.distributionGroupsDetailsForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsGet', function() {
      it('should call distributionGroupsGet successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsGet
        //instance.distributionGroupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsGetApps', function() {
      it('should call distributionGroupsGetApps successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsGetApps
        //instance.distributionGroupsGetApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsGetForOrg', function() {
      it('should call distributionGroupsGetForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsGetForOrg
        //instance.distributionGroupsGetForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsList', function() {
      it('should call distributionGroupsList successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsList
        //instance.distributionGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsListAllTestersForOrg', function() {
      it('should call distributionGroupsListAllTestersForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsListAllTestersForOrg
        //instance.distributionGroupsListAllTestersForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsListForOrg', function() {
      it('should call distributionGroupsListForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsListForOrg
        //instance.distributionGroupsListForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsListUsers', function() {
      it('should call distributionGroupsListUsers successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsListUsers
        //instance.distributionGroupsListUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsListUsersForOrg', function() {
      it('should call distributionGroupsListUsersForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsListUsersForOrg
        //instance.distributionGroupsListUsersForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsPatchForOrg', function() {
      it('should call distributionGroupsPatchForOrg successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsPatchForOrg
        //instance.distributionGroupsPatchForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsRemoveUser', function() {
      it('should call distributionGroupsRemoveUser successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsRemoveUser
        //instance.distributionGroupsRemoveUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsResendInvite', function() {
      it('should call distributionGroupsResendInvite successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsResendInvite
        //instance.distributionGroupsResendInvite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsResendSharedInvite', function() {
      it('should call distributionGroupsResendSharedInvite successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsResendSharedInvite
        //instance.distributionGroupsResendSharedInvite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('distributionGroupsUpdate', function() {
      it('should call distributionGroupsUpdate successfully', function(done) {
        //uncomment below and update the code to test distributionGroupsUpdate
        //instance.distributionGroupsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('invitationsSent', function() {
      it('should call invitationsSent successfully', function(done) {
        //uncomment below and update the code to test invitationsSent
        //instance.invitationsSent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgInvitations', function() {
      it('should call orgInvitations successfully', function(done) {
        //uncomment below and update the code to test orgInvitations
        //instance.orgInvitations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgInvitationsAccept', function() {
      it('should call orgInvitationsAccept successfully', function(done) {
        //uncomment below and update the code to test orgInvitationsAccept
        //instance.orgInvitationsAccept(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgInvitationsCreate', function() {
      it('should call orgInvitationsCreate successfully', function(done) {
        //uncomment below and update the code to test orgInvitationsCreate
        //instance.orgInvitationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgInvitationsDelete', function() {
      it('should call orgInvitationsDelete successfully', function(done) {
        //uncomment below and update the code to test orgInvitationsDelete
        //instance.orgInvitationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgInvitationsListPending', function() {
      it('should call orgInvitationsListPending successfully', function(done) {
        //uncomment below and update the code to test orgInvitationsListPending
        //instance.orgInvitationsListPending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgInvitationsReject', function() {
      it('should call orgInvitationsReject successfully', function(done) {
        //uncomment below and update the code to test orgInvitationsReject
        //instance.orgInvitationsReject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgInvitationsSendNewInvitation', function() {
      it('should call orgInvitationsSendNewInvitation successfully', function(done) {
        //uncomment below and update the code to test orgInvitationsSendNewInvitation
        //instance.orgInvitationsSendNewInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('orgInvitationsUpdate', function() {
      it('should call orgInvitationsUpdate successfully', function(done) {
        //uncomment below and update the code to test orgInvitationsUpdate
        //instance.orgInvitationsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationDeleteAvatar', function() {
      it('should call organizationDeleteAvatar successfully', function(done) {
        //uncomment below and update the code to test organizationDeleteAvatar
        //instance.organizationDeleteAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationUpdateAvatar', function() {
      it('should call organizationUpdateAvatar successfully', function(done) {
        //uncomment below and update the code to test organizationUpdateAvatar
        //instance.organizationUpdateAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationsCreateOrUpdate', function() {
      it('should call organizationsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test organizationsCreateOrUpdate
        //instance.organizationsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationsDelete', function() {
      it('should call organizationsDelete successfully', function(done) {
        //uncomment below and update the code to test organizationsDelete
        //instance.organizationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationsGet', function() {
      it('should call organizationsGet successfully', function(done) {
        //uncomment below and update the code to test organizationsGet
        //instance.organizationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationsList', function() {
      it('should call organizationsList successfully', function(done) {
        //uncomment below and update the code to test organizationsList
        //instance.organizationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationsListAdministered', function() {
      it('should call organizationsListAdministered successfully', function(done) {
        //uncomment below and update the code to test organizationsListAdministered
        //instance.organizationsListAdministered(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('organizationsUpdate', function() {
      it('should call organizationsUpdate successfully', function(done) {
        //uncomment below and update the code to test organizationsUpdate
        //instance.organizationsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sharedconnectionConnections', function() {
      it('should call sharedconnectionConnections successfully', function(done) {
        //uncomment below and update the code to test sharedconnectionConnections
        //instance.sharedconnectionConnections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsAddApp', function() {
      it('should call teamsAddApp successfully', function(done) {
        //uncomment below and update the code to test teamsAddApp
        //instance.teamsAddApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsAddUser', function() {
      it('should call teamsAddUser successfully', function(done) {
        //uncomment below and update the code to test teamsAddUser
        //instance.teamsAddUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsCreateTeam', function() {
      it('should call teamsCreateTeam successfully', function(done) {
        //uncomment below and update the code to test teamsCreateTeam
        //instance.teamsCreateTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsDelete', function() {
      it('should call teamsDelete successfully', function(done) {
        //uncomment below and update the code to test teamsDelete
        //instance.teamsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsGetTeam', function() {
      it('should call teamsGetTeam successfully', function(done) {
        //uncomment below and update the code to test teamsGetTeam
        //instance.teamsGetTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsGetUsers', function() {
      it('should call teamsGetUsers successfully', function(done) {
        //uncomment below and update the code to test teamsGetUsers
        //instance.teamsGetUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsListAll', function() {
      it('should call teamsListAll successfully', function(done) {
        //uncomment below and update the code to test teamsListAll
        //instance.teamsListAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsListApps', function() {
      it('should call teamsListApps successfully', function(done) {
        //uncomment below and update the code to test teamsListApps
        //instance.teamsListApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsRemoveApp', function() {
      it('should call teamsRemoveApp successfully', function(done) {
        //uncomment below and update the code to test teamsRemoveApp
        //instance.teamsRemoveApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsRemoveUser', function() {
      it('should call teamsRemoveUser successfully', function(done) {
        //uncomment below and update the code to test teamsRemoveUser
        //instance.teamsRemoveUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsUpdate', function() {
      it('should call teamsUpdate successfully', function(done) {
        //uncomment below and update the code to test teamsUpdate
        //instance.teamsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('teamsUpdatePermissions', function() {
      it('should call teamsUpdatePermissions successfully', function(done) {
        //uncomment below and update the code to test teamsUpdatePermissions
        //instance.teamsUpdatePermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userApiTokensDelete', function() {
      it('should call userApiTokensDelete successfully', function(done) {
        //uncomment below and update the code to test userApiTokensDelete
        //instance.userApiTokensDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userApiTokensList', function() {
      it('should call userApiTokensList successfully', function(done) {
        //uncomment below and update the code to test userApiTokensList
        //instance.userApiTokensList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userApiTokensNew', function() {
      it('should call userApiTokensNew successfully', function(done) {
        //uncomment below and update the code to test userApiTokensNew
        //instance.userApiTokensNew(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGet', function() {
      it('should call usersGet successfully', function(done) {
        //uncomment below and update the code to test usersGet
        //instance.usersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGetForOrg', function() {
      it('should call usersGetForOrg successfully', function(done) {
        //uncomment below and update the code to test usersGetForOrg
        //instance.usersGetForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGetUserMetadata', function() {
      it('should call usersGetUserMetadata successfully', function(done) {
        //uncomment below and update the code to test usersGetUserMetadata
        //instance.usersGetUserMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersList', function() {
      it('should call usersList successfully', function(done) {
        //uncomment below and update the code to test usersList
        //instance.usersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersListForOrg', function() {
      it('should call usersListForOrg successfully', function(done) {
        //uncomment below and update the code to test usersListForOrg
        //instance.usersListForOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersRemoveFromOrg', function() {
      it('should call usersRemoveFromOrg successfully', function(done) {
        //uncomment below and update the code to test usersRemoveFromOrg
        //instance.usersRemoveFromOrg(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUpdate', function() {
      it('should call usersUpdate successfully', function(done) {
        //uncomment below and update the code to test usersUpdate
        //instance.usersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUpdateOrgRole', function() {
      it('should call usersUpdateOrgRole successfully', function(done) {
        //uncomment below and update the code to test usersUpdateOrgRole
        //instance.usersUpdateOrgRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
