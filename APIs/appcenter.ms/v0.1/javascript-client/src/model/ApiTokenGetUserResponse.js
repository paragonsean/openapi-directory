/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiTokenGetUserResponse model module.
 * @module model/ApiTokenGetUserResponse
 * @version v0.1
 */
class ApiTokenGetUserResponse {
    /**
     * Constructs a new <code>ApiTokenGetUserResponse</code>.
     * @alias module:model/ApiTokenGetUserResponse
     * @param tokenId {String} The token's unique id (UUID)
     * @param tokenScope {Array.<module:model/ApiTokenGetUserResponse.TokenScopeEnum>} The token's scope. A list of allowed roles.
     * @param userEmail {String} The user email
     * @param userId {String} The unique id (UUID) of the user
     * @param userOrigin {module:model/ApiTokenGetUserResponse.UserOriginEnum} The creation origin of the user who created this api token
     */
    constructor(tokenId, tokenScope, userEmail, userId, userOrigin) { 
        
        ApiTokenGetUserResponse.initialize(this, tokenId, tokenScope, userEmail, userId, userOrigin);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tokenId, tokenScope, userEmail, userId, userOrigin) { 
        obj['token_id'] = tokenId;
        obj['token_scope'] = tokenScope;
        obj['user_email'] = userEmail;
        obj['user_id'] = userId;
        obj['user_origin'] = userOrigin;
    }

    /**
     * Constructs a <code>ApiTokenGetUserResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiTokenGetUserResponse} obj Optional instance to populate.
     * @return {module:model/ApiTokenGetUserResponse} The populated <code>ApiTokenGetUserResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiTokenGetUserResponse();

            if (data.hasOwnProperty('token_id')) {
                obj['token_id'] = ApiClient.convertToType(data['token_id'], 'String');
            }
            if (data.hasOwnProperty('token_scope')) {
                obj['token_scope'] = ApiClient.convertToType(data['token_scope'], ['String']);
            }
            if (data.hasOwnProperty('user_email')) {
                obj['user_email'] = ApiClient.convertToType(data['user_email'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
            if (data.hasOwnProperty('user_origin')) {
                obj['user_origin'] = ApiClient.convertToType(data['user_origin'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiTokenGetUserResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiTokenGetUserResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiTokenGetUserResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['token_id'] && !(typeof data['token_id'] === 'string' || data['token_id'] instanceof String)) {
            throw new Error("Expected the field `token_id` to be a primitive type in the JSON string but got " + data['token_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['token_scope'])) {
            throw new Error("Expected the field `token_scope` to be an array in the JSON data but got " + data['token_scope']);
        }
        // ensure the json data is a string
        if (data['user_email'] && !(typeof data['user_email'] === 'string' || data['user_email'] instanceof String)) {
            throw new Error("Expected the field `user_email` to be a primitive type in the JSON string but got " + data['user_email']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }
        // ensure the json data is a string
        if (data['user_origin'] && !(typeof data['user_origin'] === 'string' || data['user_origin'] instanceof String)) {
            throw new Error("Expected the field `user_origin` to be a primitive type in the JSON string but got " + data['user_origin']);
        }

        return true;
    }


}

ApiTokenGetUserResponse.RequiredProperties = ["token_id", "token_scope", "user_email", "user_id", "user_origin"];

/**
 * The token's unique id (UUID)
 * @member {String} token_id
 */
ApiTokenGetUserResponse.prototype['token_id'] = undefined;

/**
 * The token's scope. A list of allowed roles.
 * @member {Array.<module:model/ApiTokenGetUserResponse.TokenScopeEnum>} token_scope
 */
ApiTokenGetUserResponse.prototype['token_scope'] = undefined;

/**
 * The user email
 * @member {String} user_email
 */
ApiTokenGetUserResponse.prototype['user_email'] = undefined;

/**
 * The unique id (UUID) of the user
 * @member {String} user_id
 */
ApiTokenGetUserResponse.prototype['user_id'] = undefined;

/**
 * The creation origin of the user who created this api token
 * @member {module:model/ApiTokenGetUserResponse.UserOriginEnum} user_origin
 */
ApiTokenGetUserResponse.prototype['user_origin'] = undefined;





/**
 * Allowed values for the <code>tokenScope</code> property.
 * @enum {String}
 * @readonly
 */
ApiTokenGetUserResponse['TokenScopeEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "in_app_update"
     * @const
     */
    "in_app_update": "in_app_update",

    /**
     * value: "viewer"
     * @const
     */
    "viewer": "viewer"
};


/**
 * Allowed values for the <code>user_origin</code> property.
 * @enum {String}
 * @readonly
 */
ApiTokenGetUserResponse['UserOriginEnum'] = {

    /**
     * value: "appcenter"
     * @const
     */
    "appcenter": "appcenter",

    /**
     * value: "hockeyapp"
     * @const
     */
    "hockeyapp": "hockeyapp",

    /**
     * value: "codepush"
     * @const
     */
    "codepush": "codepush"
};



export default ApiTokenGetUserResponse;

