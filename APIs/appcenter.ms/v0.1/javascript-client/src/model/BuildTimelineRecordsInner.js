/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildTimelineRecordsInnerIssuesInner from './BuildTimelineRecordsInnerIssuesInner';

/**
 * The BuildTimelineRecordsInner model module.
 * @module model/BuildTimelineRecordsInner
 * @version v0.1
 */
class BuildTimelineRecordsInner {
    /**
     * Constructs a new <code>BuildTimelineRecordsInner</code>.
     * @alias module:model/BuildTimelineRecordsInner
     */
    constructor() { 
        
        BuildTimelineRecordsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildTimelineRecordsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildTimelineRecordsInner} obj Optional instance to populate.
     * @return {module:model/BuildTimelineRecordsInner} The populated <code>BuildTimelineRecordsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildTimelineRecordsInner();

            if (data.hasOwnProperty('currentOperation')) {
                obj['currentOperation'] = ApiClient.convertToType(data['currentOperation'], 'String');
            }
            if (data.hasOwnProperty('errorCount')) {
                obj['errorCount'] = ApiClient.convertToType(data['errorCount'], 'Number');
            }
            if (data.hasOwnProperty('finishTime')) {
                obj['finishTime'] = ApiClient.convertToType(data['finishTime'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('issues')) {
                obj['issues'] = ApiClient.convertToType(data['issues'], [BuildTimelineRecordsInnerIssuesInner]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('percentComplete')) {
                obj['percentComplete'] = ApiClient.convertToType(data['percentComplete'], 'Number');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('warningCount')) {
                obj['warningCount'] = ApiClient.convertToType(data['warningCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildTimelineRecordsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildTimelineRecordsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currentOperation'] && !(typeof data['currentOperation'] === 'string' || data['currentOperation'] instanceof String)) {
            throw new Error("Expected the field `currentOperation` to be a primitive type in the JSON string but got " + data['currentOperation']);
        }
        // ensure the json data is a string
        if (data['finishTime'] && !(typeof data['finishTime'] === 'string' || data['finishTime'] instanceof String)) {
            throw new Error("Expected the field `finishTime` to be a primitive type in the JSON string but got " + data['finishTime']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['issues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['issues'])) {
                throw new Error("Expected the field `issues` to be an array in the JSON data but got " + data['issues']);
            }
            // validate the optional field `issues` (array)
            for (const item of data['issues']) {
                BuildTimelineRecordsInnerIssuesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['result'] && !(typeof data['result'] === 'string' || data['result'] instanceof String)) {
            throw new Error("Expected the field `result` to be a primitive type in the JSON string but got " + data['result']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} currentOperation
 */
BuildTimelineRecordsInner.prototype['currentOperation'] = undefined;

/**
 * @member {Number} errorCount
 */
BuildTimelineRecordsInner.prototype['errorCount'] = undefined;

/**
 * @member {String} finishTime
 */
BuildTimelineRecordsInner.prototype['finishTime'] = undefined;

/**
 * @member {String} id
 */
BuildTimelineRecordsInner.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/BuildTimelineRecordsInnerIssuesInner>} issues
 */
BuildTimelineRecordsInner.prototype['issues'] = undefined;

/**
 * @member {String} name
 */
BuildTimelineRecordsInner.prototype['name'] = undefined;

/**
 * @member {Number} order
 */
BuildTimelineRecordsInner.prototype['order'] = undefined;

/**
 * @member {Number} percentComplete
 */
BuildTimelineRecordsInner.prototype['percentComplete'] = undefined;

/**
 * @member {String} result
 */
BuildTimelineRecordsInner.prototype['result'] = undefined;

/**
 * @member {String} startTime
 */
BuildTimelineRecordsInner.prototype['startTime'] = undefined;

/**
 * @member {String} state
 */
BuildTimelineRecordsInner.prototype['state'] = undefined;

/**
 * @member {String} type
 */
BuildTimelineRecordsInner.prototype['type'] = undefined;

/**
 * @member {Number} warningCount
 */
BuildTimelineRecordsInner.prototype['warningCount'] = undefined;






export default BuildTimelineRecordsInner;

