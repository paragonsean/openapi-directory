/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationStatusRequest model module.
 * @module model/ApplicationStatusRequest
 * @version v0.1
 */
class ApplicationStatusRequest {
    /**
     * Constructs a new <code>ApplicationStatusRequest</code>.
     * The information needed to fetch the status of an application
     * @alias module:model/ApplicationStatusRequest
     * @param bundleIdentifier {String} Bundle Identifier of application in Apple Itunes portal.
     * @param password {String} The password for the Apple Developer account.
     * @param trackIdentifier {String} Track Identifier for which the status is to be fetched.
     * @param username {String} The username for the Apple Developer account.
     */
    constructor(bundleIdentifier, password, trackIdentifier, username) { 
        
        ApplicationStatusRequest.initialize(this, bundleIdentifier, password, trackIdentifier, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bundleIdentifier, password, trackIdentifier, username) { 
        obj['bundle_identifier'] = bundleIdentifier;
        obj['password'] = password;
        obj['track_identifier'] = trackIdentifier;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>ApplicationStatusRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationStatusRequest} obj Optional instance to populate.
     * @return {module:model/ApplicationStatusRequest} The populated <code>ApplicationStatusRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationStatusRequest();

            if (data.hasOwnProperty('build_version')) {
                obj['build_version'] = ApiClient.convertToType(data['build_version'], 'String');
            }
            if (data.hasOwnProperty('bundle_identifier')) {
                obj['bundle_identifier'] = ApiClient.convertToType(data['bundle_identifier'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('team_identifier')) {
                obj['team_identifier'] = ApiClient.convertToType(data['team_identifier'], 'String');
            }
            if (data.hasOwnProperty('track_identifier')) {
                obj['track_identifier'] = ApiClient.convertToType(data['track_identifier'], 'String');
            }
            if (data.hasOwnProperty('train_version')) {
                obj['train_version'] = ApiClient.convertToType(data['train_version'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationStatusRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationStatusRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationStatusRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['build_version'] && !(typeof data['build_version'] === 'string' || data['build_version'] instanceof String)) {
            throw new Error("Expected the field `build_version` to be a primitive type in the JSON string but got " + data['build_version']);
        }
        // ensure the json data is a string
        if (data['bundle_identifier'] && !(typeof data['bundle_identifier'] === 'string' || data['bundle_identifier'] instanceof String)) {
            throw new Error("Expected the field `bundle_identifier` to be a primitive type in the JSON string but got " + data['bundle_identifier']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['team_identifier'] && !(typeof data['team_identifier'] === 'string' || data['team_identifier'] instanceof String)) {
            throw new Error("Expected the field `team_identifier` to be a primitive type in the JSON string but got " + data['team_identifier']);
        }
        // ensure the json data is a string
        if (data['track_identifier'] && !(typeof data['track_identifier'] === 'string' || data['track_identifier'] instanceof String)) {
            throw new Error("Expected the field `track_identifier` to be a primitive type in the JSON string but got " + data['track_identifier']);
        }
        // ensure the json data is a string
        if (data['train_version'] && !(typeof data['train_version'] === 'string' || data['train_version'] instanceof String)) {
            throw new Error("Expected the field `train_version` to be a primitive type in the JSON string but got " + data['train_version']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

ApplicationStatusRequest.RequiredProperties = ["bundle_identifier", "password", "track_identifier", "username"];

/**
 * The version of build for which real time status is to be fetched.
 * @member {String} build_version
 */
ApplicationStatusRequest.prototype['build_version'] = undefined;

/**
 * Bundle Identifier of application in Apple Itunes portal.
 * @member {String} bundle_identifier
 */
ApplicationStatusRequest.prototype['bundle_identifier'] = undefined;

/**
 * The password for the Apple Developer account.
 * @member {String} password
 */
ApplicationStatusRequest.prototype['password'] = undefined;

/**
 * Identifier of the team to use when logged in.
 * @member {String} team_identifier
 */
ApplicationStatusRequest.prototype['team_identifier'] = undefined;

/**
 * Track Identifier for which the status is to be fetched.
 * @member {String} track_identifier
 */
ApplicationStatusRequest.prototype['track_identifier'] = undefined;

/**
 * The Train version for which the status is to be fetched.
 * @member {String} train_version
 */
ApplicationStatusRequest.prototype['train_version'] = undefined;

/**
 * The username for the Apple Developer account.
 * @member {String} username
 */
ApplicationStatusRequest.prototype['username'] = undefined;






export default ApplicationStatusRequest;

