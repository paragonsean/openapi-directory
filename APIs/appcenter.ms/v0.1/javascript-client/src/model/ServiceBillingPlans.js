/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriod from './BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriod';

/**
 * The ServiceBillingPlans model module.
 * @module model/ServiceBillingPlans
 * @version v0.1
 */
class ServiceBillingPlans {
    /**
     * Constructs a new <code>ServiceBillingPlans</code>.
     * Billing Plans for a single service
     * @alias module:model/ServiceBillingPlans
     */
    constructor() { 
        
        ServiceBillingPlans.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceBillingPlans</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceBillingPlans} obj Optional instance to populate.
     * @return {module:model/ServiceBillingPlans} The populated <code>ServiceBillingPlans</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceBillingPlans();

            if (data.hasOwnProperty('canSelectTrialPlan')) {
                obj['canSelectTrialPlan'] = ApiClient.convertToType(data['canSelectTrialPlan'], 'Boolean');
            }
            if (data.hasOwnProperty('currentBillingPeriod')) {
                obj['currentBillingPeriod'] = BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriod.constructFromObject(data['currentBillingPeriod']);
            }
            if (data.hasOwnProperty('lastTrialPlanExpirationTime')) {
                obj['lastTrialPlanExpirationTime'] = ApiClient.convertToType(data['lastTrialPlanExpirationTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceBillingPlans</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceBillingPlans</code>.
     */
    static validateJSON(data) {
        // validate the optional field `currentBillingPeriod`
        if (data['currentBillingPeriod']) { // data not null
          BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriod.validateJSON(data['currentBillingPeriod']);
        }
        // ensure the json data is a string
        if (data['lastTrialPlanExpirationTime'] && !(typeof data['lastTrialPlanExpirationTime'] === 'string' || data['lastTrialPlanExpirationTime'] instanceof String)) {
            throw new Error("Expected the field `lastTrialPlanExpirationTime` to be a primitive type in the JSON string but got " + data['lastTrialPlanExpirationTime']);
        }

        return true;
    }


}



/**
 * Can customer select trial plan for that service (if it exists)?
 * @member {Boolean} canSelectTrialPlan
 */
ServiceBillingPlans.prototype['canSelectTrialPlan'] = undefined;

/**
 * @member {module:model/BillingAggregatedInformationGetByApp200ResponseBillingPlansBuildServiceCurrentBillingPeriod} currentBillingPeriod
 */
ServiceBillingPlans.prototype['currentBillingPeriod'] = undefined;

/**
 * Expiration time of the last selected trial plan. Will be null if trial plan was not used.
 * @member {String} lastTrialPlanExpirationTime
 */
ServiceBillingPlans.prototype['lastTrialPlanExpirationTime'] = undefined;






export default ServiceBillingPlans;

