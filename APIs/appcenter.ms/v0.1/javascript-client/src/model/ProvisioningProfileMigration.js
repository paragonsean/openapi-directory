/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProvisioningProfileMigration model module.
 * @module model/ProvisioningProfileMigration
 * @version v0.1
 */
class ProvisioningProfileMigration {
    /**
     * Constructs a new <code>ProvisioningProfileMigration</code>.
     * Describes the migration schema for a provisioning profile defined in HockeyApp.
     * @alias module:model/ProvisioningProfileMigration
     * @param bundleId {String} The bundle/application identifier.
     * @param isAppex {Boolean} A boolean value that indicates whether the provisioning profile represents an app extension.
     * @param name {String} The name of the provisioning profile.
     * @param teamIdentifier {String} The team identifier.
     * @param type {module:model/ProvisioningProfileMigration.TypeEnum} The type of provisoning profile.
     */
    constructor(bundleId, isAppex, name, teamIdentifier, type) { 
        
        ProvisioningProfileMigration.initialize(this, bundleId, isAppex, name, teamIdentifier, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bundleId, isAppex, name, teamIdentifier, type) { 
        obj['bundle_id'] = bundleId;
        obj['is_appex'] = isAppex;
        obj['name'] = name;
        obj['team_identifier'] = teamIdentifier;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>ProvisioningProfileMigration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvisioningProfileMigration} obj Optional instance to populate.
     * @return {module:model/ProvisioningProfileMigration} The populated <code>ProvisioningProfileMigration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvisioningProfileMigration();

            if (data.hasOwnProperty('bundle_id')) {
                obj['bundle_id'] = ApiClient.convertToType(data['bundle_id'], 'String');
            }
            if (data.hasOwnProperty('expired_at')) {
                obj['expired_at'] = ApiClient.convertToType(data['expired_at'], 'String');
            }
            if (data.hasOwnProperty('is_appex')) {
                obj['is_appex'] = ApiClient.convertToType(data['is_appex'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('team_identifier')) {
                obj['team_identifier'] = ApiClient.convertToType(data['team_identifier'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
            if (data.hasOwnProperty('udids')) {
                obj['udids'] = ApiClient.convertToType(data['udids'], ['String']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvisioningProfileMigration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvisioningProfileMigration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProvisioningProfileMigration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['bundle_id'] && !(typeof data['bundle_id'] === 'string' || data['bundle_id'] instanceof String)) {
            throw new Error("Expected the field `bundle_id` to be a primitive type in the JSON string but got " + data['bundle_id']);
        }
        // ensure the json data is a string
        if (data['expired_at'] && !(typeof data['expired_at'] === 'string' || data['expired_at'] instanceof String)) {
            throw new Error("Expected the field `expired_at` to be a primitive type in the JSON string but got " + data['expired_at']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['team_identifier'] && !(typeof data['team_identifier'] === 'string' || data['team_identifier'] instanceof String)) {
            throw new Error("Expected the field `team_identifier` to be a primitive type in the JSON string but got " + data['team_identifier']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['udids'])) {
            throw new Error("Expected the field `udids` to be an array in the JSON data but got " + data['udids']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

ProvisioningProfileMigration.RequiredProperties = ["bundle_id", "is_appex", "name", "team_identifier", "type"];

/**
 * The bundle/application identifier.
 * @member {String} bundle_id
 */
ProvisioningProfileMigration.prototype['bundle_id'] = undefined;

/**
 * The provisioning profile's expiration date in RFC 3339 format, i.e. 2017-07-21T17:32:28Z.
 * @member {String} expired_at
 */
ProvisioningProfileMigration.prototype['expired_at'] = undefined;

/**
 * A boolean value that indicates whether the provisioning profile represents an app extension.
 * @member {Boolean} is_appex
 */
ProvisioningProfileMigration.prototype['is_appex'] = undefined;

/**
 * The name of the provisioning profile.
 * @member {String} name
 */
ProvisioningProfileMigration.prototype['name'] = undefined;

/**
 * The team identifier.
 * @member {String} team_identifier
 */
ProvisioningProfileMigration.prototype['team_identifier'] = undefined;

/**
 * The type of provisoning profile.
 * @member {module:model/ProvisioningProfileMigration.TypeEnum} type
 */
ProvisioningProfileMigration.prototype['type'] = undefined;

/**
 * A list of UDIDs of provisioned devices.
 * @member {Array.<String>} udids
 */
ProvisioningProfileMigration.prototype['udids'] = undefined;

/**
 * A provisioning profile URL that indicates where to download it from.
 * @member {String} url
 */
ProvisioningProfileMigration.prototype['url'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {Number}
 * @readonly
 */
ProvisioningProfileMigration['TypeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};



export default ProvisioningProfileMigration;

