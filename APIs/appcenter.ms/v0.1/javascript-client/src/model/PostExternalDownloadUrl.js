/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostExternalDownloadUrl model module.
 * @module model/PostExternalDownloadUrl
 * @version v0.1
 */
class PostExternalDownloadUrl {
    /**
     * Constructs a new <code>PostExternalDownloadUrl</code>.
     * Set the download URL of an external build
     * @alias module:model/PostExternalDownloadUrl
     */
    constructor() { 
        
        PostExternalDownloadUrl.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostExternalDownloadUrl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostExternalDownloadUrl} obj Optional instance to populate.
     * @return {module:model/PostExternalDownloadUrl} The populated <code>PostExternalDownloadUrl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostExternalDownloadUrl();

            if (data.hasOwnProperty('download_url')) {
                obj['download_url'] = ApiClient.convertToType(data['download_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostExternalDownloadUrl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostExternalDownloadUrl</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['download_url'] && !(typeof data['download_url'] === 'string' || data['download_url'] instanceof String)) {
            throw new Error("Expected the field `download_url` to be a primitive type in the JSON string but got " + data['download_url']);
        }

        return true;
    }


}



/**
 * The new download URL
 * @member {String} download_url
 */
PostExternalDownloadUrl.prototype['download_url'] = undefined;






export default PostExternalDownloadUrl;

