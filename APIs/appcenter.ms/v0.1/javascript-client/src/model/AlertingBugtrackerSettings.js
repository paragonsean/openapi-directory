/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AlertingBugtrackerSettings model module.
 * @module model/AlertingBugtrackerSettings
 * @version v0.1
 */
class AlertingBugtrackerSettings {
    /**
     * Constructs a new <code>AlertingBugtrackerSettings</code>.
     * Bugtracker specific settings
     * @alias module:model/AlertingBugtrackerSettings
     * @param ownerName {String} 
     * @param type {module:model/AlertingBugtrackerSettings.TypeEnum} type of bugtracker
     */
    constructor(ownerName, type) { 
        
        AlertingBugtrackerSettings.initialize(this, ownerName, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ownerName, type) { 
        obj['owner_name'] = ownerName;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AlertingBugtrackerSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlertingBugtrackerSettings} obj Optional instance to populate.
     * @return {module:model/AlertingBugtrackerSettings} The populated <code>AlertingBugtrackerSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlertingBugtrackerSettings();

            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
            if (data.hasOwnProperty('owner_name')) {
                obj['owner_name'] = ApiClient.convertToType(data['owner_name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlertingBugtrackerSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlertingBugtrackerSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AlertingBugtrackerSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
            throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
        }
        // ensure the json data is a string
        if (data['owner_name'] && !(typeof data['owner_name'] === 'string' || data['owner_name'] instanceof String)) {
            throw new Error("Expected the field `owner_name` to be a primitive type in the JSON string but got " + data['owner_name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

AlertingBugtrackerSettings.RequiredProperties = ["owner_name", "type"];

/**
 * @member {String} callback_url
 */
AlertingBugtrackerSettings.prototype['callback_url'] = undefined;

/**
 * @member {String} owner_name
 */
AlertingBugtrackerSettings.prototype['owner_name'] = undefined;

/**
 * type of bugtracker
 * @member {module:model/AlertingBugtrackerSettings.TypeEnum} type
 */
AlertingBugtrackerSettings.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AlertingBugtrackerSettings['TypeEnum'] = {

    /**
     * value: "github"
     * @const
     */
    "github": "github",

    /**
     * value: "vsts"
     * @const
     */
    "vsts": "vsts",

    /**
     * value: "jira"
     * @const
     */
    "jira": "jira"
};



export default AlertingBugtrackerSettings;

