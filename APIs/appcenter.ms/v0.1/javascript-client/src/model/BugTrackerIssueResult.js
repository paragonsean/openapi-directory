/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BugTrackerIssueResult model module.
 * @module model/BugTrackerIssueResult
 * @version v0.1
 */
class BugTrackerIssueResult {
    /**
     * Constructs a new <code>BugTrackerIssueResult</code>.
     * Object returned in response to getting a bug tracker issue related to a crash group id
     * @alias module:model/BugTrackerIssueResult
     */
    constructor() { 
        
        BugTrackerIssueResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BugTrackerIssueResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BugTrackerIssueResult} obj Optional instance to populate.
     * @return {module:model/BugTrackerIssueResult} The populated <code>BugTrackerIssueResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BugTrackerIssueResult();

            if (data.hasOwnProperty('bug_tracker_type')) {
                obj['bug_tracker_type'] = ApiClient.convertToType(data['bug_tracker_type'], 'String');
            }
            if (data.hasOwnProperty('event_type')) {
                obj['event_type'] = ApiClient.convertToType(data['event_type'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('mobile_center_id')) {
                obj['mobile_center_id'] = ApiClient.convertToType(data['mobile_center_id'], 'String');
            }
            if (data.hasOwnProperty('repo_name')) {
                obj['repo_name'] = ApiClient.convertToType(data['repo_name'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BugTrackerIssueResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BugTrackerIssueResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bug_tracker_type'] && !(typeof data['bug_tracker_type'] === 'string' || data['bug_tracker_type'] instanceof String)) {
            throw new Error("Expected the field `bug_tracker_type` to be a primitive type in the JSON string but got " + data['bug_tracker_type']);
        }
        // ensure the json data is a string
        if (data['event_type'] && !(typeof data['event_type'] === 'string' || data['event_type'] instanceof String)) {
            throw new Error("Expected the field `event_type` to be a primitive type in the JSON string but got " + data['event_type']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['mobile_center_id'] && !(typeof data['mobile_center_id'] === 'string' || data['mobile_center_id'] instanceof String)) {
            throw new Error("Expected the field `mobile_center_id` to be a primitive type in the JSON string but got " + data['mobile_center_id']);
        }
        // ensure the json data is a string
        if (data['repo_name'] && !(typeof data['repo_name'] === 'string' || data['repo_name'] instanceof String)) {
            throw new Error("Expected the field `repo_name` to be a primitive type in the JSON string but got " + data['repo_name']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {module:model/BugTrackerIssueResult.BugTrackerTypeEnum} bug_tracker_type
 */
BugTrackerIssueResult.prototype['bug_tracker_type'] = undefined;

/**
 * @member {String} event_type
 */
BugTrackerIssueResult.prototype['event_type'] = undefined;

/**
 * @member {String} id
 */
BugTrackerIssueResult.prototype['id'] = undefined;

/**
 * @member {String} mobile_center_id
 */
BugTrackerIssueResult.prototype['mobile_center_id'] = undefined;

/**
 * @member {String} repo_name
 */
BugTrackerIssueResult.prototype['repo_name'] = undefined;

/**
 * @member {String} title
 */
BugTrackerIssueResult.prototype['title'] = undefined;

/**
 * @member {String} url
 */
BugTrackerIssueResult.prototype['url'] = undefined;





/**
 * Allowed values for the <code>bug_tracker_type</code> property.
 * @enum {String}
 * @readonly
 */
BugTrackerIssueResult['BugTrackerTypeEnum'] = {

    /**
     * value: "github"
     * @const
     */
    "github": "github",

    /**
     * value: "vsts"
     * @const
     */
    "vsts": "vsts",

    /**
     * value: "jira"
     * @const
     */
    "jira": "jira"
};



export default BugTrackerIssueResult;

