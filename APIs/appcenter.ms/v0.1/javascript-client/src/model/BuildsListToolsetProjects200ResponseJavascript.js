/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildsListToolsetProjects200ResponseJavascriptJavascriptSolutionsInner from './BuildsListToolsetProjects200ResponseJavascriptJavascriptSolutionsInner';

/**
 * The BuildsListToolsetProjects200ResponseJavascript model module.
 * @module model/BuildsListToolsetProjects200ResponseJavascript
 * @version v0.1
 */
class BuildsListToolsetProjects200ResponseJavascript {
    /**
     * Constructs a new <code>BuildsListToolsetProjects200ResponseJavascript</code>.
     * @alias module:model/BuildsListToolsetProjects200ResponseJavascript
     * @param packageJsonPaths {Array.<String>} Paths for detected package.json files
     */
    constructor(packageJsonPaths) { 
        
        BuildsListToolsetProjects200ResponseJavascript.initialize(this, packageJsonPaths);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, packageJsonPaths) { 
        obj['packageJsonPaths'] = packageJsonPaths;
    }

    /**
     * Constructs a <code>BuildsListToolsetProjects200ResponseJavascript</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildsListToolsetProjects200ResponseJavascript} obj Optional instance to populate.
     * @return {module:model/BuildsListToolsetProjects200ResponseJavascript} The populated <code>BuildsListToolsetProjects200ResponseJavascript</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildsListToolsetProjects200ResponseJavascript();

            if (data.hasOwnProperty('javascriptSolutions')) {
                obj['javascriptSolutions'] = ApiClient.convertToType(data['javascriptSolutions'], [BuildsListToolsetProjects200ResponseJavascriptJavascriptSolutionsInner]);
            }
            if (data.hasOwnProperty('packageJsonPaths')) {
                obj['packageJsonPaths'] = ApiClient.convertToType(data['packageJsonPaths'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildsListToolsetProjects200ResponseJavascript</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildsListToolsetProjects200ResponseJavascript</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BuildsListToolsetProjects200ResponseJavascript.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['javascriptSolutions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['javascriptSolutions'])) {
                throw new Error("Expected the field `javascriptSolutions` to be an array in the JSON data but got " + data['javascriptSolutions']);
            }
            // validate the optional field `javascriptSolutions` (array)
            for (const item of data['javascriptSolutions']) {
                BuildsListToolsetProjects200ResponseJavascriptJavascriptSolutionsInner.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['packageJsonPaths'])) {
            throw new Error("Expected the field `packageJsonPaths` to be an array in the JSON data but got " + data['packageJsonPaths']);
        }

        return true;
    }


}

BuildsListToolsetProjects200ResponseJavascript.RequiredProperties = ["packageJsonPaths"];

/**
 * The React Native solutions detected
 * @member {Array.<module:model/BuildsListToolsetProjects200ResponseJavascriptJavascriptSolutionsInner>} javascriptSolutions
 */
BuildsListToolsetProjects200ResponseJavascript.prototype['javascriptSolutions'] = undefined;

/**
 * Paths for detected package.json files
 * @member {Array.<String>} packageJsonPaths
 */
BuildsListToolsetProjects200ResponseJavascript.prototype['packageJsonPaths'] = undefined;






export default BuildsListToolsetProjects200ResponseJavascript;

