/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LegacyCodePushReleaseResponsePackage from './LegacyCodePushReleaseResponsePackage';

/**
 * The LegacyDeploymentHistory model module.
 * @module model/LegacyDeploymentHistory
 * @version v0.1
 */
class LegacyDeploymentHistory {
    /**
     * Constructs a new <code>LegacyDeploymentHistory</code>.
     * Information about a specific release.
     * @alias module:model/LegacyDeploymentHistory
     */
    constructor() { 
        
        LegacyDeploymentHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LegacyDeploymentHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LegacyDeploymentHistory} obj Optional instance to populate.
     * @return {module:model/LegacyDeploymentHistory} The populated <code>LegacyDeploymentHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LegacyDeploymentHistory();

            if (data.hasOwnProperty('allOf')) {
                obj['allOf'] = LegacyCodePushReleaseResponsePackage.constructFromObject(data['allOf']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('originalDeployment')) {
                obj['originalDeployment'] = ApiClient.convertToType(data['originalDeployment'], 'String');
            }
            if (data.hasOwnProperty('originalLabel')) {
                obj['originalLabel'] = ApiClient.convertToType(data['originalLabel'], 'String');
            }
            if (data.hasOwnProperty('packageHash')) {
                obj['packageHash'] = ApiClient.convertToType(data['packageHash'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LegacyDeploymentHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LegacyDeploymentHistory</code>.
     */
    static validateJSON(data) {
        // validate the optional field `allOf`
        if (data['allOf']) { // data not null
          LegacyCodePushReleaseResponsePackage.validateJSON(data['allOf']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['originalDeployment'] && !(typeof data['originalDeployment'] === 'string' || data['originalDeployment'] instanceof String)) {
            throw new Error("Expected the field `originalDeployment` to be a primitive type in the JSON string but got " + data['originalDeployment']);
        }
        // ensure the json data is a string
        if (data['originalLabel'] && !(typeof data['originalLabel'] === 'string' || data['originalLabel'] instanceof String)) {
            throw new Error("Expected the field `originalLabel` to be a primitive type in the JSON string but got " + data['originalLabel']);
        }
        // ensure the json data is a string
        if (data['packageHash'] && !(typeof data['packageHash'] === 'string' || data['packageHash'] instanceof String)) {
            throw new Error("Expected the field `packageHash` to be a primitive type in the JSON string but got " + data['packageHash']);
        }

        return true;
    }


}



/**
 * @member {module:model/LegacyCodePushReleaseResponsePackage} allOf
 */
LegacyDeploymentHistory.prototype['allOf'] = undefined;

/**
 * The description of the release.
 * @member {String} description
 */
LegacyDeploymentHistory.prototype['description'] = undefined;

/**
 * The original deployment of the release, if it's ever been promoted.
 * @member {String} originalDeployment
 */
LegacyDeploymentHistory.prototype['originalDeployment'] = undefined;

/**
 * The original label of the release, if it's ever been updated.
 * @member {String} originalLabel
 */
LegacyDeploymentHistory.prototype['originalLabel'] = undefined;

/**
 * The package's hash value (internal use).
 * @member {String} packageHash
 */
LegacyDeploymentHistory.prototype['packageHash'] = undefined;






export default LegacyDeploymentHistory;

