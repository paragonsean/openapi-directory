/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillingAggregatedInformationGetByApp200ResponseBillingPlans from './BillingAggregatedInformationGetByApp200ResponseBillingPlans';
import BillingAggregatedInformationGetByApp200ResponseUsage from './BillingAggregatedInformationGetByApp200ResponseUsage';

/**
 * The BillingAggregatedInformationGetByApp200Response model module.
 * @module model/BillingAggregatedInformationGetByApp200Response
 * @version v0.1
 */
class BillingAggregatedInformationGetByApp200Response {
    /**
     * Constructs a new <code>BillingAggregatedInformationGetByApp200Response</code>.
     * Aggregated Billing Information for a user or an organization
     * @alias module:model/BillingAggregatedInformationGetByApp200Response
     */
    constructor() { 
        
        BillingAggregatedInformationGetByApp200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingAggregatedInformationGetByApp200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingAggregatedInformationGetByApp200Response} obj Optional instance to populate.
     * @return {module:model/BillingAggregatedInformationGetByApp200Response} The populated <code>BillingAggregatedInformationGetByApp200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingAggregatedInformationGetByApp200Response();

            if (data.hasOwnProperty('azureSubscriptionId')) {
                obj['azureSubscriptionId'] = ApiClient.convertToType(data['azureSubscriptionId'], 'String');
            }
            if (data.hasOwnProperty('azureSubscriptionState')) {
                obj['azureSubscriptionState'] = ApiClient.convertToType(data['azureSubscriptionState'], 'String');
            }
            if (data.hasOwnProperty('billingPlans')) {
                obj['billingPlans'] = BillingAggregatedInformationGetByApp200ResponseBillingPlans.constructFromObject(data['billingPlans']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
            if (data.hasOwnProperty('usage')) {
                obj['usage'] = BillingAggregatedInformationGetByApp200ResponseUsage.constructFromObject(data['usage']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingAggregatedInformationGetByApp200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingAggregatedInformationGetByApp200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['azureSubscriptionId'] && !(typeof data['azureSubscriptionId'] === 'string' || data['azureSubscriptionId'] instanceof String)) {
            throw new Error("Expected the field `azureSubscriptionId` to be a primitive type in the JSON string but got " + data['azureSubscriptionId']);
        }
        // ensure the json data is a string
        if (data['azureSubscriptionState'] && !(typeof data['azureSubscriptionState'] === 'string' || data['azureSubscriptionState'] instanceof String)) {
            throw new Error("Expected the field `azureSubscriptionState` to be a primitive type in the JSON string but got " + data['azureSubscriptionState']);
        }
        // validate the optional field `billingPlans`
        if (data['billingPlans']) { // data not null
          BillingAggregatedInformationGetByApp200ResponseBillingPlans.validateJSON(data['billingPlans']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['timestamp'] && !(typeof data['timestamp'] === 'string' || data['timestamp'] instanceof String)) {
            throw new Error("Expected the field `timestamp` to be a primitive type in the JSON string but got " + data['timestamp']);
        }
        // validate the optional field `usage`
        if (data['usage']) { // data not null
          BillingAggregatedInformationGetByApp200ResponseUsage.validateJSON(data['usage']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Unique identifier for the Azure subscription used for billing
 * @member {String} azureSubscriptionId
 */
BillingAggregatedInformationGetByApp200Response.prototype['azureSubscriptionId'] = undefined;

/**
 * State of the Azure subscription used for billing
 * @member {module:model/BillingAggregatedInformationGetByApp200Response.AzureSubscriptionStateEnum} azureSubscriptionState
 */
BillingAggregatedInformationGetByApp200Response.prototype['azureSubscriptionState'] = undefined;

/**
 * @member {module:model/BillingAggregatedInformationGetByApp200ResponseBillingPlans} billingPlans
 */
BillingAggregatedInformationGetByApp200Response.prototype['billingPlans'] = undefined;

/**
 * ID of the user or organization
 * @member {String} id
 */
BillingAggregatedInformationGetByApp200Response.prototype['id'] = undefined;

/**
 * The ISO 8601 datetime of last modification
 * @member {String} timestamp
 */
BillingAggregatedInformationGetByApp200Response.prototype['timestamp'] = undefined;

/**
 * @member {module:model/BillingAggregatedInformationGetByApp200ResponseUsage} usage
 */
BillingAggregatedInformationGetByApp200Response.prototype['usage'] = undefined;

/**
 * Version of the Billing Information schema
 * @member {String} version
 */
BillingAggregatedInformationGetByApp200Response.prototype['version'] = undefined;





/**
 * Allowed values for the <code>azureSubscriptionState</code> property.
 * @enum {String}
 * @readonly
 */
BillingAggregatedInformationGetByApp200Response['AzureSubscriptionStateEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "NotSet"
     * @const
     */
    "NotSet": "NotSet"
};



export default BillingAggregatedInformationGetByApp200Response;

