/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppInvitationsList200ResponseInvitedBy from './AppInvitationsList200ResponseInvitedBy';
import OrganizationsListAdministered200ResponseOrganizations from './OrganizationsListAdministered200ResponseOrganizations';

/**
 * The OrganizationInvitationDetailResponse model module.
 * @module model/OrganizationInvitationDetailResponse
 * @version v0.1
 */
class OrganizationInvitationDetailResponse {
    /**
     * Constructs a new <code>OrganizationInvitationDetailResponse</code>.
     * @alias module:model/OrganizationInvitationDetailResponse
     * @param email {String} The email address of the invited user
     * @param id {String} The unique ID (UUID) of the invitation
     * @param invitedBy {module:model/AppInvitationsList200ResponseInvitedBy} 
     * @param isExistingUser {Boolean} Indicates whether the invited user already exists
     * @param organization {module:model/OrganizationsListAdministered200ResponseOrganizations} 
     */
    constructor(email, id, invitedBy, isExistingUser, organization) { 
        
        OrganizationInvitationDetailResponse.initialize(this, email, id, invitedBy, isExistingUser, organization);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, id, invitedBy, isExistingUser, organization) { 
        obj['email'] = email;
        obj['id'] = id;
        obj['invited_by'] = invitedBy;
        obj['is_existing_user'] = isExistingUser;
        obj['organization'] = organization;
    }

    /**
     * Constructs a <code>OrganizationInvitationDetailResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationInvitationDetailResponse} obj Optional instance to populate.
     * @return {module:model/OrganizationInvitationDetailResponse} The populated <code>OrganizationInvitationDetailResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationInvitationDetailResponse();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('invited_by')) {
                obj['invited_by'] = AppInvitationsList200ResponseInvitedBy.constructFromObject(data['invited_by']);
            }
            if (data.hasOwnProperty('is_existing_user')) {
                obj['is_existing_user'] = ApiClient.convertToType(data['is_existing_user'], 'Boolean');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = OrganizationsListAdministered200ResponseOrganizations.constructFromObject(data['organization']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationInvitationDetailResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationInvitationDetailResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrganizationInvitationDetailResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `invited_by`
        if (data['invited_by']) { // data not null
          AppInvitationsList200ResponseInvitedBy.validateJSON(data['invited_by']);
        }
        // validate the optional field `organization`
        if (data['organization']) { // data not null
          OrganizationsListAdministered200ResponseOrganizations.validateJSON(data['organization']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }

        return true;
    }


}

OrganizationInvitationDetailResponse.RequiredProperties = ["email", "id", "invited_by", "is_existing_user", "organization"];

/**
 * The email address of the invited user
 * @member {String} email
 */
OrganizationInvitationDetailResponse.prototype['email'] = undefined;

/**
 * The unique ID (UUID) of the invitation
 * @member {String} id
 */
OrganizationInvitationDetailResponse.prototype['id'] = undefined;

/**
 * @member {module:model/AppInvitationsList200ResponseInvitedBy} invited_by
 */
OrganizationInvitationDetailResponse.prototype['invited_by'] = undefined;

/**
 * Indicates whether the invited user already exists
 * @member {Boolean} is_existing_user
 */
OrganizationInvitationDetailResponse.prototype['is_existing_user'] = undefined;

/**
 * @member {module:model/OrganizationsListAdministered200ResponseOrganizations} organization
 */
OrganizationInvitationDetailResponse.prototype['organization'] = undefined;

/**
 * The role assigned to the invited user
 * @member {String} role
 */
OrganizationInvitationDetailResponse.prototype['role'] = undefined;






export default OrganizationInvitationDetailResponse;

