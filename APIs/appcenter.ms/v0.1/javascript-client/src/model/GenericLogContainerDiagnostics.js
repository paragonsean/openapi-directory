/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorsListSessionLogs200ResponseLogsInner from './ErrorsListSessionLogs200ResponseLogsInner';

/**
 * The GenericLogContainerDiagnostics model module.
 * @module model/GenericLogContainerDiagnostics
 * @version v0.1
 */
class GenericLogContainerDiagnostics {
    /**
     * Constructs a new <code>GenericLogContainerDiagnostics</code>.
     * @alias module:model/GenericLogContainerDiagnostics
     * @param logs {Array.<module:model/ErrorsListSessionLogs200ResponseLogsInner>} the list of logs
     */
    constructor(logs) { 
        
        GenericLogContainerDiagnostics.initialize(this, logs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, logs) { 
        obj['logs'] = logs;
    }

    /**
     * Constructs a <code>GenericLogContainerDiagnostics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenericLogContainerDiagnostics} obj Optional instance to populate.
     * @return {module:model/GenericLogContainerDiagnostics} The populated <code>GenericLogContainerDiagnostics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenericLogContainerDiagnostics();

            if (data.hasOwnProperty('exceeded_max_limit')) {
                obj['exceeded_max_limit'] = ApiClient.convertToType(data['exceeded_max_limit'], 'Boolean');
            }
            if (data.hasOwnProperty('last_received_log_timestamp')) {
                obj['last_received_log_timestamp'] = ApiClient.convertToType(data['last_received_log_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('logs')) {
                obj['logs'] = ApiClient.convertToType(data['logs'], [ErrorsListSessionLogs200ResponseLogsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenericLogContainerDiagnostics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenericLogContainerDiagnostics</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GenericLogContainerDiagnostics.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['logs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['logs'])) {
                throw new Error("Expected the field `logs` to be an array in the JSON data but got " + data['logs']);
            }
            // validate the optional field `logs` (array)
            for (const item of data['logs']) {
                ErrorsListSessionLogs200ResponseLogsInner.validateJSON(item);
            };
        }

        return true;
    }


}

GenericLogContainerDiagnostics.RequiredProperties = ["logs"];

/**
 * indicates if the number of available logs are more than the max allowed return limit(100).
 * @member {Boolean} exceeded_max_limit
 */
GenericLogContainerDiagnostics.prototype['exceeded_max_limit'] = undefined;

/**
 * the timestamp of the last log received. This value can be used as the start time parameter in the consecutive API call.
 * @member {Date} last_received_log_timestamp
 */
GenericLogContainerDiagnostics.prototype['last_received_log_timestamp'] = undefined;

/**
 * the list of logs
 * @member {Array.<module:model/ErrorsListSessionLogs200ResponseLogsInner>} logs
 */
GenericLogContainerDiagnostics.prototype['logs'] = undefined;






export default GenericLogContainerDiagnostics;

