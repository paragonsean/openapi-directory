/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReleasesGetLatestByDistributionGroup200ResponseBuild from './ReleasesGetLatestByDistributionGroup200ResponseBuild';
import ReleasesUpdateRequestDestinationsInner from './ReleasesUpdateRequestDestinationsInner';
import ReleasesUpdateRequestMetadata from './ReleasesUpdateRequestMetadata';

/**
 * The ReleasesUpdateRequest model module.
 * @module model/ReleasesUpdateRequest
 * @version v0.1
 */
class ReleasesUpdateRequest {
    /**
     * Constructs a new <code>ReleasesUpdateRequest</code>.
     * A request containing information for updating a release.
     * @alias module:model/ReleasesUpdateRequest
     */
    constructor() { 
        
        ReleasesUpdateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['notify_testers'] = true;
    }

    /**
     * Constructs a <code>ReleasesUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReleasesUpdateRequest} obj Optional instance to populate.
     * @return {module:model/ReleasesUpdateRequest} The populated <code>ReleasesUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReleasesUpdateRequest();

            if (data.hasOwnProperty('build')) {
                obj['build'] = ReleasesGetLatestByDistributionGroup200ResponseBuild.constructFromObject(data['build']);
            }
            if (data.hasOwnProperty('destination_id')) {
                obj['destination_id'] = ApiClient.convertToType(data['destination_id'], 'String');
            }
            if (data.hasOwnProperty('destination_name')) {
                obj['destination_name'] = ApiClient.convertToType(data['destination_name'], 'String');
            }
            if (data.hasOwnProperty('destination_type')) {
                obj['destination_type'] = ApiClient.convertToType(data['destination_type'], 'String');
            }
            if (data.hasOwnProperty('destinations')) {
                obj['destinations'] = ApiClient.convertToType(data['destinations'], [ReleasesUpdateRequestDestinationsInner]);
            }
            if (data.hasOwnProperty('distribution_group_id')) {
                obj['distribution_group_id'] = ApiClient.convertToType(data['distribution_group_id'], 'String');
            }
            if (data.hasOwnProperty('distribution_group_name')) {
                obj['distribution_group_name'] = ApiClient.convertToType(data['distribution_group_name'], 'String');
            }
            if (data.hasOwnProperty('mandatory_update')) {
                obj['mandatory_update'] = ApiClient.convertToType(data['mandatory_update'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ReleasesUpdateRequestMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('notify_testers')) {
                obj['notify_testers'] = ApiClient.convertToType(data['notify_testers'], 'Boolean');
            }
            if (data.hasOwnProperty('release_notes')) {
                obj['release_notes'] = ApiClient.convertToType(data['release_notes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReleasesUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReleasesUpdateRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `build`
        if (data['build']) { // data not null
          ReleasesGetLatestByDistributionGroup200ResponseBuild.validateJSON(data['build']);
        }
        // ensure the json data is a string
        if (data['destination_id'] && !(typeof data['destination_id'] === 'string' || data['destination_id'] instanceof String)) {
            throw new Error("Expected the field `destination_id` to be a primitive type in the JSON string but got " + data['destination_id']);
        }
        // ensure the json data is a string
        if (data['destination_name'] && !(typeof data['destination_name'] === 'string' || data['destination_name'] instanceof String)) {
            throw new Error("Expected the field `destination_name` to be a primitive type in the JSON string but got " + data['destination_name']);
        }
        // ensure the json data is a string
        if (data['destination_type'] && !(typeof data['destination_type'] === 'string' || data['destination_type'] instanceof String)) {
            throw new Error("Expected the field `destination_type` to be a primitive type in the JSON string but got " + data['destination_type']);
        }
        if (data['destinations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinations'])) {
                throw new Error("Expected the field `destinations` to be an array in the JSON data but got " + data['destinations']);
            }
            // validate the optional field `destinations` (array)
            for (const item of data['destinations']) {
                ReleasesUpdateRequestDestinationsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['distribution_group_id'] && !(typeof data['distribution_group_id'] === 'string' || data['distribution_group_id'] instanceof String)) {
            throw new Error("Expected the field `distribution_group_id` to be a primitive type in the JSON string but got " + data['distribution_group_id']);
        }
        // ensure the json data is a string
        if (data['distribution_group_name'] && !(typeof data['distribution_group_name'] === 'string' || data['distribution_group_name'] instanceof String)) {
            throw new Error("Expected the field `distribution_group_name` to be a primitive type in the JSON string but got " + data['distribution_group_name']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          ReleasesUpdateRequestMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['release_notes'] && !(typeof data['release_notes'] === 'string' || data['release_notes'] instanceof String)) {
            throw new Error("Expected the field `release_notes` to be a primitive type in the JSON string but got " + data['release_notes']);
        }

        return true;
    }


}



/**
 * @member {module:model/ReleasesGetLatestByDistributionGroup200ResponseBuild} build
 */
ReleasesUpdateRequest.prototype['build'] = undefined;

/**
 * OBSOLETE. Will be removed in future releases - use destinations instead. Id of a destination. The release will be associated with this destination. If the destination doesn't exist a 400 is returned. If both destination name and id are passed, the id is taking precedence.
 * @member {String} destination_id
 */
ReleasesUpdateRequest.prototype['destination_id'] = undefined;

/**
 * OBSOLETE. Will be removed in future releases - use destinations instead. Name of a destination. The release will be associated with this destination. If the destination doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
 * @member {String} destination_name
 */
ReleasesUpdateRequest.prototype['destination_name'] = undefined;

/**
 * Not used anymore.
 * @member {String} destination_type
 */
ReleasesUpdateRequest.prototype['destination_type'] = undefined;

/**
 * Distribute this release under the following list of destinations (store groups or distribution groups).
 * @member {Array.<module:model/ReleasesUpdateRequestDestinationsInner>} destinations
 */
ReleasesUpdateRequest.prototype['destinations'] = undefined;

/**
 * OBSOLETE. Will be removed in future releases - use destinations instead. Id of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
 * @member {String} distribution_group_id
 */
ReleasesUpdateRequest.prototype['distribution_group_id'] = undefined;

/**
 * OBSOLETE. Will be removed in future releases - use destinations instead. Name of a distribution group. The release will be associated with this distribution group. If the distribution group doesn't exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
 * @member {String} distribution_group_name
 */
ReleasesUpdateRequest.prototype['distribution_group_name'] = undefined;

/**
 * A boolean which determines whether this version should be a mandatory update or not.
 * @member {Boolean} mandatory_update
 */
ReleasesUpdateRequest.prototype['mandatory_update'] = undefined;

/**
 * @member {module:model/ReleasesUpdateRequestMetadata} metadata
 */
ReleasesUpdateRequest.prototype['metadata'] = undefined;

/**
 * A boolean which determines whether to notify testers of a new release, default to true.
 * @member {Boolean} notify_testers
 * @default true
 */
ReleasesUpdateRequest.prototype['notify_testers'] = true;

/**
 * Release notes for this release.
 * @member {String} release_notes
 */
ReleasesUpdateRequest.prototype['release_notes'] = undefined;






export default ReleasesUpdateRequest;

