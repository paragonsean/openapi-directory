/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiTokensGetResponse model module.
 * @module model/ApiTokensGetResponse
 * @version v0.1
 */
class ApiTokensGetResponse {
    /**
     * Constructs a new <code>ApiTokensGetResponse</code>.
     * @alias module:model/ApiTokensGetResponse
     * @param createdAt {String} The creation time
     * @param id {String} The unique id (UUID) of the api token
     */
    constructor(createdAt, id) { 
        
        ApiTokensGetResponse.initialize(this, createdAt, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, id) { 
        obj['created_at'] = createdAt;
        obj['id'] = id;
    }

    /**
     * Constructs a <code>ApiTokensGetResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiTokensGetResponse} obj Optional instance to populate.
     * @return {module:model/ApiTokensGetResponse} The populated <code>ApiTokensGetResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiTokensGetResponse();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiTokensGetResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiTokensGetResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiTokensGetResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scope'])) {
            throw new Error("Expected the field `scope` to be an array in the JSON data but got " + data['scope']);
        }

        return true;
    }


}

ApiTokensGetResponse.RequiredProperties = ["created_at", "id"];

/**
 * The creation time
 * @member {String} created_at
 */
ApiTokensGetResponse.prototype['created_at'] = undefined;

/**
 * The description of the token
 * @member {String} description
 */
ApiTokensGetResponse.prototype['description'] = undefined;

/**
 * The unique id (UUID) of the api token
 * @member {String} id
 */
ApiTokensGetResponse.prototype['id'] = undefined;

/**
 * The scope for this token.
 * @member {Array.<module:model/ApiTokensGetResponse.ScopeEnum>} scope
 */
ApiTokensGetResponse.prototype['scope'] = undefined;





/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
ApiTokensGetResponse['ScopeEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "viewer"
     * @const
     */
    "viewer": "viewer"
};



export default ApiTokensGetResponse;

