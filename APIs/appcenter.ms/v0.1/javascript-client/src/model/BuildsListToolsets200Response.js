/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildsListToolsets200ResponseNodeInner from './BuildsListToolsets200ResponseNodeInner';
import BuildsListToolsets200ResponseXamarinInner from './BuildsListToolsets200ResponseXamarinInner';
import BuildsListToolsets200ResponseXcodeInner from './BuildsListToolsets200ResponseXcodeInner';

/**
 * The BuildsListToolsets200Response model module.
 * @module model/BuildsListToolsets200Response
 * @version v0.1
 */
class BuildsListToolsets200Response {
    /**
     * Constructs a new <code>BuildsListToolsets200Response</code>.
     * Set of toolsets available for app
     * @alias module:model/BuildsListToolsets200Response
     */
    constructor() { 
        
        BuildsListToolsets200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildsListToolsets200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildsListToolsets200Response} obj Optional instance to populate.
     * @return {module:model/BuildsListToolsets200Response} The populated <code>BuildsListToolsets200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildsListToolsets200Response();

            if (data.hasOwnProperty('node')) {
                obj['node'] = ApiClient.convertToType(data['node'], [BuildsListToolsets200ResponseNodeInner]);
            }
            if (data.hasOwnProperty('xamarin')) {
                obj['xamarin'] = ApiClient.convertToType(data['xamarin'], [BuildsListToolsets200ResponseXamarinInner]);
            }
            if (data.hasOwnProperty('xcode')) {
                obj['xcode'] = ApiClient.convertToType(data['xcode'], [BuildsListToolsets200ResponseXcodeInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildsListToolsets200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildsListToolsets200Response</code>.
     */
    static validateJSON(data) {
        if (data['node']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['node'])) {
                throw new Error("Expected the field `node` to be an array in the JSON data but got " + data['node']);
            }
            // validate the optional field `node` (array)
            for (const item of data['node']) {
                BuildsListToolsets200ResponseNodeInner.validateJSON(item);
            };
        }
        if (data['xamarin']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['xamarin'])) {
                throw new Error("Expected the field `xamarin` to be an array in the JSON data but got " + data['xamarin']);
            }
            // validate the optional field `xamarin` (array)
            for (const item of data['xamarin']) {
                BuildsListToolsets200ResponseXamarinInner.validateJSON(item);
            };
        }
        if (data['xcode']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['xcode'])) {
                throw new Error("Expected the field `xcode` to be an array in the JSON data but got " + data['xcode']);
            }
            // validate the optional field `xcode` (array)
            for (const item of data['xcode']) {
                BuildsListToolsets200ResponseXcodeInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list of Node versions
 * @member {Array.<module:model/BuildsListToolsets200ResponseNodeInner>} node
 */
BuildsListToolsets200Response.prototype['node'] = undefined;

/**
 * A list of Xamarin SDK bundles
 * @member {Array.<module:model/BuildsListToolsets200ResponseXamarinInner>} xamarin
 */
BuildsListToolsets200Response.prototype['xamarin'] = undefined;

/**
 * A list of Xcode versions
 * @member {Array.<module:model/BuildsListToolsets200ResponseXcodeInner>} xcode
 */
BuildsListToolsets200Response.prototype['xcode'] = undefined;






export default BuildsListToolsets200Response;

