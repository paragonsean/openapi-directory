/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserProfileResponseInternalAllOfSettings from './UserProfileResponseInternalAllOfSettings';

/**
 * The UserProfileResponseInternal model module.
 * @module model/UserProfileResponseInternal
 * @version v0.1
 */
class UserProfileResponseInternal {
    /**
     * Constructs a new <code>UserProfileResponseInternal</code>.
     * @alias module:model/UserProfileResponseInternal
     * @param displayName {String} The full name of the user. Might for example be first and last name
     * @param email {String} The email address of the user
     * @param id {String} The unique id (UUID) of the user
     * @param name {String} The unique name that is used to identify the user.
     * @param origin {module:model/UserProfileResponseInternal.OriginEnum} The creation origin of this user
     */
    constructor(displayName, email, id, name, origin) { 
        
        UserProfileResponseInternal.initialize(this, displayName, email, id, name, origin);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayName, email, id, name, origin) { 
        obj['display_name'] = displayName;
        obj['email'] = email;
        obj['id'] = id;
        obj['name'] = name;
        obj['origin'] = origin;
    }

    /**
     * Constructs a <code>UserProfileResponseInternal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserProfileResponseInternal} obj Optional instance to populate.
     * @return {module:model/UserProfileResponseInternal} The populated <code>UserProfileResponseInternal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserProfileResponseInternal();

            if (data.hasOwnProperty('avatar_url')) {
                obj['avatar_url'] = ApiClient.convertToType(data['avatar_url'], 'String');
            }
            if (data.hasOwnProperty('can_change_password')) {
                obj['can_change_password'] = ApiClient.convertToType(data['can_change_password'], 'Boolean');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
            }
            if (data.hasOwnProperty('admin_role')) {
                obj['admin_role'] = ApiClient.convertToType(data['admin_role'], 'String');
            }
            if (data.hasOwnProperty('feature_flags')) {
                obj['feature_flags'] = ApiClient.convertToType(data['feature_flags'], ['String']);
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = UserProfileResponseInternalAllOfSettings.constructFromObject(data['settings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserProfileResponseInternal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserProfileResponseInternal</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserProfileResponseInternal.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['avatar_url'] && !(typeof data['avatar_url'] === 'string' || data['avatar_url'] instanceof String)) {
            throw new Error("Expected the field `avatar_url` to be a primitive type in the JSON string but got " + data['avatar_url']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }
        // ensure the json data is a string
        if (data['admin_role'] && !(typeof data['admin_role'] === 'string' || data['admin_role'] instanceof String)) {
            throw new Error("Expected the field `admin_role` to be a primitive type in the JSON string but got " + data['admin_role']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['feature_flags'])) {
            throw new Error("Expected the field `feature_flags` to be an array in the JSON data but got " + data['feature_flags']);
        }
        // validate the optional field `settings`
        if (data['settings']) { // data not null
          UserProfileResponseInternalAllOfSettings.validateJSON(data['settings']);
        }

        return true;
    }


}

UserProfileResponseInternal.RequiredProperties = ["display_name", "email", "id", "name", "origin"];

/**
 * The avatar URL of the user
 * @member {String} avatar_url
 */
UserProfileResponseInternal.prototype['avatar_url'] = undefined;

/**
 * User is required to send an old password in order to change the password.
 * @member {Boolean} can_change_password
 */
UserProfileResponseInternal.prototype['can_change_password'] = undefined;

/**
 * The full name of the user. Might for example be first and last name
 * @member {String} display_name
 */
UserProfileResponseInternal.prototype['display_name'] = undefined;

/**
 * The email address of the user
 * @member {String} email
 */
UserProfileResponseInternal.prototype['email'] = undefined;

/**
 * The unique id (UUID) of the user
 * @member {String} id
 */
UserProfileResponseInternal.prototype['id'] = undefined;

/**
 * The unique name that is used to identify the user.
 * @member {String} name
 */
UserProfileResponseInternal.prototype['name'] = undefined;

/**
 * The creation origin of this user
 * @member {module:model/UserProfileResponseInternal.OriginEnum} origin
 */
UserProfileResponseInternal.prototype['origin'] = undefined;

/**
 * The permissions the user has for the app
 * @member {Array.<module:model/UserProfileResponseInternal.PermissionsEnum>} permissions
 */
UserProfileResponseInternal.prototype['permissions'] = undefined;

/**
 * The new admin_role
 * @member {module:model/UserProfileResponseInternal.AdminRoleEnum} admin_role
 */
UserProfileResponseInternal.prototype['admin_role'] = undefined;

/**
 * The feature flags that are enabled for this app
 * @member {Array.<String>} feature_flags
 */
UserProfileResponseInternal.prototype['feature_flags'] = undefined;

/**
 * @member {module:model/UserProfileResponseInternalAllOfSettings} settings
 */
UserProfileResponseInternal.prototype['settings'] = undefined;





/**
 * Allowed values for the <code>origin</code> property.
 * @enum {String}
 * @readonly
 */
UserProfileResponseInternal['OriginEnum'] = {

    /**
     * value: "appcenter"
     * @const
     */
    "appcenter": "appcenter",

    /**
     * value: "hockeyapp"
     * @const
     */
    "hockeyapp": "hockeyapp",

    /**
     * value: "codepush"
     * @const
     */
    "codepush": "codepush"
};


/**
 * Allowed values for the <code>permissions</code> property.
 * @enum {String}
 * @readonly
 */
UserProfileResponseInternal['PermissionsEnum'] = {

    /**
     * value: "manager"
     * @const
     */
    "manager": "manager",

    /**
     * value: "developer"
     * @const
     */
    "developer": "developer",

    /**
     * value: "viewer"
     * @const
     */
    "viewer": "viewer",

    /**
     * value: "tester"
     * @const
     */
    "tester": "tester"
};


/**
 * Allowed values for the <code>admin_role</code> property.
 * @enum {String}
 * @readonly
 */
UserProfileResponseInternal['AdminRoleEnum'] = {

    /**
     * value: "superAdmin"
     * @const
     */
    "superAdmin": "superAdmin",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin",

    /**
     * value: "devOps"
     * @const
     */
    "devOps": "devOps",

    /**
     * value: "customerSupport"
     * @const
     */
    "customerSupport": "customerSupport",

    /**
     * value: "notAdmin"
     * @const
     */
    "notAdmin": "notAdmin"
};



export default UserProfileResponseInternal;

