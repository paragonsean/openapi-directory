/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MSAUser model module.
 * @module model/MSAUser
 * @version v0.1
 */
class MSAUser {
    /**
     * Constructs a new <code>MSAUser</code>.
     * an MSA user&#39;s hex CID
     * @alias module:model/MSAUser
     * @param hexcid {String} the user's CID
     */
    constructor(hexcid) { 
        
        MSAUser.initialize(this, hexcid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hexcid) { 
        obj['hexcid'] = hexcid;
    }

    /**
     * Constructs a <code>MSAUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MSAUser} obj Optional instance to populate.
     * @return {module:model/MSAUser} The populated <code>MSAUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MSAUser();

            if (data.hasOwnProperty('hexcid')) {
                obj['hexcid'] = ApiClient.convertToType(data['hexcid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MSAUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MSAUser</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MSAUser.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['hexcid'] && !(typeof data['hexcid'] === 'string' || data['hexcid'] instanceof String)) {
            throw new Error("Expected the field `hexcid` to be a primitive type in the JSON string but got " + data['hexcid']);
        }

        return true;
    }


}

MSAUser.RequiredProperties = ["hexcid"];

/**
 * the user's CID
 * @member {String} hexcid
 */
MSAUser.prototype['hexcid'] = undefined;






export default MSAUser;

