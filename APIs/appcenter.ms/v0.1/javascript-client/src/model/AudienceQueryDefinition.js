/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AudienceQueryDefinition model module.
 * @module model/AudienceQueryDefinition
 * @version v0.1
 */
class AudienceQueryDefinition {
    /**
     * Constructs a new <code>AudienceQueryDefinition</code>.
     * Audience Query definition.
     * @alias module:model/AudienceQueryDefinition
     * @param queryType {module:model/AudienceQueryDefinition.QueryTypeEnum} Audience Query Type
     */
    constructor(queryType) { 
        
        AudienceQueryDefinition.initialize(this, queryType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, queryType) { 
        obj['queryType'] = queryType;
    }

    /**
     * Constructs a <code>AudienceQueryDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudienceQueryDefinition} obj Optional instance to populate.
     * @return {module:model/AudienceQueryDefinition} The populated <code>AudienceQueryDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudienceQueryDefinition();

            if (data.hasOwnProperty('identifiers')) {
                obj['identifiers'] = ApiClient.convertToType(data['identifiers'], ['String']);
            }
            if (data.hasOwnProperty('queryType')) {
                obj['queryType'] = ApiClient.convertToType(data['queryType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudienceQueryDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudienceQueryDefinition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AudienceQueryDefinition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['identifiers'])) {
            throw new Error("Expected the field `identifiers` to be an array in the JSON data but got " + data['identifiers']);
        }
        // ensure the json data is a string
        if (data['queryType'] && !(typeof data['queryType'] === 'string' || data['queryType'] instanceof String)) {
            throw new Error("Expected the field `queryType` to be a primitive type in the JSON string but got " + data['queryType']);
        }

        return true;
    }


}

AudienceQueryDefinition.RequiredProperties = ["queryType"];

/**
 * List of identifiers.
 * @member {Array.<String>} identifiers
 */
AudienceQueryDefinition.prototype['identifiers'] = undefined;

/**
 * Audience Query Type
 * @member {module:model/AudienceQueryDefinition.QueryTypeEnum} queryType
 */
AudienceQueryDefinition.prototype['queryType'] = undefined;





/**
 * Allowed values for the <code>queryType</code> property.
 * @enum {String}
 * @readonly
 */
AudienceQueryDefinition['QueryTypeEnum'] = {

    /**
     * value: "broadcast"
     * @const
     */
    "broadcast": "broadcast",

    /**
     * value: "user_ids"
     * @const
     */
    "user_ids": "user_ids",

    /**
     * value: "account_ids"
     * @const
     */
    "account_ids": "account_ids",

    /**
     * value: "install_ids"
     * @const
     */
    "install_ids": "install_ids"
};



export default AudienceQueryDefinition;

