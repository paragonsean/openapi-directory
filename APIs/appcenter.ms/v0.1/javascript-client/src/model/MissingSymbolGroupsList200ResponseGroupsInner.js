/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MissingSymbolGroupsList200ResponseGroupsInnerMissingSymbolsInner from './MissingSymbolGroupsList200ResponseGroupsInnerMissingSymbolsInner';

/**
 * The MissingSymbolGroupsList200ResponseGroupsInner model module.
 * @module model/MissingSymbolGroupsList200ResponseGroupsInner
 * @version v0.1
 */
class MissingSymbolGroupsList200ResponseGroupsInner {
    /**
     * Constructs a new <code>MissingSymbolGroupsList200ResponseGroupsInner</code>.
     * missing symbol crash group object
     * @alias module:model/MissingSymbolGroupsList200ResponseGroupsInner
     * @param appBuild {String} application build
     * @param appId {String} application id
     * @param appVer {String} application version
     * @param lastModified {Date} last update date for the group
     * @param missingSymbols {Array.<module:model/MissingSymbolGroupsList200ResponseGroupsInnerMissingSymbolsInner>} list of missing symbols
     * @param status {module:model/MissingSymbolGroupsList200ResponseGroupsInner.StatusEnum} group status
     * @param symbolGroupId {String} id of the symbol group
     */
    constructor(appBuild, appId, appVer, lastModified, missingSymbols, status, symbolGroupId) { 
        
        MissingSymbolGroupsList200ResponseGroupsInner.initialize(this, appBuild, appId, appVer, lastModified, missingSymbols, status, symbolGroupId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appBuild, appId, appVer, lastModified, missingSymbols, status, symbolGroupId) { 
        obj['app_build'] = appBuild;
        obj['app_id'] = appId;
        obj['app_ver'] = appVer;
        obj['last_modified'] = lastModified;
        obj['missing_symbols'] = missingSymbols;
        obj['status'] = status;
        obj['symbol_group_id'] = symbolGroupId;
    }

    /**
     * Constructs a <code>MissingSymbolGroupsList200ResponseGroupsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MissingSymbolGroupsList200ResponseGroupsInner} obj Optional instance to populate.
     * @return {module:model/MissingSymbolGroupsList200ResponseGroupsInner} The populated <code>MissingSymbolGroupsList200ResponseGroupsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MissingSymbolGroupsList200ResponseGroupsInner();

            if (data.hasOwnProperty('app_build')) {
                obj['app_build'] = ApiClient.convertToType(data['app_build'], 'String');
            }
            if (data.hasOwnProperty('app_id')) {
                obj['app_id'] = ApiClient.convertToType(data['app_id'], 'String');
            }
            if (data.hasOwnProperty('app_ver')) {
                obj['app_ver'] = ApiClient.convertToType(data['app_ver'], 'String');
            }
            if (data.hasOwnProperty('crash_count')) {
                obj['crash_count'] = ApiClient.convertToType(data['crash_count'], 'Number');
            }
            if (data.hasOwnProperty('error_count')) {
                obj['error_count'] = ApiClient.convertToType(data['error_count'], 'Number');
            }
            if (data.hasOwnProperty('last_modified')) {
                obj['last_modified'] = ApiClient.convertToType(data['last_modified'], 'Date');
            }
            if (data.hasOwnProperty('missing_symbols')) {
                obj['missing_symbols'] = ApiClient.convertToType(data['missing_symbols'], [MissingSymbolGroupsList200ResponseGroupsInnerMissingSymbolsInner]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('symbol_group_id')) {
                obj['symbol_group_id'] = ApiClient.convertToType(data['symbol_group_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MissingSymbolGroupsList200ResponseGroupsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MissingSymbolGroupsList200ResponseGroupsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MissingSymbolGroupsList200ResponseGroupsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['app_build'] && !(typeof data['app_build'] === 'string' || data['app_build'] instanceof String)) {
            throw new Error("Expected the field `app_build` to be a primitive type in the JSON string but got " + data['app_build']);
        }
        // ensure the json data is a string
        if (data['app_id'] && !(typeof data['app_id'] === 'string' || data['app_id'] instanceof String)) {
            throw new Error("Expected the field `app_id` to be a primitive type in the JSON string but got " + data['app_id']);
        }
        // ensure the json data is a string
        if (data['app_ver'] && !(typeof data['app_ver'] === 'string' || data['app_ver'] instanceof String)) {
            throw new Error("Expected the field `app_ver` to be a primitive type in the JSON string but got " + data['app_ver']);
        }
        if (data['missing_symbols']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['missing_symbols'])) {
                throw new Error("Expected the field `missing_symbols` to be an array in the JSON data but got " + data['missing_symbols']);
            }
            // validate the optional field `missing_symbols` (array)
            for (const item of data['missing_symbols']) {
                MissingSymbolGroupsList200ResponseGroupsInnerMissingSymbolsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['symbol_group_id'] && !(typeof data['symbol_group_id'] === 'string' || data['symbol_group_id'] instanceof String)) {
            throw new Error("Expected the field `symbol_group_id` to be a primitive type in the JSON string but got " + data['symbol_group_id']);
        }

        return true;
    }


}

MissingSymbolGroupsList200ResponseGroupsInner.RequiredProperties = ["app_build", "app_id", "app_ver", "last_modified", "missing_symbols", "status", "symbol_group_id"];

/**
 * application build
 * @member {String} app_build
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['app_build'] = undefined;

/**
 * application id
 * @member {String} app_id
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['app_id'] = undefined;

/**
 * application version
 * @member {String} app_ver
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['app_ver'] = undefined;

/**
 * number of crashes that belong to this group
 * @member {Number} crash_count
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['crash_count'] = undefined;

/**
 * number of errors that belong to this group
 * @member {Number} error_count
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['error_count'] = undefined;

/**
 * last update date for the group
 * @member {Date} last_modified
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['last_modified'] = undefined;

/**
 * list of missing symbols
 * @member {Array.<module:model/MissingSymbolGroupsList200ResponseGroupsInnerMissingSymbolsInner>} missing_symbols
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['missing_symbols'] = undefined;

/**
 * group status
 * @member {module:model/MissingSymbolGroupsList200ResponseGroupsInner.StatusEnum} status
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['status'] = undefined;

/**
 * id of the symbol group
 * @member {String} symbol_group_id
 */
MissingSymbolGroupsList200ResponseGroupsInner.prototype['symbol_group_id'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
MissingSymbolGroupsList200ResponseGroupsInner['StatusEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed"
};



export default MissingSymbolGroupsList200ResponseGroupsInner;

