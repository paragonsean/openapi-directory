/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrgComplianceSettingsResponse model module.
 * @module model/OrgComplianceSettingsResponse
 * @version v0.1
 */
class OrgComplianceSettingsResponse {
    /**
     * Constructs a new <code>OrgComplianceSettingsResponse</code>.
     * org settings response
     * @alias module:model/OrgComplianceSettingsResponse
     * @param certificateConnectionId {String} certificate connection id to wrap and resign the app after wrapping
     * @param id {String} The internal unique id (UUID) of the organization compliance setting
     * @param orgId {String} The internal unique id (UUID) of the organization.
     */
    constructor(certificateConnectionId, id, orgId) { 
        
        OrgComplianceSettingsResponse.initialize(this, certificateConnectionId, id, orgId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, certificateConnectionId, id, orgId) { 
        obj['certificate_connection_id'] = certificateConnectionId;
        obj['id'] = id;
        obj['org_id'] = orgId;
    }

    /**
     * Constructs a <code>OrgComplianceSettingsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgComplianceSettingsResponse} obj Optional instance to populate.
     * @return {module:model/OrgComplianceSettingsResponse} The populated <code>OrgComplianceSettingsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgComplianceSettingsResponse();

            if (data.hasOwnProperty('certificate_connection_id')) {
                obj['certificate_connection_id'] = ApiClient.convertToType(data['certificate_connection_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_mam_enabled')) {
                obj['is_mam_enabled'] = ApiClient.convertToType(data['is_mam_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('org_id')) {
                obj['org_id'] = ApiClient.convertToType(data['org_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrgComplianceSettingsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrgComplianceSettingsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrgComplianceSettingsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['certificate_connection_id'] && !(typeof data['certificate_connection_id'] === 'string' || data['certificate_connection_id'] instanceof String)) {
            throw new Error("Expected the field `certificate_connection_id` to be a primitive type in the JSON string but got " + data['certificate_connection_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['org_id'] && !(typeof data['org_id'] === 'string' || data['org_id'] instanceof String)) {
            throw new Error("Expected the field `org_id` to be a primitive type in the JSON string but got " + data['org_id']);
        }

        return true;
    }


}

OrgComplianceSettingsResponse.RequiredProperties = ["certificate_connection_id", "id", "org_id"];

/**
 * certificate connection id to wrap and resign the app after wrapping
 * @member {String} certificate_connection_id
 */
OrgComplianceSettingsResponse.prototype['certificate_connection_id'] = undefined;

/**
 * The internal unique id (UUID) of the organization compliance setting
 * @member {String} id
 */
OrgComplianceSettingsResponse.prototype['id'] = undefined;

/**
 * flag to tell if mam warpping is enabled on the Org
 * @member {Boolean} is_mam_enabled
 */
OrgComplianceSettingsResponse.prototype['is_mam_enabled'] = undefined;

/**
 * The internal unique id (UUID) of the organization.
 * @member {String} org_id
 */
OrgComplianceSettingsResponse.prototype['org_id'] = undefined;






export default OrgComplianceSettingsResponse;

