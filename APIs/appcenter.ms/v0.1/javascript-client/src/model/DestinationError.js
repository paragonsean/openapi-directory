/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinationError model module.
 * @module model/DestinationError
 * @version v0.1
 */
class DestinationError {
    /**
     * Constructs a new <code>DestinationError</code>.
     * @alias module:model/DestinationError
     */
    constructor() { 
        
        DestinationError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinationError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinationError} obj Optional instance to populate.
     * @return {module:model/DestinationError} The populated <code>DestinationError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinationError();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinationError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinationError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Error Codes:<br> <b>invalid_store_secrets</b>: While distributing to store, secrets provided for store are not valid.<br> <b>store_release_bad_request</b>: Proper package release details for the store is not provided.<br> <b>store_release_unauthorized</b>: User is not authorized to publish to store due to invalid developer credentials.<br> <b>store_release_forbidden</b>: Publish to store is forbidden due to conflicts/errors in the release version and already existing version in the store.<br> <b>store_release_promotion</b>: Release already distributed, promoting a release is not supported.<br> <b>store_track_deactivated</b>: One or more tracks would be deactivated with this release. This is not supported yet.<br> <b>store_release_not_found</b>: App with the given package name is not found in the store.<br> <b>store_release_not_available</b>: The release is not available.<br> <b>internal_server_error</b>: Failed to distribute to a destination due to an internal server error. 
 * @member {String} code
 */
DestinationError.prototype['code'] = undefined;

/**
 * @member {String} id
 */
DestinationError.prototype['id'] = undefined;

/**
 * @member {String} message
 */
DestinationError.prototype['message'] = undefined;

/**
 * @member {String} name
 */
DestinationError.prototype['name'] = undefined;






export default DestinationError;

