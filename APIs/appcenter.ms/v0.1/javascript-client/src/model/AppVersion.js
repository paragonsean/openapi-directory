/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppVersion model module.
 * @module model/AppVersion
 * @version v0.1
 */
class AppVersion {
    /**
     * Constructs a new <code>AppVersion</code>.
     * @alias module:model/AppVersion
     * @param appId {String} 
     * @param appVersion {String} 
     * @param appVersionId {String} 
     * @param displayName {String} 
     */
    constructor(appId, appVersion, appVersionId, displayName) { 
        
        AppVersion.initialize(this, appId, appVersion, appVersionId, displayName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appId, appVersion, appVersionId, displayName) { 
        obj['app_id'] = appId;
        obj['app_version'] = appVersion;
        obj['app_version_id'] = appVersionId;
        obj['display_name'] = displayName;
    }

    /**
     * Constructs a <code>AppVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppVersion} obj Optional instance to populate.
     * @return {module:model/AppVersion} The populated <code>AppVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppVersion();

            if (data.hasOwnProperty('app_id')) {
                obj['app_id'] = ApiClient.convertToType(data['app_id'], 'String');
            }
            if (data.hasOwnProperty('app_version')) {
                obj['app_version'] = ApiClient.convertToType(data['app_version'], 'String');
            }
            if (data.hasOwnProperty('app_version_id')) {
                obj['app_version_id'] = ApiClient.convertToType(data['app_version_id'], 'String');
            }
            if (data.hasOwnProperty('build_number')) {
                obj['build_number'] = ApiClient.convertToType(data['build_number'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppVersion</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppVersion.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['app_id'] && !(typeof data['app_id'] === 'string' || data['app_id'] instanceof String)) {
            throw new Error("Expected the field `app_id` to be a primitive type in the JSON string but got " + data['app_id']);
        }
        // ensure the json data is a string
        if (data['app_version'] && !(typeof data['app_version'] === 'string' || data['app_version'] instanceof String)) {
            throw new Error("Expected the field `app_version` to be a primitive type in the JSON string but got " + data['app_version']);
        }
        // ensure the json data is a string
        if (data['app_version_id'] && !(typeof data['app_version_id'] === 'string' || data['app_version_id'] instanceof String)) {
            throw new Error("Expected the field `app_version_id` to be a primitive type in the JSON string but got " + data['app_version_id']);
        }
        // ensure the json data is a string
        if (data['build_number'] && !(typeof data['build_number'] === 'string' || data['build_number'] instanceof String)) {
            throw new Error("Expected the field `build_number` to be a primitive type in the JSON string but got " + data['build_number']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }

        return true;
    }


}

AppVersion.RequiredProperties = ["app_id", "app_version", "app_version_id", "display_name"];

/**
 * @member {String} app_id
 */
AppVersion.prototype['app_id'] = undefined;

/**
 * @member {String} app_version
 */
AppVersion.prototype['app_version'] = undefined;

/**
 * @member {String} app_version_id
 */
AppVersion.prototype['app_version_id'] = undefined;

/**
 * @member {String} build_number
 */
AppVersion.prototype['build_number'] = undefined;

/**
 * @member {String} display_name
 */
AppVersion.prototype['display_name'] = undefined;






export default AppVersion;

