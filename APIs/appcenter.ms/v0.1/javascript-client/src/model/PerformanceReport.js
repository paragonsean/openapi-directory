/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PerformanceReportPerformanceData from './PerformanceReportPerformanceData';
import PerformanceReportVideo from './PerformanceReportVideo';

/**
 * The PerformanceReport model module.
 * @module model/PerformanceReport
 * @version v0.1
 */
class PerformanceReport {
    /**
     * Constructs a new <code>PerformanceReport</code>.
     * Report data for a single test (a.k.a. scenario)
     * @alias module:model/PerformanceReport
     */
    constructor() { 
        
        PerformanceReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PerformanceReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PerformanceReport} obj Optional instance to populate.
     * @return {module:model/PerformanceReport} The populated <code>PerformanceReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerformanceReport();

            if (data.hasOwnProperty('device_snapshot_id')) {
                obj['device_snapshot_id'] = ApiClient.convertToType(data['device_snapshot_id'], 'String');
            }
            if (data.hasOwnProperty('performance_data')) {
                obj['performance_data'] = PerformanceReportPerformanceData.constructFromObject(data['performance_data']);
            }
            if (data.hasOwnProperty('video')) {
                obj['video'] = PerformanceReportVideo.constructFromObject(data['video']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PerformanceReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PerformanceReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['device_snapshot_id'] && !(typeof data['device_snapshot_id'] === 'string' || data['device_snapshot_id'] instanceof String)) {
            throw new Error("Expected the field `device_snapshot_id` to be a primitive type in the JSON string but got " + data['device_snapshot_id']);
        }
        // validate the optional field `performance_data`
        if (data['performance_data']) { // data not null
          PerformanceReportPerformanceData.validateJSON(data['performance_data']);
        }
        // validate the optional field `video`
        if (data['video']) { // data not null
          PerformanceReportVideo.validateJSON(data['video']);
        }

        return true;
    }


}



/**
 * @member {String} device_snapshot_id
 */
PerformanceReport.prototype['device_snapshot_id'] = undefined;

/**
 * @member {module:model/PerformanceReportPerformanceData} performance_data
 */
PerformanceReport.prototype['performance_data'] = undefined;

/**
 * @member {module:model/PerformanceReportVideo} video
 */
PerformanceReport.prototype['video'] = undefined;






export default PerformanceReport;

