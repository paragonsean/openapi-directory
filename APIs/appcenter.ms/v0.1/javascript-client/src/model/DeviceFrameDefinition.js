/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceFrameDefinition model module.
 * @module model/DeviceFrameDefinition
 * @version v0.1
 */
class DeviceFrameDefinition {
    /**
     * Constructs a new <code>DeviceFrameDefinition</code>.
     * @alias module:model/DeviceFrameDefinition
     */
    constructor() { 
        
        DeviceFrameDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceFrameDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceFrameDefinition} obj Optional instance to populate.
     * @return {module:model/DeviceFrameDefinition} The populated <code>DeviceFrameDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceFrameDefinition();

            if (data.hasOwnProperty('frameUrl')) {
                obj['frameUrl'] = ApiClient.convertToType(data['frameUrl'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('screen')) {
                obj['screen'] = ApiClient.convertToType(data['screen'], ['Number']);
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceFrameDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceFrameDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['frameUrl'] && !(typeof data['frameUrl'] === 'string' || data['frameUrl'] instanceof String)) {
            throw new Error("Expected the field `frameUrl` to be a primitive type in the JSON string but got " + data['frameUrl']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['screen'])) {
            throw new Error("Expected the field `screen` to be an array in the JSON data but got " + data['screen']);
        }

        return true;
    }


}



/**
 * @member {String} frameUrl
 */
DeviceFrameDefinition.prototype['frameUrl'] = undefined;

/**
 * @member {Number} height
 */
DeviceFrameDefinition.prototype['height'] = undefined;

/**
 * @member {Array.<Number>} screen
 */
DeviceFrameDefinition.prototype['screen'] = undefined;

/**
 * @member {Number} width
 */
DeviceFrameDefinition.prototype['width'] = undefined;






export default DeviceFrameDefinition;

