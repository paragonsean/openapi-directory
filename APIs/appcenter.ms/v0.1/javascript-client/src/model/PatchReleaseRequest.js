/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchReleaseRequest model module.
 * @module model/PatchReleaseRequest
 * @version v0.1
 */
class PatchReleaseRequest {
    /**
     * Constructs a new <code>PatchReleaseRequest</code>.
     * @alias module:model/PatchReleaseRequest
     */
    constructor() { 
        
        PatchReleaseRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchReleaseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchReleaseRequest} obj Optional instance to populate.
     * @return {module:model/PatchReleaseRequest} The populated <code>PatchReleaseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchReleaseRequest();

            if (data.hasOwnProperty('dest_publish_id')) {
                obj['dest_publish_id'] = ApiClient.convertToType(data['dest_publish_id'], 'String');
            }
            if (data.hasOwnProperty('error_contextId')) {
                obj['error_contextId'] = ApiClient.convertToType(data['error_contextId'], 'String');
            }
            if (data.hasOwnProperty('error_details')) {
                obj['error_details'] = ApiClient.convertToType(data['error_details'], 'String');
            }
            if (data.hasOwnProperty('is_wrapper_request')) {
                obj['is_wrapper_request'] = ApiClient.convertToType(data['is_wrapper_request'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('wrap_package_url')) {
                obj['wrap_package_url'] = ApiClient.convertToType(data['wrap_package_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchReleaseRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchReleaseRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dest_publish_id'] && !(typeof data['dest_publish_id'] === 'string' || data['dest_publish_id'] instanceof String)) {
            throw new Error("Expected the field `dest_publish_id` to be a primitive type in the JSON string but got " + data['dest_publish_id']);
        }
        // ensure the json data is a string
        if (data['error_contextId'] && !(typeof data['error_contextId'] === 'string' || data['error_contextId'] instanceof String)) {
            throw new Error("Expected the field `error_contextId` to be a primitive type in the JSON string but got " + data['error_contextId']);
        }
        // ensure the json data is a string
        if (data['error_details'] && !(typeof data['error_details'] === 'string' || data['error_details'] instanceof String)) {
            throw new Error("Expected the field `error_details` to be a primitive type in the JSON string but got " + data['error_details']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['wrap_package_url'] && !(typeof data['wrap_package_url'] === 'string' || data['wrap_package_url'] instanceof String)) {
            throw new Error("Expected the field `wrap_package_url` to be a primitive type in the JSON string but got " + data['wrap_package_url']);
        }

        return true;
    }


}



/**
 * Destination Publish Id
 * @member {String} dest_publish_id
 */
PatchReleaseRequest.prototype['dest_publish_id'] = undefined;

/**
 * contextId for failed error message
 * @member {String} error_contextId
 */
PatchReleaseRequest.prototype['error_contextId'] = undefined;

/**
 * failure error details from store
 * @member {String} error_details
 */
PatchReleaseRequest.prototype['error_details'] = undefined;

/**
 * request is for wrapping or not
 * @member {Boolean} is_wrapper_request
 */
PatchReleaseRequest.prototype['is_wrapper_request'] = undefined;

/**
 * updated status of release
 * @member {String} status
 */
PatchReleaseRequest.prototype['status'] = undefined;

/**
 * package url for wrapping request
 * @member {String} wrap_package_url
 */
PatchReleaseRequest.prototype['wrap_package_url'] = undefined;






export default PatchReleaseRequest;

