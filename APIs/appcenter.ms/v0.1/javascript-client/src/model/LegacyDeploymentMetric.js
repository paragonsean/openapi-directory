/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LegacyDeploymentMetric model module.
 * @module model/LegacyDeploymentMetric
 * @version v0.1
 */
class LegacyDeploymentMetric {
    /**
     * Constructs a new <code>LegacyDeploymentMetric</code>.
     * @alias module:model/LegacyDeploymentMetric
     * @param active {Number} The number of devices that have this release installed currently
     */
    constructor(active) { 
        
        LegacyDeploymentMetric.initialize(this, active);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active) { 
        obj['active'] = active;
    }

    /**
     * Constructs a <code>LegacyDeploymentMetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LegacyDeploymentMetric} obj Optional instance to populate.
     * @return {module:model/LegacyDeploymentMetric} The populated <code>LegacyDeploymentMetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LegacyDeploymentMetric();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Number');
            }
            if (data.hasOwnProperty('downloaded')) {
                obj['downloaded'] = ApiClient.convertToType(data['downloaded'], 'Number');
            }
            if (data.hasOwnProperty('failed')) {
                obj['failed'] = ApiClient.convertToType(data['failed'], 'Number');
            }
            if (data.hasOwnProperty('installed')) {
                obj['installed'] = ApiClient.convertToType(data['installed'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LegacyDeploymentMetric</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LegacyDeploymentMetric</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LegacyDeploymentMetric.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

LegacyDeploymentMetric.RequiredProperties = ["active"];

/**
 * The number of devices that have this release installed currently
 * @member {Number} active
 */
LegacyDeploymentMetric.prototype['active'] = undefined;

/**
 * The number of times this release has been downloaded
 * @member {Number} downloaded
 */
LegacyDeploymentMetric.prototype['downloaded'] = undefined;

/**
 * The number of times this release has failed to be installed on a device
 * @member {Number} failed
 */
LegacyDeploymentMetric.prototype['failed'] = undefined;

/**
 * The number of times this release has been installed on a device
 * @member {Number} installed
 */
LegacyDeploymentMetric.prototype['installed'] = undefined;






export default LegacyDeploymentMetric;

