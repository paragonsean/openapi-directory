/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GrantAdminRoleRequest model module.
 * @module model/GrantAdminRoleRequest
 * @version v0.1
 */
class GrantAdminRoleRequest {
    /**
     * Constructs a new <code>GrantAdminRoleRequest</code>.
     * @alias module:model/GrantAdminRoleRequest
     * @param adminRole {module:model/GrantAdminRoleRequest.AdminRoleEnum} The new admin_role
     */
    constructor(adminRole) { 
        
        GrantAdminRoleRequest.initialize(this, adminRole);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, adminRole) { 
        obj['admin_role'] = adminRole;
    }

    /**
     * Constructs a <code>GrantAdminRoleRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GrantAdminRoleRequest} obj Optional instance to populate.
     * @return {module:model/GrantAdminRoleRequest} The populated <code>GrantAdminRoleRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GrantAdminRoleRequest();

            if (data.hasOwnProperty('admin_role')) {
                obj['admin_role'] = ApiClient.convertToType(data['admin_role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GrantAdminRoleRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GrantAdminRoleRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GrantAdminRoleRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['admin_role'] && !(typeof data['admin_role'] === 'string' || data['admin_role'] instanceof String)) {
            throw new Error("Expected the field `admin_role` to be a primitive type in the JSON string but got " + data['admin_role']);
        }

        return true;
    }


}

GrantAdminRoleRequest.RequiredProperties = ["admin_role"];

/**
 * The new admin_role
 * @member {module:model/GrantAdminRoleRequest.AdminRoleEnum} admin_role
 */
GrantAdminRoleRequest.prototype['admin_role'] = undefined;





/**
 * Allowed values for the <code>admin_role</code> property.
 * @enum {String}
 * @readonly
 */
GrantAdminRoleRequest['AdminRoleEnum'] = {

    /**
     * value: "superAdmin"
     * @const
     */
    "superAdmin": "superAdmin",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin",

    /**
     * value: "devOps"
     * @const
     */
    "devOps": "devOps",

    /**
     * value: "customerSupport"
     * @const
     */
    "customerSupport": "customerSupport",

    /**
     * value: "notAdmin"
     * @const
     */
    "notAdmin": "notAdmin"
};



export default GrantAdminRoleRequest;

