/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TestRunSummary model module.
 * @module model/TestRunSummary
 * @version v0.1
 */
class TestRunSummary {
    /**
     * Constructs a new <code>TestRunSummary</code>.
     * Most important information about a test run.
     * @alias module:model/TestRunSummary
     */
    constructor() { 
        
        TestRunSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestRunSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestRunSummary} obj Optional instance to populate.
     * @return {module:model/TestRunSummary} The populated <code>TestRunSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestRunSummary();

            if (data.hasOwnProperty('completed')) {
                obj['completed'] = ApiClient.convertToType(data['completed'], 'Boolean');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('failed')) {
                obj['failed'] = ApiClient.convertToType(data['failed'], 'Number');
            }
            if (data.hasOwnProperty('passed')) {
                obj['passed'] = ApiClient.convertToType(data['passed'], 'Number');
            }
            if (data.hasOwnProperty('statusDescription')) {
                obj['statusDescription'] = ApiClient.convertToType(data['statusDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestRunSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestRunSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['statusDescription'] && !(typeof data['statusDescription'] === 'string' || data['statusDescription'] instanceof String)) {
            throw new Error("Expected the field `statusDescription` to be a primitive type in the JSON string but got " + data['statusDescription']);
        }

        return true;
    }


}



/**
 * Tells whether the test run has completed
 * @member {Boolean} completed
 */
TestRunSummary.prototype['completed'] = undefined;

/**
 * Date of the test run.
 * @member {String} date
 */
TestRunSummary.prototype['date'] = undefined;

/**
 * Number of failed tests
 * @member {Number} failed
 */
TestRunSummary.prototype['failed'] = undefined;

/**
 * Number of passed tests
 * @member {Number} passed
 */
TestRunSummary.prototype['passed'] = undefined;

/**
 * Human-readable status of the test run.
 * @member {String} statusDescription
 */
TestRunSummary.prototype['statusDescription'] = undefined;






export default TestRunSummary;

