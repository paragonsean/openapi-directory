/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendNotificationRequest model module.
 * @module model/SendNotificationRequest
 * @version v0.1
 */
class SendNotificationRequest {
    /**
     * Constructs a new <code>SendNotificationRequest</code>.
     * @alias module:model/SendNotificationRequest
     * @param userIds {Array.<String>} user list to send email notification
     */
    constructor(userIds) { 
        
        SendNotificationRequest.initialize(this, userIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, userIds) { 
        obj['userIds'] = userIds;
    }

    /**
     * Constructs a <code>SendNotificationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendNotificationRequest} obj Optional instance to populate.
     * @return {module:model/SendNotificationRequest} The populated <code>SendNotificationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendNotificationRequest();

            if (data.hasOwnProperty('userIds')) {
                obj['userIds'] = ApiClient.convertToType(data['userIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendNotificationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendNotificationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SendNotificationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['userIds'])) {
            throw new Error("Expected the field `userIds` to be an array in the JSON data but got " + data['userIds']);
        }

        return true;
    }


}

SendNotificationRequest.RequiredProperties = ["userIds"];

/**
 * user list to send email notification
 * @member {Array.<String>} userIds
 */
SendNotificationRequest.prototype['userIds'] = undefined;






export default SendNotificationRequest;

