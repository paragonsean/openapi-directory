/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppleMultifactorSecretDetails model module.
 * @module model/AppleMultifactorSecretDetails
 * @version v0.1
 */
class AppleMultifactorSecretDetails {
    /**
     * Constructs a new <code>AppleMultifactorSecretDetails</code>.
     * Apple secret details
     * @alias module:model/AppleMultifactorSecretDetails
     * @param authCode {String} The 6 digit Apple OTP for Multifactor accounts
     * @param password {String} password to connect to apple store.
     * @param username {String} username to connect to apple store.
     */
    constructor(authCode, password, username) { 
        
        AppleMultifactorSecretDetails.initialize(this, authCode, password, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authCode, password, username) { 
        obj['authCode'] = authCode;
        obj['password'] = password;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>AppleMultifactorSecretDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppleMultifactorSecretDetails} obj Optional instance to populate.
     * @return {module:model/AppleMultifactorSecretDetails} The populated <code>AppleMultifactorSecretDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppleMultifactorSecretDetails();

            if (data.hasOwnProperty('appSpecificPassword')) {
                obj['appSpecificPassword'] = ApiClient.convertToType(data['appSpecificPassword'], 'String');
            }
            if (data.hasOwnProperty('authCode')) {
                obj['authCode'] = ApiClient.convertToType(data['authCode'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppleMultifactorSecretDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppleMultifactorSecretDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppleMultifactorSecretDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['appSpecificPassword'] && !(typeof data['appSpecificPassword'] === 'string' || data['appSpecificPassword'] instanceof String)) {
            throw new Error("Expected the field `appSpecificPassword` to be a primitive type in the JSON string but got " + data['appSpecificPassword']);
        }
        // ensure the json data is a string
        if (data['authCode'] && !(typeof data['authCode'] === 'string' || data['authCode'] instanceof String)) {
            throw new Error("Expected the field `authCode` to be a primitive type in the JSON string but got " + data['authCode']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

AppleMultifactorSecretDetails.RequiredProperties = ["authCode", "password", "username"];

/**
 * The app specific password required for app publishing for 2FA accounts
 * @member {String} appSpecificPassword
 */
AppleMultifactorSecretDetails.prototype['appSpecificPassword'] = undefined;

/**
 * The 6 digit Apple OTP for Multifactor accounts
 * @member {String} authCode
 */
AppleMultifactorSecretDetails.prototype['authCode'] = undefined;

/**
 * password to connect to apple store.
 * @member {String} password
 */
AppleMultifactorSecretDetails.prototype['password'] = undefined;

/**
 * username to connect to apple store.
 * @member {String} username
 */
AppleMultifactorSecretDetails.prototype['username'] = undefined;






export default AppleMultifactorSecretDetails;

