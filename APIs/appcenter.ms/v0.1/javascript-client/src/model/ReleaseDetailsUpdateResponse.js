/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReleaseDetailsUpdateResponse model module.
 * @module model/ReleaseDetailsUpdateResponse
 * @version v0.1
 */
class ReleaseDetailsUpdateResponse {
    /**
     * Constructs a new <code>ReleaseDetailsUpdateResponse</code>.
     * Response for updating release details
     * @alias module:model/ReleaseDetailsUpdateResponse
     */
    constructor() { 
        
        ReleaseDetailsUpdateResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReleaseDetailsUpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReleaseDetailsUpdateResponse} obj Optional instance to populate.
     * @return {module:model/ReleaseDetailsUpdateResponse} The populated <code>ReleaseDetailsUpdateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReleaseDetailsUpdateResponse();

            if (data.hasOwnProperty('release_notes')) {
                obj['release_notes'] = ApiClient.convertToType(data['release_notes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReleaseDetailsUpdateResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReleaseDetailsUpdateResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['release_notes'] && !(typeof data['release_notes'] === 'string' || data['release_notes'] instanceof String)) {
            throw new Error("Expected the field `release_notes` to be a primitive type in the JSON string but got " + data['release_notes']);
        }

        return true;
    }


}



/**
 * @member {String} release_notes
 */
ReleaseDetailsUpdateResponse.prototype['release_notes'] = undefined;






export default ReleaseDetailsUpdateResponse;

