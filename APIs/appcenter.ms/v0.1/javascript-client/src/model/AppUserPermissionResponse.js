/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppUserPermissionResponse model module.
 * @module model/AppUserPermissionResponse
 * @version v0.1
 */
class AppUserPermissionResponse {
    /**
     * Constructs a new <code>AppUserPermissionResponse</code>.
     * @alias module:model/AppUserPermissionResponse
     * @param appId {String} The unique id (UUID) of the app
     * @param appOrigin {module:model/AppUserPermissionResponse.AppOriginEnum} The creation origin of this app
     * @param appSecret {String} A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics
     * @param permissions {Array.<module:model/AppUserPermissionResponse.PermissionsEnum>} The permissions the user has for the app
     * @param userEmail {String} The email of the user
     * @param userId {String} The unique id (UUID) of the user
     */
    constructor(appId, appOrigin, appSecret, permissions, userEmail, userId) { 
        
        AppUserPermissionResponse.initialize(this, appId, appOrigin, appSecret, permissions, userEmail, userId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appId, appOrigin, appSecret, permissions, userEmail, userId) { 
        obj['app_id'] = appId;
        obj['app_origin'] = appOrigin;
        obj['app_secret'] = appSecret;
        obj['permissions'] = permissions;
        obj['user_email'] = userEmail;
        obj['user_id'] = userId;
    }

    /**
     * Constructs a <code>AppUserPermissionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppUserPermissionResponse} obj Optional instance to populate.
     * @return {module:model/AppUserPermissionResponse} The populated <code>AppUserPermissionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppUserPermissionResponse();

            if (data.hasOwnProperty('app_id')) {
                obj['app_id'] = ApiClient.convertToType(data['app_id'], 'String');
            }
            if (data.hasOwnProperty('app_origin')) {
                obj['app_origin'] = ApiClient.convertToType(data['app_origin'], 'String');
            }
            if (data.hasOwnProperty('app_secret')) {
                obj['app_secret'] = ApiClient.convertToType(data['app_secret'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
            }
            if (data.hasOwnProperty('user_email')) {
                obj['user_email'] = ApiClient.convertToType(data['user_email'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppUserPermissionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppUserPermissionResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppUserPermissionResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['app_id'] && !(typeof data['app_id'] === 'string' || data['app_id'] instanceof String)) {
            throw new Error("Expected the field `app_id` to be a primitive type in the JSON string but got " + data['app_id']);
        }
        // ensure the json data is a string
        if (data['app_origin'] && !(typeof data['app_origin'] === 'string' || data['app_origin'] instanceof String)) {
            throw new Error("Expected the field `app_origin` to be a primitive type in the JSON string but got " + data['app_origin']);
        }
        // ensure the json data is a string
        if (data['app_secret'] && !(typeof data['app_secret'] === 'string' || data['app_secret'] instanceof String)) {
            throw new Error("Expected the field `app_secret` to be a primitive type in the JSON string but got " + data['app_secret']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }
        // ensure the json data is a string
        if (data['user_email'] && !(typeof data['user_email'] === 'string' || data['user_email'] instanceof String)) {
            throw new Error("Expected the field `user_email` to be a primitive type in the JSON string but got " + data['user_email']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }

        return true;
    }


}

AppUserPermissionResponse.RequiredProperties = ["app_id", "app_origin", "app_secret", "permissions", "user_email", "user_id"];

/**
 * The unique id (UUID) of the app
 * @member {String} app_id
 */
AppUserPermissionResponse.prototype['app_id'] = undefined;

/**
 * The creation origin of this app
 * @member {module:model/AppUserPermissionResponse.AppOriginEnum} app_origin
 */
AppUserPermissionResponse.prototype['app_origin'] = undefined;

/**
 * A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics
 * @member {String} app_secret
 */
AppUserPermissionResponse.prototype['app_secret'] = undefined;

/**
 * The permissions the user has for the app
 * @member {Array.<module:model/AppUserPermissionResponse.PermissionsEnum>} permissions
 */
AppUserPermissionResponse.prototype['permissions'] = undefined;

/**
 * The email of the user
 * @member {String} user_email
 */
AppUserPermissionResponse.prototype['user_email'] = undefined;

/**
 * The unique id (UUID) of the user
 * @member {String} user_id
 */
AppUserPermissionResponse.prototype['user_id'] = undefined;





/**
 * Allowed values for the <code>app_origin</code> property.
 * @enum {String}
 * @readonly
 */
AppUserPermissionResponse['AppOriginEnum'] = {

    /**
     * value: "appcenter"
     * @const
     */
    "appcenter": "appcenter",

    /**
     * value: "codepush"
     * @const
     */
    "codepush": "codepush"
};


/**
 * Allowed values for the <code>permissions</code> property.
 * @enum {String}
 * @readonly
 */
AppUserPermissionResponse['PermissionsEnum'] = {

    /**
     * value: "manager"
     * @const
     */
    "manager": "manager",

    /**
     * value: "developer"
     * @const
     */
    "developer": "developer",

    /**
     * value: "viewer"
     * @const
     */
    "viewer": "viewer",

    /**
     * value: "tester"
     * @const
     */
    "tester": "tester"
};



export default AppUserPermissionResponse;

