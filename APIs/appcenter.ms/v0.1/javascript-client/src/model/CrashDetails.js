/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CrashDetails model module.
 * @module model/CrashDetails
 * @version v0.1
 */
class CrashDetails {
    /**
     * Constructs a new <code>CrashDetails</code>.
     * @alias module:model/CrashDetails
     * @param locale {String} Language code (example: en_US). 
     * @param rooted {Boolean} Whether the device where the crash occurred is rooted or jailbroken 
     * @param screenSize {String} Screen size of the device in pixels (example: 640x480). 
     */
    constructor(locale, rooted, screenSize) { 
        
        CrashDetails.initialize(this, locale, rooted, screenSize);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, locale, rooted, screenSize) { 
        obj['locale'] = locale;
        obj['rooted'] = rooted;
        obj['screen_size'] = screenSize;
    }

    /**
     * Constructs a <code>CrashDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrashDetails} obj Optional instance to populate.
     * @return {module:model/CrashDetails} The populated <code>CrashDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrashDetails();

            if (data.hasOwnProperty('app_start_timestamp')) {
                obj['app_start_timestamp'] = ApiClient.convertToType(data['app_start_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('carrier_country')) {
                obj['carrier_country'] = ApiClient.convertToType(data['carrier_country'], 'String');
            }
            if (data.hasOwnProperty('carrier_name')) {
                obj['carrier_name'] = ApiClient.convertToType(data['carrier_name'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('os_build')) {
                obj['os_build'] = ApiClient.convertToType(data['os_build'], 'String');
            }
            if (data.hasOwnProperty('rooted')) {
                obj['rooted'] = ApiClient.convertToType(data['rooted'], 'Boolean');
            }
            if (data.hasOwnProperty('screen_size')) {
                obj['screen_size'] = ApiClient.convertToType(data['screen_size'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrashDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrashDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CrashDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['carrier_country'] && !(typeof data['carrier_country'] === 'string' || data['carrier_country'] instanceof String)) {
            throw new Error("Expected the field `carrier_country` to be a primitive type in the JSON string but got " + data['carrier_country']);
        }
        // ensure the json data is a string
        if (data['carrier_name'] && !(typeof data['carrier_name'] === 'string' || data['carrier_name'] instanceof String)) {
            throw new Error("Expected the field `carrier_name` to be a primitive type in the JSON string but got " + data['carrier_name']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['os_build'] && !(typeof data['os_build'] === 'string' || data['os_build'] instanceof String)) {
            throw new Error("Expected the field `os_build` to be a primitive type in the JSON string but got " + data['os_build']);
        }
        // ensure the json data is a string
        if (data['screen_size'] && !(typeof data['screen_size'] === 'string' || data['screen_size'] instanceof String)) {
            throw new Error("Expected the field `screen_size` to be a primitive type in the JSON string but got " + data['screen_size']);
        }

        return true;
    }


}

CrashDetails.RequiredProperties = ["locale", "rooted", "screen_size"];

/**
 * Application launch timestamp (example: 1985-04-12T23:20:50.52Z). 
 * @member {Date} app_start_timestamp
 */
CrashDetails.prototype['app_start_timestamp'] = undefined;

/**
 * Carrier country code (for mobile devices). 
 * @member {String} carrier_country
 */
CrashDetails.prototype['carrier_country'] = undefined;

/**
 * Carrier name (for mobile devices). 
 * @member {String} carrier_name
 */
CrashDetails.prototype['carrier_name'] = undefined;

/**
 * Language code (example: en_US). 
 * @member {String} locale
 */
CrashDetails.prototype['locale'] = undefined;

/**
 * OS build code (example: LMY47X). 
 * @member {String} os_build
 */
CrashDetails.prototype['os_build'] = undefined;

/**
 * Whether the device where the crash occurred is rooted or jailbroken 
 * @member {Boolean} rooted
 */
CrashDetails.prototype['rooted'] = undefined;

/**
 * Screen size of the device in pixels (example: 640x480). 
 * @member {String} screen_size
 */
CrashDetails.prototype['screen_size'] = undefined;






export default CrashDetails;

