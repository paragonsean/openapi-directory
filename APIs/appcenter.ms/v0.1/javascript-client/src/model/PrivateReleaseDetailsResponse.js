/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PrivateReleaseDetailsResponse model module.
 * @module model/PrivateReleaseDetailsResponse
 * @version v0.1
 */
class PrivateReleaseDetailsResponse {
    /**
     * Constructs a new <code>PrivateReleaseDetailsResponse</code>.
     * Details of an uploaded release
     * @alias module:model/PrivateReleaseDetailsResponse
     */
    constructor() { 
        
        PrivateReleaseDetailsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PrivateReleaseDetailsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrivateReleaseDetailsResponse} obj Optional instance to populate.
     * @return {module:model/PrivateReleaseDetailsResponse} The populated <code>PrivateReleaseDetailsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrivateReleaseDetailsResponse();

            if (data.hasOwnProperty('android_min_api_level')) {
                obj['android_min_api_level'] = ApiClient.convertToType(data['android_min_api_level'], 'String');
            }
            if (data.hasOwnProperty('app_display_name')) {
                obj['app_display_name'] = ApiClient.convertToType(data['app_display_name'], 'String');
            }
            if (data.hasOwnProperty('app_icon_url')) {
                obj['app_icon_url'] = ApiClient.convertToType(data['app_icon_url'], 'String');
            }
            if (data.hasOwnProperty('app_name')) {
                obj['app_name'] = ApiClient.convertToType(data['app_name'], 'String');
            }
            if (data.hasOwnProperty('bundle_identifier')) {
                obj['bundle_identifier'] = ApiClient.convertToType(data['bundle_identifier'], 'String');
            }
            if (data.hasOwnProperty('destination_type')) {
                obj['destination_type'] = ApiClient.convertToType(data['destination_type'], 'String');
            }
            if (data.hasOwnProperty('device_family')) {
                obj['device_family'] = ApiClient.convertToType(data['device_family'], 'String');
            }
            if (data.hasOwnProperty('distribution_group_id')) {
                obj['distribution_group_id'] = ApiClient.convertToType(data['distribution_group_id'], 'String');
            }
            if (data.hasOwnProperty('download_url')) {
                obj['download_url'] = ApiClient.convertToType(data['download_url'], 'String');
            }
            if (data.hasOwnProperty('fingerprint')) {
                obj['fingerprint'] = ApiClient.convertToType(data['fingerprint'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('install_url')) {
                obj['install_url'] = ApiClient.convertToType(data['install_url'], 'String');
            }
            if (data.hasOwnProperty('is_external_build')) {
                obj['is_external_build'] = ApiClient.convertToType(data['is_external_build'], 'Boolean');
            }
            if (data.hasOwnProperty('is_provisioning_profile_syncing')) {
                obj['is_provisioning_profile_syncing'] = ApiClient.convertToType(data['is_provisioning_profile_syncing'], 'Boolean');
            }
            if (data.hasOwnProperty('min_os')) {
                obj['min_os'] = ApiClient.convertToType(data['min_os'], 'String');
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('provisioning_profile_name')) {
                obj['provisioning_profile_name'] = ApiClient.convertToType(data['provisioning_profile_name'], 'String');
            }
            if (data.hasOwnProperty('provisioning_profile_type')) {
                obj['provisioning_profile_type'] = ApiClient.convertToType(data['provisioning_profile_type'], 'String');
            }
            if (data.hasOwnProperty('publishing_status')) {
                obj['publishing_status'] = ApiClient.convertToType(data['publishing_status'], 'String');
            }
            if (data.hasOwnProperty('release_notes')) {
                obj['release_notes'] = ApiClient.convertToType(data['release_notes'], 'String');
            }
            if (data.hasOwnProperty('secondary_download_url')) {
                obj['secondary_download_url'] = ApiClient.convertToType(data['secondary_download_url'], 'String');
            }
            if (data.hasOwnProperty('short_version')) {
                obj['short_version'] = ApiClient.convertToType(data['short_version'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('uploaded_at')) {
                obj['uploaded_at'] = ApiClient.convertToType(data['uploaded_at'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrivateReleaseDetailsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrivateReleaseDetailsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['android_min_api_level'] && !(typeof data['android_min_api_level'] === 'string' || data['android_min_api_level'] instanceof String)) {
            throw new Error("Expected the field `android_min_api_level` to be a primitive type in the JSON string but got " + data['android_min_api_level']);
        }
        // ensure the json data is a string
        if (data['app_display_name'] && !(typeof data['app_display_name'] === 'string' || data['app_display_name'] instanceof String)) {
            throw new Error("Expected the field `app_display_name` to be a primitive type in the JSON string but got " + data['app_display_name']);
        }
        // ensure the json data is a string
        if (data['app_icon_url'] && !(typeof data['app_icon_url'] === 'string' || data['app_icon_url'] instanceof String)) {
            throw new Error("Expected the field `app_icon_url` to be a primitive type in the JSON string but got " + data['app_icon_url']);
        }
        // ensure the json data is a string
        if (data['app_name'] && !(typeof data['app_name'] === 'string' || data['app_name'] instanceof String)) {
            throw new Error("Expected the field `app_name` to be a primitive type in the JSON string but got " + data['app_name']);
        }
        // ensure the json data is a string
        if (data['bundle_identifier'] && !(typeof data['bundle_identifier'] === 'string' || data['bundle_identifier'] instanceof String)) {
            throw new Error("Expected the field `bundle_identifier` to be a primitive type in the JSON string but got " + data['bundle_identifier']);
        }
        // ensure the json data is a string
        if (data['destination_type'] && !(typeof data['destination_type'] === 'string' || data['destination_type'] instanceof String)) {
            throw new Error("Expected the field `destination_type` to be a primitive type in the JSON string but got " + data['destination_type']);
        }
        // ensure the json data is a string
        if (data['device_family'] && !(typeof data['device_family'] === 'string' || data['device_family'] instanceof String)) {
            throw new Error("Expected the field `device_family` to be a primitive type in the JSON string but got " + data['device_family']);
        }
        // ensure the json data is a string
        if (data['distribution_group_id'] && !(typeof data['distribution_group_id'] === 'string' || data['distribution_group_id'] instanceof String)) {
            throw new Error("Expected the field `distribution_group_id` to be a primitive type in the JSON string but got " + data['distribution_group_id']);
        }
        // ensure the json data is a string
        if (data['download_url'] && !(typeof data['download_url'] === 'string' || data['download_url'] instanceof String)) {
            throw new Error("Expected the field `download_url` to be a primitive type in the JSON string but got " + data['download_url']);
        }
        // ensure the json data is a string
        if (data['fingerprint'] && !(typeof data['fingerprint'] === 'string' || data['fingerprint'] instanceof String)) {
            throw new Error("Expected the field `fingerprint` to be a primitive type in the JSON string but got " + data['fingerprint']);
        }
        // ensure the json data is a string
        if (data['install_url'] && !(typeof data['install_url'] === 'string' || data['install_url'] instanceof String)) {
            throw new Error("Expected the field `install_url` to be a primitive type in the JSON string but got " + data['install_url']);
        }
        // ensure the json data is a string
        if (data['min_os'] && !(typeof data['min_os'] === 'string' || data['min_os'] instanceof String)) {
            throw new Error("Expected the field `min_os` to be a primitive type in the JSON string but got " + data['min_os']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }
        // ensure the json data is a string
        if (data['provisioning_profile_name'] && !(typeof data['provisioning_profile_name'] === 'string' || data['provisioning_profile_name'] instanceof String)) {
            throw new Error("Expected the field `provisioning_profile_name` to be a primitive type in the JSON string but got " + data['provisioning_profile_name']);
        }
        // ensure the json data is a string
        if (data['provisioning_profile_type'] && !(typeof data['provisioning_profile_type'] === 'string' || data['provisioning_profile_type'] instanceof String)) {
            throw new Error("Expected the field `provisioning_profile_type` to be a primitive type in the JSON string but got " + data['provisioning_profile_type']);
        }
        // ensure the json data is a string
        if (data['publishing_status'] && !(typeof data['publishing_status'] === 'string' || data['publishing_status'] instanceof String)) {
            throw new Error("Expected the field `publishing_status` to be a primitive type in the JSON string but got " + data['publishing_status']);
        }
        // ensure the json data is a string
        if (data['release_notes'] && !(typeof data['release_notes'] === 'string' || data['release_notes'] instanceof String)) {
            throw new Error("Expected the field `release_notes` to be a primitive type in the JSON string but got " + data['release_notes']);
        }
        // ensure the json data is a string
        if (data['secondary_download_url'] && !(typeof data['secondary_download_url'] === 'string' || data['secondary_download_url'] instanceof String)) {
            throw new Error("Expected the field `secondary_download_url` to be a primitive type in the JSON string but got " + data['secondary_download_url']);
        }
        // ensure the json data is a string
        if (data['short_version'] && !(typeof data['short_version'] === 'string' || data['short_version'] instanceof String)) {
            throw new Error("Expected the field `short_version` to be a primitive type in the JSON string but got " + data['short_version']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['uploaded_at'] && !(typeof data['uploaded_at'] === 'string' || data['uploaded_at'] instanceof String)) {
            throw new Error("Expected the field `uploaded_at` to be a primitive type in the JSON string but got " + data['uploaded_at']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * The release's minimum required Android API level.
 * @member {String} android_min_api_level
 */
PrivateReleaseDetailsResponse.prototype['android_min_api_level'] = undefined;

/**
 * The app's display name.
 * @member {String} app_display_name
 */
PrivateReleaseDetailsResponse.prototype['app_display_name'] = undefined;

/**
 * A URL to the app's icon.
 * @member {String} app_icon_url
 */
PrivateReleaseDetailsResponse.prototype['app_icon_url'] = undefined;

/**
 * The app's name (extracted from the uploaded release).
 * @member {String} app_name
 */
PrivateReleaseDetailsResponse.prototype['app_name'] = undefined;

/**
 * The identifier of the apps bundle.
 * @member {String} bundle_identifier
 */
PrivateReleaseDetailsResponse.prototype['bundle_identifier'] = undefined;

/**
 * The destination type.<br> <b>group</b>: The release distributed to internal groups and distribution_groups details will be returned.<br> <b>store</b>: The release distributed to external stores and distribution_stores details will be returned. <br> 
 * @member {module:model/PrivateReleaseDetailsResponse.DestinationTypeEnum} destination_type
 */
PrivateReleaseDetailsResponse.prototype['destination_type'] = undefined;

/**
 * The release's device family.
 * @member {String} device_family
 */
PrivateReleaseDetailsResponse.prototype['device_family'] = undefined;

/**
 * the destination where release is distributed
 * @member {String} distribution_group_id
 */
PrivateReleaseDetailsResponse.prototype['distribution_group_id'] = undefined;

/**
 * The URL that hosts the binary for this release.
 * @member {String} download_url
 */
PrivateReleaseDetailsResponse.prototype['download_url'] = undefined;

/**
 * MD5 checksum of the release binary.
 * @member {String} fingerprint
 */
PrivateReleaseDetailsResponse.prototype['fingerprint'] = undefined;

/**
 * ID identifying this unique release.
 * @member {Number} id
 */
PrivateReleaseDetailsResponse.prototype['id'] = undefined;

/**
 * The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=`
 * @member {String} install_url
 */
PrivateReleaseDetailsResponse.prototype['install_url'] = undefined;

/**
 * This value determines if a release is external or not.
 * @member {Boolean} is_external_build
 */
PrivateReleaseDetailsResponse.prototype['is_external_build'] = undefined;

/**
 * A flag that determines whether the release's provisioning profile is still extracted or not.
 * @member {Boolean} is_provisioning_profile_syncing
 */
PrivateReleaseDetailsResponse.prototype['is_provisioning_profile_syncing'] = undefined;

/**
 * The release's minimum required operating system.
 * @member {String} min_os
 */
PrivateReleaseDetailsResponse.prototype['min_os'] = undefined;

/**
 * The release's origin
 * @member {module:model/PrivateReleaseDetailsResponse.OriginEnum} origin
 */
PrivateReleaseDetailsResponse.prototype['origin'] = undefined;

/**
 * The release's provisioning profile name.
 * @member {String} provisioning_profile_name
 */
PrivateReleaseDetailsResponse.prototype['provisioning_profile_name'] = undefined;

/**
 * The type of the provisioning profile for the requested app version.
 * @member {module:model/PrivateReleaseDetailsResponse.ProvisioningProfileTypeEnum} provisioning_profile_type
 */
PrivateReleaseDetailsResponse.prototype['provisioning_profile_type'] = undefined;

/**
 * the publishing status of the distributed release
 * @member {String} publishing_status
 */
PrivateReleaseDetailsResponse.prototype['publishing_status'] = undefined;

/**
 * The release's release notes.
 * @member {String} release_notes
 */
PrivateReleaseDetailsResponse.prototype['release_notes'] = undefined;

/**
 * The URL that hosts the secondary binary for this release, such as the apk file for aab releases.
 * @member {String} secondary_download_url
 */
PrivateReleaseDetailsResponse.prototype['secondary_download_url'] = undefined;

/**
 * The release's short version.<br> For iOS: CFBundleShortVersionString from info.plist. For Android: android:versionName from AppManifest.xml. 
 * @member {String} short_version
 */
PrivateReleaseDetailsResponse.prototype['short_version'] = undefined;

/**
 * The release's size in bytes.
 * @member {Number} size
 */
PrivateReleaseDetailsResponse.prototype['size'] = undefined;

/**
 * OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br> The release state.<br> <b>available</b>: The uploaded release has been distributed.<br> <b>unavailable</b>: The uploaded release is not visible to the user. <br> 
 * @member {module:model/PrivateReleaseDetailsResponse.StatusEnum} status
 */
PrivateReleaseDetailsResponse.prototype['status'] = undefined;

/**
 * UTC time in ISO 8601 format of the uploaded time.
 * @member {String} uploaded_at
 */
PrivateReleaseDetailsResponse.prototype['uploaded_at'] = undefined;

/**
 * The release's version.<br> For iOS: CFBundleVersion from info.plist. For Android: android:versionCode from AppManifest.xml. 
 * @member {String} version
 */
PrivateReleaseDetailsResponse.prototype['version'] = undefined;





/**
 * Allowed values for the <code>destination_type</code> property.
 * @enum {String}
 * @readonly
 */
PrivateReleaseDetailsResponse['DestinationTypeEnum'] = {

    /**
     * value: "group"
     * @const
     */
    "group": "group",

    /**
     * value: "store"
     * @const
     */
    "store": "store",

    /**
     * value: "tester"
     * @const
     */
    "tester": "tester"
};


/**
 * Allowed values for the <code>origin</code> property.
 * @enum {String}
 * @readonly
 */
PrivateReleaseDetailsResponse['OriginEnum'] = {

    /**
     * value: "hockeyapp"
     * @const
     */
    "hockeyapp": "hockeyapp",

    /**
     * value: "appcenter"
     * @const
     */
    "appcenter": "appcenter"
};


/**
 * Allowed values for the <code>provisioning_profile_type</code> property.
 * @enum {String}
 * @readonly
 */
PrivateReleaseDetailsResponse['ProvisioningProfileTypeEnum'] = {

    /**
     * value: "adhoc"
     * @const
     */
    "adhoc": "adhoc",

    /**
     * value: "enterprise"
     * @const
     */
    "enterprise": "enterprise",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
PrivateReleaseDetailsResponse['StatusEnum'] = {

    /**
     * value: "available"
     * @const
     */
    "available": "available",

    /**
     * value: "unavailable"
     * @const
     */
    "unavailable": "unavailable"
};



export default PrivateReleaseDetailsResponse;

