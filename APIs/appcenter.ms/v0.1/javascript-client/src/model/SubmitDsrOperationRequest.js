/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubmitDsrOperationRequest model module.
 * @module model/SubmitDsrOperationRequest
 * @version v0.1
 */
class SubmitDsrOperationRequest {
    /**
     * Constructs a new <code>SubmitDsrOperationRequest</code>.
     * @alias module:model/SubmitDsrOperationRequest
     */
    constructor() { 
        
        SubmitDsrOperationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubmitDsrOperationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubmitDsrOperationRequest} obj Optional instance to populate.
     * @return {module:model/SubmitDsrOperationRequest} The populated <code>SubmitDsrOperationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubmitDsrOperationRequest();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('operationId')) {
                obj['operationId'] = ApiClient.convertToType(data['operationId'], 'String');
            }
            if (data.hasOwnProperty('request')) {
                obj['request'] = ApiClient.convertToType(data['request'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubmitDsrOperationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubmitDsrOperationRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }
        // ensure the json data is a string
        if (data['operationId'] && !(typeof data['operationId'] === 'string' || data['operationId'] instanceof String)) {
            throw new Error("Expected the field `operationId` to be a primitive type in the JSON string but got " + data['operationId']);
        }
        // ensure the json data is a string
        if (data['request'] && !(typeof data['request'] === 'string' || data['request'] instanceof String)) {
            throw new Error("Expected the field `request` to be a primitive type in the JSON string but got " + data['request']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }

        return true;
    }


}



/**
 * @member {String} accountId
 */
SubmitDsrOperationRequest.prototype['accountId'] = undefined;

/**
 * @member {String} appId
 */
SubmitDsrOperationRequest.prototype['appId'] = undefined;

/**
 * The DSR operation ID provided by the GDPR coordinator. Used for tracking only.
 * @member {String} operationId
 */
SubmitDsrOperationRequest.prototype['operationId'] = undefined;

/**
 * @member {module:model/SubmitDsrOperationRequest.RequestEnum} request
 */
SubmitDsrOperationRequest.prototype['request'] = undefined;

/**
 * Request ID provided by the GDPR coordinator. Used for tracking.
 * @member {String} requestId
 */
SubmitDsrOperationRequest.prototype['requestId'] = undefined;





/**
 * Allowed values for the <code>request</code> property.
 * @enum {String}
 * @readonly
 */
SubmitDsrOperationRequest['RequestEnum'] = {

    /**
     * value: "Delete"
     * @const
     */
    "Delete": "Delete",

    /**
     * value: "Purge"
     * @const
     */
    "Purge": "Purge",

    /**
     * value: "UndoDelete"
     * @const
     */
    "UndoDelete": "UndoDelete",

    /**
     * value: "Export"
     * @const
     */
    "Export": "Export"
};



export default SubmitDsrOperationRequest;

