/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnalyticsEvents200ResponseEventsInner model module.
 * @module model/AnalyticsEvents200ResponseEventsInner
 * @version v0.1
 */
class AnalyticsEvents200ResponseEventsInner {
    /**
     * Constructs a new <code>AnalyticsEvents200ResponseEventsInner</code>.
     * @alias module:model/AnalyticsEvents200ResponseEventsInner
     */
    constructor() { 
        
        AnalyticsEvents200ResponseEventsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalyticsEvents200ResponseEventsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyticsEvents200ResponseEventsInner} obj Optional instance to populate.
     * @return {module:model/AnalyticsEvents200ResponseEventsInner} The populated <code>AnalyticsEvents200ResponseEventsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyticsEvents200ResponseEventsInner();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('count_per_device')) {
                obj['count_per_device'] = ApiClient.convertToType(data['count_per_device'], 'Number');
            }
            if (data.hasOwnProperty('count_per_session')) {
                obj['count_per_session'] = ApiClient.convertToType(data['count_per_session'], 'Number');
            }
            if (data.hasOwnProperty('device_count')) {
                obj['device_count'] = ApiClient.convertToType(data['device_count'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('previous_count')) {
                obj['previous_count'] = ApiClient.convertToType(data['previous_count'], 'Number');
            }
            if (data.hasOwnProperty('previous_device_count')) {
                obj['previous_device_count'] = ApiClient.convertToType(data['previous_device_count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyticsEvents200ResponseEventsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyticsEvents200ResponseEventsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {Number} count
 */
AnalyticsEvents200ResponseEventsInner.prototype['count'] = undefined;

/**
 * @member {Number} count_per_device
 */
AnalyticsEvents200ResponseEventsInner.prototype['count_per_device'] = undefined;

/**
 * @member {Number} count_per_session
 */
AnalyticsEvents200ResponseEventsInner.prototype['count_per_session'] = undefined;

/**
 * @member {Number} device_count
 */
AnalyticsEvents200ResponseEventsInner.prototype['device_count'] = undefined;

/**
 * @member {String} id
 */
AnalyticsEvents200ResponseEventsInner.prototype['id'] = undefined;

/**
 * @member {String} name
 */
AnalyticsEvents200ResponseEventsInner.prototype['name'] = undefined;

/**
 * The event count of previous time range of the event.
 * @member {Number} previous_count
 */
AnalyticsEvents200ResponseEventsInner.prototype['previous_count'] = undefined;

/**
 * The device count of previous time range of the event.
 * @member {Number} previous_device_count
 */
AnalyticsEvents200ResponseEventsInner.prototype['previous_device_count'] = undefined;






export default AnalyticsEvents200ResponseEventsInner;

