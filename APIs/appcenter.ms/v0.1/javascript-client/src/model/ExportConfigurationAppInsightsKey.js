/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportConfigurationAppInsightsKey model module.
 * @module model/ExportConfigurationAppInsightsKey
 * @version v0.1
 */
class ExportConfigurationAppInsightsKey {
    /**
     * Constructs a new <code>ExportConfigurationAppInsightsKey</code>.
     * Configuration for export to Application Insights resource with customer provided intrumentation key
     * @alias module:model/ExportConfigurationAppInsightsKey
     * @param type {module:model/ExportConfigurationAppInsightsKey.TypeEnum} Type of export configuration
     */
    constructor(type) { 
        
        ExportConfigurationAppInsightsKey.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['instrumentation_key'] = instrumentationKey;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>ExportConfigurationAppInsightsKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportConfigurationAppInsightsKey} obj Optional instance to populate.
     * @return {module:model/ExportConfigurationAppInsightsKey} The populated <code>ExportConfigurationAppInsightsKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportConfigurationAppInsightsKey();

            if (data.hasOwnProperty('instrumentation_key')) {
                obj['instrumentation_key'] = ApiClient.convertToType(data['instrumentation_key'], 'String');
            }
            if (data.hasOwnProperty('backfill')) {
                obj['backfill'] = ApiClient.convertToType(data['backfill'], 'Boolean');
            }
            if (data.hasOwnProperty('export_entities')) {
                obj['export_entities'] = ApiClient.convertToType(data['export_entities'], ['String']);
            }
            if (data.hasOwnProperty('resource_group')) {
                obj['resource_group'] = ApiClient.convertToType(data['resource_group'], 'String');
            }
            if (data.hasOwnProperty('resource_name')) {
                obj['resource_name'] = ApiClient.convertToType(data['resource_name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportConfigurationAppInsightsKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportConfigurationAppInsightsKey</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExportConfigurationAppInsightsKey.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['instrumentation_key'] && !(typeof data['instrumentation_key'] === 'string' || data['instrumentation_key'] instanceof String)) {
            throw new Error("Expected the field `instrumentation_key` to be a primitive type in the JSON string but got " + data['instrumentation_key']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['export_entities'])) {
            throw new Error("Expected the field `export_entities` to be an array in the JSON data but got " + data['export_entities']);
        }
        // ensure the json data is a string
        if (data['resource_group'] && !(typeof data['resource_group'] === 'string' || data['resource_group'] instanceof String)) {
            throw new Error("Expected the field `resource_group` to be a primitive type in the JSON string but got " + data['resource_group']);
        }
        // ensure the json data is a string
        if (data['resource_name'] && !(typeof data['resource_name'] === 'string' || data['resource_name'] instanceof String)) {
            throw new Error("Expected the field `resource_name` to be a primitive type in the JSON string but got " + data['resource_name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

ExportConfigurationAppInsightsKey.RequiredProperties = ["instrumentation_key", "type"];

/**
 * Instrumentation key for Application Insights resource
 * @member {String} instrumentation_key
 */
ExportConfigurationAppInsightsKey.prototype['instrumentation_key'] = undefined;

/**
 * Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation.
 * @member {Boolean} backfill
 */
ExportConfigurationAppInsightsKey.prototype['backfill'] = undefined;

/**
 * @member {Array.<module:model/ExportConfigurationAppInsightsKey.ExportEntitiesEnum>} export_entities
 */
ExportConfigurationAppInsightsKey.prototype['export_entities'] = undefined;

/**
 * The resource group name on azure
 * @member {String} resource_group
 */
ExportConfigurationAppInsightsKey.prototype['resource_group'] = undefined;

/**
 * The resource name on azure
 * @member {String} resource_name
 */
ExportConfigurationAppInsightsKey.prototype['resource_name'] = undefined;

/**
 * Type of export configuration
 * @member {module:model/ExportConfigurationAppInsightsKey.TypeEnum} type
 */
ExportConfigurationAppInsightsKey.prototype['type'] = undefined;





/**
 * Allowed values for the <code>exportEntities</code> property.
 * @enum {String}
 * @readonly
 */
ExportConfigurationAppInsightsKey['ExportEntitiesEnum'] = {

    /**
     * value: "crashes"
     * @const
     */
    "crashes": "crashes",

    /**
     * value: "errors"
     * @const
     */
    "errors": "errors",

    /**
     * value: "attachments"
     * @const
     */
    "attachments": "attachments",

    /**
     * value: "no_logs"
     * @const
     */
    "no_logs": "no_logs"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ExportConfigurationAppInsightsKey['TypeEnum'] = {

    /**
     * value: "blob_storage_connection_string"
     * @const
     */
    "blob_storage_connection_string": "blob_storage_connection_string",

    /**
     * value: "application_insights_instrumentation_key"
     * @const
     */
    "application_insights_instrumentation_key": "application_insights_instrumentation_key",

    /**
     * value: "blob_storage_linked_subscription"
     * @const
     */
    "blob_storage_linked_subscription": "blob_storage_linked_subscription",

    /**
     * value: "application_insights_linked_subscription"
     * @const
     */
    "application_insights_linked_subscription": "application_insights_linked_subscription"
};



export default ExportConfigurationAppInsightsKey;

