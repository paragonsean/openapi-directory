/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsPerDeviceCounts200ResponseSessionsPerUserInner from './AnalyticsPerDeviceCounts200ResponseSessionsPerUserInner';

/**
 * The AnalyticsPerDeviceCounts200Response model module.
 * @module model/AnalyticsPerDeviceCounts200Response
 * @version v0.1
 */
class AnalyticsPerDeviceCounts200Response {
    /**
     * Constructs a new <code>AnalyticsPerDeviceCounts200Response</code>.
     * @alias module:model/AnalyticsPerDeviceCounts200Response
     */
    constructor() { 
        
        AnalyticsPerDeviceCounts200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalyticsPerDeviceCounts200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyticsPerDeviceCounts200Response} obj Optional instance to populate.
     * @return {module:model/AnalyticsPerDeviceCounts200Response} The populated <code>AnalyticsPerDeviceCounts200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyticsPerDeviceCounts200Response();

            if (data.hasOwnProperty('average_sessions_per_user')) {
                obj['average_sessions_per_user'] = ApiClient.convertToType(data['average_sessions_per_user'], 'Number');
            }
            if (data.hasOwnProperty('previous_average_sessions_per_user')) {
                obj['previous_average_sessions_per_user'] = ApiClient.convertToType(data['previous_average_sessions_per_user'], 'Number');
            }
            if (data.hasOwnProperty('previous_total_count')) {
                obj['previous_total_count'] = ApiClient.convertToType(data['previous_total_count'], 'Number');
            }
            if (data.hasOwnProperty('sessions_per_user')) {
                obj['sessions_per_user'] = ApiClient.convertToType(data['sessions_per_user'], [AnalyticsPerDeviceCounts200ResponseSessionsPerUserInner]);
            }
            if (data.hasOwnProperty('total_count')) {
                obj['total_count'] = ApiClient.convertToType(data['total_count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyticsPerDeviceCounts200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyticsPerDeviceCounts200Response</code>.
     */
    static validateJSON(data) {
        if (data['sessions_per_user']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sessions_per_user'])) {
                throw new Error("Expected the field `sessions_per_user` to be an array in the JSON data but got " + data['sessions_per_user']);
            }
            // validate the optional field `sessions_per_user` (array)
            for (const item of data['sessions_per_user']) {
                AnalyticsPerDeviceCounts200ResponseSessionsPerUserInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Average seesion per user.
 * @member {Number} average_sessions_per_user
 */
AnalyticsPerDeviceCounts200Response.prototype['average_sessions_per_user'] = undefined;

/**
 * Previous average session per user.
 * @member {Number} previous_average_sessions_per_user
 */
AnalyticsPerDeviceCounts200Response.prototype['previous_average_sessions_per_user'] = undefined;

/**
 * Previous total count.
 * @member {Number} previous_total_count
 */
AnalyticsPerDeviceCounts200Response.prototype['previous_total_count'] = undefined;

/**
 * The session count for each interval per device.
 * @member {Array.<module:model/AnalyticsPerDeviceCounts200ResponseSessionsPerUserInner>} sessions_per_user
 */
AnalyticsPerDeviceCounts200Response.prototype['sessions_per_user'] = undefined;

/**
 * Total session per device count.
 * @member {Number} total_count
 */
AnalyticsPerDeviceCounts200Response.prototype['total_count'] = undefined;






export default AnalyticsPerDeviceCounts200Response;

