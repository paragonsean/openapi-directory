/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DistributionGroupWithUsersResponseAadGroupsInner from './DistributionGroupWithUsersResponseAadGroupsInner';
import DistributionGroupsListUsers200ResponseInner from './DistributionGroupsListUsers200ResponseInner';

/**
 * The DistributionGroupWithUsersResponse model module.
 * @module model/DistributionGroupWithUsersResponse
 * @version v0.1
 */
class DistributionGroupWithUsersResponse {
    /**
     * Constructs a new <code>DistributionGroupWithUsersResponse</code>.
     * @alias module:model/DistributionGroupWithUsersResponse
     * @param id {String} The unique ID of the distribution group
     * @param name {String} The name of the distribution group used in URLs
     * @param notifiedUserCount {Number} The count of non-pending users in the distribution group who will be notified by new releases
     * @param totalUserCount {Number} The count of users in the distribution group
     * @param users {Array.<module:model/DistributionGroupsListUsers200ResponseInner>} The distribution group users
     */
    constructor(id, name, notifiedUserCount, totalUserCount, users) { 
        
        DistributionGroupWithUsersResponse.initialize(this, id, name, notifiedUserCount, totalUserCount, users);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, notifiedUserCount, totalUserCount, users) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['notified_user_count'] = notifiedUserCount;
        obj['total_user_count'] = totalUserCount;
        obj['users'] = users;
    }

    /**
     * Constructs a <code>DistributionGroupWithUsersResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DistributionGroupWithUsersResponse} obj Optional instance to populate.
     * @return {module:model/DistributionGroupWithUsersResponse} The populated <code>DistributionGroupWithUsersResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DistributionGroupWithUsersResponse();

            if (data.hasOwnProperty('aad_groups')) {
                obj['aad_groups'] = ApiClient.convertToType(data['aad_groups'], [DistributionGroupWithUsersResponseAadGroupsInner]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_public')) {
                obj['is_public'] = ApiClient.convertToType(data['is_public'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notified_user_count')) {
                obj['notified_user_count'] = ApiClient.convertToType(data['notified_user_count'], 'Number');
            }
            if (data.hasOwnProperty('total_groups_count')) {
                obj['total_groups_count'] = ApiClient.convertToType(data['total_groups_count'], 'Number');
            }
            if (data.hasOwnProperty('total_user_count')) {
                obj['total_user_count'] = ApiClient.convertToType(data['total_user_count'], 'Number');
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], [DistributionGroupsListUsers200ResponseInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DistributionGroupWithUsersResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DistributionGroupWithUsersResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DistributionGroupWithUsersResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['aad_groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['aad_groups'])) {
                throw new Error("Expected the field `aad_groups` to be an array in the JSON data but got " + data['aad_groups']);
            }
            // validate the optional field `aad_groups` (array)
            for (const item of data['aad_groups']) {
                DistributionGroupWithUsersResponseAadGroupsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['users']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['users'])) {
                throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
            }
            // validate the optional field `users` (array)
            for (const item of data['users']) {
                DistributionGroupsListUsers200ResponseInner.validateJSON(item);
            };
        }

        return true;
    }


}

DistributionGroupWithUsersResponse.RequiredProperties = ["id", "name", "notified_user_count", "total_user_count", "users"];

/**
 * The distribution group aad groups
 * @member {Array.<module:model/DistributionGroupWithUsersResponseAadGroupsInner>} aad_groups
 */
DistributionGroupWithUsersResponse.prototype['aad_groups'] = undefined;

/**
 * The unique ID of the distribution group
 * @member {String} id
 */
DistributionGroupWithUsersResponse.prototype['id'] = undefined;

/**
 * Whether the distribution group is public
 * @member {Boolean} is_public
 */
DistributionGroupWithUsersResponse.prototype['is_public'] = undefined;

/**
 * The name of the distribution group used in URLs
 * @member {String} name
 */
DistributionGroupWithUsersResponse.prototype['name'] = undefined;

/**
 * The count of non-pending users in the distribution group who will be notified by new releases
 * @member {Number} notified_user_count
 */
DistributionGroupWithUsersResponse.prototype['notified_user_count'] = undefined;

/**
 * The count of aad groups in the distribution group
 * @member {Number} total_groups_count
 */
DistributionGroupWithUsersResponse.prototype['total_groups_count'] = undefined;

/**
 * The count of users in the distribution group
 * @member {Number} total_user_count
 */
DistributionGroupWithUsersResponse.prototype['total_user_count'] = undefined;

/**
 * The distribution group users
 * @member {Array.<module:model/DistributionGroupsListUsers200ResponseInner>} users
 */
DistributionGroupWithUsersResponse.prototype['users'] = undefined;






export default DistributionGroupWithUsersResponse;

