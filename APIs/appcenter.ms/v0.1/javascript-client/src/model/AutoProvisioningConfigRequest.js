/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutoProvisioningConfigRequest model module.
 * @module model/AutoProvisioningConfigRequest
 * @version v0.1
 */
class AutoProvisioningConfigRequest {
    /**
     * Constructs a new <code>AutoProvisioningConfigRequest</code>.
     * A request containing information for creating a Auto Provisioning Config.
     * @alias module:model/AutoProvisioningConfigRequest
     */
    constructor() { 
        
        AutoProvisioningConfigRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoProvisioningConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoProvisioningConfigRequest} obj Optional instance to populate.
     * @return {module:model/AutoProvisioningConfigRequest} The populated <code>AutoProvisioningConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoProvisioningConfigRequest();

            if (data.hasOwnProperty('allow_auto_provisioning')) {
                obj['allow_auto_provisioning'] = ApiClient.convertToType(data['allow_auto_provisioning'], 'Boolean');
            }
            if (data.hasOwnProperty('apple_developer_account_key')) {
                obj['apple_developer_account_key'] = ApiClient.convertToType(data['apple_developer_account_key'], 'String');
            }
            if (data.hasOwnProperty('apple_distribution_certificate_key')) {
                obj['apple_distribution_certificate_key'] = ApiClient.convertToType(data['apple_distribution_certificate_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoProvisioningConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoProvisioningConfigRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apple_developer_account_key'] && !(typeof data['apple_developer_account_key'] === 'string' || data['apple_developer_account_key'] instanceof String)) {
            throw new Error("Expected the field `apple_developer_account_key` to be a primitive type in the JSON string but got " + data['apple_developer_account_key']);
        }
        // ensure the json data is a string
        if (data['apple_distribution_certificate_key'] && !(typeof data['apple_distribution_certificate_key'] === 'string' || data['apple_distribution_certificate_key'] instanceof String)) {
            throw new Error("Expected the field `apple_distribution_certificate_key` to be a primitive type in the JSON string but got " + data['apple_distribution_certificate_key']);
        }

        return true;
    }


}



/**
 * When *true* enables auto provisioning
 * @member {Boolean} allow_auto_provisioning
 */
AutoProvisioningConfigRequest.prototype['allow_auto_provisioning'] = undefined;

/**
 * A key to a secret in customer-credential-store. apple_developer_account refers to the user's developer account that is used to log into https://developer.apple.com. Normally the user's email.
 * @member {String} apple_developer_account_key
 */
AutoProvisioningConfigRequest.prototype['apple_developer_account_key'] = undefined;

/**
 * A key to a secret in customer-credential-store. distribution_certificate refers to the customer's certificate (that holds the private key) that will be used to sign the app.
 * @member {String} apple_distribution_certificate_key
 */
AutoProvisioningConfigRequest.prototype['apple_distribution_certificate_key'] = undefined;






export default AutoProvisioningConfigRequest;

