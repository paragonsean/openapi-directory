/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PasswordUpdateRequest model module.
 * @module model/PasswordUpdateRequest
 * @version v0.1
 */
class PasswordUpdateRequest {
    /**
     * Constructs a new <code>PasswordUpdateRequest</code>.
     * @alias module:model/PasswordUpdateRequest
     * @param newPassword {String} The new password that will be set for the user. Needs to be at least 8 characters long and contain at least one lower- and one uppercase letter.
     */
    constructor(newPassword) { 
        
        PasswordUpdateRequest.initialize(this, newPassword);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, newPassword) { 
        obj['new_password'] = newPassword;
    }

    /**
     * Constructs a <code>PasswordUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PasswordUpdateRequest} obj Optional instance to populate.
     * @return {module:model/PasswordUpdateRequest} The populated <code>PasswordUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PasswordUpdateRequest();

            if (data.hasOwnProperty('new_password')) {
                obj['new_password'] = ApiClient.convertToType(data['new_password'], 'String');
            }
            if (data.hasOwnProperty('old_password')) {
                obj['old_password'] = ApiClient.convertToType(data['old_password'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PasswordUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PasswordUpdateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PasswordUpdateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['new_password'] && !(typeof data['new_password'] === 'string' || data['new_password'] instanceof String)) {
            throw new Error("Expected the field `new_password` to be a primitive type in the JSON string but got " + data['new_password']);
        }
        // ensure the json data is a string
        if (data['old_password'] && !(typeof data['old_password'] === 'string' || data['old_password'] instanceof String)) {
            throw new Error("Expected the field `old_password` to be a primitive type in the JSON string but got " + data['old_password']);
        }

        return true;
    }


}

PasswordUpdateRequest.RequiredProperties = ["new_password"];

/**
 * The new password that will be set for the user. Needs to be at least 8 characters long and contain at least one lower- and one uppercase letter.
 * @member {String} new_password
 */
PasswordUpdateRequest.prototype['new_password'] = undefined;

/**
 * The old password, if needed.
 * @member {String} old_password
 */
PasswordUpdateRequest.prototype['old_password'] = undefined;






export default PasswordUpdateRequest;

