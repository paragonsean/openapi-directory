/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidatedApiTokenResponseClaimsInner from './ValidatedApiTokenResponseClaimsInner';

/**
 * The ValidatedApiTokenResponse model module.
 * @module model/ValidatedApiTokenResponse
 * @version v0.1
 */
class ValidatedApiTokenResponse {
    /**
     * Constructs a new <code>ValidatedApiTokenResponse</code>.
     * @alias module:model/ValidatedApiTokenResponse
     * @param claims {Array.<module:model/ValidatedApiTokenResponseClaimsInner>} Collection of attributes that describe the principal of the specified API Token
     * @param principalId {String} The ID of the owner of the API Token (user_id or app_id)
     * @param principalType {module:model/ValidatedApiTokenResponse.PrincipalTypeEnum} Indicates the type of the principal (app or user)
     * @param tokenId {String} The token's unique id (UUID)
     * @param tokenScope {Array.<module:model/ValidatedApiTokenResponse.TokenScopeEnum>} The token's scope. A list of allowed roles.
     */
    constructor(claims, principalId, principalType, tokenId, tokenScope) { 
        
        ValidatedApiTokenResponse.initialize(this, claims, principalId, principalType, tokenId, tokenScope);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, claims, principalId, principalType, tokenId, tokenScope) { 
        obj['claims'] = claims;
        obj['principal_id'] = principalId;
        obj['principal_type'] = principalType;
        obj['token_id'] = tokenId;
        obj['token_scope'] = tokenScope;
    }

    /**
     * Constructs a <code>ValidatedApiTokenResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidatedApiTokenResponse} obj Optional instance to populate.
     * @return {module:model/ValidatedApiTokenResponse} The populated <code>ValidatedApiTokenResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidatedApiTokenResponse();

            if (data.hasOwnProperty('claims')) {
                obj['claims'] = ApiClient.convertToType(data['claims'], [ValidatedApiTokenResponseClaimsInner]);
            }
            if (data.hasOwnProperty('principal_id')) {
                obj['principal_id'] = ApiClient.convertToType(data['principal_id'], 'String');
            }
            if (data.hasOwnProperty('principal_type')) {
                obj['principal_type'] = ApiClient.convertToType(data['principal_type'], 'String');
            }
            if (data.hasOwnProperty('token_id')) {
                obj['token_id'] = ApiClient.convertToType(data['token_id'], 'String');
            }
            if (data.hasOwnProperty('token_scope')) {
                obj['token_scope'] = ApiClient.convertToType(data['token_scope'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidatedApiTokenResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidatedApiTokenResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ValidatedApiTokenResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['claims']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['claims'])) {
                throw new Error("Expected the field `claims` to be an array in the JSON data but got " + data['claims']);
            }
            // validate the optional field `claims` (array)
            for (const item of data['claims']) {
                ValidatedApiTokenResponseClaimsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['principal_id'] && !(typeof data['principal_id'] === 'string' || data['principal_id'] instanceof String)) {
            throw new Error("Expected the field `principal_id` to be a primitive type in the JSON string but got " + data['principal_id']);
        }
        // ensure the json data is a string
        if (data['principal_type'] && !(typeof data['principal_type'] === 'string' || data['principal_type'] instanceof String)) {
            throw new Error("Expected the field `principal_type` to be a primitive type in the JSON string but got " + data['principal_type']);
        }
        // ensure the json data is a string
        if (data['token_id'] && !(typeof data['token_id'] === 'string' || data['token_id'] instanceof String)) {
            throw new Error("Expected the field `token_id` to be a primitive type in the JSON string but got " + data['token_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['token_scope'])) {
            throw new Error("Expected the field `token_scope` to be an array in the JSON data but got " + data['token_scope']);
        }

        return true;
    }


}

ValidatedApiTokenResponse.RequiredProperties = ["claims", "principal_id", "principal_type", "token_id", "token_scope"];

/**
 * Collection of attributes that describe the principal of the specified API Token
 * @member {Array.<module:model/ValidatedApiTokenResponseClaimsInner>} claims
 */
ValidatedApiTokenResponse.prototype['claims'] = undefined;

/**
 * The ID of the owner of the API Token (user_id or app_id)
 * @member {String} principal_id
 */
ValidatedApiTokenResponse.prototype['principal_id'] = undefined;

/**
 * Indicates the type of the principal (app or user)
 * @member {module:model/ValidatedApiTokenResponse.PrincipalTypeEnum} principal_type
 */
ValidatedApiTokenResponse.prototype['principal_type'] = undefined;

/**
 * The token's unique id (UUID)
 * @member {String} token_id
 */
ValidatedApiTokenResponse.prototype['token_id'] = undefined;

/**
 * The token's scope. A list of allowed roles.
 * @member {Array.<module:model/ValidatedApiTokenResponse.TokenScopeEnum>} token_scope
 */
ValidatedApiTokenResponse.prototype['token_scope'] = undefined;





/**
 * Allowed values for the <code>principal_type</code> property.
 * @enum {String}
 * @readonly
 */
ValidatedApiTokenResponse['PrincipalTypeEnum'] = {

    /**
     * value: "app"
     * @const
     */
    "app": "app",

    /**
     * value: "user"
     * @const
     */
    "user": "user"
};


/**
 * Allowed values for the <code>tokenScope</code> property.
 * @enum {String}
 * @readonly
 */
ValidatedApiTokenResponse['TokenScopeEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "in_app_update"
     * @const
     */
    "in_app_update": "in_app_update",

    /**
     * value: "viewer"
     * @const
     */
    "viewer": "viewer"
};



export default ValidatedApiTokenResponse;

