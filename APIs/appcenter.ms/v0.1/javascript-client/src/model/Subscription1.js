/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SubscriptionTier from './SubscriptionTier';

/**
 * The Subscription1 model module.
 * @module model/Subscription1
 * @version v0.1
 */
class Subscription1 {
    /**
     * Constructs a new <code>Subscription1</code>.
     * Subscription information
     * @alias module:model/Subscription1
     */
    constructor() { 
        
        Subscription1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Subscription1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Subscription1} obj Optional instance to populate.
     * @return {module:model/Subscription1} The populated <code>Subscription1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Subscription1();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('concurrentDevicesLimit')) {
                obj['concurrentDevicesLimit'] = ApiClient.convertToType(data['concurrentDevicesLimit'], 'Number');
            }
            if (data.hasOwnProperty('daysLeft')) {
                obj['daysLeft'] = ApiClient.convertToType(data['daysLeft'], 'Number');
            }
            if (data.hasOwnProperty('endsAt')) {
                obj['endsAt'] = ApiClient.convertToType(data['endsAt'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('runningDevices')) {
                obj['runningDevices'] = ApiClient.convertToType(data['runningDevices'], 'Number');
            }
            if (data.hasOwnProperty('startsAt')) {
                obj['startsAt'] = ApiClient.convertToType(data['startsAt'], 'String');
            }
            if (data.hasOwnProperty('tier')) {
                obj['tier'] = SubscriptionTier.constructFromObject(data['tier']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Subscription1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Subscription1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endsAt'] && !(typeof data['endsAt'] === 'string' || data['endsAt'] instanceof String)) {
            throw new Error("Expected the field `endsAt` to be a primitive type in the JSON string but got " + data['endsAt']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['startsAt'] && !(typeof data['startsAt'] === 'string' || data['startsAt'] instanceof String)) {
            throw new Error("Expected the field `startsAt` to be a primitive type in the JSON string but got " + data['startsAt']);
        }
        // validate the optional field `tier`
        if (data['tier']) { // data not null
          SubscriptionTier.validateJSON(data['tier']);
        }

        return true;
    }


}



/**
 * Is the subscription currently active?
 * @member {Boolean} active
 */
Subscription1.prototype['active'] = undefined;

/**
 * Customer limits on concurrent devices
 * @member {Number} concurrentDevicesLimit
 */
Subscription1.prototype['concurrentDevicesLimit'] = undefined;

/**
 * The number of days left in the subscription
 * @member {Number} daysLeft
 */
Subscription1.prototype['daysLeft'] = undefined;

/**
 * The date the subscription will end or ended
 * @member {String} endsAt
 */
Subscription1.prototype['endsAt'] = undefined;

/**
 * Id of the subscription
 * @member {String} id
 */
Subscription1.prototype['id'] = undefined;

/**
 * Current device concurrency utilization
 * @member {Number} runningDevices
 */
Subscription1.prototype['runningDevices'] = undefined;

/**
 * The date the subscription began
 * @member {String} startsAt
 */
Subscription1.prototype['startsAt'] = undefined;

/**
 * @member {module:model/SubscriptionTier} tier
 */
Subscription1.prototype['tier'] = undefined;






export default Subscription1;

