/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReleaseCount model module.
 * @module model/ReleaseCount
 * @version v0.1
 */
class ReleaseCount {
    /**
     * Constructs a new <code>ReleaseCount</code>.
     * @alias module:model/ReleaseCount
     * @param releaseId {String} 
     * @param totalCount {Number} Total count of downloads. 
     * @param uniqueCount {Number} Count of unique downloads against user id. 
     */
    constructor(releaseId, totalCount, uniqueCount) { 
        
        ReleaseCount.initialize(this, releaseId, totalCount, uniqueCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, releaseId, totalCount, uniqueCount) { 
        obj['release_id'] = releaseId;
        obj['total_count'] = totalCount;
        obj['unique_count'] = uniqueCount;
    }

    /**
     * Constructs a <code>ReleaseCount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReleaseCount} obj Optional instance to populate.
     * @return {module:model/ReleaseCount} The populated <code>ReleaseCount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReleaseCount();

            if (data.hasOwnProperty('distribution_group')) {
                obj['distribution_group'] = ApiClient.convertToType(data['distribution_group'], 'String');
            }
            if (data.hasOwnProperty('release_id')) {
                obj['release_id'] = ApiClient.convertToType(data['release_id'], 'String');
            }
            if (data.hasOwnProperty('total_count')) {
                obj['total_count'] = ApiClient.convertToType(data['total_count'], 'Number');
            }
            if (data.hasOwnProperty('unique_count')) {
                obj['unique_count'] = ApiClient.convertToType(data['unique_count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReleaseCount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReleaseCount</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReleaseCount.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['distribution_group'] && !(typeof data['distribution_group'] === 'string' || data['distribution_group'] instanceof String)) {
            throw new Error("Expected the field `distribution_group` to be a primitive type in the JSON string but got " + data['distribution_group']);
        }
        // ensure the json data is a string
        if (data['release_id'] && !(typeof data['release_id'] === 'string' || data['release_id'] instanceof String)) {
            throw new Error("Expected the field `release_id` to be a primitive type in the JSON string but got " + data['release_id']);
        }

        return true;
    }


}

ReleaseCount.RequiredProperties = ["release_id", "total_count", "unique_count"];

/**
 * Distribution group queried. 
 * @member {String} distribution_group
 */
ReleaseCount.prototype['distribution_group'] = undefined;

/**
 * @member {String} release_id
 */
ReleaseCount.prototype['release_id'] = undefined;

/**
 * Total count of downloads. 
 * @member {Number} total_count
 */
ReleaseCount.prototype['total_count'] = undefined;

/**
 * Count of unique downloads against user id. 
 * @member {Number} unique_count
 */
ReleaseCount.prototype['unique_count'] = undefined;






export default ReleaseCount;

