/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostRepositoryProviderMappingRequest model module.
 * @module model/PostRepositoryProviderMappingRequest
 * @version v0.1
 */
class PostRepositoryProviderMappingRequest {
    /**
     * Constructs a new <code>PostRepositoryProviderMappingRequest</code>.
     * @alias module:model/PostRepositoryProviderMappingRequest
     * @param accountId {String} App Center account id to link to this provider and external id
     * @param externalAccountId {String} Id of user in the external provider service
     * @param provider {module:model/PostRepositoryProviderMappingRequest.ProviderEnum} Supported external providers of source control repositories
     */
    constructor(accountId, externalAccountId, provider) { 
        
        PostRepositoryProviderMappingRequest.initialize(this, accountId, externalAccountId, provider);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, externalAccountId, provider) { 
        obj['account_id'] = accountId;
        obj['external_account_id'] = externalAccountId;
        obj['provider'] = provider;
    }

    /**
     * Constructs a <code>PostRepositoryProviderMappingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostRepositoryProviderMappingRequest} obj Optional instance to populate.
     * @return {module:model/PostRepositoryProviderMappingRequest} The populated <code>PostRepositoryProviderMappingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostRepositoryProviderMappingRequest();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('external_account_id')) {
                obj['external_account_id'] = ApiClient.convertToType(data['external_account_id'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostRepositoryProviderMappingRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostRepositoryProviderMappingRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostRepositoryProviderMappingRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['external_account_id'] && !(typeof data['external_account_id'] === 'string' || data['external_account_id'] instanceof String)) {
            throw new Error("Expected the field `external_account_id` to be a primitive type in the JSON string but got " + data['external_account_id']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }

        return true;
    }


}

PostRepositoryProviderMappingRequest.RequiredProperties = ["account_id", "external_account_id", "provider"];

/**
 * App Center account id to link to this provider and external id
 * @member {String} account_id
 */
PostRepositoryProviderMappingRequest.prototype['account_id'] = undefined;

/**
 * Id of user in the external provider service
 * @member {String} external_account_id
 */
PostRepositoryProviderMappingRequest.prototype['external_account_id'] = undefined;

/**
 * Supported external providers of source control repositories
 * @member {module:model/PostRepositoryProviderMappingRequest.ProviderEnum} provider
 */
PostRepositoryProviderMappingRequest.prototype['provider'] = undefined;





/**
 * Allowed values for the <code>provider</code> property.
 * @enum {String}
 * @readonly
 */
PostRepositoryProviderMappingRequest['ProviderEnum'] = {

    /**
     * value: "github"
     * @const
     */
    "github": "github"
};



export default PostRepositoryProviderMappingRequest;

