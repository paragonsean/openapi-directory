/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CrashDetails from './CrashDetails';
import Stacktrace from './Stacktrace';

/**
 * The Crash model module.
 * @module model/Crash
 * @version v0.1
 */
class Crash {
    /**
     * Constructs a new <code>Crash</code>.
     * @alias module:model/Crash
     * @param build {String} 
     * @param crashId {String} 
     * @param device {String} 
     * @param newCrashGroupId {String} 
     * @param newCrashId {String} 
     * @param osVersion {String} 
     * @param timestamp {Date} 
     * @param userName {String} 
     * @param version {String} 
     */
    constructor(build, crashId, device, newCrashGroupId, newCrashId, osVersion, timestamp, userName, version) { 
        
        Crash.initialize(this, build, crashId, device, newCrashGroupId, newCrashId, osVersion, timestamp, userName, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, build, crashId, device, newCrashGroupId, newCrashId, osVersion, timestamp, userName, version) { 
        obj['build'] = build;
        obj['crash_id'] = crashId;
        obj['device'] = device;
        obj['new_crash_group_id'] = newCrashGroupId;
        obj['new_crash_id'] = newCrashId;
        obj['os_version'] = osVersion;
        obj['timestamp'] = timestamp;
        obj['user_name'] = userName;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>Crash</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Crash} obj Optional instance to populate.
     * @return {module:model/Crash} The populated <code>Crash</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Crash();

            if (data.hasOwnProperty('build')) {
                obj['build'] = ApiClient.convertToType(data['build'], 'String');
            }
            if (data.hasOwnProperty('crash_id')) {
                obj['crash_id'] = ApiClient.convertToType(data['crash_id'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = CrashDetails.constructFromObject(data['details']);
            }
            if (data.hasOwnProperty('device')) {
                obj['device'] = ApiClient.convertToType(data['device'], 'String');
            }
            if (data.hasOwnProperty('device_name')) {
                obj['device_name'] = ApiClient.convertToType(data['device_name'], 'String');
            }
            if (data.hasOwnProperty('display_id')) {
                obj['display_id'] = ApiClient.convertToType(data['display_id'], 'String');
            }
            if (data.hasOwnProperty('new_crash_group_id')) {
                obj['new_crash_group_id'] = ApiClient.convertToType(data['new_crash_group_id'], 'String');
            }
            if (data.hasOwnProperty('new_crash_id')) {
                obj['new_crash_id'] = ApiClient.convertToType(data['new_crash_id'], 'String');
            }
            if (data.hasOwnProperty('os_type')) {
                obj['os_type'] = ApiClient.convertToType(data['os_type'], 'String');
            }
            if (data.hasOwnProperty('os_version')) {
                obj['os_version'] = ApiClient.convertToType(data['os_version'], 'String');
            }
            if (data.hasOwnProperty('stacktrace')) {
                obj['stacktrace'] = Stacktrace.constructFromObject(data['stacktrace']);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('user_email')) {
                obj['user_email'] = ApiClient.convertToType(data['user_email'], 'String');
            }
            if (data.hasOwnProperty('user_name')) {
                obj['user_name'] = ApiClient.convertToType(data['user_name'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Crash</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Crash</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Crash.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['build'] && !(typeof data['build'] === 'string' || data['build'] instanceof String)) {
            throw new Error("Expected the field `build` to be a primitive type in the JSON string but got " + data['build']);
        }
        // ensure the json data is a string
        if (data['crash_id'] && !(typeof data['crash_id'] === 'string' || data['crash_id'] instanceof String)) {
            throw new Error("Expected the field `crash_id` to be a primitive type in the JSON string but got " + data['crash_id']);
        }
        // validate the optional field `details`
        if (data['details']) { // data not null
          CrashDetails.validateJSON(data['details']);
        }
        // ensure the json data is a string
        if (data['device'] && !(typeof data['device'] === 'string' || data['device'] instanceof String)) {
            throw new Error("Expected the field `device` to be a primitive type in the JSON string but got " + data['device']);
        }
        // ensure the json data is a string
        if (data['device_name'] && !(typeof data['device_name'] === 'string' || data['device_name'] instanceof String)) {
            throw new Error("Expected the field `device_name` to be a primitive type in the JSON string but got " + data['device_name']);
        }
        // ensure the json data is a string
        if (data['display_id'] && !(typeof data['display_id'] === 'string' || data['display_id'] instanceof String)) {
            throw new Error("Expected the field `display_id` to be a primitive type in the JSON string but got " + data['display_id']);
        }
        // ensure the json data is a string
        if (data['new_crash_group_id'] && !(typeof data['new_crash_group_id'] === 'string' || data['new_crash_group_id'] instanceof String)) {
            throw new Error("Expected the field `new_crash_group_id` to be a primitive type in the JSON string but got " + data['new_crash_group_id']);
        }
        // ensure the json data is a string
        if (data['new_crash_id'] && !(typeof data['new_crash_id'] === 'string' || data['new_crash_id'] instanceof String)) {
            throw new Error("Expected the field `new_crash_id` to be a primitive type in the JSON string but got " + data['new_crash_id']);
        }
        // ensure the json data is a string
        if (data['os_type'] && !(typeof data['os_type'] === 'string' || data['os_type'] instanceof String)) {
            throw new Error("Expected the field `os_type` to be a primitive type in the JSON string but got " + data['os_type']);
        }
        // ensure the json data is a string
        if (data['os_version'] && !(typeof data['os_version'] === 'string' || data['os_version'] instanceof String)) {
            throw new Error("Expected the field `os_version` to be a primitive type in the JSON string but got " + data['os_version']);
        }
        // validate the optional field `stacktrace`
        if (data['stacktrace']) { // data not null
          Stacktrace.validateJSON(data['stacktrace']);
        }
        // ensure the json data is a string
        if (data['user_email'] && !(typeof data['user_email'] === 'string' || data['user_email'] instanceof String)) {
            throw new Error("Expected the field `user_email` to be a primitive type in the JSON string but got " + data['user_email']);
        }
        // ensure the json data is a string
        if (data['user_name'] && !(typeof data['user_name'] === 'string' || data['user_name'] instanceof String)) {
            throw new Error("Expected the field `user_name` to be a primitive type in the JSON string but got " + data['user_name']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

Crash.RequiredProperties = ["build", "crash_id", "device", "new_crash_group_id", "new_crash_id", "os_version", "timestamp", "user_name", "version"];

/**
 * 
 * @member {String} build
 */
Crash.prototype['build'] = undefined;

/**
 * 
 * @member {String} crash_id
 */
Crash.prototype['crash_id'] = undefined;

/**
 * @member {module:model/CrashDetails} details
 */
Crash.prototype['details'] = undefined;

/**
 * 
 * @member {String} device
 */
Crash.prototype['device'] = undefined;

/**
 * 
 * @member {String} device_name
 */
Crash.prototype['device_name'] = undefined;

/**
 * @member {String} display_id
 */
Crash.prototype['display_id'] = undefined;

/**
 * 
 * @member {String} new_crash_group_id
 */
Crash.prototype['new_crash_group_id'] = undefined;

/**
 * 
 * @member {String} new_crash_id
 */
Crash.prototype['new_crash_id'] = undefined;

/**
 * 
 * @member {String} os_type
 */
Crash.prototype['os_type'] = undefined;

/**
 * 
 * @member {String} os_version
 */
Crash.prototype['os_version'] = undefined;

/**
 * @member {module:model/Stacktrace} stacktrace
 */
Crash.prototype['stacktrace'] = undefined;

/**
 * @member {Date} timestamp
 */
Crash.prototype['timestamp'] = undefined;

/**
 * 
 * @member {String} user_email
 */
Crash.prototype['user_email'] = undefined;

/**
 * 
 * @member {String} user_name
 */
Crash.prototype['user_name'] = undefined;

/**
 * 
 * @member {String} version
 */
Crash.prototype['version'] = undefined;






export default Crash;

