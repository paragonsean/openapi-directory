/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileAsset model module.
 * @module model/FileAsset
 * @version v0.1
 */
class FileAsset {
    /**
     * Constructs a new <code>FileAsset</code>.
     * @alias module:model/FileAsset
     */
    constructor() { 
        
        FileAsset.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileAsset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileAsset} obj Optional instance to populate.
     * @return {module:model/FileAsset} The populated <code>FileAsset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileAsset();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('uploadDomain')) {
                obj['uploadDomain'] = ApiClient.convertToType(data['uploadDomain'], 'String');
            }
            if (data.hasOwnProperty('uploadWindowLocation')) {
                obj['uploadWindowLocation'] = ApiClient.convertToType(data['uploadWindowLocation'], 'String');
            }
            if (data.hasOwnProperty('urlEncodedToken')) {
                obj['urlEncodedToken'] = ApiClient.convertToType(data['urlEncodedToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileAsset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileAsset</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['uploadDomain'] && !(typeof data['uploadDomain'] === 'string' || data['uploadDomain'] instanceof String)) {
            throw new Error("Expected the field `uploadDomain` to be a primitive type in the JSON string but got " + data['uploadDomain']);
        }
        // ensure the json data is a string
        if (data['uploadWindowLocation'] && !(typeof data['uploadWindowLocation'] === 'string' || data['uploadWindowLocation'] instanceof String)) {
            throw new Error("Expected the field `uploadWindowLocation` to be a primitive type in the JSON string but got " + data['uploadWindowLocation']);
        }
        // ensure the json data is a string
        if (data['urlEncodedToken'] && !(typeof data['urlEncodedToken'] === 'string' || data['urlEncodedToken'] instanceof String)) {
            throw new Error("Expected the field `urlEncodedToken` to be a primitive type in the JSON string but got " + data['urlEncodedToken']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
FileAsset.prototype['id'] = undefined;

/**
 * @member {String} location
 */
FileAsset.prototype['location'] = undefined;

/**
 * @member {String} token
 */
FileAsset.prototype['token'] = undefined;

/**
 * @member {String} uploadDomain
 */
FileAsset.prototype['uploadDomain'] = undefined;

/**
 * @member {String} uploadWindowLocation
 */
FileAsset.prototype['uploadWindowLocation'] = undefined;

/**
 * @member {String} urlEncodedToken
 */
FileAsset.prototype['urlEncodedToken'] = undefined;






export default FileAsset;

