/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CrashGroupsList200ResponseCrashGroupsInnerReasonFrame from './CrashGroupsList200ResponseCrashGroupsInnerReasonFrame';

/**
 * The CrashGroup model module.
 * @module model/CrashGroup
 * @version v0.1
 */
class CrashGroup {
    /**
     * Constructs a new <code>CrashGroup</code>.
     * @alias module:model/CrashGroup
     * @param annotation {String} 
     * @param appVersion {String} 
     * @param build {String} 
     * @param count {Number} 
     * @param crashGroupId {String} 
     * @param crashReason {String} 
     * @param displayId {String} 
     * @param fatal {Boolean} Crash or handled exception
     * @param firstOccurrence {Date} 
     * @param lastOccurrence {Date} 
     * @param newCrashGroupId {String} 
     * @param status {module:model/CrashGroup.StatusEnum} 
     */
    constructor(annotation, appVersion, build, count, crashGroupId, crashReason, displayId, fatal, firstOccurrence, lastOccurrence, newCrashGroupId, status) { 
        
        CrashGroup.initialize(this, annotation, appVersion, build, count, crashGroupId, crashReason, displayId, fatal, firstOccurrence, lastOccurrence, newCrashGroupId, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, annotation, appVersion, build, count, crashGroupId, crashReason, displayId, fatal, firstOccurrence, lastOccurrence, newCrashGroupId, status) { 
        obj['annotation'] = annotation;
        obj['app_version'] = appVersion;
        obj['build'] = build;
        obj['count'] = count;
        obj['crash_group_id'] = crashGroupId;
        obj['crash_reason'] = crashReason;
        obj['display_id'] = displayId;
        obj['fatal'] = fatal;
        obj['first_occurrence'] = firstOccurrence;
        obj['last_occurrence'] = lastOccurrence;
        obj['new_crash_group_id'] = newCrashGroupId;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>CrashGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrashGroup} obj Optional instance to populate.
     * @return {module:model/CrashGroup} The populated <code>CrashGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrashGroup();

            if (data.hasOwnProperty('annotation')) {
                obj['annotation'] = ApiClient.convertToType(data['annotation'], 'String');
            }
            if (data.hasOwnProperty('app_version')) {
                obj['app_version'] = ApiClient.convertToType(data['app_version'], 'String');
            }
            if (data.hasOwnProperty('build')) {
                obj['build'] = ApiClient.convertToType(data['build'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('crash_group_id')) {
                obj['crash_group_id'] = ApiClient.convertToType(data['crash_group_id'], 'String');
            }
            if (data.hasOwnProperty('crash_reason')) {
                obj['crash_reason'] = ApiClient.convertToType(data['crash_reason'], 'String');
            }
            if (data.hasOwnProperty('display_id')) {
                obj['display_id'] = ApiClient.convertToType(data['display_id'], 'String');
            }
            if (data.hasOwnProperty('exception')) {
                obj['exception'] = ApiClient.convertToType(data['exception'], 'String');
            }
            if (data.hasOwnProperty('fatal')) {
                obj['fatal'] = ApiClient.convertToType(data['fatal'], 'Boolean');
            }
            if (data.hasOwnProperty('first_occurrence')) {
                obj['first_occurrence'] = ApiClient.convertToType(data['first_occurrence'], 'Date');
            }
            if (data.hasOwnProperty('impacted_users')) {
                obj['impacted_users'] = ApiClient.convertToType(data['impacted_users'], 'Number');
            }
            if (data.hasOwnProperty('last_occurrence')) {
                obj['last_occurrence'] = ApiClient.convertToType(data['last_occurrence'], 'Date');
            }
            if (data.hasOwnProperty('new_crash_group_id')) {
                obj['new_crash_group_id'] = ApiClient.convertToType(data['new_crash_group_id'], 'String');
            }
            if (data.hasOwnProperty('reason_frame')) {
                obj['reason_frame'] = CrashGroupsList200ResponseCrashGroupsInnerReasonFrame.constructFromObject(data['reason_frame']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrashGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrashGroup</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CrashGroup.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['annotation'] && !(typeof data['annotation'] === 'string' || data['annotation'] instanceof String)) {
            throw new Error("Expected the field `annotation` to be a primitive type in the JSON string but got " + data['annotation']);
        }
        // ensure the json data is a string
        if (data['app_version'] && !(typeof data['app_version'] === 'string' || data['app_version'] instanceof String)) {
            throw new Error("Expected the field `app_version` to be a primitive type in the JSON string but got " + data['app_version']);
        }
        // ensure the json data is a string
        if (data['build'] && !(typeof data['build'] === 'string' || data['build'] instanceof String)) {
            throw new Error("Expected the field `build` to be a primitive type in the JSON string but got " + data['build']);
        }
        // ensure the json data is a string
        if (data['crash_group_id'] && !(typeof data['crash_group_id'] === 'string' || data['crash_group_id'] instanceof String)) {
            throw new Error("Expected the field `crash_group_id` to be a primitive type in the JSON string but got " + data['crash_group_id']);
        }
        // ensure the json data is a string
        if (data['crash_reason'] && !(typeof data['crash_reason'] === 'string' || data['crash_reason'] instanceof String)) {
            throw new Error("Expected the field `crash_reason` to be a primitive type in the JSON string but got " + data['crash_reason']);
        }
        // ensure the json data is a string
        if (data['display_id'] && !(typeof data['display_id'] === 'string' || data['display_id'] instanceof String)) {
            throw new Error("Expected the field `display_id` to be a primitive type in the JSON string but got " + data['display_id']);
        }
        // ensure the json data is a string
        if (data['exception'] && !(typeof data['exception'] === 'string' || data['exception'] instanceof String)) {
            throw new Error("Expected the field `exception` to be a primitive type in the JSON string but got " + data['exception']);
        }
        // ensure the json data is a string
        if (data['new_crash_group_id'] && !(typeof data['new_crash_group_id'] === 'string' || data['new_crash_group_id'] instanceof String)) {
            throw new Error("Expected the field `new_crash_group_id` to be a primitive type in the JSON string but got " + data['new_crash_group_id']);
        }
        // validate the optional field `reason_frame`
        if (data['reason_frame']) { // data not null
          CrashGroupsList200ResponseCrashGroupsInnerReasonFrame.validateJSON(data['reason_frame']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

CrashGroup.RequiredProperties = ["annotation", "app_version", "build", "count", "crash_group_id", "crash_reason", "display_id", "fatal", "first_occurrence", "last_occurrence", "new_crash_group_id", "status"];

/**
 * @member {String} annotation
 */
CrashGroup.prototype['annotation'] = undefined;

/**
 * @member {String} app_version
 */
CrashGroup.prototype['app_version'] = undefined;

/**
 * @member {String} build
 */
CrashGroup.prototype['build'] = undefined;

/**
 * @member {Number} count
 */
CrashGroup.prototype['count'] = undefined;

/**
 * @member {String} crash_group_id
 */
CrashGroup.prototype['crash_group_id'] = undefined;

/**
 * @member {String} crash_reason
 */
CrashGroup.prototype['crash_reason'] = undefined;

/**
 * @member {String} display_id
 */
CrashGroup.prototype['display_id'] = undefined;

/**
 * @member {String} exception
 */
CrashGroup.prototype['exception'] = undefined;

/**
 * Crash or handled exception
 * @member {Boolean} fatal
 */
CrashGroup.prototype['fatal'] = undefined;

/**
 * @member {Date} first_occurrence
 */
CrashGroup.prototype['first_occurrence'] = undefined;

/**
 * @member {Number} impacted_users
 */
CrashGroup.prototype['impacted_users'] = undefined;

/**
 * @member {Date} last_occurrence
 */
CrashGroup.prototype['last_occurrence'] = undefined;

/**
 * @member {String} new_crash_group_id
 */
CrashGroup.prototype['new_crash_group_id'] = undefined;

/**
 * @member {module:model/CrashGroupsList200ResponseCrashGroupsInnerReasonFrame} reason_frame
 */
CrashGroup.prototype['reason_frame'] = undefined;

/**
 * @member {module:model/CrashGroup.StatusEnum} status
 */
CrashGroup.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
CrashGroup['StatusEnum'] = {

    /**
     * value: "open"
     * @const
     */
    "open": "open",

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed",

    /**
     * value: "ignored"
     * @const
     */
    "ignored": "ignored"
};



export default CrashGroup;

