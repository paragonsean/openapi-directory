/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInnerArchiveProject from './BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInnerArchiveProject';

/**
 * The BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner model module.
 * @module model/BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner
 * @version v0.1
 */
class BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner {
    /**
     * Constructs a new <code>BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner</code>.
     * @alias module:model/BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner
     * @param hasTestAction {Boolean} Does scheme have a test action?
     * @param name {String} Scheme name
     */
    constructor(hasTestAction, name) { 
        
        BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner.initialize(this, hasTestAction, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hasTestAction, name) { 
        obj['hasTestAction'] = hasTestAction;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner} obj Optional instance to populate.
     * @return {module:model/BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner} The populated <code>BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner();

            if (data.hasOwnProperty('archiveConfiguration')) {
                obj['archiveConfiguration'] = ApiClient.convertToType(data['archiveConfiguration'], 'String');
            }
            if (data.hasOwnProperty('archiveProject')) {
                obj['archiveProject'] = BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInnerArchiveProject.constructFromObject(data['archiveProject']);
            }
            if (data.hasOwnProperty('hasTestAction')) {
                obj['hasTestAction'] = ApiClient.convertToType(data['hasTestAction'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['archiveConfiguration'] && !(typeof data['archiveConfiguration'] === 'string' || data['archiveConfiguration'] instanceof String)) {
            throw new Error("Expected the field `archiveConfiguration` to be a primitive type in the JSON string but got " + data['archiveConfiguration']);
        }
        // validate the optional field `archiveProject`
        if (data['archiveProject']) { // data not null
          BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInnerArchiveProject.validateJSON(data['archiveProject']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner.RequiredProperties = ["hasTestAction", "name"];

/**
 * Build configuration set in Archive action
 * @member {String} archiveConfiguration
 */
BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner.prototype['archiveConfiguration'] = undefined;

/**
 * @member {module:model/BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInnerArchiveProject} archiveProject
 */
BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner.prototype['archiveProject'] = undefined;

/**
 * Does scheme have a test action?
 * @member {Boolean} hasTestAction
 */
BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner.prototype['hasTestAction'] = undefined;

/**
 * Scheme name
 * @member {String} name
 */
BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner.prototype['name'] = undefined;






export default BuildsListToolsetProjects200ResponseXcodeXcodeSchemeContainersInnerSharedSchemesInner;

