/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsEventPerDeviceCount200ResponseCountPerDeviceInner from './AnalyticsEventPerDeviceCount200ResponseCountPerDeviceInner';

/**
 * The EventCountPerDevice model module.
 * @module model/EventCountPerDevice
 * @version v0.1
 */
class EventCountPerDevice {
    /**
     * Constructs a new <code>EventCountPerDevice</code>.
     * @alias module:model/EventCountPerDevice
     */
    constructor() { 
        
        EventCountPerDevice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventCountPerDevice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventCountPerDevice} obj Optional instance to populate.
     * @return {module:model/EventCountPerDevice} The populated <code>EventCountPerDevice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventCountPerDevice();

            if (data.hasOwnProperty('avg_count_per_device')) {
                obj['avg_count_per_device'] = ApiClient.convertToType(data['avg_count_per_device'], 'Number');
            }
            if (data.hasOwnProperty('count_per_device')) {
                obj['count_per_device'] = ApiClient.convertToType(data['count_per_device'], [AnalyticsEventPerDeviceCount200ResponseCountPerDeviceInner]);
            }
            if (data.hasOwnProperty('previous_avg_count_per_device')) {
                obj['previous_avg_count_per_device'] = ApiClient.convertToType(data['previous_avg_count_per_device'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventCountPerDevice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventCountPerDevice</code>.
     */
    static validateJSON(data) {
        if (data['count_per_device']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['count_per_device'])) {
                throw new Error("Expected the field `count_per_device` to be an array in the JSON data but got " + data['count_per_device']);
            }
            // validate the optional field `count_per_device` (array)
            for (const item of data['count_per_device']) {
                AnalyticsEventPerDeviceCount200ResponseCountPerDeviceInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} avg_count_per_device
 */
EventCountPerDevice.prototype['avg_count_per_device'] = undefined;

/**
 * @member {Array.<module:model/AnalyticsEventPerDeviceCount200ResponseCountPerDeviceInner>} count_per_device
 */
EventCountPerDevice.prototype['count_per_device'] = undefined;

/**
 * @member {Number} previous_avg_count_per_device
 */
EventCountPerDevice.prototype['previous_avg_count_per_device'] = undefined;






export default EventCountPerDevice;

