/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillingInformationSearchResultsInner model module.
 * @module model/BillingInformationSearchResultsInner
 * @version v0.1
 */
class BillingInformationSearchResultsInner {
    /**
     * Constructs a new <code>BillingInformationSearchResultsInner</code>.
     * @alias module:model/BillingInformationSearchResultsInner
     */
    constructor() { 
        
        BillingInformationSearchResultsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingInformationSearchResultsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingInformationSearchResultsInner} obj Optional instance to populate.
     * @return {module:model/BillingInformationSearchResultsInner} The populated <code>BillingInformationSearchResultsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingInformationSearchResultsInner();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('accountName')) {
                obj['accountName'] = ApiClient.convertToType(data['accountName'], 'String');
            }
            if (data.hasOwnProperty('billingInternalAccountId')) {
                obj['billingInternalAccountId'] = ApiClient.convertToType(data['billingInternalAccountId'], 'String');
            }
            if (data.hasOwnProperty('buildPlan')) {
                obj['buildPlan'] = ApiClient.convertToType(data['buildPlan'], 'String');
            }
            if (data.hasOwnProperty('testPlan')) {
                obj['testPlan'] = ApiClient.convertToType(data['testPlan'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingInformationSearchResultsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingInformationSearchResultsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['accountName'] && !(typeof data['accountName'] === 'string' || data['accountName'] instanceof String)) {
            throw new Error("Expected the field `accountName` to be a primitive type in the JSON string but got " + data['accountName']);
        }
        // ensure the json data is a string
        if (data['billingInternalAccountId'] && !(typeof data['billingInternalAccountId'] === 'string' || data['billingInternalAccountId'] instanceof String)) {
            throw new Error("Expected the field `billingInternalAccountId` to be a primitive type in the JSON string but got " + data['billingInternalAccountId']);
        }
        // ensure the json data is a string
        if (data['buildPlan'] && !(typeof data['buildPlan'] === 'string' || data['buildPlan'] instanceof String)) {
            throw new Error("Expected the field `buildPlan` to be a primitive type in the JSON string but got " + data['buildPlan']);
        }
        // ensure the json data is a string
        if (data['testPlan'] && !(typeof data['testPlan'] === 'string' || data['testPlan'] instanceof String)) {
            throw new Error("Expected the field `testPlan` to be a primitive type in the JSON string but got " + data['testPlan']);
        }

        return true;
    }


}



/**
 * The Account ID
 * @member {String} accountId
 */
BillingInformationSearchResultsInner.prototype['accountId'] = undefined;

/**
 * The Account Name
 * @member {String} accountName
 */
BillingInformationSearchResultsInner.prototype['accountName'] = undefined;

/**
 * The Billing Internal Account ID
 * @member {String} billingInternalAccountId
 */
BillingInformationSearchResultsInner.prototype['billingInternalAccountId'] = undefined;

/**
 * The ID of the Build Billing Plan
 * @member {String} buildPlan
 */
BillingInformationSearchResultsInner.prototype['buildPlan'] = undefined;

/**
 * The ID of the Test Billing Plan
 * @member {String} testPlan
 */
BillingInformationSearchResultsInner.prototype['testPlan'] = undefined;






export default BillingInformationSearchResultsInner;

