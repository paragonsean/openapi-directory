/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResignInfo model module.
 * @module model/ResignInfo
 * @version v0.1
 */
class ResignInfo {
    /**
     * Constructs a new <code>ResignInfo</code>.
     * The information for a resign attempt.
     * @alias module:model/ResignInfo
     */
    constructor() { 
        
        ResignInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResignInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResignInfo} obj Optional instance to populate.
     * @return {module:model/ResignInfo} The populated <code>ResignInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResignInfo();

            if (data.hasOwnProperty('certificate_expiration')) {
                obj['certificate_expiration'] = ApiClient.convertToType(data['certificate_expiration'], 'String');
            }
            if (data.hasOwnProperty('certificate_name')) {
                obj['certificate_name'] = ApiClient.convertToType(data['certificate_name'], 'String');
            }
            if (data.hasOwnProperty('group_name')) {
                obj['group_name'] = ApiClient.convertToType(data['group_name'], 'String');
            }
            if (data.hasOwnProperty('profile_name')) {
                obj['profile_name'] = ApiClient.convertToType(data['profile_name'], 'String');
            }
            if (data.hasOwnProperty('profile_type')) {
                obj['profile_type'] = ApiClient.convertToType(data['profile_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResignInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResignInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['certificate_expiration'] && !(typeof data['certificate_expiration'] === 'string' || data['certificate_expiration'] instanceof String)) {
            throw new Error("Expected the field `certificate_expiration` to be a primitive type in the JSON string but got " + data['certificate_expiration']);
        }
        // ensure the json data is a string
        if (data['certificate_name'] && !(typeof data['certificate_name'] === 'string' || data['certificate_name'] instanceof String)) {
            throw new Error("Expected the field `certificate_name` to be a primitive type in the JSON string but got " + data['certificate_name']);
        }
        // ensure the json data is a string
        if (data['group_name'] && !(typeof data['group_name'] === 'string' || data['group_name'] instanceof String)) {
            throw new Error("Expected the field `group_name` to be a primitive type in the JSON string but got " + data['group_name']);
        }
        // ensure the json data is a string
        if (data['profile_name'] && !(typeof data['profile_name'] === 'string' || data['profile_name'] instanceof String)) {
            throw new Error("Expected the field `profile_name` to be a primitive type in the JSON string but got " + data['profile_name']);
        }
        // ensure the json data is a string
        if (data['profile_type'] && !(typeof data['profile_type'] === 'string' || data['profile_type'] instanceof String)) {
            throw new Error("Expected the field `profile_type` to be a primitive type in the JSON string but got " + data['profile_type']);
        }

        return true;
    }


}



/**
 * The expiration date of the certificate used for the resign attempt
 * @member {String} certificate_expiration
 */
ResignInfo.prototype['certificate_expiration'] = undefined;

/**
 * The name of the certificate used for the resign attempt
 * @member {String} certificate_name
 */
ResignInfo.prototype['certificate_name'] = undefined;

/**
 * The group name of the resign attempt
 * @member {String} group_name
 */
ResignInfo.prototype['group_name'] = undefined;

/**
 * The provisioning profile name of group for the given resign attempt
 * @member {String} profile_name
 */
ResignInfo.prototype['profile_name'] = undefined;

/**
 * The provisioning profile type of group for the given resign attempt
 * @member {String} profile_type
 */
ResignInfo.prototype['profile_type'] = undefined;






export default ResignInfo;

