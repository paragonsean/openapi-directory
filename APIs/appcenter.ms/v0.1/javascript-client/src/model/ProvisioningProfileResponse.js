/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProvisioningProfileResponse model module.
 * @module model/ProvisioningProfileResponse
 * @version v0.1
 */
class ProvisioningProfileResponse {
    /**
     * Constructs a new <code>ProvisioningProfileResponse</code>.
     * A response containing information about an iOS provisioning profile.
     * @alias module:model/ProvisioningProfileResponse
     * @param provisioningProfileType {module:model/ProvisioningProfileResponse.ProvisioningProfileTypeEnum} 
     */
    constructor(provisioningProfileType) { 
        
        ProvisioningProfileResponse.initialize(this, provisioningProfileType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, provisioningProfileType) { 
        obj['provisioning_profile_type'] = provisioningProfileType;
    }

    /**
     * Constructs a <code>ProvisioningProfileResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvisioningProfileResponse} obj Optional instance to populate.
     * @return {module:model/ProvisioningProfileResponse} The populated <code>ProvisioningProfileResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvisioningProfileResponse();

            if (data.hasOwnProperty('appex_profiles')) {
                obj['appex_profiles'] = ApiClient.convertToType(data['appex_profiles'], [ProvisioningProfileResponse]);
            }
            if (data.hasOwnProperty('provisioning_bundle_id')) {
                obj['provisioning_bundle_id'] = ApiClient.convertToType(data['provisioning_bundle_id'], 'String');
            }
            if (data.hasOwnProperty('provisioning_profile_name')) {
                obj['provisioning_profile_name'] = ApiClient.convertToType(data['provisioning_profile_name'], 'String');
            }
            if (data.hasOwnProperty('provisioning_profile_type')) {
                obj['provisioning_profile_type'] = ApiClient.convertToType(data['provisioning_profile_type'], 'String');
            }
            if (data.hasOwnProperty('team_identifier')) {
                obj['team_identifier'] = ApiClient.convertToType(data['team_identifier'], 'String');
            }
            if (data.hasOwnProperty('udids')) {
                obj['udids'] = ApiClient.convertToType(data['udids'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvisioningProfileResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvisioningProfileResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProvisioningProfileResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['appex_profiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['appex_profiles'])) {
                throw new Error("Expected the field `appex_profiles` to be an array in the JSON data but got " + data['appex_profiles']);
            }
            // validate the optional field `appex_profiles` (array)
            for (const item of data['appex_profiles']) {
                ProvisioningProfileResponse.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['provisioning_bundle_id'] && !(typeof data['provisioning_bundle_id'] === 'string' || data['provisioning_bundle_id'] instanceof String)) {
            throw new Error("Expected the field `provisioning_bundle_id` to be a primitive type in the JSON string but got " + data['provisioning_bundle_id']);
        }
        // ensure the json data is a string
        if (data['provisioning_profile_name'] && !(typeof data['provisioning_profile_name'] === 'string' || data['provisioning_profile_name'] instanceof String)) {
            throw new Error("Expected the field `provisioning_profile_name` to be a primitive type in the JSON string but got " + data['provisioning_profile_name']);
        }
        // ensure the json data is a string
        if (data['provisioning_profile_type'] && !(typeof data['provisioning_profile_type'] === 'string' || data['provisioning_profile_type'] instanceof String)) {
            throw new Error("Expected the field `provisioning_profile_type` to be a primitive type in the JSON string but got " + data['provisioning_profile_type']);
        }
        // ensure the json data is a string
        if (data['team_identifier'] && !(typeof data['team_identifier'] === 'string' || data['team_identifier'] instanceof String)) {
            throw new Error("Expected the field `team_identifier` to be a primitive type in the JSON string but got " + data['team_identifier']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['udids'])) {
            throw new Error("Expected the field `udids` to be an array in the JSON data but got " + data['udids']);
        }

        return true;
    }


}

ProvisioningProfileResponse.RequiredProperties = ["provisioning_profile_type"];

/**
 * Array of provisioning profiles for any app extensions
 * @member {Array.<module:model/ProvisioningProfileResponse>} appex_profiles
 */
ProvisioningProfileResponse.prototype['appex_profiles'] = undefined;

/**
 * The bundle identifier associated with the profile.
 * @member {String} provisioning_bundle_id
 */
ProvisioningProfileResponse.prototype['provisioning_bundle_id'] = undefined;

/**
 * The name of the provisioning profile.
 * @member {String} provisioning_profile_name
 */
ProvisioningProfileResponse.prototype['provisioning_profile_name'] = undefined;

/**
 * @member {module:model/ProvisioningProfileResponse.ProvisioningProfileTypeEnum} provisioning_profile_type
 */
ProvisioningProfileResponse.prototype['provisioning_profile_type'] = undefined;

/**
 * The team identifier.
 * @member {String} team_identifier
 */
ProvisioningProfileResponse.prototype['team_identifier'] = undefined;

/**
 * @member {Array.<String>} udids
 */
ProvisioningProfileResponse.prototype['udids'] = undefined;





/**
 * Allowed values for the <code>provisioning_profile_type</code> property.
 * @enum {String}
 * @readonly
 */
ProvisioningProfileResponse['ProvisioningProfileTypeEnum'] = {

    /**
     * value: "adhoc"
     * @const
     */
    "adhoc": "adhoc",

    /**
     * value: "enterprise"
     * @const
     */
    "enterprise": "enterprise",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default ProvisioningProfileResponse;

