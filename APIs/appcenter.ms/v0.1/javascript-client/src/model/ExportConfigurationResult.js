/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExportConfigurationsList200ResponseValuesInnerExportConfiguration from './ExportConfigurationsList200ResponseValuesInnerExportConfiguration';

/**
 * The ExportConfigurationResult model module.
 * @module model/ExportConfigurationResult
 * @version v0.1
 */
class ExportConfigurationResult {
    /**
     * Constructs a new <code>ExportConfigurationResult</code>.
     * Export configuration result
     * @alias module:model/ExportConfigurationResult
     * @param creationTime {String} Creation time in ISO 8601 format
     * @param exportType {module:model/ExportConfigurationResult.ExportTypeEnum} Target resource type of export configuration
     * @param id {String} Export configuration id
     * @param state {module:model/ExportConfigurationResult.StateEnum} State of the export job
     */
    constructor(creationTime, exportType, id, state) { 
        
        ExportConfigurationResult.initialize(this, creationTime, exportType, id, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, creationTime, exportType, id, state) { 
        obj['creation_time'] = creationTime;
        obj['export_type'] = exportType;
        obj['id'] = id;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>ExportConfigurationResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportConfigurationResult} obj Optional instance to populate.
     * @return {module:model/ExportConfigurationResult} The populated <code>ExportConfigurationResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportConfigurationResult();

            if (data.hasOwnProperty('creation_time')) {
                obj['creation_time'] = ApiClient.convertToType(data['creation_time'], 'String');
            }
            if (data.hasOwnProperty('export_configuration')) {
                obj['export_configuration'] = ExportConfigurationsList200ResponseValuesInnerExportConfiguration.constructFromObject(data['export_configuration']);
            }
            if (data.hasOwnProperty('export_entities')) {
                obj['export_entities'] = ApiClient.convertToType(data['export_entities'], ['String']);
            }
            if (data.hasOwnProperty('export_type')) {
                obj['export_type'] = ApiClient.convertToType(data['export_type'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('last_run_time')) {
                obj['last_run_time'] = ApiClient.convertToType(data['last_run_time'], 'String');
            }
            if (data.hasOwnProperty('resource_group')) {
                obj['resource_group'] = ApiClient.convertToType(data['resource_group'], 'String');
            }
            if (data.hasOwnProperty('resource_name')) {
                obj['resource_name'] = ApiClient.convertToType(data['resource_name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('state_info')) {
                obj['state_info'] = ApiClient.convertToType(data['state_info'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportConfigurationResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportConfigurationResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExportConfigurationResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['creation_time'] && !(typeof data['creation_time'] === 'string' || data['creation_time'] instanceof String)) {
            throw new Error("Expected the field `creation_time` to be a primitive type in the JSON string but got " + data['creation_time']);
        }
        // validate the optional field `export_configuration`
        if (data['export_configuration']) { // data not null
          ExportConfigurationsList200ResponseValuesInnerExportConfiguration.validateJSON(data['export_configuration']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['export_entities'])) {
            throw new Error("Expected the field `export_entities` to be an array in the JSON data but got " + data['export_entities']);
        }
        // ensure the json data is a string
        if (data['export_type'] && !(typeof data['export_type'] === 'string' || data['export_type'] instanceof String)) {
            throw new Error("Expected the field `export_type` to be a primitive type in the JSON string but got " + data['export_type']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['last_run_time'] && !(typeof data['last_run_time'] === 'string' || data['last_run_time'] instanceof String)) {
            throw new Error("Expected the field `last_run_time` to be a primitive type in the JSON string but got " + data['last_run_time']);
        }
        // ensure the json data is a string
        if (data['resource_group'] && !(typeof data['resource_group'] === 'string' || data['resource_group'] instanceof String)) {
            throw new Error("Expected the field `resource_group` to be a primitive type in the JSON string but got " + data['resource_group']);
        }
        // ensure the json data is a string
        if (data['resource_name'] && !(typeof data['resource_name'] === 'string' || data['resource_name'] instanceof String)) {
            throw new Error("Expected the field `resource_name` to be a primitive type in the JSON string but got " + data['resource_name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['state_info'] && !(typeof data['state_info'] === 'string' || data['state_info'] instanceof String)) {
            throw new Error("Expected the field `state_info` to be a primitive type in the JSON string but got " + data['state_info']);
        }

        return true;
    }


}

ExportConfigurationResult.RequiredProperties = ["creation_time", "export_type", "id", "state"];

/**
 * Creation time in ISO 8601 format
 * @member {String} creation_time
 */
ExportConfigurationResult.prototype['creation_time'] = undefined;

/**
 * @member {module:model/ExportConfigurationsList200ResponseValuesInnerExportConfiguration} export_configuration
 */
ExportConfigurationResult.prototype['export_configuration'] = undefined;

/**
 * @member {Array.<module:model/ExportConfigurationResult.ExportEntitiesEnum>} export_entities
 */
ExportConfigurationResult.prototype['export_entities'] = undefined;

/**
 * Target resource type of export configuration
 * @member {module:model/ExportConfigurationResult.ExportTypeEnum} export_type
 */
ExportConfigurationResult.prototype['export_type'] = undefined;

/**
 * Export configuration id
 * @member {String} id
 */
ExportConfigurationResult.prototype['id'] = undefined;

/**
 * Latest time in ISO 8601 format when export completed successfully
 * @member {String} last_run_time
 */
ExportConfigurationResult.prototype['last_run_time'] = undefined;

/**
 * resource group for the storage account/App Insights resource
 * @member {String} resource_group
 */
ExportConfigurationResult.prototype['resource_group'] = undefined;

/**
 * Storage accout or Appinsights resource name
 * @member {String} resource_name
 */
ExportConfigurationResult.prototype['resource_name'] = undefined;

/**
 * State of the export job
 * @member {module:model/ExportConfigurationResult.StateEnum} state
 */
ExportConfigurationResult.prototype['state'] = undefined;

/**
 * Additional information about export configuration state
 * @member {String} state_info
 */
ExportConfigurationResult.prototype['state_info'] = undefined;





/**
 * Allowed values for the <code>exportEntities</code> property.
 * @enum {String}
 * @readonly
 */
ExportConfigurationResult['ExportEntitiesEnum'] = {

    /**
     * value: "crashes"
     * @const
     */
    "crashes": "crashes",

    /**
     * value: "errors"
     * @const
     */
    "errors": "errors",

    /**
     * value: "attachments"
     * @const
     */
    "attachments": "attachments",

    /**
     * value: "no_logs"
     * @const
     */
    "no_logs": "no_logs"
};


/**
 * Allowed values for the <code>export_type</code> property.
 * @enum {String}
 * @readonly
 */
ExportConfigurationResult['ExportTypeEnum'] = {

    /**
     * value: "BlobStorage"
     * @const
     */
    "BlobStorage": "BlobStorage",

    /**
     * value: "AppInsights"
     * @const
     */
    "AppInsights": "AppInsights"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ExportConfigurationResult['StateEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Pending"
     * @const
     */
    "Pending": "Pending",

    /**
     * value: "Deleted"
     * @const
     */
    "Deleted": "Deleted",

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid"
};



export default ExportConfigurationResult;

