/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppleMappingRequest model module.
 * @module model/AppleMappingRequest
 * @version v0.1
 */
class AppleMappingRequest {
    /**
     * Constructs a new <code>AppleMappingRequest</code>.
     * Apple Mapping Request Type
     * @alias module:model/AppleMappingRequest
     * @param serviceConnectionId {String} Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center.
     * @param teamIdentifier {String} ID of the Team associated with the app in apple store
     */
    constructor(serviceConnectionId, teamIdentifier) { 
        
        AppleMappingRequest.initialize(this, serviceConnectionId, teamIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serviceConnectionId, teamIdentifier) { 
        obj['service_connection_id'] = serviceConnectionId;
        obj['team_identifier'] = teamIdentifier;
    }

    /**
     * Constructs a <code>AppleMappingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppleMappingRequest} obj Optional instance to populate.
     * @return {module:model/AppleMappingRequest} The populated <code>AppleMappingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppleMappingRequest();

            if (data.hasOwnProperty('apple_id')) {
                obj['apple_id'] = ApiClient.convertToType(data['apple_id'], 'String');
            }
            if (data.hasOwnProperty('bundle_identifier')) {
                obj['bundle_identifier'] = ApiClient.convertToType(data['bundle_identifier'], 'String');
            }
            if (data.hasOwnProperty('service_connection_id')) {
                obj['service_connection_id'] = ApiClient.convertToType(data['service_connection_id'], 'String');
            }
            if (data.hasOwnProperty('team_identifier')) {
                obj['team_identifier'] = ApiClient.convertToType(data['team_identifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppleMappingRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppleMappingRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppleMappingRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apple_id'] && !(typeof data['apple_id'] === 'string' || data['apple_id'] instanceof String)) {
            throw new Error("Expected the field `apple_id` to be a primitive type in the JSON string but got " + data['apple_id']);
        }
        // ensure the json data is a string
        if (data['bundle_identifier'] && !(typeof data['bundle_identifier'] === 'string' || data['bundle_identifier'] instanceof String)) {
            throw new Error("Expected the field `bundle_identifier` to be a primitive type in the JSON string but got " + data['bundle_identifier']);
        }
        // ensure the json data is a string
        if (data['service_connection_id'] && !(typeof data['service_connection_id'] === 'string' || data['service_connection_id'] instanceof String)) {
            throw new Error("Expected the field `service_connection_id` to be a primitive type in the JSON string but got " + data['service_connection_id']);
        }
        // ensure the json data is a string
        if (data['team_identifier'] && !(typeof data['team_identifier'] === 'string' || data['team_identifier'] instanceof String)) {
            throw new Error("Expected the field `team_identifier` to be a primitive type in the JSON string but got " + data['team_identifier']);
        }

        return true;
    }


}

AppleMappingRequest.RequiredProperties = ["service_connection_id", "team_identifier"];

/**
 * ID of the apple application in apple store, takes precedence over bundle_identifier when both are provided
 * @member {String} apple_id
 */
AppleMappingRequest.prototype['apple_id'] = undefined;

/**
 * Bundle Identifier of the apple package
 * @member {String} bundle_identifier
 */
AppleMappingRequest.prototype['bundle_identifier'] = undefined;

/**
 * Id for the shared service connection. In case of Apple AppStore, this connection will be used to create and connect to the Apple AppStore in Mobile Center.
 * @member {String} service_connection_id
 */
AppleMappingRequest.prototype['service_connection_id'] = undefined;

/**
 * ID of the Team associated with the app in apple store
 * @member {String} team_identifier
 */
AppleMappingRequest.prototype['team_identifier'] = undefined;






export default AppleMappingRequest;

