/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TestGetTestReport200ResponseDeviceLogsInner model module.
 * @module model/TestGetTestReport200ResponseDeviceLogsInner
 * @version v0.1
 */
class TestGetTestReport200ResponseDeviceLogsInner {
    /**
     * Constructs a new <code>TestGetTestReport200ResponseDeviceLogsInner</code>.
     * @alias module:model/TestGetTestReport200ResponseDeviceLogsInner
     */
    constructor() { 
        
        TestGetTestReport200ResponseDeviceLogsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestGetTestReport200ResponseDeviceLogsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestGetTestReport200ResponseDeviceLogsInner} obj Optional instance to populate.
     * @return {module:model/TestGetTestReport200ResponseDeviceLogsInner} The populated <code>TestGetTestReport200ResponseDeviceLogsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestGetTestReport200ResponseDeviceLogsInner();

            if (data.hasOwnProperty('appium_log')) {
                obj['appium_log'] = ApiClient.convertToType(data['appium_log'], 'String');
            }
            if (data.hasOwnProperty('device_log')) {
                obj['device_log'] = ApiClient.convertToType(data['device_log'], 'String');
            }
            if (data.hasOwnProperty('device_snapshot_id')) {
                obj['device_snapshot_id'] = ApiClient.convertToType(data['device_snapshot_id'], 'String');
            }
            if (data.hasOwnProperty('test_log')) {
                obj['test_log'] = ApiClient.convertToType(data['test_log'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestGetTestReport200ResponseDeviceLogsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestGetTestReport200ResponseDeviceLogsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appium_log'] && !(typeof data['appium_log'] === 'string' || data['appium_log'] instanceof String)) {
            throw new Error("Expected the field `appium_log` to be a primitive type in the JSON string but got " + data['appium_log']);
        }
        // ensure the json data is a string
        if (data['device_log'] && !(typeof data['device_log'] === 'string' || data['device_log'] instanceof String)) {
            throw new Error("Expected the field `device_log` to be a primitive type in the JSON string but got " + data['device_log']);
        }
        // ensure the json data is a string
        if (data['device_snapshot_id'] && !(typeof data['device_snapshot_id'] === 'string' || data['device_snapshot_id'] instanceof String)) {
            throw new Error("Expected the field `device_snapshot_id` to be a primitive type in the JSON string but got " + data['device_snapshot_id']);
        }
        // ensure the json data is a string
        if (data['test_log'] && !(typeof data['test_log'] === 'string' || data['test_log'] instanceof String)) {
            throw new Error("Expected the field `test_log` to be a primitive type in the JSON string but got " + data['test_log']);
        }

        return true;
    }


}



/**
 * @member {String} appium_log
 */
TestGetTestReport200ResponseDeviceLogsInner.prototype['appium_log'] = undefined;

/**
 * @member {String} device_log
 */
TestGetTestReport200ResponseDeviceLogsInner.prototype['device_log'] = undefined;

/**
 * @member {String} device_snapshot_id
 */
TestGetTestReport200ResponseDeviceLogsInner.prototype['device_snapshot_id'] = undefined;

/**
 * @member {String} test_log
 */
TestGetTestReport200ResponseDeviceLogsInner.prototype['test_log'] = undefined;






export default TestGetTestReport200ResponseDeviceLogsInner;

