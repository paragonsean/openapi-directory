/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildsListToolsetProjects200ResponseTestcloudProjectsInnerFrameworkProperties from './BuildsListToolsetProjects200ResponseTestcloudProjectsInnerFrameworkProperties';

/**
 * The BuildsListToolsetProjects200ResponseTestcloudProjectsInner model module.
 * @module model/BuildsListToolsetProjects200ResponseTestcloudProjectsInner
 * @version v0.1
 */
class BuildsListToolsetProjects200ResponseTestcloudProjectsInner {
    /**
     * Constructs a new <code>BuildsListToolsetProjects200ResponseTestcloudProjectsInner</code>.
     * @alias module:model/BuildsListToolsetProjects200ResponseTestcloudProjectsInner
     * @param frameworkType {module:model/BuildsListToolsetProjects200ResponseTestcloudProjectsInner.FrameworkTypeEnum} 
     * @param path {String} The path to the TestCloud project
     */
    constructor(frameworkType, path) { 
        
        BuildsListToolsetProjects200ResponseTestcloudProjectsInner.initialize(this, frameworkType, path);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, frameworkType, path) { 
        obj['frameworkType'] = frameworkType;
        obj['path'] = path;
    }

    /**
     * Constructs a <code>BuildsListToolsetProjects200ResponseTestcloudProjectsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildsListToolsetProjects200ResponseTestcloudProjectsInner} obj Optional instance to populate.
     * @return {module:model/BuildsListToolsetProjects200ResponseTestcloudProjectsInner} The populated <code>BuildsListToolsetProjects200ResponseTestcloudProjectsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildsListToolsetProjects200ResponseTestcloudProjectsInner();

            if (data.hasOwnProperty('frameworkProperties')) {
                obj['frameworkProperties'] = BuildsListToolsetProjects200ResponseTestcloudProjectsInnerFrameworkProperties.constructFromObject(data['frameworkProperties']);
            }
            if (data.hasOwnProperty('frameworkType')) {
                obj['frameworkType'] = ApiClient.convertToType(data['frameworkType'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildsListToolsetProjects200ResponseTestcloudProjectsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildsListToolsetProjects200ResponseTestcloudProjectsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BuildsListToolsetProjects200ResponseTestcloudProjectsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `frameworkProperties`
        if (data['frameworkProperties']) { // data not null
          BuildsListToolsetProjects200ResponseTestcloudProjectsInnerFrameworkProperties.validateJSON(data['frameworkProperties']);
        }
        // ensure the json data is a string
        if (data['frameworkType'] && !(typeof data['frameworkType'] === 'string' || data['frameworkType'] instanceof String)) {
            throw new Error("Expected the field `frameworkType` to be a primitive type in the JSON string but got " + data['frameworkType']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}

BuildsListToolsetProjects200ResponseTestcloudProjectsInner.RequiredProperties = ["frameworkType", "path"];

/**
 * @member {module:model/BuildsListToolsetProjects200ResponseTestcloudProjectsInnerFrameworkProperties} frameworkProperties
 */
BuildsListToolsetProjects200ResponseTestcloudProjectsInner.prototype['frameworkProperties'] = undefined;

/**
 * @member {module:model/BuildsListToolsetProjects200ResponseTestcloudProjectsInner.FrameworkTypeEnum} frameworkType
 */
BuildsListToolsetProjects200ResponseTestcloudProjectsInner.prototype['frameworkType'] = undefined;

/**
 * The path to the TestCloud project
 * @member {String} path
 */
BuildsListToolsetProjects200ResponseTestcloudProjectsInner.prototype['path'] = undefined;





/**
 * Allowed values for the <code>frameworkType</code> property.
 * @enum {String}
 * @readonly
 */
BuildsListToolsetProjects200ResponseTestcloudProjectsInner['FrameworkTypeEnum'] = {

    /**
     * value: "Appium"
     * @const
     */
    "Appium": "Appium",

    /**
     * value: "Calabash"
     * @const
     */
    "Calabash": "Calabash",

    /**
     * value: "Espresso"
     * @const
     */
    "Espresso": "Espresso",

    /**
     * value: "UITest"
     * @const
     */
    "UITest": "UITest",

    /**
     * value: "Generated"
     * @const
     */
    "Generated": "Generated"
};



export default BuildsListToolsetProjects200ResponseTestcloudProjectsInner;

