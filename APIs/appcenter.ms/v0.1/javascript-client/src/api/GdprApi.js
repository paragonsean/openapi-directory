/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DataSubjectRightCancelDeleteRequestRequest from '../model/DataSubjectRightCancelDeleteRequestRequest';
import DataSubjectRightDeleteRequest202Response from '../model/DataSubjectRightDeleteRequest202Response';
import DataSubjectRightDeleteStatusRequest200Response from '../model/DataSubjectRightDeleteStatusRequest200Response';
import OrganizationsListAdministeredDefaultResponse from '../model/OrganizationsListAdministeredDefaultResponse';

/**
* Gdpr service.
* @module api/GdprApi
* @version v0.1
*/
export default class GdprApi {

    /**
    * Constructs a new GdprApi. 
    * @alias module:api/GdprApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dataSubjectRightCancelDeleteRequest operation.
     * @callback module:api/GdprApi~dataSubjectRightCancelDeleteRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSubjectRightDeleteRequest202Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} token Unique request ID (GUID)
     * @param {Object} opts Optional parameters
     * @param {module:model/DataSubjectRightCancelDeleteRequestRequest} [dataSubjectRightCancelDeleteRequestRequest] 
     * @param {module:api/GdprApi~dataSubjectRightCancelDeleteRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSubjectRightDeleteRequest202Response}
     */
    dataSubjectRightCancelDeleteRequest(token, opts, callback) {
      opts = opts || {};
      let postBody = opts['dataSubjectRightCancelDeleteRequestRequest'];
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling dataSubjectRightCancelDeleteRequest");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DataSubjectRightDeleteRequest202Response;
      return this.apiClient.callApi(
        '/v0.1/user/dsr/delete/{token}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dataSubjectRightCancelExportRequest operation.
     * @callback module:api/GdprApi~dataSubjectRightCancelExportRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSubjectRightDeleteRequest202Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} token Unique request ID (GUID)
     * @param {module:api/GdprApi~dataSubjectRightCancelExportRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSubjectRightDeleteRequest202Response}
     */
    dataSubjectRightCancelExportRequest(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling dataSubjectRightCancelExportRequest");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DataSubjectRightDeleteRequest202Response;
      return this.apiClient.callApi(
        '/v0.1/user/dsr/export/{token}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dataSubjectRightDeleteRequest operation.
     * @callback module:api/GdprApi~dataSubjectRightDeleteRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSubjectRightDeleteRequest202Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GdprApi~dataSubjectRightDeleteRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSubjectRightDeleteRequest202Response}
     */
    dataSubjectRightDeleteRequest(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DataSubjectRightDeleteRequest202Response;
      return this.apiClient.callApi(
        '/v0.1/user/dsr/delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dataSubjectRightDeleteStatusRequest operation.
     * @callback module:api/GdprApi~dataSubjectRightDeleteStatusRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSubjectRightDeleteStatusRequest200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} token Unique request ID (GUID)
     * @param {String} email Email used for delete with x-authz-bypass headers
     * @param {module:api/GdprApi~dataSubjectRightDeleteStatusRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSubjectRightDeleteStatusRequest200Response}
     */
    dataSubjectRightDeleteStatusRequest(token, email, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling dataSubjectRightDeleteStatusRequest");
      }
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling dataSubjectRightDeleteStatusRequest");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
        'email': email
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DataSubjectRightDeleteStatusRequest200Response;
      return this.apiClient.callApi(
        '/v0.1/user/dsr/delete/{token}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dataSubjectRightExportRequest operation.
     * @callback module:api/GdprApi~dataSubjectRightExportRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSubjectRightDeleteRequest202Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GdprApi~dataSubjectRightExportRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSubjectRightDeleteRequest202Response}
     */
    dataSubjectRightExportRequest(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DataSubjectRightDeleteRequest202Response;
      return this.apiClient.callApi(
        '/v0.1/user/dsr/export', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dataSubjectRightExportStatusRequest operation.
     * @callback module:api/GdprApi~dataSubjectRightExportStatusRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataSubjectRightDeleteStatusRequest200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} token Unique request ID (GUID)
     * @param {module:api/GdprApi~dataSubjectRightExportStatusRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataSubjectRightDeleteStatusRequest200Response}
     */
    dataSubjectRightExportStatusRequest(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling dataSubjectRightExportStatusRequest");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DataSubjectRightDeleteStatusRequest200Response;
      return this.apiClient.callApi(
        '/v0.1/user/dsr/export/{token}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
