/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BillingAggregatedInformationGetAll200Response from '../model/BillingAggregatedInformationGetAll200Response';
import BillingAggregatedInformationGetByApp200Response from '../model/BillingAggregatedInformationGetByApp200Response';
import BillingAggregatedInformationGetByAppDefaultResponse from '../model/BillingAggregatedInformationGetByAppDefaultResponse';

/**
* Billing service.
* @module api/BillingApi
* @version v0.1
*/
export default class BillingApi {

    /**
    * Constructs a new BillingApi. 
    * @alias module:api/BillingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the billingAggregatedInformationGetAll operation.
     * @callback module:api/BillingApi~billingAggregatedInformationGetAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillingAggregatedInformationGetAll200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Aggregated Billing Information for the requesting user and the organizations in which the user is an admin.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [service] Type of service that should be included in the Billing Information
     * @param {module:model/String} [period] Type of period that should be included in the Billing Information
     * @param {Boolean} [showOriginalPlans] Controls whether the API should show the original plan when Azure Subscription is not enabled
     * @param {module:api/BillingApi~billingAggregatedInformationGetAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillingAggregatedInformationGetAll200Response}
     */
    billingAggregatedInformationGetAll(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'service': opts['service'],
        'period': opts['period'],
        'showOriginalPlans': opts['showOriginalPlans']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BillingAggregatedInformationGetAll200Response;
      return this.apiClient.callApi(
        '/v0.1/billing/allAccountsAggregated', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the billingAggregatedInformationGetByApp operation.
     * @callback module:api/BillingApi~billingAggregatedInformationGetByAppCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillingAggregatedInformationGetByApp200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Aggregated Billing Information for owner of a given app.
     * @param {String} ownerName The name of the owner
     * @param {String} appName The name of the application
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [service] Type of service that should be included in the Billing Information
     * @param {module:model/String} [period] Type of period that should be included in the Billing Information
     * @param {Boolean} [showOriginalPlans] Controls whether the API should show the original plan when Azure Subscription is not enabled
     * @param {module:api/BillingApi~billingAggregatedInformationGetByAppCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillingAggregatedInformationGetByApp200Response}
     */
    billingAggregatedInformationGetByApp(ownerName, appName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ownerName' is set
      if (ownerName === undefined || ownerName === null) {
        throw new Error("Missing the required parameter 'ownerName' when calling billingAggregatedInformationGetByApp");
      }
      // verify the required parameter 'appName' is set
      if (appName === undefined || appName === null) {
        throw new Error("Missing the required parameter 'appName' when calling billingAggregatedInformationGetByApp");
      }

      let pathParams = {
        'owner_name': ownerName,
        'app_name': appName
      };
      let queryParams = {
        'service': opts['service'],
        'period': opts['period'],
        'showOriginalPlans': opts['showOriginalPlans']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BillingAggregatedInformationGetByApp200Response;
      return this.apiClient.callApi(
        '/v0.1/apps/{owner_name}/{app_name}/billing/aggregated', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the billingAggregatedInformationGetForOrg operation.
     * @callback module:api/BillingApi~billingAggregatedInformationGetForOrgCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillingAggregatedInformationGetByApp200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Aggregated Billing Information for a given Organization.
     * @param {String} orgName The name of the Organization
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [service] Type of service that should be included in the Billing Information
     * @param {module:model/String} [period] Type of period that should be included in the Billing Information
     * @param {Boolean} [showOriginalPlans] Controls whether the API should show the original plan when Azure Subscription is not enabled
     * @param {module:api/BillingApi~billingAggregatedInformationGetForOrgCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillingAggregatedInformationGetByApp200Response}
     */
    billingAggregatedInformationGetForOrg(orgName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'orgName' is set
      if (orgName === undefined || orgName === null) {
        throw new Error("Missing the required parameter 'orgName' when calling billingAggregatedInformationGetForOrg");
      }

      let pathParams = {
        'orgName': orgName
      };
      let queryParams = {
        'service': opts['service'],
        'period': opts['period'],
        'showOriginalPlans': opts['showOriginalPlans']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BillingAggregatedInformationGetByApp200Response;
      return this.apiClient.callApi(
        '/v0.1/orgs/{orgName}/billing/aggregated', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
