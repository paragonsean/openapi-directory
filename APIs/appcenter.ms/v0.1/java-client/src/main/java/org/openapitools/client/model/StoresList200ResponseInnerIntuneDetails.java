/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.StoresList200ResponseInnerIntuneDetailsAppCategory;
import org.openapitools.client.model.StoresList200ResponseInnerIntuneDetailsTargetAudience;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Store details for intune
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StoresList200ResponseInnerIntuneDetails {
  public static final String SERIALIZED_NAME_APP_CATEGORY = "app_category";
  @SerializedName(SERIALIZED_NAME_APP_CATEGORY)
  private StoresList200ResponseInnerIntuneDetailsAppCategory appCategory;

  public static final String SERIALIZED_NAME_TARGET_AUDIENCE = "target_audience";
  @SerializedName(SERIALIZED_NAME_TARGET_AUDIENCE)
  private StoresList200ResponseInnerIntuneDetailsTargetAudience targetAudience;

  public StoresList200ResponseInnerIntuneDetails() {
  }

  public StoresList200ResponseInnerIntuneDetails appCategory(StoresList200ResponseInnerIntuneDetailsAppCategory appCategory) {
    this.appCategory = appCategory;
    return this;
  }

  /**
   * Get appCategory
   * @return appCategory
   */
  @javax.annotation.Nullable
  public StoresList200ResponseInnerIntuneDetailsAppCategory getAppCategory() {
    return appCategory;
  }

  public void setAppCategory(StoresList200ResponseInnerIntuneDetailsAppCategory appCategory) {
    this.appCategory = appCategory;
  }


  public StoresList200ResponseInnerIntuneDetails targetAudience(StoresList200ResponseInnerIntuneDetailsTargetAudience targetAudience) {
    this.targetAudience = targetAudience;
    return this;
  }

  /**
   * Get targetAudience
   * @return targetAudience
   */
  @javax.annotation.Nullable
  public StoresList200ResponseInnerIntuneDetailsTargetAudience getTargetAudience() {
    return targetAudience;
  }

  public void setTargetAudience(StoresList200ResponseInnerIntuneDetailsTargetAudience targetAudience) {
    this.targetAudience = targetAudience;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoresList200ResponseInnerIntuneDetails storesList200ResponseInnerIntuneDetails = (StoresList200ResponseInnerIntuneDetails) o;
    return Objects.equals(this.appCategory, storesList200ResponseInnerIntuneDetails.appCategory) &&
        Objects.equals(this.targetAudience, storesList200ResponseInnerIntuneDetails.targetAudience);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appCategory, targetAudience);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoresList200ResponseInnerIntuneDetails {\n");
    sb.append("    appCategory: ").append(toIndentedString(appCategory)).append("\n");
    sb.append("    targetAudience: ").append(toIndentedString(targetAudience)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_category");
    openapiFields.add("target_audience");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StoresList200ResponseInnerIntuneDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StoresList200ResponseInnerIntuneDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StoresList200ResponseInnerIntuneDetails is not found in the empty JSON string", StoresList200ResponseInnerIntuneDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StoresList200ResponseInnerIntuneDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StoresList200ResponseInnerIntuneDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `app_category`
      if (jsonObj.get("app_category") != null && !jsonObj.get("app_category").isJsonNull()) {
        StoresList200ResponseInnerIntuneDetailsAppCategory.validateJsonElement(jsonObj.get("app_category"));
      }
      // validate the optional field `target_audience`
      if (jsonObj.get("target_audience") != null && !jsonObj.get("target_audience").isJsonNull()) {
        StoresList200ResponseInnerIntuneDetailsTargetAudience.validateJsonElement(jsonObj.get("target_audience"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StoresList200ResponseInnerIntuneDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StoresList200ResponseInnerIntuneDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StoresList200ResponseInnerIntuneDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StoresList200ResponseInnerIntuneDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<StoresList200ResponseInnerIntuneDetails>() {
           @Override
           public void write(JsonWriter out, StoresList200ResponseInnerIntuneDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StoresList200ResponseInnerIntuneDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StoresList200ResponseInnerIntuneDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StoresList200ResponseInnerIntuneDetails
   * @throws IOException if the JSON string is invalid with respect to StoresList200ResponseInnerIntuneDetails
   */
  public static StoresList200ResponseInnerIntuneDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StoresList200ResponseInnerIntuneDetails.class);
  }

  /**
   * Convert an instance of StoresList200ResponseInnerIntuneDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

