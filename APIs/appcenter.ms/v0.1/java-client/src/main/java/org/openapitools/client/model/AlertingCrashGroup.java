/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AlertingCrashGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AlertingCrashGroup {
  public static final String SERIALIZED_NAME_APP_DISPLAY_NAME = "app_display_name";
  @SerializedName(SERIALIZED_NAME_APP_DISPLAY_NAME)
  private String appDisplayName;

  /**
   * SDK/Platform this thread is beeing generated from
   */
  @JsonAdapter(AppPlatformEnum.Adapter.class)
  public enum AppPlatformEnum {
    IOS("ios"),
    
    ANDROID("android"),
    
    XAMARIN("xamarin"),
    
    REACT_NATIVE("react-native"),
    
    NDK("ndk"),
    
    UNITY("unity"),
    
    OTHER("other");

    private String value;

    AppPlatformEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AppPlatformEnum fromValue(String value) {
      for (AppPlatformEnum b : AppPlatformEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AppPlatformEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AppPlatformEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AppPlatformEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AppPlatformEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AppPlatformEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_APP_PLATFORM = "app_platform";
  @SerializedName(SERIALIZED_NAME_APP_PLATFORM)
  private AppPlatformEnum appPlatform;

  public static final String SERIALIZED_NAME_APP_VERSION = "app_version";
  @SerializedName(SERIALIZED_NAME_APP_VERSION)
  private String appVersion;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_STACK_TRACE = "stack_trace";
  @SerializedName(SERIALIZED_NAME_STACK_TRACE)
  private List<String> stackTrace = new ArrayList<>();

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public AlertingCrashGroup() {
  }

  public AlertingCrashGroup appDisplayName(String appDisplayName) {
    this.appDisplayName = appDisplayName;
    return this;
  }

  /**
   * Get appDisplayName
   * @return appDisplayName
   */
  @javax.annotation.Nullable
  public String getAppDisplayName() {
    return appDisplayName;
  }

  public void setAppDisplayName(String appDisplayName) {
    this.appDisplayName = appDisplayName;
  }


  public AlertingCrashGroup appPlatform(AppPlatformEnum appPlatform) {
    this.appPlatform = appPlatform;
    return this;
  }

  /**
   * SDK/Platform this thread is beeing generated from
   * @return appPlatform
   */
  @javax.annotation.Nullable
  public AppPlatformEnum getAppPlatform() {
    return appPlatform;
  }

  public void setAppPlatform(AppPlatformEnum appPlatform) {
    this.appPlatform = appPlatform;
  }


  public AlertingCrashGroup appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

  /**
   * Get appVersion
   * @return appVersion
   */
  @javax.annotation.Nullable
  public String getAppVersion() {
    return appVersion;
  }

  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }


  public AlertingCrashGroup id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AlertingCrashGroup name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AlertingCrashGroup reason(String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * Get reason
   * @return reason
   */
  @javax.annotation.Nullable
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }


  public AlertingCrashGroup stackTrace(List<String> stackTrace) {
    this.stackTrace = stackTrace;
    return this;
  }

  public AlertingCrashGroup addStackTraceItem(String stackTraceItem) {
    if (this.stackTrace == null) {
      this.stackTrace = new ArrayList<>();
    }
    this.stackTrace.add(stackTraceItem);
    return this;
  }

  /**
   * Get stackTrace
   * @return stackTrace
   */
  @javax.annotation.Nullable
  public List<String> getStackTrace() {
    return stackTrace;
  }

  public void setStackTrace(List<String> stackTrace) {
    this.stackTrace = stackTrace;
  }


  public AlertingCrashGroup url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertingCrashGroup alertingCrashGroup = (AlertingCrashGroup) o;
    return Objects.equals(this.appDisplayName, alertingCrashGroup.appDisplayName) &&
        Objects.equals(this.appPlatform, alertingCrashGroup.appPlatform) &&
        Objects.equals(this.appVersion, alertingCrashGroup.appVersion) &&
        Objects.equals(this.id, alertingCrashGroup.id) &&
        Objects.equals(this.name, alertingCrashGroup.name) &&
        Objects.equals(this.reason, alertingCrashGroup.reason) &&
        Objects.equals(this.stackTrace, alertingCrashGroup.stackTrace) &&
        Objects.equals(this.url, alertingCrashGroup.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appDisplayName, appPlatform, appVersion, id, name, reason, stackTrace, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertingCrashGroup {\n");
    sb.append("    appDisplayName: ").append(toIndentedString(appDisplayName)).append("\n");
    sb.append("    appPlatform: ").append(toIndentedString(appPlatform)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    stackTrace: ").append(toIndentedString(stackTrace)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_display_name");
    openapiFields.add("app_platform");
    openapiFields.add("app_version");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("reason");
    openapiFields.add("stack_trace");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlertingCrashGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlertingCrashGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlertingCrashGroup is not found in the empty JSON string", AlertingCrashGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlertingCrashGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlertingCrashGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("app_display_name") != null && !jsonObj.get("app_display_name").isJsonNull()) && !jsonObj.get("app_display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_display_name").toString()));
      }
      if ((jsonObj.get("app_platform") != null && !jsonObj.get("app_platform").isJsonNull()) && !jsonObj.get("app_platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_platform").toString()));
      }
      // validate the optional field `app_platform`
      if (jsonObj.get("app_platform") != null && !jsonObj.get("app_platform").isJsonNull()) {
        AppPlatformEnum.validateJsonElement(jsonObj.get("app_platform"));
      }
      if ((jsonObj.get("app_version") != null && !jsonObj.get("app_version").isJsonNull()) && !jsonObj.get("app_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_version").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("reason") != null && !jsonObj.get("reason").isJsonNull()) && !jsonObj.get("reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reason").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("stack_trace") != null && !jsonObj.get("stack_trace").isJsonNull() && !jsonObj.get("stack_trace").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `stack_trace` to be an array in the JSON string but got `%s`", jsonObj.get("stack_trace").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlertingCrashGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlertingCrashGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlertingCrashGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlertingCrashGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<AlertingCrashGroup>() {
           @Override
           public void write(JsonWriter out, AlertingCrashGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlertingCrashGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlertingCrashGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlertingCrashGroup
   * @throws IOException if the JSON string is invalid with respect to AlertingCrashGroup
   */
  public static AlertingCrashGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlertingCrashGroup.class);
  }

  /**
   * Convert an instance of AlertingCrashGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

