/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ReleasesGetLatestByDistributionGroup200ResponseBuild;
import org.openapitools.client.model.ReleasesUpdateRequestDestinationsInner;
import org.openapitools.client.model.ReleasesUpdateRequestMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A request containing information for updating a release.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ReleasesUpdateRequest {
  public static final String SERIALIZED_NAME_BUILD = "build";
  @SerializedName(SERIALIZED_NAME_BUILD)
  private ReleasesGetLatestByDistributionGroup200ResponseBuild build;

  public static final String SERIALIZED_NAME_DESTINATION_ID = "destination_id";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ID)
  private String destinationId;

  public static final String SERIALIZED_NAME_DESTINATION_NAME = "destination_name";
  @SerializedName(SERIALIZED_NAME_DESTINATION_NAME)
  private String destinationName;

  public static final String SERIALIZED_NAME_DESTINATION_TYPE = "destination_type";
  @SerializedName(SERIALIZED_NAME_DESTINATION_TYPE)
  private String destinationType;

  public static final String SERIALIZED_NAME_DESTINATIONS = "destinations";
  @SerializedName(SERIALIZED_NAME_DESTINATIONS)
  private List<ReleasesUpdateRequestDestinationsInner> destinations = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISTRIBUTION_GROUP_ID = "distribution_group_id";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_GROUP_ID)
  private String distributionGroupId;

  public static final String SERIALIZED_NAME_DISTRIBUTION_GROUP_NAME = "distribution_group_name";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_GROUP_NAME)
  private String distributionGroupName;

  public static final String SERIALIZED_NAME_MANDATORY_UPDATE = "mandatory_update";
  @SerializedName(SERIALIZED_NAME_MANDATORY_UPDATE)
  private Boolean mandatoryUpdate;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private ReleasesUpdateRequestMetadata metadata;

  public static final String SERIALIZED_NAME_NOTIFY_TESTERS = "notify_testers";
  @SerializedName(SERIALIZED_NAME_NOTIFY_TESTERS)
  private Boolean notifyTesters = true;

  public static final String SERIALIZED_NAME_RELEASE_NOTES = "release_notes";
  @SerializedName(SERIALIZED_NAME_RELEASE_NOTES)
  private String releaseNotes;

  public ReleasesUpdateRequest() {
  }

  public ReleasesUpdateRequest build(ReleasesGetLatestByDistributionGroup200ResponseBuild build) {
    this.build = build;
    return this;
  }

  /**
   * Get build
   * @return build
   */
  @javax.annotation.Nullable
  public ReleasesGetLatestByDistributionGroup200ResponseBuild getBuild() {
    return build;
  }

  public void setBuild(ReleasesGetLatestByDistributionGroup200ResponseBuild build) {
    this.build = build;
  }


  public ReleasesUpdateRequest destinationId(String destinationId) {
    this.destinationId = destinationId;
    return this;
  }

  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Id of a destination. The release will be associated with this destination. If the destination doesn&#39;t exist a 400 is returned. If both destination name and id are passed, the id is taking precedence.
   * @return destinationId
   */
  @javax.annotation.Nullable
  public String getDestinationId() {
    return destinationId;
  }

  public void setDestinationId(String destinationId) {
    this.destinationId = destinationId;
  }


  public ReleasesUpdateRequest destinationName(String destinationName) {
    this.destinationName = destinationName;
    return this;
  }

  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Name of a destination. The release will be associated with this destination. If the destination doesn&#39;t exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   * @return destinationName
   */
  @javax.annotation.Nullable
  public String getDestinationName() {
    return destinationName;
  }

  public void setDestinationName(String destinationName) {
    this.destinationName = destinationName;
  }


  public ReleasesUpdateRequest destinationType(String destinationType) {
    this.destinationType = destinationType;
    return this;
  }

  /**
   * Not used anymore.
   * @return destinationType
   */
  @javax.annotation.Nullable
  public String getDestinationType() {
    return destinationType;
  }

  public void setDestinationType(String destinationType) {
    this.destinationType = destinationType;
  }


  public ReleasesUpdateRequest destinations(List<ReleasesUpdateRequestDestinationsInner> destinations) {
    this.destinations = destinations;
    return this;
  }

  public ReleasesUpdateRequest addDestinationsItem(ReleasesUpdateRequestDestinationsInner destinationsItem) {
    if (this.destinations == null) {
      this.destinations = new ArrayList<>();
    }
    this.destinations.add(destinationsItem);
    return this;
  }

  /**
   * Distribute this release under the following list of destinations (store groups or distribution groups).
   * @return destinations
   */
  @javax.annotation.Nullable
  public List<ReleasesUpdateRequestDestinationsInner> getDestinations() {
    return destinations;
  }

  public void setDestinations(List<ReleasesUpdateRequestDestinationsInner> destinations) {
    this.destinations = destinations;
  }


  public ReleasesUpdateRequest distributionGroupId(String distributionGroupId) {
    this.distributionGroupId = distributionGroupId;
    return this;
  }

  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Id of a distribution group. The release will be associated with this distribution group. If the distribution group doesn&#39;t exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   * @return distributionGroupId
   */
  @javax.annotation.Nullable
  public String getDistributionGroupId() {
    return distributionGroupId;
  }

  public void setDistributionGroupId(String distributionGroupId) {
    this.distributionGroupId = distributionGroupId;
  }


  public ReleasesUpdateRequest distributionGroupName(String distributionGroupName) {
    this.distributionGroupName = distributionGroupName;
    return this;
  }

  /**
   * OBSOLETE. Will be removed in future releases - use destinations instead. Name of a distribution group. The release will be associated with this distribution group. If the distribution group doesn&#39;t exist a 400 is returned. If both distribution group name and id are passed, the id is taking precedence.
   * @return distributionGroupName
   */
  @javax.annotation.Nullable
  public String getDistributionGroupName() {
    return distributionGroupName;
  }

  public void setDistributionGroupName(String distributionGroupName) {
    this.distributionGroupName = distributionGroupName;
  }


  public ReleasesUpdateRequest mandatoryUpdate(Boolean mandatoryUpdate) {
    this.mandatoryUpdate = mandatoryUpdate;
    return this;
  }

  /**
   * A boolean which determines whether this version should be a mandatory update or not.
   * @return mandatoryUpdate
   */
  @javax.annotation.Nullable
  public Boolean getMandatoryUpdate() {
    return mandatoryUpdate;
  }

  public void setMandatoryUpdate(Boolean mandatoryUpdate) {
    this.mandatoryUpdate = mandatoryUpdate;
  }


  public ReleasesUpdateRequest metadata(ReleasesUpdateRequestMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public ReleasesUpdateRequestMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(ReleasesUpdateRequestMetadata metadata) {
    this.metadata = metadata;
  }


  public ReleasesUpdateRequest notifyTesters(Boolean notifyTesters) {
    this.notifyTesters = notifyTesters;
    return this;
  }

  /**
   * A boolean which determines whether to notify testers of a new release, default to true.
   * @return notifyTesters
   */
  @javax.annotation.Nullable
  public Boolean getNotifyTesters() {
    return notifyTesters;
  }

  public void setNotifyTesters(Boolean notifyTesters) {
    this.notifyTesters = notifyTesters;
  }


  public ReleasesUpdateRequest releaseNotes(String releaseNotes) {
    this.releaseNotes = releaseNotes;
    return this;
  }

  /**
   * Release notes for this release.
   * @return releaseNotes
   */
  @javax.annotation.Nullable
  public String getReleaseNotes() {
    return releaseNotes;
  }

  public void setReleaseNotes(String releaseNotes) {
    this.releaseNotes = releaseNotes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReleasesUpdateRequest releasesUpdateRequest = (ReleasesUpdateRequest) o;
    return Objects.equals(this.build, releasesUpdateRequest.build) &&
        Objects.equals(this.destinationId, releasesUpdateRequest.destinationId) &&
        Objects.equals(this.destinationName, releasesUpdateRequest.destinationName) &&
        Objects.equals(this.destinationType, releasesUpdateRequest.destinationType) &&
        Objects.equals(this.destinations, releasesUpdateRequest.destinations) &&
        Objects.equals(this.distributionGroupId, releasesUpdateRequest.distributionGroupId) &&
        Objects.equals(this.distributionGroupName, releasesUpdateRequest.distributionGroupName) &&
        Objects.equals(this.mandatoryUpdate, releasesUpdateRequest.mandatoryUpdate) &&
        Objects.equals(this.metadata, releasesUpdateRequest.metadata) &&
        Objects.equals(this.notifyTesters, releasesUpdateRequest.notifyTesters) &&
        Objects.equals(this.releaseNotes, releasesUpdateRequest.releaseNotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(build, destinationId, destinationName, destinationType, destinations, distributionGroupId, distributionGroupName, mandatoryUpdate, metadata, notifyTesters, releaseNotes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReleasesUpdateRequest {\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    destinationName: ").append(toIndentedString(destinationName)).append("\n");
    sb.append("    destinationType: ").append(toIndentedString(destinationType)).append("\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("    distributionGroupId: ").append(toIndentedString(distributionGroupId)).append("\n");
    sb.append("    distributionGroupName: ").append(toIndentedString(distributionGroupName)).append("\n");
    sb.append("    mandatoryUpdate: ").append(toIndentedString(mandatoryUpdate)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    notifyTesters: ").append(toIndentedString(notifyTesters)).append("\n");
    sb.append("    releaseNotes: ").append(toIndentedString(releaseNotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("build");
    openapiFields.add("destination_id");
    openapiFields.add("destination_name");
    openapiFields.add("destination_type");
    openapiFields.add("destinations");
    openapiFields.add("distribution_group_id");
    openapiFields.add("distribution_group_name");
    openapiFields.add("mandatory_update");
    openapiFields.add("metadata");
    openapiFields.add("notify_testers");
    openapiFields.add("release_notes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ReleasesUpdateRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ReleasesUpdateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReleasesUpdateRequest is not found in the empty JSON string", ReleasesUpdateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ReleasesUpdateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ReleasesUpdateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `build`
      if (jsonObj.get("build") != null && !jsonObj.get("build").isJsonNull()) {
        ReleasesGetLatestByDistributionGroup200ResponseBuild.validateJsonElement(jsonObj.get("build"));
      }
      if ((jsonObj.get("destination_id") != null && !jsonObj.get("destination_id").isJsonNull()) && !jsonObj.get("destination_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_id").toString()));
      }
      if ((jsonObj.get("destination_name") != null && !jsonObj.get("destination_name").isJsonNull()) && !jsonObj.get("destination_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_name").toString()));
      }
      if ((jsonObj.get("destination_type") != null && !jsonObj.get("destination_type").isJsonNull()) && !jsonObj.get("destination_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_type").toString()));
      }
      if (jsonObj.get("destinations") != null && !jsonObj.get("destinations").isJsonNull()) {
        JsonArray jsonArraydestinations = jsonObj.getAsJsonArray("destinations");
        if (jsonArraydestinations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("destinations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `destinations` to be an array in the JSON string but got `%s`", jsonObj.get("destinations").toString()));
          }

          // validate the optional field `destinations` (array)
          for (int i = 0; i < jsonArraydestinations.size(); i++) {
            ReleasesUpdateRequestDestinationsInner.validateJsonElement(jsonArraydestinations.get(i));
          };
        }
      }
      if ((jsonObj.get("distribution_group_id") != null && !jsonObj.get("distribution_group_id").isJsonNull()) && !jsonObj.get("distribution_group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distribution_group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distribution_group_id").toString()));
      }
      if ((jsonObj.get("distribution_group_name") != null && !jsonObj.get("distribution_group_name").isJsonNull()) && !jsonObj.get("distribution_group_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distribution_group_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distribution_group_name").toString()));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        ReleasesUpdateRequestMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
      if ((jsonObj.get("release_notes") != null && !jsonObj.get("release_notes").isJsonNull()) && !jsonObj.get("release_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `release_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("release_notes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReleasesUpdateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReleasesUpdateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReleasesUpdateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReleasesUpdateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ReleasesUpdateRequest>() {
           @Override
           public void write(JsonWriter out, ReleasesUpdateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReleasesUpdateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ReleasesUpdateRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ReleasesUpdateRequest
   * @throws IOException if the JSON string is invalid with respect to ReleasesUpdateRequest
   */
  public static ReleasesUpdateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReleasesUpdateRequest.class);
  }

  /**
   * Convert an instance of ReleasesUpdateRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

