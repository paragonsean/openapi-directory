/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PerformanceReportPerformanceDataStepsInnerSamplesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PerformanceReportPerformanceDataStepsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PerformanceReportPerformanceDataStepsInner {
  public static final String SERIALIZED_NAME_AVG_CPU = "avg-cpu";
  @SerializedName(SERIALIZED_NAME_AVG_CPU)
  private BigDecimal avgCpu;

  public static final String SERIALIZED_NAME_AVG_MEM = "avg-mem";
  @SerializedName(SERIALIZED_NAME_AVG_MEM)
  private BigDecimal avgMem;

  public static final String SERIALIZED_NAME_ELAPSED_SECS = "elapsed-secs";
  @SerializedName(SERIALIZED_NAME_ELAPSED_SECS)
  private BigDecimal elapsedSecs;

  public static final String SERIALIZED_NAME_ELAPSED_SECS_END = "elapsed-secs-end";
  @SerializedName(SERIALIZED_NAME_ELAPSED_SECS_END)
  private BigDecimal elapsedSecsEnd;

  public static final String SERIALIZED_NAME_ELAPSED_SECS_START = "elapsed-secs-start";
  @SerializedName(SERIALIZED_NAME_ELAPSED_SECS_START)
  private BigDecimal elapsedSecsStart;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SAMPLES = "samples";
  @SerializedName(SERIALIZED_NAME_SAMPLES)
  private List<PerformanceReportPerformanceDataStepsInnerSamplesInner> samples = new ArrayList<>();

  public PerformanceReportPerformanceDataStepsInner() {
  }

  public PerformanceReportPerformanceDataStepsInner avgCpu(BigDecimal avgCpu) {
    this.avgCpu = avgCpu;
    return this;
  }

  /**
   * Get avgCpu
   * @return avgCpu
   */
  @javax.annotation.Nullable
  public BigDecimal getAvgCpu() {
    return avgCpu;
  }

  public void setAvgCpu(BigDecimal avgCpu) {
    this.avgCpu = avgCpu;
  }


  public PerformanceReportPerformanceDataStepsInner avgMem(BigDecimal avgMem) {
    this.avgMem = avgMem;
    return this;
  }

  /**
   * Get avgMem
   * @return avgMem
   */
  @javax.annotation.Nullable
  public BigDecimal getAvgMem() {
    return avgMem;
  }

  public void setAvgMem(BigDecimal avgMem) {
    this.avgMem = avgMem;
  }


  public PerformanceReportPerformanceDataStepsInner elapsedSecs(BigDecimal elapsedSecs) {
    this.elapsedSecs = elapsedSecs;
    return this;
  }

  /**
   * Get elapsedSecs
   * @return elapsedSecs
   */
  @javax.annotation.Nullable
  public BigDecimal getElapsedSecs() {
    return elapsedSecs;
  }

  public void setElapsedSecs(BigDecimal elapsedSecs) {
    this.elapsedSecs = elapsedSecs;
  }


  public PerformanceReportPerformanceDataStepsInner elapsedSecsEnd(BigDecimal elapsedSecsEnd) {
    this.elapsedSecsEnd = elapsedSecsEnd;
    return this;
  }

  /**
   * Get elapsedSecsEnd
   * @return elapsedSecsEnd
   */
  @javax.annotation.Nullable
  public BigDecimal getElapsedSecsEnd() {
    return elapsedSecsEnd;
  }

  public void setElapsedSecsEnd(BigDecimal elapsedSecsEnd) {
    this.elapsedSecsEnd = elapsedSecsEnd;
  }


  public PerformanceReportPerformanceDataStepsInner elapsedSecsStart(BigDecimal elapsedSecsStart) {
    this.elapsedSecsStart = elapsedSecsStart;
    return this;
  }

  /**
   * Get elapsedSecsStart
   * @return elapsedSecsStart
   */
  @javax.annotation.Nullable
  public BigDecimal getElapsedSecsStart() {
    return elapsedSecsStart;
  }

  public void setElapsedSecsStart(BigDecimal elapsedSecsStart) {
    this.elapsedSecsStart = elapsedSecsStart;
  }


  public PerformanceReportPerformanceDataStepsInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public PerformanceReportPerformanceDataStepsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PerformanceReportPerformanceDataStepsInner samples(List<PerformanceReportPerformanceDataStepsInnerSamplesInner> samples) {
    this.samples = samples;
    return this;
  }

  public PerformanceReportPerformanceDataStepsInner addSamplesItem(PerformanceReportPerformanceDataStepsInnerSamplesInner samplesItem) {
    if (this.samples == null) {
      this.samples = new ArrayList<>();
    }
    this.samples.add(samplesItem);
    return this;
  }

  /**
   * Get samples
   * @return samples
   */
  @javax.annotation.Nullable
  public List<PerformanceReportPerformanceDataStepsInnerSamplesInner> getSamples() {
    return samples;
  }

  public void setSamples(List<PerformanceReportPerformanceDataStepsInnerSamplesInner> samples) {
    this.samples = samples;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceReportPerformanceDataStepsInner performanceReportPerformanceDataStepsInner = (PerformanceReportPerformanceDataStepsInner) o;
    return Objects.equals(this.avgCpu, performanceReportPerformanceDataStepsInner.avgCpu) &&
        Objects.equals(this.avgMem, performanceReportPerformanceDataStepsInner.avgMem) &&
        Objects.equals(this.elapsedSecs, performanceReportPerformanceDataStepsInner.elapsedSecs) &&
        Objects.equals(this.elapsedSecsEnd, performanceReportPerformanceDataStepsInner.elapsedSecsEnd) &&
        Objects.equals(this.elapsedSecsStart, performanceReportPerformanceDataStepsInner.elapsedSecsStart) &&
        Objects.equals(this.id, performanceReportPerformanceDataStepsInner.id) &&
        Objects.equals(this.name, performanceReportPerformanceDataStepsInner.name) &&
        Objects.equals(this.samples, performanceReportPerformanceDataStepsInner.samples);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avgCpu, avgMem, elapsedSecs, elapsedSecsEnd, elapsedSecsStart, id, name, samples);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceReportPerformanceDataStepsInner {\n");
    sb.append("    avgCpu: ").append(toIndentedString(avgCpu)).append("\n");
    sb.append("    avgMem: ").append(toIndentedString(avgMem)).append("\n");
    sb.append("    elapsedSecs: ").append(toIndentedString(elapsedSecs)).append("\n");
    sb.append("    elapsedSecsEnd: ").append(toIndentedString(elapsedSecsEnd)).append("\n");
    sb.append("    elapsedSecsStart: ").append(toIndentedString(elapsedSecsStart)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    samples: ").append(toIndentedString(samples)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("avg-cpu");
    openapiFields.add("avg-mem");
    openapiFields.add("elapsed-secs");
    openapiFields.add("elapsed-secs-end");
    openapiFields.add("elapsed-secs-start");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("samples");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PerformanceReportPerformanceDataStepsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PerformanceReportPerformanceDataStepsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PerformanceReportPerformanceDataStepsInner is not found in the empty JSON string", PerformanceReportPerformanceDataStepsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PerformanceReportPerformanceDataStepsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PerformanceReportPerformanceDataStepsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("samples") != null && !jsonObj.get("samples").isJsonNull()) {
        JsonArray jsonArraysamples = jsonObj.getAsJsonArray("samples");
        if (jsonArraysamples != null) {
          // ensure the json data is an array
          if (!jsonObj.get("samples").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `samples` to be an array in the JSON string but got `%s`", jsonObj.get("samples").toString()));
          }

          // validate the optional field `samples` (array)
          for (int i = 0; i < jsonArraysamples.size(); i++) {
            PerformanceReportPerformanceDataStepsInnerSamplesInner.validateJsonElement(jsonArraysamples.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PerformanceReportPerformanceDataStepsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PerformanceReportPerformanceDataStepsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PerformanceReportPerformanceDataStepsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PerformanceReportPerformanceDataStepsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PerformanceReportPerformanceDataStepsInner>() {
           @Override
           public void write(JsonWriter out, PerformanceReportPerformanceDataStepsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PerformanceReportPerformanceDataStepsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PerformanceReportPerformanceDataStepsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PerformanceReportPerformanceDataStepsInner
   * @throws IOException if the JSON string is invalid with respect to PerformanceReportPerformanceDataStepsInner
   */
  public static PerformanceReportPerformanceDataStepsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PerformanceReportPerformanceDataStepsInner.class);
  }

  /**
   * Convert an instance of PerformanceReportPerformanceDataStepsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

