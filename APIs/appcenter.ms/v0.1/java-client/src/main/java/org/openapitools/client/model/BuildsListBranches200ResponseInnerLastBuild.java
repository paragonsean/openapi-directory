/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BuildsListBranches200ResponseInnerLastBuild
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BuildsListBranches200ResponseInnerLastBuild {
  public static final String SERIALIZED_NAME_BUILD_NUMBER = "buildNumber";
  @SerializedName(SERIALIZED_NAME_BUILD_NUMBER)
  private String buildNumber;

  public static final String SERIALIZED_NAME_FINISH_TIME = "finishTime";
  @SerializedName(SERIALIZED_NAME_FINISH_TIME)
  private String finishTime;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LAST_CHANGED_DATE = "lastChangedDate";
  @SerializedName(SERIALIZED_NAME_LAST_CHANGED_DATE)
  private String lastChangedDate;

  public static final String SERIALIZED_NAME_QUEUE_TIME = "queueTime";
  @SerializedName(SERIALIZED_NAME_QUEUE_TIME)
  private String queueTime;

  public static final String SERIALIZED_NAME_RESULT = "result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private String result;

  public static final String SERIALIZED_NAME_SOURCE_BRANCH = "sourceBranch";
  @SerializedName(SERIALIZED_NAME_SOURCE_BRANCH)
  private String sourceBranch;

  public static final String SERIALIZED_NAME_SOURCE_VERSION = "sourceVersion";
  @SerializedName(SERIALIZED_NAME_SOURCE_VERSION)
  private String sourceVersion;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public BuildsListBranches200ResponseInnerLastBuild() {
  }

  public BuildsListBranches200ResponseInnerLastBuild buildNumber(String buildNumber) {
    this.buildNumber = buildNumber;
    return this;
  }

  /**
   * The build number
   * @return buildNumber
   */
  @javax.annotation.Nonnull
  public String getBuildNumber() {
    return buildNumber;
  }

  public void setBuildNumber(String buildNumber) {
    this.buildNumber = buildNumber;
  }


  public BuildsListBranches200ResponseInnerLastBuild finishTime(String finishTime) {
    this.finishTime = finishTime;
    return this;
  }

  /**
   * The time the build was finished
   * @return finishTime
   */
  @javax.annotation.Nullable
  public String getFinishTime() {
    return finishTime;
  }

  public void setFinishTime(String finishTime) {
    this.finishTime = finishTime;
  }


  public BuildsListBranches200ResponseInnerLastBuild id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * The build ID
   * minimum: 0
   * @return id
   */
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public BuildsListBranches200ResponseInnerLastBuild lastChangedDate(String lastChangedDate) {
    this.lastChangedDate = lastChangedDate;
    return this;
  }

  /**
   * The time the build status was last changed
   * @return lastChangedDate
   */
  @javax.annotation.Nullable
  public String getLastChangedDate() {
    return lastChangedDate;
  }

  public void setLastChangedDate(String lastChangedDate) {
    this.lastChangedDate = lastChangedDate;
  }


  public BuildsListBranches200ResponseInnerLastBuild queueTime(String queueTime) {
    this.queueTime = queueTime;
    return this;
  }

  /**
   * The time the build was queued
   * @return queueTime
   */
  @javax.annotation.Nonnull
  public String getQueueTime() {
    return queueTime;
  }

  public void setQueueTime(String queueTime) {
    this.queueTime = queueTime;
  }


  public BuildsListBranches200ResponseInnerLastBuild result(String result) {
    this.result = result;
    return this;
  }

  /**
   * The build result
   * @return result
   */
  @javax.annotation.Nonnull
  public String getResult() {
    return result;
  }

  public void setResult(String result) {
    this.result = result;
  }


  public BuildsListBranches200ResponseInnerLastBuild sourceBranch(String sourceBranch) {
    this.sourceBranch = sourceBranch;
    return this;
  }

  /**
   * The source branch name
   * @return sourceBranch
   */
  @javax.annotation.Nonnull
  public String getSourceBranch() {
    return sourceBranch;
  }

  public void setSourceBranch(String sourceBranch) {
    this.sourceBranch = sourceBranch;
  }


  public BuildsListBranches200ResponseInnerLastBuild sourceVersion(String sourceVersion) {
    this.sourceVersion = sourceVersion;
    return this;
  }

  /**
   * The source SHA
   * @return sourceVersion
   */
  @javax.annotation.Nonnull
  public String getSourceVersion() {
    return sourceVersion;
  }

  public void setSourceVersion(String sourceVersion) {
    this.sourceVersion = sourceVersion;
  }


  public BuildsListBranches200ResponseInnerLastBuild startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The time the build was started
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public BuildsListBranches200ResponseInnerLastBuild status(String status) {
    this.status = status;
    return this;
  }

  /**
   * The build status
   * @return status
   */
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildsListBranches200ResponseInnerLastBuild buildsListBranches200ResponseInnerLastBuild = (BuildsListBranches200ResponseInnerLastBuild) o;
    return Objects.equals(this.buildNumber, buildsListBranches200ResponseInnerLastBuild.buildNumber) &&
        Objects.equals(this.finishTime, buildsListBranches200ResponseInnerLastBuild.finishTime) &&
        Objects.equals(this.id, buildsListBranches200ResponseInnerLastBuild.id) &&
        Objects.equals(this.lastChangedDate, buildsListBranches200ResponseInnerLastBuild.lastChangedDate) &&
        Objects.equals(this.queueTime, buildsListBranches200ResponseInnerLastBuild.queueTime) &&
        Objects.equals(this.result, buildsListBranches200ResponseInnerLastBuild.result) &&
        Objects.equals(this.sourceBranch, buildsListBranches200ResponseInnerLastBuild.sourceBranch) &&
        Objects.equals(this.sourceVersion, buildsListBranches200ResponseInnerLastBuild.sourceVersion) &&
        Objects.equals(this.startTime, buildsListBranches200ResponseInnerLastBuild.startTime) &&
        Objects.equals(this.status, buildsListBranches200ResponseInnerLastBuild.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buildNumber, finishTime, id, lastChangedDate, queueTime, result, sourceBranch, sourceVersion, startTime, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildsListBranches200ResponseInnerLastBuild {\n");
    sb.append("    buildNumber: ").append(toIndentedString(buildNumber)).append("\n");
    sb.append("    finishTime: ").append(toIndentedString(finishTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastChangedDate: ").append(toIndentedString(lastChangedDate)).append("\n");
    sb.append("    queueTime: ").append(toIndentedString(queueTime)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    sourceBranch: ").append(toIndentedString(sourceBranch)).append("\n");
    sb.append("    sourceVersion: ").append(toIndentedString(sourceVersion)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buildNumber");
    openapiFields.add("finishTime");
    openapiFields.add("id");
    openapiFields.add("lastChangedDate");
    openapiFields.add("queueTime");
    openapiFields.add("result");
    openapiFields.add("sourceBranch");
    openapiFields.add("sourceVersion");
    openapiFields.add("startTime");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("buildNumber");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("queueTime");
    openapiRequiredFields.add("result");
    openapiRequiredFields.add("sourceBranch");
    openapiRequiredFields.add("sourceVersion");
    openapiRequiredFields.add("status");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BuildsListBranches200ResponseInnerLastBuild
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BuildsListBranches200ResponseInnerLastBuild.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BuildsListBranches200ResponseInnerLastBuild is not found in the empty JSON string", BuildsListBranches200ResponseInnerLastBuild.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BuildsListBranches200ResponseInnerLastBuild.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BuildsListBranches200ResponseInnerLastBuild` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BuildsListBranches200ResponseInnerLastBuild.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("buildNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buildNumber").toString()));
      }
      if ((jsonObj.get("finishTime") != null && !jsonObj.get("finishTime").isJsonNull()) && !jsonObj.get("finishTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finishTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finishTime").toString()));
      }
      if ((jsonObj.get("lastChangedDate") != null && !jsonObj.get("lastChangedDate").isJsonNull()) && !jsonObj.get("lastChangedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastChangedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastChangedDate").toString()));
      }
      if (!jsonObj.get("queueTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queueTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queueTime").toString()));
      }
      if (!jsonObj.get("result").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `result` to be a primitive type in the JSON string but got `%s`", jsonObj.get("result").toString()));
      }
      if (!jsonObj.get("sourceBranch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceBranch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceBranch").toString()));
      }
      if (!jsonObj.get("sourceVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceVersion").toString()));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BuildsListBranches200ResponseInnerLastBuild.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BuildsListBranches200ResponseInnerLastBuild' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BuildsListBranches200ResponseInnerLastBuild> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BuildsListBranches200ResponseInnerLastBuild.class));

       return (TypeAdapter<T>) new TypeAdapter<BuildsListBranches200ResponseInnerLastBuild>() {
           @Override
           public void write(JsonWriter out, BuildsListBranches200ResponseInnerLastBuild value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BuildsListBranches200ResponseInnerLastBuild read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BuildsListBranches200ResponseInnerLastBuild given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BuildsListBranches200ResponseInnerLastBuild
   * @throws IOException if the JSON string is invalid with respect to BuildsListBranches200ResponseInnerLastBuild
   */
  public static BuildsListBranches200ResponseInnerLastBuild fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BuildsListBranches200ResponseInnerLastBuild.class);
  }

  /**
   * Convert an instance of BuildsListBranches200ResponseInnerLastBuild to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

