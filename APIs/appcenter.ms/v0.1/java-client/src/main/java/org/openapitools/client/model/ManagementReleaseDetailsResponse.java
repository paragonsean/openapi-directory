/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details of an uploaded release
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ManagementReleaseDetailsResponse {
  public static final String SERIALIZED_NAME_BUILD_VERSION = "buildVersion";
  @SerializedName(SERIALIZED_NAME_BUILD_VERSION)
  private String buildVersion;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DELETED_AT = "deletedAt";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private String deletedAt;

  public static final String SERIALIZED_NAME_DISTINCT_ID = "distinctId";
  @SerializedName(SERIALIZED_NAME_DISTINCT_ID)
  private Integer distinctId;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  /**
   * The release&#39;s origin
   */
  @JsonAdapter(OriginEnum.Adapter.class)
  public enum OriginEnum {
    HOCKEYAPP("hockeyapp"),
    
    APPCENTER("appcenter");

    private String value;

    OriginEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OriginEnum fromValue(String value) {
      for (OriginEnum b : OriginEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OriginEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OriginEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OriginEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OriginEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OriginEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private OriginEnum origin;

  public static final String SERIALIZED_NAME_SORT_VERSION = "sortVersion";
  @SerializedName(SERIALIZED_NAME_SORT_VERSION)
  private String sortVersion;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public ManagementReleaseDetailsResponse() {
  }

  public ManagementReleaseDetailsResponse buildVersion(String buildVersion) {
    this.buildVersion = buildVersion;
    return this;
  }

  /**
   * The release&#39;s buildVersion.&lt;br&gt; For iOS: CFBundleVersion from info.plist.&lt;br&gt; For Android: android:versionCode from AppManifest.xml. 
   * @return buildVersion
   */
  @javax.annotation.Nullable
  public String getBuildVersion() {
    return buildVersion;
  }

  public void setBuildVersion(String buildVersion) {
    this.buildVersion = buildVersion;
  }


  public ManagementReleaseDetailsResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * UTC time the release was created in ISO 8601 format.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public ManagementReleaseDetailsResponse deletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * UTC time the release was created in ISO 8601 format.
   * @return deletedAt
   */
  @javax.annotation.Nullable
  public String getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
  }


  public ManagementReleaseDetailsResponse distinctId(Integer distinctId) {
    this.distinctId = distinctId;
    return this;
  }

  /**
   * ID identifying this unique release.
   * @return distinctId
   */
  @javax.annotation.Nullable
  public Integer getDistinctId() {
    return distinctId;
  }

  public void setDistinctId(Integer distinctId) {
    this.distinctId = distinctId;
  }


  public ManagementReleaseDetailsResponse enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * This value determines the whether a release currently is enabled or disabled.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ManagementReleaseDetailsResponse origin(OriginEnum origin) {
    this.origin = origin;
    return this;
  }

  /**
   * The release&#39;s origin
   * @return origin
   */
  @javax.annotation.Nullable
  public OriginEnum getOrigin() {
    return origin;
  }

  public void setOrigin(OriginEnum origin) {
    this.origin = origin;
  }


  public ManagementReleaseDetailsResponse sortVersion(String sortVersion) {
    this.sortVersion = sortVersion;
    return this;
  }

  /**
   * The release&#39;s sortVersion.
   * @return sortVersion
   */
  @javax.annotation.Nullable
  public String getSortVersion() {
    return sortVersion;
  }

  public void setSortVersion(String sortVersion) {
    this.sortVersion = sortVersion;
  }


  public ManagementReleaseDetailsResponse version(String version) {
    this.version = version;
    return this;
  }

  /**
   * The release&#39;s short version.&lt;br&gt; For iOS: CFBundleShortVersionString from info.plist.&lt;br&gt; For Android: android:versionName from AppManifest.xml. 
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementReleaseDetailsResponse managementReleaseDetailsResponse = (ManagementReleaseDetailsResponse) o;
    return Objects.equals(this.buildVersion, managementReleaseDetailsResponse.buildVersion) &&
        Objects.equals(this.createdAt, managementReleaseDetailsResponse.createdAt) &&
        Objects.equals(this.deletedAt, managementReleaseDetailsResponse.deletedAt) &&
        Objects.equals(this.distinctId, managementReleaseDetailsResponse.distinctId) &&
        Objects.equals(this.enabled, managementReleaseDetailsResponse.enabled) &&
        Objects.equals(this.origin, managementReleaseDetailsResponse.origin) &&
        Objects.equals(this.sortVersion, managementReleaseDetailsResponse.sortVersion) &&
        Objects.equals(this.version, managementReleaseDetailsResponse.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buildVersion, createdAt, deletedAt, distinctId, enabled, origin, sortVersion, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementReleaseDetailsResponse {\n");
    sb.append("    buildVersion: ").append(toIndentedString(buildVersion)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    distinctId: ").append(toIndentedString(distinctId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    sortVersion: ").append(toIndentedString(sortVersion)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buildVersion");
    openapiFields.add("createdAt");
    openapiFields.add("deletedAt");
    openapiFields.add("distinctId");
    openapiFields.add("enabled");
    openapiFields.add("origin");
    openapiFields.add("sortVersion");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ManagementReleaseDetailsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagementReleaseDetailsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagementReleaseDetailsResponse is not found in the empty JSON string", ManagementReleaseDetailsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ManagementReleaseDetailsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ManagementReleaseDetailsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("buildVersion") != null && !jsonObj.get("buildVersion").isJsonNull()) && !jsonObj.get("buildVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buildVersion").toString()));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("deletedAt") != null && !jsonObj.get("deletedAt").isJsonNull()) && !jsonObj.get("deletedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deletedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deletedAt").toString()));
      }
      if ((jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) && !jsonObj.get("origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      // validate the optional field `origin`
      if (jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) {
        OriginEnum.validateJsonElement(jsonObj.get("origin"));
      }
      if ((jsonObj.get("sortVersion") != null && !jsonObj.get("sortVersion").isJsonNull()) && !jsonObj.get("sortVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sortVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sortVersion").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagementReleaseDetailsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagementReleaseDetailsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagementReleaseDetailsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagementReleaseDetailsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagementReleaseDetailsResponse>() {
           @Override
           public void write(JsonWriter out, ManagementReleaseDetailsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagementReleaseDetailsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ManagementReleaseDetailsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ManagementReleaseDetailsResponse
   * @throws IOException if the JSON string is invalid with respect to ManagementReleaseDetailsResponse
   */
  public static ManagementReleaseDetailsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagementReleaseDetailsResponse.class);
  }

  /**
   * Convert an instance of ManagementReleaseDetailsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

