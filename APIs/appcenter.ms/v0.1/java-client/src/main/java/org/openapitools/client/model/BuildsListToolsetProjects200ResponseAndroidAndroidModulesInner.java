/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BuildsListToolsetProjects200ResponseAndroidAndroidModulesInnerBuildConfigurationsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner {
  public static final String SERIALIZED_NAME_BUILD_CONFIGURATIONS = "buildConfigurations";
  @SerializedName(SERIALIZED_NAME_BUILD_CONFIGURATIONS)
  private List<BuildsListToolsetProjects200ResponseAndroidAndroidModulesInnerBuildConfigurationsInner> buildConfigurations = new ArrayList<>();

  public static final String SERIALIZED_NAME_BUILD_TYPES = "buildTypes";
  @SerializedName(SERIALIZED_NAME_BUILD_TYPES)
  private List<String> buildTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_BUILD_VARIANTS = "buildVariants";
  @SerializedName(SERIALIZED_NAME_BUILD_VARIANTS)
  private List<String> buildVariants = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAS_BUNDLE = "hasBundle";
  @SerializedName(SERIALIZED_NAME_HAS_BUNDLE)
  private Boolean hasBundle;

  public static final String SERIALIZED_NAME_IS_ROOT = "isRoot";
  @SerializedName(SERIALIZED_NAME_IS_ROOT)
  private Boolean isRoot;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_FLAVORS = "productFlavors";
  @SerializedName(SERIALIZED_NAME_PRODUCT_FLAVORS)
  private List<String> productFlavors = new ArrayList<>();

  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner() {
  }

  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner buildConfigurations(List<BuildsListToolsetProjects200ResponseAndroidAndroidModulesInnerBuildConfigurationsInner> buildConfigurations) {
    this.buildConfigurations = buildConfigurations;
    return this;
  }

  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner addBuildConfigurationsItem(BuildsListToolsetProjects200ResponseAndroidAndroidModulesInnerBuildConfigurationsInner buildConfigurationsItem) {
    if (this.buildConfigurations == null) {
      this.buildConfigurations = new ArrayList<>();
    }
    this.buildConfigurations.add(buildConfigurationsItem);
    return this;
  }

  /**
   * The detected build configurations of the Android module
   * @return buildConfigurations
   */
  @javax.annotation.Nullable
  public List<BuildsListToolsetProjects200ResponseAndroidAndroidModulesInnerBuildConfigurationsInner> getBuildConfigurations() {
    return buildConfigurations;
  }

  public void setBuildConfigurations(List<BuildsListToolsetProjects200ResponseAndroidAndroidModulesInnerBuildConfigurationsInner> buildConfigurations) {
    this.buildConfigurations = buildConfigurations;
  }


  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner buildTypes(List<String> buildTypes) {
    this.buildTypes = buildTypes;
    return this;
  }

  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner addBuildTypesItem(String buildTypesItem) {
    if (this.buildTypes == null) {
      this.buildTypes = new ArrayList<>();
    }
    this.buildTypes.add(buildTypesItem);
    return this;
  }

  /**
   * The detected build types of the Android module
   * @return buildTypes
   */
  @javax.annotation.Nullable
  public List<String> getBuildTypes() {
    return buildTypes;
  }

  public void setBuildTypes(List<String> buildTypes) {
    this.buildTypes = buildTypes;
  }


  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner buildVariants(List<String> buildVariants) {
    this.buildVariants = buildVariants;
    return this;
  }

  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner addBuildVariantsItem(String buildVariantsItem) {
    if (this.buildVariants == null) {
      this.buildVariants = new ArrayList<>();
    }
    this.buildVariants.add(buildVariantsItem);
    return this;
  }

  /**
   * The detected build variants of the Android module (matrix of product flavor + build type (debug|release))
   * @return buildVariants
   */
  @javax.annotation.Nullable
  public List<String> getBuildVariants() {
    return buildVariants;
  }

  public void setBuildVariants(List<String> buildVariants) {
    this.buildVariants = buildVariants;
  }


  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner hasBundle(Boolean hasBundle) {
    this.hasBundle = hasBundle;
    return this;
  }

  /**
   * Module contains bundle settings
   * @return hasBundle
   */
  @javax.annotation.Nullable
  public Boolean getHasBundle() {
    return hasBundle;
  }

  public void setHasBundle(Boolean hasBundle) {
    this.hasBundle = hasBundle;
  }


  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner isRoot(Boolean isRoot) {
    this.isRoot = isRoot;
    return this;
  }

  /**
   * Whether the module is at the root level of the project
   * @return isRoot
   */
  @javax.annotation.Nullable
  public Boolean getIsRoot() {
    return isRoot;
  }

  public void setIsRoot(Boolean isRoot) {
    this.isRoot = isRoot;
  }


  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the Android module
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner productFlavors(List<String> productFlavors) {
    this.productFlavors = productFlavors;
    return this;
  }

  public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner addProductFlavorsItem(String productFlavorsItem) {
    if (this.productFlavors == null) {
      this.productFlavors = new ArrayList<>();
    }
    this.productFlavors.add(productFlavorsItem);
    return this;
  }

  /**
   * The product flavors of the Android module
   * @return productFlavors
   */
  @javax.annotation.Nullable
  public List<String> getProductFlavors() {
    return productFlavors;
  }

  public void setProductFlavors(List<String> productFlavors) {
    this.productFlavors = productFlavors;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner buildsListToolsetProjects200ResponseAndroidAndroidModulesInner = (BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner) o;
    return Objects.equals(this.buildConfigurations, buildsListToolsetProjects200ResponseAndroidAndroidModulesInner.buildConfigurations) &&
        Objects.equals(this.buildTypes, buildsListToolsetProjects200ResponseAndroidAndroidModulesInner.buildTypes) &&
        Objects.equals(this.buildVariants, buildsListToolsetProjects200ResponseAndroidAndroidModulesInner.buildVariants) &&
        Objects.equals(this.hasBundle, buildsListToolsetProjects200ResponseAndroidAndroidModulesInner.hasBundle) &&
        Objects.equals(this.isRoot, buildsListToolsetProjects200ResponseAndroidAndroidModulesInner.isRoot) &&
        Objects.equals(this.name, buildsListToolsetProjects200ResponseAndroidAndroidModulesInner.name) &&
        Objects.equals(this.productFlavors, buildsListToolsetProjects200ResponseAndroidAndroidModulesInner.productFlavors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buildConfigurations, buildTypes, buildVariants, hasBundle, isRoot, name, productFlavors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner {\n");
    sb.append("    buildConfigurations: ").append(toIndentedString(buildConfigurations)).append("\n");
    sb.append("    buildTypes: ").append(toIndentedString(buildTypes)).append("\n");
    sb.append("    buildVariants: ").append(toIndentedString(buildVariants)).append("\n");
    sb.append("    hasBundle: ").append(toIndentedString(hasBundle)).append("\n");
    sb.append("    isRoot: ").append(toIndentedString(isRoot)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productFlavors: ").append(toIndentedString(productFlavors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buildConfigurations");
    openapiFields.add("buildTypes");
    openapiFields.add("buildVariants");
    openapiFields.add("hasBundle");
    openapiFields.add("isRoot");
    openapiFields.add("name");
    openapiFields.add("productFlavors");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner is not found in the empty JSON string", BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("buildConfigurations") != null && !jsonObj.get("buildConfigurations").isJsonNull()) {
        JsonArray jsonArraybuildConfigurations = jsonObj.getAsJsonArray("buildConfigurations");
        if (jsonArraybuildConfigurations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("buildConfigurations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `buildConfigurations` to be an array in the JSON string but got `%s`", jsonObj.get("buildConfigurations").toString()));
          }

          // validate the optional field `buildConfigurations` (array)
          for (int i = 0; i < jsonArraybuildConfigurations.size(); i++) {
            BuildsListToolsetProjects200ResponseAndroidAndroidModulesInnerBuildConfigurationsInner.validateJsonElement(jsonArraybuildConfigurations.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("buildTypes") != null && !jsonObj.get("buildTypes").isJsonNull() && !jsonObj.get("buildTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildTypes` to be an array in the JSON string but got `%s`", jsonObj.get("buildTypes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("buildVariants") != null && !jsonObj.get("buildVariants").isJsonNull() && !jsonObj.get("buildVariants").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildVariants` to be an array in the JSON string but got `%s`", jsonObj.get("buildVariants").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("productFlavors") != null && !jsonObj.get("productFlavors").isJsonNull() && !jsonObj.get("productFlavors").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `productFlavors` to be an array in the JSON string but got `%s`", jsonObj.get("productFlavors").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner>() {
           @Override
           public void write(JsonWriter out, BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner
   * @throws IOException if the JSON string is invalid with respect to BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner
   */
  public static BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner.class);
  }

  /**
   * Convert an instance of BuildsListToolsetProjects200ResponseAndroidAndroidModulesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

