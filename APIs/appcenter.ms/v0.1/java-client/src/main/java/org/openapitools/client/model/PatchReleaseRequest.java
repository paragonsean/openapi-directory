/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PatchReleaseRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PatchReleaseRequest {
  public static final String SERIALIZED_NAME_DEST_PUBLISH_ID = "dest_publish_id";
  @SerializedName(SERIALIZED_NAME_DEST_PUBLISH_ID)
  private String destPublishId;

  public static final String SERIALIZED_NAME_ERROR_CONTEXT_ID = "error_contextId";
  @SerializedName(SERIALIZED_NAME_ERROR_CONTEXT_ID)
  private String errorContextId;

  public static final String SERIALIZED_NAME_ERROR_DETAILS = "error_details";
  @SerializedName(SERIALIZED_NAME_ERROR_DETAILS)
  private String errorDetails;

  public static final String SERIALIZED_NAME_IS_WRAPPER_REQUEST = "is_wrapper_request";
  @SerializedName(SERIALIZED_NAME_IS_WRAPPER_REQUEST)
  private Boolean isWrapperRequest;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_WRAP_PACKAGE_URL = "wrap_package_url";
  @SerializedName(SERIALIZED_NAME_WRAP_PACKAGE_URL)
  private String wrapPackageUrl;

  public PatchReleaseRequest() {
  }

  public PatchReleaseRequest destPublishId(String destPublishId) {
    this.destPublishId = destPublishId;
    return this;
  }

  /**
   * Destination Publish Id
   * @return destPublishId
   */
  @javax.annotation.Nullable
  public String getDestPublishId() {
    return destPublishId;
  }

  public void setDestPublishId(String destPublishId) {
    this.destPublishId = destPublishId;
  }


  public PatchReleaseRequest errorContextId(String errorContextId) {
    this.errorContextId = errorContextId;
    return this;
  }

  /**
   * contextId for failed error message
   * @return errorContextId
   */
  @javax.annotation.Nullable
  public String getErrorContextId() {
    return errorContextId;
  }

  public void setErrorContextId(String errorContextId) {
    this.errorContextId = errorContextId;
  }


  public PatchReleaseRequest errorDetails(String errorDetails) {
    this.errorDetails = errorDetails;
    return this;
  }

  /**
   * failure error details from store
   * @return errorDetails
   */
  @javax.annotation.Nullable
  public String getErrorDetails() {
    return errorDetails;
  }

  public void setErrorDetails(String errorDetails) {
    this.errorDetails = errorDetails;
  }


  public PatchReleaseRequest isWrapperRequest(Boolean isWrapperRequest) {
    this.isWrapperRequest = isWrapperRequest;
    return this;
  }

  /**
   * request is for wrapping or not
   * @return isWrapperRequest
   */
  @javax.annotation.Nullable
  public Boolean getIsWrapperRequest() {
    return isWrapperRequest;
  }

  public void setIsWrapperRequest(Boolean isWrapperRequest) {
    this.isWrapperRequest = isWrapperRequest;
  }


  public PatchReleaseRequest status(String status) {
    this.status = status;
    return this;
  }

  /**
   * updated status of release
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public PatchReleaseRequest wrapPackageUrl(String wrapPackageUrl) {
    this.wrapPackageUrl = wrapPackageUrl;
    return this;
  }

  /**
   * package url for wrapping request
   * @return wrapPackageUrl
   */
  @javax.annotation.Nullable
  public String getWrapPackageUrl() {
    return wrapPackageUrl;
  }

  public void setWrapPackageUrl(String wrapPackageUrl) {
    this.wrapPackageUrl = wrapPackageUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchReleaseRequest patchReleaseRequest = (PatchReleaseRequest) o;
    return Objects.equals(this.destPublishId, patchReleaseRequest.destPublishId) &&
        Objects.equals(this.errorContextId, patchReleaseRequest.errorContextId) &&
        Objects.equals(this.errorDetails, patchReleaseRequest.errorDetails) &&
        Objects.equals(this.isWrapperRequest, patchReleaseRequest.isWrapperRequest) &&
        Objects.equals(this.status, patchReleaseRequest.status) &&
        Objects.equals(this.wrapPackageUrl, patchReleaseRequest.wrapPackageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destPublishId, errorContextId, errorDetails, isWrapperRequest, status, wrapPackageUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchReleaseRequest {\n");
    sb.append("    destPublishId: ").append(toIndentedString(destPublishId)).append("\n");
    sb.append("    errorContextId: ").append(toIndentedString(errorContextId)).append("\n");
    sb.append("    errorDetails: ").append(toIndentedString(errorDetails)).append("\n");
    sb.append("    isWrapperRequest: ").append(toIndentedString(isWrapperRequest)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    wrapPackageUrl: ").append(toIndentedString(wrapPackageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dest_publish_id");
    openapiFields.add("error_contextId");
    openapiFields.add("error_details");
    openapiFields.add("is_wrapper_request");
    openapiFields.add("status");
    openapiFields.add("wrap_package_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PatchReleaseRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PatchReleaseRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PatchReleaseRequest is not found in the empty JSON string", PatchReleaseRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PatchReleaseRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PatchReleaseRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dest_publish_id") != null && !jsonObj.get("dest_publish_id").isJsonNull()) && !jsonObj.get("dest_publish_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dest_publish_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dest_publish_id").toString()));
      }
      if ((jsonObj.get("error_contextId") != null && !jsonObj.get("error_contextId").isJsonNull()) && !jsonObj.get("error_contextId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_contextId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_contextId").toString()));
      }
      if ((jsonObj.get("error_details") != null && !jsonObj.get("error_details").isJsonNull()) && !jsonObj.get("error_details").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_details` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_details").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("wrap_package_url") != null && !jsonObj.get("wrap_package_url").isJsonNull()) && !jsonObj.get("wrap_package_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wrap_package_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wrap_package_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PatchReleaseRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PatchReleaseRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PatchReleaseRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PatchReleaseRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PatchReleaseRequest>() {
           @Override
           public void write(JsonWriter out, PatchReleaseRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PatchReleaseRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PatchReleaseRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PatchReleaseRequest
   * @throws IOException if the JSON string is invalid with respect to PatchReleaseRequest
   */
  public static PatchReleaseRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PatchReleaseRequest.class);
  }

  /**
   * Convert an instance of PatchReleaseRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

