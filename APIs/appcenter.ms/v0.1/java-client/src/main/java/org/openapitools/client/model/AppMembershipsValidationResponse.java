/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppMembershipsValidationResponseAppUsersWithMissingMembershipsInner;
import org.openapitools.client.model.AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsInner;
import org.openapitools.client.model.AppMembershipsValidationResponseExcessAppMemberships;
import org.openapitools.client.model.AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppMembershipsValidationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppMembershipsValidationResponse {
  public static final String SERIALIZED_NAME_APP_USERS_WITH_MISSING_MEMBERSHIPS = "app_users_with_missing_memberships";
  @SerializedName(SERIALIZED_NAME_APP_USERS_WITH_MISSING_MEMBERSHIPS)
  private List<AppMembershipsValidationResponseAppUsersWithMissingMembershipsInner> appUsersWithMissingMemberships = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISTRIBUTION_GROUP_USERS_WITH_MISSING_MEMBERSHIPS = "distribution_group_users_with_missing_memberships";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_GROUP_USERS_WITH_MISSING_MEMBERSHIPS)
  private List<AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsInner> distributionGroupUsersWithMissingMemberships = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCESS_APP_MEMBERSHIPS = "excess_app_memberships";
  @SerializedName(SERIALIZED_NAME_EXCESS_APP_MEMBERSHIPS)
  private AppMembershipsValidationResponseExcessAppMemberships excessAppMemberships;

  public static final String SERIALIZED_NAME_ORGANIZATION_ADMINS_WITH_MISSING_MEMBERSHIPS = "organization_admins_with_missing_memberships";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ADMINS_WITH_MISSING_MEMBERSHIPS)
  private List<AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsInner> organizationAdminsWithMissingMemberships = new ArrayList<>();

  public AppMembershipsValidationResponse() {
  }

  public AppMembershipsValidationResponse appUsersWithMissingMemberships(List<AppMembershipsValidationResponseAppUsersWithMissingMembershipsInner> appUsersWithMissingMemberships) {
    this.appUsersWithMissingMemberships = appUsersWithMissingMemberships;
    return this;
  }

  public AppMembershipsValidationResponse addAppUsersWithMissingMembershipsItem(AppMembershipsValidationResponseAppUsersWithMissingMembershipsInner appUsersWithMissingMembershipsItem) {
    if (this.appUsersWithMissingMemberships == null) {
      this.appUsersWithMissingMemberships = new ArrayList<>();
    }
    this.appUsersWithMissingMemberships.add(appUsersWithMissingMembershipsItem);
    return this;
  }

  /**
   * Get appUsersWithMissingMemberships
   * @return appUsersWithMissingMemberships
   */
  @javax.annotation.Nullable
  public List<AppMembershipsValidationResponseAppUsersWithMissingMembershipsInner> getAppUsersWithMissingMemberships() {
    return appUsersWithMissingMemberships;
  }

  public void setAppUsersWithMissingMemberships(List<AppMembershipsValidationResponseAppUsersWithMissingMembershipsInner> appUsersWithMissingMemberships) {
    this.appUsersWithMissingMemberships = appUsersWithMissingMemberships;
  }


  public AppMembershipsValidationResponse distributionGroupUsersWithMissingMemberships(List<AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsInner> distributionGroupUsersWithMissingMemberships) {
    this.distributionGroupUsersWithMissingMemberships = distributionGroupUsersWithMissingMemberships;
    return this;
  }

  public AppMembershipsValidationResponse addDistributionGroupUsersWithMissingMembershipsItem(AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsInner distributionGroupUsersWithMissingMembershipsItem) {
    if (this.distributionGroupUsersWithMissingMemberships == null) {
      this.distributionGroupUsersWithMissingMemberships = new ArrayList<>();
    }
    this.distributionGroupUsersWithMissingMemberships.add(distributionGroupUsersWithMissingMembershipsItem);
    return this;
  }

  /**
   * Get distributionGroupUsersWithMissingMemberships
   * @return distributionGroupUsersWithMissingMemberships
   */
  @javax.annotation.Nullable
  public List<AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsInner> getDistributionGroupUsersWithMissingMemberships() {
    return distributionGroupUsersWithMissingMemberships;
  }

  public void setDistributionGroupUsersWithMissingMemberships(List<AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsInner> distributionGroupUsersWithMissingMemberships) {
    this.distributionGroupUsersWithMissingMemberships = distributionGroupUsersWithMissingMemberships;
  }


  public AppMembershipsValidationResponse excessAppMemberships(AppMembershipsValidationResponseExcessAppMemberships excessAppMemberships) {
    this.excessAppMemberships = excessAppMemberships;
    return this;
  }

  /**
   * Get excessAppMemberships
   * @return excessAppMemberships
   */
  @javax.annotation.Nullable
  public AppMembershipsValidationResponseExcessAppMemberships getExcessAppMemberships() {
    return excessAppMemberships;
  }

  public void setExcessAppMemberships(AppMembershipsValidationResponseExcessAppMemberships excessAppMemberships) {
    this.excessAppMemberships = excessAppMemberships;
  }


  public AppMembershipsValidationResponse organizationAdminsWithMissingMemberships(List<AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsInner> organizationAdminsWithMissingMemberships) {
    this.organizationAdminsWithMissingMemberships = organizationAdminsWithMissingMemberships;
    return this;
  }

  public AppMembershipsValidationResponse addOrganizationAdminsWithMissingMembershipsItem(AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsInner organizationAdminsWithMissingMembershipsItem) {
    if (this.organizationAdminsWithMissingMemberships == null) {
      this.organizationAdminsWithMissingMemberships = new ArrayList<>();
    }
    this.organizationAdminsWithMissingMemberships.add(organizationAdminsWithMissingMembershipsItem);
    return this;
  }

  /**
   * Get organizationAdminsWithMissingMemberships
   * @return organizationAdminsWithMissingMemberships
   */
  @javax.annotation.Nullable
  public List<AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsInner> getOrganizationAdminsWithMissingMemberships() {
    return organizationAdminsWithMissingMemberships;
  }

  public void setOrganizationAdminsWithMissingMemberships(List<AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsInner> organizationAdminsWithMissingMemberships) {
    this.organizationAdminsWithMissingMemberships = organizationAdminsWithMissingMemberships;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppMembershipsValidationResponse appMembershipsValidationResponse = (AppMembershipsValidationResponse) o;
    return Objects.equals(this.appUsersWithMissingMemberships, appMembershipsValidationResponse.appUsersWithMissingMemberships) &&
        Objects.equals(this.distributionGroupUsersWithMissingMemberships, appMembershipsValidationResponse.distributionGroupUsersWithMissingMemberships) &&
        Objects.equals(this.excessAppMemberships, appMembershipsValidationResponse.excessAppMemberships) &&
        Objects.equals(this.organizationAdminsWithMissingMemberships, appMembershipsValidationResponse.organizationAdminsWithMissingMemberships);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appUsersWithMissingMemberships, distributionGroupUsersWithMissingMemberships, excessAppMemberships, organizationAdminsWithMissingMemberships);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppMembershipsValidationResponse {\n");
    sb.append("    appUsersWithMissingMemberships: ").append(toIndentedString(appUsersWithMissingMemberships)).append("\n");
    sb.append("    distributionGroupUsersWithMissingMemberships: ").append(toIndentedString(distributionGroupUsersWithMissingMemberships)).append("\n");
    sb.append("    excessAppMemberships: ").append(toIndentedString(excessAppMemberships)).append("\n");
    sb.append("    organizationAdminsWithMissingMemberships: ").append(toIndentedString(organizationAdminsWithMissingMemberships)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_users_with_missing_memberships");
    openapiFields.add("distribution_group_users_with_missing_memberships");
    openapiFields.add("excess_app_memberships");
    openapiFields.add("organization_admins_with_missing_memberships");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppMembershipsValidationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppMembershipsValidationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppMembershipsValidationResponse is not found in the empty JSON string", AppMembershipsValidationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppMembershipsValidationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppMembershipsValidationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("app_users_with_missing_memberships") != null && !jsonObj.get("app_users_with_missing_memberships").isJsonNull()) {
        JsonArray jsonArrayappUsersWithMissingMemberships = jsonObj.getAsJsonArray("app_users_with_missing_memberships");
        if (jsonArrayappUsersWithMissingMemberships != null) {
          // ensure the json data is an array
          if (!jsonObj.get("app_users_with_missing_memberships").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `app_users_with_missing_memberships` to be an array in the JSON string but got `%s`", jsonObj.get("app_users_with_missing_memberships").toString()));
          }

          // validate the optional field `app_users_with_missing_memberships` (array)
          for (int i = 0; i < jsonArrayappUsersWithMissingMemberships.size(); i++) {
            AppMembershipsValidationResponseAppUsersWithMissingMembershipsInner.validateJsonElement(jsonArrayappUsersWithMissingMemberships.get(i));
          };
        }
      }
      if (jsonObj.get("distribution_group_users_with_missing_memberships") != null && !jsonObj.get("distribution_group_users_with_missing_memberships").isJsonNull()) {
        JsonArray jsonArraydistributionGroupUsersWithMissingMemberships = jsonObj.getAsJsonArray("distribution_group_users_with_missing_memberships");
        if (jsonArraydistributionGroupUsersWithMissingMemberships != null) {
          // ensure the json data is an array
          if (!jsonObj.get("distribution_group_users_with_missing_memberships").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `distribution_group_users_with_missing_memberships` to be an array in the JSON string but got `%s`", jsonObj.get("distribution_group_users_with_missing_memberships").toString()));
          }

          // validate the optional field `distribution_group_users_with_missing_memberships` (array)
          for (int i = 0; i < jsonArraydistributionGroupUsersWithMissingMemberships.size(); i++) {
            AppMembershipsValidationResponseDistributionGroupUsersWithMissingMembershipsInner.validateJsonElement(jsonArraydistributionGroupUsersWithMissingMemberships.get(i));
          };
        }
      }
      // validate the optional field `excess_app_memberships`
      if (jsonObj.get("excess_app_memberships") != null && !jsonObj.get("excess_app_memberships").isJsonNull()) {
        AppMembershipsValidationResponseExcessAppMemberships.validateJsonElement(jsonObj.get("excess_app_memberships"));
      }
      if (jsonObj.get("organization_admins_with_missing_memberships") != null && !jsonObj.get("organization_admins_with_missing_memberships").isJsonNull()) {
        JsonArray jsonArrayorganizationAdminsWithMissingMemberships = jsonObj.getAsJsonArray("organization_admins_with_missing_memberships");
        if (jsonArrayorganizationAdminsWithMissingMemberships != null) {
          // ensure the json data is an array
          if (!jsonObj.get("organization_admins_with_missing_memberships").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `organization_admins_with_missing_memberships` to be an array in the JSON string but got `%s`", jsonObj.get("organization_admins_with_missing_memberships").toString()));
          }

          // validate the optional field `organization_admins_with_missing_memberships` (array)
          for (int i = 0; i < jsonArrayorganizationAdminsWithMissingMemberships.size(); i++) {
            AppMembershipsValidationResponseOrganizationAdminsWithMissingMembershipsInner.validateJsonElement(jsonArrayorganizationAdminsWithMissingMemberships.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppMembershipsValidationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppMembershipsValidationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppMembershipsValidationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppMembershipsValidationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AppMembershipsValidationResponse>() {
           @Override
           public void write(JsonWriter out, AppMembershipsValidationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppMembershipsValidationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppMembershipsValidationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppMembershipsValidationResponse
   * @throws IOException if the JSON string is invalid with respect to AppMembershipsValidationResponse
   */
  public static AppMembershipsValidationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppMembershipsValidationResponse.class);
  }

  /**
   * Convert an instance of AppMembershipsValidationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

