/*
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CodePushStatusMetricMetadata
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:40.008147-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CodePushStatusMetricMetadata {
  public static final String SERIALIZED_NAME_APP_VERSION = "app_version";
  @SerializedName(SERIALIZED_NAME_APP_VERSION)
  private String appVersion;

  public static final String SERIALIZED_NAME_CLIENT_UNIQUE_ID = "client_unique_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_UNIQUE_ID)
  private String clientUniqueId;

  public static final String SERIALIZED_NAME_DEPLOYMENT_KEY = "deployment_key";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_KEY)
  private String deploymentKey;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_PREVIOUS_DEPLOYMENT_KEY = "previous_deployment_key";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_DEPLOYMENT_KEY)
  private String previousDeploymentKey;

  public static final String SERIALIZED_NAME_PREVIOUS_LABEL_OR_APP_VERSION = "previous_label_or_app_version";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_LABEL_OR_APP_VERSION)
  private String previousLabelOrAppVersion;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public CodePushStatusMetricMetadata() {
  }

  public CodePushStatusMetricMetadata appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

  /**
   * Get appVersion
   * @return appVersion
   */
  @javax.annotation.Nullable
  public String getAppVersion() {
    return appVersion;
  }

  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }


  public CodePushStatusMetricMetadata clientUniqueId(String clientUniqueId) {
    this.clientUniqueId = clientUniqueId;
    return this;
  }

  /**
   * Get clientUniqueId
   * @return clientUniqueId
   */
  @javax.annotation.Nullable
  public String getClientUniqueId() {
    return clientUniqueId;
  }

  public void setClientUniqueId(String clientUniqueId) {
    this.clientUniqueId = clientUniqueId;
  }


  public CodePushStatusMetricMetadata deploymentKey(String deploymentKey) {
    this.deploymentKey = deploymentKey;
    return this;
  }

  /**
   * Get deploymentKey
   * @return deploymentKey
   */
  @javax.annotation.Nonnull
  public String getDeploymentKey() {
    return deploymentKey;
  }

  public void setDeploymentKey(String deploymentKey) {
    this.deploymentKey = deploymentKey;
  }


  public CodePushStatusMetricMetadata label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @javax.annotation.Nullable
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  public CodePushStatusMetricMetadata previousDeploymentKey(String previousDeploymentKey) {
    this.previousDeploymentKey = previousDeploymentKey;
    return this;
  }

  /**
   * Get previousDeploymentKey
   * @return previousDeploymentKey
   */
  @javax.annotation.Nullable
  public String getPreviousDeploymentKey() {
    return previousDeploymentKey;
  }

  public void setPreviousDeploymentKey(String previousDeploymentKey) {
    this.previousDeploymentKey = previousDeploymentKey;
  }


  public CodePushStatusMetricMetadata previousLabelOrAppVersion(String previousLabelOrAppVersion) {
    this.previousLabelOrAppVersion = previousLabelOrAppVersion;
    return this;
  }

  /**
   * Get previousLabelOrAppVersion
   * @return previousLabelOrAppVersion
   */
  @javax.annotation.Nullable
  public String getPreviousLabelOrAppVersion() {
    return previousLabelOrAppVersion;
  }

  public void setPreviousLabelOrAppVersion(String previousLabelOrAppVersion) {
    this.previousLabelOrAppVersion = previousLabelOrAppVersion;
  }


  public CodePushStatusMetricMetadata status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CodePushStatusMetricMetadata codePushStatusMetricMetadata = (CodePushStatusMetricMetadata) o;
    return Objects.equals(this.appVersion, codePushStatusMetricMetadata.appVersion) &&
        Objects.equals(this.clientUniqueId, codePushStatusMetricMetadata.clientUniqueId) &&
        Objects.equals(this.deploymentKey, codePushStatusMetricMetadata.deploymentKey) &&
        Objects.equals(this.label, codePushStatusMetricMetadata.label) &&
        Objects.equals(this.previousDeploymentKey, codePushStatusMetricMetadata.previousDeploymentKey) &&
        Objects.equals(this.previousLabelOrAppVersion, codePushStatusMetricMetadata.previousLabelOrAppVersion) &&
        Objects.equals(this.status, codePushStatusMetricMetadata.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appVersion, clientUniqueId, deploymentKey, label, previousDeploymentKey, previousLabelOrAppVersion, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CodePushStatusMetricMetadata {\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    clientUniqueId: ").append(toIndentedString(clientUniqueId)).append("\n");
    sb.append("    deploymentKey: ").append(toIndentedString(deploymentKey)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    previousDeploymentKey: ").append(toIndentedString(previousDeploymentKey)).append("\n");
    sb.append("    previousLabelOrAppVersion: ").append(toIndentedString(previousLabelOrAppVersion)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_version");
    openapiFields.add("client_unique_id");
    openapiFields.add("deployment_key");
    openapiFields.add("label");
    openapiFields.add("previous_deployment_key");
    openapiFields.add("previous_label_or_app_version");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("deployment_key");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CodePushStatusMetricMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CodePushStatusMetricMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CodePushStatusMetricMetadata is not found in the empty JSON string", CodePushStatusMetricMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CodePushStatusMetricMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CodePushStatusMetricMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CodePushStatusMetricMetadata.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("app_version") != null && !jsonObj.get("app_version").isJsonNull()) && !jsonObj.get("app_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_version").toString()));
      }
      if ((jsonObj.get("client_unique_id") != null && !jsonObj.get("client_unique_id").isJsonNull()) && !jsonObj.get("client_unique_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_unique_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_unique_id").toString()));
      }
      if (!jsonObj.get("deployment_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deployment_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deployment_key").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if ((jsonObj.get("previous_deployment_key") != null && !jsonObj.get("previous_deployment_key").isJsonNull()) && !jsonObj.get("previous_deployment_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previous_deployment_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previous_deployment_key").toString()));
      }
      if ((jsonObj.get("previous_label_or_app_version") != null && !jsonObj.get("previous_label_or_app_version").isJsonNull()) && !jsonObj.get("previous_label_or_app_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previous_label_or_app_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previous_label_or_app_version").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CodePushStatusMetricMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CodePushStatusMetricMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CodePushStatusMetricMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CodePushStatusMetricMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<CodePushStatusMetricMetadata>() {
           @Override
           public void write(JsonWriter out, CodePushStatusMetricMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CodePushStatusMetricMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CodePushStatusMetricMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CodePushStatusMetricMetadata
   * @throws IOException if the JSON string is invalid with respect to CodePushStatusMetricMetadata
   */
  public static CodePushStatusMetricMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CodePushStatusMetricMetadata.class);
  }

  /**
   * Convert an instance of CodePushStatusMetricMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

