/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingInformationSearchResults_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingInformationSearchResults_inner::OAIBillingInformationSearchResults_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingInformationSearchResults_inner::OAIBillingInformationSearchResults_inner() {
    this->initializeModel();
}

OAIBillingInformationSearchResults_inner::~OAIBillingInformationSearchResults_inner() {}

void OAIBillingInformationSearchResults_inner::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_billing_internal_account_id_isSet = false;
    m_billing_internal_account_id_isValid = false;

    m_build_plan_isSet = false;
    m_build_plan_isValid = false;

    m_test_plan_isSet = false;
    m_test_plan_isValid = false;
}

void OAIBillingInformationSearchResults_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingInformationSearchResults_inner::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_billing_internal_account_id_isValid = ::OpenAPI::fromJsonValue(m_billing_internal_account_id, json[QString("billingInternalAccountId")]);
    m_billing_internal_account_id_isSet = !json[QString("billingInternalAccountId")].isNull() && m_billing_internal_account_id_isValid;

    m_build_plan_isValid = ::OpenAPI::fromJsonValue(m_build_plan, json[QString("buildPlan")]);
    m_build_plan_isSet = !json[QString("buildPlan")].isNull() && m_build_plan_isValid;

    m_test_plan_isValid = ::OpenAPI::fromJsonValue(m_test_plan, json[QString("testPlan")]);
    m_test_plan_isSet = !json[QString("testPlan")].isNull() && m_test_plan_isValid;
}

QString OAIBillingInformationSearchResults_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingInformationSearchResults_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_billing_internal_account_id_isSet) {
        obj.insert(QString("billingInternalAccountId"), ::OpenAPI::toJsonValue(m_billing_internal_account_id));
    }
    if (m_build_plan_isSet) {
        obj.insert(QString("buildPlan"), ::OpenAPI::toJsonValue(m_build_plan));
    }
    if (m_test_plan_isSet) {
        obj.insert(QString("testPlan"), ::OpenAPI::toJsonValue(m_test_plan));
    }
    return obj;
}

QString OAIBillingInformationSearchResults_inner::getAccountId() const {
    return m_account_id;
}
void OAIBillingInformationSearchResults_inner::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIBillingInformationSearchResults_inner::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIBillingInformationSearchResults_inner::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIBillingInformationSearchResults_inner::getAccountName() const {
    return m_account_name;
}
void OAIBillingInformationSearchResults_inner::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIBillingInformationSearchResults_inner::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIBillingInformationSearchResults_inner::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIBillingInformationSearchResults_inner::getBillingInternalAccountId() const {
    return m_billing_internal_account_id;
}
void OAIBillingInformationSearchResults_inner::setBillingInternalAccountId(const QString &billing_internal_account_id) {
    m_billing_internal_account_id = billing_internal_account_id;
    m_billing_internal_account_id_isSet = true;
}

bool OAIBillingInformationSearchResults_inner::is_billing_internal_account_id_Set() const{
    return m_billing_internal_account_id_isSet;
}

bool OAIBillingInformationSearchResults_inner::is_billing_internal_account_id_Valid() const{
    return m_billing_internal_account_id_isValid;
}

QString OAIBillingInformationSearchResults_inner::getBuildPlan() const {
    return m_build_plan;
}
void OAIBillingInformationSearchResults_inner::setBuildPlan(const QString &build_plan) {
    m_build_plan = build_plan;
    m_build_plan_isSet = true;
}

bool OAIBillingInformationSearchResults_inner::is_build_plan_Set() const{
    return m_build_plan_isSet;
}

bool OAIBillingInformationSearchResults_inner::is_build_plan_Valid() const{
    return m_build_plan_isValid;
}

QString OAIBillingInformationSearchResults_inner::getTestPlan() const {
    return m_test_plan;
}
void OAIBillingInformationSearchResults_inner::setTestPlan(const QString &test_plan) {
    m_test_plan = test_plan;
    m_test_plan_isSet = true;
}

bool OAIBillingInformationSearchResults_inner::is_test_plan_Set() const{
    return m_test_plan_isSet;
}

bool OAIBillingInformationSearchResults_inner::is_test_plan_Valid() const{
    return m_test_plan_isValid;
}

bool OAIBillingInformationSearchResults_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_internal_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_build_plan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_plan_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingInformationSearchResults_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
