/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITesterAppWithReleaseResponse_release.h
 *
 * 
 */

#ifndef OAITesterAppWithReleaseResponse_release_H
#define OAITesterAppWithReleaseResponse_release_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITesterAppWithReleaseResponse_release : public OAIObject {
public:
    OAITesterAppWithReleaseResponse_release();
    OAITesterAppWithReleaseResponse_release(QString json);
    ~OAITesterAppWithReleaseResponse_release() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsExternalBuild() const;
    void setIsExternalBuild(const bool &is_external_build);
    bool is_is_external_build_Set() const;
    bool is_is_external_build_Valid() const;

    bool isMandatoryUpdate() const;
    void setMandatoryUpdate(const bool &mandatory_update);
    bool is_mandatory_update_Set() const;
    bool is_mandatory_update_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getShortVersion() const;
    void setShortVersion(const QString &short_version);
    bool is_short_version_Set() const;
    bool is_short_version_Valid() const;

    QString getUploadedAt() const;
    void setUploadedAt(const QString &uploaded_at);
    bool is_uploaded_at_Set() const;
    bool is_uploaded_at_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getInstallUrl() const;
    void setInstallUrl(const QString &install_url);
    bool is_install_url_Set() const;
    bool is_install_url_Valid() const;

    QString getReleaseNotes() const;
    void setReleaseNotes(const QString &release_notes);
    bool is_release_notes_Set() const;
    bool is_release_notes_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_external_build;
    bool m_is_external_build_isSet;
    bool m_is_external_build_isValid;

    bool m_mandatory_update;
    bool m_mandatory_update_isSet;
    bool m_mandatory_update_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_short_version;
    bool m_short_version_isSet;
    bool m_short_version_isValid;

    QString m_uploaded_at;
    bool m_uploaded_at_isSet;
    bool m_uploaded_at_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_install_url;
    bool m_install_url_isSet;
    bool m_install_url_isValid;

    QString m_release_notes;
    bool m_release_notes_isSet;
    bool m_release_notes_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITesterAppWithReleaseResponse_release)

#endif // OAITesterAppWithReleaseResponse_release_H
