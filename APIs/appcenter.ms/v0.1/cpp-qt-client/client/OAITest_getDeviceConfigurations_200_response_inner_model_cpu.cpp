/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITest_getDeviceConfigurations_200_response_inner_model_cpu.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITest_getDeviceConfigurations_200_response_inner_model_cpu::OAITest_getDeviceConfigurations_200_response_inner_model_cpu(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITest_getDeviceConfigurations_200_response_inner_model_cpu::OAITest_getDeviceConfigurations_200_response_inner_model_cpu() {
    this->initializeModel();
}

OAITest_getDeviceConfigurations_200_response_inner_model_cpu::~OAITest_getDeviceConfigurations_200_response_inner_model_cpu() {}

void OAITest_getDeviceConfigurations_200_response_inner_model_cpu::initializeModel() {

    m_core_isSet = false;
    m_core_isValid = false;

    m_frequency_isSet = false;
    m_frequency_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAITest_getDeviceConfigurations_200_response_inner_model_cpu::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITest_getDeviceConfigurations_200_response_inner_model_cpu::fromJsonObject(QJsonObject json) {

    m_core_isValid = ::OpenAPI::fromJsonValue(m_core, json[QString("core")]);
    m_core_isSet = !json[QString("core")].isNull() && m_core_isValid;

    m_frequency_isValid = ::OpenAPI::fromJsonValue(m_frequency, json[QString("frequency")]);
    m_frequency_isSet = !json[QString("frequency")].isNull() && m_frequency_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAITest_getDeviceConfigurations_200_response_inner_model_cpu::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITest_getDeviceConfigurations_200_response_inner_model_cpu::asJsonObject() const {
    QJsonObject obj;
    if (m_core_isSet) {
        obj.insert(QString("core"), ::OpenAPI::toJsonValue(m_core));
    }
    if (m_frequency_isSet) {
        obj.insert(QString("frequency"), ::OpenAPI::toJsonValue(m_frequency));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

QString OAITest_getDeviceConfigurations_200_response_inner_model_cpu::getCore() const {
    return m_core;
}
void OAITest_getDeviceConfigurations_200_response_inner_model_cpu::setCore(const QString &core) {
    m_core = core;
    m_core_isSet = true;
}

bool OAITest_getDeviceConfigurations_200_response_inner_model_cpu::is_core_Set() const{
    return m_core_isSet;
}

bool OAITest_getDeviceConfigurations_200_response_inner_model_cpu::is_core_Valid() const{
    return m_core_isValid;
}

QString OAITest_getDeviceConfigurations_200_response_inner_model_cpu::getFrequency() const {
    return m_frequency;
}
void OAITest_getDeviceConfigurations_200_response_inner_model_cpu::setFrequency(const QString &frequency) {
    m_frequency = frequency;
    m_frequency_isSet = true;
}

bool OAITest_getDeviceConfigurations_200_response_inner_model_cpu::is_frequency_Set() const{
    return m_frequency_isSet;
}

bool OAITest_getDeviceConfigurations_200_response_inner_model_cpu::is_frequency_Valid() const{
    return m_frequency_isValid;
}

QString OAITest_getDeviceConfigurations_200_response_inner_model_cpu::getText() const {
    return m_text;
}
void OAITest_getDeviceConfigurations_200_response_inner_model_cpu::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAITest_getDeviceConfigurations_200_response_inner_model_cpu::is_text_Set() const{
    return m_text_isSet;
}

bool OAITest_getDeviceConfigurations_200_response_inner_model_cpu::is_text_Valid() const{
    return m_text_isValid;
}

bool OAITest_getDeviceConfigurations_200_response_inner_model_cpu::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_core_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_frequency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITest_getDeviceConfigurations_200_response_inner_model_cpu::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
