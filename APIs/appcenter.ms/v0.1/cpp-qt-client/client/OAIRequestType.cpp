/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestType::OAIRequestType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestType::OAIRequestType() {
    this->initializeModel();
}

OAIRequestType::~OAIRequestType() {}

void OAIRequestType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRequestType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRequestType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Unsupported", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::UNSUPPORTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Delete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::DELETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Purge", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::PURGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UndoDelete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::UNDODELETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Scheduled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::SCHEDULED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AppDelete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::APPDELETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AppPurge", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::APPPURGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AppUndoDelete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::APPUNDODELETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Export", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::EXPORT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CustomerAccountDelete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::CUSTOMERACCOUNTDELETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CustomerAccountExport", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::CUSTOMERACCOUNTEXPORT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CustomerUserDelete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::CUSTOMERUSERDELETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CustomerUserExport", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestType::CUSTOMERUSEREXPORT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRequestType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRequestType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRequestType::UNSUPPORTED:
            val = "Unsupported";
            break;
        case eOAIRequestType::DELETE:
            val = "Delete";
            break;
        case eOAIRequestType::PURGE:
            val = "Purge";
            break;
        case eOAIRequestType::UNDODELETE:
            val = "UndoDelete";
            break;
        case eOAIRequestType::SCHEDULED:
            val = "Scheduled";
            break;
        case eOAIRequestType::APPDELETE:
            val = "AppDelete";
            break;
        case eOAIRequestType::APPPURGE:
            val = "AppPurge";
            break;
        case eOAIRequestType::APPUNDODELETE:
            val = "AppUndoDelete";
            break;
        case eOAIRequestType::EXPORT:
            val = "Export";
            break;
        case eOAIRequestType::CUSTOMERACCOUNTDELETE:
            val = "CustomerAccountDelete";
            break;
        case eOAIRequestType::CUSTOMERACCOUNTEXPORT:
            val = "CustomerAccountExport";
            break;
        case eOAIRequestType::CUSTOMERUSERDELETE:
            val = "CustomerUserDelete";
            break;
        case eOAIRequestType::CUSTOMERUSEREXPORT:
            val = "CustomerUserExport";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRequestType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRequestType::eOAIRequestType OAIRequestType::getValue() const {
    return m_value;
}

void OAIRequestType::setValue(const OAIRequestType::eOAIRequestType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRequestType::isSet() const {
    
    return m_value_isSet;
}

bool OAIRequestType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
