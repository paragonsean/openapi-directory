/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppResponseInternal.h
 *
 * 
 */

#ifndef OAIAppResponseInternal_H
#define OAIAppResponseInternal_H

#include <QJsonObject>

#include "OAIAppResponseInternal_allOf_repositories.h"
#include "OAIAppResponseInternal_allOf_user_permissions.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppResponseInternal_allOf_repositories;
class OAIAppResponseInternal_allOf_user_permissions;

class OAIAppResponseInternal : public OAIObject {
public:
    OAIAppResponseInternal();
    OAIAppResponseInternal(QString json);
    ~OAIAppResponseInternal() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getIconSource() const;
    void setIconSource(const QString &icon_source);
    bool is_icon_source_Set() const;
    bool is_icon_source_Valid() const;

    QString getIconUrl() const;
    void setIconUrl(const QString &icon_url);
    bool is_icon_url_Set() const;
    bool is_icon_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOs() const;
    void setOs(const QString &os);
    bool is_os_Set() const;
    bool is_os_Valid() const;

    OAIObject getOwner() const;
    void setOwner(const OAIObject &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QString getReleaseType() const;
    void setReleaseType(const QString &release_type);
    bool is_release_type_Set() const;
    bool is_release_type_Valid() const;

    QString getAppSecret() const;
    void setAppSecret(const QString &app_secret);
    bool is_app_secret_Set() const;
    bool is_app_secret_Valid() const;

    OAIObject getAzureSubscription() const;
    void setAzureSubscription(const OAIObject &azure_subscription);
    bool is_azure_subscription_Set() const;
    bool is_azure_subscription_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<QString> getMemberPermissions() const;
    void setMemberPermissions(const QList<QString> &member_permissions);
    bool is_member_permissions_Set() const;
    bool is_member_permissions_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getCutoverFromHockeyappAt() const;
    void setCutoverFromHockeyappAt(const QString &cutover_from_hockeyapp_at);
    bool is_cutover_from_hockeyapp_at_Set() const;
    bool is_cutover_from_hockeyapp_at_Valid() const;

    QList<QString> getFeatureFlags() const;
    void setFeatureFlags(const QList<QString> &feature_flags);
    bool is_feature_flags_Set() const;
    bool is_feature_flags_Valid() const;

    QList<OAIAppResponseInternal_allOf_repositories> getRepositories() const;
    void setRepositories(const QList<OAIAppResponseInternal_allOf_repositories> &repositories);
    bool is_repositories_Set() const;
    bool is_repositories_Valid() const;

    OAIAppResponseInternal_allOf_user_permissions getUserPermissions() const;
    void setUserPermissions(const OAIAppResponseInternal_allOf_user_permissions &user_permissions);
    bool is_user_permissions_Set() const;
    bool is_user_permissions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_icon_source;
    bool m_icon_source_isSet;
    bool m_icon_source_isValid;

    QString m_icon_url;
    bool m_icon_url_isSet;
    bool m_icon_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_os;
    bool m_os_isSet;
    bool m_os_isValid;

    OAIObject m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QString m_release_type;
    bool m_release_type_isSet;
    bool m_release_type_isValid;

    QString m_app_secret;
    bool m_app_secret_isSet;
    bool m_app_secret_isValid;

    OAIObject m_azure_subscription;
    bool m_azure_subscription_isSet;
    bool m_azure_subscription_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<QString> m_member_permissions;
    bool m_member_permissions_isSet;
    bool m_member_permissions_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_cutover_from_hockeyapp_at;
    bool m_cutover_from_hockeyapp_at_isSet;
    bool m_cutover_from_hockeyapp_at_isValid;

    QList<QString> m_feature_flags;
    bool m_feature_flags_isSet;
    bool m_feature_flags_isValid;

    QList<OAIAppResponseInternal_allOf_repositories> m_repositories;
    bool m_repositories_isSet;
    bool m_repositories_isValid;

    OAIAppResponseInternal_allOf_user_permissions m_user_permissions;
    bool m_user_permissions_isSet;
    bool m_user_permissions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppResponseInternal)

#endif // OAIAppResponseInternal_H
