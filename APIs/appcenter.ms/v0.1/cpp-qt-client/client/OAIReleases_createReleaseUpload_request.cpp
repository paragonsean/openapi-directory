/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReleases_createReleaseUpload_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReleases_createReleaseUpload_request::OAIReleases_createReleaseUpload_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReleases_createReleaseUpload_request::OAIReleases_createReleaseUpload_request() {
    this->initializeModel();
}

OAIReleases_createReleaseUpload_request::~OAIReleases_createReleaseUpload_request() {}

void OAIReleases_createReleaseUpload_request::initializeModel() {

    m_build_number_isSet = false;
    m_build_number_isValid = false;

    m_build_version_isSet = false;
    m_build_version_isValid = false;
}

void OAIReleases_createReleaseUpload_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReleases_createReleaseUpload_request::fromJsonObject(QJsonObject json) {

    m_build_number_isValid = ::OpenAPI::fromJsonValue(m_build_number, json[QString("build_number")]);
    m_build_number_isSet = !json[QString("build_number")].isNull() && m_build_number_isValid;

    m_build_version_isValid = ::OpenAPI::fromJsonValue(m_build_version, json[QString("build_version")]);
    m_build_version_isSet = !json[QString("build_version")].isNull() && m_build_version_isValid;
}

QString OAIReleases_createReleaseUpload_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReleases_createReleaseUpload_request::asJsonObject() const {
    QJsonObject obj;
    if (m_build_number_isSet) {
        obj.insert(QString("build_number"), ::OpenAPI::toJsonValue(m_build_number));
    }
    if (m_build_version_isSet) {
        obj.insert(QString("build_version"), ::OpenAPI::toJsonValue(m_build_version));
    }
    return obj;
}

QString OAIReleases_createReleaseUpload_request::getBuildNumber() const {
    return m_build_number;
}
void OAIReleases_createReleaseUpload_request::setBuildNumber(const QString &build_number) {
    m_build_number = build_number;
    m_build_number_isSet = true;
}

bool OAIReleases_createReleaseUpload_request::is_build_number_Set() const{
    return m_build_number_isSet;
}

bool OAIReleases_createReleaseUpload_request::is_build_number_Valid() const{
    return m_build_number_isValid;
}

QString OAIReleases_createReleaseUpload_request::getBuildVersion() const {
    return m_build_version;
}
void OAIReleases_createReleaseUpload_request::setBuildVersion(const QString &build_version) {
    m_build_version = build_version;
    m_build_version_isSet = true;
}

bool OAIReleases_createReleaseUpload_request::is_build_version_Set() const{
    return m_build_version_isSet;
}

bool OAIReleases_createReleaseUpload_request::is_build_version_Valid() const{
    return m_build_version_isValid;
}

bool OAIReleases_createReleaseUpload_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_build_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReleases_createReleaseUpload_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
