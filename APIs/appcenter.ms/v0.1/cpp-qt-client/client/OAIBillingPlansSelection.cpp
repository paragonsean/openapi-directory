/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingPlansSelection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingPlansSelection::OAIBillingPlansSelection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingPlansSelection::OAIBillingPlansSelection() {
    this->initializeModel();
}

OAIBillingPlansSelection::~OAIBillingPlansSelection() {}

void OAIBillingPlansSelection::initializeModel() {

    m_build_service_isSet = false;
    m_build_service_isValid = false;

    m_test_service_isSet = false;
    m_test_service_isValid = false;
}

void OAIBillingPlansSelection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingPlansSelection::fromJsonObject(QJsonObject json) {

    m_build_service_isValid = ::OpenAPI::fromJsonValue(m_build_service, json[QString("buildService")]);
    m_build_service_isSet = !json[QString("buildService")].isNull() && m_build_service_isValid;

    m_test_service_isValid = ::OpenAPI::fromJsonValue(m_test_service, json[QString("testService")]);
    m_test_service_isSet = !json[QString("testService")].isNull() && m_test_service_isValid;
}

QString OAIBillingPlansSelection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingPlansSelection::asJsonObject() const {
    QJsonObject obj;
    if (m_build_service.isSet()) {
        obj.insert(QString("buildService"), ::OpenAPI::toJsonValue(m_build_service));
    }
    if (m_test_service.isSet()) {
        obj.insert(QString("testService"), ::OpenAPI::toJsonValue(m_test_service));
    }
    return obj;
}

OAIBillingAggregatedInformation_getByApp_200_response_billingPlans_buildService_currentBillingPeriod_byAccount OAIBillingPlansSelection::getBuildService() const {
    return m_build_service;
}
void OAIBillingPlansSelection::setBuildService(const OAIBillingAggregatedInformation_getByApp_200_response_billingPlans_buildService_currentBillingPeriod_byAccount &build_service) {
    m_build_service = build_service;
    m_build_service_isSet = true;
}

bool OAIBillingPlansSelection::is_build_service_Set() const{
    return m_build_service_isSet;
}

bool OAIBillingPlansSelection::is_build_service_Valid() const{
    return m_build_service_isValid;
}

OAIBillingAggregatedInformation_getByApp_200_response_billingPlans_buildService_currentBillingPeriod_byAccount OAIBillingPlansSelection::getTestService() const {
    return m_test_service;
}
void OAIBillingPlansSelection::setTestService(const OAIBillingAggregatedInformation_getByApp_200_response_billingPlans_buildService_currentBillingPeriod_byAccount &test_service) {
    m_test_service = test_service;
    m_test_service_isSet = true;
}

bool OAIBillingPlansSelection::is_test_service_Set() const{
    return m_test_service_isSet;
}

bool OAIBillingPlansSelection::is_test_service_Valid() const{
    return m_test_service_isValid;
}

bool OAIBillingPlansSelection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build_service.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_service.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingPlansSelection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
