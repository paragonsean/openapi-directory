/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeployment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeployment::OAIDeployment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeployment::OAIDeployment() {
    this->initializeModel();
}

OAIDeployment::~OAIDeployment() {}

void OAIDeployment::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_latest_release_isSet = false;
    m_latest_release_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIDeployment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeployment::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_latest_release_isValid = ::OpenAPI::fromJsonValue(m_latest_release, json[QString("latest_release")]);
    m_latest_release_isSet = !json[QString("latest_release")].isNull() && m_latest_release_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIDeployment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeployment::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_latest_release.isSet()) {
        obj.insert(QString("latest_release"), ::OpenAPI::toJsonValue(m_latest_release));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIDeployment::getKey() const {
    return m_key;
}
void OAIDeployment::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIDeployment::is_key_Set() const{
    return m_key_isSet;
}

bool OAIDeployment::is_key_Valid() const{
    return m_key_isValid;
}

OAICodePushDeployments_list_200_response_inner_latest_release OAIDeployment::getLatestRelease() const {
    return m_latest_release;
}
void OAIDeployment::setLatestRelease(const OAICodePushDeployments_list_200_response_inner_latest_release &latest_release) {
    m_latest_release = latest_release;
    m_latest_release_isSet = true;
}

bool OAIDeployment::is_latest_release_Set() const{
    return m_latest_release_isSet;
}

bool OAIDeployment::is_latest_release_Valid() const{
    return m_latest_release_isValid;
}

QString OAIDeployment::getName() const {
    return m_name;
}
void OAIDeployment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDeployment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDeployment::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIDeployment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_release.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeployment::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
