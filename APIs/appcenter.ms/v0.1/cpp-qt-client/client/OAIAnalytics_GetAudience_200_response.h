/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalytics_GetAudience_200_response.h
 *
 * Audience with details.
 */

#ifndef OAIAnalytics_GetAudience_200_response_H
#define OAIAnalytics_GetAudience_200_response_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnalytics_GetAudience_200_response : public OAIObject {
public:
    OAIAnalytics_GetAudience_200_response();
    OAIAnalytics_GetAudience_200_response(QString json);
    ~OAIAnalytics_GetAudience_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getCustomProperties() const;
    void setCustomProperties(const QMap<QString, QString> &custom_properties);
    bool is_custom_properties_Set() const;
    bool is_custom_properties_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint64 getEstimatedTotalCount() const;
    void setEstimatedTotalCount(const qint64 &estimated_total_count);
    bool is_estimated_total_count_Set() const;
    bool is_estimated_total_count_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getDefinition() const;
    void setDefinition(const QString &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint64 getEstimatedCount() const;
    void setEstimatedCount(const qint64 &estimated_count);
    bool is_estimated_count_Set() const;
    bool is_estimated_count_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_custom_properties;
    bool m_custom_properties_isSet;
    bool m_custom_properties_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint64 m_estimated_total_count;
    bool m_estimated_total_count_isSet;
    bool m_estimated_total_count_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint64 m_estimated_count;
    bool m_estimated_count_isSet;
    bool m_estimated_count_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalytics_GetAudience_200_response)

#endif // OAIAnalytics_GetAudience_200_response_H
