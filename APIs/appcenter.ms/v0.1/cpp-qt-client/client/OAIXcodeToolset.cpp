/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIXcodeToolset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIXcodeToolset::OAIXcodeToolset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIXcodeToolset::OAIXcodeToolset() {
    this->initializeModel();
}

OAIXcodeToolset::~OAIXcodeToolset() {}

void OAIXcodeToolset::initializeModel() {

    m_xcode_scheme_containers_isSet = false;
    m_xcode_scheme_containers_isValid = false;
}

void OAIXcodeToolset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIXcodeToolset::fromJsonObject(QJsonObject json) {

    m_xcode_scheme_containers_isValid = ::OpenAPI::fromJsonValue(m_xcode_scheme_containers, json[QString("xcodeSchemeContainers")]);
    m_xcode_scheme_containers_isSet = !json[QString("xcodeSchemeContainers")].isNull() && m_xcode_scheme_containers_isValid;
}

QString OAIXcodeToolset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIXcodeToolset::asJsonObject() const {
    QJsonObject obj;
    if (m_xcode_scheme_containers.size() > 0) {
        obj.insert(QString("xcodeSchemeContainers"), ::OpenAPI::toJsonValue(m_xcode_scheme_containers));
    }
    return obj;
}

QList<OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner> OAIXcodeToolset::getXcodeSchemeContainers() const {
    return m_xcode_scheme_containers;
}
void OAIXcodeToolset::setXcodeSchemeContainers(const QList<OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner> &xcode_scheme_containers) {
    m_xcode_scheme_containers = xcode_scheme_containers;
    m_xcode_scheme_containers_isSet = true;
}

bool OAIXcodeToolset::is_xcode_scheme_containers_Set() const{
    return m_xcode_scheme_containers_isSet;
}

bool OAIXcodeToolset::is_xcode_scheme_containers_Valid() const{
    return m_xcode_scheme_containers_isValid;
}

bool OAIXcodeToolset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_xcode_scheme_containers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIXcodeToolset::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_xcode_scheme_containers_isValid && true;
}

} // namespace OpenAPI
