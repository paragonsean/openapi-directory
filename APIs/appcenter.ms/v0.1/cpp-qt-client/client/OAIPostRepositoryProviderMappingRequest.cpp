/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostRepositoryProviderMappingRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostRepositoryProviderMappingRequest::OAIPostRepositoryProviderMappingRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostRepositoryProviderMappingRequest::OAIPostRepositoryProviderMappingRequest() {
    this->initializeModel();
}

OAIPostRepositoryProviderMappingRequest::~OAIPostRepositoryProviderMappingRequest() {}

void OAIPostRepositoryProviderMappingRequest::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_external_account_id_isSet = false;
    m_external_account_id_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;
}

void OAIPostRepositoryProviderMappingRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostRepositoryProviderMappingRequest::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_external_account_id, json[QString("external_account_id")]);
    m_external_account_id_isSet = !json[QString("external_account_id")].isNull() && m_external_account_id_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;
}

QString OAIPostRepositoryProviderMappingRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostRepositoryProviderMappingRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_external_account_id_isSet) {
        obj.insert(QString("external_account_id"), ::OpenAPI::toJsonValue(m_external_account_id));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    return obj;
}

QString OAIPostRepositoryProviderMappingRequest::getAccountId() const {
    return m_account_id;
}
void OAIPostRepositoryProviderMappingRequest::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIPostRepositoryProviderMappingRequest::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIPostRepositoryProviderMappingRequest::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIPostRepositoryProviderMappingRequest::getExternalAccountId() const {
    return m_external_account_id;
}
void OAIPostRepositoryProviderMappingRequest::setExternalAccountId(const QString &external_account_id) {
    m_external_account_id = external_account_id;
    m_external_account_id_isSet = true;
}

bool OAIPostRepositoryProviderMappingRequest::is_external_account_id_Set() const{
    return m_external_account_id_isSet;
}

bool OAIPostRepositoryProviderMappingRequest::is_external_account_id_Valid() const{
    return m_external_account_id_isValid;
}

QString OAIPostRepositoryProviderMappingRequest::getProvider() const {
    return m_provider;
}
void OAIPostRepositoryProviderMappingRequest::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAIPostRepositoryProviderMappingRequest::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAIPostRepositoryProviderMappingRequest::is_provider_Valid() const{
    return m_provider_isValid;
}

bool OAIPostRepositoryProviderMappingRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostRepositoryProviderMappingRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_external_account_id_isValid && m_provider_isValid && true;
}

} // namespace OpenAPI
