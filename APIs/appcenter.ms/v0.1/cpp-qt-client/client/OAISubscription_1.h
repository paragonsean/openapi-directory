/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscription_1.h
 *
 * Subscription information
 */

#ifndef OAISubscription_1_H
#define OAISubscription_1_H

#include <QJsonObject>

#include "OAISubscription_Tier.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubscription_Tier;

class OAISubscription_1 : public OAIObject {
public:
    OAISubscription_1();
    OAISubscription_1(QString json);
    ~OAISubscription_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    qint32 getConcurrentDevicesLimit() const;
    void setConcurrentDevicesLimit(const qint32 &concurrent_devices_limit);
    bool is_concurrent_devices_limit_Set() const;
    bool is_concurrent_devices_limit_Valid() const;

    double getDaysLeft() const;
    void setDaysLeft(const double &days_left);
    bool is_days_left_Set() const;
    bool is_days_left_Valid() const;

    QString getEndsAt() const;
    void setEndsAt(const QString &ends_at);
    bool is_ends_at_Set() const;
    bool is_ends_at_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getRunningDevices() const;
    void setRunningDevices(const qint32 &running_devices);
    bool is_running_devices_Set() const;
    bool is_running_devices_Valid() const;

    QString getStartsAt() const;
    void setStartsAt(const QString &starts_at);
    bool is_starts_at_Set() const;
    bool is_starts_at_Valid() const;

    OAISubscription_Tier getTier() const;
    void setTier(const OAISubscription_Tier &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    qint32 m_concurrent_devices_limit;
    bool m_concurrent_devices_limit_isSet;
    bool m_concurrent_devices_limit_isValid;

    double m_days_left;
    bool m_days_left_isSet;
    bool m_days_left_isValid;

    QString m_ends_at;
    bool m_ends_at_isSet;
    bool m_ends_at_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_running_devices;
    bool m_running_devices_isSet;
    bool m_running_devices_isValid;

    QString m_starts_at;
    bool m_starts_at_isSet;
    bool m_starts_at_isValid;

    OAISubscription_Tier m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscription_1)

#endif // OAISubscription_1_H
