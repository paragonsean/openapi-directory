/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject() {
    this->initializeModel();
}

OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::~OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject() {}

void OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::initializeModel() {

    m_archive_target_id_isSet = false;
    m_archive_target_id_isValid = false;

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_project_path_isSet = false;
    m_project_path_isValid = false;
}

void OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::fromJsonObject(QJsonObject json) {

    m_archive_target_id_isValid = ::OpenAPI::fromJsonValue(m_archive_target_id, json[QString("archiveTargetId")]);
    m_archive_target_id_isSet = !json[QString("archiveTargetId")].isNull() && m_archive_target_id_isValid;

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("projectName")]);
    m_project_name_isSet = !json[QString("projectName")].isNull() && m_project_name_isValid;

    m_project_path_isValid = ::OpenAPI::fromJsonValue(m_project_path, json[QString("projectPath")]);
    m_project_path_isSet = !json[QString("projectPath")].isNull() && m_project_path_isValid;
}

QString OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::asJsonObject() const {
    QJsonObject obj;
    if (m_archive_target_id_isSet) {
        obj.insert(QString("archiveTargetId"), ::OpenAPI::toJsonValue(m_archive_target_id));
    }
    if (m_project_name_isSet) {
        obj.insert(QString("projectName"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_project_path_isSet) {
        obj.insert(QString("projectPath"), ::OpenAPI::toJsonValue(m_project_path));
    }
    return obj;
}

QString OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::getArchiveTargetId() const {
    return m_archive_target_id;
}
void OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::setArchiveTargetId(const QString &archive_target_id) {
    m_archive_target_id = archive_target_id;
    m_archive_target_id_isSet = true;
}

bool OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::is_archive_target_id_Set() const{
    return m_archive_target_id_isSet;
}

bool OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::is_archive_target_id_Valid() const{
    return m_archive_target_id_isValid;
}

QString OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::getProjectName() const {
    return m_project_name;
}
void OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QString OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::getProjectPath() const {
    return m_project_path;
}
void OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::setProjectPath(const QString &project_path) {
    m_project_path = project_path;
    m_project_path_isSet = true;
}

bool OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::is_project_path_Set() const{
    return m_project_path_isSet;
}

bool OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::is_project_path_Valid() const{
    return m_project_path_isValid;
}

bool OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_archive_target_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuilds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_archive_target_id_isValid && m_project_name_isValid && true;
}

} // namespace OpenAPI
