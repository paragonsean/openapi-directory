/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceInfoResponse.h
 *
 * The information for a single iOS device
 */

#ifndef OAIDeviceInfoResponse_H
#define OAIDeviceInfoResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeviceInfoResponse : public OAIObject {
public:
    OAIDeviceInfoResponse();
    OAIDeviceInfoResponse(QString json);
    ~OAIDeviceInfoResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    QString getFullDeviceName() const;
    void setFullDeviceName(const QString &full_device_name);
    bool is_full_device_name_Set() const;
    bool is_full_device_name_Valid() const;

    QString getImei() const;
    void setImei(const QString &imei);
    bool is_imei_Set() const;
    bool is_imei_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getOsBuild() const;
    void setOsBuild(const QString &os_build);
    bool is_os_build_Set() const;
    bool is_os_build_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    QString getRegisteredAt() const;
    void setRegisteredAt(const QString &registered_at);
    bool is_registered_at_Set() const;
    bool is_registered_at_Valid() const;

    QString getSerial() const;
    void setSerial(const QString &serial);
    bool is_serial_Set() const;
    bool is_serial_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUdid() const;
    void setUdid(const QString &udid);
    bool is_udid_Set() const;
    bool is_udid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    QString m_full_device_name;
    bool m_full_device_name_isSet;
    bool m_full_device_name_isValid;

    QString m_imei;
    bool m_imei_isSet;
    bool m_imei_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_os_build;
    bool m_os_build_isSet;
    bool m_os_build_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    QString m_registered_at;
    bool m_registered_at_isSet;
    bool m_registered_at_isValid;

    QString m_serial;
    bool m_serial_isSet;
    bool m_serial_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_udid;
    bool m_udid_isSet;
    bool m_udid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceInfoResponse)

#endif // OAIDeviceInfoResponse_H
