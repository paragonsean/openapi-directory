/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResignInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResignInfo::OAIResignInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResignInfo::OAIResignInfo() {
    this->initializeModel();
}

OAIResignInfo::~OAIResignInfo() {}

void OAIResignInfo::initializeModel() {

    m_certificate_expiration_isSet = false;
    m_certificate_expiration_isValid = false;

    m_certificate_name_isSet = false;
    m_certificate_name_isValid = false;

    m_group_name_isSet = false;
    m_group_name_isValid = false;

    m_profile_name_isSet = false;
    m_profile_name_isValid = false;

    m_profile_type_isSet = false;
    m_profile_type_isValid = false;
}

void OAIResignInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResignInfo::fromJsonObject(QJsonObject json) {

    m_certificate_expiration_isValid = ::OpenAPI::fromJsonValue(m_certificate_expiration, json[QString("certificate_expiration")]);
    m_certificate_expiration_isSet = !json[QString("certificate_expiration")].isNull() && m_certificate_expiration_isValid;

    m_certificate_name_isValid = ::OpenAPI::fromJsonValue(m_certificate_name, json[QString("certificate_name")]);
    m_certificate_name_isSet = !json[QString("certificate_name")].isNull() && m_certificate_name_isValid;

    m_group_name_isValid = ::OpenAPI::fromJsonValue(m_group_name, json[QString("group_name")]);
    m_group_name_isSet = !json[QString("group_name")].isNull() && m_group_name_isValid;

    m_profile_name_isValid = ::OpenAPI::fromJsonValue(m_profile_name, json[QString("profile_name")]);
    m_profile_name_isSet = !json[QString("profile_name")].isNull() && m_profile_name_isValid;

    m_profile_type_isValid = ::OpenAPI::fromJsonValue(m_profile_type, json[QString("profile_type")]);
    m_profile_type_isSet = !json[QString("profile_type")].isNull() && m_profile_type_isValid;
}

QString OAIResignInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResignInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_certificate_expiration_isSet) {
        obj.insert(QString("certificate_expiration"), ::OpenAPI::toJsonValue(m_certificate_expiration));
    }
    if (m_certificate_name_isSet) {
        obj.insert(QString("certificate_name"), ::OpenAPI::toJsonValue(m_certificate_name));
    }
    if (m_group_name_isSet) {
        obj.insert(QString("group_name"), ::OpenAPI::toJsonValue(m_group_name));
    }
    if (m_profile_name_isSet) {
        obj.insert(QString("profile_name"), ::OpenAPI::toJsonValue(m_profile_name));
    }
    if (m_profile_type_isSet) {
        obj.insert(QString("profile_type"), ::OpenAPI::toJsonValue(m_profile_type));
    }
    return obj;
}

QString OAIResignInfo::getCertificateExpiration() const {
    return m_certificate_expiration;
}
void OAIResignInfo::setCertificateExpiration(const QString &certificate_expiration) {
    m_certificate_expiration = certificate_expiration;
    m_certificate_expiration_isSet = true;
}

bool OAIResignInfo::is_certificate_expiration_Set() const{
    return m_certificate_expiration_isSet;
}

bool OAIResignInfo::is_certificate_expiration_Valid() const{
    return m_certificate_expiration_isValid;
}

QString OAIResignInfo::getCertificateName() const {
    return m_certificate_name;
}
void OAIResignInfo::setCertificateName(const QString &certificate_name) {
    m_certificate_name = certificate_name;
    m_certificate_name_isSet = true;
}

bool OAIResignInfo::is_certificate_name_Set() const{
    return m_certificate_name_isSet;
}

bool OAIResignInfo::is_certificate_name_Valid() const{
    return m_certificate_name_isValid;
}

QString OAIResignInfo::getGroupName() const {
    return m_group_name;
}
void OAIResignInfo::setGroupName(const QString &group_name) {
    m_group_name = group_name;
    m_group_name_isSet = true;
}

bool OAIResignInfo::is_group_name_Set() const{
    return m_group_name_isSet;
}

bool OAIResignInfo::is_group_name_Valid() const{
    return m_group_name_isValid;
}

QString OAIResignInfo::getProfileName() const {
    return m_profile_name;
}
void OAIResignInfo::setProfileName(const QString &profile_name) {
    m_profile_name = profile_name;
    m_profile_name_isSet = true;
}

bool OAIResignInfo::is_profile_name_Set() const{
    return m_profile_name_isSet;
}

bool OAIResignInfo::is_profile_name_Valid() const{
    return m_profile_name_isValid;
}

QString OAIResignInfo::getProfileType() const {
    return m_profile_type;
}
void OAIResignInfo::setProfileType(const QString &profile_type) {
    m_profile_type = profile_type;
    m_profile_type_isSet = true;
}

bool OAIResignInfo::is_profile_type_Set() const{
    return m_profile_type_isSet;
}

bool OAIResignInfo::is_profile_type_Valid() const{
    return m_profile_type_isValid;
}

bool OAIResignInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_certificate_expiration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_certificate_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResignInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
