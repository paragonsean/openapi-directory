/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewAppReleaseAlertingEvent_allOf_app_release_properties.h
 *
 * Properties of new application release
 */

#ifndef OAINewAppReleaseAlertingEvent_allOf_app_release_properties_H
#define OAINewAppReleaseAlertingEvent_allOf_app_release_properties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINewAppReleaseAlertingEvent_allOf_app_release_properties : public OAIObject {
public:
    OAINewAppReleaseAlertingEvent_allOf_app_release_properties();
    OAINewAppReleaseAlertingEvent_allOf_app_release_properties(QString json);
    ~OAINewAppReleaseAlertingEvent_allOf_app_release_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppDisplayName() const;
    void setAppDisplayName(const QString &app_display_name);
    bool is_app_display_name_Set() const;
    bool is_app_display_name_Valid() const;

    QString getAppName() const;
    void setAppName(const QString &app_name);
    bool is_app_name_Set() const;
    bool is_app_name_Valid() const;

    QString getBundleIdentifier() const;
    void setBundleIdentifier(const QString &bundle_identifier);
    bool is_bundle_identifier_Set() const;
    bool is_bundle_identifier_Valid() const;

    QString getDistributionGroupId() const;
    void setDistributionGroupId(const QString &distribution_group_id);
    bool is_distribution_group_id_Set() const;
    bool is_distribution_group_id_Valid() const;

    QString getFingerprint() const;
    void setFingerprint(const QString &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QString getIconLink() const;
    void setIconLink(const QString &icon_link);
    bool is_icon_link_Set() const;
    bool is_icon_link_Valid() const;

    QString getInstallLink() const;
    void setInstallLink(const QString &install_link);
    bool is_install_link_Set() const;
    bool is_install_link_Valid() const;

    bool isInstallable() const;
    void setInstallable(const bool &installable);
    bool is_installable_Set() const;
    bool is_installable_Valid() const;

    bool isMandatoryUpdate() const;
    void setMandatoryUpdate(const bool &mandatory_update);
    bool is_mandatory_update_Set() const;
    bool is_mandatory_update_Valid() const;

    QString getMinOs() const;
    void setMinOs(const QString &min_os);
    bool is_min_os_Set() const;
    bool is_min_os_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getProvisioningProfileName() const;
    void setProvisioningProfileName(const QString &provisioning_profile_name);
    bool is_provisioning_profile_name_Set() const;
    bool is_provisioning_profile_name_Valid() const;

    QString getProvisioningProfileType() const;
    void setProvisioningProfileType(const QString &provisioning_profile_type);
    bool is_provisioning_profile_type_Set() const;
    bool is_provisioning_profile_type_Valid() const;

    QString getReleaseId() const;
    void setReleaseId(const QString &release_id);
    bool is_release_id_Set() const;
    bool is_release_id_Valid() const;

    QString getReleaseNotes() const;
    void setReleaseNotes(const QString &release_notes);
    bool is_release_notes_Set() const;
    bool is_release_notes_Valid() const;

    QString getShortVersion() const;
    void setShortVersion(const QString &short_version);
    bool is_short_version_Set() const;
    bool is_short_version_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getUploadedAt() const;
    void setUploadedAt(const QString &uploaded_at);
    bool is_uploaded_at_Set() const;
    bool is_uploaded_at_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_display_name;
    bool m_app_display_name_isSet;
    bool m_app_display_name_isValid;

    QString m_app_name;
    bool m_app_name_isSet;
    bool m_app_name_isValid;

    QString m_bundle_identifier;
    bool m_bundle_identifier_isSet;
    bool m_bundle_identifier_isValid;

    QString m_distribution_group_id;
    bool m_distribution_group_id_isSet;
    bool m_distribution_group_id_isValid;

    QString m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QString m_icon_link;
    bool m_icon_link_isSet;
    bool m_icon_link_isValid;

    QString m_install_link;
    bool m_install_link_isSet;
    bool m_install_link_isValid;

    bool m_installable;
    bool m_installable_isSet;
    bool m_installable_isValid;

    bool m_mandatory_update;
    bool m_mandatory_update_isSet;
    bool m_mandatory_update_isValid;

    QString m_min_os;
    bool m_min_os_isSet;
    bool m_min_os_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_provisioning_profile_name;
    bool m_provisioning_profile_name_isSet;
    bool m_provisioning_profile_name_isValid;

    QString m_provisioning_profile_type;
    bool m_provisioning_profile_type_isSet;
    bool m_provisioning_profile_type_isValid;

    QString m_release_id;
    bool m_release_id_isSet;
    bool m_release_id_isValid;

    QString m_release_notes;
    bool m_release_notes_isSet;
    bool m_release_notes_isValid;

    QString m_short_version;
    bool m_short_version_isSet;
    bool m_short_version_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_uploaded_at;
    bool m_uploaded_at_isSet;
    bool m_uploaded_at_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewAppReleaseAlertingEvent_allOf_app_release_properties)

#endif // OAINewAppReleaseAlertingEvent_allOf_app_release_properties_H
