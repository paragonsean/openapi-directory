/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDevice_Set_update_information.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDevice_Set_update_information::OAIDevice_Set_update_information(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDevice_Set_update_information::OAIDevice_Set_update_information() {
    this->initializeModel();
}

OAIDevice_Set_update_information::~OAIDevice_Set_update_information() {}

void OAIDevice_Set_update_information::initializeModel() {

    m_devices_isSet = false;
    m_devices_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIDevice_Set_update_information::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDevice_Set_update_information::fromJsonObject(QJsonObject json) {

    m_devices_isValid = ::OpenAPI::fromJsonValue(m_devices, json[QString("devices")]);
    m_devices_isSet = !json[QString("devices")].isNull() && m_devices_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIDevice_Set_update_information::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDevice_Set_update_information::asJsonObject() const {
    QJsonObject obj;
    if (m_devices.size() > 0) {
        obj.insert(QString("devices"), ::OpenAPI::toJsonValue(m_devices));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<QString> OAIDevice_Set_update_information::getDevices() const {
    return m_devices;
}
void OAIDevice_Set_update_information::setDevices(const QList<QString> &devices) {
    m_devices = devices;
    m_devices_isSet = true;
}

bool OAIDevice_Set_update_information::is_devices_Set() const{
    return m_devices_isSet;
}

bool OAIDevice_Set_update_information::is_devices_Valid() const{
    return m_devices_isValid;
}

QString OAIDevice_Set_update_information::getName() const {
    return m_name;
}
void OAIDevice_Set_update_information::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDevice_Set_update_information::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDevice_Set_update_information::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIDevice_Set_update_information::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_devices.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDevice_Set_update_information::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_devices_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
