/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewAppReleaseAlertingEvent_allOf_app_release_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewAppReleaseAlertingEvent_allOf_app_release_properties::OAINewAppReleaseAlertingEvent_allOf_app_release_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewAppReleaseAlertingEvent_allOf_app_release_properties::OAINewAppReleaseAlertingEvent_allOf_app_release_properties() {
    this->initializeModel();
}

OAINewAppReleaseAlertingEvent_allOf_app_release_properties::~OAINewAppReleaseAlertingEvent_allOf_app_release_properties() {}

void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::initializeModel() {

    m_app_display_name_isSet = false;
    m_app_display_name_isValid = false;

    m_app_name_isSet = false;
    m_app_name_isValid = false;

    m_bundle_identifier_isSet = false;
    m_bundle_identifier_isValid = false;

    m_distribution_group_id_isSet = false;
    m_distribution_group_id_isValid = false;

    m_fingerprint_isSet = false;
    m_fingerprint_isValid = false;

    m_icon_link_isSet = false;
    m_icon_link_isValid = false;

    m_install_link_isSet = false;
    m_install_link_isValid = false;

    m_installable_isSet = false;
    m_installable_isValid = false;

    m_mandatory_update_isSet = false;
    m_mandatory_update_isValid = false;

    m_min_os_isSet = false;
    m_min_os_isValid = false;

    m_platform_isSet = false;
    m_platform_isValid = false;

    m_provisioning_profile_name_isSet = false;
    m_provisioning_profile_name_isValid = false;

    m_provisioning_profile_type_isSet = false;
    m_provisioning_profile_type_isValid = false;

    m_release_id_isSet = false;
    m_release_id_isValid = false;

    m_release_notes_isSet = false;
    m_release_notes_isValid = false;

    m_short_version_isSet = false;
    m_short_version_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_uploaded_at_isSet = false;
    m_uploaded_at_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::fromJsonObject(QJsonObject json) {

    m_app_display_name_isValid = ::OpenAPI::fromJsonValue(m_app_display_name, json[QString("app_display_name")]);
    m_app_display_name_isSet = !json[QString("app_display_name")].isNull() && m_app_display_name_isValid;

    m_app_name_isValid = ::OpenAPI::fromJsonValue(m_app_name, json[QString("app_name")]);
    m_app_name_isSet = !json[QString("app_name")].isNull() && m_app_name_isValid;

    m_bundle_identifier_isValid = ::OpenAPI::fromJsonValue(m_bundle_identifier, json[QString("bundle_identifier")]);
    m_bundle_identifier_isSet = !json[QString("bundle_identifier")].isNull() && m_bundle_identifier_isValid;

    m_distribution_group_id_isValid = ::OpenAPI::fromJsonValue(m_distribution_group_id, json[QString("distribution_group_id")]);
    m_distribution_group_id_isSet = !json[QString("distribution_group_id")].isNull() && m_distribution_group_id_isValid;

    m_fingerprint_isValid = ::OpenAPI::fromJsonValue(m_fingerprint, json[QString("fingerprint")]);
    m_fingerprint_isSet = !json[QString("fingerprint")].isNull() && m_fingerprint_isValid;

    m_icon_link_isValid = ::OpenAPI::fromJsonValue(m_icon_link, json[QString("icon_link")]);
    m_icon_link_isSet = !json[QString("icon_link")].isNull() && m_icon_link_isValid;

    m_install_link_isValid = ::OpenAPI::fromJsonValue(m_install_link, json[QString("install_link")]);
    m_install_link_isSet = !json[QString("install_link")].isNull() && m_install_link_isValid;

    m_installable_isValid = ::OpenAPI::fromJsonValue(m_installable, json[QString("installable")]);
    m_installable_isSet = !json[QString("installable")].isNull() && m_installable_isValid;

    m_mandatory_update_isValid = ::OpenAPI::fromJsonValue(m_mandatory_update, json[QString("mandatory_update")]);
    m_mandatory_update_isSet = !json[QString("mandatory_update")].isNull() && m_mandatory_update_isValid;

    m_min_os_isValid = ::OpenAPI::fromJsonValue(m_min_os, json[QString("min_os")]);
    m_min_os_isSet = !json[QString("min_os")].isNull() && m_min_os_isValid;

    m_platform_isValid = ::OpenAPI::fromJsonValue(m_platform, json[QString("platform")]);
    m_platform_isSet = !json[QString("platform")].isNull() && m_platform_isValid;

    m_provisioning_profile_name_isValid = ::OpenAPI::fromJsonValue(m_provisioning_profile_name, json[QString("provisioning_profile_name")]);
    m_provisioning_profile_name_isSet = !json[QString("provisioning_profile_name")].isNull() && m_provisioning_profile_name_isValid;

    m_provisioning_profile_type_isValid = ::OpenAPI::fromJsonValue(m_provisioning_profile_type, json[QString("provisioning_profile_type")]);
    m_provisioning_profile_type_isSet = !json[QString("provisioning_profile_type")].isNull() && m_provisioning_profile_type_isValid;

    m_release_id_isValid = ::OpenAPI::fromJsonValue(m_release_id, json[QString("release_id")]);
    m_release_id_isSet = !json[QString("release_id")].isNull() && m_release_id_isValid;

    m_release_notes_isValid = ::OpenAPI::fromJsonValue(m_release_notes, json[QString("release_notes")]);
    m_release_notes_isSet = !json[QString("release_notes")].isNull() && m_release_notes_isValid;

    m_short_version_isValid = ::OpenAPI::fromJsonValue(m_short_version, json[QString("short_version")]);
    m_short_version_isSet = !json[QString("short_version")].isNull() && m_short_version_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;

    m_uploaded_at_isValid = ::OpenAPI::fromJsonValue(m_uploaded_at, json[QString("uploaded_at")]);
    m_uploaded_at_isSet = !json[QString("uploaded_at")].isNull() && m_uploaded_at_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewAppReleaseAlertingEvent_allOf_app_release_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_app_display_name_isSet) {
        obj.insert(QString("app_display_name"), ::OpenAPI::toJsonValue(m_app_display_name));
    }
    if (m_app_name_isSet) {
        obj.insert(QString("app_name"), ::OpenAPI::toJsonValue(m_app_name));
    }
    if (m_bundle_identifier_isSet) {
        obj.insert(QString("bundle_identifier"), ::OpenAPI::toJsonValue(m_bundle_identifier));
    }
    if (m_distribution_group_id_isSet) {
        obj.insert(QString("distribution_group_id"), ::OpenAPI::toJsonValue(m_distribution_group_id));
    }
    if (m_fingerprint_isSet) {
        obj.insert(QString("fingerprint"), ::OpenAPI::toJsonValue(m_fingerprint));
    }
    if (m_icon_link_isSet) {
        obj.insert(QString("icon_link"), ::OpenAPI::toJsonValue(m_icon_link));
    }
    if (m_install_link_isSet) {
        obj.insert(QString("install_link"), ::OpenAPI::toJsonValue(m_install_link));
    }
    if (m_installable_isSet) {
        obj.insert(QString("installable"), ::OpenAPI::toJsonValue(m_installable));
    }
    if (m_mandatory_update_isSet) {
        obj.insert(QString("mandatory_update"), ::OpenAPI::toJsonValue(m_mandatory_update));
    }
    if (m_min_os_isSet) {
        obj.insert(QString("min_os"), ::OpenAPI::toJsonValue(m_min_os));
    }
    if (m_platform_isSet) {
        obj.insert(QString("platform"), ::OpenAPI::toJsonValue(m_platform));
    }
    if (m_provisioning_profile_name_isSet) {
        obj.insert(QString("provisioning_profile_name"), ::OpenAPI::toJsonValue(m_provisioning_profile_name));
    }
    if (m_provisioning_profile_type_isSet) {
        obj.insert(QString("provisioning_profile_type"), ::OpenAPI::toJsonValue(m_provisioning_profile_type));
    }
    if (m_release_id_isSet) {
        obj.insert(QString("release_id"), ::OpenAPI::toJsonValue(m_release_id));
    }
    if (m_release_notes_isSet) {
        obj.insert(QString("release_notes"), ::OpenAPI::toJsonValue(m_release_notes));
    }
    if (m_short_version_isSet) {
        obj.insert(QString("short_version"), ::OpenAPI::toJsonValue(m_short_version));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_uploaded_at_isSet) {
        obj.insert(QString("uploaded_at"), ::OpenAPI::toJsonValue(m_uploaded_at));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getAppDisplayName() const {
    return m_app_display_name;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setAppDisplayName(const QString &app_display_name) {
    m_app_display_name = app_display_name;
    m_app_display_name_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_app_display_name_Set() const{
    return m_app_display_name_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_app_display_name_Valid() const{
    return m_app_display_name_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getAppName() const {
    return m_app_name;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setAppName(const QString &app_name) {
    m_app_name = app_name;
    m_app_name_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_app_name_Set() const{
    return m_app_name_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_app_name_Valid() const{
    return m_app_name_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getBundleIdentifier() const {
    return m_bundle_identifier;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setBundleIdentifier(const QString &bundle_identifier) {
    m_bundle_identifier = bundle_identifier;
    m_bundle_identifier_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_bundle_identifier_Set() const{
    return m_bundle_identifier_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_bundle_identifier_Valid() const{
    return m_bundle_identifier_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getDistributionGroupId() const {
    return m_distribution_group_id;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setDistributionGroupId(const QString &distribution_group_id) {
    m_distribution_group_id = distribution_group_id;
    m_distribution_group_id_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_distribution_group_id_Set() const{
    return m_distribution_group_id_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_distribution_group_id_Valid() const{
    return m_distribution_group_id_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getFingerprint() const {
    return m_fingerprint;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setFingerprint(const QString &fingerprint) {
    m_fingerprint = fingerprint;
    m_fingerprint_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_fingerprint_Set() const{
    return m_fingerprint_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_fingerprint_Valid() const{
    return m_fingerprint_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getIconLink() const {
    return m_icon_link;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setIconLink(const QString &icon_link) {
    m_icon_link = icon_link;
    m_icon_link_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_icon_link_Set() const{
    return m_icon_link_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_icon_link_Valid() const{
    return m_icon_link_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getInstallLink() const {
    return m_install_link;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setInstallLink(const QString &install_link) {
    m_install_link = install_link;
    m_install_link_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_install_link_Set() const{
    return m_install_link_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_install_link_Valid() const{
    return m_install_link_isValid;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::isInstallable() const {
    return m_installable;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setInstallable(const bool &installable) {
    m_installable = installable;
    m_installable_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_installable_Set() const{
    return m_installable_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_installable_Valid() const{
    return m_installable_isValid;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::isMandatoryUpdate() const {
    return m_mandatory_update;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setMandatoryUpdate(const bool &mandatory_update) {
    m_mandatory_update = mandatory_update;
    m_mandatory_update_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_mandatory_update_Set() const{
    return m_mandatory_update_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_mandatory_update_Valid() const{
    return m_mandatory_update_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getMinOs() const {
    return m_min_os;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setMinOs(const QString &min_os) {
    m_min_os = min_os;
    m_min_os_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_min_os_Set() const{
    return m_min_os_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_min_os_Valid() const{
    return m_min_os_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getPlatform() const {
    return m_platform;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setPlatform(const QString &platform) {
    m_platform = platform;
    m_platform_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_platform_Set() const{
    return m_platform_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_platform_Valid() const{
    return m_platform_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getProvisioningProfileName() const {
    return m_provisioning_profile_name;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setProvisioningProfileName(const QString &provisioning_profile_name) {
    m_provisioning_profile_name = provisioning_profile_name;
    m_provisioning_profile_name_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_provisioning_profile_name_Set() const{
    return m_provisioning_profile_name_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_provisioning_profile_name_Valid() const{
    return m_provisioning_profile_name_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getProvisioningProfileType() const {
    return m_provisioning_profile_type;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setProvisioningProfileType(const QString &provisioning_profile_type) {
    m_provisioning_profile_type = provisioning_profile_type;
    m_provisioning_profile_type_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_provisioning_profile_type_Set() const{
    return m_provisioning_profile_type_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_provisioning_profile_type_Valid() const{
    return m_provisioning_profile_type_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getReleaseId() const {
    return m_release_id;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setReleaseId(const QString &release_id) {
    m_release_id = release_id;
    m_release_id_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_release_id_Set() const{
    return m_release_id_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_release_id_Valid() const{
    return m_release_id_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getReleaseNotes() const {
    return m_release_notes;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setReleaseNotes(const QString &release_notes) {
    m_release_notes = release_notes;
    m_release_notes_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_release_notes_Set() const{
    return m_release_notes_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_release_notes_Valid() const{
    return m_release_notes_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getShortVersion() const {
    return m_short_version;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setShortVersion(const QString &short_version) {
    m_short_version = short_version;
    m_short_version_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_short_version_Set() const{
    return m_short_version_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_short_version_Valid() const{
    return m_short_version_isValid;
}

qint32 OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getSize() const {
    return m_size;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setSize(const qint32 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_size_Set() const{
    return m_size_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_size_Valid() const{
    return m_size_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getUploadedAt() const {
    return m_uploaded_at;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setUploadedAt(const QString &uploaded_at) {
    m_uploaded_at = uploaded_at;
    m_uploaded_at_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_uploaded_at_Set() const{
    return m_uploaded_at_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_uploaded_at_Valid() const{
    return m_uploaded_at_isValid;
}

QString OAINewAppReleaseAlertingEvent_allOf_app_release_properties::getVersion() const {
    return m_version;
}
void OAINewAppReleaseAlertingEvent_allOf_app_release_properties::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_version_Set() const{
    return m_version_isSet;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::is_version_Valid() const{
    return m_version_isValid;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bundle_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_distribution_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fingerprint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_install_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mandatory_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_os_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_profile_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uploaded_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewAppReleaseAlertingEvent_allOf_app_release_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_display_name_isValid && m_app_name_isValid && m_bundle_identifier_isValid && m_install_link_isValid && m_platform_isValid && m_release_id_isValid && m_short_version_isValid && m_size_isValid && m_uploaded_at_isValid && m_version_isValid && true;
}

} // namespace OpenAPI
