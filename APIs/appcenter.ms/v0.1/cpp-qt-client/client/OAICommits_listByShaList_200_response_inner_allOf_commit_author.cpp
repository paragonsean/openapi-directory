/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommits_listByShaList_200_response_inner_allOf_commit_author.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommits_listByShaList_200_response_inner_allOf_commit_author::OAICommits_listByShaList_200_response_inner_allOf_commit_author(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommits_listByShaList_200_response_inner_allOf_commit_author::OAICommits_listByShaList_200_response_inner_allOf_commit_author() {
    this->initializeModel();
}

OAICommits_listByShaList_200_response_inner_allOf_commit_author::~OAICommits_listByShaList_200_response_inner_allOf_commit_author() {}

void OAICommits_listByShaList_200_response_inner_allOf_commit_author::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAICommits_listByShaList_200_response_inner_allOf_commit_author::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommits_listByShaList_200_response_inner_allOf_commit_author::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAICommits_listByShaList_200_response_inner_allOf_commit_author::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommits_listByShaList_200_response_inner_allOf_commit_author::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAICommits_listByShaList_200_response_inner_allOf_commit_author::getDate() const {
    return m_date;
}
void OAICommits_listByShaList_200_response_inner_allOf_commit_author::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAICommits_listByShaList_200_response_inner_allOf_commit_author::is_date_Set() const{
    return m_date_isSet;
}

bool OAICommits_listByShaList_200_response_inner_allOf_commit_author::is_date_Valid() const{
    return m_date_isValid;
}

QString OAICommits_listByShaList_200_response_inner_allOf_commit_author::getEmail() const {
    return m_email;
}
void OAICommits_listByShaList_200_response_inner_allOf_commit_author::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICommits_listByShaList_200_response_inner_allOf_commit_author::is_email_Set() const{
    return m_email_isSet;
}

bool OAICommits_listByShaList_200_response_inner_allOf_commit_author::is_email_Valid() const{
    return m_email_isValid;
}

QString OAICommits_listByShaList_200_response_inner_allOf_commit_author::getName() const {
    return m_name;
}
void OAICommits_listByShaList_200_response_inner_allOf_commit_author::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICommits_listByShaList_200_response_inner_allOf_commit_author::is_name_Set() const{
    return m_name_isSet;
}

bool OAICommits_listByShaList_200_response_inner_allOf_commit_author::is_name_Valid() const{
    return m_name_isValid;
}

bool OAICommits_listByShaList_200_response_inner_allOf_commit_author::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommits_listByShaList_200_response_inner_allOf_commit_author::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
