/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalytics_EventPerDeviceCount_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalytics_EventPerDeviceCount_200_response::OAIAnalytics_EventPerDeviceCount_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalytics_EventPerDeviceCount_200_response::OAIAnalytics_EventPerDeviceCount_200_response() {
    this->initializeModel();
}

OAIAnalytics_EventPerDeviceCount_200_response::~OAIAnalytics_EventPerDeviceCount_200_response() {}

void OAIAnalytics_EventPerDeviceCount_200_response::initializeModel() {

    m_avg_count_per_device_isSet = false;
    m_avg_count_per_device_isValid = false;

    m_count_per_device_isSet = false;
    m_count_per_device_isValid = false;

    m_previous_avg_count_per_device_isSet = false;
    m_previous_avg_count_per_device_isValid = false;
}

void OAIAnalytics_EventPerDeviceCount_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnalytics_EventPerDeviceCount_200_response::fromJsonObject(QJsonObject json) {

    m_avg_count_per_device_isValid = ::OpenAPI::fromJsonValue(m_avg_count_per_device, json[QString("avg_count_per_device")]);
    m_avg_count_per_device_isSet = !json[QString("avg_count_per_device")].isNull() && m_avg_count_per_device_isValid;

    m_count_per_device_isValid = ::OpenAPI::fromJsonValue(m_count_per_device, json[QString("count_per_device")]);
    m_count_per_device_isSet = !json[QString("count_per_device")].isNull() && m_count_per_device_isValid;

    m_previous_avg_count_per_device_isValid = ::OpenAPI::fromJsonValue(m_previous_avg_count_per_device, json[QString("previous_avg_count_per_device")]);
    m_previous_avg_count_per_device_isSet = !json[QString("previous_avg_count_per_device")].isNull() && m_previous_avg_count_per_device_isValid;
}

QString OAIAnalytics_EventPerDeviceCount_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnalytics_EventPerDeviceCount_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_avg_count_per_device_isSet) {
        obj.insert(QString("avg_count_per_device"), ::OpenAPI::toJsonValue(m_avg_count_per_device));
    }
    if (m_count_per_device.size() > 0) {
        obj.insert(QString("count_per_device"), ::OpenAPI::toJsonValue(m_count_per_device));
    }
    if (m_previous_avg_count_per_device_isSet) {
        obj.insert(QString("previous_avg_count_per_device"), ::OpenAPI::toJsonValue(m_previous_avg_count_per_device));
    }
    return obj;
}

double OAIAnalytics_EventPerDeviceCount_200_response::getAvgCountPerDevice() const {
    return m_avg_count_per_device;
}
void OAIAnalytics_EventPerDeviceCount_200_response::setAvgCountPerDevice(const double &avg_count_per_device) {
    m_avg_count_per_device = avg_count_per_device;
    m_avg_count_per_device_isSet = true;
}

bool OAIAnalytics_EventPerDeviceCount_200_response::is_avg_count_per_device_Set() const{
    return m_avg_count_per_device_isSet;
}

bool OAIAnalytics_EventPerDeviceCount_200_response::is_avg_count_per_device_Valid() const{
    return m_avg_count_per_device_isValid;
}

QList<OAIAnalytics_EventPerDeviceCount_200_response_count_per_device_inner> OAIAnalytics_EventPerDeviceCount_200_response::getCountPerDevice() const {
    return m_count_per_device;
}
void OAIAnalytics_EventPerDeviceCount_200_response::setCountPerDevice(const QList<OAIAnalytics_EventPerDeviceCount_200_response_count_per_device_inner> &count_per_device) {
    m_count_per_device = count_per_device;
    m_count_per_device_isSet = true;
}

bool OAIAnalytics_EventPerDeviceCount_200_response::is_count_per_device_Set() const{
    return m_count_per_device_isSet;
}

bool OAIAnalytics_EventPerDeviceCount_200_response::is_count_per_device_Valid() const{
    return m_count_per_device_isValid;
}

double OAIAnalytics_EventPerDeviceCount_200_response::getPreviousAvgCountPerDevice() const {
    return m_previous_avg_count_per_device;
}
void OAIAnalytics_EventPerDeviceCount_200_response::setPreviousAvgCountPerDevice(const double &previous_avg_count_per_device) {
    m_previous_avg_count_per_device = previous_avg_count_per_device;
    m_previous_avg_count_per_device_isSet = true;
}

bool OAIAnalytics_EventPerDeviceCount_200_response::is_previous_avg_count_per_device_Set() const{
    return m_previous_avg_count_per_device_isSet;
}

bool OAIAnalytics_EventPerDeviceCount_200_response::is_previous_avg_count_per_device_Valid() const{
    return m_previous_avg_count_per_device_isValid;
}

bool OAIAnalytics_EventPerDeviceCount_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avg_count_per_device_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_count_per_device.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_avg_count_per_device_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnalytics_EventPerDeviceCount_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
