/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISymbols_list_200_response_inner.h
 *
 * 
 */

#ifndef OAISymbols_list_200_response_inner_H
#define OAISymbols_list_200_response_inner_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISymbols_list_200_response_inner : public OAIObject {
public:
    OAISymbols_list_200_response_inner();
    OAISymbols_list_200_response_inner(QString json);
    ~OAISymbols_list_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAlternateSymbolIds() const;
    void setAlternateSymbolIds(const QList<QString> &alternate_symbol_ids);
    bool is_alternate_symbol_ids_Set() const;
    bool is_alternate_symbol_ids_Valid() const;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getBuild() const;
    void setBuild(const QString &build);
    bool is_build_Set() const;
    bool is_build_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSymbolId() const;
    void setSymbolId(const QString &symbol_id);
    bool is_symbol_id_Set() const;
    bool is_symbol_id_Valid() const;

    QString getSymbolUploadId() const;
    void setSymbolUploadId(const QString &symbol_upload_id);
    bool is_symbol_upload_id_Set() const;
    bool is_symbol_upload_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_alternate_symbol_ids;
    bool m_alternate_symbol_ids_isSet;
    bool m_alternate_symbol_ids_isValid;

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_build;
    bool m_build_isSet;
    bool m_build_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_symbol_id;
    bool m_symbol_id_isSet;
    bool m_symbol_id_isValid;

    QString m_symbol_upload_id;
    bool m_symbol_upload_id_isSet;
    bool m_symbol_upload_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISymbols_list_200_response_inner)

#endif // OAISymbols_list_200_response_inner_H
