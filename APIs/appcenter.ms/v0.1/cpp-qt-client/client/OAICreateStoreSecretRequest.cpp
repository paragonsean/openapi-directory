/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStoreSecretRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStoreSecretRequest::OAICreateStoreSecretRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStoreSecretRequest::OAICreateStoreSecretRequest() {
    this->initializeModel();
}

OAICreateStoreSecretRequest::~OAICreateStoreSecretRequest() {}

void OAICreateStoreSecretRequest::initializeModel() {

    m_secret_json_isSet = false;
    m_secret_json_isValid = false;

    m_tenant_id_isSet = false;
    m_tenant_id_isValid = false;
}

void OAICreateStoreSecretRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStoreSecretRequest::fromJsonObject(QJsonObject json) {

    m_secret_json_isValid = ::OpenAPI::fromJsonValue(m_secret_json, json[QString("secret_json")]);
    m_secret_json_isSet = !json[QString("secret_json")].isNull() && m_secret_json_isValid;

    m_tenant_id_isValid = ::OpenAPI::fromJsonValue(m_tenant_id, json[QString("tenant_id")]);
    m_tenant_id_isSet = !json[QString("tenant_id")].isNull() && m_tenant_id_isValid;
}

QString OAICreateStoreSecretRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStoreSecretRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_secret_json.isSet()) {
        obj.insert(QString("secret_json"), ::OpenAPI::toJsonValue(m_secret_json));
    }
    if (m_tenant_id_isSet) {
        obj.insert(QString("tenant_id"), ::OpenAPI::toJsonValue(m_tenant_id));
    }
    return obj;
}

OAIStores_create_request_intune_details_secret_json OAICreateStoreSecretRequest::getSecretJson() const {
    return m_secret_json;
}
void OAICreateStoreSecretRequest::setSecretJson(const OAIStores_create_request_intune_details_secret_json &secret_json) {
    m_secret_json = secret_json;
    m_secret_json_isSet = true;
}

bool OAICreateStoreSecretRequest::is_secret_json_Set() const{
    return m_secret_json_isSet;
}

bool OAICreateStoreSecretRequest::is_secret_json_Valid() const{
    return m_secret_json_isValid;
}

QString OAICreateStoreSecretRequest::getTenantId() const {
    return m_tenant_id;
}
void OAICreateStoreSecretRequest::setTenantId(const QString &tenant_id) {
    m_tenant_id = tenant_id;
    m_tenant_id_isSet = true;
}

bool OAICreateStoreSecretRequest::is_tenant_id_Set() const{
    return m_tenant_id_isSet;
}

bool OAICreateStoreSecretRequest::is_tenant_id_Valid() const{
    return m_tenant_id_isValid;
}

bool OAICreateStoreSecretRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_secret_json.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStoreSecretRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
