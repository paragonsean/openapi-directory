/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerformanceReport_performance_data_steps_inner_samples_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerformanceReport_performance_data_steps_inner_samples_inner::OAIPerformanceReport_performance_data_steps_inner_samples_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerformanceReport_performance_data_steps_inner_samples_inner::OAIPerformanceReport_performance_data_steps_inner_samples_inner() {
    this->initializeModel();
}

OAIPerformanceReport_performance_data_steps_inner_samples_inner::~OAIPerformanceReport_performance_data_steps_inner_samples_inner() {}

void OAIPerformanceReport_performance_data_steps_inner_samples_inner::initializeModel() {

    m_cpu_isSet = false;
    m_cpu_isValid = false;

    m_elapsed_secs_isSet = false;
    m_elapsed_secs_isValid = false;

    m_mem_isSet = false;
    m_mem_isValid = false;
}

void OAIPerformanceReport_performance_data_steps_inner_samples_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerformanceReport_performance_data_steps_inner_samples_inner::fromJsonObject(QJsonObject json) {

    m_cpu_isValid = ::OpenAPI::fromJsonValue(m_cpu, json[QString("cpu")]);
    m_cpu_isSet = !json[QString("cpu")].isNull() && m_cpu_isValid;

    m_elapsed_secs_isValid = ::OpenAPI::fromJsonValue(m_elapsed_secs, json[QString("elapsed-secs")]);
    m_elapsed_secs_isSet = !json[QString("elapsed-secs")].isNull() && m_elapsed_secs_isValid;

    m_mem_isValid = ::OpenAPI::fromJsonValue(m_mem, json[QString("mem")]);
    m_mem_isSet = !json[QString("mem")].isNull() && m_mem_isValid;
}

QString OAIPerformanceReport_performance_data_steps_inner_samples_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerformanceReport_performance_data_steps_inner_samples_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_cpu_isSet) {
        obj.insert(QString("cpu"), ::OpenAPI::toJsonValue(m_cpu));
    }
    if (m_elapsed_secs_isSet) {
        obj.insert(QString("elapsed-secs"), ::OpenAPI::toJsonValue(m_elapsed_secs));
    }
    if (m_mem_isSet) {
        obj.insert(QString("mem"), ::OpenAPI::toJsonValue(m_mem));
    }
    return obj;
}

double OAIPerformanceReport_performance_data_steps_inner_samples_inner::getCpu() const {
    return m_cpu;
}
void OAIPerformanceReport_performance_data_steps_inner_samples_inner::setCpu(const double &cpu) {
    m_cpu = cpu;
    m_cpu_isSet = true;
}

bool OAIPerformanceReport_performance_data_steps_inner_samples_inner::is_cpu_Set() const{
    return m_cpu_isSet;
}

bool OAIPerformanceReport_performance_data_steps_inner_samples_inner::is_cpu_Valid() const{
    return m_cpu_isValid;
}

double OAIPerformanceReport_performance_data_steps_inner_samples_inner::getElapsedSecs() const {
    return m_elapsed_secs;
}
void OAIPerformanceReport_performance_data_steps_inner_samples_inner::setElapsedSecs(const double &elapsed_secs) {
    m_elapsed_secs = elapsed_secs;
    m_elapsed_secs_isSet = true;
}

bool OAIPerformanceReport_performance_data_steps_inner_samples_inner::is_elapsed_secs_Set() const{
    return m_elapsed_secs_isSet;
}

bool OAIPerformanceReport_performance_data_steps_inner_samples_inner::is_elapsed_secs_Valid() const{
    return m_elapsed_secs_isValid;
}

double OAIPerformanceReport_performance_data_steps_inner_samples_inner::getMem() const {
    return m_mem;
}
void OAIPerformanceReport_performance_data_steps_inner_samples_inner::setMem(const double &mem) {
    m_mem = mem;
    m_mem_isSet = true;
}

bool OAIPerformanceReport_performance_data_steps_inner_samples_inner::is_mem_Set() const{
    return m_mem_isSet;
}

bool OAIPerformanceReport_performance_data_steps_inner_samples_inner::is_mem_Valid() const{
    return m_mem_isValid;
}

bool OAIPerformanceReport_performance_data_steps_inner_samples_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cpu_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_elapsed_secs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mem_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerformanceReport_performance_data_steps_inner_samples_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
