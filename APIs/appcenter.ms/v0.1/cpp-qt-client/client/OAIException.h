/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIException.h
 *
 * a exception
 */

#ifndef OAIException_H
#define OAIException_H

#include <QJsonObject>

#include "OAIException_frames_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIException_frames_inner;

class OAIException : public OAIObject {
public:
    OAIException();
    OAIException(QString json);
    ~OAIException() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIException_frames_inner> getFrames() const;
    void setFrames(const QList<OAIException_frames_inner> &frames);
    bool is_frames_Set() const;
    bool is_frames_Valid() const;

    QList<OAIException> getInnerExceptions() const;
    void setInnerExceptions(const QList<OAIException> &inner_exceptions);
    bool is_inner_exceptions_Set() const;
    bool is_inner_exceptions_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    bool isRelevant() const;
    void setRelevant(const bool &relevant);
    bool is_relevant_Set() const;
    bool is_relevant_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIException_frames_inner> m_frames;
    bool m_frames_isSet;
    bool m_frames_isValid;

    QList<OAIException> m_inner_exceptions;
    bool m_inner_exceptions_isSet;
    bool m_inner_exceptions_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    bool m_relevant;
    bool m_relevant_isSet;
    bool m_relevant_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIException)

#endif // OAIException_H
