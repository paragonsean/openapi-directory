/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHandledErrorReasonFrame.h
 *
 * 
 */

#ifndef OAIHandledErrorReasonFrame_H
#define OAIHandledErrorReasonFrame_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHandledErrorReasonFrame : public OAIObject {
public:
    OAIHandledErrorReasonFrame();
    OAIHandledErrorReasonFrame(QString json);
    ~OAIHandledErrorReasonFrame() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAppCode() const;
    void setAppCode(const bool &app_code);
    bool is_app_code_Set() const;
    bool is_app_code_Valid() const;

    bool isClassMethod() const;
    void setClassMethod(const bool &class_method);
    bool is_class_method_Set() const;
    bool is_class_method_Valid() const;

    QString getClassName() const;
    void setClassName(const QString &class_name);
    bool is_class_name_Set() const;
    bool is_class_name_Valid() const;

    QString getCodeFormatted() const;
    void setCodeFormatted(const QString &code_formatted);
    bool is_code_formatted_Set() const;
    bool is_code_formatted_Valid() const;

    QString getCodeRaw() const;
    void setCodeRaw(const QString &code_raw);
    bool is_code_raw_Set() const;
    bool is_code_raw_Valid() const;

    QString getExceptionType() const;
    void setExceptionType(const QString &exception_type);
    bool is_exception_type_Set() const;
    bool is_exception_type_Valid() const;

    QString getFile() const;
    void setFile(const QString &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    QString getFrameworkName() const;
    void setFrameworkName(const QString &framework_name);
    bool is_framework_name_Set() const;
    bool is_framework_name_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    qint32 getLine() const;
    void setLine(const qint32 &line);
    bool is_line_Set() const;
    bool is_line_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QString getMethodParams() const;
    void setMethodParams(const QString &method_params);
    bool is_method_params_Set() const;
    bool is_method_params_Valid() const;

    QString getOsExceptionType() const;
    void setOsExceptionType(const QString &os_exception_type);
    bool is_os_exception_type_Set() const;
    bool is_os_exception_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_app_code;
    bool m_app_code_isSet;
    bool m_app_code_isValid;

    bool m_class_method;
    bool m_class_method_isSet;
    bool m_class_method_isValid;

    QString m_class_name;
    bool m_class_name_isSet;
    bool m_class_name_isValid;

    QString m_code_formatted;
    bool m_code_formatted_isSet;
    bool m_code_formatted_isValid;

    QString m_code_raw;
    bool m_code_raw_isSet;
    bool m_code_raw_isValid;

    QString m_exception_type;
    bool m_exception_type_isSet;
    bool m_exception_type_isValid;

    QString m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    QString m_framework_name;
    bool m_framework_name_isSet;
    bool m_framework_name_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    qint32 m_line;
    bool m_line_isSet;
    bool m_line_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QString m_method_params;
    bool m_method_params_isSet;
    bool m_method_params_isValid;

    QString m_os_exception_type;
    bool m_os_exception_type_isSet;
    bool m_os_exception_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHandledErrorReasonFrame)

#endif // OAIHandledErrorReasonFrame_H
