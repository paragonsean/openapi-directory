/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlace.h
 *
 * The place code and the count.
 */

#ifndef OAIPlace_H
#define OAIPlace_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlace : public OAIObject {
public:
    OAIPlace();
    OAIPlace(QString json);
    ~OAIPlace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    qint64 getCount() const;
    void setCount(const qint64 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint64 getPreviousCount() const;
    void setPreviousCount(const qint64 &previous_count);
    bool is_previous_count_Set() const;
    bool is_previous_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    qint64 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint64 m_previous_count;
    bool m_previous_count_isSet;
    bool m_previous_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlace)

#endif // OAIPlace_H
