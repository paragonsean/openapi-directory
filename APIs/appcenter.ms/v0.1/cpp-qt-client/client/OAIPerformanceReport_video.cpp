/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerformanceReport_video.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerformanceReport_video::OAIPerformanceReport_video(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerformanceReport_video::OAIPerformanceReport_video() {
    this->initializeModel();
}

OAIPerformanceReport_video::~OAIPerformanceReport_video() {}

void OAIPerformanceReport_video::initializeModel() {

    m_video_metadata_isSet = false;
    m_video_metadata_isValid = false;

    m_video_url_isSet = false;
    m_video_url_isValid = false;
}

void OAIPerformanceReport_video::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerformanceReport_video::fromJsonObject(QJsonObject json) {

    m_video_metadata_isValid = ::OpenAPI::fromJsonValue(m_video_metadata, json[QString("video_metadata")]);
    m_video_metadata_isSet = !json[QString("video_metadata")].isNull() && m_video_metadata_isValid;

    m_video_url_isValid = ::OpenAPI::fromJsonValue(m_video_url, json[QString("video_url")]);
    m_video_url_isSet = !json[QString("video_url")].isNull() && m_video_url_isValid;
}

QString OAIPerformanceReport_video::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerformanceReport_video::asJsonObject() const {
    QJsonObject obj;
    if (m_video_metadata.isSet()) {
        obj.insert(QString("video_metadata"), ::OpenAPI::toJsonValue(m_video_metadata));
    }
    if (m_video_url_isSet) {
        obj.insert(QString("video_url"), ::OpenAPI::toJsonValue(m_video_url));
    }
    return obj;
}

OAIPerformanceReport_video_video_metadata OAIPerformanceReport_video::getVideoMetadata() const {
    return m_video_metadata;
}
void OAIPerformanceReport_video::setVideoMetadata(const OAIPerformanceReport_video_video_metadata &video_metadata) {
    m_video_metadata = video_metadata;
    m_video_metadata_isSet = true;
}

bool OAIPerformanceReport_video::is_video_metadata_Set() const{
    return m_video_metadata_isSet;
}

bool OAIPerformanceReport_video::is_video_metadata_Valid() const{
    return m_video_metadata_isValid;
}

QString OAIPerformanceReport_video::getVideoUrl() const {
    return m_video_url;
}
void OAIPerformanceReport_video::setVideoUrl(const QString &video_url) {
    m_video_url = video_url;
    m_video_url_isSet = true;
}

bool OAIPerformanceReport_video::is_video_url_Set() const{
    return m_video_url_isSet;
}

bool OAIPerformanceReport_video::is_video_url_Valid() const{
    return m_video_url_isValid;
}

bool OAIPerformanceReport_video::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_video_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerformanceReport_video::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_video_metadata_isValid && m_video_url_isValid && true;
}

} // namespace OpenAPI
