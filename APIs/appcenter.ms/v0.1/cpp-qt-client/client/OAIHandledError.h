/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHandledError.h
 *
 * 
 */

#ifndef OAIHandledError_H
#define OAIHandledError_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHandledError : public OAIObject {
public:
    OAIHandledError();
    OAIHandledError(QString json);
    ~OAIHandledError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    QString getErrorId() const;
    void setErrorId(const QString &error_id);
    bool is_error_id_Set() const;
    bool is_error_id_Valid() const;

    bool isHasAttachments() const;
    void setHasAttachments(const bool &has_attachments);
    bool is_has_attachments_Set() const;
    bool is_has_attachments_Valid() const;

    bool isHasBreadcrumbs() const;
    void setHasBreadcrumbs(const bool &has_breadcrumbs);
    bool is_has_breadcrumbs_Set() const;
    bool is_has_breadcrumbs_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    QString m_error_id;
    bool m_error_id_isSet;
    bool m_error_id_isValid;

    bool m_has_attachments;
    bool m_has_attachments_isSet;
    bool m_has_attachments_isValid;

    bool m_has_breadcrumbs;
    bool m_has_breadcrumbs_isSet;
    bool m_has_breadcrumbs_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHandledError)

#endif // OAIHandledError_H
