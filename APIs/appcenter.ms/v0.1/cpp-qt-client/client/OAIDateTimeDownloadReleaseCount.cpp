/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDateTimeDownloadReleaseCount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDateTimeDownloadReleaseCount::OAIDateTimeDownloadReleaseCount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDateTimeDownloadReleaseCount::OAIDateTimeDownloadReleaseCount() {
    this->initializeModel();
}

OAIDateTimeDownloadReleaseCount::~OAIDateTimeDownloadReleaseCount() {}

void OAIDateTimeDownloadReleaseCount::initializeModel() {

    m_datetime_isSet = false;
    m_datetime_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;

    m_unique_isSet = false;
    m_unique_isValid = false;
}

void OAIDateTimeDownloadReleaseCount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDateTimeDownloadReleaseCount::fromJsonObject(QJsonObject json) {

    m_datetime_isValid = ::OpenAPI::fromJsonValue(m_datetime, json[QString("datetime")]);
    m_datetime_isSet = !json[QString("datetime")].isNull() && m_datetime_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;

    m_unique_isValid = ::OpenAPI::fromJsonValue(m_unique, json[QString("unique")]);
    m_unique_isSet = !json[QString("unique")].isNull() && m_unique_isValid;
}

QString OAIDateTimeDownloadReleaseCount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDateTimeDownloadReleaseCount::asJsonObject() const {
    QJsonObject obj;
    if (m_datetime_isSet) {
        obj.insert(QString("datetime"), ::OpenAPI::toJsonValue(m_datetime));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    if (m_unique_isSet) {
        obj.insert(QString("unique"), ::OpenAPI::toJsonValue(m_unique));
    }
    return obj;
}

QString OAIDateTimeDownloadReleaseCount::getDatetime() const {
    return m_datetime;
}
void OAIDateTimeDownloadReleaseCount::setDatetime(const QString &datetime) {
    m_datetime = datetime;
    m_datetime_isSet = true;
}

bool OAIDateTimeDownloadReleaseCount::is_datetime_Set() const{
    return m_datetime_isSet;
}

bool OAIDateTimeDownloadReleaseCount::is_datetime_Valid() const{
    return m_datetime_isValid;
}

qint64 OAIDateTimeDownloadReleaseCount::getTotal() const {
    return m_total;
}
void OAIDateTimeDownloadReleaseCount::setTotal(const qint64 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIDateTimeDownloadReleaseCount::is_total_Set() const{
    return m_total_isSet;
}

bool OAIDateTimeDownloadReleaseCount::is_total_Valid() const{
    return m_total_isValid;
}

qint64 OAIDateTimeDownloadReleaseCount::getUnique() const {
    return m_unique;
}
void OAIDateTimeDownloadReleaseCount::setUnique(const qint64 &unique) {
    m_unique = unique;
    m_unique_isSet = true;
}

bool OAIDateTimeDownloadReleaseCount::is_unique_Set() const{
    return m_unique_isSet;
}

bool OAIDateTimeDownloadReleaseCount::is_unique_Valid() const{
    return m_unique_isValid;
}

bool OAIDateTimeDownloadReleaseCount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_datetime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDateTimeDownloadReleaseCount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
