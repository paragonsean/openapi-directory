/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertingJiraBugtrackerSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertingJiraBugtrackerSettings::OAIAlertingJiraBugtrackerSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertingJiraBugtrackerSettings::OAIAlertingJiraBugtrackerSettings() {
    this->initializeModel();
}

OAIAlertingJiraBugtrackerSettings::~OAIAlertingJiraBugtrackerSettings() {}

void OAIAlertingJiraBugtrackerSettings::initializeModel() {

    m_jira_project_id_isSet = false;
    m_jira_project_id_isValid = false;

    m_jira_project_name_isSet = false;
    m_jira_project_name_isValid = false;

    m_callback_url_isSet = false;
    m_callback_url_isValid = false;

    m_owner_name_isSet = false;
    m_owner_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAlertingJiraBugtrackerSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertingJiraBugtrackerSettings::fromJsonObject(QJsonObject json) {

    m_jira_project_id_isValid = ::OpenAPI::fromJsonValue(m_jira_project_id, json[QString("jira_project_id")]);
    m_jira_project_id_isSet = !json[QString("jira_project_id")].isNull() && m_jira_project_id_isValid;

    m_jira_project_name_isValid = ::OpenAPI::fromJsonValue(m_jira_project_name, json[QString("jira_project_name")]);
    m_jira_project_name_isSet = !json[QString("jira_project_name")].isNull() && m_jira_project_name_isValid;

    m_callback_url_isValid = ::OpenAPI::fromJsonValue(m_callback_url, json[QString("callback_url")]);
    m_callback_url_isSet = !json[QString("callback_url")].isNull() && m_callback_url_isValid;

    m_owner_name_isValid = ::OpenAPI::fromJsonValue(m_owner_name, json[QString("owner_name")]);
    m_owner_name_isSet = !json[QString("owner_name")].isNull() && m_owner_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAlertingJiraBugtrackerSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertingJiraBugtrackerSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_jira_project_id_isSet) {
        obj.insert(QString("jira_project_id"), ::OpenAPI::toJsonValue(m_jira_project_id));
    }
    if (m_jira_project_name_isSet) {
        obj.insert(QString("jira_project_name"), ::OpenAPI::toJsonValue(m_jira_project_name));
    }
    if (m_callback_url_isSet) {
        obj.insert(QString("callback_url"), ::OpenAPI::toJsonValue(m_callback_url));
    }
    if (m_owner_name_isSet) {
        obj.insert(QString("owner_name"), ::OpenAPI::toJsonValue(m_owner_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

qint32 OAIAlertingJiraBugtrackerSettings::getJiraProjectId() const {
    return m_jira_project_id;
}
void OAIAlertingJiraBugtrackerSettings::setJiraProjectId(const qint32 &jira_project_id) {
    m_jira_project_id = jira_project_id;
    m_jira_project_id_isSet = true;
}

bool OAIAlertingJiraBugtrackerSettings::is_jira_project_id_Set() const{
    return m_jira_project_id_isSet;
}

bool OAIAlertingJiraBugtrackerSettings::is_jira_project_id_Valid() const{
    return m_jira_project_id_isValid;
}

QString OAIAlertingJiraBugtrackerSettings::getJiraProjectName() const {
    return m_jira_project_name;
}
void OAIAlertingJiraBugtrackerSettings::setJiraProjectName(const QString &jira_project_name) {
    m_jira_project_name = jira_project_name;
    m_jira_project_name_isSet = true;
}

bool OAIAlertingJiraBugtrackerSettings::is_jira_project_name_Set() const{
    return m_jira_project_name_isSet;
}

bool OAIAlertingJiraBugtrackerSettings::is_jira_project_name_Valid() const{
    return m_jira_project_name_isValid;
}

QString OAIAlertingJiraBugtrackerSettings::getCallbackUrl() const {
    return m_callback_url;
}
void OAIAlertingJiraBugtrackerSettings::setCallbackUrl(const QString &callback_url) {
    m_callback_url = callback_url;
    m_callback_url_isSet = true;
}

bool OAIAlertingJiraBugtrackerSettings::is_callback_url_Set() const{
    return m_callback_url_isSet;
}

bool OAIAlertingJiraBugtrackerSettings::is_callback_url_Valid() const{
    return m_callback_url_isValid;
}

QString OAIAlertingJiraBugtrackerSettings::getOwnerName() const {
    return m_owner_name;
}
void OAIAlertingJiraBugtrackerSettings::setOwnerName(const QString &owner_name) {
    m_owner_name = owner_name;
    m_owner_name_isSet = true;
}

bool OAIAlertingJiraBugtrackerSettings::is_owner_name_Set() const{
    return m_owner_name_isSet;
}

bool OAIAlertingJiraBugtrackerSettings::is_owner_name_Valid() const{
    return m_owner_name_isValid;
}

QString OAIAlertingJiraBugtrackerSettings::getType() const {
    return m_type;
}
void OAIAlertingJiraBugtrackerSettings::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAlertingJiraBugtrackerSettings::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAlertingJiraBugtrackerSettings::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAlertingJiraBugtrackerSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_jira_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_jira_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_callback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertingJiraBugtrackerSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_jira_project_id_isValid && m_jira_project_name_isValid && m_owner_name_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
