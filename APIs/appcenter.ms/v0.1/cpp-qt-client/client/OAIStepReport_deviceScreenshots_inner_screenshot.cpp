/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStepReport_deviceScreenshots_inner_screenshot.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStepReport_deviceScreenshots_inner_screenshot::OAIStepReport_deviceScreenshots_inner_screenshot(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStepReport_deviceScreenshots_inner_screenshot::OAIStepReport_deviceScreenshots_inner_screenshot() {
    this->initializeModel();
}

OAIStepReport_deviceScreenshots_inner_screenshot::~OAIStepReport_deviceScreenshots_inner_screenshot() {}

void OAIStepReport_deviceScreenshots_inner_screenshot::initializeModel() {

    m_landscape_isSet = false;
    m_landscape_isValid = false;

    m_rotation_isSet = false;
    m_rotation_isValid = false;

    m_urls_isSet = false;
    m_urls_isValid = false;
}

void OAIStepReport_deviceScreenshots_inner_screenshot::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStepReport_deviceScreenshots_inner_screenshot::fromJsonObject(QJsonObject json) {

    m_landscape_isValid = ::OpenAPI::fromJsonValue(m_landscape, json[QString("landscape")]);
    m_landscape_isSet = !json[QString("landscape")].isNull() && m_landscape_isValid;

    m_rotation_isValid = ::OpenAPI::fromJsonValue(m_rotation, json[QString("rotation")]);
    m_rotation_isSet = !json[QString("rotation")].isNull() && m_rotation_isValid;

    m_urls_isValid = ::OpenAPI::fromJsonValue(m_urls, json[QString("urls")]);
    m_urls_isSet = !json[QString("urls")].isNull() && m_urls_isValid;
}

QString OAIStepReport_deviceScreenshots_inner_screenshot::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStepReport_deviceScreenshots_inner_screenshot::asJsonObject() const {
    QJsonObject obj;
    if (m_landscape_isSet) {
        obj.insert(QString("landscape"), ::OpenAPI::toJsonValue(m_landscape));
    }
    if (m_rotation_isSet) {
        obj.insert(QString("rotation"), ::OpenAPI::toJsonValue(m_rotation));
    }
    if (m_urls.isSet()) {
        obj.insert(QString("urls"), ::OpenAPI::toJsonValue(m_urls));
    }
    return obj;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::isLandscape() const {
    return m_landscape;
}
void OAIStepReport_deviceScreenshots_inner_screenshot::setLandscape(const bool &landscape) {
    m_landscape = landscape;
    m_landscape_isSet = true;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::is_landscape_Set() const{
    return m_landscape_isSet;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::is_landscape_Valid() const{
    return m_landscape_isValid;
}

double OAIStepReport_deviceScreenshots_inner_screenshot::getRotation() const {
    return m_rotation;
}
void OAIStepReport_deviceScreenshots_inner_screenshot::setRotation(const double &rotation) {
    m_rotation = rotation;
    m_rotation_isSet = true;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::is_rotation_Set() const{
    return m_rotation_isSet;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::is_rotation_Valid() const{
    return m_rotation_isValid;
}

OAIStepReport_deviceScreenshots_inner_screenshot_urls OAIStepReport_deviceScreenshots_inner_screenshot::getUrls() const {
    return m_urls;
}
void OAIStepReport_deviceScreenshots_inner_screenshot::setUrls(const OAIStepReport_deviceScreenshots_inner_screenshot_urls &urls) {
    m_urls = urls;
    m_urls_isSet = true;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::is_urls_Set() const{
    return m_urls_isSet;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::is_urls_Valid() const{
    return m_urls_isValid;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_landscape_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rotation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_urls.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStepReport_deviceScreenshots_inner_screenshot::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_landscape_isValid && m_rotation_isValid && m_urls_isValid && true;
}

} // namespace OpenAPI
