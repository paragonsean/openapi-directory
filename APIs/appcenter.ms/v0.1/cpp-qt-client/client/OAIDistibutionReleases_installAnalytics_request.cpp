/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDistibutionReleases_installAnalytics_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDistibutionReleases_installAnalytics_request::OAIDistibutionReleases_installAnalytics_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDistibutionReleases_installAnalytics_request::OAIDistibutionReleases_installAnalytics_request() {
    this->initializeModel();
}

OAIDistibutionReleases_installAnalytics_request::~OAIDistibutionReleases_installAnalytics_request() {}

void OAIDistibutionReleases_installAnalytics_request::initializeModel() {

    m_releases_isSet = false;
    m_releases_isValid = false;
}

void OAIDistibutionReleases_installAnalytics_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDistibutionReleases_installAnalytics_request::fromJsonObject(QJsonObject json) {

    m_releases_isValid = ::OpenAPI::fromJsonValue(m_releases, json[QString("releases")]);
    m_releases_isSet = !json[QString("releases")].isNull() && m_releases_isValid;
}

QString OAIDistibutionReleases_installAnalytics_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDistibutionReleases_installAnalytics_request::asJsonObject() const {
    QJsonObject obj;
    if (m_releases.size() > 0) {
        obj.insert(QString("releases"), ::OpenAPI::toJsonValue(m_releases));
    }
    return obj;
}

QList<OAIDistibutionReleases_installAnalytics_request_releases_inner> OAIDistibutionReleases_installAnalytics_request::getReleases() const {
    return m_releases;
}
void OAIDistibutionReleases_installAnalytics_request::setReleases(const QList<OAIDistibutionReleases_installAnalytics_request_releases_inner> &releases) {
    m_releases = releases;
    m_releases_isSet = true;
}

bool OAIDistibutionReleases_installAnalytics_request::is_releases_Set() const{
    return m_releases_isSet;
}

bool OAIDistibutionReleases_installAnalytics_request::is_releases_Valid() const{
    return m_releases_isValid;
}

bool OAIDistibutionReleases_installAnalytics_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_releases.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDistibutionReleases_installAnalytics_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
