/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDevice_Diagnostics.h
 *
 * Device characteristics.
 */

#ifndef OAIDevice_Diagnostics_H
#define OAIDevice_Diagnostics_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDevice_Diagnostics : public OAIObject {
public:
    OAIDevice_Diagnostics();
    OAIDevice_Diagnostics(QString json);
    ~OAIDevice_Diagnostics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppBuild() const;
    void setAppBuild(const QString &app_build);
    bool is_app_build_Set() const;
    bool is_app_build_Valid() const;

    QString getAppNamespace() const;
    void setAppNamespace(const QString &app_namespace);
    bool is_app_namespace_Set() const;
    bool is_app_namespace_Valid() const;

    QString getAppVersion() const;
    void setAppVersion(const QString &app_version);
    bool is_app_version_Set() const;
    bool is_app_version_Valid() const;

    QString getCarrierCode() const;
    void setCarrierCode(const QString &carrier_code);
    bool is_carrier_code_Set() const;
    bool is_carrier_code_Valid() const;

    QString getCarrierCountry() const;
    void setCarrierCountry(const QString &carrier_country);
    bool is_carrier_country_Set() const;
    bool is_carrier_country_Valid() const;

    QString getCarrierName() const;
    void setCarrierName(const QString &carrier_name);
    bool is_carrier_name_Set() const;
    bool is_carrier_name_Valid() const;

    QString getLiveUpdateDeploymentKey() const;
    void setLiveUpdateDeploymentKey(const QString &live_update_deployment_key);
    bool is_live_update_deployment_key_Set() const;
    bool is_live_update_deployment_key_Valid() const;

    QString getLiveUpdatePackageHash() const;
    void setLiveUpdatePackageHash(const QString &live_update_package_hash);
    bool is_live_update_package_hash_Set() const;
    bool is_live_update_package_hash_Valid() const;

    QString getLiveUpdateReleaseLabel() const;
    void setLiveUpdateReleaseLabel(const QString &live_update_release_label);
    bool is_live_update_release_label_Set() const;
    bool is_live_update_release_label_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getOemName() const;
    void setOemName(const QString &oem_name);
    bool is_oem_name_Set() const;
    bool is_oem_name_Valid() const;

    qint32 getOsApiLevel() const;
    void setOsApiLevel(const qint32 &os_api_level);
    bool is_os_api_level_Set() const;
    bool is_os_api_level_Valid() const;

    QString getOsBuild() const;
    void setOsBuild(const QString &os_build);
    bool is_os_build_Set() const;
    bool is_os_build_Valid() const;

    QString getOsName() const;
    void setOsName(const QString &os_name);
    bool is_os_name_Set() const;
    bool is_os_name_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QString getScreenSize() const;
    void setScreenSize(const QString &screen_size);
    bool is_screen_size_Set() const;
    bool is_screen_size_Valid() const;

    QString getSdkName() const;
    void setSdkName(const QString &sdk_name);
    bool is_sdk_name_Set() const;
    bool is_sdk_name_Valid() const;

    QString getSdkVersion() const;
    void setSdkVersion(const QString &sdk_version);
    bool is_sdk_version_Set() const;
    bool is_sdk_version_Valid() const;

    qint32 getTimeZoneOffset() const;
    void setTimeZoneOffset(const qint32 &time_zone_offset);
    bool is_time_zone_offset_Set() const;
    bool is_time_zone_offset_Valid() const;

    QString getWrapperRuntimeVersion() const;
    void setWrapperRuntimeVersion(const QString &wrapper_runtime_version);
    bool is_wrapper_runtime_version_Set() const;
    bool is_wrapper_runtime_version_Valid() const;

    QString getWrapperSdkName() const;
    void setWrapperSdkName(const QString &wrapper_sdk_name);
    bool is_wrapper_sdk_name_Set() const;
    bool is_wrapper_sdk_name_Valid() const;

    QString getWrapperSdkVersion() const;
    void setWrapperSdkVersion(const QString &wrapper_sdk_version);
    bool is_wrapper_sdk_version_Set() const;
    bool is_wrapper_sdk_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_build;
    bool m_app_build_isSet;
    bool m_app_build_isValid;

    QString m_app_namespace;
    bool m_app_namespace_isSet;
    bool m_app_namespace_isValid;

    QString m_app_version;
    bool m_app_version_isSet;
    bool m_app_version_isValid;

    QString m_carrier_code;
    bool m_carrier_code_isSet;
    bool m_carrier_code_isValid;

    QString m_carrier_country;
    bool m_carrier_country_isSet;
    bool m_carrier_country_isValid;

    QString m_carrier_name;
    bool m_carrier_name_isSet;
    bool m_carrier_name_isValid;

    QString m_live_update_deployment_key;
    bool m_live_update_deployment_key_isSet;
    bool m_live_update_deployment_key_isValid;

    QString m_live_update_package_hash;
    bool m_live_update_package_hash_isSet;
    bool m_live_update_package_hash_isValid;

    QString m_live_update_release_label;
    bool m_live_update_release_label_isSet;
    bool m_live_update_release_label_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_oem_name;
    bool m_oem_name_isSet;
    bool m_oem_name_isValid;

    qint32 m_os_api_level;
    bool m_os_api_level_isSet;
    bool m_os_api_level_isValid;

    QString m_os_build;
    bool m_os_build_isSet;
    bool m_os_build_isValid;

    QString m_os_name;
    bool m_os_name_isSet;
    bool m_os_name_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QString m_screen_size;
    bool m_screen_size_isSet;
    bool m_screen_size_isValid;

    QString m_sdk_name;
    bool m_sdk_name_isSet;
    bool m_sdk_name_isValid;

    QString m_sdk_version;
    bool m_sdk_version_isSet;
    bool m_sdk_version_isValid;

    qint32 m_time_zone_offset;
    bool m_time_zone_offset_isSet;
    bool m_time_zone_offset_isValid;

    QString m_wrapper_runtime_version;
    bool m_wrapper_runtime_version_isSet;
    bool m_wrapper_runtime_version_isValid;

    QString m_wrapper_sdk_name;
    bool m_wrapper_sdk_name_isSet;
    bool m_wrapper_sdk_name_isValid;

    QString m_wrapper_sdk_version;
    bool m_wrapper_sdk_version_isSet;
    bool m_wrapper_sdk_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDevice_Diagnostics)

#endif // OAIDevice_Diagnostics_H
