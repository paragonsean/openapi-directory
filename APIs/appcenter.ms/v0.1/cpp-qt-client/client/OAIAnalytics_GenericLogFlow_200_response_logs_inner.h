/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalytics_GenericLogFlow_200_response_logs_inner.h
 *
 * Generic log.
 */

#ifndef OAIAnalytics_GenericLogFlow_200_response_logs_inner_H
#define OAIAnalytics_GenericLogFlow_200_response_logs_inner_H

#include <QJsonObject>

#include "OAIAnalytics_GenericLogFlow_200_response_logs_inner_device.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalytics_GenericLogFlow_200_response_logs_inner_device;

class OAIAnalytics_GenericLogFlow_200_response_logs_inner : public OAIObject {
public:
    OAIAnalytics_GenericLogFlow_200_response_logs_inner();
    OAIAnalytics_GenericLogFlow_200_response_logs_inner(QString json);
    ~OAIAnalytics_GenericLogFlow_200_response_logs_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getAuthProvider() const;
    void setAuthProvider(const QString &auth_provider);
    bool is_auth_provider_Set() const;
    bool is_auth_provider_Valid() const;

    OAIAnalytics_GenericLogFlow_200_response_logs_inner_device getDevice() const;
    void setDevice(const OAIAnalytics_GenericLogFlow_200_response_logs_inner_device &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    QString getEventId() const;
    void setEventId(const QString &event_id);
    bool is_event_id_Set() const;
    bool is_event_id_Valid() const;

    QString getEventName() const;
    void setEventName(const QString &event_name);
    bool is_event_name_Set() const;
    bool is_event_name_Valid() const;

    QString getInstallId() const;
    void setInstallId(const QString &install_id);
    bool is_install_id_Set() const;
    bool is_install_id_Valid() const;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QMap<QString, QString> getProperties() const;
    void setProperties(const QMap<QString, QString> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getSessionId() const;
    void setSessionId(const QString &session_id);
    bool is_session_id_Set() const;
    bool is_session_id_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_auth_provider;
    bool m_auth_provider_isSet;
    bool m_auth_provider_isValid;

    OAIAnalytics_GenericLogFlow_200_response_logs_inner_device m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    QString m_event_id;
    bool m_event_id_isSet;
    bool m_event_id_isValid;

    QString m_event_name;
    bool m_event_name_isSet;
    bool m_event_name_isValid;

    QString m_install_id;
    bool m_install_id_isSet;
    bool m_install_id_isValid;

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QMap<QString, QString> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_session_id;
    bool m_session_id_isSet;
    bool m_session_id_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalytics_GenericLogFlow_200_response_logs_inner)

#endif // OAIAnalytics_GenericLogFlow_200_response_logs_inner_H
