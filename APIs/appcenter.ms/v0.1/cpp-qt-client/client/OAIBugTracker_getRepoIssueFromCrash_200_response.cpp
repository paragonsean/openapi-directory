/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBugTracker_getRepoIssueFromCrash_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBugTracker_getRepoIssueFromCrash_200_response::OAIBugTracker_getRepoIssueFromCrash_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBugTracker_getRepoIssueFromCrash_200_response::OAIBugTracker_getRepoIssueFromCrash_200_response() {
    this->initializeModel();
}

OAIBugTracker_getRepoIssueFromCrash_200_response::~OAIBugTracker_getRepoIssueFromCrash_200_response() {}

void OAIBugTracker_getRepoIssueFromCrash_200_response::initializeModel() {

    m_bug_tracker_type_isSet = false;
    m_bug_tracker_type_isValid = false;

    m_event_type_isSet = false;
    m_event_type_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_mobile_center_id_isSet = false;
    m_mobile_center_id_isValid = false;

    m_repo_name_isSet = false;
    m_repo_name_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIBugTracker_getRepoIssueFromCrash_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBugTracker_getRepoIssueFromCrash_200_response::fromJsonObject(QJsonObject json) {

    m_bug_tracker_type_isValid = ::OpenAPI::fromJsonValue(m_bug_tracker_type, json[QString("bug_tracker_type")]);
    m_bug_tracker_type_isSet = !json[QString("bug_tracker_type")].isNull() && m_bug_tracker_type_isValid;

    m_event_type_isValid = ::OpenAPI::fromJsonValue(m_event_type, json[QString("event_type")]);
    m_event_type_isSet = !json[QString("event_type")].isNull() && m_event_type_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_mobile_center_id_isValid = ::OpenAPI::fromJsonValue(m_mobile_center_id, json[QString("mobile_center_id")]);
    m_mobile_center_id_isSet = !json[QString("mobile_center_id")].isNull() && m_mobile_center_id_isValid;

    m_repo_name_isValid = ::OpenAPI::fromJsonValue(m_repo_name, json[QString("repo_name")]);
    m_repo_name_isSet = !json[QString("repo_name")].isNull() && m_repo_name_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIBugTracker_getRepoIssueFromCrash_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBugTracker_getRepoIssueFromCrash_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_bug_tracker_type_isSet) {
        obj.insert(QString("bug_tracker_type"), ::OpenAPI::toJsonValue(m_bug_tracker_type));
    }
    if (m_event_type_isSet) {
        obj.insert(QString("event_type"), ::OpenAPI::toJsonValue(m_event_type));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_mobile_center_id_isSet) {
        obj.insert(QString("mobile_center_id"), ::OpenAPI::toJsonValue(m_mobile_center_id));
    }
    if (m_repo_name_isSet) {
        obj.insert(QString("repo_name"), ::OpenAPI::toJsonValue(m_repo_name));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIBugTracker_getRepoIssueFromCrash_200_response::getBugTrackerType() const {
    return m_bug_tracker_type;
}
void OAIBugTracker_getRepoIssueFromCrash_200_response::setBugTrackerType(const QString &bug_tracker_type) {
    m_bug_tracker_type = bug_tracker_type;
    m_bug_tracker_type_isSet = true;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_bug_tracker_type_Set() const{
    return m_bug_tracker_type_isSet;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_bug_tracker_type_Valid() const{
    return m_bug_tracker_type_isValid;
}

QString OAIBugTracker_getRepoIssueFromCrash_200_response::getEventType() const {
    return m_event_type;
}
void OAIBugTracker_getRepoIssueFromCrash_200_response::setEventType(const QString &event_type) {
    m_event_type = event_type;
    m_event_type_isSet = true;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_event_type_Set() const{
    return m_event_type_isSet;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_event_type_Valid() const{
    return m_event_type_isValid;
}

QString OAIBugTracker_getRepoIssueFromCrash_200_response::getId() const {
    return m_id;
}
void OAIBugTracker_getRepoIssueFromCrash_200_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBugTracker_getRepoIssueFromCrash_200_response::getMobileCenterId() const {
    return m_mobile_center_id;
}
void OAIBugTracker_getRepoIssueFromCrash_200_response::setMobileCenterId(const QString &mobile_center_id) {
    m_mobile_center_id = mobile_center_id;
    m_mobile_center_id_isSet = true;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_mobile_center_id_Set() const{
    return m_mobile_center_id_isSet;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_mobile_center_id_Valid() const{
    return m_mobile_center_id_isValid;
}

QString OAIBugTracker_getRepoIssueFromCrash_200_response::getRepoName() const {
    return m_repo_name;
}
void OAIBugTracker_getRepoIssueFromCrash_200_response::setRepoName(const QString &repo_name) {
    m_repo_name = repo_name;
    m_repo_name_isSet = true;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_repo_name_Set() const{
    return m_repo_name_isSet;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_repo_name_Valid() const{
    return m_repo_name_isValid;
}

QString OAIBugTracker_getRepoIssueFromCrash_200_response::getTitle() const {
    return m_title;
}
void OAIBugTracker_getRepoIssueFromCrash_200_response::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_title_Set() const{
    return m_title_isSet;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIBugTracker_getRepoIssueFromCrash_200_response::getUrl() const {
    return m_url;
}
void OAIBugTracker_getRepoIssueFromCrash_200_response::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_url_Set() const{
    return m_url_isSet;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bug_tracker_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_center_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repo_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBugTracker_getRepoIssueFromCrash_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
