/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGitHubInstallationRepositories_inner.h
 *
 * The repository which is accessiable by GitHub App Installation
 */

#ifndef OAIGitHubInstallationRepositories_inner_H
#define OAIGitHubInstallationRepositories_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGitHubInstallationRepositories_inner : public OAIObject {
public:
    OAIGitHubInstallationRepositories_inner();
    OAIGitHubInstallationRepositories_inner(QString json);
    ~OAIGitHubInstallationRepositories_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCloneUrl() const;
    void setCloneUrl(const QString &clone_url);
    bool is_clone_url_Set() const;
    bool is_clone_url_Valid() const;

    QString getDefaultBranch() const;
    void setDefaultBranch(const QString &default_branch);
    bool is_default_branch_Set() const;
    bool is_default_branch_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isFork() const;
    void setFork(const bool &fork);
    bool is_fork_Set() const;
    bool is_fork_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_clone_url;
    bool m_clone_url_isSet;
    bool m_clone_url_isValid;

    QString m_default_branch;
    bool m_default_branch_isSet;
    bool m_default_branch_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_fork;
    bool m_fork_isSet;
    bool m_fork_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGitHubInstallationRepositories_inner)

#endif // OAIGitHubInstallationRepositories_inner_H
