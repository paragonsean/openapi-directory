/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMissingSymbolGroups_list_200_response_groups_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMissingSymbolGroups_list_200_response_groups_inner::OAIMissingSymbolGroups_list_200_response_groups_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMissingSymbolGroups_list_200_response_groups_inner::OAIMissingSymbolGroups_list_200_response_groups_inner() {
    this->initializeModel();
}

OAIMissingSymbolGroups_list_200_response_groups_inner::~OAIMissingSymbolGroups_list_200_response_groups_inner() {}

void OAIMissingSymbolGroups_list_200_response_groups_inner::initializeModel() {

    m_app_build_isSet = false;
    m_app_build_isValid = false;

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_app_ver_isSet = false;
    m_app_ver_isValid = false;

    m_crash_count_isSet = false;
    m_crash_count_isValid = false;

    m_error_count_isSet = false;
    m_error_count_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_missing_symbols_isSet = false;
    m_missing_symbols_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_symbol_group_id_isSet = false;
    m_symbol_group_id_isValid = false;
}

void OAIMissingSymbolGroups_list_200_response_groups_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMissingSymbolGroups_list_200_response_groups_inner::fromJsonObject(QJsonObject json) {

    m_app_build_isValid = ::OpenAPI::fromJsonValue(m_app_build, json[QString("app_build")]);
    m_app_build_isSet = !json[QString("app_build")].isNull() && m_app_build_isValid;

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("app_id")]);
    m_app_id_isSet = !json[QString("app_id")].isNull() && m_app_id_isValid;

    m_app_ver_isValid = ::OpenAPI::fromJsonValue(m_app_ver, json[QString("app_ver")]);
    m_app_ver_isSet = !json[QString("app_ver")].isNull() && m_app_ver_isValid;

    m_crash_count_isValid = ::OpenAPI::fromJsonValue(m_crash_count, json[QString("crash_count")]);
    m_crash_count_isSet = !json[QString("crash_count")].isNull() && m_crash_count_isValid;

    m_error_count_isValid = ::OpenAPI::fromJsonValue(m_error_count, json[QString("error_count")]);
    m_error_count_isSet = !json[QString("error_count")].isNull() && m_error_count_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("last_modified")]);
    m_last_modified_isSet = !json[QString("last_modified")].isNull() && m_last_modified_isValid;

    m_missing_symbols_isValid = ::OpenAPI::fromJsonValue(m_missing_symbols, json[QString("missing_symbols")]);
    m_missing_symbols_isSet = !json[QString("missing_symbols")].isNull() && m_missing_symbols_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_symbol_group_id_isValid = ::OpenAPI::fromJsonValue(m_symbol_group_id, json[QString("symbol_group_id")]);
    m_symbol_group_id_isSet = !json[QString("symbol_group_id")].isNull() && m_symbol_group_id_isValid;
}

QString OAIMissingSymbolGroups_list_200_response_groups_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMissingSymbolGroups_list_200_response_groups_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_app_build_isSet) {
        obj.insert(QString("app_build"), ::OpenAPI::toJsonValue(m_app_build));
    }
    if (m_app_id_isSet) {
        obj.insert(QString("app_id"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_app_ver_isSet) {
        obj.insert(QString("app_ver"), ::OpenAPI::toJsonValue(m_app_ver));
    }
    if (m_crash_count_isSet) {
        obj.insert(QString("crash_count"), ::OpenAPI::toJsonValue(m_crash_count));
    }
    if (m_error_count_isSet) {
        obj.insert(QString("error_count"), ::OpenAPI::toJsonValue(m_error_count));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("last_modified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_missing_symbols.size() > 0) {
        obj.insert(QString("missing_symbols"), ::OpenAPI::toJsonValue(m_missing_symbols));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_symbol_group_id_isSet) {
        obj.insert(QString("symbol_group_id"), ::OpenAPI::toJsonValue(m_symbol_group_id));
    }
    return obj;
}

QString OAIMissingSymbolGroups_list_200_response_groups_inner::getAppBuild() const {
    return m_app_build;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setAppBuild(const QString &app_build) {
    m_app_build = app_build;
    m_app_build_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_app_build_Set() const{
    return m_app_build_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_app_build_Valid() const{
    return m_app_build_isValid;
}

QString OAIMissingSymbolGroups_list_200_response_groups_inner::getAppId() const {
    return m_app_id;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAIMissingSymbolGroups_list_200_response_groups_inner::getAppVer() const {
    return m_app_ver;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setAppVer(const QString &app_ver) {
    m_app_ver = app_ver;
    m_app_ver_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_app_ver_Set() const{
    return m_app_ver_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_app_ver_Valid() const{
    return m_app_ver_isValid;
}

qint32 OAIMissingSymbolGroups_list_200_response_groups_inner::getCrashCount() const {
    return m_crash_count;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setCrashCount(const qint32 &crash_count) {
    m_crash_count = crash_count;
    m_crash_count_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_crash_count_Set() const{
    return m_crash_count_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_crash_count_Valid() const{
    return m_crash_count_isValid;
}

qint32 OAIMissingSymbolGroups_list_200_response_groups_inner::getErrorCount() const {
    return m_error_count;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setErrorCount(const qint32 &error_count) {
    m_error_count = error_count;
    m_error_count_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_error_count_Set() const{
    return m_error_count_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_error_count_Valid() const{
    return m_error_count_isValid;
}

QDateTime OAIMissingSymbolGroups_list_200_response_groups_inner::getLastModified() const {
    return m_last_modified;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setLastModified(const QDateTime &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

QList<OAIMissingSymbolGroups_list_200_response_groups_inner_missing_symbols_inner> OAIMissingSymbolGroups_list_200_response_groups_inner::getMissingSymbols() const {
    return m_missing_symbols;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setMissingSymbols(const QList<OAIMissingSymbolGroups_list_200_response_groups_inner_missing_symbols_inner> &missing_symbols) {
    m_missing_symbols = missing_symbols;
    m_missing_symbols_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_missing_symbols_Set() const{
    return m_missing_symbols_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_missing_symbols_Valid() const{
    return m_missing_symbols_isValid;
}

QString OAIMissingSymbolGroups_list_200_response_groups_inner::getStatus() const {
    return m_status;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIMissingSymbolGroups_list_200_response_groups_inner::getSymbolGroupId() const {
    return m_symbol_group_id;
}
void OAIMissingSymbolGroups_list_200_response_groups_inner::setSymbolGroupId(const QString &symbol_group_id) {
    m_symbol_group_id = symbol_group_id;
    m_symbol_group_id_isSet = true;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_symbol_group_id_Set() const{
    return m_symbol_group_id_isSet;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::is_symbol_group_id_Valid() const{
    return m_symbol_group_id_isValid;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_build_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_ver_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crash_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_missing_symbols.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_symbol_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMissingSymbolGroups_list_200_response_groups_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_build_isValid && m_app_id_isValid && m_app_ver_isValid && m_last_modified_isValid && m_missing_symbols_isValid && m_status_isValid && m_symbol_group_id_isValid && true;
}

} // namespace OpenAPI
