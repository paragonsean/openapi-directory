/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExportConfigurationResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExportConfigurationResult::OAIExportConfigurationResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExportConfigurationResult::OAIExportConfigurationResult() {
    this->initializeModel();
}

OAIExportConfigurationResult::~OAIExportConfigurationResult() {}

void OAIExportConfigurationResult::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_export_configuration_isSet = false;
    m_export_configuration_isValid = false;

    m_export_entities_isSet = false;
    m_export_entities_isValid = false;

    m_export_type_isSet = false;
    m_export_type_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_run_time_isSet = false;
    m_last_run_time_isValid = false;

    m_resource_group_isSet = false;
    m_resource_group_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_state_info_isSet = false;
    m_state_info_isValid = false;
}

void OAIExportConfigurationResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExportConfigurationResult::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creation_time")]);
    m_creation_time_isSet = !json[QString("creation_time")].isNull() && m_creation_time_isValid;

    m_export_configuration_isValid = ::OpenAPI::fromJsonValue(m_export_configuration, json[QString("export_configuration")]);
    m_export_configuration_isSet = !json[QString("export_configuration")].isNull() && m_export_configuration_isValid;

    m_export_entities_isValid = ::OpenAPI::fromJsonValue(m_export_entities, json[QString("export_entities")]);
    m_export_entities_isSet = !json[QString("export_entities")].isNull() && m_export_entities_isValid;

    m_export_type_isValid = ::OpenAPI::fromJsonValue(m_export_type, json[QString("export_type")]);
    m_export_type_isSet = !json[QString("export_type")].isNull() && m_export_type_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_run_time_isValid = ::OpenAPI::fromJsonValue(m_last_run_time, json[QString("last_run_time")]);
    m_last_run_time_isSet = !json[QString("last_run_time")].isNull() && m_last_run_time_isValid;

    m_resource_group_isValid = ::OpenAPI::fromJsonValue(m_resource_group, json[QString("resource_group")]);
    m_resource_group_isSet = !json[QString("resource_group")].isNull() && m_resource_group_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resource_name")]);
    m_resource_name_isSet = !json[QString("resource_name")].isNull() && m_resource_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_state_info_isValid = ::OpenAPI::fromJsonValue(m_state_info, json[QString("state_info")]);
    m_state_info_isSet = !json[QString("state_info")].isNull() && m_state_info_isValid;
}

QString OAIExportConfigurationResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExportConfigurationResult::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creation_time"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_export_configuration.isSet()) {
        obj.insert(QString("export_configuration"), ::OpenAPI::toJsonValue(m_export_configuration));
    }
    if (m_export_entities.size() > 0) {
        obj.insert(QString("export_entities"), ::OpenAPI::toJsonValue(m_export_entities));
    }
    if (m_export_type_isSet) {
        obj.insert(QString("export_type"), ::OpenAPI::toJsonValue(m_export_type));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_run_time_isSet) {
        obj.insert(QString("last_run_time"), ::OpenAPI::toJsonValue(m_last_run_time));
    }
    if (m_resource_group_isSet) {
        obj.insert(QString("resource_group"), ::OpenAPI::toJsonValue(m_resource_group));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resource_name"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_state_info_isSet) {
        obj.insert(QString("state_info"), ::OpenAPI::toJsonValue(m_state_info));
    }
    return obj;
}

QString OAIExportConfigurationResult::getCreationTime() const {
    return m_creation_time;
}
void OAIExportConfigurationResult::setCreationTime(const QString &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIExportConfigurationResult::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIExportConfigurationResult::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

OAIExportConfigurations_List_200_response_values_inner_export_configuration OAIExportConfigurationResult::getExportConfiguration() const {
    return m_export_configuration;
}
void OAIExportConfigurationResult::setExportConfiguration(const OAIExportConfigurations_List_200_response_values_inner_export_configuration &export_configuration) {
    m_export_configuration = export_configuration;
    m_export_configuration_isSet = true;
}

bool OAIExportConfigurationResult::is_export_configuration_Set() const{
    return m_export_configuration_isSet;
}

bool OAIExportConfigurationResult::is_export_configuration_Valid() const{
    return m_export_configuration_isValid;
}

QList<QString> OAIExportConfigurationResult::getExportEntities() const {
    return m_export_entities;
}
void OAIExportConfigurationResult::setExportEntities(const QList<QString> &export_entities) {
    m_export_entities = export_entities;
    m_export_entities_isSet = true;
}

bool OAIExportConfigurationResult::is_export_entities_Set() const{
    return m_export_entities_isSet;
}

bool OAIExportConfigurationResult::is_export_entities_Valid() const{
    return m_export_entities_isValid;
}

QString OAIExportConfigurationResult::getExportType() const {
    return m_export_type;
}
void OAIExportConfigurationResult::setExportType(const QString &export_type) {
    m_export_type = export_type;
    m_export_type_isSet = true;
}

bool OAIExportConfigurationResult::is_export_type_Set() const{
    return m_export_type_isSet;
}

bool OAIExportConfigurationResult::is_export_type_Valid() const{
    return m_export_type_isValid;
}

QString OAIExportConfigurationResult::getId() const {
    return m_id;
}
void OAIExportConfigurationResult::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIExportConfigurationResult::is_id_Set() const{
    return m_id_isSet;
}

bool OAIExportConfigurationResult::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIExportConfigurationResult::getLastRunTime() const {
    return m_last_run_time;
}
void OAIExportConfigurationResult::setLastRunTime(const QString &last_run_time) {
    m_last_run_time = last_run_time;
    m_last_run_time_isSet = true;
}

bool OAIExportConfigurationResult::is_last_run_time_Set() const{
    return m_last_run_time_isSet;
}

bool OAIExportConfigurationResult::is_last_run_time_Valid() const{
    return m_last_run_time_isValid;
}

QString OAIExportConfigurationResult::getResourceGroup() const {
    return m_resource_group;
}
void OAIExportConfigurationResult::setResourceGroup(const QString &resource_group) {
    m_resource_group = resource_group;
    m_resource_group_isSet = true;
}

bool OAIExportConfigurationResult::is_resource_group_Set() const{
    return m_resource_group_isSet;
}

bool OAIExportConfigurationResult::is_resource_group_Valid() const{
    return m_resource_group_isValid;
}

QString OAIExportConfigurationResult::getResourceName() const {
    return m_resource_name;
}
void OAIExportConfigurationResult::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIExportConfigurationResult::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIExportConfigurationResult::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAIExportConfigurationResult::getState() const {
    return m_state;
}
void OAIExportConfigurationResult::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIExportConfigurationResult::is_state_Set() const{
    return m_state_isSet;
}

bool OAIExportConfigurationResult::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIExportConfigurationResult::getStateInfo() const {
    return m_state_info;
}
void OAIExportConfigurationResult::setStateInfo(const QString &state_info) {
    m_state_info = state_info;
    m_state_info_isSet = true;
}

bool OAIExportConfigurationResult::is_state_info_Set() const{
    return m_state_info_isSet;
}

bool OAIExportConfigurationResult::is_state_info_Valid() const{
    return m_state_info_isValid;
}

bool OAIExportConfigurationResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_entities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_run_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_info_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExportConfigurationResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_creation_time_isValid && m_export_type_isValid && m_id_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
