/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITestSeries.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITestSeries::OAITestSeries(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITestSeries::OAITestSeries() {
    this->initializeModel();
}

OAITestSeries::~OAITestSeries() {}

void OAITestSeries::initializeModel() {

    m_most_recent_activity_isSet = false;
    m_most_recent_activity_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_slug_isSet = false;
    m_slug_isValid = false;

    m_test_runs_isSet = false;
    m_test_runs_isValid = false;
}

void OAITestSeries::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITestSeries::fromJsonObject(QJsonObject json) {

    m_most_recent_activity_isValid = ::OpenAPI::fromJsonValue(m_most_recent_activity, json[QString("mostRecentActivity")]);
    m_most_recent_activity_isSet = !json[QString("mostRecentActivity")].isNull() && m_most_recent_activity_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_slug_isValid = ::OpenAPI::fromJsonValue(m_slug, json[QString("slug")]);
    m_slug_isSet = !json[QString("slug")].isNull() && m_slug_isValid;

    m_test_runs_isValid = ::OpenAPI::fromJsonValue(m_test_runs, json[QString("testRuns")]);
    m_test_runs_isSet = !json[QString("testRuns")].isNull() && m_test_runs_isValid;
}

QString OAITestSeries::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITestSeries::asJsonObject() const {
    QJsonObject obj;
    if (m_most_recent_activity_isSet) {
        obj.insert(QString("mostRecentActivity"), ::OpenAPI::toJsonValue(m_most_recent_activity));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_slug_isSet) {
        obj.insert(QString("slug"), ::OpenAPI::toJsonValue(m_slug));
    }
    if (m_test_runs.size() > 0) {
        obj.insert(QString("testRuns"), ::OpenAPI::toJsonValue(m_test_runs));
    }
    return obj;
}

QString OAITestSeries::getMostRecentActivity() const {
    return m_most_recent_activity;
}
void OAITestSeries::setMostRecentActivity(const QString &most_recent_activity) {
    m_most_recent_activity = most_recent_activity;
    m_most_recent_activity_isSet = true;
}

bool OAITestSeries::is_most_recent_activity_Set() const{
    return m_most_recent_activity_isSet;
}

bool OAITestSeries::is_most_recent_activity_Valid() const{
    return m_most_recent_activity_isValid;
}

QString OAITestSeries::getName() const {
    return m_name;
}
void OAITestSeries::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITestSeries::is_name_Set() const{
    return m_name_isSet;
}

bool OAITestSeries::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITestSeries::getSlug() const {
    return m_slug;
}
void OAITestSeries::setSlug(const QString &slug) {
    m_slug = slug;
    m_slug_isSet = true;
}

bool OAITestSeries::is_slug_Set() const{
    return m_slug_isSet;
}

bool OAITestSeries::is_slug_Valid() const{
    return m_slug_isValid;
}

QList<OAITest_Run_Summary> OAITestSeries::getTestRuns() const {
    return m_test_runs;
}
void OAITestSeries::setTestRuns(const QList<OAITest_Run_Summary> &test_runs) {
    m_test_runs = test_runs;
    m_test_runs_isSet = true;
}

bool OAITestSeries::is_test_runs_Set() const{
    return m_test_runs_isSet;
}

bool OAITestSeries::is_test_runs_Valid() const{
    return m_test_runs_isValid;
}

bool OAITestSeries::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_most_recent_activity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slug_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_runs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITestSeries::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_slug_isValid && true;
}

} // namespace OpenAPI
