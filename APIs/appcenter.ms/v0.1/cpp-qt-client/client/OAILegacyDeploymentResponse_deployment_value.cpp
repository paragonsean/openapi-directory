/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILegacyDeploymentResponse_deployment_value.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILegacyDeploymentResponse_deployment_value::OAILegacyDeploymentResponse_deployment_value(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILegacyDeploymentResponse_deployment_value::OAILegacyDeploymentResponse_deployment_value() {
    this->initializeModel();
}

OAILegacyDeploymentResponse_deployment_value::~OAILegacyDeploymentResponse_deployment_value() {}

void OAILegacyDeploymentResponse_deployment_value::initializeModel() {

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_package_isSet = false;
    m_package_isValid = false;
}

void OAILegacyDeploymentResponse_deployment_value::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILegacyDeploymentResponse_deployment_value::fromJsonObject(QJsonObject json) {

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("createdTime")]);
    m_created_time_isSet = !json[QString("createdTime")].isNull() && m_created_time_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_package_isValid = ::OpenAPI::fromJsonValue(m_package, json[QString("package")]);
    m_package_isSet = !json[QString("package")].isNull() && m_package_isValid;
}

QString OAILegacyDeploymentResponse_deployment_value::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILegacyDeploymentResponse_deployment_value::asJsonObject() const {
    QJsonObject obj;
    if (m_created_time_isSet) {
        obj.insert(QString("createdTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_package.isSet()) {
        obj.insert(QString("package"), ::OpenAPI::toJsonValue(m_package));
    }
    return obj;
}

qint32 OAILegacyDeploymentResponse_deployment_value::getCreatedTime() const {
    return m_created_time;
}
void OAILegacyDeploymentResponse_deployment_value::setCreatedTime(const qint32 &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAILegacyDeploymentResponse_deployment_value::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAILegacyDeploymentResponse_deployment_value::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAILegacyDeploymentResponse_deployment_value::getId() const {
    return m_id;
}
void OAILegacyDeploymentResponse_deployment_value::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAILegacyDeploymentResponse_deployment_value::is_id_Set() const{
    return m_id_isSet;
}

bool OAILegacyDeploymentResponse_deployment_value::is_id_Valid() const{
    return m_id_isValid;
}

QString OAILegacyDeploymentResponse_deployment_value::getKey() const {
    return m_key;
}
void OAILegacyDeploymentResponse_deployment_value::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAILegacyDeploymentResponse_deployment_value::is_key_Set() const{
    return m_key_isSet;
}

bool OAILegacyDeploymentResponse_deployment_value::is_key_Valid() const{
    return m_key_isValid;
}

QString OAILegacyDeploymentResponse_deployment_value::getName() const {
    return m_name;
}
void OAILegacyDeploymentResponse_deployment_value::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILegacyDeploymentResponse_deployment_value::is_name_Set() const{
    return m_name_isSet;
}

bool OAILegacyDeploymentResponse_deployment_value::is_name_Valid() const{
    return m_name_isValid;
}

OAILegacyCodePushReleaseResponse_package OAILegacyDeploymentResponse_deployment_value::getPackage() const {
    return m_package;
}
void OAILegacyDeploymentResponse_deployment_value::setPackage(const OAILegacyCodePushReleaseResponse_package &package) {
    m_package = package;
    m_package_isSet = true;
}

bool OAILegacyDeploymentResponse_deployment_value::is_package_Set() const{
    return m_package_isSet;
}

bool OAILegacyDeploymentResponse_deployment_value::is_package_Valid() const{
    return m_package_isValid;
}

bool OAILegacyDeploymentResponse_deployment_value::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILegacyDeploymentResponse_deployment_value::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
