/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReleases_updateDetails_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReleases_updateDetails_request::OAIReleases_updateDetails_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReleases_updateDetails_request::OAIReleases_updateDetails_request() {
    this->initializeModel();
}

OAIReleases_updateDetails_request::~OAIReleases_updateDetails_request() {}

void OAIReleases_updateDetails_request::initializeModel() {

    m_build_isSet = false;
    m_build_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_release_notes_isSet = false;
    m_release_notes_isValid = false;
}

void OAIReleases_updateDetails_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReleases_updateDetails_request::fromJsonObject(QJsonObject json) {

    m_build_isValid = ::OpenAPI::fromJsonValue(m_build, json[QString("build")]);
    m_build_isSet = !json[QString("build")].isNull() && m_build_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_release_notes_isValid = ::OpenAPI::fromJsonValue(m_release_notes, json[QString("release_notes")]);
    m_release_notes_isSet = !json[QString("release_notes")].isNull() && m_release_notes_isValid;
}

QString OAIReleases_updateDetails_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReleases_updateDetails_request::asJsonObject() const {
    QJsonObject obj;
    if (m_build.isSet()) {
        obj.insert(QString("build"), ::OpenAPI::toJsonValue(m_build));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_release_notes_isSet) {
        obj.insert(QString("release_notes"), ::OpenAPI::toJsonValue(m_release_notes));
    }
    return obj;
}

OAIReleases_getLatestByDistributionGroup_200_response_build OAIReleases_updateDetails_request::getBuild() const {
    return m_build;
}
void OAIReleases_updateDetails_request::setBuild(const OAIReleases_getLatestByDistributionGroup_200_response_build &build) {
    m_build = build;
    m_build_isSet = true;
}

bool OAIReleases_updateDetails_request::is_build_Set() const{
    return m_build_isSet;
}

bool OAIReleases_updateDetails_request::is_build_Valid() const{
    return m_build_isValid;
}

bool OAIReleases_updateDetails_request::isEnabled() const {
    return m_enabled;
}
void OAIReleases_updateDetails_request::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIReleases_updateDetails_request::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIReleases_updateDetails_request::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIReleases_updateDetails_request::getReleaseNotes() const {
    return m_release_notes;
}
void OAIReleases_updateDetails_request::setReleaseNotes(const QString &release_notes) {
    m_release_notes = release_notes;
    m_release_notes_isSet = true;
}

bool OAIReleases_updateDetails_request::is_release_notes_Set() const{
    return m_release_notes_isSet;
}

bool OAIReleases_updateDetails_request::is_release_notes_Valid() const{
    return m_release_notes_isValid;
}

bool OAIReleases_updateDetails_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_notes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReleases_updateDetails_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
