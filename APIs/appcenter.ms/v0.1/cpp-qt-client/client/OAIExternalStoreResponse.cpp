/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExternalStoreResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExternalStoreResponse::OAIExternalStoreResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExternalStoreResponse::OAIExternalStoreResponse() {
    this->initializeModel();
}

OAIExternalStoreResponse::~OAIExternalStoreResponse() {}

void OAIExternalStoreResponse::initializeModel() {

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_created_by_principal_type_isSet = false;
    m_created_by_principal_type_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_intune_details_isSet = false;
    m_intune_details_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_service_connection_id_isSet = false;
    m_service_connection_id_isValid = false;

    m_track_isSet = false;
    m_track_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIExternalStoreResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExternalStoreResponse::fromJsonObject(QJsonObject json) {

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_created_by_principal_type_isValid = ::OpenAPI::fromJsonValue(m_created_by_principal_type, json[QString("created_by_principal_type")]);
    m_created_by_principal_type_isSet = !json[QString("created_by_principal_type")].isNull() && m_created_by_principal_type_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_intune_details_isValid = ::OpenAPI::fromJsonValue(m_intune_details, json[QString("intune_details")]);
    m_intune_details_isSet = !json[QString("intune_details")].isNull() && m_intune_details_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_service_connection_id_isValid = ::OpenAPI::fromJsonValue(m_service_connection_id, json[QString("service_connection_id")]);
    m_service_connection_id_isSet = !json[QString("service_connection_id")].isNull() && m_service_connection_id_isValid;

    m_track_isValid = ::OpenAPI::fromJsonValue(m_track, json[QString("track")]);
    m_track_isSet = !json[QString("track")].isNull() && m_track_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIExternalStoreResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExternalStoreResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by_isSet) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_created_by_principal_type_isSet) {
        obj.insert(QString("created_by_principal_type"), ::OpenAPI::toJsonValue(m_created_by_principal_type));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_intune_details.isSet()) {
        obj.insert(QString("intune_details"), ::OpenAPI::toJsonValue(m_intune_details));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_service_connection_id_isSet) {
        obj.insert(QString("service_connection_id"), ::OpenAPI::toJsonValue(m_service_connection_id));
    }
    if (m_track_isSet) {
        obj.insert(QString("track"), ::OpenAPI::toJsonValue(m_track));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIExternalStoreResponse::getCreatedBy() const {
    return m_created_by;
}
void OAIExternalStoreResponse::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIExternalStoreResponse::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIExternalStoreResponse::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAIExternalStoreResponse::getCreatedByPrincipalType() const {
    return m_created_by_principal_type;
}
void OAIExternalStoreResponse::setCreatedByPrincipalType(const QString &created_by_principal_type) {
    m_created_by_principal_type = created_by_principal_type;
    m_created_by_principal_type_isSet = true;
}

bool OAIExternalStoreResponse::is_created_by_principal_type_Set() const{
    return m_created_by_principal_type_isSet;
}

bool OAIExternalStoreResponse::is_created_by_principal_type_Valid() const{
    return m_created_by_principal_type_isValid;
}

QString OAIExternalStoreResponse::getId() const {
    return m_id;
}
void OAIExternalStoreResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIExternalStoreResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIExternalStoreResponse::is_id_Valid() const{
    return m_id_isValid;
}

OAIStores_list_200_response_inner_intune_details OAIExternalStoreResponse::getIntuneDetails() const {
    return m_intune_details;
}
void OAIExternalStoreResponse::setIntuneDetails(const OAIStores_list_200_response_inner_intune_details &intune_details) {
    m_intune_details = intune_details;
    m_intune_details_isSet = true;
}

bool OAIExternalStoreResponse::is_intune_details_Set() const{
    return m_intune_details_isSet;
}

bool OAIExternalStoreResponse::is_intune_details_Valid() const{
    return m_intune_details_isValid;
}

QString OAIExternalStoreResponse::getName() const {
    return m_name;
}
void OAIExternalStoreResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIExternalStoreResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIExternalStoreResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIExternalStoreResponse::getServiceConnectionId() const {
    return m_service_connection_id;
}
void OAIExternalStoreResponse::setServiceConnectionId(const QString &service_connection_id) {
    m_service_connection_id = service_connection_id;
    m_service_connection_id_isSet = true;
}

bool OAIExternalStoreResponse::is_service_connection_id_Set() const{
    return m_service_connection_id_isSet;
}

bool OAIExternalStoreResponse::is_service_connection_id_Valid() const{
    return m_service_connection_id_isValid;
}

QString OAIExternalStoreResponse::getTrack() const {
    return m_track;
}
void OAIExternalStoreResponse::setTrack(const QString &track) {
    m_track = track;
    m_track_isSet = true;
}

bool OAIExternalStoreResponse::is_track_Set() const{
    return m_track_isSet;
}

bool OAIExternalStoreResponse::is_track_Valid() const{
    return m_track_isValid;
}

QString OAIExternalStoreResponse::getType() const {
    return m_type;
}
void OAIExternalStoreResponse::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIExternalStoreResponse::is_type_Set() const{
    return m_type_isSet;
}

bool OAIExternalStoreResponse::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIExternalStoreResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_principal_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intune_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_connection_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_track_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExternalStoreResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
