/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDevice_Set_deviceConfigurations_inner_model.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDevice_Set_deviceConfigurations_inner_model::OAIDevice_Set_deviceConfigurations_inner_model(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDevice_Set_deviceConfigurations_inner_model::OAIDevice_Set_deviceConfigurations_inner_model() {
    this->initializeModel();
}

OAIDevice_Set_deviceConfigurations_inner_model::~OAIDevice_Set_deviceConfigurations_inner_model() {}

void OAIDevice_Set_deviceConfigurations_inner_model::initializeModel() {

    m_form_factor_isSet = false;
    m_form_factor_isValid = false;

    m_manufacturer_isSet = false;
    m_manufacturer_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_release_date_isSet = false;
    m_release_date_isValid = false;
}

void OAIDevice_Set_deviceConfigurations_inner_model::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDevice_Set_deviceConfigurations_inner_model::fromJsonObject(QJsonObject json) {

    m_form_factor_isValid = ::OpenAPI::fromJsonValue(m_form_factor, json[QString("formFactor")]);
    m_form_factor_isSet = !json[QString("formFactor")].isNull() && m_form_factor_isValid;

    m_manufacturer_isValid = ::OpenAPI::fromJsonValue(m_manufacturer, json[QString("manufacturer")]);
    m_manufacturer_isSet = !json[QString("manufacturer")].isNull() && m_manufacturer_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_release_date_isValid = ::OpenAPI::fromJsonValue(m_release_date, json[QString("releaseDate")]);
    m_release_date_isSet = !json[QString("releaseDate")].isNull() && m_release_date_isValid;
}

QString OAIDevice_Set_deviceConfigurations_inner_model::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDevice_Set_deviceConfigurations_inner_model::asJsonObject() const {
    QJsonObject obj;
    if (m_form_factor_isSet) {
        obj.insert(QString("formFactor"), ::OpenAPI::toJsonValue(m_form_factor));
    }
    if (m_manufacturer_isSet) {
        obj.insert(QString("manufacturer"), ::OpenAPI::toJsonValue(m_manufacturer));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_release_date_isSet) {
        obj.insert(QString("releaseDate"), ::OpenAPI::toJsonValue(m_release_date));
    }
    return obj;
}

QString OAIDevice_Set_deviceConfigurations_inner_model::getFormFactor() const {
    return m_form_factor;
}
void OAIDevice_Set_deviceConfigurations_inner_model::setFormFactor(const QString &form_factor) {
    m_form_factor = form_factor;
    m_form_factor_isSet = true;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::is_form_factor_Set() const{
    return m_form_factor_isSet;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::is_form_factor_Valid() const{
    return m_form_factor_isValid;
}

QString OAIDevice_Set_deviceConfigurations_inner_model::getManufacturer() const {
    return m_manufacturer;
}
void OAIDevice_Set_deviceConfigurations_inner_model::setManufacturer(const QString &manufacturer) {
    m_manufacturer = manufacturer;
    m_manufacturer_isSet = true;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::is_manufacturer_Set() const{
    return m_manufacturer_isSet;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::is_manufacturer_Valid() const{
    return m_manufacturer_isValid;
}

QString OAIDevice_Set_deviceConfigurations_inner_model::getName() const {
    return m_name;
}
void OAIDevice_Set_deviceConfigurations_inner_model::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDevice_Set_deviceConfigurations_inner_model::getReleaseDate() const {
    return m_release_date;
}
void OAIDevice_Set_deviceConfigurations_inner_model::setReleaseDate(const QString &release_date) {
    m_release_date = release_date;
    m_release_date_isSet = true;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::is_release_date_Set() const{
    return m_release_date_isSet;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::is_release_date_Valid() const{
    return m_release_date_isValid;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_form_factor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manufacturer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDevice_Set_deviceConfigurations_inner_model::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
