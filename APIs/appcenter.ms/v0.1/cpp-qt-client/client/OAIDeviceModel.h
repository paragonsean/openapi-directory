/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceModel.h
 *
 * 
 */

#ifndef OAIDeviceModel_H
#define OAIDeviceModel_H

#include <QJsonObject>

#include "OAITest_getDeviceConfigurations_200_response_inner_model_cpu.h"
#include "OAITest_getDeviceConfigurations_200_response_inner_model_deviceFrame.h"
#include "OAITest_getDeviceConfigurations_200_response_inner_model_dimensions.h"
#include "OAITest_getDeviceConfigurations_200_response_inner_model_memory.h"
#include "OAITest_getDeviceConfigurations_200_response_inner_model_resolution.h"
#include "OAITest_getDeviceConfigurations_200_response_inner_model_screenSize.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITest_getDeviceConfigurations_200_response_inner_model_cpu;
class OAITest_getDeviceConfigurations_200_response_inner_model_deviceFrame;
class OAITest_getDeviceConfigurations_200_response_inner_model_dimensions;
class OAITest_getDeviceConfigurations_200_response_inner_model_memory;
class OAITest_getDeviceConfigurations_200_response_inner_model_resolution;
class OAITest_getDeviceConfigurations_200_response_inner_model_screenSize;

class OAIDeviceModel : public OAIObject {
public:
    OAIDeviceModel();
    OAIDeviceModel(QString json);
    ~OAIDeviceModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAvailabilityCount() const;
    void setAvailabilityCount(const double &availability_count);
    bool is_availability_count_Set() const;
    bool is_availability_count_Valid() const;

    OAITest_getDeviceConfigurations_200_response_inner_model_cpu getCpu() const;
    void setCpu(const OAITest_getDeviceConfigurations_200_response_inner_model_cpu &cpu);
    bool is_cpu_Set() const;
    bool is_cpu_Valid() const;

    OAITest_getDeviceConfigurations_200_response_inner_model_deviceFrame getDeviceFrame() const;
    void setDeviceFrame(const OAITest_getDeviceConfigurations_200_response_inner_model_deviceFrame &device_frame);
    bool is_device_frame_Set() const;
    bool is_device_frame_Valid() const;

    OAITest_getDeviceConfigurations_200_response_inner_model_dimensions getDimensions() const;
    void setDimensions(const OAITest_getDeviceConfigurations_200_response_inner_model_dimensions &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    QString getFormFactor() const;
    void setFormFactor(const QString &form_factor);
    bool is_form_factor_Set() const;
    bool is_form_factor_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    OAITest_getDeviceConfigurations_200_response_inner_model_memory getMemory() const;
    void setMemory(const OAITest_getDeviceConfigurations_200_response_inner_model_memory &memory);
    bool is_memory_Set() const;
    bool is_memory_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getReleaseDate() const;
    void setReleaseDate(const QString &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    OAITest_getDeviceConfigurations_200_response_inner_model_resolution getResolution() const;
    void setResolution(const OAITest_getDeviceConfigurations_200_response_inner_model_resolution &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    double getScreenRotation() const;
    void setScreenRotation(const double &screen_rotation);
    bool is_screen_rotation_Set() const;
    bool is_screen_rotation_Valid() const;

    OAITest_getDeviceConfigurations_200_response_inner_model_screenSize getScreenSize() const;
    void setScreenSize(const OAITest_getDeviceConfigurations_200_response_inner_model_screenSize &screen_size);
    bool is_screen_size_Set() const;
    bool is_screen_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_availability_count;
    bool m_availability_count_isSet;
    bool m_availability_count_isValid;

    OAITest_getDeviceConfigurations_200_response_inner_model_cpu m_cpu;
    bool m_cpu_isSet;
    bool m_cpu_isValid;

    OAITest_getDeviceConfigurations_200_response_inner_model_deviceFrame m_device_frame;
    bool m_device_frame_isSet;
    bool m_device_frame_isValid;

    OAITest_getDeviceConfigurations_200_response_inner_model_dimensions m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    QString m_form_factor;
    bool m_form_factor_isSet;
    bool m_form_factor_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    OAITest_getDeviceConfigurations_200_response_inner_model_memory m_memory;
    bool m_memory_isSet;
    bool m_memory_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    OAITest_getDeviceConfigurations_200_response_inner_model_resolution m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;

    double m_screen_rotation;
    bool m_screen_rotation_isSet;
    bool m_screen_rotation_isValid;

    OAITest_getDeviceConfigurations_200_response_inner_model_screenSize m_screen_size;
    bool m_screen_size_isSet;
    bool m_screen_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceModel)

#endif // OAIDeviceModel_H
