/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIErrorFreeDevicePercentages.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIErrorFreeDevicePercentages::OAIErrorFreeDevicePercentages(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIErrorFreeDevicePercentages::OAIErrorFreeDevicePercentages() {
    this->initializeModel();
}

OAIErrorFreeDevicePercentages::~OAIErrorFreeDevicePercentages() {}

void OAIErrorFreeDevicePercentages::initializeModel() {

    m_average_percentage_isSet = false;
    m_average_percentage_isValid = false;

    m_daily_percentages_isSet = false;
    m_daily_percentages_isValid = false;
}

void OAIErrorFreeDevicePercentages::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIErrorFreeDevicePercentages::fromJsonObject(QJsonObject json) {

    m_average_percentage_isValid = ::OpenAPI::fromJsonValue(m_average_percentage, json[QString("averagePercentage")]);
    m_average_percentage_isSet = !json[QString("averagePercentage")].isNull() && m_average_percentage_isValid;

    m_daily_percentages_isValid = ::OpenAPI::fromJsonValue(m_daily_percentages, json[QString("dailyPercentages")]);
    m_daily_percentages_isSet = !json[QString("dailyPercentages")].isNull() && m_daily_percentages_isValid;
}

QString OAIErrorFreeDevicePercentages::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIErrorFreeDevicePercentages::asJsonObject() const {
    QJsonObject obj;
    if (m_average_percentage_isSet) {
        obj.insert(QString("averagePercentage"), ::OpenAPI::toJsonValue(m_average_percentage));
    }
    if (m_daily_percentages.size() > 0) {
        obj.insert(QString("dailyPercentages"), ::OpenAPI::toJsonValue(m_daily_percentages));
    }
    return obj;
}

double OAIErrorFreeDevicePercentages::getAveragePercentage() const {
    return m_average_percentage;
}
void OAIErrorFreeDevicePercentages::setAveragePercentage(const double &average_percentage) {
    m_average_percentage = average_percentage;
    m_average_percentage_isSet = true;
}

bool OAIErrorFreeDevicePercentages::is_average_percentage_Set() const{
    return m_average_percentage_isSet;
}

bool OAIErrorFreeDevicePercentages::is_average_percentage_Valid() const{
    return m_average_percentage_isValid;
}

QList<OAIErrors_GroupErrorFreeDevicePercentages_200_response_dailyPercentages_inner> OAIErrorFreeDevicePercentages::getDailyPercentages() const {
    return m_daily_percentages;
}
void OAIErrorFreeDevicePercentages::setDailyPercentages(const QList<OAIErrors_GroupErrorFreeDevicePercentages_200_response_dailyPercentages_inner> &daily_percentages) {
    m_daily_percentages = daily_percentages;
    m_daily_percentages_isSet = true;
}

bool OAIErrorFreeDevicePercentages::is_daily_percentages_Set() const{
    return m_daily_percentages_isSet;
}

bool OAIErrorFreeDevicePercentages::is_daily_percentages_Valid() const{
    return m_daily_percentages_isValid;
}

bool OAIErrorFreeDevicePercentages::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_daily_percentages.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIErrorFreeDevicePercentages::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
