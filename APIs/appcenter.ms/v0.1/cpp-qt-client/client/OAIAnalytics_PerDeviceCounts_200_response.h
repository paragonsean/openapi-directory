/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalytics_PerDeviceCounts_200_response.h
 *
 * 
 */

#ifndef OAIAnalytics_PerDeviceCounts_200_response_H
#define OAIAnalytics_PerDeviceCounts_200_response_H

#include <QJsonObject>

#include "OAIAnalytics_PerDeviceCounts_200_response_sessions_per_user_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalytics_PerDeviceCounts_200_response_sessions_per_user_inner;

class OAIAnalytics_PerDeviceCounts_200_response : public OAIObject {
public:
    OAIAnalytics_PerDeviceCounts_200_response();
    OAIAnalytics_PerDeviceCounts_200_response(QString json);
    ~OAIAnalytics_PerDeviceCounts_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAverageSessionsPerUser() const;
    void setAverageSessionsPerUser(const double &average_sessions_per_user);
    bool is_average_sessions_per_user_Set() const;
    bool is_average_sessions_per_user_Valid() const;

    double getPreviousAverageSessionsPerUser() const;
    void setPreviousAverageSessionsPerUser(const double &previous_average_sessions_per_user);
    bool is_previous_average_sessions_per_user_Set() const;
    bool is_previous_average_sessions_per_user_Valid() const;

    qint64 getPreviousTotalCount() const;
    void setPreviousTotalCount(const qint64 &previous_total_count);
    bool is_previous_total_count_Set() const;
    bool is_previous_total_count_Valid() const;

    QList<OAIAnalytics_PerDeviceCounts_200_response_sessions_per_user_inner> getSessionsPerUser() const;
    void setSessionsPerUser(const QList<OAIAnalytics_PerDeviceCounts_200_response_sessions_per_user_inner> &sessions_per_user);
    bool is_sessions_per_user_Set() const;
    bool is_sessions_per_user_Valid() const;

    qint64 getTotalCount() const;
    void setTotalCount(const qint64 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_average_sessions_per_user;
    bool m_average_sessions_per_user_isSet;
    bool m_average_sessions_per_user_isValid;

    double m_previous_average_sessions_per_user;
    bool m_previous_average_sessions_per_user_isSet;
    bool m_previous_average_sessions_per_user_isValid;

    qint64 m_previous_total_count;
    bool m_previous_total_count_isSet;
    bool m_previous_total_count_isValid;

    QList<OAIAnalytics_PerDeviceCounts_200_response_sessions_per_user_inner> m_sessions_per_user;
    bool m_sessions_per_user_isSet;
    bool m_sessions_per_user_isValid;

    qint64 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalytics_PerDeviceCounts_200_response)

#endif // OAIAnalytics_PerDeviceCounts_200_response_H
