/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISymbolUploads_list_200_response_inner.h
 *
 * A single symbol upload entity
 */

#ifndef OAISymbolUploads_list_200_response_inner_H
#define OAISymbolUploads_list_200_response_inner_H

#include <QJsonObject>

#include "OAISymbolUploads_list_200_response_inner_symbols_uploaded_inner.h"
#include "OAISymbolUploads_list_200_response_inner_user.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISymbolUploads_list_200_response_inner_symbols_uploaded_inner;
class OAISymbolUploads_list_200_response_inner_user;

class OAISymbolUploads_list_200_response_inner : public OAIObject {
public:
    OAISymbolUploads_list_200_response_inner();
    OAISymbolUploads_list_200_response_inner(QString json);
    ~OAISymbolUploads_list_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getFileName() const;
    void setFileName(const QString &file_name);
    bool is_file_name_Set() const;
    bool is_file_name_Valid() const;

    double getFileSize() const;
    void setFileSize(const double &file_size);
    bool is_file_size_Set() const;
    bool is_file_size_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSymbolType() const;
    void setSymbolType(const QString &symbol_type);
    bool is_symbol_type_Set() const;
    bool is_symbol_type_Valid() const;

    QString getSymbolUploadId() const;
    void setSymbolUploadId(const QString &symbol_upload_id);
    bool is_symbol_upload_id_Set() const;
    bool is_symbol_upload_id_Valid() const;

    QList<OAISymbolUploads_list_200_response_inner_symbols_uploaded_inner> getSymbolsUploaded() const;
    void setSymbolsUploaded(const QList<OAISymbolUploads_list_200_response_inner_symbols_uploaded_inner> &symbols_uploaded);
    bool is_symbols_uploaded_Set() const;
    bool is_symbols_uploaded_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAISymbolUploads_list_200_response_inner_user getUser() const;
    void setUser(const OAISymbolUploads_list_200_response_inner_user &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_file_name;
    bool m_file_name_isSet;
    bool m_file_name_isValid;

    double m_file_size;
    bool m_file_size_isSet;
    bool m_file_size_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_symbol_type;
    bool m_symbol_type_isSet;
    bool m_symbol_type_isValid;

    QString m_symbol_upload_id;
    bool m_symbol_upload_id_isSet;
    bool m_symbol_upload_id_isValid;

    QList<OAISymbolUploads_list_200_response_inner_symbols_uploaded_inner> m_symbols_uploaded;
    bool m_symbols_uploaded_isSet;
    bool m_symbols_uploaded_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAISymbolUploads_list_200_response_inner_user m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISymbolUploads_list_200_response_inner)

#endif // OAISymbolUploads_list_200_response_inner_H
