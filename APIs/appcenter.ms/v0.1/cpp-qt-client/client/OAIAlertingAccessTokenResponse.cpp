/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertingAccessTokenResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertingAccessTokenResponse::OAIAlertingAccessTokenResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertingAccessTokenResponse::OAIAlertingAccessTokenResponse() {
    this->initializeModel();
}

OAIAlertingAccessTokenResponse::~OAIAlertingAccessTokenResponse() {}

void OAIAlertingAccessTokenResponse::initializeModel() {

    m_access_token_id_isSet = false;
    m_access_token_id_isValid = false;

    m_external_account_name_isSet = false;
    m_external_account_name_isValid = false;

    m_external_provider_name_isSet = false;
    m_external_provider_name_isValid = false;

    m_external_user_email_isSet = false;
    m_external_user_email_isValid = false;
}

void OAIAlertingAccessTokenResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertingAccessTokenResponse::fromJsonObject(QJsonObject json) {

    m_access_token_id_isValid = ::OpenAPI::fromJsonValue(m_access_token_id, json[QString("access_token_id")]);
    m_access_token_id_isSet = !json[QString("access_token_id")].isNull() && m_access_token_id_isValid;

    m_external_account_name_isValid = ::OpenAPI::fromJsonValue(m_external_account_name, json[QString("external_account_name")]);
    m_external_account_name_isSet = !json[QString("external_account_name")].isNull() && m_external_account_name_isValid;

    m_external_provider_name_isValid = ::OpenAPI::fromJsonValue(m_external_provider_name, json[QString("external_provider_name")]);
    m_external_provider_name_isSet = !json[QString("external_provider_name")].isNull() && m_external_provider_name_isValid;

    m_external_user_email_isValid = ::OpenAPI::fromJsonValue(m_external_user_email, json[QString("external_user_email")]);
    m_external_user_email_isSet = !json[QString("external_user_email")].isNull() && m_external_user_email_isValid;
}

QString OAIAlertingAccessTokenResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertingAccessTokenResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_access_token_id_isSet) {
        obj.insert(QString("access_token_id"), ::OpenAPI::toJsonValue(m_access_token_id));
    }
    if (m_external_account_name_isSet) {
        obj.insert(QString("external_account_name"), ::OpenAPI::toJsonValue(m_external_account_name));
    }
    if (m_external_provider_name_isSet) {
        obj.insert(QString("external_provider_name"), ::OpenAPI::toJsonValue(m_external_provider_name));
    }
    if (m_external_user_email_isSet) {
        obj.insert(QString("external_user_email"), ::OpenAPI::toJsonValue(m_external_user_email));
    }
    return obj;
}

QString OAIAlertingAccessTokenResponse::getAccessTokenId() const {
    return m_access_token_id;
}
void OAIAlertingAccessTokenResponse::setAccessTokenId(const QString &access_token_id) {
    m_access_token_id = access_token_id;
    m_access_token_id_isSet = true;
}

bool OAIAlertingAccessTokenResponse::is_access_token_id_Set() const{
    return m_access_token_id_isSet;
}

bool OAIAlertingAccessTokenResponse::is_access_token_id_Valid() const{
    return m_access_token_id_isValid;
}

QString OAIAlertingAccessTokenResponse::getExternalAccountName() const {
    return m_external_account_name;
}
void OAIAlertingAccessTokenResponse::setExternalAccountName(const QString &external_account_name) {
    m_external_account_name = external_account_name;
    m_external_account_name_isSet = true;
}

bool OAIAlertingAccessTokenResponse::is_external_account_name_Set() const{
    return m_external_account_name_isSet;
}

bool OAIAlertingAccessTokenResponse::is_external_account_name_Valid() const{
    return m_external_account_name_isValid;
}

QString OAIAlertingAccessTokenResponse::getExternalProviderName() const {
    return m_external_provider_name;
}
void OAIAlertingAccessTokenResponse::setExternalProviderName(const QString &external_provider_name) {
    m_external_provider_name = external_provider_name;
    m_external_provider_name_isSet = true;
}

bool OAIAlertingAccessTokenResponse::is_external_provider_name_Set() const{
    return m_external_provider_name_isSet;
}

bool OAIAlertingAccessTokenResponse::is_external_provider_name_Valid() const{
    return m_external_provider_name_isValid;
}

QString OAIAlertingAccessTokenResponse::getExternalUserEmail() const {
    return m_external_user_email;
}
void OAIAlertingAccessTokenResponse::setExternalUserEmail(const QString &external_user_email) {
    m_external_user_email = external_user_email;
    m_external_user_email_isSet = true;
}

bool OAIAlertingAccessTokenResponse::is_external_user_email_Set() const{
    return m_external_user_email_isSet;
}

bool OAIAlertingAccessTokenResponse::is_external_user_email_Valid() const{
    return m_external_user_email_isValid;
}

bool OAIAlertingAccessTokenResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_token_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_provider_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_user_email_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertingAccessTokenResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_access_token_id_isValid && m_external_account_name_isValid && m_external_provider_name_isValid && m_external_user_email_isValid && true;
}

} // namespace OpenAPI
