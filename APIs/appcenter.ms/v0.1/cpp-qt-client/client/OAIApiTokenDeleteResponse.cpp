/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiTokenDeleteResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiTokenDeleteResponse::OAIApiTokenDeleteResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiTokenDeleteResponse::OAIApiTokenDeleteResponse() {
    this->initializeModel();
}

OAIApiTokenDeleteResponse::~OAIApiTokenDeleteResponse() {}

void OAIApiTokenDeleteResponse::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_token_hash_isSet = false;
    m_token_hash_isValid = false;
}

void OAIApiTokenDeleteResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiTokenDeleteResponse::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_token_hash_isValid = ::OpenAPI::fromJsonValue(m_token_hash, json[QString("token_hash")]);
    m_token_hash_isSet = !json[QString("token_hash")].isNull() && m_token_hash_isValid;
}

QString OAIApiTokenDeleteResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiTokenDeleteResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_token_hash_isSet) {
        obj.insert(QString("token_hash"), ::OpenAPI::toJsonValue(m_token_hash));
    }
    return obj;
}

QString OAIApiTokenDeleteResponse::getId() const {
    return m_id;
}
void OAIApiTokenDeleteResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIApiTokenDeleteResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIApiTokenDeleteResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIApiTokenDeleteResponse::getTokenHash() const {
    return m_token_hash;
}
void OAIApiTokenDeleteResponse::setTokenHash(const QString &token_hash) {
    m_token_hash = token_hash;
    m_token_hash_isSet = true;
}

bool OAIApiTokenDeleteResponse::is_token_hash_Set() const{
    return m_token_hash_isSet;
}

bool OAIApiTokenDeleteResponse::is_token_hash_Valid() const{
    return m_token_hash_isValid;
}

bool OAIApiTokenDeleteResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_hash_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiTokenDeleteResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_token_hash_isValid && true;
}

} // namespace OpenAPI
