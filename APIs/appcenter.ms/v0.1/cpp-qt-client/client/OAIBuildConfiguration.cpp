/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildConfiguration::OAIBuildConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildConfiguration::OAIBuildConfiguration() {
    this->initializeModel();
}

OAIBuildConfiguration::~OAIBuildConfiguration() {}

void OAIBuildConfiguration::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_signing_config_isSet = false;
    m_signing_config_isValid = false;
}

void OAIBuildConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildConfiguration::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_signing_config_isValid = ::OpenAPI::fromJsonValue(m_signing_config, json[QString("signingConfig")]);
    m_signing_config_isSet = !json[QString("signingConfig")].isNull() && m_signing_config_isValid;
}

QString OAIBuildConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_signing_config.isSet()) {
        obj.insert(QString("signingConfig"), ::OpenAPI::toJsonValue(m_signing_config));
    }
    return obj;
}

QString OAIBuildConfiguration::getName() const {
    return m_name;
}
void OAIBuildConfiguration::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBuildConfiguration::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBuildConfiguration::is_name_Valid() const{
    return m_name_isValid;
}

OAIBuilds_listToolsetProjects_200_response_android_androidModules_inner_buildConfigurations_inner_signingConfig OAIBuildConfiguration::getSigningConfig() const {
    return m_signing_config;
}
void OAIBuildConfiguration::setSigningConfig(const OAIBuilds_listToolsetProjects_200_response_android_androidModules_inner_buildConfigurations_inner_signingConfig &signing_config) {
    m_signing_config = signing_config;
    m_signing_config_isSet = true;
}

bool OAIBuildConfiguration::is_signing_config_Set() const{
    return m_signing_config_isSet;
}

bool OAIBuildConfiguration::is_signing_config_Valid() const{
    return m_signing_config_isValid;
}

bool OAIBuildConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_signing_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
