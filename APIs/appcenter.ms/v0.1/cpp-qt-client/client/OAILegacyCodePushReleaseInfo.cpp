/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILegacyCodePushReleaseInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILegacyCodePushReleaseInfo::OAILegacyCodePushReleaseInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILegacyCodePushReleaseInfo::OAILegacyCodePushReleaseInfo() {
    this->initializeModel();
}

OAILegacyCodePushReleaseInfo::~OAILegacyCodePushReleaseInfo() {}

void OAILegacyCodePushReleaseInfo::initializeModel() {

    m_app_version_isSet = false;
    m_app_version_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_is_disabled_isSet = false;
    m_is_disabled_isValid = false;

    m_is_mandatory_isSet = false;
    m_is_mandatory_isValid = false;

    m_rollout_isSet = false;
    m_rollout_isValid = false;
}

void OAILegacyCodePushReleaseInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILegacyCodePushReleaseInfo::fromJsonObject(QJsonObject json) {

    m_app_version_isValid = ::OpenAPI::fromJsonValue(m_app_version, json[QString("appVersion")]);
    m_app_version_isSet = !json[QString("appVersion")].isNull() && m_app_version_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_is_disabled_isValid = ::OpenAPI::fromJsonValue(m_is_disabled, json[QString("isDisabled")]);
    m_is_disabled_isSet = !json[QString("isDisabled")].isNull() && m_is_disabled_isValid;

    m_is_mandatory_isValid = ::OpenAPI::fromJsonValue(m_is_mandatory, json[QString("isMandatory")]);
    m_is_mandatory_isSet = !json[QString("isMandatory")].isNull() && m_is_mandatory_isValid;

    m_rollout_isValid = ::OpenAPI::fromJsonValue(m_rollout, json[QString("rollout")]);
    m_rollout_isSet = !json[QString("rollout")].isNull() && m_rollout_isValid;
}

QString OAILegacyCodePushReleaseInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILegacyCodePushReleaseInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_app_version_isSet) {
        obj.insert(QString("appVersion"), ::OpenAPI::toJsonValue(m_app_version));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_is_disabled_isSet) {
        obj.insert(QString("isDisabled"), ::OpenAPI::toJsonValue(m_is_disabled));
    }
    if (m_is_mandatory_isSet) {
        obj.insert(QString("isMandatory"), ::OpenAPI::toJsonValue(m_is_mandatory));
    }
    if (m_rollout_isSet) {
        obj.insert(QString("rollout"), ::OpenAPI::toJsonValue(m_rollout));
    }
    return obj;
}

QString OAILegacyCodePushReleaseInfo::getAppVersion() const {
    return m_app_version;
}
void OAILegacyCodePushReleaseInfo::setAppVersion(const QString &app_version) {
    m_app_version = app_version;
    m_app_version_isSet = true;
}

bool OAILegacyCodePushReleaseInfo::is_app_version_Set() const{
    return m_app_version_isSet;
}

bool OAILegacyCodePushReleaseInfo::is_app_version_Valid() const{
    return m_app_version_isValid;
}

QString OAILegacyCodePushReleaseInfo::getDescription() const {
    return m_description;
}
void OAILegacyCodePushReleaseInfo::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAILegacyCodePushReleaseInfo::is_description_Set() const{
    return m_description_isSet;
}

bool OAILegacyCodePushReleaseInfo::is_description_Valid() const{
    return m_description_isValid;
}

bool OAILegacyCodePushReleaseInfo::isIsDisabled() const {
    return m_is_disabled;
}
void OAILegacyCodePushReleaseInfo::setIsDisabled(const bool &is_disabled) {
    m_is_disabled = is_disabled;
    m_is_disabled_isSet = true;
}

bool OAILegacyCodePushReleaseInfo::is_is_disabled_Set() const{
    return m_is_disabled_isSet;
}

bool OAILegacyCodePushReleaseInfo::is_is_disabled_Valid() const{
    return m_is_disabled_isValid;
}

bool OAILegacyCodePushReleaseInfo::isIsMandatory() const {
    return m_is_mandatory;
}
void OAILegacyCodePushReleaseInfo::setIsMandatory(const bool &is_mandatory) {
    m_is_mandatory = is_mandatory;
    m_is_mandatory_isSet = true;
}

bool OAILegacyCodePushReleaseInfo::is_is_mandatory_Set() const{
    return m_is_mandatory_isSet;
}

bool OAILegacyCodePushReleaseInfo::is_is_mandatory_Valid() const{
    return m_is_mandatory_isValid;
}

qint32 OAILegacyCodePushReleaseInfo::getRollout() const {
    return m_rollout;
}
void OAILegacyCodePushReleaseInfo::setRollout(const qint32 &rollout) {
    m_rollout = rollout;
    m_rollout_isSet = true;
}

bool OAILegacyCodePushReleaseInfo::is_rollout_Set() const{
    return m_rollout_isSet;
}

bool OAILegacyCodePushReleaseInfo::is_rollout_Valid() const{
    return m_rollout_isValid;
}

bool OAILegacyCodePushReleaseInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_mandatory_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollout_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILegacyCodePushReleaseInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
