/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceBillingPlans.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceBillingPlans::OAIServiceBillingPlans(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceBillingPlans::OAIServiceBillingPlans() {
    this->initializeModel();
}

OAIServiceBillingPlans::~OAIServiceBillingPlans() {}

void OAIServiceBillingPlans::initializeModel() {

    m_can_select_trial_plan_isSet = false;
    m_can_select_trial_plan_isValid = false;

    m_current_billing_period_isSet = false;
    m_current_billing_period_isValid = false;

    m_last_trial_plan_expiration_time_isSet = false;
    m_last_trial_plan_expiration_time_isValid = false;
}

void OAIServiceBillingPlans::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceBillingPlans::fromJsonObject(QJsonObject json) {

    m_can_select_trial_plan_isValid = ::OpenAPI::fromJsonValue(m_can_select_trial_plan, json[QString("canSelectTrialPlan")]);
    m_can_select_trial_plan_isSet = !json[QString("canSelectTrialPlan")].isNull() && m_can_select_trial_plan_isValid;

    m_current_billing_period_isValid = ::OpenAPI::fromJsonValue(m_current_billing_period, json[QString("currentBillingPeriod")]);
    m_current_billing_period_isSet = !json[QString("currentBillingPeriod")].isNull() && m_current_billing_period_isValid;

    m_last_trial_plan_expiration_time_isValid = ::OpenAPI::fromJsonValue(m_last_trial_plan_expiration_time, json[QString("lastTrialPlanExpirationTime")]);
    m_last_trial_plan_expiration_time_isSet = !json[QString("lastTrialPlanExpirationTime")].isNull() && m_last_trial_plan_expiration_time_isValid;
}

QString OAIServiceBillingPlans::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceBillingPlans::asJsonObject() const {
    QJsonObject obj;
    if (m_can_select_trial_plan_isSet) {
        obj.insert(QString("canSelectTrialPlan"), ::OpenAPI::toJsonValue(m_can_select_trial_plan));
    }
    if (m_current_billing_period.isSet()) {
        obj.insert(QString("currentBillingPeriod"), ::OpenAPI::toJsonValue(m_current_billing_period));
    }
    if (m_last_trial_plan_expiration_time_isSet) {
        obj.insert(QString("lastTrialPlanExpirationTime"), ::OpenAPI::toJsonValue(m_last_trial_plan_expiration_time));
    }
    return obj;
}

bool OAIServiceBillingPlans::isCanSelectTrialPlan() const {
    return m_can_select_trial_plan;
}
void OAIServiceBillingPlans::setCanSelectTrialPlan(const bool &can_select_trial_plan) {
    m_can_select_trial_plan = can_select_trial_plan;
    m_can_select_trial_plan_isSet = true;
}

bool OAIServiceBillingPlans::is_can_select_trial_plan_Set() const{
    return m_can_select_trial_plan_isSet;
}

bool OAIServiceBillingPlans::is_can_select_trial_plan_Valid() const{
    return m_can_select_trial_plan_isValid;
}

OAIBillingAggregatedInformation_getByApp_200_response_billingPlans_buildService_currentBillingPeriod OAIServiceBillingPlans::getCurrentBillingPeriod() const {
    return m_current_billing_period;
}
void OAIServiceBillingPlans::setCurrentBillingPeriod(const OAIBillingAggregatedInformation_getByApp_200_response_billingPlans_buildService_currentBillingPeriod &current_billing_period) {
    m_current_billing_period = current_billing_period;
    m_current_billing_period_isSet = true;
}

bool OAIServiceBillingPlans::is_current_billing_period_Set() const{
    return m_current_billing_period_isSet;
}

bool OAIServiceBillingPlans::is_current_billing_period_Valid() const{
    return m_current_billing_period_isValid;
}

QString OAIServiceBillingPlans::getLastTrialPlanExpirationTime() const {
    return m_last_trial_plan_expiration_time;
}
void OAIServiceBillingPlans::setLastTrialPlanExpirationTime(const QString &last_trial_plan_expiration_time) {
    m_last_trial_plan_expiration_time = last_trial_plan_expiration_time;
    m_last_trial_plan_expiration_time_isSet = true;
}

bool OAIServiceBillingPlans::is_last_trial_plan_expiration_time_Set() const{
    return m_last_trial_plan_expiration_time_isSet;
}

bool OAIServiceBillingPlans::is_last_trial_plan_expiration_time_Valid() const{
    return m_last_trial_plan_expiration_time_isValid;
}

bool OAIServiceBillingPlans::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_select_trial_plan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_billing_period.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trial_plan_expiration_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceBillingPlans::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
