/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResignAttemptResponse.h
 *
 * URL that can be used to check the status of the update devices operation and the updated profiles.
 */

#ifndef OAIResignAttemptResponse_H
#define OAIResignAttemptResponse_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResignAttemptResponse : public OAIObject {
public:
    OAIResignAttemptResponse();
    OAIResignAttemptResponse(QString json);
    ~OAIResignAttemptResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getContextId() const;
    void setContextId(const QString &context_id);
    bool is_context_id_Set() const;
    bool is_context_id_Valid() const;

    QList<OAIObject> getDestinations() const;
    void setDestinations(const QList<OAIObject> &destinations);
    bool is_destinations_Set() const;
    bool is_destinations_Valid() const;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    double getOriginalReleaseId() const;
    void setOriginalReleaseId(const double &original_release_id);
    bool is_original_release_id_Set() const;
    bool is_original_release_id_Valid() const;

    QString getResignId() const;
    void setResignId(const QString &resign_id);
    bool is_resign_id_Set() const;
    bool is_resign_id_Valid() const;

    double getStartTime() const;
    void setStartTime(const double &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_context_id;
    bool m_context_id_isSet;
    bool m_context_id_isValid;

    QList<OAIObject> m_destinations;
    bool m_destinations_isSet;
    bool m_destinations_isValid;

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    double m_original_release_id;
    bool m_original_release_id_isSet;
    bool m_original_release_id_isValid;

    QString m_resign_id;
    bool m_resign_id_isSet;
    bool m_resign_id_isValid;

    double m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResignAttemptResponse)

#endif // OAIResignAttemptResponse_H
