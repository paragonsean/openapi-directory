/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBasicReleaseDetailsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBasicReleaseDetailsResponse::OAIBasicReleaseDetailsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBasicReleaseDetailsResponse::OAIBasicReleaseDetailsResponse() {
    this->initializeModel();
}

OAIBasicReleaseDetailsResponse::~OAIBasicReleaseDetailsResponse() {}

void OAIBasicReleaseDetailsResponse::initializeModel() {

    m_build_isSet = false;
    m_build_isValid = false;

    m_destination_type_isSet = false;
    m_destination_type_isValid = false;

    m_destinations_isSet = false;
    m_destinations_isValid = false;

    m_distribution_groups_isSet = false;
    m_distribution_groups_isValid = false;

    m_distribution_stores_isSet = false;
    m_distribution_stores_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_file_extension_isSet = false;
    m_file_extension_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_external_build_isSet = false;
    m_is_external_build_isValid = false;

    m_origin_isSet = false;
    m_origin_isValid = false;

    m_short_version_isSet = false;
    m_short_version_isValid = false;

    m_uploaded_at_isSet = false;
    m_uploaded_at_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIBasicReleaseDetailsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBasicReleaseDetailsResponse::fromJsonObject(QJsonObject json) {

    m_build_isValid = ::OpenAPI::fromJsonValue(m_build, json[QString("build")]);
    m_build_isSet = !json[QString("build")].isNull() && m_build_isValid;

    m_destination_type_isValid = ::OpenAPI::fromJsonValue(m_destination_type, json[QString("destination_type")]);
    m_destination_type_isSet = !json[QString("destination_type")].isNull() && m_destination_type_isValid;

    m_destinations_isValid = ::OpenAPI::fromJsonValue(m_destinations, json[QString("destinations")]);
    m_destinations_isSet = !json[QString("destinations")].isNull() && m_destinations_isValid;

    m_distribution_groups_isValid = ::OpenAPI::fromJsonValue(m_distribution_groups, json[QString("distribution_groups")]);
    m_distribution_groups_isSet = !json[QString("distribution_groups")].isNull() && m_distribution_groups_isValid;

    m_distribution_stores_isValid = ::OpenAPI::fromJsonValue(m_distribution_stores, json[QString("distribution_stores")]);
    m_distribution_stores_isSet = !json[QString("distribution_stores")].isNull() && m_distribution_stores_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_file_extension_isValid = ::OpenAPI::fromJsonValue(m_file_extension, json[QString("file_extension")]);
    m_file_extension_isSet = !json[QString("file_extension")].isNull() && m_file_extension_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_external_build_isValid = ::OpenAPI::fromJsonValue(m_is_external_build, json[QString("is_external_build")]);
    m_is_external_build_isSet = !json[QString("is_external_build")].isNull() && m_is_external_build_isValid;

    m_origin_isValid = ::OpenAPI::fromJsonValue(m_origin, json[QString("origin")]);
    m_origin_isSet = !json[QString("origin")].isNull() && m_origin_isValid;

    m_short_version_isValid = ::OpenAPI::fromJsonValue(m_short_version, json[QString("short_version")]);
    m_short_version_isSet = !json[QString("short_version")].isNull() && m_short_version_isValid;

    m_uploaded_at_isValid = ::OpenAPI::fromJsonValue(m_uploaded_at, json[QString("uploaded_at")]);
    m_uploaded_at_isSet = !json[QString("uploaded_at")].isNull() && m_uploaded_at_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIBasicReleaseDetailsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBasicReleaseDetailsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_build.isSet()) {
        obj.insert(QString("build"), ::OpenAPI::toJsonValue(m_build));
    }
    if (m_destination_type_isSet) {
        obj.insert(QString("destination_type"), ::OpenAPI::toJsonValue(m_destination_type));
    }
    if (m_destinations.size() > 0) {
        obj.insert(QString("destinations"), ::OpenAPI::toJsonValue(m_destinations));
    }
    if (m_distribution_groups.size() > 0) {
        obj.insert(QString("distribution_groups"), ::OpenAPI::toJsonValue(m_distribution_groups));
    }
    if (m_distribution_stores.size() > 0) {
        obj.insert(QString("distribution_stores"), ::OpenAPI::toJsonValue(m_distribution_stores));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_file_extension_isSet) {
        obj.insert(QString("file_extension"), ::OpenAPI::toJsonValue(m_file_extension));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_external_build_isSet) {
        obj.insert(QString("is_external_build"), ::OpenAPI::toJsonValue(m_is_external_build));
    }
    if (m_origin_isSet) {
        obj.insert(QString("origin"), ::OpenAPI::toJsonValue(m_origin));
    }
    if (m_short_version_isSet) {
        obj.insert(QString("short_version"), ::OpenAPI::toJsonValue(m_short_version));
    }
    if (m_uploaded_at_isSet) {
        obj.insert(QString("uploaded_at"), ::OpenAPI::toJsonValue(m_uploaded_at));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

OAIReleases_listLatest_200_response_inner_build OAIBasicReleaseDetailsResponse::getBuild() const {
    return m_build;
}
void OAIBasicReleaseDetailsResponse::setBuild(const OAIReleases_listLatest_200_response_inner_build &build) {
    m_build = build;
    m_build_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_build_Set() const{
    return m_build_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_build_Valid() const{
    return m_build_isValid;
}

QString OAIBasicReleaseDetailsResponse::getDestinationType() const {
    return m_destination_type;
}
void OAIBasicReleaseDetailsResponse::setDestinationType(const QString &destination_type) {
    m_destination_type = destination_type;
    m_destination_type_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_destination_type_Set() const{
    return m_destination_type_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_destination_type_Valid() const{
    return m_destination_type_isValid;
}

QList<OAIReleases_getLatestByDistributionGroup_200_response_destinations_inner> OAIBasicReleaseDetailsResponse::getDestinations() const {
    return m_destinations;
}
void OAIBasicReleaseDetailsResponse::setDestinations(const QList<OAIReleases_getLatestByDistributionGroup_200_response_destinations_inner> &destinations) {
    m_destinations = destinations;
    m_destinations_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_destinations_Set() const{
    return m_destinations_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_destinations_Valid() const{
    return m_destinations_isValid;
}

QList<OAIReleases_listLatest_200_response_inner_distribution_groups_inner> OAIBasicReleaseDetailsResponse::getDistributionGroups() const {
    return m_distribution_groups;
}
void OAIBasicReleaseDetailsResponse::setDistributionGroups(const QList<OAIReleases_listLatest_200_response_inner_distribution_groups_inner> &distribution_groups) {
    m_distribution_groups = distribution_groups;
    m_distribution_groups_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_distribution_groups_Set() const{
    return m_distribution_groups_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_distribution_groups_Valid() const{
    return m_distribution_groups_isValid;
}

QList<OAIReleases_listLatest_200_response_inner_distribution_stores_inner> OAIBasicReleaseDetailsResponse::getDistributionStores() const {
    return m_distribution_stores;
}
void OAIBasicReleaseDetailsResponse::setDistributionStores(const QList<OAIReleases_listLatest_200_response_inner_distribution_stores_inner> &distribution_stores) {
    m_distribution_stores = distribution_stores;
    m_distribution_stores_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_distribution_stores_Set() const{
    return m_distribution_stores_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_distribution_stores_Valid() const{
    return m_distribution_stores_isValid;
}

bool OAIBasicReleaseDetailsResponse::isEnabled() const {
    return m_enabled;
}
void OAIBasicReleaseDetailsResponse::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIBasicReleaseDetailsResponse::getFileExtension() const {
    return m_file_extension;
}
void OAIBasicReleaseDetailsResponse::setFileExtension(const QString &file_extension) {
    m_file_extension = file_extension;
    m_file_extension_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_file_extension_Set() const{
    return m_file_extension_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_file_extension_Valid() const{
    return m_file_extension_isValid;
}

qint32 OAIBasicReleaseDetailsResponse::getId() const {
    return m_id;
}
void OAIBasicReleaseDetailsResponse::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIBasicReleaseDetailsResponse::isIsExternalBuild() const {
    return m_is_external_build;
}
void OAIBasicReleaseDetailsResponse::setIsExternalBuild(const bool &is_external_build) {
    m_is_external_build = is_external_build;
    m_is_external_build_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_is_external_build_Set() const{
    return m_is_external_build_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_is_external_build_Valid() const{
    return m_is_external_build_isValid;
}

QString OAIBasicReleaseDetailsResponse::getOrigin() const {
    return m_origin;
}
void OAIBasicReleaseDetailsResponse::setOrigin(const QString &origin) {
    m_origin = origin;
    m_origin_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_origin_Set() const{
    return m_origin_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_origin_Valid() const{
    return m_origin_isValid;
}

QString OAIBasicReleaseDetailsResponse::getShortVersion() const {
    return m_short_version;
}
void OAIBasicReleaseDetailsResponse::setShortVersion(const QString &short_version) {
    m_short_version = short_version;
    m_short_version_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_short_version_Set() const{
    return m_short_version_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_short_version_Valid() const{
    return m_short_version_isValid;
}

QString OAIBasicReleaseDetailsResponse::getUploadedAt() const {
    return m_uploaded_at;
}
void OAIBasicReleaseDetailsResponse::setUploadedAt(const QString &uploaded_at) {
    m_uploaded_at = uploaded_at;
    m_uploaded_at_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_uploaded_at_Set() const{
    return m_uploaded_at_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_uploaded_at_Valid() const{
    return m_uploaded_at_isValid;
}

QString OAIBasicReleaseDetailsResponse::getVersion() const {
    return m_version;
}
void OAIBasicReleaseDetailsResponse::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIBasicReleaseDetailsResponse::is_version_Set() const{
    return m_version_isSet;
}

bool OAIBasicReleaseDetailsResponse::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIBasicReleaseDetailsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destinations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_distribution_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_distribution_stores.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_extension_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_external_build_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uploaded_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBasicReleaseDetailsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && m_id_isValid && m_short_version_isValid && m_uploaded_at_isValid && m_version_isValid && true;
}

} // namespace OpenAPI
