/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppMembershipsValidationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppMembershipsValidationResponse::OAIAppMembershipsValidationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppMembershipsValidationResponse::OAIAppMembershipsValidationResponse() {
    this->initializeModel();
}

OAIAppMembershipsValidationResponse::~OAIAppMembershipsValidationResponse() {}

void OAIAppMembershipsValidationResponse::initializeModel() {

    m_app_users_with_missing_memberships_isSet = false;
    m_app_users_with_missing_memberships_isValid = false;

    m_distribution_group_users_with_missing_memberships_isSet = false;
    m_distribution_group_users_with_missing_memberships_isValid = false;

    m_excess_app_memberships_isSet = false;
    m_excess_app_memberships_isValid = false;

    m_organization_admins_with_missing_memberships_isSet = false;
    m_organization_admins_with_missing_memberships_isValid = false;
}

void OAIAppMembershipsValidationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppMembershipsValidationResponse::fromJsonObject(QJsonObject json) {

    m_app_users_with_missing_memberships_isValid = ::OpenAPI::fromJsonValue(m_app_users_with_missing_memberships, json[QString("app_users_with_missing_memberships")]);
    m_app_users_with_missing_memberships_isSet = !json[QString("app_users_with_missing_memberships")].isNull() && m_app_users_with_missing_memberships_isValid;

    m_distribution_group_users_with_missing_memberships_isValid = ::OpenAPI::fromJsonValue(m_distribution_group_users_with_missing_memberships, json[QString("distribution_group_users_with_missing_memberships")]);
    m_distribution_group_users_with_missing_memberships_isSet = !json[QString("distribution_group_users_with_missing_memberships")].isNull() && m_distribution_group_users_with_missing_memberships_isValid;

    m_excess_app_memberships_isValid = ::OpenAPI::fromJsonValue(m_excess_app_memberships, json[QString("excess_app_memberships")]);
    m_excess_app_memberships_isSet = !json[QString("excess_app_memberships")].isNull() && m_excess_app_memberships_isValid;

    m_organization_admins_with_missing_memberships_isValid = ::OpenAPI::fromJsonValue(m_organization_admins_with_missing_memberships, json[QString("organization_admins_with_missing_memberships")]);
    m_organization_admins_with_missing_memberships_isSet = !json[QString("organization_admins_with_missing_memberships")].isNull() && m_organization_admins_with_missing_memberships_isValid;
}

QString OAIAppMembershipsValidationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppMembershipsValidationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_users_with_missing_memberships.size() > 0) {
        obj.insert(QString("app_users_with_missing_memberships"), ::OpenAPI::toJsonValue(m_app_users_with_missing_memberships));
    }
    if (m_distribution_group_users_with_missing_memberships.size() > 0) {
        obj.insert(QString("distribution_group_users_with_missing_memberships"), ::OpenAPI::toJsonValue(m_distribution_group_users_with_missing_memberships));
    }
    if (m_excess_app_memberships.isSet()) {
        obj.insert(QString("excess_app_memberships"), ::OpenAPI::toJsonValue(m_excess_app_memberships));
    }
    if (m_organization_admins_with_missing_memberships.size() > 0) {
        obj.insert(QString("organization_admins_with_missing_memberships"), ::OpenAPI::toJsonValue(m_organization_admins_with_missing_memberships));
    }
    return obj;
}

QList<OAIAppMembershipsValidationResponse_app_users_with_missing_memberships_inner> OAIAppMembershipsValidationResponse::getAppUsersWithMissingMemberships() const {
    return m_app_users_with_missing_memberships;
}
void OAIAppMembershipsValidationResponse::setAppUsersWithMissingMemberships(const QList<OAIAppMembershipsValidationResponse_app_users_with_missing_memberships_inner> &app_users_with_missing_memberships) {
    m_app_users_with_missing_memberships = app_users_with_missing_memberships;
    m_app_users_with_missing_memberships_isSet = true;
}

bool OAIAppMembershipsValidationResponse::is_app_users_with_missing_memberships_Set() const{
    return m_app_users_with_missing_memberships_isSet;
}

bool OAIAppMembershipsValidationResponse::is_app_users_with_missing_memberships_Valid() const{
    return m_app_users_with_missing_memberships_isValid;
}

QList<OAIAppMembershipsValidationResponse_distribution_group_users_with_missing_memberships_inner> OAIAppMembershipsValidationResponse::getDistributionGroupUsersWithMissingMemberships() const {
    return m_distribution_group_users_with_missing_memberships;
}
void OAIAppMembershipsValidationResponse::setDistributionGroupUsersWithMissingMemberships(const QList<OAIAppMembershipsValidationResponse_distribution_group_users_with_missing_memberships_inner> &distribution_group_users_with_missing_memberships) {
    m_distribution_group_users_with_missing_memberships = distribution_group_users_with_missing_memberships;
    m_distribution_group_users_with_missing_memberships_isSet = true;
}

bool OAIAppMembershipsValidationResponse::is_distribution_group_users_with_missing_memberships_Set() const{
    return m_distribution_group_users_with_missing_memberships_isSet;
}

bool OAIAppMembershipsValidationResponse::is_distribution_group_users_with_missing_memberships_Valid() const{
    return m_distribution_group_users_with_missing_memberships_isValid;
}

OAIAppMembershipsValidationResponse_excess_app_memberships OAIAppMembershipsValidationResponse::getExcessAppMemberships() const {
    return m_excess_app_memberships;
}
void OAIAppMembershipsValidationResponse::setExcessAppMemberships(const OAIAppMembershipsValidationResponse_excess_app_memberships &excess_app_memberships) {
    m_excess_app_memberships = excess_app_memberships;
    m_excess_app_memberships_isSet = true;
}

bool OAIAppMembershipsValidationResponse::is_excess_app_memberships_Set() const{
    return m_excess_app_memberships_isSet;
}

bool OAIAppMembershipsValidationResponse::is_excess_app_memberships_Valid() const{
    return m_excess_app_memberships_isValid;
}

QList<OAIAppMembershipsValidationResponse_organization_admins_with_missing_memberships_inner> OAIAppMembershipsValidationResponse::getOrganizationAdminsWithMissingMemberships() const {
    return m_organization_admins_with_missing_memberships;
}
void OAIAppMembershipsValidationResponse::setOrganizationAdminsWithMissingMemberships(const QList<OAIAppMembershipsValidationResponse_organization_admins_with_missing_memberships_inner> &organization_admins_with_missing_memberships) {
    m_organization_admins_with_missing_memberships = organization_admins_with_missing_memberships;
    m_organization_admins_with_missing_memberships_isSet = true;
}

bool OAIAppMembershipsValidationResponse::is_organization_admins_with_missing_memberships_Set() const{
    return m_organization_admins_with_missing_memberships_isSet;
}

bool OAIAppMembershipsValidationResponse::is_organization_admins_with_missing_memberships_Valid() const{
    return m_organization_admins_with_missing_memberships_isValid;
}

bool OAIAppMembershipsValidationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_users_with_missing_memberships.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_distribution_group_users_with_missing_memberships.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_excess_app_memberships.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_admins_with_missing_memberships.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppMembershipsValidationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
