/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErrors_GroupDetails_200_response.h
 *
 * 
 */

#ifndef OAIErrors_GroupDetails_200_response_H
#define OAIErrors_GroupDetails_200_response_H

#include <QJsonObject>

#include "OAIErrors_GroupList_200_response_errorGroups_inner_allOf_reasonFrames_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrors_GroupList_200_response_errorGroups_inner_allOf_reasonFrames_inner;

class OAIErrors_GroupDetails_200_response : public OAIObject {
public:
    OAIErrors_GroupDetails_200_response();
    OAIErrors_GroupDetails_200_response(QString json);
    ~OAIErrors_GroupDetails_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppBuild() const;
    void setAppBuild(const QString &app_build);
    bool is_app_build_Set() const;
    bool is_app_build_Valid() const;

    QString getAppVersion() const;
    void setAppVersion(const QString &app_version);
    bool is_app_version_Set() const;
    bool is_app_version_Valid() const;

    QString getCodeRaw() const;
    void setCodeRaw(const QString &code_raw);
    bool is_code_raw_Set() const;
    bool is_code_raw_Valid() const;

    qint64 getCount() const;
    void setCount(const qint64 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint64 getDeviceCount() const;
    void setDeviceCount(const qint64 &device_count);
    bool is_device_count_Set() const;
    bool is_device_count_Valid() const;

    QString getErrorGroupId() const;
    void setErrorGroupId(const QString &error_group_id);
    bool is_error_group_id_Set() const;
    bool is_error_group_id_Valid() const;

    bool isExceptionAppCode() const;
    void setExceptionAppCode(const bool &exception_app_code);
    bool is_exception_app_code_Set() const;
    bool is_exception_app_code_Valid() const;

    bool isExceptionClassMethod() const;
    void setExceptionClassMethod(const bool &exception_class_method);
    bool is_exception_class_method_Set() const;
    bool is_exception_class_method_Valid() const;

    QString getExceptionClassName() const;
    void setExceptionClassName(const QString &exception_class_name);
    bool is_exception_class_name_Set() const;
    bool is_exception_class_name_Valid() const;

    QString getExceptionFile() const;
    void setExceptionFile(const QString &exception_file);
    bool is_exception_file_Set() const;
    bool is_exception_file_Valid() const;

    QString getExceptionLine() const;
    void setExceptionLine(const QString &exception_line);
    bool is_exception_line_Set() const;
    bool is_exception_line_Valid() const;

    QString getExceptionMessage() const;
    void setExceptionMessage(const QString &exception_message);
    bool is_exception_message_Set() const;
    bool is_exception_message_Valid() const;

    QString getExceptionMethod() const;
    void setExceptionMethod(const QString &exception_method);
    bool is_exception_method_Set() const;
    bool is_exception_method_Valid() const;

    QString getExceptionType() const;
    void setExceptionType(const QString &exception_type);
    bool is_exception_type_Set() const;
    bool is_exception_type_Valid() const;

    QDateTime getFirstOccurrence() const;
    void setFirstOccurrence(const QDateTime &first_occurrence);
    bool is_first_occurrence_Set() const;
    bool is_first_occurrence_Valid() const;

    bool isHidden() const;
    void setHidden(const bool &hidden);
    bool is_hidden_Set() const;
    bool is_hidden_Valid() const;

    QDateTime getLastOccurrence() const;
    void setLastOccurrence(const QDateTime &last_occurrence);
    bool is_last_occurrence_Set() const;
    bool is_last_occurrence_Valid() const;

    QList<OAIErrors_GroupList_200_response_errorGroups_inner_allOf_reasonFrames_inner> getReasonFrames() const;
    void setReasonFrames(const QList<OAIErrors_GroupList_200_response_errorGroups_inner_allOf_reasonFrames_inner> &reason_frames);
    bool is_reason_frames_Set() const;
    bool is_reason_frames_Valid() const;

    QString getAnnotation() const;
    void setAnnotation(const QString &annotation);
    bool is_annotation_Set() const;
    bool is_annotation_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_build;
    bool m_app_build_isSet;
    bool m_app_build_isValid;

    QString m_app_version;
    bool m_app_version_isSet;
    bool m_app_version_isValid;

    QString m_code_raw;
    bool m_code_raw_isSet;
    bool m_code_raw_isValid;

    qint64 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint64 m_device_count;
    bool m_device_count_isSet;
    bool m_device_count_isValid;

    QString m_error_group_id;
    bool m_error_group_id_isSet;
    bool m_error_group_id_isValid;

    bool m_exception_app_code;
    bool m_exception_app_code_isSet;
    bool m_exception_app_code_isValid;

    bool m_exception_class_method;
    bool m_exception_class_method_isSet;
    bool m_exception_class_method_isValid;

    QString m_exception_class_name;
    bool m_exception_class_name_isSet;
    bool m_exception_class_name_isValid;

    QString m_exception_file;
    bool m_exception_file_isSet;
    bool m_exception_file_isValid;

    QString m_exception_line;
    bool m_exception_line_isSet;
    bool m_exception_line_isValid;

    QString m_exception_message;
    bool m_exception_message_isSet;
    bool m_exception_message_isValid;

    QString m_exception_method;
    bool m_exception_method_isSet;
    bool m_exception_method_isValid;

    QString m_exception_type;
    bool m_exception_type_isSet;
    bool m_exception_type_isValid;

    QDateTime m_first_occurrence;
    bool m_first_occurrence_isSet;
    bool m_first_occurrence_isValid;

    bool m_hidden;
    bool m_hidden_isSet;
    bool m_hidden_isValid;

    QDateTime m_last_occurrence;
    bool m_last_occurrence_isSet;
    bool m_last_occurrence_isValid;

    QList<OAIErrors_GroupList_200_response_errorGroups_inner_allOf_reasonFrames_inner> m_reason_frames;
    bool m_reason_frames_isSet;
    bool m_reason_frames_isValid;

    QString m_annotation;
    bool m_annotation_isSet;
    bool m_annotation_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErrors_GroupDetails_200_response)

#endif // OAIErrors_GroupDetails_200_response_H
