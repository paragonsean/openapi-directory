/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICrashingAppDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICrashingAppDetail::OAICrashingAppDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICrashingAppDetail::OAICrashingAppDetail() {
    this->initializeModel();
}

OAICrashingAppDetail::~OAICrashingAppDetail() {}

void OAICrashingAppDetail::initializeModel() {

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_app_version_isSet = false;
    m_app_version_isValid = false;

    m_crash_group_id_isSet = false;
    m_crash_group_id_isValid = false;
}

void OAICrashingAppDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICrashingAppDetail::fromJsonObject(QJsonObject json) {

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_app_version_isValid = ::OpenAPI::fromJsonValue(m_app_version, json[QString("appVersion")]);
    m_app_version_isSet = !json[QString("appVersion")].isNull() && m_app_version_isValid;

    m_crash_group_id_isValid = ::OpenAPI::fromJsonValue(m_crash_group_id, json[QString("crashGroupId")]);
    m_crash_group_id_isSet = !json[QString("crashGroupId")].isNull() && m_crash_group_id_isValid;
}

QString OAICrashingAppDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICrashingAppDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_app_version_isSet) {
        obj.insert(QString("appVersion"), ::OpenAPI::toJsonValue(m_app_version));
    }
    if (m_crash_group_id_isSet) {
        obj.insert(QString("crashGroupId"), ::OpenAPI::toJsonValue(m_crash_group_id));
    }
    return obj;
}

QString OAICrashingAppDetail::getAppId() const {
    return m_app_id;
}
void OAICrashingAppDetail::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAICrashingAppDetail::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAICrashingAppDetail::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAICrashingAppDetail::getAppVersion() const {
    return m_app_version;
}
void OAICrashingAppDetail::setAppVersion(const QString &app_version) {
    m_app_version = app_version;
    m_app_version_isSet = true;
}

bool OAICrashingAppDetail::is_app_version_Set() const{
    return m_app_version_isSet;
}

bool OAICrashingAppDetail::is_app_version_Valid() const{
    return m_app_version_isValid;
}

QString OAICrashingAppDetail::getCrashGroupId() const {
    return m_crash_group_id;
}
void OAICrashingAppDetail::setCrashGroupId(const QString &crash_group_id) {
    m_crash_group_id = crash_group_id;
    m_crash_group_id_isSet = true;
}

bool OAICrashingAppDetail::is_crash_group_id_Set() const{
    return m_crash_group_id_isSet;
}

bool OAICrashingAppDetail::is_crash_group_id_Valid() const{
    return m_crash_group_id_isValid;
}

bool OAICrashingAppDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crash_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICrashingAppDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
