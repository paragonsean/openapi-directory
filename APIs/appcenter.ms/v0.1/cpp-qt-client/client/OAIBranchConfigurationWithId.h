/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBranchConfigurationWithId.h
 *
 * 
 */

#ifndef OAIBranchConfigurationWithId_H
#define OAIBranchConfigurationWithId_H

#include <QJsonObject>

#include "OAIBranchConfigurations_get_200_response_allOf_artifactVersioning.h"
#include "OAIBranchConfigurations_get_200_response_allOf_toolsets.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBranchConfigurations_get_200_response_allOf_artifactVersioning;
class OAIBranchConfigurations_get_200_response_allOf_toolsets;

class OAIBranchConfigurationWithId : public OAIObject {
public:
    OAIBranchConfigurationWithId();
    OAIBranchConfigurationWithId(QString json);
    ~OAIBranchConfigurationWithId() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBranchConfigurations_get_200_response_allOf_artifactVersioning getArtifactVersioning() const;
    void setArtifactVersioning(const OAIBranchConfigurations_get_200_response_allOf_artifactVersioning &artifact_versioning);
    bool is_artifact_versioning_Set() const;
    bool is_artifact_versioning_Valid() const;

    bool isBadgeIsEnabled() const;
    void setBadgeIsEnabled(const bool &badge_is_enabled);
    bool is_badge_is_enabled_Set() const;
    bool is_badge_is_enabled_Valid() const;

    QString getCloneFromBranch() const;
    void setCloneFromBranch(const QString &clone_from_branch);
    bool is_clone_from_branch_Set() const;
    bool is_clone_from_branch_Valid() const;

    bool isRSigned() const;
    void setRSigned(const bool &r_signed);
    bool is_r_signed_Set() const;
    bool is_r_signed_Valid() const;

    bool isTestsEnabled() const;
    void setTestsEnabled(const bool &tests_enabled);
    bool is_tests_enabled_Set() const;
    bool is_tests_enabled_Valid() const;

    OAIBranchConfigurations_get_200_response_allOf_toolsets getToolsets() const;
    void setToolsets(const OAIBranchConfigurations_get_200_response_allOf_toolsets &toolsets);
    bool is_toolsets_Set() const;
    bool is_toolsets_Valid() const;

    QString getTrigger() const;
    void setTrigger(const QString &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBranchConfigurations_get_200_response_allOf_artifactVersioning m_artifact_versioning;
    bool m_artifact_versioning_isSet;
    bool m_artifact_versioning_isValid;

    bool m_badge_is_enabled;
    bool m_badge_is_enabled_isSet;
    bool m_badge_is_enabled_isValid;

    QString m_clone_from_branch;
    bool m_clone_from_branch_isSet;
    bool m_clone_from_branch_isValid;

    bool m_r_signed;
    bool m_r_signed_isSet;
    bool m_r_signed_isValid;

    bool m_tests_enabled;
    bool m_tests_enabled_isSet;
    bool m_tests_enabled_isValid;

    OAIBranchConfigurations_get_200_response_allOf_toolsets m_toolsets;
    bool m_toolsets_isSet;
    bool m_toolsets_isValid;

    QString m_trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBranchConfigurationWithId)

#endif // OAIBranchConfigurationWithId_H
