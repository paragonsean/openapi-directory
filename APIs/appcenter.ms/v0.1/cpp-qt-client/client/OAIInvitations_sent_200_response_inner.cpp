/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvitations_sent_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvitations_sent_200_response_inner::OAIInvitations_sent_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvitations_sent_200_response_inner::OAIInvitations_sent_200_response_inner() {
    this->initializeModel();
}

OAIInvitations_sent_200_response_inner::~OAIInvitations_sent_200_response_inner() {}

void OAIInvitations_sent_200_response_inner::initializeModel() {

    m_app_isSet = false;
    m_app_isValid = false;

    m_invitation_id_isSet = false;
    m_invitation_id_isValid = false;

    m_organization_isSet = false;
    m_organization_isValid = false;
}

void OAIInvitations_sent_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvitations_sent_200_response_inner::fromJsonObject(QJsonObject json) {

    m_app_isValid = ::OpenAPI::fromJsonValue(m_app, json[QString("app")]);
    m_app_isSet = !json[QString("app")].isNull() && m_app_isValid;

    m_invitation_id_isValid = ::OpenAPI::fromJsonValue(m_invitation_id, json[QString("invitation_id")]);
    m_invitation_id_isSet = !json[QString("invitation_id")].isNull() && m_invitation_id_isValid;

    m_organization_isValid = ::OpenAPI::fromJsonValue(m_organization, json[QString("organization")]);
    m_organization_isSet = !json[QString("organization")].isNull() && m_organization_isValid;
}

QString OAIInvitations_sent_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvitations_sent_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_app.isSet()) {
        obj.insert(QString("app"), ::OpenAPI::toJsonValue(m_app));
    }
    if (m_invitation_id_isSet) {
        obj.insert(QString("invitation_id"), ::OpenAPI::toJsonValue(m_invitation_id));
    }
    if (m_organization.isSet()) {
        obj.insert(QString("organization"), ::OpenAPI::toJsonValue(m_organization));
    }
    return obj;
}

OAIApps_list_200_response_inner OAIInvitations_sent_200_response_inner::getApp() const {
    return m_app;
}
void OAIInvitations_sent_200_response_inner::setApp(const OAIApps_list_200_response_inner &app) {
    m_app = app;
    m_app_isSet = true;
}

bool OAIInvitations_sent_200_response_inner::is_app_Set() const{
    return m_app_isSet;
}

bool OAIInvitations_sent_200_response_inner::is_app_Valid() const{
    return m_app_isValid;
}

QString OAIInvitations_sent_200_response_inner::getInvitationId() const {
    return m_invitation_id;
}
void OAIInvitations_sent_200_response_inner::setInvitationId(const QString &invitation_id) {
    m_invitation_id = invitation_id;
    m_invitation_id_isSet = true;
}

bool OAIInvitations_sent_200_response_inner::is_invitation_id_Set() const{
    return m_invitation_id_isSet;
}

bool OAIInvitations_sent_200_response_inner::is_invitation_id_Valid() const{
    return m_invitation_id_isValid;
}

OAIOrganizations_listAdministered_200_response_organizations OAIInvitations_sent_200_response_inner::getOrganization() const {
    return m_organization;
}
void OAIInvitations_sent_200_response_inner::setOrganization(const OAIOrganizations_listAdministered_200_response_organizations &organization) {
    m_organization = organization;
    m_organization_isSet = true;
}

bool OAIInvitations_sent_200_response_inner::is_organization_Set() const{
    return m_organization_isSet;
}

bool OAIInvitations_sent_200_response_inner::is_organization_Valid() const{
    return m_organization_isValid;
}

bool OAIInvitations_sent_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invitation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvitations_sent_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_invitation_id_isValid && true;
}

} // namespace OpenAPI
