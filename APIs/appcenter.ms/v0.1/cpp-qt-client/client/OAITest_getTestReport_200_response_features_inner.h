/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITest_getTestReport_200_response_features_inner.h
 *
 * 
 */

#ifndef OAITest_getTestReport_200_response_features_inner_H
#define OAITest_getTestReport_200_response_features_inner_H

#include <QJsonObject>

#include "OAITest_getTestReport_200_response_features_inner_tests_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITest_getTestReport_200_response_features_inner_tests_inner;

class OAITest_getTestReport_200_response_features_inner : public OAIObject {
public:
    OAITest_getTestReport_200_response_features_inner();
    OAITest_getTestReport_200_response_features_inner(QString json);
    ~OAITest_getTestReport_200_response_features_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getFailed() const;
    void setFailed(const double &failed);
    bool is_failed_Set() const;
    bool is_failed_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getPeakDuration() const;
    void setPeakDuration(const double &peak_duration);
    bool is_peak_duration_Set() const;
    bool is_peak_duration_Valid() const;

    double getPeakMemory() const;
    void setPeakMemory(const double &peak_memory);
    bool is_peak_memory_Set() const;
    bool is_peak_memory_Valid() const;

    double getSkipped() const;
    void setSkipped(const double &skipped);
    bool is_skipped_Set() const;
    bool is_skipped_Valid() const;

    QList<OAITest_getTestReport_200_response_features_inner_tests_inner> getTests() const;
    void setTests(const QList<OAITest_getTestReport_200_response_features_inner_tests_inner> &tests);
    bool is_tests_Set() const;
    bool is_tests_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_failed;
    bool m_failed_isSet;
    bool m_failed_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_peak_duration;
    bool m_peak_duration_isSet;
    bool m_peak_duration_isValid;

    double m_peak_memory;
    bool m_peak_memory_isSet;
    bool m_peak_memory_isValid;

    double m_skipped;
    bool m_skipped_isSet;
    bool m_skipped_isValid;

    QList<OAITest_getTestReport_200_response_features_inner_tests_inner> m_tests;
    bool m_tests_isSet;
    bool m_tests_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITest_getTestReport_200_response_features_inner)

#endif // OAITest_getTestReport_200_response_features_inner_H
