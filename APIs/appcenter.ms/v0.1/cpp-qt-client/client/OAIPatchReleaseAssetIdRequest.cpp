/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPatchReleaseAssetIdRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPatchReleaseAssetIdRequest::OAIPatchReleaseAssetIdRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPatchReleaseAssetIdRequest::OAIPatchReleaseAssetIdRequest() {
    this->initializeModel();
}

OAIPatchReleaseAssetIdRequest::~OAIPatchReleaseAssetIdRequest() {}

void OAIPatchReleaseAssetIdRequest::initializeModel() {

    m_ipa_uuids_isSet = false;
    m_ipa_uuids_isValid = false;

    m_package_asset_id_isSet = false;
    m_package_asset_id_isValid = false;

    m_upload_id_isSet = false;
    m_upload_id_isValid = false;
}

void OAIPatchReleaseAssetIdRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPatchReleaseAssetIdRequest::fromJsonObject(QJsonObject json) {

    m_ipa_uuids_isValid = ::OpenAPI::fromJsonValue(m_ipa_uuids, json[QString("ipa_uuids")]);
    m_ipa_uuids_isSet = !json[QString("ipa_uuids")].isNull() && m_ipa_uuids_isValid;

    m_package_asset_id_isValid = ::OpenAPI::fromJsonValue(m_package_asset_id, json[QString("package_asset_id")]);
    m_package_asset_id_isSet = !json[QString("package_asset_id")].isNull() && m_package_asset_id_isValid;

    m_upload_id_isValid = ::OpenAPI::fromJsonValue(m_upload_id, json[QString("upload_id")]);
    m_upload_id_isSet = !json[QString("upload_id")].isNull() && m_upload_id_isValid;
}

QString OAIPatchReleaseAssetIdRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPatchReleaseAssetIdRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_ipa_uuids_isSet) {
        obj.insert(QString("ipa_uuids"), ::OpenAPI::toJsonValue(m_ipa_uuids));
    }
    if (m_package_asset_id_isSet) {
        obj.insert(QString("package_asset_id"), ::OpenAPI::toJsonValue(m_package_asset_id));
    }
    if (m_upload_id_isSet) {
        obj.insert(QString("upload_id"), ::OpenAPI::toJsonValue(m_upload_id));
    }
    return obj;
}

QString OAIPatchReleaseAssetIdRequest::getIpaUuids() const {
    return m_ipa_uuids;
}
void OAIPatchReleaseAssetIdRequest::setIpaUuids(const QString &ipa_uuids) {
    m_ipa_uuids = ipa_uuids;
    m_ipa_uuids_isSet = true;
}

bool OAIPatchReleaseAssetIdRequest::is_ipa_uuids_Set() const{
    return m_ipa_uuids_isSet;
}

bool OAIPatchReleaseAssetIdRequest::is_ipa_uuids_Valid() const{
    return m_ipa_uuids_isValid;
}

QString OAIPatchReleaseAssetIdRequest::getPackageAssetId() const {
    return m_package_asset_id;
}
void OAIPatchReleaseAssetIdRequest::setPackageAssetId(const QString &package_asset_id) {
    m_package_asset_id = package_asset_id;
    m_package_asset_id_isSet = true;
}

bool OAIPatchReleaseAssetIdRequest::is_package_asset_id_Set() const{
    return m_package_asset_id_isSet;
}

bool OAIPatchReleaseAssetIdRequest::is_package_asset_id_Valid() const{
    return m_package_asset_id_isValid;
}

QString OAIPatchReleaseAssetIdRequest::getUploadId() const {
    return m_upload_id;
}
void OAIPatchReleaseAssetIdRequest::setUploadId(const QString &upload_id) {
    m_upload_id = upload_id;
    m_upload_id_isSet = true;
}

bool OAIPatchReleaseAssetIdRequest::is_upload_id_Set() const{
    return m_upload_id_isSet;
}

bool OAIPatchReleaseAssetIdRequest::is_upload_id_Valid() const{
    return m_upload_id_isValid;
}

bool OAIPatchReleaseAssetIdRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ipa_uuids_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_asset_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upload_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPatchReleaseAssetIdRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_package_asset_id_isValid && m_upload_id_isValid && true;
}

} // namespace OpenAPI
