/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILegacyCodePushRelease.h
 *
 * 
 */

#ifndef OAILegacyCodePushRelease_H
#define OAILegacyCodePushRelease_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILegacyCodePushRelease : public OAIObject {
public:
    OAILegacyCodePushRelease();
    OAILegacyCodePushRelease(QString json);
    ~OAILegacyCodePushRelease() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppVersion() const;
    void setAppVersion(const QString &app_version);
    bool is_app_version_Set() const;
    bool is_app_version_Valid() const;

    QString getBlobUrl() const;
    void setBlobUrl(const QString &blob_url);
    bool is_blob_url_Set() const;
    bool is_blob_url_Valid() const;

    OAIObject getDiffPackageMap() const;
    void setDiffPackageMap(const OAIObject &diff_package_map);
    bool is_diff_package_map_Set() const;
    bool is_diff_package_map_Valid() const;

    bool isIsDisabled() const;
    void setIsDisabled(const bool &is_disabled);
    bool is_is_disabled_Set() const;
    bool is_is_disabled_Valid() const;

    bool isIsMandatory() const;
    void setIsMandatory(const bool &is_mandatory);
    bool is_is_mandatory_Set() const;
    bool is_is_mandatory_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getManifestBlobUrl() const;
    void setManifestBlobUrl(const QString &manifest_blob_url);
    bool is_manifest_blob_url_Set() const;
    bool is_manifest_blob_url_Valid() const;

    QString getReleaseMethod() const;
    void setReleaseMethod(const QString &release_method);
    bool is_release_method_Set() const;
    bool is_release_method_Valid() const;

    QString getReleasedByUserId() const;
    void setReleasedByUserId(const QString &released_by_user_id);
    bool is_released_by_user_id_Set() const;
    bool is_released_by_user_id_Valid() const;

    qint32 getRollout() const;
    void setRollout(const qint32 &rollout);
    bool is_rollout_Set() const;
    bool is_rollout_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    qint32 getUploadTime() const;
    void setUploadTime(const qint32 &upload_time);
    bool is_upload_time_Set() const;
    bool is_upload_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_version;
    bool m_app_version_isSet;
    bool m_app_version_isValid;

    QString m_blob_url;
    bool m_blob_url_isSet;
    bool m_blob_url_isValid;

    OAIObject m_diff_package_map;
    bool m_diff_package_map_isSet;
    bool m_diff_package_map_isValid;

    bool m_is_disabled;
    bool m_is_disabled_isSet;
    bool m_is_disabled_isValid;

    bool m_is_mandatory;
    bool m_is_mandatory_isSet;
    bool m_is_mandatory_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_manifest_blob_url;
    bool m_manifest_blob_url_isSet;
    bool m_manifest_blob_url_isValid;

    QString m_release_method;
    bool m_release_method_isSet;
    bool m_release_method_isValid;

    QString m_released_by_user_id;
    bool m_released_by_user_id_isSet;
    bool m_released_by_user_id_isValid;

    qint32 m_rollout;
    bool m_rollout_isSet;
    bool m_rollout_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    qint32 m_upload_time;
    bool m_upload_time_isSet;
    bool m_upload_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILegacyCodePushRelease)

#endif // OAILegacyCodePushRelease_H
