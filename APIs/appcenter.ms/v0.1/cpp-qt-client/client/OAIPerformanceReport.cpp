/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerformanceReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerformanceReport::OAIPerformanceReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerformanceReport::OAIPerformanceReport() {
    this->initializeModel();
}

OAIPerformanceReport::~OAIPerformanceReport() {}

void OAIPerformanceReport::initializeModel() {

    m_device_snapshot_id_isSet = false;
    m_device_snapshot_id_isValid = false;

    m_performance_data_isSet = false;
    m_performance_data_isValid = false;

    m_video_isSet = false;
    m_video_isValid = false;
}

void OAIPerformanceReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerformanceReport::fromJsonObject(QJsonObject json) {

    m_device_snapshot_id_isValid = ::OpenAPI::fromJsonValue(m_device_snapshot_id, json[QString("device_snapshot_id")]);
    m_device_snapshot_id_isSet = !json[QString("device_snapshot_id")].isNull() && m_device_snapshot_id_isValid;

    m_performance_data_isValid = ::OpenAPI::fromJsonValue(m_performance_data, json[QString("performance_data")]);
    m_performance_data_isSet = !json[QString("performance_data")].isNull() && m_performance_data_isValid;

    m_video_isValid = ::OpenAPI::fromJsonValue(m_video, json[QString("video")]);
    m_video_isSet = !json[QString("video")].isNull() && m_video_isValid;
}

QString OAIPerformanceReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerformanceReport::asJsonObject() const {
    QJsonObject obj;
    if (m_device_snapshot_id_isSet) {
        obj.insert(QString("device_snapshot_id"), ::OpenAPI::toJsonValue(m_device_snapshot_id));
    }
    if (m_performance_data.isSet()) {
        obj.insert(QString("performance_data"), ::OpenAPI::toJsonValue(m_performance_data));
    }
    if (m_video.isSet()) {
        obj.insert(QString("video"), ::OpenAPI::toJsonValue(m_video));
    }
    return obj;
}

QString OAIPerformanceReport::getDeviceSnapshotId() const {
    return m_device_snapshot_id;
}
void OAIPerformanceReport::setDeviceSnapshotId(const QString &device_snapshot_id) {
    m_device_snapshot_id = device_snapshot_id;
    m_device_snapshot_id_isSet = true;
}

bool OAIPerformanceReport::is_device_snapshot_id_Set() const{
    return m_device_snapshot_id_isSet;
}

bool OAIPerformanceReport::is_device_snapshot_id_Valid() const{
    return m_device_snapshot_id_isValid;
}

OAIPerformanceReport_performance_data OAIPerformanceReport::getPerformanceData() const {
    return m_performance_data;
}
void OAIPerformanceReport::setPerformanceData(const OAIPerformanceReport_performance_data &performance_data) {
    m_performance_data = performance_data;
    m_performance_data_isSet = true;
}

bool OAIPerformanceReport::is_performance_data_Set() const{
    return m_performance_data_isSet;
}

bool OAIPerformanceReport::is_performance_data_Valid() const{
    return m_performance_data_isValid;
}

OAIPerformanceReport_video OAIPerformanceReport::getVideo() const {
    return m_video;
}
void OAIPerformanceReport::setVideo(const OAIPerformanceReport_video &video) {
    m_video = video;
    m_video_isSet = true;
}

bool OAIPerformanceReport::is_video_Set() const{
    return m_video_isSet;
}

bool OAIPerformanceReport::is_video_Valid() const{
    return m_video_isValid;
}

bool OAIPerformanceReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_snapshot_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_performance_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerformanceReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
