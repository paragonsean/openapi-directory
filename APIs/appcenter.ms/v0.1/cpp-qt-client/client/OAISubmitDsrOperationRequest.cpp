/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubmitDsrOperationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubmitDsrOperationRequest::OAISubmitDsrOperationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubmitDsrOperationRequest::OAISubmitDsrOperationRequest() {
    this->initializeModel();
}

OAISubmitDsrOperationRequest::~OAISubmitDsrOperationRequest() {}

void OAISubmitDsrOperationRequest::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;

    m_request_isSet = false;
    m_request_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAISubmitDsrOperationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubmitDsrOperationRequest::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("operationId")]);
    m_operation_id_isSet = !json[QString("operationId")].isNull() && m_operation_id_isValid;

    m_request_isValid = ::OpenAPI::fromJsonValue(m_request, json[QString("request")]);
    m_request_isSet = !json[QString("request")].isNull() && m_request_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("requestId")]);
    m_request_id_isSet = !json[QString("requestId")].isNull() && m_request_id_isValid;
}

QString OAISubmitDsrOperationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubmitDsrOperationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_operation_id_isSet) {
        obj.insert(QString("operationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    if (m_request_isSet) {
        obj.insert(QString("request"), ::OpenAPI::toJsonValue(m_request));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("requestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QString OAISubmitDsrOperationRequest::getAccountId() const {
    return m_account_id;
}
void OAISubmitDsrOperationRequest::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAISubmitDsrOperationRequest::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAISubmitDsrOperationRequest::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAISubmitDsrOperationRequest::getAppId() const {
    return m_app_id;
}
void OAISubmitDsrOperationRequest::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAISubmitDsrOperationRequest::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAISubmitDsrOperationRequest::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAISubmitDsrOperationRequest::getOperationId() const {
    return m_operation_id;
}
void OAISubmitDsrOperationRequest::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAISubmitDsrOperationRequest::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAISubmitDsrOperationRequest::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

QString OAISubmitDsrOperationRequest::getRequest() const {
    return m_request;
}
void OAISubmitDsrOperationRequest::setRequest(const QString &request) {
    m_request = request;
    m_request_isSet = true;
}

bool OAISubmitDsrOperationRequest::is_request_Set() const{
    return m_request_isSet;
}

bool OAISubmitDsrOperationRequest::is_request_Valid() const{
    return m_request_isValid;
}

QString OAISubmitDsrOperationRequest::getRequestId() const {
    return m_request_id;
}
void OAISubmitDsrOperationRequest::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAISubmitDsrOperationRequest::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAISubmitDsrOperationRequest::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAISubmitDsrOperationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubmitDsrOperationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
