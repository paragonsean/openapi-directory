/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILegacyAuthenticationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILegacyAuthenticationResponse::OAILegacyAuthenticationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILegacyAuthenticationResponse::OAILegacyAuthenticationResponse() {
    this->initializeModel();
}

OAILegacyAuthenticationResponse::~OAILegacyAuthenticationResponse() {}

void OAILegacyAuthenticationResponse::initializeModel() {

    m_authenticated_isSet = false;
    m_authenticated_isValid = false;
}

void OAILegacyAuthenticationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILegacyAuthenticationResponse::fromJsonObject(QJsonObject json) {

    m_authenticated_isValid = ::OpenAPI::fromJsonValue(m_authenticated, json[QString("authenticated")]);
    m_authenticated_isSet = !json[QString("authenticated")].isNull() && m_authenticated_isValid;
}

QString OAILegacyAuthenticationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILegacyAuthenticationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_authenticated_isSet) {
        obj.insert(QString("authenticated"), ::OpenAPI::toJsonValue(m_authenticated));
    }
    return obj;
}

bool OAILegacyAuthenticationResponse::isAuthenticated() const {
    return m_authenticated;
}
void OAILegacyAuthenticationResponse::setAuthenticated(const bool &authenticated) {
    m_authenticated = authenticated;
    m_authenticated_isSet = true;
}

bool OAILegacyAuthenticationResponse::is_authenticated_Set() const{
    return m_authenticated_isSet;
}

bool OAILegacyAuthenticationResponse::is_authenticated_Valid() const{
    return m_authenticated_isValid;
}

bool OAILegacyAuthenticationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authenticated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILegacyAuthenticationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
