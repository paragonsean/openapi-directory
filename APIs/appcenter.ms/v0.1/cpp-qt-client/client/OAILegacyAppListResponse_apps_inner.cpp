/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILegacyAppListResponse_apps_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILegacyAppListResponse_apps_inner::OAILegacyAppListResponse_apps_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILegacyAppListResponse_apps_inner::OAILegacyAppListResponse_apps_inner() {
    this->initializeModel();
}

OAILegacyAppListResponse_apps_inner::~OAILegacyAppListResponse_apps_inner() {}

void OAILegacyAppListResponse_apps_inner::initializeModel() {

    m_collaborators_isSet = false;
    m_collaborators_isValid = false;

    m_deployments_isSet = false;
    m_deployments_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAILegacyAppListResponse_apps_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILegacyAppListResponse_apps_inner::fromJsonObject(QJsonObject json) {

    m_collaborators_isValid = ::OpenAPI::fromJsonValue(m_collaborators, json[QString("collaborators")]);
    m_collaborators_isSet = !json[QString("collaborators")].isNull() && m_collaborators_isValid;

    m_deployments_isValid = ::OpenAPI::fromJsonValue(m_deployments, json[QString("deployments")]);
    m_deployments_isSet = !json[QString("deployments")].isNull() && m_deployments_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAILegacyAppListResponse_apps_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILegacyAppListResponse_apps_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_collaborators.size() > 0) {
        obj.insert(QString("collaborators"), ::OpenAPI::toJsonValue(m_collaborators));
    }
    if (m_deployments.size() > 0) {
        obj.insert(QString("deployments"), ::OpenAPI::toJsonValue(m_deployments));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QMap<QString, OAILegacyApp_collaborators_value> OAILegacyAppListResponse_apps_inner::getCollaborators() const {
    return m_collaborators;
}
void OAILegacyAppListResponse_apps_inner::setCollaborators(const QMap<QString, OAILegacyApp_collaborators_value> &collaborators) {
    m_collaborators = collaborators;
    m_collaborators_isSet = true;
}

bool OAILegacyAppListResponse_apps_inner::is_collaborators_Set() const{
    return m_collaborators_isSet;
}

bool OAILegacyAppListResponse_apps_inner::is_collaborators_Valid() const{
    return m_collaborators_isValid;
}

QList<QString> OAILegacyAppListResponse_apps_inner::getDeployments() const {
    return m_deployments;
}
void OAILegacyAppListResponse_apps_inner::setDeployments(const QList<QString> &deployments) {
    m_deployments = deployments;
    m_deployments_isSet = true;
}

bool OAILegacyAppListResponse_apps_inner::is_deployments_Set() const{
    return m_deployments_isSet;
}

bool OAILegacyAppListResponse_apps_inner::is_deployments_Valid() const{
    return m_deployments_isValid;
}

QString OAILegacyAppListResponse_apps_inner::getName() const {
    return m_name;
}
void OAILegacyAppListResponse_apps_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILegacyAppListResponse_apps_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAILegacyAppListResponse_apps_inner::is_name_Valid() const{
    return m_name_isValid;
}

bool OAILegacyAppListResponse_apps_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collaborators.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILegacyAppListResponse_apps_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
