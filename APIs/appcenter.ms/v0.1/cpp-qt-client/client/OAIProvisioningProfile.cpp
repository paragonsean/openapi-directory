/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvisioningProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvisioningProfile::OAIProvisioningProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvisioningProfile::OAIProvisioningProfile() {
    this->initializeModel();
}

OAIProvisioningProfile::~OAIProvisioningProfile() {}

void OAIProvisioningProfile::initializeModel() {

    m_application_identifier_isSet = false;
    m_application_identifier_isValid = false;

    m_expired_at_isSet = false;
    m_expired_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_profile_type_isSet = false;
    m_profile_type_isValid = false;

    m_team_identifier_isSet = false;
    m_team_identifier_isValid = false;

    m_udids_isSet = false;
    m_udids_isValid = false;
}

void OAIProvisioningProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProvisioningProfile::fromJsonObject(QJsonObject json) {

    m_application_identifier_isValid = ::OpenAPI::fromJsonValue(m_application_identifier, json[QString("application_identifier")]);
    m_application_identifier_isSet = !json[QString("application_identifier")].isNull() && m_application_identifier_isValid;

    m_expired_at_isValid = ::OpenAPI::fromJsonValue(m_expired_at, json[QString("expired_at")]);
    m_expired_at_isSet = !json[QString("expired_at")].isNull() && m_expired_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_profile_type_isValid = ::OpenAPI::fromJsonValue(m_profile_type, json[QString("profile_type")]);
    m_profile_type_isSet = !json[QString("profile_type")].isNull() && m_profile_type_isValid;

    m_team_identifier_isValid = ::OpenAPI::fromJsonValue(m_team_identifier, json[QString("team_identifier")]);
    m_team_identifier_isSet = !json[QString("team_identifier")].isNull() && m_team_identifier_isValid;

    m_udids_isValid = ::OpenAPI::fromJsonValue(m_udids, json[QString("udids")]);
    m_udids_isSet = !json[QString("udids")].isNull() && m_udids_isValid;
}

QString OAIProvisioningProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProvisioningProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_application_identifier_isSet) {
        obj.insert(QString("application_identifier"), ::OpenAPI::toJsonValue(m_application_identifier));
    }
    if (m_expired_at_isSet) {
        obj.insert(QString("expired_at"), ::OpenAPI::toJsonValue(m_expired_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_profile_type_isSet) {
        obj.insert(QString("profile_type"), ::OpenAPI::toJsonValue(m_profile_type));
    }
    if (m_team_identifier_isSet) {
        obj.insert(QString("team_identifier"), ::OpenAPI::toJsonValue(m_team_identifier));
    }
    if (m_udids.size() > 0) {
        obj.insert(QString("udids"), ::OpenAPI::toJsonValue(m_udids));
    }
    return obj;
}

QString OAIProvisioningProfile::getApplicationIdentifier() const {
    return m_application_identifier;
}
void OAIProvisioningProfile::setApplicationIdentifier(const QString &application_identifier) {
    m_application_identifier = application_identifier;
    m_application_identifier_isSet = true;
}

bool OAIProvisioningProfile::is_application_identifier_Set() const{
    return m_application_identifier_isSet;
}

bool OAIProvisioningProfile::is_application_identifier_Valid() const{
    return m_application_identifier_isValid;
}

QString OAIProvisioningProfile::getExpiredAt() const {
    return m_expired_at;
}
void OAIProvisioningProfile::setExpiredAt(const QString &expired_at) {
    m_expired_at = expired_at;
    m_expired_at_isSet = true;
}

bool OAIProvisioningProfile::is_expired_at_Set() const{
    return m_expired_at_isSet;
}

bool OAIProvisioningProfile::is_expired_at_Valid() const{
    return m_expired_at_isValid;
}

QString OAIProvisioningProfile::getName() const {
    return m_name;
}
void OAIProvisioningProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProvisioningProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProvisioningProfile::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProvisioningProfile::getProfileType() const {
    return m_profile_type;
}
void OAIProvisioningProfile::setProfileType(const QString &profile_type) {
    m_profile_type = profile_type;
    m_profile_type_isSet = true;
}

bool OAIProvisioningProfile::is_profile_type_Set() const{
    return m_profile_type_isSet;
}

bool OAIProvisioningProfile::is_profile_type_Valid() const{
    return m_profile_type_isValid;
}

QString OAIProvisioningProfile::getTeamIdentifier() const {
    return m_team_identifier;
}
void OAIProvisioningProfile::setTeamIdentifier(const QString &team_identifier) {
    m_team_identifier = team_identifier;
    m_team_identifier_isSet = true;
}

bool OAIProvisioningProfile::is_team_identifier_Set() const{
    return m_team_identifier_isSet;
}

bool OAIProvisioningProfile::is_team_identifier_Valid() const{
    return m_team_identifier_isValid;
}

QList<QString> OAIProvisioningProfile::getUdids() const {
    return m_udids;
}
void OAIProvisioningProfile::setUdids(const QList<QString> &udids) {
    m_udids = udids;
    m_udids_isSet = true;
}

bool OAIProvisioningProfile::is_udids_Set() const{
    return m_udids_isSet;
}

bool OAIProvisioningProfile::is_udids_Valid() const{
    return m_udids_isValid;
}

bool OAIProvisioningProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expired_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_udids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProvisioningProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_application_identifier_isValid && m_expired_at_isValid && m_name_isValid && m_profile_type_isValid && m_team_identifier_isValid && true;
}

} // namespace OpenAPI
