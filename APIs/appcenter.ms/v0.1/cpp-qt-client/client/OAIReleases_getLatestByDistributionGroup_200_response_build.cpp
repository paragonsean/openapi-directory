/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReleases_getLatestByDistributionGroup_200_response_build.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReleases_getLatestByDistributionGroup_200_response_build::OAIReleases_getLatestByDistributionGroup_200_response_build(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReleases_getLatestByDistributionGroup_200_response_build::OAIReleases_getLatestByDistributionGroup_200_response_build() {
    this->initializeModel();
}

OAIReleases_getLatestByDistributionGroup_200_response_build::~OAIReleases_getLatestByDistributionGroup_200_response_build() {}

void OAIReleases_getLatestByDistributionGroup_200_response_build::initializeModel() {

    m_branch_name_isSet = false;
    m_branch_name_isValid = false;

    m_commit_hash_isSet = false;
    m_commit_hash_isValid = false;

    m_commit_message_isSet = false;
    m_commit_message_isValid = false;
}

void OAIReleases_getLatestByDistributionGroup_200_response_build::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReleases_getLatestByDistributionGroup_200_response_build::fromJsonObject(QJsonObject json) {

    m_branch_name_isValid = ::OpenAPI::fromJsonValue(m_branch_name, json[QString("branch_name")]);
    m_branch_name_isSet = !json[QString("branch_name")].isNull() && m_branch_name_isValid;

    m_commit_hash_isValid = ::OpenAPI::fromJsonValue(m_commit_hash, json[QString("commit_hash")]);
    m_commit_hash_isSet = !json[QString("commit_hash")].isNull() && m_commit_hash_isValid;

    m_commit_message_isValid = ::OpenAPI::fromJsonValue(m_commit_message, json[QString("commit_message")]);
    m_commit_message_isSet = !json[QString("commit_message")].isNull() && m_commit_message_isValid;
}

QString OAIReleases_getLatestByDistributionGroup_200_response_build::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReleases_getLatestByDistributionGroup_200_response_build::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_name_isSet) {
        obj.insert(QString("branch_name"), ::OpenAPI::toJsonValue(m_branch_name));
    }
    if (m_commit_hash_isSet) {
        obj.insert(QString("commit_hash"), ::OpenAPI::toJsonValue(m_commit_hash));
    }
    if (m_commit_message_isSet) {
        obj.insert(QString("commit_message"), ::OpenAPI::toJsonValue(m_commit_message));
    }
    return obj;
}

QString OAIReleases_getLatestByDistributionGroup_200_response_build::getBranchName() const {
    return m_branch_name;
}
void OAIReleases_getLatestByDistributionGroup_200_response_build::setBranchName(const QString &branch_name) {
    m_branch_name = branch_name;
    m_branch_name_isSet = true;
}

bool OAIReleases_getLatestByDistributionGroup_200_response_build::is_branch_name_Set() const{
    return m_branch_name_isSet;
}

bool OAIReleases_getLatestByDistributionGroup_200_response_build::is_branch_name_Valid() const{
    return m_branch_name_isValid;
}

QString OAIReleases_getLatestByDistributionGroup_200_response_build::getCommitHash() const {
    return m_commit_hash;
}
void OAIReleases_getLatestByDistributionGroup_200_response_build::setCommitHash(const QString &commit_hash) {
    m_commit_hash = commit_hash;
    m_commit_hash_isSet = true;
}

bool OAIReleases_getLatestByDistributionGroup_200_response_build::is_commit_hash_Set() const{
    return m_commit_hash_isSet;
}

bool OAIReleases_getLatestByDistributionGroup_200_response_build::is_commit_hash_Valid() const{
    return m_commit_hash_isValid;
}

QString OAIReleases_getLatestByDistributionGroup_200_response_build::getCommitMessage() const {
    return m_commit_message;
}
void OAIReleases_getLatestByDistributionGroup_200_response_build::setCommitMessage(const QString &commit_message) {
    m_commit_message = commit_message;
    m_commit_message_isSet = true;
}

bool OAIReleases_getLatestByDistributionGroup_200_response_build::is_commit_message_Set() const{
    return m_commit_message_isSet;
}

bool OAIReleases_getLatestByDistributionGroup_200_response_build::is_commit_message_Valid() const{
    return m_commit_message_isValid;
}

bool OAIReleases_getLatestByDistributionGroup_200_response_build::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commit_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commit_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReleases_getLatestByDistributionGroup_200_response_build::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
