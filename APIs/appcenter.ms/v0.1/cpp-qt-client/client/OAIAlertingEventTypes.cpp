/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertingEventTypes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertingEventTypes::OAIAlertingEventTypes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertingEventTypes::OAIAlertingEventTypes() {
    this->initializeModel();
}

OAIAlertingEventTypes::~OAIAlertingEventTypes() {}

void OAIAlertingEventTypes::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAlertingEventTypes::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAlertingEventTypes::fromJson(QString jsonString) {
    
    if ( jsonString.compare("newCrashGroupCreated", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlertingEventTypes::NEWCRASHGROUPCREATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("newAppReleased", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlertingEventTypes::NEWAPPRELEASED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAlertingEventTypes::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAlertingEventTypes::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAlertingEventTypes::NEWCRASHGROUPCREATED:
            val = "newCrashGroupCreated";
            break;
        case eOAIAlertingEventTypes::NEWAPPRELEASED:
            val = "newAppReleased";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAlertingEventTypes::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAlertingEventTypes::eOAIAlertingEventTypes OAIAlertingEventTypes::getValue() const {
    return m_value;
}

void OAIAlertingEventTypes::setValue(const OAIAlertingEventTypes::eOAIAlertingEventTypes& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAlertingEventTypes::isSet() const {
    
    return m_value_isSet;
}

bool OAIAlertingEventTypes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
