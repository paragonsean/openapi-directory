/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestReport.h
 *
 * 
 */

#ifndef OAITestReport_H
#define OAITestReport_H

#include <QJsonObject>

#include "OAITest_getTestReport_200_response_device_logs_inner.h"
#include "OAITest_getTestReport_200_response_features_inner.h"
#include "OAITest_getTestReport_200_response_snapshot_fatal_errors_inner.h"
#include "OAITest_getTestReport_200_response_stats.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITest_getTestReport_200_response_device_logs_inner;
class OAITest_getTestReport_200_response_features_inner;
class OAITest_getTestReport_200_response_snapshot_fatal_errors_inner;
class OAITest_getTestReport_200_response_stats;

class OAITestReport : public OAIObject {
public:
    OAITestReport();
    OAITestReport(QString json);
    ~OAITestReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppUploadId() const;
    void setAppUploadId(const QString &app_upload_id);
    bool is_app_upload_id_Set() const;
    bool is_app_upload_id_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDateFinished() const;
    void setDateFinished(const QString &date_finished);
    bool is_date_finished_Set() const;
    bool is_date_finished_Valid() const;

    QList<OAITest_getTestReport_200_response_device_logs_inner> getDeviceLogs() const;
    void setDeviceLogs(const QList<OAITest_getTestReport_200_response_device_logs_inner> &device_logs);
    bool is_device_logs_Set() const;
    bool is_device_logs_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QList<OAITest_getTestReport_200_response_features_inner> getFeatures() const;
    void setFeatures(const QList<OAITest_getTestReport_200_response_features_inner> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QList<QString> getFinishedDeviceSnapshots() const;
    void setFinishedDeviceSnapshots(const QList<QString> &finished_device_snapshots);
    bool is_finished_device_snapshots_Set() const;
    bool is_finished_device_snapshots_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    double getRevision() const;
    void setRevision(const double &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    double getSchemaVersion() const;
    void setSchemaVersion(const double &schema_version);
    bool is_schema_version_Set() const;
    bool is_schema_version_Valid() const;

    QList<OAITest_getTestReport_200_response_snapshot_fatal_errors_inner> getSnapshotFatalErrors() const;
    void setSnapshotFatalErrors(const QList<OAITest_getTestReport_200_response_snapshot_fatal_errors_inner> &snapshot_fatal_errors);
    bool is_snapshot_fatal_errors_Set() const;
    bool is_snapshot_fatal_errors_Valid() const;

    OAITest_getTestReport_200_response_stats getStats() const;
    void setStats(const OAITest_getTestReport_200_response_stats &stats);
    bool is_stats_Set() const;
    bool is_stats_Valid() const;

    QString getTestType() const;
    void setTestType(const QString &test_type);
    bool is_test_type_Set() const;
    bool is_test_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_upload_id;
    bool m_app_upload_id_isSet;
    bool m_app_upload_id_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_date_finished;
    bool m_date_finished_isSet;
    bool m_date_finished_isValid;

    QList<OAITest_getTestReport_200_response_device_logs_inner> m_device_logs;
    bool m_device_logs_isSet;
    bool m_device_logs_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QList<OAITest_getTestReport_200_response_features_inner> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QList<QString> m_finished_device_snapshots;
    bool m_finished_device_snapshots_isSet;
    bool m_finished_device_snapshots_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    double m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;

    double m_schema_version;
    bool m_schema_version_isSet;
    bool m_schema_version_isValid;

    QList<OAITest_getTestReport_200_response_snapshot_fatal_errors_inner> m_snapshot_fatal_errors;
    bool m_snapshot_fatal_errors_isSet;
    bool m_snapshot_fatal_errors_isValid;

    OAITest_getTestReport_200_response_stats m_stats;
    bool m_stats_isSet;
    bool m_stats_isValid;

    QString m_test_type;
    bool m_test_type_isSet;
    bool m_test_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestReport)

#endif // OAITestReport_H
