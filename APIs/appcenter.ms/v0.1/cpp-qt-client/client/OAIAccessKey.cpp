/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccessKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccessKey::OAIAccessKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccessKey::OAIAccessKey() {
    this->initializeModel();
}

OAIAccessKey::~OAIAccessKey() {}

void OAIAccessKey::initializeModel() {

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_expires_isSet = false;
    m_expires_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_session_isSet = false;
    m_is_session_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAccessKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccessKey::fromJsonObject(QJsonObject json) {

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("createdTime")]);
    m_created_time_isSet = !json[QString("createdTime")].isNull() && m_created_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_expires_isValid = ::OpenAPI::fromJsonValue(m_expires, json[QString("expires")]);
    m_expires_isSet = !json[QString("expires")].isNull() && m_expires_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_session_isValid = ::OpenAPI::fromJsonValue(m_is_session, json[QString("isSession")]);
    m_is_session_isSet = !json[QString("isSession")].isNull() && m_is_session_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAccessKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccessKey::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("createdTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_expires_isSet) {
        obj.insert(QString("expires"), ::OpenAPI::toJsonValue(m_expires));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_session_isSet) {
        obj.insert(QString("isSession"), ::OpenAPI::toJsonValue(m_is_session));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIAccessKey::getCreatedBy() const {
    return m_created_by;
}
void OAIAccessKey::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIAccessKey::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIAccessKey::is_created_by_Valid() const{
    return m_created_by_isValid;
}

double OAIAccessKey::getCreatedTime() const {
    return m_created_time;
}
void OAIAccessKey::setCreatedTime(const double &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIAccessKey::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIAccessKey::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIAccessKey::getDescription() const {
    return m_description;
}
void OAIAccessKey::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAccessKey::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAccessKey::is_description_Valid() const{
    return m_description_isValid;
}

double OAIAccessKey::getExpires() const {
    return m_expires;
}
void OAIAccessKey::setExpires(const double &expires) {
    m_expires = expires;
    m_expires_isSet = true;
}

bool OAIAccessKey::is_expires_Set() const{
    return m_expires_isSet;
}

bool OAIAccessKey::is_expires_Valid() const{
    return m_expires_isValid;
}

QString OAIAccessKey::getFriendlyName() const {
    return m_friendly_name;
}
void OAIAccessKey::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIAccessKey::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIAccessKey::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIAccessKey::getId() const {
    return m_id;
}
void OAIAccessKey::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccessKey::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccessKey::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIAccessKey::isIsSession() const {
    return m_is_session;
}
void OAIAccessKey::setIsSession(const bool &is_session) {
    m_is_session = is_session;
    m_is_session_isSet = true;
}

bool OAIAccessKey::is_is_session_Set() const{
    return m_is_session_isSet;
}

bool OAIAccessKey::is_is_session_Valid() const{
    return m_is_session_isValid;
}

QString OAIAccessKey::getName() const {
    return m_name;
}
void OAIAccessKey::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAccessKey::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAccessKey::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAccessKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expires_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_session_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccessKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
