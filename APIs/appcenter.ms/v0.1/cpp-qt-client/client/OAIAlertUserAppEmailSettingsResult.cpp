/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertUserAppEmailSettingsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertUserAppEmailSettingsResult::OAIAlertUserAppEmailSettingsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertUserAppEmailSettingsResult::OAIAlertUserAppEmailSettingsResult() {
    this->initializeModel();
}

OAIAlertUserAppEmailSettingsResult::~OAIAlertUserAppEmailSettingsResult() {}

void OAIAlertUserAppEmailSettingsResult::initializeModel() {

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_e_tag_isSet = false;
    m_e_tag_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_user_enabled_isSet = false;
    m_user_enabled_isValid = false;
}

void OAIAlertUserAppEmailSettingsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertUserAppEmailSettingsResult::fromJsonObject(QJsonObject json) {

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;

    m_e_tag_isValid = ::OpenAPI::fromJsonValue(m_e_tag, json[QString("eTag")]);
    m_e_tag_isSet = !json[QString("eTag")].isNull() && m_e_tag_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_user_enabled_isValid = ::OpenAPI::fromJsonValue(m_user_enabled, json[QString("user_enabled")]);
    m_user_enabled_isSet = !json[QString("user_enabled")].isNull() && m_user_enabled_isValid;
}

QString OAIAlertUserAppEmailSettingsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertUserAppEmailSettingsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_e_tag_isSet) {
        obj.insert(QString("eTag"), ::OpenAPI::toJsonValue(m_e_tag));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_settings.size() > 0) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_user_enabled_isSet) {
        obj.insert(QString("user_enabled"), ::OpenAPI::toJsonValue(m_user_enabled));
    }
    return obj;
}

QString OAIAlertUserAppEmailSettingsResult::getRequestId() const {
    return m_request_id;
}
void OAIAlertUserAppEmailSettingsResult::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIAlertUserAppEmailSettingsResult::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIAlertUserAppEmailSettingsResult::is_request_id_Valid() const{
    return m_request_id_isValid;
}

QString OAIAlertUserAppEmailSettingsResult::getETag() const {
    return m_e_tag;
}
void OAIAlertUserAppEmailSettingsResult::setETag(const QString &e_tag) {
    m_e_tag = e_tag;
    m_e_tag_isSet = true;
}

bool OAIAlertUserAppEmailSettingsResult::is_e_tag_Set() const{
    return m_e_tag_isSet;
}

bool OAIAlertUserAppEmailSettingsResult::is_e_tag_Valid() const{
    return m_e_tag_isValid;
}

bool OAIAlertUserAppEmailSettingsResult::isEnabled() const {
    return m_enabled;
}
void OAIAlertUserAppEmailSettingsResult::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIAlertUserAppEmailSettingsResult::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIAlertUserAppEmailSettingsResult::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QList<OAIObject> OAIAlertUserAppEmailSettingsResult::getSettings() const {
    return m_settings;
}
void OAIAlertUserAppEmailSettingsResult::setSettings(const QList<OAIObject> &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAIAlertUserAppEmailSettingsResult::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAIAlertUserAppEmailSettingsResult::is_settings_Valid() const{
    return m_settings_isValid;
}

QString OAIAlertUserAppEmailSettingsResult::getUserId() const {
    return m_user_id;
}
void OAIAlertUserAppEmailSettingsResult::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIAlertUserAppEmailSettingsResult::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIAlertUserAppEmailSettingsResult::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIAlertUserAppEmailSettingsResult::getAppId() const {
    return m_app_id;
}
void OAIAlertUserAppEmailSettingsResult::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIAlertUserAppEmailSettingsResult::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIAlertUserAppEmailSettingsResult::is_app_id_Valid() const{
    return m_app_id_isValid;
}

bool OAIAlertUserAppEmailSettingsResult::isUserEnabled() const {
    return m_user_enabled;
}
void OAIAlertUserAppEmailSettingsResult::setUserEnabled(const bool &user_enabled) {
    m_user_enabled = user_enabled;
    m_user_enabled_isSet = true;
}

bool OAIAlertUserAppEmailSettingsResult::is_user_enabled_Set() const{
    return m_user_enabled_isSet;
}

bool OAIAlertUserAppEmailSettingsResult::is_user_enabled_Valid() const{
    return m_user_enabled_isValid;
}

bool OAIAlertUserAppEmailSettingsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertUserAppEmailSettingsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_request_id_isValid && m_enabled_isValid && m_settings_isValid && m_user_enabled_isValid && true;
}

} // namespace OpenAPI
