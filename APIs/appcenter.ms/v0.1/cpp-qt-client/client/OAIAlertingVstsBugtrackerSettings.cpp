/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertingVstsBugtrackerSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertingVstsBugtrackerSettings::OAIAlertingVstsBugtrackerSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertingVstsBugtrackerSettings::OAIAlertingVstsBugtrackerSettings() {
    this->initializeModel();
}

OAIAlertingVstsBugtrackerSettings::~OAIAlertingVstsBugtrackerSettings() {}

void OAIAlertingVstsBugtrackerSettings::initializeModel() {

    m_vsts_account_name_isSet = false;
    m_vsts_account_name_isValid = false;

    m_vsts_area_path_isSet = false;
    m_vsts_area_path_isValid = false;

    m_vsts_default_payload_isSet = false;
    m_vsts_default_payload_isValid = false;

    m_vsts_project_id_isSet = false;
    m_vsts_project_id_isValid = false;

    m_vsts_project_name_isSet = false;
    m_vsts_project_name_isValid = false;

    m_vsts_project_uri_isSet = false;
    m_vsts_project_uri_isValid = false;

    m_callback_url_isSet = false;
    m_callback_url_isValid = false;

    m_owner_name_isSet = false;
    m_owner_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAlertingVstsBugtrackerSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertingVstsBugtrackerSettings::fromJsonObject(QJsonObject json) {

    m_vsts_account_name_isValid = ::OpenAPI::fromJsonValue(m_vsts_account_name, json[QString("vsts_account_name")]);
    m_vsts_account_name_isSet = !json[QString("vsts_account_name")].isNull() && m_vsts_account_name_isValid;

    m_vsts_area_path_isValid = ::OpenAPI::fromJsonValue(m_vsts_area_path, json[QString("vsts_area_path")]);
    m_vsts_area_path_isSet = !json[QString("vsts_area_path")].isNull() && m_vsts_area_path_isValid;

    m_vsts_default_payload_isValid = ::OpenAPI::fromJsonValue(m_vsts_default_payload, json[QString("vsts_default_payload")]);
    m_vsts_default_payload_isSet = !json[QString("vsts_default_payload")].isNull() && m_vsts_default_payload_isValid;

    m_vsts_project_id_isValid = ::OpenAPI::fromJsonValue(m_vsts_project_id, json[QString("vsts_project_id")]);
    m_vsts_project_id_isSet = !json[QString("vsts_project_id")].isNull() && m_vsts_project_id_isValid;

    m_vsts_project_name_isValid = ::OpenAPI::fromJsonValue(m_vsts_project_name, json[QString("vsts_project_name")]);
    m_vsts_project_name_isSet = !json[QString("vsts_project_name")].isNull() && m_vsts_project_name_isValid;

    m_vsts_project_uri_isValid = ::OpenAPI::fromJsonValue(m_vsts_project_uri, json[QString("vsts_project_uri")]);
    m_vsts_project_uri_isSet = !json[QString("vsts_project_uri")].isNull() && m_vsts_project_uri_isValid;

    m_callback_url_isValid = ::OpenAPI::fromJsonValue(m_callback_url, json[QString("callback_url")]);
    m_callback_url_isSet = !json[QString("callback_url")].isNull() && m_callback_url_isValid;

    m_owner_name_isValid = ::OpenAPI::fromJsonValue(m_owner_name, json[QString("owner_name")]);
    m_owner_name_isSet = !json[QString("owner_name")].isNull() && m_owner_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAlertingVstsBugtrackerSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertingVstsBugtrackerSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_vsts_account_name_isSet) {
        obj.insert(QString("vsts_account_name"), ::OpenAPI::toJsonValue(m_vsts_account_name));
    }
    if (m_vsts_area_path_isSet) {
        obj.insert(QString("vsts_area_path"), ::OpenAPI::toJsonValue(m_vsts_area_path));
    }
    if (m_vsts_default_payload_isSet) {
        obj.insert(QString("vsts_default_payload"), ::OpenAPI::toJsonValue(m_vsts_default_payload));
    }
    if (m_vsts_project_id_isSet) {
        obj.insert(QString("vsts_project_id"), ::OpenAPI::toJsonValue(m_vsts_project_id));
    }
    if (m_vsts_project_name_isSet) {
        obj.insert(QString("vsts_project_name"), ::OpenAPI::toJsonValue(m_vsts_project_name));
    }
    if (m_vsts_project_uri_isSet) {
        obj.insert(QString("vsts_project_uri"), ::OpenAPI::toJsonValue(m_vsts_project_uri));
    }
    if (m_callback_url_isSet) {
        obj.insert(QString("callback_url"), ::OpenAPI::toJsonValue(m_callback_url));
    }
    if (m_owner_name_isSet) {
        obj.insert(QString("owner_name"), ::OpenAPI::toJsonValue(m_owner_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIAlertingVstsBugtrackerSettings::getVstsAccountName() const {
    return m_vsts_account_name;
}
void OAIAlertingVstsBugtrackerSettings::setVstsAccountName(const QString &vsts_account_name) {
    m_vsts_account_name = vsts_account_name;
    m_vsts_account_name_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_account_name_Set() const{
    return m_vsts_account_name_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_account_name_Valid() const{
    return m_vsts_account_name_isValid;
}

QString OAIAlertingVstsBugtrackerSettings::getVstsAreaPath() const {
    return m_vsts_area_path;
}
void OAIAlertingVstsBugtrackerSettings::setVstsAreaPath(const QString &vsts_area_path) {
    m_vsts_area_path = vsts_area_path;
    m_vsts_area_path_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_area_path_Set() const{
    return m_vsts_area_path_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_area_path_Valid() const{
    return m_vsts_area_path_isValid;
}

OAIObject OAIAlertingVstsBugtrackerSettings::getVstsDefaultPayload() const {
    return m_vsts_default_payload;
}
void OAIAlertingVstsBugtrackerSettings::setVstsDefaultPayload(const OAIObject &vsts_default_payload) {
    m_vsts_default_payload = vsts_default_payload;
    m_vsts_default_payload_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_default_payload_Set() const{
    return m_vsts_default_payload_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_default_payload_Valid() const{
    return m_vsts_default_payload_isValid;
}

QString OAIAlertingVstsBugtrackerSettings::getVstsProjectId() const {
    return m_vsts_project_id;
}
void OAIAlertingVstsBugtrackerSettings::setVstsProjectId(const QString &vsts_project_id) {
    m_vsts_project_id = vsts_project_id;
    m_vsts_project_id_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_project_id_Set() const{
    return m_vsts_project_id_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_project_id_Valid() const{
    return m_vsts_project_id_isValid;
}

QString OAIAlertingVstsBugtrackerSettings::getVstsProjectName() const {
    return m_vsts_project_name;
}
void OAIAlertingVstsBugtrackerSettings::setVstsProjectName(const QString &vsts_project_name) {
    m_vsts_project_name = vsts_project_name;
    m_vsts_project_name_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_project_name_Set() const{
    return m_vsts_project_name_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_project_name_Valid() const{
    return m_vsts_project_name_isValid;
}

QString OAIAlertingVstsBugtrackerSettings::getVstsProjectUri() const {
    return m_vsts_project_uri;
}
void OAIAlertingVstsBugtrackerSettings::setVstsProjectUri(const QString &vsts_project_uri) {
    m_vsts_project_uri = vsts_project_uri;
    m_vsts_project_uri_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_project_uri_Set() const{
    return m_vsts_project_uri_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_vsts_project_uri_Valid() const{
    return m_vsts_project_uri_isValid;
}

QString OAIAlertingVstsBugtrackerSettings::getCallbackUrl() const {
    return m_callback_url;
}
void OAIAlertingVstsBugtrackerSettings::setCallbackUrl(const QString &callback_url) {
    m_callback_url = callback_url;
    m_callback_url_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_callback_url_Set() const{
    return m_callback_url_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_callback_url_Valid() const{
    return m_callback_url_isValid;
}

QString OAIAlertingVstsBugtrackerSettings::getOwnerName() const {
    return m_owner_name;
}
void OAIAlertingVstsBugtrackerSettings::setOwnerName(const QString &owner_name) {
    m_owner_name = owner_name;
    m_owner_name_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_owner_name_Set() const{
    return m_owner_name_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_owner_name_Valid() const{
    return m_owner_name_isValid;
}

QString OAIAlertingVstsBugtrackerSettings::getType() const {
    return m_type;
}
void OAIAlertingVstsBugtrackerSettings::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAlertingVstsBugtrackerSettings::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAlertingVstsBugtrackerSettings::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAlertingVstsBugtrackerSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vsts_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vsts_area_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vsts_default_payload_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vsts_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vsts_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vsts_project_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_callback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertingVstsBugtrackerSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vsts_project_id_isValid && m_vsts_project_uri_isValid && m_owner_name_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
