/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICrashGroupCarriers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICrashGroupCarriers::OAICrashGroupCarriers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICrashGroupCarriers::OAICrashGroupCarriers() {
    this->initializeModel();
}

OAICrashGroupCarriers::~OAICrashGroupCarriers() {}

void OAICrashGroupCarriers::initializeModel() {

    m_carriers_isSet = false;
    m_carriers_isValid = false;

    m_crash_count_isSet = false;
    m_crash_count_isValid = false;
}

void OAICrashGroupCarriers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICrashGroupCarriers::fromJsonObject(QJsonObject json) {

    m_carriers_isValid = ::OpenAPI::fromJsonValue(m_carriers, json[QString("carriers")]);
    m_carriers_isSet = !json[QString("carriers")].isNull() && m_carriers_isValid;

    m_crash_count_isValid = ::OpenAPI::fromJsonValue(m_crash_count, json[QString("crash_count")]);
    m_crash_count_isSet = !json[QString("crash_count")].isNull() && m_crash_count_isValid;
}

QString OAICrashGroupCarriers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICrashGroupCarriers::asJsonObject() const {
    QJsonObject obj;
    if (m_carriers.size() > 0) {
        obj.insert(QString("carriers"), ::OpenAPI::toJsonValue(m_carriers));
    }
    if (m_crash_count_isSet) {
        obj.insert(QString("crash_count"), ::OpenAPI::toJsonValue(m_crash_count));
    }
    return obj;
}

QList<OAICrashGroupCarriers_carriers_inner> OAICrashGroupCarriers::getCarriers() const {
    return m_carriers;
}
void OAICrashGroupCarriers::setCarriers(const QList<OAICrashGroupCarriers_carriers_inner> &carriers) {
    m_carriers = carriers;
    m_carriers_isSet = true;
}

bool OAICrashGroupCarriers::is_carriers_Set() const{
    return m_carriers_isSet;
}

bool OAICrashGroupCarriers::is_carriers_Valid() const{
    return m_carriers_isValid;
}

qint64 OAICrashGroupCarriers::getCrashCount() const {
    return m_crash_count;
}
void OAICrashGroupCarriers::setCrashCount(const qint64 &crash_count) {
    m_crash_count = crash_count;
    m_crash_count_isSet = true;
}

bool OAICrashGroupCarriers::is_crash_count_Set() const{
    return m_crash_count_isSet;
}

bool OAICrashGroupCarriers::is_crash_count_Valid() const{
    return m_crash_count_isValid;
}

bool OAICrashGroupCarriers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carriers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_crash_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICrashGroupCarriers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
