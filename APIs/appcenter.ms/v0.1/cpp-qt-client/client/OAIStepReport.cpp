/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStepReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStepReport::OAIStepReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStepReport::OAIStepReport() {
    this->initializeModel();
}

OAIStepReport::~OAIStepReport() {}

void OAIStepReport::initializeModel() {

    m_device_screenshots_isSet = false;
    m_device_screenshots_isValid = false;

    m_finished_snapshots_isSet = false;
    m_finished_snapshots_isValid = false;
}

void OAIStepReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStepReport::fromJsonObject(QJsonObject json) {

    m_device_screenshots_isValid = ::OpenAPI::fromJsonValue(m_device_screenshots, json[QString("deviceScreenshots")]);
    m_device_screenshots_isSet = !json[QString("deviceScreenshots")].isNull() && m_device_screenshots_isValid;

    m_finished_snapshots_isValid = ::OpenAPI::fromJsonValue(m_finished_snapshots, json[QString("finishedSnapshots")]);
    m_finished_snapshots_isSet = !json[QString("finishedSnapshots")].isNull() && m_finished_snapshots_isValid;
}

QString OAIStepReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStepReport::asJsonObject() const {
    QJsonObject obj;
    if (m_device_screenshots.size() > 0) {
        obj.insert(QString("deviceScreenshots"), ::OpenAPI::toJsonValue(m_device_screenshots));
    }
    if (m_finished_snapshots.size() > 0) {
        obj.insert(QString("finishedSnapshots"), ::OpenAPI::toJsonValue(m_finished_snapshots));
    }
    return obj;
}

QList<OAIStepReport_deviceScreenshots_inner> OAIStepReport::getDeviceScreenshots() const {
    return m_device_screenshots;
}
void OAIStepReport::setDeviceScreenshots(const QList<OAIStepReport_deviceScreenshots_inner> &device_screenshots) {
    m_device_screenshots = device_screenshots;
    m_device_screenshots_isSet = true;
}

bool OAIStepReport::is_device_screenshots_Set() const{
    return m_device_screenshots_isSet;
}

bool OAIStepReport::is_device_screenshots_Valid() const{
    return m_device_screenshots_isValid;
}

QList<QString> OAIStepReport::getFinishedSnapshots() const {
    return m_finished_snapshots;
}
void OAIStepReport::setFinishedSnapshots(const QList<QString> &finished_snapshots) {
    m_finished_snapshots = finished_snapshots;
    m_finished_snapshots_isSet = true;
}

bool OAIStepReport::is_finished_snapshots_Set() const{
    return m_finished_snapshots_isSet;
}

bool OAIStepReport::is_finished_snapshots_Valid() const{
    return m_finished_snapshots_isValid;
}

bool OAIStepReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_screenshots.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_finished_snapshots.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStepReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_device_screenshots_isValid && m_finished_snapshots_isValid && true;
}

} // namespace OpenAPI
