/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserProfileResponseManagement_allOf_identity_providers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserProfileResponseManagement_allOf_identity_providers::OAIUserProfileResponseManagement_allOf_identity_providers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserProfileResponseManagement_allOf_identity_providers::OAIUserProfileResponseManagement_allOf_identity_providers() {
    this->initializeModel();
}

OAIUserProfileResponseManagement_allOf_identity_providers::~OAIUserProfileResponseManagement_allOf_identity_providers() {}

void OAIUserProfileResponseManagement_allOf_identity_providers::initializeModel() {

    m_origin_isSet = false;
    m_origin_isValid = false;

    m_provider_name_isSet = false;
    m_provider_name_isValid = false;
}

void OAIUserProfileResponseManagement_allOf_identity_providers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserProfileResponseManagement_allOf_identity_providers::fromJsonObject(QJsonObject json) {

    m_origin_isValid = ::OpenAPI::fromJsonValue(m_origin, json[QString("origin")]);
    m_origin_isSet = !json[QString("origin")].isNull() && m_origin_isValid;

    m_provider_name_isValid = ::OpenAPI::fromJsonValue(m_provider_name, json[QString("provider_name")]);
    m_provider_name_isSet = !json[QString("provider_name")].isNull() && m_provider_name_isValid;
}

QString OAIUserProfileResponseManagement_allOf_identity_providers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserProfileResponseManagement_allOf_identity_providers::asJsonObject() const {
    QJsonObject obj;
    if (m_origin_isSet) {
        obj.insert(QString("origin"), ::OpenAPI::toJsonValue(m_origin));
    }
    if (m_provider_name_isSet) {
        obj.insert(QString("provider_name"), ::OpenAPI::toJsonValue(m_provider_name));
    }
    return obj;
}

QString OAIUserProfileResponseManagement_allOf_identity_providers::getOrigin() const {
    return m_origin;
}
void OAIUserProfileResponseManagement_allOf_identity_providers::setOrigin(const QString &origin) {
    m_origin = origin;
    m_origin_isSet = true;
}

bool OAIUserProfileResponseManagement_allOf_identity_providers::is_origin_Set() const{
    return m_origin_isSet;
}

bool OAIUserProfileResponseManagement_allOf_identity_providers::is_origin_Valid() const{
    return m_origin_isValid;
}

QString OAIUserProfileResponseManagement_allOf_identity_providers::getProviderName() const {
    return m_provider_name;
}
void OAIUserProfileResponseManagement_allOf_identity_providers::setProviderName(const QString &provider_name) {
    m_provider_name = provider_name;
    m_provider_name_isSet = true;
}

bool OAIUserProfileResponseManagement_allOf_identity_providers::is_provider_name_Set() const{
    return m_provider_name_isSet;
}

bool OAIUserProfileResponseManagement_allOf_identity_providers::is_provider_name_Valid() const{
    return m_provider_name_isValid;
}

bool OAIUserProfileResponseManagement_allOf_identity_providers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_origin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserProfileResponseManagement_allOf_identity_providers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
