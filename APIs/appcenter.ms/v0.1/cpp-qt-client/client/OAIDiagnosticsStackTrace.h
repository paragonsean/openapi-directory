/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiagnosticsStackTrace.h
 *
 * a stacktrace in a processed and prettyfied way
 */

#ifndef OAIDiagnosticsStackTrace_H
#define OAIDiagnosticsStackTrace_H

#include <QJsonObject>

#include "OAIDiagnosticsException.h"
#include "OAIDiagnosticsThread.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiagnosticsException;
class OAIDiagnosticsThread;

class OAIDiagnosticsStackTrace : public OAIObject {
public:
    OAIDiagnosticsStackTrace();
    OAIDiagnosticsStackTrace(QString json);
    ~OAIDiagnosticsStackTrace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiagnosticsException getException() const;
    void setException(const OAIDiagnosticsException &exception);
    bool is_exception_Set() const;
    bool is_exception_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QList<OAIDiagnosticsThread> getThreads() const;
    void setThreads(const QList<OAIDiagnosticsThread> &threads);
    bool is_threads_Set() const;
    bool is_threads_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiagnosticsException m_exception;
    bool m_exception_isSet;
    bool m_exception_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QList<OAIDiagnosticsThread> m_threads;
    bool m_threads_isSet;
    bool m_threads_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiagnosticsStackTrace)

#endif // OAIDiagnosticsStackTrace_H
