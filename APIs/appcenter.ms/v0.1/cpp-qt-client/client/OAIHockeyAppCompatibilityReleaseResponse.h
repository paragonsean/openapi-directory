/**
 * App Center Client
 * Microsoft Visual Studio App Center API
 *
 * The version of the OpenAPI document: v0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHockeyAppCompatibilityReleaseResponse.h
 *
 * 
 */

#ifndef OAIHockeyAppCompatibilityReleaseResponse_H
#define OAIHockeyAppCompatibilityReleaseResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHockeyAppCompatibilityReleaseResponse : public OAIObject {
public:
    OAIHockeyAppCompatibilityReleaseResponse();
    OAIHockeyAppCompatibilityReleaseResponse(QString json);
    ~OAIHockeyAppCompatibilityReleaseResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAppsize() const;
    void setAppsize(const qint32 &appsize);
    bool is_appsize_Set() const;
    bool is_appsize_Valid() const;

    QString getBundleIdentifier() const;
    void setBundleIdentifier(const QString &bundle_identifier);
    bool is_bundle_identifier_Set() const;
    bool is_bundle_identifier_Valid() const;

    QString getDeviceFamily() const;
    void setDeviceFamily(const QString &device_family);
    bool is_device_family_Set() const;
    bool is_device_family_Valid() const;

    bool isExternal() const;
    void setExternal(const bool &external);
    bool is_external_Set() const;
    bool is_external_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInstallUrl() const;
    void setInstallUrl(const QString &install_url);
    bool is_install_url_Set() const;
    bool is_install_url_Valid() const;

    bool isMandatory() const;
    void setMandatory(const bool &mandatory);
    bool is_mandatory_Set() const;
    bool is_mandatory_Valid() const;

    QString getMinimumOsVersion() const;
    void setMinimumOsVersion(const QString &minimum_os_version);
    bool is_minimum_os_version_Set() const;
    bool is_minimum_os_version_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getShortversion() const;
    void setShortversion(const QString &shortversion);
    bool is_shortversion_Set() const;
    bool is_shortversion_Valid() const;

    QString getUploadedAt() const;
    void setUploadedAt(const QString &uploaded_at);
    bool is_uploaded_at_Set() const;
    bool is_uploaded_at_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_appsize;
    bool m_appsize_isSet;
    bool m_appsize_isValid;

    QString m_bundle_identifier;
    bool m_bundle_identifier_isSet;
    bool m_bundle_identifier_isValid;

    QString m_device_family;
    bool m_device_family_isSet;
    bool m_device_family_isValid;

    bool m_external;
    bool m_external_isSet;
    bool m_external_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_install_url;
    bool m_install_url_isSet;
    bool m_install_url_isValid;

    bool m_mandatory;
    bool m_mandatory_isSet;
    bool m_mandatory_isValid;

    QString m_minimum_os_version;
    bool m_minimum_os_version_isSet;
    bool m_minimum_os_version_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_shortversion;
    bool m_shortversion_isSet;
    bool m_shortversion_isValid;

    QString m_uploaded_at;
    bool m_uploaded_at_isSet;
    bool m_uploaded_at_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHockeyAppCompatibilityReleaseResponse)

#endif // OAIHockeyAppCompatibilityReleaseResponse_H
