# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Data2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_expires: int=None, _schema: Dict[str, object]=None):
        """Data2 - a model defined in OpenAPI

        :param cache_expires: The cache_expires of this Data2.
        :param _schema: The _schema of this Data2.
        """
        self.openapi_types = {
            'cache_expires': int,
            '_schema': Dict[str, object]
        }

        self.attribute_map = {
            'cache_expires': 'cache_expires',
            '_schema': 'schema'
        }

        self._cache_expires = cache_expires
        self.__schema = _schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Data2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Data_2 of this Data2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_expires(self):
        """Gets the cache_expires of this Data2.


        :return: The cache_expires of this Data2.
        :rtype: int
        """
        return self._cache_expires

    @cache_expires.setter
    def cache_expires(self, cache_expires):
        """Sets the cache_expires of this Data2.


        :param cache_expires: The cache_expires of this Data2.
        :type cache_expires: int
        """

        self._cache_expires = cache_expires

    @property
    def _schema(self):
        """Gets the _schema of this Data2.


        :return: The _schema of this Data2.
        :rtype: Dict[str, object]
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this Data2.


        :param _schema: The _schema of this Data2.
        :type _schema: Dict[str, object]
        """

        self.__schema = _schema
