# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Permissions2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collectioncreate: List[str]=None, groupcreate: List[str]=None, read: List[str]=None, write: List[str]=None):
        """Permissions2 - a model defined in OpenAPI

        :param collectioncreate: The collectioncreate of this Permissions2.
        :param groupcreate: The groupcreate of this Permissions2.
        :param read: The read of this Permissions2.
        :param write: The write of this Permissions2.
        """
        self.openapi_types = {
            'collectioncreate': List[str],
            'groupcreate': List[str],
            'read': List[str],
            'write': List[str]
        }

        self.attribute_map = {
            'collectioncreate': 'collection:create',
            'groupcreate': 'group:create',
            'read': 'read',
            'write': 'write'
        }

        self._collectioncreate = collectioncreate
        self._groupcreate = groupcreate
        self._read = read
        self._write = write

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Permissions2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Permissions_2 of this Permissions2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collectioncreate(self):
        """Gets the collectioncreate of this Permissions2.


        :return: The collectioncreate of this Permissions2.
        :rtype: List[str]
        """
        return self._collectioncreate

    @collectioncreate.setter
    def collectioncreate(self, collectioncreate):
        """Sets the collectioncreate of this Permissions2.


        :param collectioncreate: The collectioncreate of this Permissions2.
        :type collectioncreate: List[str]
        """

        self._collectioncreate = collectioncreate

    @property
    def groupcreate(self):
        """Gets the groupcreate of this Permissions2.


        :return: The groupcreate of this Permissions2.
        :rtype: List[str]
        """
        return self._groupcreate

    @groupcreate.setter
    def groupcreate(self, groupcreate):
        """Sets the groupcreate of this Permissions2.


        :param groupcreate: The groupcreate of this Permissions2.
        :type groupcreate: List[str]
        """

        self._groupcreate = groupcreate

    @property
    def read(self):
        """Gets the read of this Permissions2.


        :return: The read of this Permissions2.
        :rtype: List[str]
        """
        return self._read

    @read.setter
    def read(self, read):
        """Sets the read of this Permissions2.


        :param read: The read of this Permissions2.
        :type read: List[str]
        """

        self._read = read

    @property
    def write(self):
        """Gets the write of this Permissions2.


        :return: The write of this Permissions2.
        :rtype: List[str]
        """
        return self._write

    @write.setter
    def write(self, write):
        """Sets the write of this Permissions2.


        :param write: The write of this Permissions2.
        :type write: List[str]
        """

        self._write = write
