/**
 * Remote Settings PROD
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.22
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPermissions_2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPermissions_2::OAIPermissions_2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPermissions_2::OAIPermissions_2() {
    this->initializeModel();
}

OAIPermissions_2::~OAIPermissions_2() {}

void OAIPermissions_2::initializeModel() {

    m_collectioncreate_isSet = false;
    m_collectioncreate_isValid = false;

    m_groupcreate_isSet = false;
    m_groupcreate_isValid = false;

    m_read_isSet = false;
    m_read_isValid = false;

    m_write_isSet = false;
    m_write_isValid = false;
}

void OAIPermissions_2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPermissions_2::fromJsonObject(QJsonObject json) {

    m_collectioncreate_isValid = ::OpenAPI::fromJsonValue(m_collectioncreate, json[QString("collection:create")]);
    m_collectioncreate_isSet = !json[QString("collection:create")].isNull() && m_collectioncreate_isValid;

    m_groupcreate_isValid = ::OpenAPI::fromJsonValue(m_groupcreate, json[QString("group:create")]);
    m_groupcreate_isSet = !json[QString("group:create")].isNull() && m_groupcreate_isValid;

    m_read_isValid = ::OpenAPI::fromJsonValue(m_read, json[QString("read")]);
    m_read_isSet = !json[QString("read")].isNull() && m_read_isValid;

    m_write_isValid = ::OpenAPI::fromJsonValue(m_write, json[QString("write")]);
    m_write_isSet = !json[QString("write")].isNull() && m_write_isValid;
}

QString OAIPermissions_2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPermissions_2::asJsonObject() const {
    QJsonObject obj;
    if (m_collectioncreate.size() > 0) {
        obj.insert(QString("collection:create"), ::OpenAPI::toJsonValue(m_collectioncreate));
    }
    if (m_groupcreate.size() > 0) {
        obj.insert(QString("group:create"), ::OpenAPI::toJsonValue(m_groupcreate));
    }
    if (m_read.size() > 0) {
        obj.insert(QString("read"), ::OpenAPI::toJsonValue(m_read));
    }
    if (m_write.size() > 0) {
        obj.insert(QString("write"), ::OpenAPI::toJsonValue(m_write));
    }
    return obj;
}

QList<QString> OAIPermissions_2::getCollectioncreate() const {
    return m_collectioncreate;
}
void OAIPermissions_2::setCollectioncreate(const QList<QString> &collectioncreate) {
    m_collectioncreate = collectioncreate;
    m_collectioncreate_isSet = true;
}

bool OAIPermissions_2::is_collectioncreate_Set() const{
    return m_collectioncreate_isSet;
}

bool OAIPermissions_2::is_collectioncreate_Valid() const{
    return m_collectioncreate_isValid;
}

QList<QString> OAIPermissions_2::getGroupcreate() const {
    return m_groupcreate;
}
void OAIPermissions_2::setGroupcreate(const QList<QString> &groupcreate) {
    m_groupcreate = groupcreate;
    m_groupcreate_isSet = true;
}

bool OAIPermissions_2::is_groupcreate_Set() const{
    return m_groupcreate_isSet;
}

bool OAIPermissions_2::is_groupcreate_Valid() const{
    return m_groupcreate_isValid;
}

QList<QString> OAIPermissions_2::getRead() const {
    return m_read;
}
void OAIPermissions_2::setRead(const QList<QString> &read) {
    m_read = read;
    m_read_isSet = true;
}

bool OAIPermissions_2::is_read_Set() const{
    return m_read_isSet;
}

bool OAIPermissions_2::is_read_Valid() const{
    return m_read_isValid;
}

QList<QString> OAIPermissions_2::getWrite() const {
    return m_write;
}
void OAIPermissions_2::setWrite(const QList<QString> &write) {
    m_write = write;
    m_write_isSet = true;
}

bool OAIPermissions_2::is_write_Set() const{
    return m_write_isSet;
}

bool OAIPermissions_2::is_write_Valid() const{
    return m_write_isValid;
}

bool OAIPermissions_2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collectioncreate.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_groupcreate.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_read.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_write.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPermissions_2::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
