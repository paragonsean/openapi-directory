/**
 * Remote Settings PROD
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.22
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchPayloadSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchPayloadSchema::OAIBatchPayloadSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchPayloadSchema::OAIBatchPayloadSchema() {
    this->initializeModel();
}

OAIBatchPayloadSchema::~OAIBatchPayloadSchema() {}

void OAIBatchPayloadSchema::initializeModel() {

    m_defaults_isSet = false;
    m_defaults_isValid = false;

    m_requests_isSet = false;
    m_requests_isValid = false;
}

void OAIBatchPayloadSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchPayloadSchema::fromJsonObject(QJsonObject json) {

    m_defaults_isValid = ::OpenAPI::fromJsonValue(m_defaults, json[QString("defaults")]);
    m_defaults_isSet = !json[QString("defaults")].isNull() && m_defaults_isValid;

    m_requests_isValid = ::OpenAPI::fromJsonValue(m_requests, json[QString("requests")]);
    m_requests_isSet = !json[QString("requests")].isNull() && m_requests_isValid;
}

QString OAIBatchPayloadSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchPayloadSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_defaults.isSet()) {
        obj.insert(QString("defaults"), ::OpenAPI::toJsonValue(m_defaults));
    }
    if (m_requests.size() > 0) {
        obj.insert(QString("requests"), ::OpenAPI::toJsonValue(m_requests));
    }
    return obj;
}

OAIDefaults OAIBatchPayloadSchema::getDefaults() const {
    return m_defaults;
}
void OAIBatchPayloadSchema::setDefaults(const OAIDefaults &defaults) {
    m_defaults = defaults;
    m_defaults_isSet = true;
}

bool OAIBatchPayloadSchema::is_defaults_Set() const{
    return m_defaults_isSet;
}

bool OAIBatchPayloadSchema::is_defaults_Valid() const{
    return m_defaults_isValid;
}

QList<OAIRequests_inner> OAIBatchPayloadSchema::getRequests() const {
    return m_requests;
}
void OAIBatchPayloadSchema::setRequests(const QList<OAIRequests_inner> &requests) {
    m_requests = requests;
    m_requests_isSet = true;
}

bool OAIBatchPayloadSchema::is_requests_Set() const{
    return m_requests_isSet;
}

bool OAIBatchPayloadSchema::is_requests_Valid() const{
    return m_requests_isValid;
}

bool OAIBatchPayloadSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_defaults.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchPayloadSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_requests_isValid && true;
}

} // namespace OpenAPI
