/**
 * Remote Settings PROD
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Permissions2 model module.
 * @module model/Permissions2
 * @version 1.22
 */
class Permissions2 {
    /**
     * Constructs a new <code>Permissions2</code>.
     * @alias module:model/Permissions2
     */
    constructor() { 
        
        Permissions2.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Permissions2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Permissions2} obj Optional instance to populate.
     * @return {module:model/Permissions2} The populated <code>Permissions2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Permissions2();

            if (data.hasOwnProperty('collection:create')) {
                obj['collection:create'] = ApiClient.convertToType(data['collection:create'], ['String']);
            }
            if (data.hasOwnProperty('group:create')) {
                obj['group:create'] = ApiClient.convertToType(data['group:create'], ['String']);
            }
            if (data.hasOwnProperty('read')) {
                obj['read'] = ApiClient.convertToType(data['read'], ['String']);
            }
            if (data.hasOwnProperty('write')) {
                obj['write'] = ApiClient.convertToType(data['write'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Permissions2</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Permissions2</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['collection:create'])) {
            throw new Error("Expected the field `collection:create` to be an array in the JSON data but got " + data['collection:create']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['group:create'])) {
            throw new Error("Expected the field `group:create` to be an array in the JSON data but got " + data['group:create']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['read'])) {
            throw new Error("Expected the field `read` to be an array in the JSON data but got " + data['read']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['write'])) {
            throw new Error("Expected the field `write` to be an array in the JSON data but got " + data['write']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} collection:create
 */
Permissions2.prototype['collection:create'] = undefined;

/**
 * @member {Array.<String>} group:create
 */
Permissions2.prototype['group:create'] = undefined;

/**
 * @member {Array.<String>} read
 */
Permissions2.prototype['read'] = undefined;

/**
 * @member {Array.<String>} write
 */
Permissions2.prototype['write'] = undefined;






export default Permissions2;

