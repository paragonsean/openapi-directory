/**
 * Remote Settings PROD
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BatchPayloadSchema from './model/BatchPayloadSchema';
import BatchResponseBodySchema from './model/BatchResponseBodySchema';
import Data from './model/Data';
import Data1 from './model/Data1';
import Data2 from './model/Data2';
import Data3 from './model/Data3';
import Defaults from './model/Defaults';
import ErrorSchema from './model/ErrorSchema';
import ObjectSchema from './model/ObjectSchema';
import ObjectSchema1 from './model/ObjectSchema1';
import ObjectSchema2 from './model/ObjectSchema2';
import ObjectSchema3 from './model/ObjectSchema3';
import Permissions from './model/Permissions';
import Permissions1 from './model/Permissions1';
import Permissions2 from './model/Permissions2';
import RequestsInner from './model/RequestsInner';
import ResponsesInner from './model/ResponsesInner';
import Schema from './model/Schema';
import Schema1 from './model/Schema1';
import Schema2 from './model/Schema2';
import Schema3 from './model/Schema3';
import Schema4 from './model/Schema4';
import AttachmentApi from './api/AttachmentApi';
import BatchApi from './api/BatchApi';
import BucketsApi from './api/BucketsApi';
import ChangessApi from './api/ChangessApi';
import CollectionChangesetApi from './api/CollectionChangesetApi';
import CollectionsApi from './api/CollectionsApi';
import GroupsApi from './api/GroupsApi';
import RecordsApi from './api/RecordsApi';
import UtilitiesApi from './api/UtilitiesApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var RemoteSettingsProd = require('index'); // See note below*.
* var xxxSvc = new RemoteSettingsProd.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new RemoteSettingsProd.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new RemoteSettingsProd.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new RemoteSettingsProd.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.22
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BatchPayloadSchema model constructor.
     * @property {module:model/BatchPayloadSchema}
     */
    BatchPayloadSchema,

    /**
     * The BatchResponseBodySchema model constructor.
     * @property {module:model/BatchResponseBodySchema}
     */
    BatchResponseBodySchema,

    /**
     * The Data model constructor.
     * @property {module:model/Data}
     */
    Data,

    /**
     * The Data1 model constructor.
     * @property {module:model/Data1}
     */
    Data1,

    /**
     * The Data2 model constructor.
     * @property {module:model/Data2}
     */
    Data2,

    /**
     * The Data3 model constructor.
     * @property {module:model/Data3}
     */
    Data3,

    /**
     * The Defaults model constructor.
     * @property {module:model/Defaults}
     */
    Defaults,

    /**
     * The ErrorSchema model constructor.
     * @property {module:model/ErrorSchema}
     */
    ErrorSchema,

    /**
     * The ObjectSchema model constructor.
     * @property {module:model/ObjectSchema}
     */
    ObjectSchema,

    /**
     * The ObjectSchema1 model constructor.
     * @property {module:model/ObjectSchema1}
     */
    ObjectSchema1,

    /**
     * The ObjectSchema2 model constructor.
     * @property {module:model/ObjectSchema2}
     */
    ObjectSchema2,

    /**
     * The ObjectSchema3 model constructor.
     * @property {module:model/ObjectSchema3}
     */
    ObjectSchema3,

    /**
     * The Permissions model constructor.
     * @property {module:model/Permissions}
     */
    Permissions,

    /**
     * The Permissions1 model constructor.
     * @property {module:model/Permissions1}
     */
    Permissions1,

    /**
     * The Permissions2 model constructor.
     * @property {module:model/Permissions2}
     */
    Permissions2,

    /**
     * The RequestsInner model constructor.
     * @property {module:model/RequestsInner}
     */
    RequestsInner,

    /**
     * The ResponsesInner model constructor.
     * @property {module:model/ResponsesInner}
     */
    ResponsesInner,

    /**
     * The Schema model constructor.
     * @property {module:model/Schema}
     */
    Schema,

    /**
     * The Schema1 model constructor.
     * @property {module:model/Schema1}
     */
    Schema1,

    /**
     * The Schema2 model constructor.
     * @property {module:model/Schema2}
     */
    Schema2,

    /**
     * The Schema3 model constructor.
     * @property {module:model/Schema3}
     */
    Schema3,

    /**
     * The Schema4 model constructor.
     * @property {module:model/Schema4}
     */
    Schema4,

    /**
    * The AttachmentApi service constructor.
    * @property {module:api/AttachmentApi}
    */
    AttachmentApi,

    /**
    * The BatchApi service constructor.
    * @property {module:api/BatchApi}
    */
    BatchApi,

    /**
    * The BucketsApi service constructor.
    * @property {module:api/BucketsApi}
    */
    BucketsApi,

    /**
    * The ChangessApi service constructor.
    * @property {module:api/ChangessApi}
    */
    ChangessApi,

    /**
    * The CollectionChangesetApi service constructor.
    * @property {module:api/CollectionChangesetApi}
    */
    CollectionChangesetApi,

    /**
    * The CollectionsApi service constructor.
    * @property {module:api/CollectionsApi}
    */
    CollectionsApi,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The RecordsApi service constructor.
    * @property {module:api/RecordsApi}
    */
    RecordsApi,

    /**
    * The UtilitiesApi service constructor.
    * @property {module:api/UtilitiesApi}
    */
    UtilitiesApi
};
