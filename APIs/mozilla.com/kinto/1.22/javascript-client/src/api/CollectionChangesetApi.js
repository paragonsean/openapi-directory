/**
 * Remote Settings PROD
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* CollectionChangeset service.
* @module api/CollectionChangesetApi
* @version 1.22
*/
export default class CollectionChangesetApi {

    /**
    * Constructs a new CollectionChangesetApi. 
    * @alias module:api/CollectionChangesetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCollectionChangeset operation.
     * @callback module:api/CollectionChangesetApi~getCollectionChangesetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} bid 
     * @param {String} cid 
     * @param {String} expected 
     * @param {Object} opts Optional parameters
     * @param {String} [since] 
     * @param {Number} [limit] 
     * @param {String} [bucket] 
     * @param {String} [collection] 
     * @param {module:api/CollectionChangesetApi~getCollectionChangesetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getCollectionChangeset(bid, cid, expected, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bid' is set
      if (bid === undefined || bid === null) {
        throw new Error("Missing the required parameter 'bid' when calling getCollectionChangeset");
      }
      // verify the required parameter 'cid' is set
      if (cid === undefined || cid === null) {
        throw new Error("Missing the required parameter 'cid' when calling getCollectionChangeset");
      }
      // verify the required parameter 'expected' is set
      if (expected === undefined || expected === null) {
        throw new Error("Missing the required parameter 'expected' when calling getCollectionChangeset");
      }

      let pathParams = {
        'bid': bid,
        'cid': cid
      };
      let queryParams = {
        '_since': opts['since'],
        '_expected': expected,
        '_limit': opts['limit'],
        'bucket': opts['bucket'],
        'collection': opts['collection']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/buckets/{bid}/collections/{cid}/changeset', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
