openapi: 3.0.0
info:
  contact:
    email: support@sakari.io
  description: "# Introduction\n\nWelcome to the documentation for the Sakari Messaging\
    \ REST API. \n\nSakari provides an advanced platform to drive large scale customized\
    \ SMS communication\n\nREST is a web-service protocol that lends itself to rapid\
    \ development by using everyday HTTP and JSON technology.\n\nTo find out more\
    \ about our product offering, please visit [https://sakari.io](https://sakari.io).\n\
    \n# Quickstart\n\nFor your convenience we have created a quickstart guide to get\
    \ you up and running in 5 minutes. \n\n[https://sakari.io/blog/sakari-api-quickstart](https://sakari.io/blog/sakari-api-quickstart)\n\
    \n# PostMan Collection\n\nWe've created a simple set of examples using [PostMan](https://www.getpostman.com/)\
    \ Simply click below to import these. You will need to setup three environment\
    \ variables in PostMan - AccountId, ClientId and ClientSecret. Check out our PostMan\
    \ blog post for more information\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/d616e273edc916a7a6eb)\n\
    \n# Finding your client id, client secret and account id\n\nTo authenticate against\
    \ the API's you will need three key pieces of data\n - client id\n - client secret\n\
    \ - account id\n\nTo retrieve these, simply login into [https://hub.sakari.io](https://hub.sakari.io)\
    \ and click on the \"cog\" in the top right corner. In the popup dialog at the\
    \ bottom you should see your API credentials and account id. If these are not\
    \ visible you will need to click on \"Request Credentials\"\n\n# Versioning\n\n\
    With any breaking changes we will introduce a new version of the API. The latest\
    \ version is v1.\n\nThe API uses an open schema model, which means server may\
    \ add extra properties to responses. Likewise, the server will ignore any extra\
    \ query parameters and request body properties. When you write clients, you need\
    \ to ignore additional properties in responses to ensure they do not break.\n\n\
    # Testing\n\nThere are numerous tools available for testing the API's. We will\
    \ include examples using curl and the client SDKs that we have created. If you\
    \ would like to see an SDK in a language not currently available, please let us\
    \ know.\n\n# Throttling / Limits\n\nOur API's have been specifically designed\
    \ to support bulk messaging in a single API call. We therefore impose limits on\
    \ the frequency of calling the APIs to prevent abuse or runaway processes. If\
    \ you feel you need a higher limit, please contact us. If you hit the limit you\
    \ will get a 429 error code returned from our servers\n\n# Errors\n\nThe API uses\
    \ standard HTTP status codes to indicate the success or failure of the API call.\
    \ The body of the response will be JSON in the following format:\n\n```\n{\n \
    \ \"success\": false,\n  \"error\": {\n    \"code\": \"CONT-001\",\n    \"message\"\
    : \"Invalid mobile number\"\n  }\n}\n```\n\n# Pagination\n\nFor performance, most\
    \ GET calls return a subset of data. This data is paginated for easy access. Most\
    \ APIs which return collections of data will return a pagination object as such:\n\
    \n```\n{\n  \"pagination\": {\n    \"offset\": 0,\n    \"limit\": 10\n    \"totalCount\"\
    : 21\n  }  \n}\n```\n\nWhen making calls to the API, you can adjust the slice\
    \ of data returned using query parameters such as:\n\n`` https://api.sakari.io/v1/accounts/123/contacts?offset=20&limit=25\
    \ ``\n\nThis will return 25 contacts with an offset of 20.\n"
  termsOfService: https://sakari.io/terms-service.html
  title: Sakari
  version: 1.0.1
  x-apisguru-categories:
  - messaging
  x-logo:
    url: https://sakari.io/wp-content/uploads/cropped-sakari-icon-512x512-180x180.png
  x-origin:
  - format: openapi
    url: https://developer.sakari.io/openapi.yaml
    version: "3.0"
  x-providerName: sakari.io
externalDocs:
  description: Find out more about Sakari
  url: https://sakari.io
servers:
- description: Sakari Production
  url: https://api.sakari.io
tags:
- description: |
    Sakari uses OAuth2 for authentication. After you have created an account at [https://hub.sakari.io](https://hub.sakari.io), you can retrieve your client id and secret from the 'Account Details' screen (click on the 'cog' icon in the top right corner and scroll down to API Credentials)

    Using your client id and secret, you can exchange these for a JWT ([JSON Web Token](https://en.wikipedia.org/wiki/JSON_Web_Token))

    The JWT should then be used when accessing any of the core API's. It should be passed in the `Authorization` header.

    For example:

    ``Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImt....``
  name: authentication
- description: "Create, modify or delete contacts"
  name: contacts
- description: "Send or track messages to one contact, a group of contacts or your\
    \ entire address book"
  name: messages
- description: Define reusable message or web templates
  name: templates
- description: "Define reusable message campaigns with a predefined contact list/filter,\
    \ template and schedule"
  name: campaigns
- description: Conversations group your message history with each contact into one
    thread
  name: conversations
- description: "Tools to assist with sending and receiving messages, such as file\
    \ sharing, translation, etc."
  name: tools
- description: "Webhooks allow your own system to be automatically notified upon certin\
    \ events, such as a new message received from one of your contacts or a status\
    \ change notification for your messages"
  name: webhooks
paths:
  /oauth2/token:
    post:
      operationId: auth.token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: successful operation
      summary: Get token for accessing APIs
      tags:
      - authentication
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/oauth2/token \
            -H 'Content-Type: application/json' \
            -d '{
            "grant_type": "client_credentials",
            "client_id": "12345678-1234-1234-1234-123456789012",
            "client_secret": "87654321-4321-4321-4321-098765432121"
          }'
      - lang: JavaScript
        source: |
          var settings = {
            "async": true,
            "crossDomain": true,
            "url": "https://api.sakari.io/oauth2/token",
            "method": "POST",
            "headers": {
              "Content-Type": "application/json"
            },
            "processData": false,
            "data": "{\n\t\"grant_type\": \"client_credentials\",\n\t\"client_id\": \"12345678-1234-1234-1234-123456789012\",\n\t\"client_secret\": \"87654321-4321-4321-4321-098765432121\"\n}"
          }

          $.ajax(settings).done(function (response) {
            console.log(response);
          });
      - lang: PHP
        source: "<?php\n\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/oauth2/token');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Content-Type' => 'application/json'\n  ));\n  \n  $request->setBody('{\n\
          \    \"grant_type\": \"client_credentials\",\n    \"client_id\": \"12345678-1234-1234-123456789012\"\
          ,\n    \"client_secret\": \"87654321-4321-4321-898765432121\"\n  }');\n\
          \  \n  try {\n    $response = $request->send();\n  \n    echo $response->getBody();\n\
          \  } catch (HttpException $ex) {\n    echo $ex;\n  }\n"
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/campaigns:
    get:
      operationId: campaigns.fetchAll
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Filter by name or part of
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Fetch campaigns
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    post:
      operationId: campaigns.create
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Create campaign
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "name": "Marketing Campaign",
            "trigger": {
              "code":"M"
            },
            "template":"Hi {{{contact.firstName}}}",
            "reporting":{"when":"NoReport"}
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { name: 'Marketing Campaign',\n  \
          \   trigger: { code: 'M' },\n     template: 'Hi {{{contact.firstName}}}',\n\
          \     reporting: { when: 'NoReport' } },\n  json: true };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Marketing Campaign\"\
          ,\n    \"trigger\": {\n      \"code\":\"M\"\n    },\n    \"template\":\"\
          Hi {{{contact.firstName}}}\",\n    \"reporting\":{\"when\":\"NoReport\"\
          }\n  }');\n  \n  try {\n    $response = $request->send();\n  \n    echo\
          \ $response->getBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n\
          \  }\n"
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/campaigns/{campaignId}:
    delete:
      operationId: campaigns.remove
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Campaign id to delete
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaigns_remove_200_response'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Deletes a campaign
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X DELETE \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'DELETE',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}');\n\
          \  $request->setMethod(HTTP_METH_DELETE);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    get:
      operationId: campaigns.fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of campaign to return
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch campaign by ID
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    put:
      operationId: campaigns.update
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of campaign
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Updates a campaign
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "name": "Marketing Campaign",
            "trigger": {
              "code":"M"
            },
            "template":"Hi {{{contact.firstName}}}",
            "reporting":{"when":"NoReport"}
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { name: 'Marketing Campaign',\n  \
          \   trigger: { code: 'M' },\n     template: 'Hi {{{contact.firstName}}}',\n\
          \     reporting: { when: 'NoReport' } },\n  json: true };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Marketing Campaign\"\
          ,\n    \"trigger\": {\n      \"code\":\"M\"\n    },\n    \"template\":\"\
          Hi {{{contact.firstName}}}\",\n    \"reporting\":{\"when\":\"NoReport\"\
          }\n  }');\n  \n  try {\n    $response = $request->send();\n  \n    echo\
          \ $response->getBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n\
          \  }\n"
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/contacts:
    get:
      operationId: contacts.fetchAll
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Filter by first name or part of
        explode: true
        in: query
        name: firstName
        required: false
        schema:
          type: string
        style: form
      - description: Filter by last name or part of
        explode: true
        in: query
        name: lastName
        required: false
        schema:
          type: string
        style: form
      - description: Filter by mobile or part of
        explode: true
        in: query
        name: mobile
        required: false
        schema:
          type: string
        style: form
      - description: Filter by email or part of
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag(s)
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Fetch contacts
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts',\n \
          \ headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    post:
      operationId: contacts.create
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Determines how existing contacts with matching mobile numbers
          are treated
        explode: true
        in: query
        name: mergeStrategy
        required: false
        schema:
          enum:
          - append
          - core
          - remove
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
          text/csv:
            schema:
              example: |
                country,firstName,lastName,email,mobile,jobTitle,Address,City,State,ZipCode US,Joe,Bloggs,joebloggs@sakari.co,123-456-7890,mover,123 Text Street,San Francisco,CA,12345
              type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contacts_create_201_response'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Create contact
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts \
            -H 'Content-Type: application/json' \
            -d '{
            "firstName": "Chris",
            "lastName": "Thomson",
            "mobile": {
              "number": "+1234567890",
              "country": "US"
            }
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts',\n \
          \ headers: {\n     Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { firstName: 'Chris',\n     lastName:\
          \ 'Thomson',\n     mobile: { number: '+1234567890', country: 'US' } },\n\
          \  json: true };\n\nrequest(options, function (error, response, body) {\n\
          \  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Content-Type' => 'application/json'\n  ));\n  \n  $request->setBody('{\n\
          \    \"firstName\": \"Chris\",\n    \"lastName\": \"Thomson\",\n    \"mobile\"\
          : {\n      \"number\": \"+1234567890\",\n      \"country\": \"US\"\n   \
          \ }\n  }');\n  \n  try {\n    $response = $request->send();\n  \n    echo\
          \ $response->getBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n\
          \  }\n"
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/contacts/{contactId}:
    delete:
      operationId: contacts.remove
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Contact id to delete
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaigns_remove_200_response'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Deletes a contact
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X DELETE \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'DELETE',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}',\n\
          \  headers: \n   { 'Authorization': 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' } };\n\nrequest(options, function (error, response,\
          \ body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}');\n\
          \  $request->setMethod(HTTP_METH_DELETE);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"firstName\": \"Chris\",\n    \"\
          lastName\": \"Thomson\",\n    \"mobile\": {\n      \"number\": \"+1234567890\"\
          ,\n      \"country\": \"US\"\n    }\n  }');\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    get:
      operationId: contacts.fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of contact to return
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch contact by ID
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    put:
      operationId: contacts.update
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of contact
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Updates a contact
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X PUT \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'' \
            -H 'Content-Type: application/json' \
            -d '{
            "firstName": "Bob",
            "lastName": "Thomson",
            "mobile": {
              "number": "+1234567890",
              "country": "US"
            }
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'PUT',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}',\n\
          \  headers: \n   { 'Authorization': 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { firstName: 'Bob',\n     lastName:\
          \ 'Thomson',\n     mobile: { number: '+1234567890', country: 'US' } },\n\
          \  json: true };\n\nrequest(options, function (error, response, body) {\n\
          \  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}');\n\
          \  $request->setMethod(HTTP_METH_PUT);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"firstName\": \"Bob\",\n    \"\
          lastName\": \"Thomson\",\n    \"mobile\": {\n      \"number\": \"+1234567890\"\
          ,\n      \"country\": \"US\"\n    }\n  }');\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/conversations:
    get:
      operationId: conversations.fetchAll
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationsResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Fetch conversations
      tags:
      - conversations
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/conversations/{conversationId}:
    get:
      operationId: conversations.fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of template to return
        explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch conversation by ID
      tags:
      - conversations
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/conversations/{conversationId}/close:
    put:
      operationId: conversations.close
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of conversation
        explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Closes a conversation
      tags:
      - conversations
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}/close \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}/close',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}/close');\n\
          \  $request->setMethod(HTTP_METH_PUT);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Test Template\",\n \
          \   \"template\": \"Hi {{ firstName }}, Welcome to Sakari!\",\n    \"type\"\
          : \"SMS\"\n  }');\n  \n  try {\n    $response = $request->send();\n  \n\
          \    echo $response->getBody();\n  } catch (HttpException $ex) {\n    echo\
          \ $ex;\n  }\n"
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/messages:
    get:
      operationId: messages.fetchAll
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: ID of contact
        explode: true
        in: query
        name: contactId
        required: false
        schema:
          type: string
        style: form
      - description: ID of conversation
        explode: true
        in: query
        name: conversationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch messages
      tags:
      - messages
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: |
          var settings = {
            "async": true,
            "crossDomain": true,
            "url": "https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages",
            "method": "GET",
            "headers": {
              "Authorization": "Bearer {{TOKEN}}"
            }
          }

          $.ajax(settings).done(function (response) {
            console.log(response);
          });
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    post:
      operationId: messages.send
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessagesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessagesResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Send Messages
      tags:
      - messages
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "contacts": [{
              "mobile": {
                "number": "+1234567890",
                "country": "US"
              }
            }],
            "template": "Congratulations! You just sent your first message"
          } '
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages',\n \
          \ headers: \n   { 'Authorization': 'Bearer {{TOKEN}}',\n     Accept: 'application/json',\n\
          \     'Content-Type': 'application/json' },\n  body: \n   { contacts: [\
          \ { mobile: { number: '+1234567890', country: 'US' } } ],\n     template:\
          \ 'Congratulations! You just sent your first message' },\n  json: true };\n\
          \nrequest(options, function (error, response, body) {\n  if (error) throw\
          \ new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Accept' => 'application/json',\n\
          \    'Content-Type' => 'application/json'\n  ));\n  \n  $request->setBody('{\n\
          \    \"contacts\": [{\n      \"mobile\": {\n        \"number\": \"+1234567890\"\
          ,\n        \"country\": \"US\"\n      }\n    }],\n    \"template\": \"Congratulations!\
          \ You just sent your first message\"\n  } ');\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/messages/{messageId}:
    get:
      description: Returns a single messag
      operationId: messages.fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of message to return
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch message by id
      tags:
      - messages
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages/{{MESSAGE_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages/{{MESSAGE_ID}}',\n\
          \  headers: \n   { 'Authorization': 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages/{{MESSAGE_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/templates:
    get:
      operationId: templates.fetchAll
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Filter by name or part of
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Fetch templates
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates',\n\
          \  headers: \n   { 'Authorization': 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    post:
      operationId: templates.create
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Create template
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "name": "Test Template",
            "template": "Hi {{ firstName }}, Welcome to Sakari!",
            "type": "SMS"
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates',\n\
          \  headers: \n   { 'Content-Type': 'application/json' },\n  body: \n   {\
          \ name: 'Test Template',\n     template: 'Hi {{ firstName }}, Welcome to\
          \ Sakari!',\n     type: 'SMS' },\n  json: true };\n\nrequest(options, function\
          \ (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Test Template\",\n \
          \   \"template\": \"Hi {{ firstName }}, Welcome to Sakari!\",\n    \"type\"\
          : \"SMS\"\n  }');\n  \n  try {\n    $response = $request->send();\n  \n\
          \    echo $response->getBody();\n  } catch (HttpException $ex) {\n    echo\
          \ $ex;\n  }\n"
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/templates/{templateId}:
    delete:
      operationId: templates.remove
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Template id to delete
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaigns_remove_200_response'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Deletes a template
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X DELETE \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}');\n\
          \  $request->setMethod(HTTP_METH_DELETE);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    get:
      operationId: templates.fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of template to return
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch template by ID
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    put:
      operationId: templates.update
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of template
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Updates a template
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X PUT \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "name": "Test Template",
            "template": "Hi {{ firstName }}, Welcome to Sakari!",
            "type": "SMS"
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\n\nvar options = { method: 'PUT',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { name: 'Test Template',\n     template:\
          \ 'Hi {{ firstName }}, Welcome to Sakari!',\n     type: 'SMS' },\n  json:\
          \ true };\n\nrequest(options, function (error, response, body) {\n  if (error)\
          \ throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}');\n\
          \  $request->setMethod(HTTP_METH_PUT);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Test Template\",\n \
          \   \"template\": \"Hi {{ firstName }}, Welcome to Sakari!\",\n    \"type\"\
          : \"SMS\"\n  }');\n  \n  try {\n    $response = $request->send();\n  \n\
          \    echo $response->getBody();\n  } catch (HttpException $ex) {\n    echo\
          \ $ex;\n  }\n"
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/webhooks:
    get:
      description: "When messages are acknowledge by carriers, a notification is sent\
        \ to the specified URL"
      operationId: webhooks.fetchAll
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch active webhooks
      tags:
      - webhooks
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -d '{
            "url": "https://requestbin.io"
          }'
      - lang: JavaScript
        source: |
          var settings = {
            "async": true,
            "crossDomain": true,
            "url": "https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks",
            "method": "GET",
            "headers": {
              "Authorization": "Bearer {{TOKEN}}"
            },
            "data": "{\n\t\"url\": \"https://requestbin.io\"\n}"
          }

          $.ajax(settings).done(function (response) {
            console.log(response);
          });
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  $request->setBody('{\n\
          \    \"url\": \"https://requestbin.io\"\n  }');\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
    post:
      description: "When messages are acknowledge by carriers, a notification is sent\
        \ to the specified URL"
      operationId: webhooks.subscribe
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_subscribe_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Subscribe to message events
      tags:
      - webhooks
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "url": "https://requestbin.io",
            "eventTypes": ["message-received"]
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks',\n \
          \ headers: \n   { Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: { url: 'https://requestbin.io', eventTypes:\
          \ [ 'message-received' ] },\n  json: true };\n\nrequest(options, function\
          \ (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"url\": \"https://requestbin.io\"\
          ,\n    \"eventTypes\": [\"message-received\"]\n  }');\n  \n  try {\n   \
          \ $response = $request->send();\n  \n    echo $response->getBody();\n  }\
          \ catch (HttpException $ex) {\n    echo $ex;\n  }\n"
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/accounts/{accountId}/webhooks/{url}:
    delete:
      callbacks:
        event:
          '{$request.body#/callbackUrl}':
            post:
              operationId: eventPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Event'
                required: true
              responses:
                "200":
                  description: Your server returns this code if it accepts the callback
              x-callback-request: true
      description: Delete subscription for receiving notifications
      operationId: webhooks.unsubscribe
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Account to apply operations to
        explode: false
        in: path
        name: url
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - sakari_auth: []
      summary: Unsubscribe to message events
      tags:
      - webhooks
      x-code-samples:
      - lang: CURL
        source: |
          curl -X DELETE \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks/{{URL_ENCODED CALLBACK_URL}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'DELETE',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks/{{URL_ENCODED\
          \ CALLBACK_URL}}',\n  headers: \n   { Authorization: 'Bearer {{TOKEN}}'\
          \ };\n\nrequest(options, function (error, response, body) {\n  if (error)\
          \ throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks/{{URL_ENCODED\
          \ CALLBACK_URL}}');\n  $request->setMethod(HTTP_METH_DELETE);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-accepts:
      - application/json
  /v1/tools/sharefile:
    post:
      operationId: tools.shareFile
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/tools_shareFile_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareFileResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Share file - use to host a file and generate a short link to be used
        directly in a message or as a link to media for a MMS
      tags:
      - tools
      x-content-type: application/octet-stream
      x-accepts:
      - application/json
components:
  parameters:
    accountId:
      description: Account to apply operations to
      explode: false
      in: path
      name: accountId
      required: true
      schema:
        type: string
      style: simple
    contactIdFilter:
      description: ID of contact
      explode: true
      in: query
      name: contactId
      required: false
      schema:
        type: string
      style: form
    conversationIdFilter:
      description: ID of conversation
      explode: true
      in: query
      name: conversationId
      required: false
      schema:
        type: string
      style: form
    email:
      description: Email of contact
      explode: true
      in: query
      name: email
      required: false
      schema:
        type: string
      style: form
    emailFilter:
      description: Filter by email or part of
      explode: true
      in: query
      name: email
      required: false
      schema:
        type: string
      style: form
    firstName:
      description: First name of contact
      explode: true
      in: query
      name: firstName
      required: false
      schema:
        type: string
      style: form
    firstNameFilter:
      description: Filter by first name or part of
      explode: true
      in: query
      name: firstName
      required: false
      schema:
        type: string
      style: form
    lastName:
      description: Last name of contact
      explode: true
      in: query
      name: lastName
      required: false
      schema:
        type: string
      style: form
    lastNameFilter:
      description: Filter by last name or part of
      explode: true
      in: query
      name: lastName
      required: false
      schema:
        type: string
      style: form
    limit:
      description: Maximum number of results to return
      explode: true
      in: query
      name: limit
      required: false
      schema:
        format: int64
        maximum: 100
        minimum: 1
        type: integer
      style: form
    mobile:
      description: Mobile of contact
      explode: true
      in: query
      name: mobile
      required: false
      schema:
        type: string
      style: form
    mobileFilter:
      description: Filter by mobile or part of
      explode: true
      in: query
      name: mobile
      required: false
      schema:
        type: string
      style: form
    nameFilter:
      description: Filter by name or part of
      explode: true
      in: query
      name: name
      required: false
      schema:
        type: string
      style: form
    offset:
      description: Results to skip when paginating through a result set
      explode: true
      in: query
      name: offset
      required: false
      schema:
        format: int64
        minimum: 0
        type: integer
      style: form
    tags:
      description: Tag of contact
      explode: true
      in: query
      name: tags
      required: false
      schema:
        type: string
      style: form
    tagsFilter:
      description: Filter by tag(s)
      explode: true
      in: query
      name: tags
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    Contact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactRequest'
      description: Pet object that needs to be added to the store
      required: true
    Contacts:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/ContactRequest'
            type: array
      description: List of contacts
      required: true
  schemas:
    AccountEvent:
      properties:
        accountId:
          type: string
        type:
          $ref: '#/components/schemas/EventType'
      type: object
    AccountEventPayload:
      example:
        balance: 0.8008281904610115
      properties:
        balance:
          format: double
          type: number
      type: object
    AccountId:
      type: string
    AttributeFilter:
      properties:
        comparator:
          enum:
          - =
          - <
          - <=
          - '>'
          - '>='
          - '!='
          type: string
        name:
          type: string
        value:
          type: string
      type: object
    Campaign:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    CampaignRequest:
      example:
        template: template
        filters:
          attributes:
          - attributes
          - attributes
          contacts:
          - contacts
          - contacts
          tags:
          - tags
          - tags
        trigger:
          code: M
      properties:
        filters:
          $ref: '#/components/schemas/CampaignRequest_filters'
        template:
          type: string
        trigger:
          $ref: '#/components/schemas/CampaignRequest_trigger'
      type: object
    CampaignResponse:
      example:
        data:
          id: id
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Campaign'
        success:
          type: boolean
      type: object
    CampaignsResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Campaign'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - id: id
        - id: id
        success: true
        error:
          code: code
          message: message
    Contact:
      allOf:
      - $ref: '#/components/schemas/ContactRequest'
      - properties:
          created:
            $ref: '#/components/schemas/Updated'
          error:
            $ref: '#/components/schemas/Error'
          updated:
            $ref: '#/components/schemas/Updated'
          valid:
            type: boolean
        type: object
      example:
        valid: true
        firstName: Chris
        lastName: Bloggs
        created:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        mobile:
          country: country
          number: 123-456-7890
        attributes: null
        id: id
        error:
          code: CONT-010
          description: Contact has requested no further communication
        updated:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        email: chris@sakari.io
        tags:
        - visible: true
          tag: tag
        - visible: true
          tag: tag
    ContactIdentifiers:
      example:
        firstName: Chris
        lastName: Bloggs
        mobile:
          country: country
          number: 123-456-7890
        id: id
        email: chris@sakari.io
      properties:
        email:
          example: chris@sakari.io
          type: string
        firstName:
          example: Chris
          type: string
        id:
          type: string
        lastName:
          example: Bloggs
          type: string
        mobile:
          $ref: '#/components/schemas/ContactIdentifiers_mobile'
      type: object
    ContactRequest:
      allOf:
      - $ref: '#/components/schemas/ContactIdentifiers'
      - properties:
          attributes:
            $ref: '#/components/schemas/ContactRequest_allOf_attributes'
          tags:
            items:
              $ref: '#/components/schemas/Tag'
            type: array
        type: object
      example:
        firstName: Chris
        lastName: Bloggs
        mobile:
          country: country
          number: 123-456-7890
        attributes: null
        id: id
        email: chris@sakari.io
        tags:
        - visible: true
          tag: tag
        - visible: true
          tag: tag
    ContactResponse:
      example:
        data:
          valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Contact'
        success:
          default: true
          type: boolean
      type: object
    ContactUploadResponse:
      properties:
        data:
          $ref: '#/components/schemas/ContactUploadResponse_data'
        success:
          default: true
          type: boolean
      type: object
    ContactsResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Contact'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        - valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        success: true
        error:
          code: code
          message: message
    Conversation:
      example:
        phoneNumber:
          country: country
          number: number
          active: true
        unread:
        - unread
        - unread
        created:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        contact:
          firstName: Chris
          lastName: Bloggs
          mobile:
            country: country
            number: 123-456-7890
          id: id
          email: chris@sakari.io
        lastMessage:
          template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        closed: true
        id: id
        updated:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
      properties:
        closed:
          type: boolean
        contact:
          $ref: '#/components/schemas/ContactIdentifiers'
        created:
          $ref: '#/components/schemas/Updated'
        id:
          type: string
        lastMessage:
          $ref: '#/components/schemas/Message'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        unread:
          items:
            type: string
          type: array
        updated:
          $ref: '#/components/schemas/Updated'
      type: object
    ConversationResponse:
      example:
        data:
          phoneNumber:
            country: country
            number: number
            active: true
          unread:
          - unread
          - unread
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          lastMessage:
            template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
          closed: true
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Conversation'
        success:
          type: boolean
      type: object
    ConversationsResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Conversation'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - phoneNumber:
            country: country
            number: number
            active: true
          unread:
          - unread
          - unread
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          lastMessage:
            template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
          closed: true
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
        - phoneNumber:
            country: country
            number: number
            active: true
          unread:
          - unread
          - unread
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          lastMessage:
            template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
          closed: true
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
        success: true
        error:
          code: code
          message: message
    Error:
      example:
        code: CONT-010
        description: Contact has requested no further communication
      properties:
        code:
          example: CONT-010
          type: string
        description:
          example: Contact has requested no further communication
          type: string
      type: object
    ErrorResponse:
      example:
        success: false
        error:
          code: CONV-001
          message: Invalid conversation id
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse_error'
        success:
          default: false
          example: false
          type: boolean
      type: object
    Event:
      example:
        accountId: accountId
        eventId: eventId
        data:
          balance: 0.8008281904610115
        type: message
      properties:
        accountId:
          type: string
        data:
          $ref: '#/components/schemas/Event_data'
        eventId:
          type: string
        type:
          $ref: '#/components/schemas/EventType'
      type: object
    EventType:
      enum:
      - account
      - messageStatus
      - messageIncoming
      example: message
      type: string
    Message:
      example:
        template: template
        outgoing: true
        read: true
        created:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        media:
        - filename: filename
          type: type
          url: url
        - filename: filename
          type: type
          url: url
        error:
          code: CONT-010
          description: Contact has requested no further communication
        message: message
        segments: 6.027456183070403
        phoneNumber: "+1234567890"
        price: 0.8008281904610115
        contact:
          firstName: Chris
          lastName: Bloggs
          mobile:
            country: country
            number: 123-456-7890
          id: id
          email: chris@sakari.io
        id: id
        updated:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        conversation:
          id: id
        status: status
      properties:
        contact:
          $ref: '#/components/schemas/ContactIdentifiers'
        conversation:
          $ref: '#/components/schemas/Message_conversation'
        created:
          $ref: '#/components/schemas/Updated'
        error:
          $ref: '#/components/schemas/Error'
        id:
          type: string
        media:
          description: List of media objects attached to message
          items:
            $ref: '#/components/schemas/Message_media_inner'
          type: array
        message:
          type: string
        outgoing:
          type: boolean
        phoneNumber:
          example: "+1234567890"
          type: string
        price:
          type: number
        read:
          type: boolean
        segments:
          type: number
        status:
          type: string
        template:
          type: string
        updated:
          $ref: '#/components/schemas/Updated'
      type: object
    MessageEventPayload:
      properties:
        contact:
          $ref: '#/components/schemas/ContactIdentifiers'
        error:
          type: string
        message:
          type: string
        status:
          type: string
      type: object
    MessageResponse:
      example:
        data:
          template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Message'
        success:
          type: boolean
      type: object
    MessagesResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Message'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        - template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        success: true
        error:
          code: code
          message: message
    PaginatedResponse:
      properties:
        error:
          $ref: '#/components/schemas/PaginatedResponse_error'
        pagination:
          $ref: '#/components/schemas/PaginatedResponse_pagination'
        success:
          type: boolean
      type: object
    PhoneNumber:
      example:
        country: country
        number: number
        active: true
      properties:
        active:
          type: boolean
        country:
          type: string
        number:
          type: string
      type: object
    SendMessagesRequest:
      example:
        template: template
        phoneNumberFilter:
          group:
            id: id
        conversationStrategy: conversationStrategy
        filters:
          attributes:
          - "{}"
          - "{}"
          tags:
          - tags
          - tags
        media:
        - url: url
        - url: url
        type: SMS
        conversations:
        - conversations
        - conversations
        contacts:
        - firstName: Chris
          lastName: Bloggs
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        - firstName: Chris
          lastName: Bloggs
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/ContactRequest'
          type: array
        conversationStrategy:
          type: string
        conversations:
          description: List of conversation ids to send messages to
          items:
            type: string
          type: array
        filters:
          $ref: '#/components/schemas/SendMessagesRequest_filters'
        media:
          description: List of media objects to attach to message
          items:
            $ref: '#/components/schemas/SendMessagesRequest_media_inner'
          type: array
        phoneNumberFilter:
          $ref: '#/components/schemas/SendMessagesRequest_phoneNumberFilter'
        template:
          type: string
        type:
          enum:
          - SMS
          - MMS
          type: string
      type: object
    SendMessagesResponse:
      example:
        data:
          valid: 1
          jobId: jobId
          requested: 6
          estimatedPrice: 0.8008281904610115
          invalid:
          - valid: true
            firstName: Chris
            lastName: Bloggs
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            mobile:
              country: country
              number: 123-456-7890
            attributes: null
            id: id
            error:
              code: CONT-010
              description: Contact has requested no further communication
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            email: chris@sakari.io
            tags:
            - visible: true
              tag: tag
            - visible: true
              tag: tag
          - valid: true
            firstName: Chris
            lastName: Bloggs
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            mobile:
              country: country
              number: 123-456-7890
            attributes: null
            id: id
            error:
              code: CONT-010
              description: Contact has requested no further communication
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            email: chris@sakari.io
            tags:
            - visible: true
              tag: tag
            - visible: true
              tag: tag
          messages:
          - template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
          - template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
      properties:
        data:
          $ref: '#/components/schemas/SendMessagesResponse_data'
      type: object
    ShareFileResponse:
      example:
        data:
          expires: 2000-01-23T04:56:07.000+00:00
          link: link
        success: true
      properties:
        data:
          $ref: '#/components/schemas/ShareFileResponse_data'
        success:
          type: boolean
      type: object
    Tag:
      example:
        visible: true
        tag: tag
      properties:
        tag:
          type: string
        visible:
          type: boolean
      type: object
    Template:
      allOf:
      - $ref: '#/components/schemas/TemplateRequest'
      - properties:
          id:
            type: string
        type: object
      example:
        template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
        name: name
        id: id
        type: SMS
    TemplateRequest:
      example:
        template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
        name: name
        type: SMS
      properties:
        name:
          type: string
        template:
          example: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
          type: string
        type:
          enum:
          - SMS
          - Web
          example: SMS
          type: string
      type: object
    TemplateResponse:
      example:
        data:
          template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
          name: name
          id: id
          type: SMS
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Template'
        success:
          type: boolean
      type: object
    TemplatesResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Template'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
          name: name
          id: id
          type: SMS
        - template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
          name: name
          id: id
          type: SMS
        success: true
        error:
          code: code
          message: message
    TokenRequest:
      example:
        grant_type: client_credentials
        client_secret: 00000000-0000-0000-0000-00000000000
        client_id: 00000000-0000-0000-0000-00000000000
      properties:
        client_id:
          example: 00000000-0000-0000-0000-00000000000
          type: string
        client_secret:
          example: 00000000-0000-0000-0000-00000000000
          type: string
        grant_type:
          example: client_credentials
          type: string
      type: object
    TokenResponse:
      example:
        access_token: access_token
        token_type: token_type
      properties:
        access_token:
          type: string
        token_type:
          type: string
      type: object
    Updated:
      example:
        at: 2000-01-23T04:56:07.000+00:00
        by:
          firstName: Joe
          lastName: Bloggs
          id: id
      properties:
        at:
          format: date-time
          type: string
        by:
          $ref: '#/components/schemas/Updated_by'
      type: object
    Webhook:
      example:
        eventTypes:
        - message-received
        - message-received
        url: url
      properties:
        eventTypes:
          items:
            enum:
            - message-received
            - message-status
            - message-sent
            - conversation-closed
            - contact-created
            - contact-updated
            - contact-removed
            type: string
          type: array
        url:
          type: string
      type: object
    WebhookResponse:
      example:
        data:
          eventTypes:
          - message-received
          - message-received
          url: url
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Webhook'
        success:
          type: boolean
      type: object
    WebhooksResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Webhook'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - eventTypes:
          - message-received
          - message-received
          url: url
        - eventTypes:
          - message-received
          - message-received
          url: url
        success: true
        error:
          code: code
          message: message
    campaigns_remove_200_response:
      example:
        success: true
      properties:
        success:
          type: boolean
      type: object
    contacts_create_201_response:
      oneOf:
      - $ref: '#/components/schemas/ContactsResponse'
      - $ref: '#/components/schemas/ContactUploadResponse'
    webhooks_subscribe_request:
      properties:
        eventTypes:
          items:
            enum:
            - contact-created
            - contact-updated
            - contact-removed
            - message-received
            - message-sent
            - message-status
            - conversation-started
            - contact-opt-out
            - contact-opt-in
            - list-opt-out
            - list-opt-in
            type: string
          type: array
        url:
          example: https://myserver.com/send/callback/here
          format: uri
          type: string
      required:
      - callbackUrl
      type: object
    tools_shareFile_request:
      properties:
        media:
          format: binary
          type: string
      type: object
    CampaignRequest_filters:
      example:
        attributes:
        - attributes
        - attributes
        contacts:
        - contacts
        - contacts
        tags:
        - tags
        - tags
      properties:
        attributes:
          items:
            type: string
          type: array
        contacts:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
      type: object
    CampaignRequest_trigger:
      example:
        code: M
      properties:
        code:
          description: |
            Campaign type specifies how it sources contacts and what event triggers its execution  Sort order
              * `M` - Manual
              * `S` - Scheduled
              * `FU` - File Upload
          enum:
          - M
          - S
          - FU
          type: string
      type: object
    ContactIdentifiers_mobile:
      example:
        country: country
        number: 123-456-7890
      properties:
        country:
          type: string
        number:
          example: 123-456-7890
          type: string
      type: object
    ContactRequest_allOf_attributes:
      type: object
    ContactUploadResponse_data:
      properties:
        contacts:
          description: Uploaded contacts
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        errors:
          description: Contacts that failed validation
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        inserted:
          type: integer
        submitted:
          type: integer
        success:
          type: integer
        updated:
          type: integer
      type: object
    ErrorResponse_error:
      example:
        code: CONV-001
        message: Invalid conversation id
      properties:
        code:
          example: CONV-001
          type: string
        message:
          example: Invalid conversation id
          type: string
      type: object
    Event_data:
      oneOf:
      - $ref: '#/components/schemas/AccountEventPayload'
      - $ref: '#/components/schemas/MessageEventPayload'
    Message_conversation:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    Message_media_inner:
      example:
        filename: filename
        type: type
        url: url
      properties:
        filename:
          type: string
        type:
          type: string
        url:
          type: string
      type: object
    PaginatedResponse_error:
      example:
        code: code
        message: message
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    PaginatedResponse_pagination:
      example:
        offset: 6
        limit: 0
        totalCount: 1
      properties:
        limit:
          type: integer
        offset:
          type: integer
        totalCount:
          type: integer
      type: object
    SendMessagesRequest_filters:
      example:
        attributes:
        - "{}"
        - "{}"
        tags:
        - tags
        - tags
      properties:
        attributes:
          items:
            type: object
          type: array
        tags:
          items:
            type: string
          type: array
      type: object
    SendMessagesRequest_media_inner:
      example:
        url: url
      properties:
        url:
          type: string
      type: object
    SendMessagesRequest_phoneNumberFilter:
      example:
        group:
          id: id
      properties:
        group:
          $ref: '#/components/schemas/Message_conversation'
      type: object
    SendMessagesResponse_data:
      example:
        valid: 1
        jobId: jobId
        requested: 6
        estimatedPrice: 0.8008281904610115
        invalid:
        - valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        - valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        messages:
        - template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        - template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
      properties:
        estimatedPrice:
          format: double
          type: number
        invalid:
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        jobId:
          type: string
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
        requested:
          type: integer
        valid:
          type: integer
      type: object
    ShareFileResponse_data:
      example:
        expires: 2000-01-23T04:56:07.000+00:00
        link: link
      properties:
        expires:
          format: date-time
          type: string
        link:
          type: string
      type: object
    Updated_by:
      example:
        firstName: Joe
        lastName: Bloggs
        id: id
      properties:
        firstName:
          example: Joe
          type: string
        id:
          type: string
        lastName:
          example: Bloggs
          type: string
      type: object
  securitySchemes:
    sakari_auth:
      flows:
        clientCredentials:
          scopes:
            messages:send: Send messages
          tokenUrl: /oauth2/token
      type: oauth2

