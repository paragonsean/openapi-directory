openapi: 3.0.0
info:
  contact:
    email: support@sakari.io
  description: "# Introduction\n\nWelcome to the documentation for the Sakari Messaging\
    \ REST API. \n\nSakari provides an advanced platform to drive large scale customized\
    \ SMS communication\n\nREST is a web-service protocol that lends itself to rapid\
    \ development by using everyday HTTP and JSON technology.\n\nTo find out more\
    \ about our product offering, please visit [https://sakari.io](https://sakari.io).\n\
    \n# Quickstart\n\nFor your convenience we have created a quickstart guide to get\
    \ you up and running in 5 minutes. \n\n[https://sakari.io/blog/sakari-api-quickstart](https://sakari.io/blog/sakari-api-quickstart)\n\
    \n# PostMan Collection\n\nWe've created a simple set of examples using [PostMan](https://www.getpostman.com/)\
    \ Simply click below to import these. You will need to setup three environment\
    \ variables in PostMan - AccountId, ClientId and ClientSecret. Check out our PostMan\
    \ blog post for more information\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/d616e273edc916a7a6eb)\n\
    \n# Finding your client id, client secret and account id\n\nTo authenticate against\
    \ the API's you will need three key pieces of data\n - client id\n - client secret\n\
    \ - account id\n\nTo retrieve these, simply login into [https://hub.sakari.io](https://hub.sakari.io)\
    \ and click on the \"cog\" in the top right corner. In the popup dialog at the\
    \ bottom you should see your API credentials and account id. If these are not\
    \ visible you will need to click on \"Request Credentials\"\n\n# Versioning\n\n\
    With any breaking changes we will introduce a new version of the API. The latest\
    \ version is v1.\n\nThe API uses an open schema model, which means server may\
    \ add extra properties to responses. Likewise, the server will ignore any extra\
    \ query parameters and request body properties. When you write clients, you need\
    \ to ignore additional properties in responses to ensure they do not break.\n\n\
    # Testing\n\nThere are numerous tools available for testing the API's. We will\
    \ include examples using curl and the client SDKs that we have created. If you\
    \ would like to see an SDK in a language not currently available, please let us\
    \ know.\n\n# Throttling / Limits\n\nOur API's have been specifically designed\
    \ to support bulk messaging in a single API call. We therefore impose limits on\
    \ the frequency of calling the APIs to prevent abuse or runaway processes. If\
    \ you feel you need a higher limit, please contact us. If you hit the limit you\
    \ will get a 429 error code returned from our servers\n\n# Errors\n\nThe API uses\
    \ standard HTTP status codes to indicate the success or failure of the API call.\
    \ The body of the response will be JSON in the following format:\n\n```\n{\n \
    \ \"success\": false,\n  \"error\": {\n    \"code\": \"CONT-001\",\n    \"message\"\
    : \"Invalid mobile number\"\n  }\n}\n```\n\n# Pagination\n\nFor performance, most\
    \ GET calls return a subset of data. This data is paginated for easy access. Most\
    \ APIs which return collections of data will return a pagination object as such:\n\
    \n```\n{\n  \"pagination\": {\n    \"offset\": 0,\n    \"limit\": 10\n    \"totalCount\"\
    : 21\n  }  \n}\n```\n\nWhen making calls to the API, you can adjust the slice\
    \ of data returned using query parameters such as:\n\n`` https://api.sakari.io/v1/accounts/123/contacts?offset=20&limit=25\
    \ ``\n\nThis will return 25 contacts with an offset of 20.\n"
  termsOfService: https://sakari.io/terms-service.html
  title: Sakari
  version: 1.0.1
  x-apisguru-categories:
  - messaging
  x-logo:
    url: https://sakari.io/wp-content/uploads/cropped-sakari-icon-512x512-180x180.png
  x-origin:
  - format: openapi
    url: https://developer.sakari.io/openapi.yaml
    version: "3.0"
  x-providerName: sakari.io
externalDocs:
  description: Find out more about Sakari
  url: https://sakari.io
servers:
- description: Sakari Production
  url: https://api.sakari.io
tags:
- description: |
    Sakari uses OAuth2 for authentication. After you have created an account at [https://hub.sakari.io](https://hub.sakari.io), you can retrieve your client id and secret from the 'Account Details' screen (click on the 'cog' icon in the top right corner and scroll down to API Credentials)

    Using your client id and secret, you can exchange these for a JWT ([JSON Web Token](https://en.wikipedia.org/wiki/JSON_Web_Token))

    The JWT should then be used when accessing any of the core API's. It should be passed in the `Authorization` header.

    For example:

    ``Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImt....``
  name: authentication
- description: "Create, modify or delete contacts"
  name: contacts
- description: "Send or track messages to one contact, a group of contacts or your\
    \ entire address book"
  name: messages
- description: Define reusable message or web templates
  name: templates
- description: "Define reusable message campaigns with a predefined contact list/filter,\
    \ template and schedule"
  name: campaigns
- description: Conversations group your message history with each contact into one
    thread
  name: conversations
- description: "Tools to assist with sending and receiving messages, such as file\
    \ sharing, translation, etc."
  name: tools
- description: "Webhooks allow your own system to be automatically notified upon certin\
    \ events, such as a new message received from one of your contacts or a status\
    \ change notification for your messages"
  name: webhooks
paths:
  /oauth2/token:
    post:
      operationId: auth_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: successful operation
      summary: Get token for accessing APIs
      tags:
      - authentication
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/oauth2/token \
            -H 'Content-Type: application/json' \
            -d '{
            "grant_type": "client_credentials",
            "client_id": "12345678-1234-1234-1234-123456789012",
            "client_secret": "87654321-4321-4321-4321-098765432121"
          }'
      - lang: JavaScript
        source: |
          var settings = {
            "async": true,
            "crossDomain": true,
            "url": "https://api.sakari.io/oauth2/token",
            "method": "POST",
            "headers": {
              "Content-Type": "application/json"
            },
            "processData": false,
            "data": "{\n\t\"grant_type\": \"client_credentials\",\n\t\"client_id\": \"12345678-1234-1234-1234-123456789012\",\n\t\"client_secret\": \"87654321-4321-4321-4321-098765432121\"\n}"
          }

          $.ajax(settings).done(function (response) {
            console.log(response);
          });
      - lang: PHP
        source: "<?php\n\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/oauth2/token');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Content-Type' => 'application/json'\n  ));\n  \n  $request->setBody('{\n\
          \    \"grant_type\": \"client_credentials\",\n    \"client_id\": \"12345678-1234-1234-123456789012\"\
          ,\n    \"client_secret\": \"87654321-4321-4321-898765432121\"\n  }');\n\
          \  \n  try {\n    $response = $request->send();\n  \n    echo $response->getBody();\n\
          \  } catch (HttpException $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.authentication_controller
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}/campaigns:
    get:
      operationId: campaigns_fetch_all
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Filter by name or part of
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Fetch campaigns
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
    post:
      operationId: campaigns_create
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Create campaign
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "name": "Marketing Campaign",
            "trigger": {
              "code":"M"
            },
            "template":"Hi {{{contact.firstName}}}",
            "reporting":{"when":"NoReport"}
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { name: 'Marketing Campaign',\n  \
          \   trigger: { code: 'M' },\n     template: 'Hi {{{contact.firstName}}}',\n\
          \     reporting: { when: 'NoReport' } },\n  json: true };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Marketing Campaign\"\
          ,\n    \"trigger\": {\n      \"code\":\"M\"\n    },\n    \"template\":\"\
          Hi {{{contact.firstName}}}\",\n    \"reporting\":{\"when\":\"NoReport\"\
          }\n  }');\n  \n  try {\n    $response = $request->send();\n  \n    echo\
          \ $response->getBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n\
          \  }\n"
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}/campaigns/{campaignId}:
    delete:
      operationId: campaigns_remove
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Campaign id to delete
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaigns_remove_200_response'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Deletes a campaign
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X DELETE \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'DELETE',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}');\n\
          \  $request->setMethod(HTTP_METH_DELETE);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
    get:
      operationId: campaigns_fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of campaign to return
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch campaign by ID
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
    put:
      operationId: campaigns_update
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of campaign
        explode: false
        in: path
        name: campaignId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Updates a campaign
      tags:
      - campaigns
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "name": "Marketing Campaign",
            "trigger": {
              "code":"M"
            },
            "template":"Hi {{{contact.firstName}}}",
            "reporting":{"when":"NoReport"}
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { name: 'Marketing Campaign',\n  \
          \   trigger: { code: 'M' },\n     template: 'Hi {{{contact.firstName}}}',\n\
          \     reporting: { when: 'NoReport' } },\n  json: true };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/campaigns/{{CAMPAIGN_ID}}');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Marketing Campaign\"\
          ,\n    \"trigger\": {\n      \"code\":\"M\"\n    },\n    \"template\":\"\
          Hi {{{contact.firstName}}}\",\n    \"reporting\":{\"when\":\"NoReport\"\
          }\n  }');\n  \n  try {\n    $response = $request->send();\n  \n    echo\
          \ $response->getBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n\
          \  }\n"
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
  /v1/accounts/{accountId}/contacts:
    get:
      operationId: contacts_fetch_all
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Filter by first name or part of
        explode: true
        in: query
        name: firstName
        required: false
        schema:
          type: string
        style: form
      - description: Filter by last name or part of
        explode: true
        in: query
        name: lastName
        required: false
        schema:
          type: string
        style: form
      - description: Filter by mobile or part of
        explode: true
        in: query
        name: mobile
        required: false
        schema:
          type: string
        style: form
      - description: Filter by email or part of
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tag(s)
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Fetch contacts
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts',\n \
          \ headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.contacts_controller
    post:
      operationId: contacts_create
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Determines how existing contacts with matching mobile numbers
          are treated
        explode: true
        in: query
        name: mergeStrategy
        required: false
        schema:
          enum:
          - append
          - core
          - remove
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
          text/csv:
            schema:
              example: |
                country,firstName,lastName,email,mobile,jobTitle,Address,City,State,ZipCode US,Joe,Bloggs,joebloggs@sakari.co,123-456-7890,mover,123 Text Street,San Francisco,CA,12345
              type: string
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contacts_create_201_response'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Create contact
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts \
            -H 'Content-Type: application/json' \
            -d '{
            "firstName": "Chris",
            "lastName": "Thomson",
            "mobile": {
              "number": "+1234567890",
              "country": "US"
            }
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts',\n \
          \ headers: {\n     Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { firstName: 'Chris',\n     lastName:\
          \ 'Thomson',\n     mobile: { number: '+1234567890', country: 'US' } },\n\
          \  json: true };\n\nrequest(options, function (error, response, body) {\n\
          \  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Content-Type' => 'application/json'\n  ));\n  \n  $request->setBody('{\n\
          \    \"firstName\": \"Chris\",\n    \"lastName\": \"Thomson\",\n    \"mobile\"\
          : {\n      \"number\": \"+1234567890\",\n      \"country\": \"US\"\n   \
          \ }\n  }');\n  \n  try {\n    $response = $request->send();\n  \n    echo\
          \ $response->getBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n\
          \  }\n"
      x-openapi-router-controller: openapi_server.controllers.contacts_controller
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}/contacts/{contactId}:
    delete:
      operationId: contacts_remove
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Contact id to delete
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaigns_remove_200_response'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Deletes a contact
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X DELETE \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'DELETE',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}',\n\
          \  headers: \n   { 'Authorization': 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' } };\n\nrequest(options, function (error, response,\
          \ body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}');\n\
          \  $request->setMethod(HTTP_METH_DELETE);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"firstName\": \"Chris\",\n    \"\
          lastName\": \"Thomson\",\n    \"mobile\": {\n      \"number\": \"+1234567890\"\
          ,\n      \"country\": \"US\"\n    }\n  }');\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.contacts_controller
    get:
      operationId: contacts_fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of contact to return
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch contact by ID
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.contacts_controller
    put:
      operationId: contacts_update
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of contact
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Updates a contact
      tags:
      - contacts
      x-code-samples:
      - lang: CURL
        source: |
          curl -X PUT \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'' \
            -H 'Content-Type: application/json' \
            -d '{
            "firstName": "Bob",
            "lastName": "Thomson",
            "mobile": {
              "number": "+1234567890",
              "country": "US"
            }
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'PUT',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}',\n\
          \  headers: \n   { 'Authorization': 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { firstName: 'Bob',\n     lastName:\
          \ 'Thomson',\n     mobile: { number: '+1234567890', country: 'US' } },\n\
          \  json: true };\n\nrequest(options, function (error, response, body) {\n\
          \  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/contacts/{{CONTACT_ID}}');\n\
          \  $request->setMethod(HTTP_METH_PUT);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"firstName\": \"Bob\",\n    \"\
          lastName\": \"Thomson\",\n    \"mobile\": {\n      \"number\": \"+1234567890\"\
          ,\n      \"country\": \"US\"\n    }\n  }');\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.contacts_controller
  /v1/accounts/{accountId}/conversations:
    get:
      operationId: conversations_fetch_all
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationsResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Fetch conversations
      tags:
      - conversations
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.conversations_controller
  /v1/accounts/{accountId}/conversations/{conversationId}:
    get:
      operationId: conversations_fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of template to return
        explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch conversation by ID
      tags:
      - conversations
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.conversations_controller
  /v1/accounts/{accountId}/conversations/{conversationId}/close:
    put:
      operationId: conversations_close
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of conversation
        explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Closes a conversation
      tags:
      - conversations
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}/close \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}/close',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/conversations/{{CONVERSATION_ID}}/close');\n\
          \  $request->setMethod(HTTP_METH_PUT);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Test Template\",\n \
          \   \"template\": \"Hi {{ firstName }}, Welcome to Sakari!\",\n    \"type\"\
          : \"SMS\"\n  }');\n  \n  try {\n    $response = $request->send();\n  \n\
          \    echo $response->getBody();\n  } catch (HttpException $ex) {\n    echo\
          \ $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.conversations_controller
  /v1/accounts/{accountId}/messages:
    get:
      operationId: messages_fetch_all
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: ID of contact
        explode: true
        in: query
        name: contactId
        required: false
        schema:
          type: string
        style: form
      - description: ID of conversation
        explode: true
        in: query
        name: conversationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch messages
      tags:
      - messages
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: |
          var settings = {
            "async": true,
            "crossDomain": true,
            "url": "https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages",
            "method": "GET",
            "headers": {
              "Authorization": "Bearer {{TOKEN}}"
            }
          }

          $.ajax(settings).done(function (response) {
            console.log(response);
          });
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.messages_controller
    post:
      operationId: messages_send
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessagesRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessagesResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Send Messages
      tags:
      - messages
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "contacts": [{
              "mobile": {
                "number": "+1234567890",
                "country": "US"
              }
            }],
            "template": "Congratulations! You just sent your first message"
          } '
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages',\n \
          \ headers: \n   { 'Authorization': 'Bearer {{TOKEN}}',\n     Accept: 'application/json',\n\
          \     'Content-Type': 'application/json' },\n  body: \n   { contacts: [\
          \ { mobile: { number: '+1234567890', country: 'US' } } ],\n     template:\
          \ 'Congratulations! You just sent your first message' },\n  json: true };\n\
          \nrequest(options, function (error, response, body) {\n  if (error) throw\
          \ new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Accept' => 'application/json',\n\
          \    'Content-Type' => 'application/json'\n  ));\n  \n  $request->setBody('{\n\
          \    \"contacts\": [{\n      \"mobile\": {\n        \"number\": \"+1234567890\"\
          ,\n        \"country\": \"US\"\n      }\n    }],\n    \"template\": \"Congratulations!\
          \ You just sent your first message\"\n  } ');\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.messages_controller
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}/messages/{messageId}:
    get:
      description: Returns a single messag
      operationId: messages_fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of message to return
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch message by id
      tags:
      - messages
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages/{{MESSAGE_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages/{{MESSAGE_ID}}',\n\
          \  headers: \n   { 'Authorization': 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/messages/{{MESSAGE_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.messages_controller
  /v1/accounts/{accountId}/templates:
    get:
      operationId: templates_fetch_all
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Results to skip when paginating through a result set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Filter by name or part of
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Fetch templates
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates',\n\
          \  headers: \n   { 'Authorization': 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.templates_controller
    post:
      operationId: templates_create
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Create template
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "name": "Test Template",
            "template": "Hi {{ firstName }}, Welcome to Sakari!",
            "type": "SMS"
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates',\n\
          \  headers: \n   { 'Content-Type': 'application/json' },\n  body: \n   {\
          \ name: 'Test Template',\n     template: 'Hi {{ firstName }}, Welcome to\
          \ Sakari!',\n     type: 'SMS' },\n  json: true };\n\nrequest(options, function\
          \ (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Test Template\",\n \
          \   \"template\": \"Hi {{ firstName }}, Welcome to Sakari!\",\n    \"type\"\
          : \"SMS\"\n  }');\n  \n  try {\n    $response = $request->send();\n  \n\
          \    echo $response->getBody();\n  } catch (HttpException $ex) {\n    echo\
          \ $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.templates_controller
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}/templates/{templateId}:
    delete:
      operationId: templates_remove
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Template id to delete
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaigns_remove_200_response'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Deletes a template
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X DELETE \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}');\n\
          \  $request->setMethod(HTTP_METH_DELETE);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.templates_controller
    get:
      operationId: templates_fetch
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of template to return
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch template by ID
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'GET',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}' } };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.templates_controller
    put:
      operationId: templates_update
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of template
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Updates a template
      tags:
      - templates
      x-code-samples:
      - lang: CURL
        source: |
          curl -X PUT \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}} \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "name": "Test Template",
            "template": "Hi {{ firstName }}, Welcome to Sakari!",
            "type": "SMS"
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\n\nvar options = { method: 'PUT',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}',\n\
          \  headers: \n   { Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: \n   { name: 'Test Template',\n     template:\
          \ 'Hi {{ firstName }}, Welcome to Sakari!',\n     type: 'SMS' },\n  json:\
          \ true };\n\nrequest(options, function (error, response, body) {\n  if (error)\
          \ throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/templates/{{TEMPLATE_ID}}');\n\
          \  $request->setMethod(HTTP_METH_PUT);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"name\": \"Test Template\",\n \
          \   \"template\": \"Hi {{ firstName }}, Welcome to Sakari!\",\n    \"type\"\
          : \"SMS\"\n  }');\n  \n  try {\n    $response = $request->send();\n  \n\
          \    echo $response->getBody();\n  } catch (HttpException $ex) {\n    echo\
          \ $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v1/accounts/{accountId}/webhooks:
    get:
      description: "When messages are acknowledge by carriers, a notification is sent\
        \ to the specified URL"
      operationId: webhooks_fetch_all
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Fetch active webhooks
      tags:
      - webhooks
      x-code-samples:
      - lang: CURL
        source: |
          curl -X GET \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -d '{
            "url": "https://requestbin.io"
          }'
      - lang: JavaScript
        source: |
          var settings = {
            "async": true,
            "crossDomain": true,
            "url": "https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks",
            "method": "GET",
            "headers": {
              "Authorization": "Bearer {{TOKEN}}"
            },
            "data": "{\n\t\"url\": \"https://requestbin.io\"\n}"
          }

          $.ajax(settings).done(function (response) {
            console.log(response);
          });
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks');\n\
          \  $request->setMethod(HTTP_METH_GET);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  $request->setBody('{\n\
          \    \"url\": \"https://requestbin.io\"\n  }');\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
    post:
      description: "When messages are acknowledge by carriers, a notification is sent\
        \ to the specified URL"
      operationId: webhooks_subscribe
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_subscribe_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
          description: successful operation
      security:
      - sakari_auth: []
      summary: Subscribe to message events
      tags:
      - webhooks
      x-code-samples:
      - lang: CURL
        source: |
          curl -X POST \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks \
            -H 'Authorization: Bearer {{TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{
            "url": "https://requestbin.io",
            "eventTypes": ["message-received"]
          }'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'POST',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks',\n \
          \ headers: \n   { Authorization: 'Bearer {{TOKEN}}',\n     'Content-Type':\
          \ 'application/json' },\n  body: { url: 'https://requestbin.io', eventTypes:\
          \ [ 'message-received' ] },\n  json: true };\n\nrequest(options, function\
          \ (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks');\n\
          \  $request->setMethod(HTTP_METH_POST);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}',\n    'Content-Type' => 'application/json'\n\
          \  ));\n  \n  $request->setBody('{\n    \"url\": \"https://requestbin.io\"\
          ,\n    \"eventTypes\": [\"message-received\"]\n  }');\n  \n  try {\n   \
          \ $response = $request->send();\n  \n    echo $response->getBody();\n  }\
          \ catch (HttpException $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}/webhooks/{url}:
    delete:
      callbacks:
        event:
          '{$request.body#/callbackUrl}':
            post:
              operationId: event_post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Event'
                required: true
              responses:
                "200":
                  description: Your server returns this code if it accepts the callback
              x-callback-request: true
      description: Delete subscription for receiving notifications
      operationId: webhooks_unsubscribe
      parameters:
      - description: Account to apply operations to
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Account to apply operations to
        explode: false
        in: path
        name: url
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - sakari_auth: []
      summary: Unsubscribe to message events
      tags:
      - webhooks
      x-code-samples:
      - lang: CURL
        source: |
          curl -X DELETE \
            https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks/{{URL_ENCODED CALLBACK_URL}} \
            -H 'Authorization: Bearer {{TOKEN}}'
      - lang: JavaScript
        source: "var request = require(\"request\");\nvar options = { method: 'DELETE',\n\
          \  url: 'https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks/{{URL_ENCODED\
          \ CALLBACK_URL}}',\n  headers: \n   { Authorization: 'Bearer {{TOKEN}}'\
          \ };\n\nrequest(options, function (error, response, body) {\n  if (error)\
          \ throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: PHP
        source: "<?php\n  $request = new HttpRequest();\n  $request->setUrl('https://api.sakari.io/v1/accounts/{{ACCOUNT_ID}}/webhooks/{{URL_ENCODED\
          \ CALLBACK_URL}}');\n  $request->setMethod(HTTP_METH_DELETE);\n  \n  $request->setHeaders(array(\n\
          \    'Authorization' => 'Bearer {{TOKEN}}'\n  ));\n  \n  try {\n    $response\
          \ = $request->send();\n  \n    echo $response->getBody();\n  } catch (HttpException\
          \ $ex) {\n    echo $ex;\n  }\n"
      x-openapi-router-controller: openapi_server.controllers.webhooks_controller
  /v1/tools/sharefile:
    post:
      operationId: tools_share_file
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/tools_shareFile_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareFileResponse'
          description: successful operation
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid request
      security:
      - sakari_auth: []
      summary: Share file - use to host a file and generate a short link to be used
        directly in a message or as a link to media for a MMS
      tags:
      - tools
      x-openapi-router-controller: openapi_server.controllers.tools_controller
      x-codegen-request-body-name: body
components:
  parameters:
    accountId:
      description: Account to apply operations to
      explode: false
      in: path
      name: accountId
      required: true
      schema:
        type: string
      style: simple
    contactIdFilter:
      description: ID of contact
      explode: true
      in: query
      name: contactId
      required: false
      schema:
        type: string
      style: form
    conversationIdFilter:
      description: ID of conversation
      explode: true
      in: query
      name: conversationId
      required: false
      schema:
        type: string
      style: form
    email:
      description: Email of contact
      explode: true
      in: query
      name: email
      required: false
      schema:
        type: string
      style: form
    emailFilter:
      description: Filter by email or part of
      explode: true
      in: query
      name: email
      required: false
      schema:
        type: string
      style: form
    firstName:
      description: First name of contact
      explode: true
      in: query
      name: firstName
      required: false
      schema:
        type: string
      style: form
    firstNameFilter:
      description: Filter by first name or part of
      explode: true
      in: query
      name: firstName
      required: false
      schema:
        type: string
      style: form
    lastName:
      description: Last name of contact
      explode: true
      in: query
      name: lastName
      required: false
      schema:
        type: string
      style: form
    lastNameFilter:
      description: Filter by last name or part of
      explode: true
      in: query
      name: lastName
      required: false
      schema:
        type: string
      style: form
    limit:
      description: Maximum number of results to return
      explode: true
      in: query
      name: limit
      required: false
      schema:
        format: int64
        maximum: 100
        minimum: 1
        type: integer
      style: form
    mobile:
      description: Mobile of contact
      explode: true
      in: query
      name: mobile
      required: false
      schema:
        type: string
      style: form
    mobileFilter:
      description: Filter by mobile or part of
      explode: true
      in: query
      name: mobile
      required: false
      schema:
        type: string
      style: form
    nameFilter:
      description: Filter by name or part of
      explode: true
      in: query
      name: name
      required: false
      schema:
        type: string
      style: form
    offset:
      description: Results to skip when paginating through a result set
      explode: true
      in: query
      name: offset
      required: false
      schema:
        format: int64
        minimum: 0
        type: integer
      style: form
    tags:
      description: Tag of contact
      explode: true
      in: query
      name: tags
      required: false
      schema:
        type: string
      style: form
    tagsFilter:
      description: Filter by tag(s)
      explode: true
      in: query
      name: tags
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    Contact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactRequest'
      description: Pet object that needs to be added to the store
      required: true
    Contacts:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/ContactRequest'
            type: array
      description: List of contacts
      required: true
  schemas:
    AccountEvent:
      properties:
        accountId:
          title: accountId
          type: string
        type:
          $ref: '#/components/schemas/EventType'
      type: object
    AccountEventPayload:
      example:
        balance: 0.8008281904610115
      properties:
        balance:
          format: double
          title: balance
          type: number
      title: AccountEventPayload
      type: object
    AccountId:
      title: accountId
      type: string
    AttributeFilter:
      properties:
        comparator:
          enum:
          - =
          - <
          - <=
          - '>'
          - '>='
          - '!='
          type: string
        name:
          type: string
        value:
          type: string
      type: object
    Campaign:
      example:
        id: id
      properties:
        id:
          title: id
          type: string
      title: Campaign
      type: object
    CampaignRequest:
      example:
        template: template
        filters:
          attributes:
          - attributes
          - attributes
          contacts:
          - contacts
          - contacts
          tags:
          - tags
          - tags
        trigger:
          code: M
      properties:
        filters:
          $ref: '#/components/schemas/CampaignRequest_filters'
        template:
          title: template
          type: string
        trigger:
          $ref: '#/components/schemas/CampaignRequest_trigger'
      title: CampaignRequest
      type: object
    CampaignResponse:
      example:
        data:
          id: id
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Campaign'
        success:
          title: success
          type: boolean
      title: CampaignResponse
      type: object
    CampaignsResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Campaign'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - id: id
        - id: id
        success: true
        error:
          code: code
          message: message
      title: CampaignsResponse
    Contact:
      allOf:
      - $ref: '#/components/schemas/ContactRequest'
      - properties:
          created:
            $ref: '#/components/schemas/Updated'
          error:
            $ref: '#/components/schemas/Error'
          updated:
            $ref: '#/components/schemas/Updated'
          valid:
            type: boolean
        type: object
      example:
        valid: true
        firstName: Chris
        lastName: Bloggs
        created:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        mobile:
          country: country
          number: 123-456-7890
        attributes: null
        id: id
        error:
          code: CONT-010
          description: Contact has requested no further communication
        updated:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        email: chris@sakari.io
        tags:
        - visible: true
          tag: tag
        - visible: true
          tag: tag
      title: Contact
    ContactIdentifiers:
      example:
        firstName: Chris
        lastName: Bloggs
        mobile:
          country: country
          number: 123-456-7890
        id: id
        email: chris@sakari.io
      properties:
        email:
          example: chris@sakari.io
          title: email
          type: string
        firstName:
          example: Chris
          title: firstName
          type: string
        id:
          title: id
          type: string
        lastName:
          example: Bloggs
          title: lastName
          type: string
        mobile:
          $ref: '#/components/schemas/ContactIdentifiers_mobile'
      title: ContactIdentifiers
      type: object
    ContactRequest:
      allOf:
      - $ref: '#/components/schemas/ContactIdentifiers'
      - properties:
          attributes:
            $ref: '#/components/schemas/ContactRequest_allOf_attributes'
          tags:
            items:
              $ref: '#/components/schemas/Tag'
            type: array
        type: object
      example:
        firstName: Chris
        lastName: Bloggs
        mobile:
          country: country
          number: 123-456-7890
        attributes: null
        id: id
        email: chris@sakari.io
        tags:
        - visible: true
          tag: tag
        - visible: true
          tag: tag
      title: ContactRequest
    ContactResponse:
      example:
        data:
          valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Contact'
        success:
          default: true
          title: success
          type: boolean
      title: ContactResponse
      type: object
    ContactUploadResponse:
      properties:
        data:
          $ref: '#/components/schemas/ContactUploadResponse_data'
        success:
          default: true
          title: success
          type: boolean
      title: ContactUploadResponse
      type: object
    ContactsResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Contact'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        - valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        success: true
        error:
          code: code
          message: message
      title: ContactsResponse
    Conversation:
      example:
        phoneNumber:
          country: country
          number: number
          active: true
        unread:
        - unread
        - unread
        created:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        contact:
          firstName: Chris
          lastName: Bloggs
          mobile:
            country: country
            number: 123-456-7890
          id: id
          email: chris@sakari.io
        lastMessage:
          template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        closed: true
        id: id
        updated:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
      properties:
        closed:
          title: closed
          type: boolean
        contact:
          $ref: '#/components/schemas/ContactIdentifiers'
        created:
          $ref: '#/components/schemas/Updated'
        id:
          title: id
          type: string
        lastMessage:
          $ref: '#/components/schemas/Message'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        unread:
          items:
            type: string
          title: unread
          type: array
        updated:
          $ref: '#/components/schemas/Updated'
      title: Conversation
      type: object
    ConversationResponse:
      example:
        data:
          phoneNumber:
            country: country
            number: number
            active: true
          unread:
          - unread
          - unread
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          lastMessage:
            template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
          closed: true
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Conversation'
        success:
          title: success
          type: boolean
      title: ConversationResponse
      type: object
    ConversationsResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Conversation'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - phoneNumber:
            country: country
            number: number
            active: true
          unread:
          - unread
          - unread
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          lastMessage:
            template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
          closed: true
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
        - phoneNumber:
            country: country
            number: number
            active: true
          unread:
          - unread
          - unread
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          lastMessage:
            template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
          closed: true
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
        success: true
        error:
          code: code
          message: message
      title: ConversationsResponse
    Error:
      example:
        code: CONT-010
        description: Contact has requested no further communication
      properties:
        code:
          example: CONT-010
          title: code
          type: string
        description:
          example: Contact has requested no further communication
          title: description
          type: string
      title: Error
      type: object
    ErrorResponse:
      example:
        success: false
        error:
          code: CONV-001
          message: Invalid conversation id
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse_error'
        success:
          default: false
          example: false
          title: success
          type: boolean
      title: ErrorResponse
      type: object
    Event:
      example:
        accountId: accountId
        eventId: eventId
        data:
          balance: 0.8008281904610115
        type: message
      properties:
        accountId:
          title: accountId
          type: string
        data:
          $ref: '#/components/schemas/Event_data'
        eventId:
          title: eventId
          type: string
        type:
          $ref: '#/components/schemas/EventType'
      title: Event
      type: object
    EventType:
      enum:
      - account
      - messageStatus
      - messageIncoming
      example: message
      title: EventType
      type: string
    Message:
      example:
        template: template
        outgoing: true
        read: true
        created:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        media:
        - filename: filename
          type: type
          url: url
        - filename: filename
          type: type
          url: url
        error:
          code: CONT-010
          description: Contact has requested no further communication
        message: message
        segments: 6.027456183070403
        phoneNumber: "+1234567890"
        price: 0.8008281904610115
        contact:
          firstName: Chris
          lastName: Bloggs
          mobile:
            country: country
            number: 123-456-7890
          id: id
          email: chris@sakari.io
        id: id
        updated:
          at: 2000-01-23T04:56:07.000+00:00
          by:
            firstName: Joe
            lastName: Bloggs
            id: id
        conversation:
          id: id
        status: status
      properties:
        contact:
          $ref: '#/components/schemas/ContactIdentifiers'
        conversation:
          $ref: '#/components/schemas/Message_conversation'
        created:
          $ref: '#/components/schemas/Updated'
        error:
          $ref: '#/components/schemas/Error'
        id:
          title: id
          type: string
        media:
          description: List of media objects attached to message
          items:
            $ref: '#/components/schemas/Message_media_inner'
          title: media
          type: array
        message:
          title: message
          type: string
        outgoing:
          title: outgoing
          type: boolean
        phoneNumber:
          example: "+1234567890"
          title: phoneNumber
          type: string
        price:
          title: price
          type: number
        read:
          title: read
          type: boolean
        segments:
          title: segments
          type: number
        status:
          title: status
          type: string
        template:
          title: template
          type: string
        updated:
          $ref: '#/components/schemas/Updated'
      title: Message
      type: object
    MessageEventPayload:
      properties:
        contact:
          $ref: '#/components/schemas/ContactIdentifiers'
        error:
          title: error
          type: string
        message:
          title: message
          type: string
        status:
          title: status
          type: string
      title: MessageEventPayload
      type: object
    MessageResponse:
      example:
        data:
          template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Message'
        success:
          title: success
          type: boolean
      title: MessageResponse
      type: object
    MessagesResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Message'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        - template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        success: true
        error:
          code: code
          message: message
      title: MessagesResponse
    PaginatedResponse:
      properties:
        error:
          $ref: '#/components/schemas/PaginatedResponse_error'
        pagination:
          $ref: '#/components/schemas/PaginatedResponse_pagination'
        success:
          title: success
          type: boolean
      title: PaginatedResponse
      type: object
    PhoneNumber:
      example:
        country: country
        number: number
        active: true
      properties:
        active:
          title: active
          type: boolean
        country:
          title: country
          type: string
        number:
          title: number
          type: string
      title: PhoneNumber
      type: object
    SendMessagesRequest:
      example:
        template: template
        phoneNumberFilter:
          group:
            id: id
        conversationStrategy: conversationStrategy
        filters:
          attributes:
          - "{}"
          - "{}"
          tags:
          - tags
          - tags
        media:
        - url: url
        - url: url
        type: SMS
        conversations:
        - conversations
        - conversations
        contacts:
        - firstName: Chris
          lastName: Bloggs
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        - firstName: Chris
          lastName: Bloggs
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/ContactRequest'
          title: contacts
          type: array
        conversationStrategy:
          title: conversationStrategy
          type: string
        conversations:
          description: List of conversation ids to send messages to
          items:
            type: string
          title: conversations
          type: array
        filters:
          $ref: '#/components/schemas/SendMessagesRequest_filters'
        media:
          description: List of media objects to attach to message
          items:
            $ref: '#/components/schemas/SendMessagesRequest_media_inner'
          title: media
          type: array
        phoneNumberFilter:
          $ref: '#/components/schemas/SendMessagesRequest_phoneNumberFilter'
        template:
          title: template
          type: string
        type:
          enum:
          - SMS
          - MMS
          title: type
          type: string
      title: SendMessagesRequest
      type: object
    SendMessagesResponse:
      example:
        data:
          valid: 1
          jobId: jobId
          requested: 6
          estimatedPrice: 0.8008281904610115
          invalid:
          - valid: true
            firstName: Chris
            lastName: Bloggs
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            mobile:
              country: country
              number: 123-456-7890
            attributes: null
            id: id
            error:
              code: CONT-010
              description: Contact has requested no further communication
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            email: chris@sakari.io
            tags:
            - visible: true
              tag: tag
            - visible: true
              tag: tag
          - valid: true
            firstName: Chris
            lastName: Bloggs
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            mobile:
              country: country
              number: 123-456-7890
            attributes: null
            id: id
            error:
              code: CONT-010
              description: Contact has requested no further communication
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            email: chris@sakari.io
            tags:
            - visible: true
              tag: tag
            - visible: true
              tag: tag
          messages:
          - template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
          - template: template
            outgoing: true
            read: true
            created:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            media:
            - filename: filename
              type: type
              url: url
            - filename: filename
              type: type
              url: url
            error:
              code: CONT-010
              description: Contact has requested no further communication
            message: message
            segments: 6.027456183070403
            phoneNumber: "+1234567890"
            price: 0.8008281904610115
            contact:
              firstName: Chris
              lastName: Bloggs
              mobile:
                country: country
                number: 123-456-7890
              id: id
              email: chris@sakari.io
            id: id
            updated:
              at: 2000-01-23T04:56:07.000+00:00
              by:
                firstName: Joe
                lastName: Bloggs
                id: id
            conversation:
              id: id
            status: status
      properties:
        data:
          $ref: '#/components/schemas/SendMessagesResponse_data'
      title: SendMessagesResponse
      type: object
    ShareFileResponse:
      example:
        data:
          expires: 2000-01-23T04:56:07.000+00:00
          link: link
        success: true
      properties:
        data:
          $ref: '#/components/schemas/ShareFileResponse_data'
        success:
          title: success
          type: boolean
      title: ShareFileResponse
      type: object
    Tag:
      example:
        visible: true
        tag: tag
      properties:
        tag:
          title: tag
          type: string
        visible:
          title: visible
          type: boolean
      title: Tag
      type: object
    Template:
      allOf:
      - $ref: '#/components/schemas/TemplateRequest'
      - properties:
          id:
            type: string
        type: object
      example:
        template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
        name: name
        id: id
        type: SMS
      title: Template
    TemplateRequest:
      example:
        template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
        name: name
        type: SMS
      properties:
        name:
          title: name
          type: string
        template:
          example: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
          title: template
          type: string
        type:
          enum:
          - SMS
          - Web
          example: SMS
          title: type
          type: string
      title: TemplateRequest
      type: object
    TemplateResponse:
      example:
        data:
          template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
          name: name
          id: id
          type: SMS
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Template'
        success:
          title: success
          type: boolean
      title: TemplateResponse
      type: object
    TemplatesResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Template'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
          name: name
          id: id
          type: SMS
        - template: "Hi {{{firstName}}}. Grab 20% off today only at ABC Shoes"
          name: name
          id: id
          type: SMS
        success: true
        error:
          code: code
          message: message
      title: TemplatesResponse
    TokenRequest:
      example:
        grant_type: client_credentials
        client_secret: 00000000-0000-0000-0000-00000000000
        client_id: 00000000-0000-0000-0000-00000000000
      properties:
        client_id:
          example: 00000000-0000-0000-0000-00000000000
          title: client_id
          type: string
        client_secret:
          example: 00000000-0000-0000-0000-00000000000
          title: client_secret
          type: string
        grant_type:
          example: client_credentials
          title: grant_type
          type: string
      title: TokenRequest
      type: object
    TokenResponse:
      example:
        access_token: access_token
        token_type: token_type
      properties:
        access_token:
          title: access_token
          type: string
        token_type:
          title: token_type
          type: string
      title: TokenResponse
      type: object
    Updated:
      example:
        at: 2000-01-23T04:56:07.000+00:00
        by:
          firstName: Joe
          lastName: Bloggs
          id: id
      properties:
        at:
          format: date-time
          title: at
          type: string
        by:
          $ref: '#/components/schemas/Updated_by'
      title: Updated
      type: object
    Webhook:
      example:
        eventTypes:
        - message-received
        - message-received
        url: url
      properties:
        eventTypes:
          items:
            enum:
            - message-received
            - message-status
            - message-sent
            - conversation-closed
            - contact-created
            - contact-updated
            - contact-removed
            type: string
          title: eventTypes
          type: array
        url:
          title: url
          type: string
      title: Webhook
      type: object
    WebhookResponse:
      example:
        data:
          eventTypes:
          - message-received
          - message-received
          url: url
        success: true
      properties:
        data:
          $ref: '#/components/schemas/Webhook'
        success:
          title: success
          type: boolean
      title: WebhookResponse
      type: object
    WebhooksResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Webhook'
            type: array
        type: object
      example:
        pagination:
          offset: 6
          limit: 0
          totalCount: 1
        data:
        - eventTypes:
          - message-received
          - message-received
          url: url
        - eventTypes:
          - message-received
          - message-received
          url: url
        success: true
        error:
          code: code
          message: message
      title: WebhooksResponse
    campaigns_remove_200_response:
      example:
        success: true
      properties:
        success:
          title: success
          type: boolean
      title: campaigns_remove_200_response
      type: object
    contacts_create_201_response:
      oneOf:
      - $ref: '#/components/schemas/ContactsResponse'
      - $ref: '#/components/schemas/ContactUploadResponse'
      title: contacts_create_201_response
    webhooks_subscribe_request:
      properties:
        eventTypes:
          items:
            enum:
            - contact-created
            - contact-updated
            - contact-removed
            - message-received
            - message-sent
            - message-status
            - conversation-started
            - contact-opt-out
            - contact-opt-in
            - list-opt-out
            - list-opt-in
            type: string
          title: eventTypes
          type: array
        url:
          example: https://myserver.com/send/callback/here
          format: uri
          title: url
          type: string
      required:
      - callbackUrl
      title: webhooks_subscribe_request
      type: object
    tools_shareFile_request:
      properties:
        media:
          format: binary
          title: media
          type: string
      title: tools_shareFile_request
      type: object
    CampaignRequest_filters:
      example:
        attributes:
        - attributes
        - attributes
        contacts:
        - contacts
        - contacts
        tags:
        - tags
        - tags
      properties:
        attributes:
          items:
            type: string
          title: attributes
          type: array
        contacts:
          items:
            type: string
          title: contacts
          type: array
        tags:
          items:
            type: string
          title: tags
          type: array
      title: CampaignRequest_filters
      type: object
    CampaignRequest_trigger:
      example:
        code: M
      properties:
        code:
          description: |
            Campaign type specifies how it sources contacts and what event triggers its execution  Sort order
              * `M` - Manual
              * `S` - Scheduled
              * `FU` - File Upload
          enum:
          - M
          - S
          - FU
          title: code
          type: string
      title: CampaignRequest_trigger
      type: object
    ContactIdentifiers_mobile:
      example:
        country: country
        number: 123-456-7890
      properties:
        country:
          title: country
          type: string
        number:
          example: 123-456-7890
          title: number
          type: string
      title: ContactIdentifiers_mobile
      type: object
    ContactRequest_allOf_attributes:
      type: object
    ContactUploadResponse_data:
      properties:
        contacts:
          description: Uploaded contacts
          items:
            $ref: '#/components/schemas/Contact'
          title: contacts
          type: array
        errors:
          description: Contacts that failed validation
          items:
            $ref: '#/components/schemas/Contact'
          title: errors
          type: array
        inserted:
          title: inserted
          type: integer
        submitted:
          title: submitted
          type: integer
        success:
          title: success
          type: integer
        updated:
          title: updated
          type: integer
      title: ContactUploadResponse_data
      type: object
    ErrorResponse_error:
      example:
        code: CONV-001
        message: Invalid conversation id
      properties:
        code:
          example: CONV-001
          title: code
          type: string
        message:
          example: Invalid conversation id
          title: message
          type: string
      title: ErrorResponse_error
      type: object
    Event_data:
      oneOf:
      - $ref: '#/components/schemas/AccountEventPayload'
      - $ref: '#/components/schemas/MessageEventPayload'
      title: Event_data
    Message_conversation:
      example:
        id: id
      properties:
        id:
          title: id
          type: string
      title: Message_conversation
      type: object
    Message_media_inner:
      example:
        filename: filename
        type: type
        url: url
      properties:
        filename:
          title: filename
          type: string
        type:
          title: type
          type: string
        url:
          title: url
          type: string
      title: Message_media_inner
      type: object
    PaginatedResponse_error:
      example:
        code: code
        message: message
      properties:
        code:
          title: code
          type: string
        message:
          title: message
          type: string
      title: PaginatedResponse_error
      type: object
    PaginatedResponse_pagination:
      example:
        offset: 6
        limit: 0
        totalCount: 1
      properties:
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        totalCount:
          title: totalCount
          type: integer
      title: PaginatedResponse_pagination
      type: object
    SendMessagesRequest_filters:
      example:
        attributes:
        - "{}"
        - "{}"
        tags:
        - tags
        - tags
      properties:
        attributes:
          items:
            type: object
          title: attributes
          type: array
        tags:
          items:
            type: string
          title: tags
          type: array
      title: SendMessagesRequest_filters
      type: object
    SendMessagesRequest_media_inner:
      example:
        url: url
      properties:
        url:
          title: url
          type: string
      title: SendMessagesRequest_media_inner
      type: object
    SendMessagesRequest_phoneNumberFilter:
      example:
        group:
          id: id
      properties:
        group:
          $ref: '#/components/schemas/Message_conversation'
      title: SendMessagesRequest_phoneNumberFilter
      type: object
    SendMessagesResponse_data:
      example:
        valid: 1
        jobId: jobId
        requested: 6
        estimatedPrice: 0.8008281904610115
        invalid:
        - valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        - valid: true
          firstName: Chris
          lastName: Bloggs
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          mobile:
            country: country
            number: 123-456-7890
          attributes: null
          id: id
          error:
            code: CONT-010
            description: Contact has requested no further communication
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          email: chris@sakari.io
          tags:
          - visible: true
            tag: tag
          - visible: true
            tag: tag
        messages:
        - template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
        - template: template
          outgoing: true
          read: true
          created:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          media:
          - filename: filename
            type: type
            url: url
          - filename: filename
            type: type
            url: url
          error:
            code: CONT-010
            description: Contact has requested no further communication
          message: message
          segments: 6.027456183070403
          phoneNumber: "+1234567890"
          price: 0.8008281904610115
          contact:
            firstName: Chris
            lastName: Bloggs
            mobile:
              country: country
              number: 123-456-7890
            id: id
            email: chris@sakari.io
          id: id
          updated:
            at: 2000-01-23T04:56:07.000+00:00
            by:
              firstName: Joe
              lastName: Bloggs
              id: id
          conversation:
            id: id
          status: status
      properties:
        estimatedPrice:
          format: double
          title: estimatedPrice
          type: number
        invalid:
          items:
            $ref: '#/components/schemas/Contact'
          title: invalid
          type: array
        jobId:
          title: jobId
          type: string
        messages:
          items:
            $ref: '#/components/schemas/Message'
          title: messages
          type: array
        requested:
          title: requested
          type: integer
        valid:
          title: valid
          type: integer
      title: SendMessagesResponse_data
      type: object
    ShareFileResponse_data:
      example:
        expires: 2000-01-23T04:56:07.000+00:00
        link: link
      properties:
        expires:
          format: date-time
          title: expires
          type: string
        link:
          title: link
          type: string
      title: ShareFileResponse_data
      type: object
    Updated_by:
      example:
        firstName: Joe
        lastName: Bloggs
        id: id
      properties:
        firstName:
          example: Joe
          title: firstName
          type: string
        id:
          title: id
          type: string
        lastName:
          example: Bloggs
          title: lastName
          type: string
      title: Updated_by
      type: object
  securitySchemes:
    sakari_auth:
      flows:
        clientCredentials:
          scopes:
            messages:send: Send messages
          tokenUrl: /oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_sakari_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_sakari_auth
