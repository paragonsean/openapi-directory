# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PhoneNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, country: str=None, number: str=None):
        """PhoneNumber - a model defined in OpenAPI

        :param active: The active of this PhoneNumber.
        :param country: The country of this PhoneNumber.
        :param number: The number of this PhoneNumber.
        """
        self.openapi_types = {
            'active': bool,
            'country': str,
            'number': str
        }

        self.attribute_map = {
            'active': 'active',
            'country': 'country',
            'number': 'number'
        }

        self._active = active
        self._country = country
        self._number = number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhoneNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhoneNumber of this PhoneNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this PhoneNumber.


        :return: The active of this PhoneNumber.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this PhoneNumber.


        :param active: The active of this PhoneNumber.
        :type active: bool
        """

        self._active = active

    @property
    def country(self):
        """Gets the country of this PhoneNumber.


        :return: The country of this PhoneNumber.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this PhoneNumber.


        :param country: The country of this PhoneNumber.
        :type country: str
        """

        self._country = country

    @property
    def number(self):
        """Gets the number of this PhoneNumber.


        :return: The number of this PhoneNumber.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this PhoneNumber.


        :param number: The number of this PhoneNumber.
        :type number: str
        """

        self._number = number
