# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.campaign_request_filters import CampaignRequestFilters
from openapi_server.models.campaign_request_trigger import CampaignRequestTrigger
from openapi_server import util


class CampaignRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filters: CampaignRequestFilters=None, template: str=None, trigger: CampaignRequestTrigger=None):
        """CampaignRequest - a model defined in OpenAPI

        :param filters: The filters of this CampaignRequest.
        :param template: The template of this CampaignRequest.
        :param trigger: The trigger of this CampaignRequest.
        """
        self.openapi_types = {
            'filters': CampaignRequestFilters,
            'template': str,
            'trigger': CampaignRequestTrigger
        }

        self.attribute_map = {
            'filters': 'filters',
            'template': 'template',
            'trigger': 'trigger'
        }

        self._filters = filters
        self._template = template
        self._trigger = trigger

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CampaignRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CampaignRequest of this CampaignRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self):
        """Gets the filters of this CampaignRequest.


        :return: The filters of this CampaignRequest.
        :rtype: CampaignRequestFilters
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this CampaignRequest.


        :param filters: The filters of this CampaignRequest.
        :type filters: CampaignRequestFilters
        """

        self._filters = filters

    @property
    def template(self):
        """Gets the template of this CampaignRequest.


        :return: The template of this CampaignRequest.
        :rtype: str
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this CampaignRequest.


        :param template: The template of this CampaignRequest.
        :type template: str
        """

        self._template = template

    @property
    def trigger(self):
        """Gets the trigger of this CampaignRequest.


        :return: The trigger of this CampaignRequest.
        :rtype: CampaignRequestTrigger
        """
        return self._trigger

    @trigger.setter
    def trigger(self, trigger):
        """Sets the trigger of this CampaignRequest.


        :param trigger: The trigger of this CampaignRequest.
        :type trigger: CampaignRequestTrigger
        """

        self._trigger = trigger
