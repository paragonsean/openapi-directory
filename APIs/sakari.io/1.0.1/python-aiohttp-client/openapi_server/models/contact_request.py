# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_identifiers_mobile import ContactIdentifiersMobile
from openapi_server.models.tag import Tag
from openapi_server import util


class ContactRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, first_name: str=None, id: str=None, last_name: str=None, mobile: ContactIdentifiersMobile=None, attributes: object=None, tags: List[Tag]=None):
        """ContactRequest - a model defined in OpenAPI

        :param email: The email of this ContactRequest.
        :param first_name: The first_name of this ContactRequest.
        :param id: The id of this ContactRequest.
        :param last_name: The last_name of this ContactRequest.
        :param mobile: The mobile of this ContactRequest.
        :param attributes: The attributes of this ContactRequest.
        :param tags: The tags of this ContactRequest.
        """
        self.openapi_types = {
            'email': str,
            'first_name': str,
            'id': str,
            'last_name': str,
            'mobile': ContactIdentifiersMobile,
            'attributes': object,
            'tags': List[Tag]
        }

        self.attribute_map = {
            'email': 'email',
            'first_name': 'firstName',
            'id': 'id',
            'last_name': 'lastName',
            'mobile': 'mobile',
            'attributes': 'attributes',
            'tags': 'tags'
        }

        self._email = email
        self._first_name = first_name
        self._id = id
        self._last_name = last_name
        self._mobile = mobile
        self._attributes = attributes
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactRequest of this ContactRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this ContactRequest.


        :return: The email of this ContactRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ContactRequest.


        :param email: The email of this ContactRequest.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this ContactRequest.


        :return: The first_name of this ContactRequest.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ContactRequest.


        :param first_name: The first_name of this ContactRequest.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def id(self):
        """Gets the id of this ContactRequest.


        :return: The id of this ContactRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContactRequest.


        :param id: The id of this ContactRequest.
        :type id: str
        """

        self._id = id

    @property
    def last_name(self):
        """Gets the last_name of this ContactRequest.


        :return: The last_name of this ContactRequest.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ContactRequest.


        :param last_name: The last_name of this ContactRequest.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def mobile(self):
        """Gets the mobile of this ContactRequest.


        :return: The mobile of this ContactRequest.
        :rtype: ContactIdentifiersMobile
        """
        return self._mobile

    @mobile.setter
    def mobile(self, mobile):
        """Sets the mobile of this ContactRequest.


        :param mobile: The mobile of this ContactRequest.
        :type mobile: ContactIdentifiersMobile
        """

        self._mobile = mobile

    @property
    def attributes(self):
        """Gets the attributes of this ContactRequest.


        :return: The attributes of this ContactRequest.
        :rtype: object
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ContactRequest.


        :param attributes: The attributes of this ContactRequest.
        :type attributes: object
        """

        self._attributes = attributes

    @property
    def tags(self):
        """Gets the tags of this ContactRequest.


        :return: The tags of this ContactRequest.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ContactRequest.


        :param tags: The tags of this ContactRequest.
        :type tags: List[Tag]
        """

        self._tags = tags
