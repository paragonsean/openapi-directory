# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountEventPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, balance: float=None):
        """AccountEventPayload - a model defined in OpenAPI

        :param balance: The balance of this AccountEventPayload.
        """
        self.openapi_types = {
            'balance': float
        }

        self.attribute_map = {
            'balance': 'balance'
        }

        self._balance = balance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountEventPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountEventPayload of this AccountEventPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def balance(self):
        """Gets the balance of this AccountEventPayload.


        :return: The balance of this AccountEventPayload.
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this AccountEventPayload.


        :param balance: The balance of this AccountEventPayload.
        :type balance: float
        """

        self._balance = balance
