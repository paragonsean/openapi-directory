# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebhooksSubscribeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_types: List[str]=None, url: str=None):
        """WebhooksSubscribeRequest - a model defined in OpenAPI

        :param event_types: The event_types of this WebhooksSubscribeRequest.
        :param url: The url of this WebhooksSubscribeRequest.
        """
        self.openapi_types = {
            'event_types': List[str],
            'url': str
        }

        self.attribute_map = {
            'event_types': 'eventTypes',
            'url': 'url'
        }

        self._event_types = event_types
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhooksSubscribeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The webhooks_subscribe_request of this WebhooksSubscribeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_types(self):
        """Gets the event_types of this WebhooksSubscribeRequest.


        :return: The event_types of this WebhooksSubscribeRequest.
        :rtype: List[str]
        """
        return self._event_types

    @event_types.setter
    def event_types(self, event_types):
        """Sets the event_types of this WebhooksSubscribeRequest.


        :param event_types: The event_types of this WebhooksSubscribeRequest.
        :type event_types: List[str]
        """
        allowed_values = ["contact-created", "contact-updated", "contact-removed", "message-received", "message-sent", "message-status", "conversation-started", "contact-opt-out", "contact-opt-in", "list-opt-out", "list-opt-in"]  # noqa: E501
        if not set(event_types).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `event_types` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(event_types) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._event_types = event_types

    @property
    def url(self):
        """Gets the url of this WebhooksSubscribeRequest.


        :return: The url of this WebhooksSubscribeRequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this WebhooksSubscribeRequest.


        :param url: The url of this WebhooksSubscribeRequest.
        :type url: str
        """

        self._url = url
