/**
 * Scrape Website Email API
 * ScrapeWebsiteEmail is a service that exposes an api to fetch e-mails from a website.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Ping service.
* @module api/PingApi
* @version 0.1
*/
export default class PingApi {

    /**
    * Constructs a new PingApi. 
    * @alias module:api/PingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gETV1PingFormat operation.
     * @callback module:api/PingApi~gETV1PingFormatCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns whether the system is up.
     * <p>Returns ‘pong’ if the site is up</p> 
     * @param {module:api/PingApi~gETV1PingFormatCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETV1PingFormat(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/ping.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
