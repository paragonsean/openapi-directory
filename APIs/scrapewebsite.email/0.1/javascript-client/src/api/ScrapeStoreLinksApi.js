/**
 * Scrape Website Email API
 * ScrapeWebsiteEmail is a service that exposes an api to fetch e-mails from a website.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* ScrapeStoreLinks service.
* @module api/ScrapeStoreLinksApi
* @version 0.1
*/
export default class ScrapeStoreLinksApi {

    /**
    * Constructs a new ScrapeStoreLinksApi. 
    * @alias module:api/ScrapeStoreLinksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gETV1ScrapeStoreLinksFormat operation.
     * @callback module:api/ScrapeStoreLinksApi~gETV1ScrapeStoreLinksFormatCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attempts to grab the google store url or the ios store url for a site, after searching through the site.
     * @param {String} website <p>The website (ie. www.soundflair.com)</p> 
     * @param {module:api/ScrapeStoreLinksApi~gETV1ScrapeStoreLinksFormatCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gETV1ScrapeStoreLinksFormat(website, callback) {
      let postBody = null;
      // verify the required parameter 'website' is set
      if (website === undefined || website === null) {
        throw new Error("Missing the required parameter 'website' when calling gETV1ScrapeStoreLinksFormat");
      }

      let pathParams = {
      };
      let queryParams = {
        'website': website
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/scrape_store_links.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
