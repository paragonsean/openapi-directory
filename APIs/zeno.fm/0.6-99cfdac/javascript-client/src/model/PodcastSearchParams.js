/**
 * Aggregators API Service
 * Aggregators API
 *
 * The version of the OpenAPI document: 0.6-99cfdac
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodcastFilters from './PodcastFilters';

/**
 * The PodcastSearchParams model module.
 * @module model/PodcastSearchParams
 * @version 0.6-99cfdac
 */
class PodcastSearchParams {
    /**
     * Constructs a new <code>PodcastSearchParams</code>.
     * Podcast search params
     * @alias module:model/PodcastSearchParams
     */
    constructor() { 
        
        PodcastSearchParams.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['hitsPerPage'] = 10;
        obj['page'] = 1;
    }

    /**
     * Constructs a <code>PodcastSearchParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodcastSearchParams} obj Optional instance to populate.
     * @return {module:model/PodcastSearchParams} The populated <code>PodcastSearchParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodcastSearchParams();

            if (data.hasOwnProperty('filters')) {
                obj['filters'] = PodcastFilters.constructFromObject(data['filters']);
            }
            if (data.hasOwnProperty('hitsPerPage')) {
                obj['hitsPerPage'] = ApiClient.convertToType(data['hitsPerPage'], 'Number');
            }
            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'Number');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodcastSearchParams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodcastSearchParams</code>.
     */
    static validateJSON(data) {
        // validate the optional field `filters`
        if (data['filters']) { // data not null
          PodcastFilters.validateJSON(data['filters']);
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }

        return true;
    }


}



/**
 * @member {module:model/PodcastFilters} filters
 */
PodcastSearchParams.prototype['filters'] = undefined;

/**
 * @member {Number} hitsPerPage
 * @default 10
 */
PodcastSearchParams.prototype['hitsPerPage'] = 10;

/**
 * @member {Number} page
 * @default 1
 */
PodcastSearchParams.prototype['page'] = 1;

/**
 * @member {String} query
 */
PodcastSearchParams.prototype['query'] = undefined;






export default PodcastSearchParams;

