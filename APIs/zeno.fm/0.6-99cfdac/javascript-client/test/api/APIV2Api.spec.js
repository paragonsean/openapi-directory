/**
 * Aggregators API Service
 * Aggregators API
 *
 * The version of the OpenAPI document: 0.6-99cfdac
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AggregatorsApiService);
  }
}(this, function(expect, AggregatorsApiService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AggregatorsApiService.APIV2Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('APIV2Api', function() {
    describe('createPodcast', function() {
      it('should call createPodcast successfully', function(done) {
        //uncomment below and update the code to test createPodcast
        //instance.createPodcast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPodcastEpisode', function() {
      it('should call createPodcastEpisode successfully', function(done) {
        //uncomment below and update the code to test createPodcastEpisode
        //instance.createPodcastEpisode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePodcast', function() {
      it('should call deletePodcast successfully', function(done) {
        //uncomment below and update the code to test deletePodcast
        //instance.deletePodcast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePodcast1', function() {
      it('should call deletePodcast1 successfully', function(done) {
        //uncomment below and update the code to test deletePodcast1
        //instance.deletePodcast1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPartnerAggregatorStations', function() {
      it('should call getPartnerAggregatorStations successfully', function(done) {
        //uncomment below and update the code to test getPartnerAggregatorStations
        //instance.getPartnerAggregatorStations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcast', function() {
      it('should call getPodcast successfully', function(done) {
        //uncomment below and update the code to test getPodcast
        //instance.getPodcast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcastCategories', function() {
      it('should call getPodcastCategories successfully', function(done) {
        //uncomment below and update the code to test getPodcastCategories
        //instance.getPodcastCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcastCountries', function() {
      it('should call getPodcastCountries successfully', function(done) {
        //uncomment below and update the code to test getPodcastCountries
        //instance.getPodcastCountries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcastEpisode', function() {
      it('should call getPodcastEpisode successfully', function(done) {
        //uncomment below and update the code to test getPodcastEpisode
        //instance.getPodcastEpisode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcastEpisodes', function() {
      it('should call getPodcastEpisodes successfully', function(done) {
        //uncomment below and update the code to test getPodcastEpisodes
        //instance.getPodcastEpisodes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcastLanguages', function() {
      it('should call getPodcastLanguages successfully', function(done) {
        //uncomment below and update the code to test getPodcastLanguages
        //instance.getPodcastLanguages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStationCountries', function() {
      it('should call getStationCountries successfully', function(done) {
        //uncomment below and update the code to test getStationCountries
        //instance.getStationCountries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStationGenres', function() {
      it('should call getStationGenres successfully', function(done) {
        //uncomment below and update the code to test getStationGenres
        //instance.getStationGenres(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStationLanguages', function() {
      it('should call getStationLanguages successfully', function(done) {
        //uncomment below and update the code to test getStationLanguages
        //instance.getStationLanguages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchPodcasts', function() {
      it('should call searchPodcasts successfully', function(done) {
        //uncomment below and update the code to test searchPodcasts
        //instance.searchPodcasts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchStations', function() {
      it('should call searchStations successfully', function(done) {
        //uncomment below and update the code to test searchStations
        //instance.searchStations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePodcast', function() {
      it('should call updatePodcast successfully', function(done) {
        //uncomment below and update the code to test updatePodcast
        //instance.updatePodcast(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePodcastEpisode', function() {
      it('should call updatePodcastEpisode successfully', function(done) {
        //uncomment below and update the code to test updatePodcastEpisode
        //instance.updatePodcastEpisode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
