/**
 * Aggregators API Service
 * Aggregators API
 *
 * The version of the OpenAPI document: 0.6-99cfdac
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AggregatorsApiService);
  }
}(this, function(expect, AggregatorsApiService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AggregatorsApiService.PodcastEpisode();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PodcastEpisode', function() {
    it('should create an instance of PodcastEpisode', function() {
      // uncomment below and update the code to test PodcastEpisode
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be.a(AggregatorsApiService.PodcastEpisode);
    });

    it('should have the property author (base name: "author")', function() {
      // uncomment below and update the code to test the property author
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property block (base name: "block")', function() {
      // uncomment below and update the code to test the property block
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property episode (base name: "episode")', function() {
      // uncomment below and update the code to test the property episode
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property episodeType (base name: "episodeType")', function() {
      // uncomment below and update the code to test the property episodeType
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property explicit (base name: "explicit")', function() {
      // uncomment below and update the code to test the property explicit
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property fileUrl (base name: "fileUrl")', function() {
      // uncomment below and update the code to test the property fileUrl
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property publishDate (base name: "publishDate")', function() {
      // uncomment below and update the code to test the property publishDate
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property season (base name: "season")', function() {
      // uncomment below and update the code to test the property season
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property subtitle (base name: "subtitle")', function() {
      // uncomment below and update the code to test the property subtitle
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new AggregatorsApiService.PodcastEpisode();
      //expect(instance).to.be();
    });

  });

}));
