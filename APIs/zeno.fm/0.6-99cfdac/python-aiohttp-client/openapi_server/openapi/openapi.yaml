openapi: 3.0.1
info:
  description: Aggregators API
  title: Aggregators API Service
  version: 0.6-99cfdac
  x-apisguru-categories:
  - media
  x-logo:
    url: https://i.postimg.cc/m2vR2wwB/ZenoAPI.png
  x-origin:
  - format: openapi
    url: https://api.zeno.fm/v3/api-docs
    version: "3.0"
  x-providerName: zeno.fm
servers:
- description: Generated server url
  url: https://api.zeno.fm
security:
- API_Key: []
paths:
  /api/v2/podcasts/categories:
    get:
      description: Get the list of Categories that can be used to filter podcasts
        in the search podcasts request
      operationId: get_podcast_categories
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PodcastCategory'
                type: array
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
  /api/v2/podcasts/countries:
    get:
      description: Get the list of Countries that can be used to filter podcasts in
        the search podcasts request
      operationId: get_podcast_countries
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Country'
                type: array
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
  /api/v2/podcasts/create:
    post:
      description: Create podcast
      operationId: create_podcast
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createPodcast_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Podcast'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
      x-codegen-request-body-name: body
  /api/v2/podcasts/languages:
    get:
      description: Get the list of Languages that can be used to filter podcasts in
        the search podcasts request
      operationId: get_podcast_languages
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Language'
                type: array
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
  /api/v2/podcasts/search:
    post:
      description: Search podcasts
      operationId: search_podcasts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodcastSearchParams'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PodcastSearchResults'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
      x-codegen-request-body-name: body
  /api/v2/podcasts/{podcastKey}:
    delete:
      description: Delete podcast
      operationId: delete_podcast
      parameters:
      - explode: false
        in: path
        name: podcastKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
    get:
      description: Get podcast
      operationId: get_podcast
      parameters:
      - explode: false
        in: path
        name: podcastKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Podcast'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
    put:
      description: Update podcast
      operationId: update_podcast
      parameters:
      - explode: false
        in: path
        name: podcastKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updatePodcast_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Podcast'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
      x-codegen-request-body-name: body
  /api/v2/podcasts/{podcastKey}/episodes:
    get:
      description: Get podcast episodes
      operationId: get_podcast_episodes
      parameters:
      - explode: false
        in: path
        name: podcastKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          maximum: 1000
          minimum: 1
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          minimum: 0
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PodcastEpisodeList'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
  /api/v2/podcasts/{podcastKey}/episodes/create:
    post:
      description: Create podcast episode
      operationId: create_podcast_episode
      parameters:
      - explode: false
        in: path
        name: podcastKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createPodcastEpisode_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PodcastEpisode'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
      x-codegen-request-body-name: body
  /api/v2/podcasts/{podcastKey}/episodes/{episodeKey}:
    delete:
      description: Delete podcast episode
      operationId: delete_podcast1
      parameters:
      - explode: false
        in: path
        name: podcastKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: episodeKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
    get:
      description: Get podcast episode
      operationId: get_podcast_episode
      parameters:
      - explode: false
        in: path
        name: podcastKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: episodeKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PodcastEpisode'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
    put:
      description: Update podcast episode
      operationId: update_podcast_episode
      parameters:
      - explode: false
        in: path
        name: podcastKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: episodeKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updatePodcastEpisode_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PodcastEpisode'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
      x-codegen-request-body-name: body
  /api/v2/stations/countries:
    get:
      description: Get the list of Countries that can be used to filter stations in
        the search stations request
      operationId: get_station_countries
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Country'
                type: array
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
  /api/v2/stations/genres:
    get:
      description: Get the list of Genres that can be used to filter stations in the
        search stations request
      operationId: get_station_genres
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/StationGenre'
                type: array
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
  /api/v2/stations/languages:
    get:
      description: Get the list of Languages that can be used to filter stations in
        the search stations request
      operationId: get_station_languages
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Language'
                type: array
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
  /api/v2/stations/list:
    get:
      description: List stations
      operationId: get_partner_aggregator_stations
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: "1"
          minimum: 1
          type: string
        style: form
      - explode: true
        in: query
        name: hitsPerPage
        required: false
        schema:
          default: "10"
          maximum: 1000
          minimum: 1
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StationList'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
  /api/v2/stations/search:
    post:
      description: Search stations
      operationId: search_stations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationSearchParams'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StationSearchResults'
          description: OK
      tags:
      - API-v2
      x-openapi-router-controller: openapi_server.controllers.apiv2_controller
      x-codegen-request-body-name: body
components:
  schemas:
    Country:
      description: Country model
      example:
        iso: iso
        name: name
        iso3: iso3
      properties:
        iso:
          title: iso
          type: string
        iso3:
          title: iso3
          type: string
        name:
          title: name
          type: string
      title: Country
      type: object
    Language:
      description: Language model
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      title: Language
      type: object
    Podcast:
      description: Podcast model
      example:
        summary: summary
        country: country
        image: image
        copyright: copyright
        keywords:
        - keywords
        - keywords
        author: author
        link: link
        description: description
        language: language
        title: title
        ownerEmail: ownerEmail
        explicit: true
        ownerName: ownerName
        subtitle: subtitle
        showType: showType
        block: true
        categories:
        - categories
        - categories
        key: key
      properties:
        author:
          title: author
          type: string
        block:
          title: block
          type: boolean
        categories:
          items:
            type: string
          title: categories
          type: array
          uniqueItems: true
        copyright:
          title: copyright
          type: string
        country:
          title: country
          type: string
        description:
          title: description
          type: string
        explicit:
          title: explicit
          type: boolean
        image:
          title: image
          type: string
        key:
          title: key
          type: string
        keywords:
          items:
            type: string
          title: keywords
          type: array
          uniqueItems: true
        language:
          title: language
          type: string
        link:
          title: link
          type: string
        ownerEmail:
          title: ownerEmail
          type: string
        ownerName:
          title: ownerName
          type: string
        showType:
          title: showType
          type: string
        subtitle:
          title: subtitle
          type: string
        summary:
          title: summary
          type: string
        title:
          title: title
          type: string
      required:
      - categories
      - description
      - language
      - summary
      - title
      title: Podcast
      type: object
    PodcastCategory:
      description: PodcastCategory model
      example:
        parent: parent
        id: id
        text: text
      properties:
        id:
          title: id
          type: string
        parent:
          title: parent
          type: string
        text:
          title: text
          type: string
      title: PodcastCategory
      type: object
    PodcastEpisode:
      description: PodcastEpisode model
      example:
        summary: summary
        image: image
        author: author
        link: link
        publishDate: 2000-01-23T04:56:07.000+00:00
        description: description
        episode: 6
        title: title
        tags:
        - tags
        - tags
        duration: 0
        explicit: true
        episodeType: episodeType
        size: 5
        subtitle: subtitle
        season: 1
        block: true
        fileUrl: fileUrl
        key: key
      properties:
        author:
          title: author
          type: string
        block:
          title: block
          type: boolean
        description:
          title: description
          type: string
        duration:
          format: int64
          title: duration
          type: integer
        episode:
          format: int64
          title: episode
          type: integer
        episodeType:
          title: episodeType
          type: string
        explicit:
          title: explicit
          type: boolean
        fileUrl:
          title: fileUrl
          type: string
        image:
          title: image
          type: string
        key:
          title: key
          type: string
        link:
          title: link
          type: string
        publishDate:
          format: date-time
          title: publishDate
          type: string
        season:
          format: int64
          title: season
          type: integer
        size:
          format: int64
          title: size
          type: integer
        subtitle:
          title: subtitle
          type: string
        summary:
          title: summary
          type: string
        tags:
          items:
            type: string
          title: tags
          type: array
          uniqueItems: true
        title:
          title: title
          type: string
      required:
      - description
      - publishDate
      - summary
      - title
      title: PodcastEpisode
      type: object
    PodcastEpisodeList:
      description: List of PodcastEpisode
      example:
        total: 5
        items:
        - summary: summary
          image: image
          author: author
          link: link
          publishDate: 2000-01-23T04:56:07.000+00:00
          description: description
          episode: 6
          title: title
          tags:
          - tags
          - tags
          duration: 0
          explicit: true
          episodeType: episodeType
          size: 5
          subtitle: subtitle
          season: 1
          block: true
          fileUrl: fileUrl
          key: key
        - summary: summary
          image: image
          author: author
          link: link
          publishDate: 2000-01-23T04:56:07.000+00:00
          description: description
          episode: 6
          title: title
          tags:
          - tags
          - tags
          duration: 0
          explicit: true
          episodeType: episodeType
          size: 5
          subtitle: subtitle
          season: 1
          block: true
          fileUrl: fileUrl
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/PodcastEpisode'
          title: items
          type: array
        total:
          format: int64
          title: total
          type: integer
      title: PodcastEpisodeList
      type: object
    PodcastFilters:
      description: Filters for podcast search
      example:
        country:
        - country
        - country
        podcastType: podcasts
        language:
        - language
        - language
        category:
        - category
        - category
      properties:
        category:
          items:
            type: string
          title: category
          type: array
          uniqueItems: true
        country:
          items:
            type: string
          title: country
          type: array
          uniqueItems: true
        language:
          items:
            type: string
          title: language
          type: array
          uniqueItems: true
        podcastType:
          enum:
          - podcasts
          - shows
          title: podcastType
          type: string
      title: PodcastFilters
      type: object
    PodcastSearchParams:
      description: Podcast search params
      example:
        hitsPerPage: 81
        query: query
        filters:
          country:
          - country
          - country
          podcastType: podcasts
          language:
          - language
          - language
          category:
          - category
          - category
        page: 1
      properties:
        filters:
          $ref: '#/components/schemas/PodcastFilters'
        hitsPerPage:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          title: hitsPerPage
          type: integer
        page:
          default: 1
          format: int32
          minimum: 1
          title: page
          type: integer
        query:
          title: query
          type: string
      title: PodcastSearchParams
      type: object
    PodcastSearchResults:
      description: Podcast search results
      example:
        hits:
        - summary: summary
          country: country
          image: image
          copyright: copyright
          keywords:
          - keywords
          - keywords
          author: author
          link: link
          description: description
          language: language
          title: title
          ownerEmail: ownerEmail
          explicit: true
          ownerName: ownerName
          subtitle: subtitle
          showType: showType
          block: true
          categories:
          - categories
          - categories
          key: key
        - summary: summary
          country: country
          image: image
          copyright: copyright
          keywords:
          - keywords
          - keywords
          author: author
          link: link
          description: description
          language: language
          title: title
          ownerEmail: ownerEmail
          explicit: true
          ownerName: ownerName
          subtitle: subtitle
          showType: showType
          block: true
          categories:
          - categories
          - categories
          key: key
        total: 0
      properties:
        hits:
          items:
            $ref: '#/components/schemas/Podcast'
          title: hits
          type: array
        total:
          format: int64
          title: total
          type: integer
      title: PodcastSearchResults
      type: object
    Station:
      description: Station model
      example:
        country: country
        website: website
        city: city
        stream: stream
        genre: genre
        name: name
        description: description
        logo: logo
        language: language
        key: key
      properties:
        city:
          title: city
          type: string
        country:
          title: country
          type: string
        description:
          title: description
          type: string
        genre:
          title: genre
          type: string
        key:
          title: key
          type: string
        language:
          title: language
          type: string
        logo:
          title: logo
          type: string
        name:
          title: name
          type: string
        stream:
          title: stream
          type: string
        website:
          title: website
          type: string
      title: Station
      type: object
    StationFilters:
      description: Filters for station search
      example:
        country:
        - country
        - country
        genre:
        - genre
        - genre
        language:
        - language
        - language
      properties:
        country:
          items:
            type: string
          title: country
          type: array
          uniqueItems: true
        genre:
          items:
            type: string
          title: genre
          type: array
          uniqueItems: true
        language:
          items:
            type: string
          title: language
          type: array
          uniqueItems: true
      title: StationFilters
      type: object
    StationGenre:
      description: StationGenre model
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      title: StationGenre
      type: object
    StationList:
      description: List of Station
      example:
        total: 0
        items:
        - country: country
          website: website
          city: city
          stream: stream
          genre: genre
          name: name
          description: description
          logo: logo
          language: language
          key: key
        - country: country
          website: website
          city: city
          stream: stream
          genre: genre
          name: name
          description: description
          logo: logo
          language: language
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/Station'
          title: items
          type: array
        total:
          format: int64
          title: total
          type: integer
      title: StationList
      type: object
    StationSearchParams:
      description: Station search params
      example:
        hitsPerPage: 81
        query: query
        filters:
          country:
          - country
          - country
          genre:
          - genre
          - genre
          language:
          - language
          - language
        page: 1
      properties:
        filters:
          $ref: '#/components/schemas/StationFilters'
        hitsPerPage:
          default: 10
          format: int32
          maximum: 1000
          minimum: 1
          title: hitsPerPage
          type: integer
        page:
          default: 1
          format: int32
          minimum: 1
          title: page
          type: integer
        query:
          title: query
          type: string
      title: StationSearchParams
      type: object
    StationSearchResults:
      description: Station search results
      example:
        hits:
        - country: country
          website: website
          city: city
          stream: stream
          genre: genre
          name: name
          description: description
          logo: logo
          language: language
          key: key
        - country: country
          website: website
          city: city
          stream: stream
          genre: genre
          name: name
          description: description
          logo: logo
          language: language
          key: key
        total: 0
      properties:
        hits:
          items:
            $ref: '#/components/schemas/Station'
          title: hits
          type: array
        total:
          format: int64
          title: total
          type: integer
      title: StationSearchResults
      type: object
    createPodcast_request:
      properties:
        file_logo:
          format: binary
          type: string
        podcast:
          $ref: '#/components/schemas/Podcast'
      required:
      - file_logo
      - podcast
      type: object
    updatePodcast_request:
      properties:
        file_logo:
          format: binary
          type: string
        podcast:
          $ref: '#/components/schemas/Podcast'
      required:
      - podcast
      type: object
    createPodcastEpisode_request:
      properties:
        episode:
          $ref: '#/components/schemas/PodcastEpisode'
        file_logo:
          format: binary
          type: string
        file_media:
          format: binary
          type: string
      required:
      - episode
      - file_logo
      - file_media
      type: object
    updatePodcastEpisode_request:
      properties:
        episode:
          $ref: '#/components/schemas/PodcastEpisode'
        file_logo:
          format: binary
          type: string
      required:
      - episode
      type: object
  securitySchemes:
    API_Key:
      in: header
      name: x-zeno-api-key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_API_Key
