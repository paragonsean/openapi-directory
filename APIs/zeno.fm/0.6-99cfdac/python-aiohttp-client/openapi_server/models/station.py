# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Station(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, description: str=None, genre: str=None, key: str=None, language: str=None, logo: str=None, name: str=None, stream: str=None, website: str=None):
        """Station - a model defined in OpenAPI

        :param city: The city of this Station.
        :param country: The country of this Station.
        :param description: The description of this Station.
        :param genre: The genre of this Station.
        :param key: The key of this Station.
        :param language: The language of this Station.
        :param logo: The logo of this Station.
        :param name: The name of this Station.
        :param stream: The stream of this Station.
        :param website: The website of this Station.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'description': str,
            'genre': str,
            'key': str,
            'language': str,
            'logo': str,
            'name': str,
            'stream': str,
            'website': str
        }

        self.attribute_map = {
            'city': 'city',
            'country': 'country',
            'description': 'description',
            'genre': 'genre',
            'key': 'key',
            'language': 'language',
            'logo': 'logo',
            'name': 'name',
            'stream': 'stream',
            'website': 'website'
        }

        self._city = city
        self._country = country
        self._description = description
        self._genre = genre
        self._key = key
        self._language = language
        self._logo = logo
        self._name = name
        self._stream = stream
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Station':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Station of this Station.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this Station.


        :return: The city of this Station.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Station.


        :param city: The city of this Station.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this Station.


        :return: The country of this Station.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Station.


        :param country: The country of this Station.
        :type country: str
        """

        self._country = country

    @property
    def description(self):
        """Gets the description of this Station.


        :return: The description of this Station.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Station.


        :param description: The description of this Station.
        :type description: str
        """

        self._description = description

    @property
    def genre(self):
        """Gets the genre of this Station.


        :return: The genre of this Station.
        :rtype: str
        """
        return self._genre

    @genre.setter
    def genre(self, genre):
        """Sets the genre of this Station.


        :param genre: The genre of this Station.
        :type genre: str
        """

        self._genre = genre

    @property
    def key(self):
        """Gets the key of this Station.


        :return: The key of this Station.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Station.


        :param key: The key of this Station.
        :type key: str
        """

        self._key = key

    @property
    def language(self):
        """Gets the language of this Station.


        :return: The language of this Station.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Station.


        :param language: The language of this Station.
        :type language: str
        """

        self._language = language

    @property
    def logo(self):
        """Gets the logo of this Station.


        :return: The logo of this Station.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this Station.


        :param logo: The logo of this Station.
        :type logo: str
        """

        self._logo = logo

    @property
    def name(self):
        """Gets the name of this Station.


        :return: The name of this Station.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Station.


        :param name: The name of this Station.
        :type name: str
        """

        self._name = name

    @property
    def stream(self):
        """Gets the stream of this Station.


        :return: The stream of this Station.
        :rtype: str
        """
        return self._stream

    @stream.setter
    def stream(self, stream):
        """Sets the stream of this Station.


        :param stream: The stream of this Station.
        :type stream: str
        """

        self._stream = stream

    @property
    def website(self):
        """Gets the website of this Station.


        :return: The website of this Station.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Station.


        :param website: The website of this Station.
        :type website: str
        """

        self._website = website
