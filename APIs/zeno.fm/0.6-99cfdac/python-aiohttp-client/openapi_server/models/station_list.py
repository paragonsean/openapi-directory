# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.station import Station
from openapi_server import util


class StationList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[Station]=None, total: int=None):
        """StationList - a model defined in OpenAPI

        :param items: The items of this StationList.
        :param total: The total of this StationList.
        """
        self.openapi_types = {
            'items': List[Station],
            'total': int
        }

        self.attribute_map = {
            'items': 'items',
            'total': 'total'
        }

        self._items = items
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StationList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StationList of this StationList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this StationList.


        :return: The items of this StationList.
        :rtype: List[Station]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this StationList.


        :param items: The items of this StationList.
        :type items: List[Station]
        """

        self._items = items

    @property
    def total(self):
        """Gets the total of this StationList.


        :return: The total of this StationList.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this StationList.


        :param total: The total of this StationList.
        :type total: int
        """

        self._total = total
