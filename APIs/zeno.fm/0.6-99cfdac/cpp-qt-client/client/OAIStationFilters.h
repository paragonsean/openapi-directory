/**
 * Aggregators API Service
 * Aggregators API
 *
 * The version of the OpenAPI document: 0.6-99cfdac
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStationFilters.h
 *
 * Filters for station search
 */

#ifndef OAIStationFilters_H
#define OAIStationFilters_H

#include <QJsonObject>

#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStationFilters : public OAIObject {
public:
    OAIStationFilters();
    OAIStationFilters(QString json);
    ~OAIStationFilters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QSet<QString> getCountry() const;
    void setCountry(const QSet<QString> &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QSet<QString> getGenre() const;
    void setGenre(const QSet<QString> &genre);
    bool is_genre_Set() const;
    bool is_genre_Valid() const;

    QSet<QString> getLanguage() const;
    void setLanguage(const QSet<QString> &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QSet<QString> m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QSet<QString> m_genre;
    bool m_genre_isSet;
    bool m_genre_isValid;

    QSet<QString> m_language;
    bool m_language_isSet;
    bool m_language_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStationFilters)

#endif // OAIStationFilters_H
