/**
 * ESG Rating Data
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_search_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_search_get_200_response::OAI_search_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_search_get_200_response::OAI_search_get_200_response() {
    this->initializeModel();
}

OAI_search_get_200_response::~OAI_search_get_200_response() {}

void OAI_search_get_200_response::initializeModel() {

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_environment_score_isSet = false;
    m_environment_score_isValid = false;

    m_governance_score_isSet = false;
    m_governance_score_isValid = false;

    m_last_processing_date_isSet = false;
    m_last_processing_date_isValid = false;

    m_social_score_isSet = false;
    m_social_score_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAI_search_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_search_get_200_response::fromJsonObject(QJsonObject json) {

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_environment_score_isValid = ::OpenAPI::fromJsonValue(m_environment_score, json[QString("environment_score")]);
    m_environment_score_isSet = !json[QString("environment_score")].isNull() && m_environment_score_isValid;

    m_governance_score_isValid = ::OpenAPI::fromJsonValue(m_governance_score, json[QString("governance_score")]);
    m_governance_score_isSet = !json[QString("governance_score")].isNull() && m_governance_score_isValid;

    m_last_processing_date_isValid = ::OpenAPI::fromJsonValue(m_last_processing_date, json[QString("last_processing_date")]);
    m_last_processing_date_isSet = !json[QString("last_processing_date")].isNull() && m_last_processing_date_isValid;

    m_social_score_isValid = ::OpenAPI::fromJsonValue(m_social_score, json[QString("social_score")]);
    m_social_score_isSet = !json[QString("social_score")].isNull() && m_social_score_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAI_search_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_search_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_environment_score_isSet) {
        obj.insert(QString("environment_score"), ::OpenAPI::toJsonValue(m_environment_score));
    }
    if (m_governance_score_isSet) {
        obj.insert(QString("governance_score"), ::OpenAPI::toJsonValue(m_governance_score));
    }
    if (m_last_processing_date_isSet) {
        obj.insert(QString("last_processing_date"), ::OpenAPI::toJsonValue(m_last_processing_date));
    }
    if (m_social_score_isSet) {
        obj.insert(QString("social_score"), ::OpenAPI::toJsonValue(m_social_score));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

QString OAI_search_get_200_response::getCompanyName() const {
    return m_company_name;
}
void OAI_search_get_200_response::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAI_search_get_200_response::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAI_search_get_200_response::is_company_name_Valid() const{
    return m_company_name_isValid;
}

double OAI_search_get_200_response::getEnvironmentScore() const {
    return m_environment_score;
}
void OAI_search_get_200_response::setEnvironmentScore(const double &environment_score) {
    m_environment_score = environment_score;
    m_environment_score_isSet = true;
}

bool OAI_search_get_200_response::is_environment_score_Set() const{
    return m_environment_score_isSet;
}

bool OAI_search_get_200_response::is_environment_score_Valid() const{
    return m_environment_score_isValid;
}

double OAI_search_get_200_response::getGovernanceScore() const {
    return m_governance_score;
}
void OAI_search_get_200_response::setGovernanceScore(const double &governance_score) {
    m_governance_score = governance_score;
    m_governance_score_isSet = true;
}

bool OAI_search_get_200_response::is_governance_score_Set() const{
    return m_governance_score_isSet;
}

bool OAI_search_get_200_response::is_governance_score_Valid() const{
    return m_governance_score_isValid;
}

QDate OAI_search_get_200_response::getLastProcessingDate() const {
    return m_last_processing_date;
}
void OAI_search_get_200_response::setLastProcessingDate(const QDate &last_processing_date) {
    m_last_processing_date = last_processing_date;
    m_last_processing_date_isSet = true;
}

bool OAI_search_get_200_response::is_last_processing_date_Set() const{
    return m_last_processing_date_isSet;
}

bool OAI_search_get_200_response::is_last_processing_date_Valid() const{
    return m_last_processing_date_isValid;
}

double OAI_search_get_200_response::getSocialScore() const {
    return m_social_score;
}
void OAI_search_get_200_response::setSocialScore(const double &social_score) {
    m_social_score = social_score;
    m_social_score_isSet = true;
}

bool OAI_search_get_200_response::is_social_score_Set() const{
    return m_social_score_isSet;
}

bool OAI_search_get_200_response::is_social_score_Valid() const{
    return m_social_score_isValid;
}

double OAI_search_get_200_response::getTotal() const {
    return m_total;
}
void OAI_search_get_200_response::setTotal(const double &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAI_search_get_200_response::is_total_Set() const{
    return m_total_isSet;
}

bool OAI_search_get_200_response::is_total_Valid() const{
    return m_total_isValid;
}

bool OAI_search_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_governance_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_processing_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_social_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_search_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
