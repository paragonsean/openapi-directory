/*
 * ESG Rating Data
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SearchGet200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:01.569404-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SearchGet200Response {
  public static final String SERIALIZED_NAME_COMPANY_NAME = "company_name";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_ENVIRONMENT_SCORE = "environment_score";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_SCORE)
  private Double environmentScore;

  public static final String SERIALIZED_NAME_GOVERNANCE_SCORE = "governance_score";
  @SerializedName(SERIALIZED_NAME_GOVERNANCE_SCORE)
  private Double governanceScore;

  public static final String SERIALIZED_NAME_LAST_PROCESSING_DATE = "last_processing_date";
  @SerializedName(SERIALIZED_NAME_LAST_PROCESSING_DATE)
  private LocalDate lastProcessingDate;

  public static final String SERIALIZED_NAME_SOCIAL_SCORE = "social_score";
  @SerializedName(SERIALIZED_NAME_SOCIAL_SCORE)
  private Double socialScore;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  public SearchGet200Response() {
  }

  public SearchGet200Response companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public SearchGet200Response environmentScore(Double environmentScore) {
    this.environmentScore = environmentScore;
    return this;
  }

  /**
   * Get environmentScore
   * @return environmentScore
   */
  @javax.annotation.Nullable
  public Double getEnvironmentScore() {
    return environmentScore;
  }

  public void setEnvironmentScore(Double environmentScore) {
    this.environmentScore = environmentScore;
  }


  public SearchGet200Response governanceScore(Double governanceScore) {
    this.governanceScore = governanceScore;
    return this;
  }

  /**
   * Get governanceScore
   * @return governanceScore
   */
  @javax.annotation.Nullable
  public Double getGovernanceScore() {
    return governanceScore;
  }

  public void setGovernanceScore(Double governanceScore) {
    this.governanceScore = governanceScore;
  }


  public SearchGet200Response lastProcessingDate(LocalDate lastProcessingDate) {
    this.lastProcessingDate = lastProcessingDate;
    return this;
  }

  /**
   * Get lastProcessingDate
   * @return lastProcessingDate
   */
  @javax.annotation.Nullable
  public LocalDate getLastProcessingDate() {
    return lastProcessingDate;
  }

  public void setLastProcessingDate(LocalDate lastProcessingDate) {
    this.lastProcessingDate = lastProcessingDate;
  }


  public SearchGet200Response socialScore(Double socialScore) {
    this.socialScore = socialScore;
    return this;
  }

  /**
   * Get socialScore
   * @return socialScore
   */
  @javax.annotation.Nullable
  public Double getSocialScore() {
    return socialScore;
  }

  public void setSocialScore(Double socialScore) {
    this.socialScore = socialScore;
  }


  public SearchGet200Response total(Double total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  public Double getTotal() {
    return total;
  }

  public void setTotal(Double total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchGet200Response searchGet200Response = (SearchGet200Response) o;
    return Objects.equals(this.companyName, searchGet200Response.companyName) &&
        Objects.equals(this.environmentScore, searchGet200Response.environmentScore) &&
        Objects.equals(this.governanceScore, searchGet200Response.governanceScore) &&
        Objects.equals(this.lastProcessingDate, searchGet200Response.lastProcessingDate) &&
        Objects.equals(this.socialScore, searchGet200Response.socialScore) &&
        Objects.equals(this.total, searchGet200Response.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyName, environmentScore, governanceScore, lastProcessingDate, socialScore, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchGet200Response {\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    environmentScore: ").append(toIndentedString(environmentScore)).append("\n");
    sb.append("    governanceScore: ").append(toIndentedString(governanceScore)).append("\n");
    sb.append("    lastProcessingDate: ").append(toIndentedString(lastProcessingDate)).append("\n");
    sb.append("    socialScore: ").append(toIndentedString(socialScore)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("company_name");
    openapiFields.add("environment_score");
    openapiFields.add("governance_score");
    openapiFields.add("last_processing_date");
    openapiFields.add("social_score");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchGet200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchGet200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchGet200Response is not found in the empty JSON string", SearchGet200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchGet200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchGet200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("company_name") != null && !jsonObj.get("company_name").isJsonNull()) && !jsonObj.get("company_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchGet200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchGet200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchGet200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchGet200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchGet200Response>() {
           @Override
           public void write(JsonWriter out, SearchGet200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchGet200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchGet200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchGet200Response
   * @throws IOException if the JSON string is invalid with respect to SearchGet200Response
   */
  public static SearchGet200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchGet200Response.class);
  }

  /**
   * Convert an instance of SearchGet200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

