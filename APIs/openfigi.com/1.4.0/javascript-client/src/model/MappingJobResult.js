/**
 * OpenFIGI API
 * A free & open API for FIGI discovery.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: support@openfigi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FigiResult from './FigiResult';
import MappingJobResultFigiList from './MappingJobResultFigiList';
import MappingJobResultFigiNotFound from './MappingJobResultFigiNotFound';

/**
 * The MappingJobResult model module.
 * @module model/MappingJobResult
 * @version 1.4.0
 */
class MappingJobResult {
    /**
     * Constructs a new <code>MappingJobResult</code>.
     * @alias module:model/MappingJobResult
     * @param {(module:model/MappingJobResultFigiList|module:model/MappingJobResultFigiNotFound)} instance The actual instance to initialize MappingJobResult.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "MappingJobResultFigiList") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MappingJobResultFigiList.validateJSON(instance); // throw an exception if no match
                // create MappingJobResultFigiList from JS object
                this.actualInstance = MappingJobResultFigiList.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MappingJobResultFigiList
            errorMessages.push("Failed to construct MappingJobResultFigiList: " + err)
        }

        try {
            if (typeof instance === "MappingJobResultFigiNotFound") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MappingJobResultFigiNotFound.validateJSON(instance); // throw an exception if no match
                // create MappingJobResultFigiNotFound from JS object
                this.actualInstance = MappingJobResultFigiNotFound.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MappingJobResultFigiNotFound
            errorMessages.push("Failed to construct MappingJobResultFigiNotFound: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `MappingJobResult` with oneOf schemas MappingJobResultFigiList, MappingJobResultFigiNotFound. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `MappingJobResult` with oneOf schemas MappingJobResultFigiList, MappingJobResultFigiNotFound. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>MappingJobResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MappingJobResult} obj Optional instance to populate.
     * @return {module:model/MappingJobResult} The populated <code>MappingJobResult</code> instance.
     */
    static constructFromObject(data, obj) {
        return new MappingJobResult(data);
    }

    /**
     * Gets the actual instance, which can be <code>MappingJobResultFigiList</code>, <code>MappingJobResultFigiNotFound</code>.
     * @return {(module:model/MappingJobResultFigiList|module:model/MappingJobResultFigiNotFound)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>MappingJobResultFigiList</code>, <code>MappingJobResultFigiNotFound</code>.
     * @param {(module:model/MappingJobResultFigiList|module:model/MappingJobResultFigiNotFound)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = MappingJobResult.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of MappingJobResult from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/MappingJobResult} An instance of MappingJobResult.
     */
    static fromJSON = function(json_string){
        return MappingJobResult.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {Array.<module:model/FigiResult>} data
 */
MappingJobResult.prototype['data'] = undefined;

/**
 * @member {String} warning
 */
MappingJobResult.prototype['warning'] = undefined;


MappingJobResult.OneOf = ["MappingJobResultFigiList", "MappingJobResultFigiNotFound"];

export default MappingJobResult;

