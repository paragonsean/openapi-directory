/**
 * OpenFIGI API
 * A free & open API for FIGI discovery.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: support@openfigi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFigiResult.h
 *
 * 
 */

#ifndef OAIFigiResult_H
#define OAIFigiResult_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFigiResult : public OAIObject {
public:
    OAIFigiResult();
    OAIFigiResult(QString json);
    ~OAIFigiResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCompositeFigi() const;
    void setCompositeFigi(const QString &composite_figi);
    bool is_composite_figi_Set() const;
    bool is_composite_figi_Valid() const;

    QString getExchCode() const;
    void setExchCode(const QString &exch_code);
    bool is_exch_code_Set() const;
    bool is_exch_code_Valid() const;

    QString getFigi() const;
    void setFigi(const QString &figi);
    bool is_figi_Set() const;
    bool is_figi_Valid() const;

    QString getMarketSector() const;
    void setMarketSector(const QString &market_sector);
    bool is_market_sector_Set() const;
    bool is_market_sector_Valid() const;

    QString getMetadata() const;
    void setMetadata(const QString &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSecurityDescription() const;
    void setSecurityDescription(const QString &security_description);
    bool is_security_description_Set() const;
    bool is_security_description_Valid() const;

    QString getSecurityType() const;
    void setSecurityType(const QString &security_type);
    bool is_security_type_Set() const;
    bool is_security_type_Valid() const;

    QString getSecurityType2() const;
    void setSecurityType2(const QString &security_type2);
    bool is_security_type2_Set() const;
    bool is_security_type2_Valid() const;

    QString getShareClassFigi() const;
    void setShareClassFigi(const QString &share_class_figi);
    bool is_share_class_figi_Set() const;
    bool is_share_class_figi_Valid() const;

    QString getTicker() const;
    void setTicker(const QString &ticker);
    bool is_ticker_Set() const;
    bool is_ticker_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_composite_figi;
    bool m_composite_figi_isSet;
    bool m_composite_figi_isValid;

    QString m_exch_code;
    bool m_exch_code_isSet;
    bool m_exch_code_isValid;

    QString m_figi;
    bool m_figi_isSet;
    bool m_figi_isValid;

    QString m_market_sector;
    bool m_market_sector_isSet;
    bool m_market_sector_isValid;

    QString m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_security_description;
    bool m_security_description_isSet;
    bool m_security_description_isValid;

    QString m_security_type;
    bool m_security_type_isSet;
    bool m_security_type_isValid;

    QString m_security_type2;
    bool m_security_type2_isSet;
    bool m_security_type2_isValid;

    QString m_share_class_figi;
    bool m_share_class_figi_isSet;
    bool m_share_class_figi_isValid;

    QString m_ticker;
    bool m_ticker_isSet;
    bool m_ticker_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFigiResult)

#endif // OAIFigiResult_H
