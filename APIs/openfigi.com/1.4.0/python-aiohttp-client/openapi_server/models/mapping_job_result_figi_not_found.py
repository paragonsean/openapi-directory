# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MappingJobResultFigiNotFound(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, warning: str=None):
        """MappingJobResultFigiNotFound - a model defined in OpenAPI

        :param warning: The warning of this MappingJobResultFigiNotFound.
        """
        self.openapi_types = {
            'warning': str
        }

        self.attribute_map = {
            'warning': 'warning'
        }

        self._warning = warning

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MappingJobResultFigiNotFound':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MappingJobResultFigiNotFound of this MappingJobResultFigiNotFound.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def warning(self):
        """Gets the warning of this MappingJobResultFigiNotFound.


        :return: The warning of this MappingJobResultFigiNotFound.
        :rtype: str
        """
        return self._warning

    @warning.setter
    def warning(self, warning):
        """Sets the warning of this MappingJobResultFigiNotFound.


        :param warning: The warning of this MappingJobResultFigiNotFound.
        :type warning: str
        """

        self._warning = warning
