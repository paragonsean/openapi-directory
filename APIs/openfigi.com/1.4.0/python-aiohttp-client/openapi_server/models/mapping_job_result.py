# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.figi_result import FigiResult
from openapi_server.models.mapping_job_result_figi_list import MappingJobResultFigiList
from openapi_server.models.mapping_job_result_figi_not_found import MappingJobResultFigiNotFound
from openapi_server import util


class MappingJobResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[FigiResult]=None, warning: str=None):
        """MappingJobResult - a model defined in OpenAPI

        :param data: The data of this MappingJobResult.
        :param warning: The warning of this MappingJobResult.
        """
        self.openapi_types = {
            'data': List[FigiResult],
            'warning': str
        }

        self.attribute_map = {
            'data': 'data',
            'warning': 'warning'
        }

        self._data = data
        self._warning = warning

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MappingJobResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MappingJobResult of this MappingJobResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this MappingJobResult.


        :return: The data of this MappingJobResult.
        :rtype: List[FigiResult]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this MappingJobResult.


        :param data: The data of this MappingJobResult.
        :type data: List[FigiResult]
        """

        self._data = data

    @property
    def warning(self):
        """Gets the warning of this MappingJobResult.


        :return: The warning of this MappingJobResult.
        :rtype: str
        """
        return self._warning

    @warning.setter
    def warning(self, warning):
        """Sets the warning of this MappingJobResult.


        :param warning: The warning of this MappingJobResult.
        :type warning: str
        """

        self._warning = warning
