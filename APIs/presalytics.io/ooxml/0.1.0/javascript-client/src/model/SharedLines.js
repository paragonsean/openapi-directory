/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SharedLines model module.
 * @module model/SharedLines
 * @version 0.1.0
 */
class SharedLines {
    /**
     * Constructs a new <code>SharedLines</code>.
     * @alias module:model/SharedLines
     */
    constructor() { 
        
        SharedLines.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SharedLines</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharedLines} obj Optional instance to populate.
     * @return {module:model/SharedLines} The populated <code>SharedLines</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharedLines();

            if (data.hasOwnProperty('bLtoTRBorderId')) {
                obj['bLtoTRBorderId'] = ApiClient.convertToType(data['bLtoTRBorderId'], 'String');
            }
            if (data.hasOwnProperty('bottomBorderId')) {
                obj['bottomBorderId'] = ApiClient.convertToType(data['bottomBorderId'], 'String');
            }
            if (data.hasOwnProperty('connectorId')) {
                obj['connectorId'] = ApiClient.convertToType(data['connectorId'], 'String');
            }
            if (data.hasOwnProperty('dashTypeId')) {
                obj['dashTypeId'] = ApiClient.convertToType(data['dashTypeId'], 'Number');
            }
            if (data.hasOwnProperty('headEndHeightId')) {
                obj['headEndHeightId'] = ApiClient.convertToType(data['headEndHeightId'], 'Number');
            }
            if (data.hasOwnProperty('headEndTypeId')) {
                obj['headEndTypeId'] = ApiClient.convertToType(data['headEndTypeId'], 'Number');
            }
            if (data.hasOwnProperty('headEndWidthId')) {
                obj['headEndWidthId'] = ApiClient.convertToType(data['headEndWidthId'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('leftBorderId')) {
                obj['leftBorderId'] = ApiClient.convertToType(data['leftBorderId'], 'String');
            }
            if (data.hasOwnProperty('lineMapId')) {
                obj['lineMapId'] = ApiClient.convertToType(data['lineMapId'], 'String');
            }
            if (data.hasOwnProperty('rightBorderId')) {
                obj['rightBorderId'] = ApiClient.convertToType(data['rightBorderId'], 'String');
            }
            if (data.hasOwnProperty('shapeId')) {
                obj['shapeId'] = ApiClient.convertToType(data['shapeId'], 'String');
            }
            if (data.hasOwnProperty('tLtoBRBorderId')) {
                obj['tLtoBRBorderId'] = ApiClient.convertToType(data['tLtoBRBorderId'], 'String');
            }
            if (data.hasOwnProperty('tailEndHeightId')) {
                obj['tailEndHeightId'] = ApiClient.convertToType(data['tailEndHeightId'], 'Number');
            }
            if (data.hasOwnProperty('tailEndTypeId')) {
                obj['tailEndTypeId'] = ApiClient.convertToType(data['tailEndTypeId'], 'Number');
            }
            if (data.hasOwnProperty('tailEndWidthId')) {
                obj['tailEndWidthId'] = ApiClient.convertToType(data['tailEndWidthId'], 'Number');
            }
            if (data.hasOwnProperty('topBorderId')) {
                obj['topBorderId'] = ApiClient.convertToType(data['topBorderId'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SharedLines</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharedLines</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bLtoTRBorderId'] && !(typeof data['bLtoTRBorderId'] === 'string' || data['bLtoTRBorderId'] instanceof String)) {
            throw new Error("Expected the field `bLtoTRBorderId` to be a primitive type in the JSON string but got " + data['bLtoTRBorderId']);
        }
        // ensure the json data is a string
        if (data['bottomBorderId'] && !(typeof data['bottomBorderId'] === 'string' || data['bottomBorderId'] instanceof String)) {
            throw new Error("Expected the field `bottomBorderId` to be a primitive type in the JSON string but got " + data['bottomBorderId']);
        }
        // ensure the json data is a string
        if (data['connectorId'] && !(typeof data['connectorId'] === 'string' || data['connectorId'] instanceof String)) {
            throw new Error("Expected the field `connectorId` to be a primitive type in the JSON string but got " + data['connectorId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['leftBorderId'] && !(typeof data['leftBorderId'] === 'string' || data['leftBorderId'] instanceof String)) {
            throw new Error("Expected the field `leftBorderId` to be a primitive type in the JSON string but got " + data['leftBorderId']);
        }
        // ensure the json data is a string
        if (data['lineMapId'] && !(typeof data['lineMapId'] === 'string' || data['lineMapId'] instanceof String)) {
            throw new Error("Expected the field `lineMapId` to be a primitive type in the JSON string but got " + data['lineMapId']);
        }
        // ensure the json data is a string
        if (data['rightBorderId'] && !(typeof data['rightBorderId'] === 'string' || data['rightBorderId'] instanceof String)) {
            throw new Error("Expected the field `rightBorderId` to be a primitive type in the JSON string but got " + data['rightBorderId']);
        }
        // ensure the json data is a string
        if (data['shapeId'] && !(typeof data['shapeId'] === 'string' || data['shapeId'] instanceof String)) {
            throw new Error("Expected the field `shapeId` to be a primitive type in the JSON string but got " + data['shapeId']);
        }
        // ensure the json data is a string
        if (data['tLtoBRBorderId'] && !(typeof data['tLtoBRBorderId'] === 'string' || data['tLtoBRBorderId'] instanceof String)) {
            throw new Error("Expected the field `tLtoBRBorderId` to be a primitive type in the JSON string but got " + data['tLtoBRBorderId']);
        }
        // ensure the json data is a string
        if (data['topBorderId'] && !(typeof data['topBorderId'] === 'string' || data['topBorderId'] instanceof String)) {
            throw new Error("Expected the field `topBorderId` to be a primitive type in the JSON string but got " + data['topBorderId']);
        }

        return true;
    }


}



/**
 * @member {String} bLtoTRBorderId
 */
SharedLines.prototype['bLtoTRBorderId'] = undefined;

/**
 * @member {String} bottomBorderId
 */
SharedLines.prototype['bottomBorderId'] = undefined;

/**
 * @member {String} connectorId
 */
SharedLines.prototype['connectorId'] = undefined;

/**
 * @member {Number} dashTypeId
 */
SharedLines.prototype['dashTypeId'] = undefined;

/**
 * @member {Number} headEndHeightId
 */
SharedLines.prototype['headEndHeightId'] = undefined;

/**
 * @member {Number} headEndTypeId
 */
SharedLines.prototype['headEndTypeId'] = undefined;

/**
 * @member {Number} headEndWidthId
 */
SharedLines.prototype['headEndWidthId'] = undefined;

/**
 * @member {String} id
 */
SharedLines.prototype['id'] = undefined;

/**
 * @member {String} leftBorderId
 */
SharedLines.prototype['leftBorderId'] = undefined;

/**
 * @member {String} lineMapId
 */
SharedLines.prototype['lineMapId'] = undefined;

/**
 * @member {String} rightBorderId
 */
SharedLines.prototype['rightBorderId'] = undefined;

/**
 * @member {String} shapeId
 */
SharedLines.prototype['shapeId'] = undefined;

/**
 * @member {String} tLtoBRBorderId
 */
SharedLines.prototype['tLtoBRBorderId'] = undefined;

/**
 * @member {Number} tailEndHeightId
 */
SharedLines.prototype['tailEndHeightId'] = undefined;

/**
 * @member {Number} tailEndTypeId
 */
SharedLines.prototype['tailEndTypeId'] = undefined;

/**
 * @member {Number} tailEndWidthId
 */
SharedLines.prototype['tailEndWidthId'] = undefined;

/**
 * @member {String} topBorderId
 */
SharedLines.prototype['topBorderId'] = undefined;

/**
 * @member {Number} weight
 */
SharedLines.prototype['weight'] = undefined;






export default SharedLines;

