/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TableTableDataDTO model module.
 * @module model/TableTableDataDTO
 * @version 0.1.0
 */
class TableTableDataDTO {
    /**
     * Constructs a new <code>TableTableDataDTO</code>.
     * @alias module:model/TableTableDataDTO
     */
    constructor() { 
        
        TableTableDataDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TableTableDataDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TableTableDataDTO} obj Optional instance to populate.
     * @return {module:model/TableTableDataDTO} The populated <code>TableTableDataDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TableTableDataDTO();

            if (data.hasOwnProperty('tableData')) {
                obj['tableData'] = ApiClient.convertToType(data['tableData'], [['String']]);
            }
            if (data.hasOwnProperty('tableId')) {
                obj['tableId'] = ApiClient.convertToType(data['tableId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TableTableDataDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TableTableDataDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['tableData'])) {
            throw new Error("Expected the field `tableData` to be an array in the JSON data but got " + data['tableData']);
        }
        // ensure the json data is a string
        if (data['tableId'] && !(typeof data['tableId'] === 'string' || data['tableId'] instanceof String)) {
            throw new Error("Expected the field `tableId` to be a primitive type in the JSON string but got " + data['tableId']);
        }

        return true;
    }


}



/**
 * @member {Array.<Array.<String>>} tableData
 */
TableTableDataDTO.prototype['tableData'] = undefined;

/**
 * @member {String} tableId
 */
TableTableDataDTO.prototype['tableId'] = undefined;






export default TableTableDataDTO;

