/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SharedEffectAttributesDetails from './SharedEffectAttributesDetails';
import SharedGradientFillsDetails from './SharedGradientFillsDetails';
import SharedImageFillsDetails from './SharedImageFillsDetails';
import SharedSolidFillsDetails from './SharedSolidFillsDetails';
import SlideConnectorDetails from './SlideConnectorDetails';
import SlideShapesDetails from './SlideShapesDetails';
import TableCellsDetails from './TableCellsDetails';
import ThemeBackgroundFillsDetails from './ThemeBackgroundFillsDetails';
import ThemeFillsDetails from './ThemeFillsDetails';

/**
 * The SharedFillMapDetails model module.
 * @module model/SharedFillMapDetails
 * @version 0.1.0
 */
class SharedFillMapDetails {
    /**
     * Constructs a new <code>SharedFillMapDetails</code>.
     * @alias module:model/SharedFillMapDetails
     */
    constructor() { 
        
        SharedFillMapDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SharedFillMapDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharedFillMapDetails} obj Optional instance to populate.
     * @return {module:model/SharedFillMapDetails} The populated <code>SharedFillMapDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharedFillMapDetails();

            if (data.hasOwnProperty('connector')) {
                obj['connector'] = SlideConnectorDetails.constructFromObject(data['connector']);
            }
            if (data.hasOwnProperty('connectorId')) {
                obj['connectorId'] = ApiClient.convertToType(data['connectorId'], 'String');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('dateModified')) {
                obj['dateModified'] = ApiClient.convertToType(data['dateModified'], 'Date');
            }
            if (data.hasOwnProperty('effectAttribute')) {
                obj['effectAttribute'] = SharedEffectAttributesDetails.constructFromObject(data['effectAttribute']);
            }
            if (data.hasOwnProperty('effectAttributeId')) {
                obj['effectAttributeId'] = ApiClient.convertToType(data['effectAttributeId'], 'String');
            }
            if (data.hasOwnProperty('fillTypeId')) {
                obj['fillTypeId'] = ApiClient.convertToType(data['fillTypeId'], 'Number');
            }
            if (data.hasOwnProperty('gradientFill')) {
                obj['gradientFill'] = SharedGradientFillsDetails.constructFromObject(data['gradientFill']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('imageFill')) {
                obj['imageFill'] = SharedImageFillsDetails.constructFromObject(data['imageFill']);
            }
            if (data.hasOwnProperty('shape')) {
                obj['shape'] = SlideShapesDetails.constructFromObject(data['shape']);
            }
            if (data.hasOwnProperty('shapeId')) {
                obj['shapeId'] = ApiClient.convertToType(data['shapeId'], 'String');
            }
            if (data.hasOwnProperty('solidFill')) {
                obj['solidFill'] = SharedSolidFillsDetails.constructFromObject(data['solidFill']);
            }
            if (data.hasOwnProperty('tableCell')) {
                obj['tableCell'] = TableCellsDetails.constructFromObject(data['tableCell']);
            }
            if (data.hasOwnProperty('tableCellId')) {
                obj['tableCellId'] = ApiClient.convertToType(data['tableCellId'], 'String');
            }
            if (data.hasOwnProperty('themeBackgroundFill')) {
                obj['themeBackgroundFill'] = ThemeBackgroundFillsDetails.constructFromObject(data['themeBackgroundFill']);
            }
            if (data.hasOwnProperty('themeBackgroundFillId')) {
                obj['themeBackgroundFillId'] = ApiClient.convertToType(data['themeBackgroundFillId'], 'String');
            }
            if (data.hasOwnProperty('themeFill')) {
                obj['themeFill'] = ThemeFillsDetails.constructFromObject(data['themeFill']);
            }
            if (data.hasOwnProperty('themeFillId')) {
                obj['themeFillId'] = ApiClient.convertToType(data['themeFillId'], 'String');
            }
            if (data.hasOwnProperty('userCreated')) {
                obj['userCreated'] = ApiClient.convertToType(data['userCreated'], 'String');
            }
            if (data.hasOwnProperty('userModified')) {
                obj['userModified'] = ApiClient.convertToType(data['userModified'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SharedFillMapDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharedFillMapDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `connector`
        if (data['connector']) { // data not null
          SlideConnectorDetails.validateJSON(data['connector']);
        }
        // ensure the json data is a string
        if (data['connectorId'] && !(typeof data['connectorId'] === 'string' || data['connectorId'] instanceof String)) {
            throw new Error("Expected the field `connectorId` to be a primitive type in the JSON string but got " + data['connectorId']);
        }
        // validate the optional field `effectAttribute`
        if (data['effectAttribute']) { // data not null
          SharedEffectAttributesDetails.validateJSON(data['effectAttribute']);
        }
        // ensure the json data is a string
        if (data['effectAttributeId'] && !(typeof data['effectAttributeId'] === 'string' || data['effectAttributeId'] instanceof String)) {
            throw new Error("Expected the field `effectAttributeId` to be a primitive type in the JSON string but got " + data['effectAttributeId']);
        }
        // validate the optional field `gradientFill`
        if (data['gradientFill']) { // data not null
          SharedGradientFillsDetails.validateJSON(data['gradientFill']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `imageFill`
        if (data['imageFill']) { // data not null
          SharedImageFillsDetails.validateJSON(data['imageFill']);
        }
        // validate the optional field `shape`
        if (data['shape']) { // data not null
          SlideShapesDetails.validateJSON(data['shape']);
        }
        // ensure the json data is a string
        if (data['shapeId'] && !(typeof data['shapeId'] === 'string' || data['shapeId'] instanceof String)) {
            throw new Error("Expected the field `shapeId` to be a primitive type in the JSON string but got " + data['shapeId']);
        }
        // validate the optional field `solidFill`
        if (data['solidFill']) { // data not null
          SharedSolidFillsDetails.validateJSON(data['solidFill']);
        }
        // validate the optional field `tableCell`
        if (data['tableCell']) { // data not null
          TableCellsDetails.validateJSON(data['tableCell']);
        }
        // ensure the json data is a string
        if (data['tableCellId'] && !(typeof data['tableCellId'] === 'string' || data['tableCellId'] instanceof String)) {
            throw new Error("Expected the field `tableCellId` to be a primitive type in the JSON string but got " + data['tableCellId']);
        }
        // validate the optional field `themeBackgroundFill`
        if (data['themeBackgroundFill']) { // data not null
          ThemeBackgroundFillsDetails.validateJSON(data['themeBackgroundFill']);
        }
        // ensure the json data is a string
        if (data['themeBackgroundFillId'] && !(typeof data['themeBackgroundFillId'] === 'string' || data['themeBackgroundFillId'] instanceof String)) {
            throw new Error("Expected the field `themeBackgroundFillId` to be a primitive type in the JSON string but got " + data['themeBackgroundFillId']);
        }
        // validate the optional field `themeFill`
        if (data['themeFill']) { // data not null
          ThemeFillsDetails.validateJSON(data['themeFill']);
        }
        // ensure the json data is a string
        if (data['themeFillId'] && !(typeof data['themeFillId'] === 'string' || data['themeFillId'] instanceof String)) {
            throw new Error("Expected the field `themeFillId` to be a primitive type in the JSON string but got " + data['themeFillId']);
        }
        // ensure the json data is a string
        if (data['userCreated'] && !(typeof data['userCreated'] === 'string' || data['userCreated'] instanceof String)) {
            throw new Error("Expected the field `userCreated` to be a primitive type in the JSON string but got " + data['userCreated']);
        }
        // ensure the json data is a string
        if (data['userModified'] && !(typeof data['userModified'] === 'string' || data['userModified'] instanceof String)) {
            throw new Error("Expected the field `userModified` to be a primitive type in the JSON string but got " + data['userModified']);
        }

        return true;
    }


}



/**
 * @member {module:model/SlideConnectorDetails} connector
 */
SharedFillMapDetails.prototype['connector'] = undefined;

/**
 * @member {String} connectorId
 */
SharedFillMapDetails.prototype['connectorId'] = undefined;

/**
 * @member {Date} dateCreated
 */
SharedFillMapDetails.prototype['dateCreated'] = undefined;

/**
 * @member {Date} dateModified
 */
SharedFillMapDetails.prototype['dateModified'] = undefined;

/**
 * @member {module:model/SharedEffectAttributesDetails} effectAttribute
 */
SharedFillMapDetails.prototype['effectAttribute'] = undefined;

/**
 * @member {String} effectAttributeId
 */
SharedFillMapDetails.prototype['effectAttributeId'] = undefined;

/**
 * @member {Number} fillTypeId
 */
SharedFillMapDetails.prototype['fillTypeId'] = undefined;

/**
 * @member {module:model/SharedGradientFillsDetails} gradientFill
 */
SharedFillMapDetails.prototype['gradientFill'] = undefined;

/**
 * @member {String} id
 */
SharedFillMapDetails.prototype['id'] = undefined;

/**
 * @member {module:model/SharedImageFillsDetails} imageFill
 */
SharedFillMapDetails.prototype['imageFill'] = undefined;

/**
 * @member {module:model/SlideShapesDetails} shape
 */
SharedFillMapDetails.prototype['shape'] = undefined;

/**
 * @member {String} shapeId
 */
SharedFillMapDetails.prototype['shapeId'] = undefined;

/**
 * @member {module:model/SharedSolidFillsDetails} solidFill
 */
SharedFillMapDetails.prototype['solidFill'] = undefined;

/**
 * @member {module:model/TableCellsDetails} tableCell
 */
SharedFillMapDetails.prototype['tableCell'] = undefined;

/**
 * @member {String} tableCellId
 */
SharedFillMapDetails.prototype['tableCellId'] = undefined;

/**
 * @member {module:model/ThemeBackgroundFillsDetails} themeBackgroundFill
 */
SharedFillMapDetails.prototype['themeBackgroundFill'] = undefined;

/**
 * @member {String} themeBackgroundFillId
 */
SharedFillMapDetails.prototype['themeBackgroundFillId'] = undefined;

/**
 * @member {module:model/ThemeFillsDetails} themeFill
 */
SharedFillMapDetails.prototype['themeFill'] = undefined;

/**
 * @member {String} themeFillId
 */
SharedFillMapDetails.prototype['themeFillId'] = undefined;

/**
 * @member {String} userCreated
 */
SharedFillMapDetails.prototype['userCreated'] = undefined;

/**
 * @member {String} userModified
 */
SharedFillMapDetails.prototype['userModified'] = undefined;






export default SharedFillMapDetails;

