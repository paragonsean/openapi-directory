/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SharedSolidFillsDetails from './SharedSolidFillsDetails';
import SlideConnectorDetails from './SlideConnectorDetails';
import SlideShapesDetails from './SlideShapesDetails';
import TableBordersDetails from './TableBordersDetails';
import ThemeLineMapDetails from './ThemeLineMapDetails';

/**
 * The SharedLinesDetails model module.
 * @module model/SharedLinesDetails
 * @version 0.1.0
 */
class SharedLinesDetails {
    /**
     * Constructs a new <code>SharedLinesDetails</code>.
     * @alias module:model/SharedLinesDetails
     */
    constructor() { 
        
        SharedLinesDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SharedLinesDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharedLinesDetails} obj Optional instance to populate.
     * @return {module:model/SharedLinesDetails} The populated <code>SharedLinesDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharedLinesDetails();

            if (data.hasOwnProperty('bLtoTRBorder')) {
                obj['bLtoTRBorder'] = TableBordersDetails.constructFromObject(data['bLtoTRBorder']);
            }
            if (data.hasOwnProperty('bLtoTRBorderId')) {
                obj['bLtoTRBorderId'] = ApiClient.convertToType(data['bLtoTRBorderId'], 'String');
            }
            if (data.hasOwnProperty('bottomBorder')) {
                obj['bottomBorder'] = TableBordersDetails.constructFromObject(data['bottomBorder']);
            }
            if (data.hasOwnProperty('bottomBorderId')) {
                obj['bottomBorderId'] = ApiClient.convertToType(data['bottomBorderId'], 'String');
            }
            if (data.hasOwnProperty('connectorId')) {
                obj['connectorId'] = ApiClient.convertToType(data['connectorId'], 'String');
            }
            if (data.hasOwnProperty('dashTypeId')) {
                obj['dashTypeId'] = ApiClient.convertToType(data['dashTypeId'], 'Number');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('dateModified')) {
                obj['dateModified'] = ApiClient.convertToType(data['dateModified'], 'Date');
            }
            if (data.hasOwnProperty('headEndHeightId')) {
                obj['headEndHeightId'] = ApiClient.convertToType(data['headEndHeightId'], 'Number');
            }
            if (data.hasOwnProperty('headEndTypeId')) {
                obj['headEndTypeId'] = ApiClient.convertToType(data['headEndTypeId'], 'Number');
            }
            if (data.hasOwnProperty('headEndWidthId')) {
                obj['headEndWidthId'] = ApiClient.convertToType(data['headEndWidthId'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('leftBorder')) {
                obj['leftBorder'] = TableBordersDetails.constructFromObject(data['leftBorder']);
            }
            if (data.hasOwnProperty('leftBorderId')) {
                obj['leftBorderId'] = ApiClient.convertToType(data['leftBorderId'], 'String');
            }
            if (data.hasOwnProperty('lineColorSolidFill')) {
                obj['lineColorSolidFill'] = SharedSolidFillsDetails.constructFromObject(data['lineColorSolidFill']);
            }
            if (data.hasOwnProperty('lineMap')) {
                obj['lineMap'] = ThemeLineMapDetails.constructFromObject(data['lineMap']);
            }
            if (data.hasOwnProperty('lineMapId')) {
                obj['lineMapId'] = ApiClient.convertToType(data['lineMapId'], 'String');
            }
            if (data.hasOwnProperty('parentConnector')) {
                obj['parentConnector'] = SlideConnectorDetails.constructFromObject(data['parentConnector']);
            }
            if (data.hasOwnProperty('parentShape')) {
                obj['parentShape'] = SlideShapesDetails.constructFromObject(data['parentShape']);
            }
            if (data.hasOwnProperty('rightBorder')) {
                obj['rightBorder'] = TableBordersDetails.constructFromObject(data['rightBorder']);
            }
            if (data.hasOwnProperty('rightBorderId')) {
                obj['rightBorderId'] = ApiClient.convertToType(data['rightBorderId'], 'String');
            }
            if (data.hasOwnProperty('shapeId')) {
                obj['shapeId'] = ApiClient.convertToType(data['shapeId'], 'String');
            }
            if (data.hasOwnProperty('tLtoBRBorder')) {
                obj['tLtoBRBorder'] = TableBordersDetails.constructFromObject(data['tLtoBRBorder']);
            }
            if (data.hasOwnProperty('tLtoBRBorderId')) {
                obj['tLtoBRBorderId'] = ApiClient.convertToType(data['tLtoBRBorderId'], 'String');
            }
            if (data.hasOwnProperty('tailEndHeightId')) {
                obj['tailEndHeightId'] = ApiClient.convertToType(data['tailEndHeightId'], 'Number');
            }
            if (data.hasOwnProperty('tailEndTypeId')) {
                obj['tailEndTypeId'] = ApiClient.convertToType(data['tailEndTypeId'], 'Number');
            }
            if (data.hasOwnProperty('tailEndWidthId')) {
                obj['tailEndWidthId'] = ApiClient.convertToType(data['tailEndWidthId'], 'Number');
            }
            if (data.hasOwnProperty('topBorder')) {
                obj['topBorder'] = TableBordersDetails.constructFromObject(data['topBorder']);
            }
            if (data.hasOwnProperty('topBorderId')) {
                obj['topBorderId'] = ApiClient.convertToType(data['topBorderId'], 'String');
            }
            if (data.hasOwnProperty('userCreated')) {
                obj['userCreated'] = ApiClient.convertToType(data['userCreated'], 'String');
            }
            if (data.hasOwnProperty('userModified')) {
                obj['userModified'] = ApiClient.convertToType(data['userModified'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SharedLinesDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharedLinesDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bLtoTRBorder`
        if (data['bLtoTRBorder']) { // data not null
          TableBordersDetails.validateJSON(data['bLtoTRBorder']);
        }
        // ensure the json data is a string
        if (data['bLtoTRBorderId'] && !(typeof data['bLtoTRBorderId'] === 'string' || data['bLtoTRBorderId'] instanceof String)) {
            throw new Error("Expected the field `bLtoTRBorderId` to be a primitive type in the JSON string but got " + data['bLtoTRBorderId']);
        }
        // validate the optional field `bottomBorder`
        if (data['bottomBorder']) { // data not null
          TableBordersDetails.validateJSON(data['bottomBorder']);
        }
        // ensure the json data is a string
        if (data['bottomBorderId'] && !(typeof data['bottomBorderId'] === 'string' || data['bottomBorderId'] instanceof String)) {
            throw new Error("Expected the field `bottomBorderId` to be a primitive type in the JSON string but got " + data['bottomBorderId']);
        }
        // ensure the json data is a string
        if (data['connectorId'] && !(typeof data['connectorId'] === 'string' || data['connectorId'] instanceof String)) {
            throw new Error("Expected the field `connectorId` to be a primitive type in the JSON string but got " + data['connectorId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `leftBorder`
        if (data['leftBorder']) { // data not null
          TableBordersDetails.validateJSON(data['leftBorder']);
        }
        // ensure the json data is a string
        if (data['leftBorderId'] && !(typeof data['leftBorderId'] === 'string' || data['leftBorderId'] instanceof String)) {
            throw new Error("Expected the field `leftBorderId` to be a primitive type in the JSON string but got " + data['leftBorderId']);
        }
        // validate the optional field `lineColorSolidFill`
        if (data['lineColorSolidFill']) { // data not null
          SharedSolidFillsDetails.validateJSON(data['lineColorSolidFill']);
        }
        // validate the optional field `lineMap`
        if (data['lineMap']) { // data not null
          ThemeLineMapDetails.validateJSON(data['lineMap']);
        }
        // ensure the json data is a string
        if (data['lineMapId'] && !(typeof data['lineMapId'] === 'string' || data['lineMapId'] instanceof String)) {
            throw new Error("Expected the field `lineMapId` to be a primitive type in the JSON string but got " + data['lineMapId']);
        }
        // validate the optional field `parentConnector`
        if (data['parentConnector']) { // data not null
          SlideConnectorDetails.validateJSON(data['parentConnector']);
        }
        // validate the optional field `parentShape`
        if (data['parentShape']) { // data not null
          SlideShapesDetails.validateJSON(data['parentShape']);
        }
        // validate the optional field `rightBorder`
        if (data['rightBorder']) { // data not null
          TableBordersDetails.validateJSON(data['rightBorder']);
        }
        // ensure the json data is a string
        if (data['rightBorderId'] && !(typeof data['rightBorderId'] === 'string' || data['rightBorderId'] instanceof String)) {
            throw new Error("Expected the field `rightBorderId` to be a primitive type in the JSON string but got " + data['rightBorderId']);
        }
        // ensure the json data is a string
        if (data['shapeId'] && !(typeof data['shapeId'] === 'string' || data['shapeId'] instanceof String)) {
            throw new Error("Expected the field `shapeId` to be a primitive type in the JSON string but got " + data['shapeId']);
        }
        // validate the optional field `tLtoBRBorder`
        if (data['tLtoBRBorder']) { // data not null
          TableBordersDetails.validateJSON(data['tLtoBRBorder']);
        }
        // ensure the json data is a string
        if (data['tLtoBRBorderId'] && !(typeof data['tLtoBRBorderId'] === 'string' || data['tLtoBRBorderId'] instanceof String)) {
            throw new Error("Expected the field `tLtoBRBorderId` to be a primitive type in the JSON string but got " + data['tLtoBRBorderId']);
        }
        // validate the optional field `topBorder`
        if (data['topBorder']) { // data not null
          TableBordersDetails.validateJSON(data['topBorder']);
        }
        // ensure the json data is a string
        if (data['topBorderId'] && !(typeof data['topBorderId'] === 'string' || data['topBorderId'] instanceof String)) {
            throw new Error("Expected the field `topBorderId` to be a primitive type in the JSON string but got " + data['topBorderId']);
        }
        // ensure the json data is a string
        if (data['userCreated'] && !(typeof data['userCreated'] === 'string' || data['userCreated'] instanceof String)) {
            throw new Error("Expected the field `userCreated` to be a primitive type in the JSON string but got " + data['userCreated']);
        }
        // ensure the json data is a string
        if (data['userModified'] && !(typeof data['userModified'] === 'string' || data['userModified'] instanceof String)) {
            throw new Error("Expected the field `userModified` to be a primitive type in the JSON string but got " + data['userModified']);
        }

        return true;
    }


}



/**
 * @member {module:model/TableBordersDetails} bLtoTRBorder
 */
SharedLinesDetails.prototype['bLtoTRBorder'] = undefined;

/**
 * @member {String} bLtoTRBorderId
 */
SharedLinesDetails.prototype['bLtoTRBorderId'] = undefined;

/**
 * @member {module:model/TableBordersDetails} bottomBorder
 */
SharedLinesDetails.prototype['bottomBorder'] = undefined;

/**
 * @member {String} bottomBorderId
 */
SharedLinesDetails.prototype['bottomBorderId'] = undefined;

/**
 * @member {String} connectorId
 */
SharedLinesDetails.prototype['connectorId'] = undefined;

/**
 * @member {Number} dashTypeId
 */
SharedLinesDetails.prototype['dashTypeId'] = undefined;

/**
 * @member {Date} dateCreated
 */
SharedLinesDetails.prototype['dateCreated'] = undefined;

/**
 * @member {Date} dateModified
 */
SharedLinesDetails.prototype['dateModified'] = undefined;

/**
 * @member {Number} headEndHeightId
 */
SharedLinesDetails.prototype['headEndHeightId'] = undefined;

/**
 * @member {Number} headEndTypeId
 */
SharedLinesDetails.prototype['headEndTypeId'] = undefined;

/**
 * @member {Number} headEndWidthId
 */
SharedLinesDetails.prototype['headEndWidthId'] = undefined;

/**
 * @member {String} id
 */
SharedLinesDetails.prototype['id'] = undefined;

/**
 * @member {module:model/TableBordersDetails} leftBorder
 */
SharedLinesDetails.prototype['leftBorder'] = undefined;

/**
 * @member {String} leftBorderId
 */
SharedLinesDetails.prototype['leftBorderId'] = undefined;

/**
 * @member {module:model/SharedSolidFillsDetails} lineColorSolidFill
 */
SharedLinesDetails.prototype['lineColorSolidFill'] = undefined;

/**
 * @member {module:model/ThemeLineMapDetails} lineMap
 */
SharedLinesDetails.prototype['lineMap'] = undefined;

/**
 * @member {String} lineMapId
 */
SharedLinesDetails.prototype['lineMapId'] = undefined;

/**
 * @member {module:model/SlideConnectorDetails} parentConnector
 */
SharedLinesDetails.prototype['parentConnector'] = undefined;

/**
 * @member {module:model/SlideShapesDetails} parentShape
 */
SharedLinesDetails.prototype['parentShape'] = undefined;

/**
 * @member {module:model/TableBordersDetails} rightBorder
 */
SharedLinesDetails.prototype['rightBorder'] = undefined;

/**
 * @member {String} rightBorderId
 */
SharedLinesDetails.prototype['rightBorderId'] = undefined;

/**
 * @member {String} shapeId
 */
SharedLinesDetails.prototype['shapeId'] = undefined;

/**
 * @member {module:model/TableBordersDetails} tLtoBRBorder
 */
SharedLinesDetails.prototype['tLtoBRBorder'] = undefined;

/**
 * @member {String} tLtoBRBorderId
 */
SharedLinesDetails.prototype['tLtoBRBorderId'] = undefined;

/**
 * @member {Number} tailEndHeightId
 */
SharedLinesDetails.prototype['tailEndHeightId'] = undefined;

/**
 * @member {Number} tailEndTypeId
 */
SharedLinesDetails.prototype['tailEndTypeId'] = undefined;

/**
 * @member {Number} tailEndWidthId
 */
SharedLinesDetails.prototype['tailEndWidthId'] = undefined;

/**
 * @member {module:model/TableBordersDetails} topBorder
 */
SharedLinesDetails.prototype['topBorder'] = undefined;

/**
 * @member {String} topBorderId
 */
SharedLinesDetails.prototype['topBorderId'] = undefined;

/**
 * @member {String} userCreated
 */
SharedLinesDetails.prototype['userCreated'] = undefined;

/**
 * @member {String} userModified
 */
SharedLinesDetails.prototype['userModified'] = undefined;

/**
 * @member {Number} weight
 */
SharedLinesDetails.prototype['weight'] = undefined;






export default SharedLinesDetails;

