/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ProblemDetails from '../model/ProblemDetails';
import ThemeIntensity from '../model/ThemeIntensity';

/**
* ThemesIntensity service.
* @module api/ThemesIntensityApi
* @version 0.1.0
*/
export default class ThemesIntensityApi {

    /**
    * Constructs a new ThemesIntensityApi. 
    * @alias module:api/ThemesIntensityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the themesIntensityGet operation.
     * @callback module:api/ThemesIntensityApi~themesIntensityGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ThemeIntensity>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Intensity: List All Possible Types
     * List Types: Use this method to retreive a list of possible options for the Intensity type. Use the Id from oneof the returned elements on to make changes to elements in the Themes object space.
     * @param {module:api/ThemesIntensityApi~themesIntensityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ThemeIntensity>}
     */
    themesIntensityGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [ThemeIntensity];
      return this.apiClient.callApi(
        '/Themes/Intensity', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the themesIntensityGetId operation.
     * @callback module:api/ThemesIntensityApi~themesIntensityGetIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ThemeIntensity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Intensity: Get by Id
     * Get by Id: Use this method to retrieve a Intensity object by its primary key (id)
     * @param {String} id 
     * @param {module:api/ThemesIntensityApi~themesIntensityGetIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ThemeIntensity}
     */
    themesIntensityGetId(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling themesIntensityGetId");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ThemeIntensity;
      return this.apiClient.callApi(
        '/Themes/Intensity/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the themesIntensityTypeidGetTypeId operation.
     * @callback module:api/ThemesIntensityApi~themesIntensityTypeidGetTypeIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ThemeIntensity} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Intensity: Get By Type Id
     * This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
     * @param {Number} typeId 
     * @param {module:api/ThemesIntensityApi~themesIntensityTypeidGetTypeIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ThemeIntensity}
     */
    themesIntensityTypeidGetTypeId(typeId, callback) {
      let postBody = null;
      // verify the required parameter 'typeId' is set
      if (typeId === undefined || typeId === null) {
        throw new Error("Missing the required parameter 'typeId' when calling themesIntensityTypeidGetTypeId");
      }

      let pathParams = {
        'type_id': typeId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ThemeIntensity;
      return this.apiClient.callApi(
        '/Themes/Intensity/TypeId/{type_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
