/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OoxmlAutomation);
  }
}(this, function(expect, OoxmlAutomation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OoxmlAutomation.SharedLinesDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SharedLinesDetails', function() {
    it('should create an instance of SharedLinesDetails', function() {
      // uncomment below and update the code to test SharedLinesDetails
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be.a(OoxmlAutomation.SharedLinesDetails);
    });

    it('should have the property bLtoTRBorder (base name: "bLtoTRBorder")', function() {
      // uncomment below and update the code to test the property bLtoTRBorder
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property bLtoTRBorderId (base name: "bLtoTRBorderId")', function() {
      // uncomment below and update the code to test the property bLtoTRBorderId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property bottomBorder (base name: "bottomBorder")', function() {
      // uncomment below and update the code to test the property bottomBorder
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property bottomBorderId (base name: "bottomBorderId")', function() {
      // uncomment below and update the code to test the property bottomBorderId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property connectorId (base name: "connectorId")', function() {
      // uncomment below and update the code to test the property connectorId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property dashTypeId (base name: "dashTypeId")', function() {
      // uncomment below and update the code to test the property dashTypeId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "dateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property dateModified (base name: "dateModified")', function() {
      // uncomment below and update the code to test the property dateModified
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property headEndHeightId (base name: "headEndHeightId")', function() {
      // uncomment below and update the code to test the property headEndHeightId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property headEndTypeId (base name: "headEndTypeId")', function() {
      // uncomment below and update the code to test the property headEndTypeId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property headEndWidthId (base name: "headEndWidthId")', function() {
      // uncomment below and update the code to test the property headEndWidthId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property leftBorder (base name: "leftBorder")', function() {
      // uncomment below and update the code to test the property leftBorder
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property leftBorderId (base name: "leftBorderId")', function() {
      // uncomment below and update the code to test the property leftBorderId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property lineColorSolidFill (base name: "lineColorSolidFill")', function() {
      // uncomment below and update the code to test the property lineColorSolidFill
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property lineMap (base name: "lineMap")', function() {
      // uncomment below and update the code to test the property lineMap
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property lineMapId (base name: "lineMapId")', function() {
      // uncomment below and update the code to test the property lineMapId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property parentConnector (base name: "parentConnector")', function() {
      // uncomment below and update the code to test the property parentConnector
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property parentShape (base name: "parentShape")', function() {
      // uncomment below and update the code to test the property parentShape
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property rightBorder (base name: "rightBorder")', function() {
      // uncomment below and update the code to test the property rightBorder
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property rightBorderId (base name: "rightBorderId")', function() {
      // uncomment below and update the code to test the property rightBorderId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property shapeId (base name: "shapeId")', function() {
      // uncomment below and update the code to test the property shapeId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property tLtoBRBorder (base name: "tLtoBRBorder")', function() {
      // uncomment below and update the code to test the property tLtoBRBorder
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property tLtoBRBorderId (base name: "tLtoBRBorderId")', function() {
      // uncomment below and update the code to test the property tLtoBRBorderId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property tailEndHeightId (base name: "tailEndHeightId")', function() {
      // uncomment below and update the code to test the property tailEndHeightId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property tailEndTypeId (base name: "tailEndTypeId")', function() {
      // uncomment below and update the code to test the property tailEndTypeId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property tailEndWidthId (base name: "tailEndWidthId")', function() {
      // uncomment below and update the code to test the property tailEndWidthId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property topBorder (base name: "topBorder")', function() {
      // uncomment below and update the code to test the property topBorder
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property topBorderId (base name: "topBorderId")', function() {
      // uncomment below and update the code to test the property topBorderId
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property userCreated (base name: "userCreated")', function() {
      // uncomment below and update the code to test the property userCreated
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property userModified (base name: "userModified")', function() {
      // uncomment below and update the code to test the property userModified
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new OoxmlAutomation.SharedLinesDetails();
      //expect(instance).to.be();
    });

  });

}));
