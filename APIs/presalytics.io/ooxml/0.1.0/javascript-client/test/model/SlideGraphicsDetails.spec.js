/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OoxmlAutomation);
  }
}(this, function(expect, OoxmlAutomation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OoxmlAutomation.SlideGraphicsDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SlideGraphicsDetails', function() {
    it('should create an instance of SlideGraphicsDetails', function() {
      // uncomment below and update the code to test SlideGraphicsDetails
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be.a(OoxmlAutomation.SlideGraphicsDetails);
    });

    it('should have the property chart (base name: "chart")', function() {
      // uncomment below and update the code to test the property chart
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "dateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property dateModified (base name: "dateModified")', function() {
      // uncomment below and update the code to test the property dateModified
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property graphicTypeId (base name: "graphicTypeId")', function() {
      // uncomment below and update the code to test the property graphicTypeId
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property groupElement (base name: "groupElement")', function() {
      // uncomment below and update the code to test the property groupElement
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property groupElementsId (base name: "groupElementsId")', function() {
      // uncomment below and update the code to test the property groupElementsId
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property ooxmlId (base name: "ooxmlId")', function() {
      // uncomment below and update the code to test the property ooxmlId
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property picture (base name: "picture")', function() {
      // uncomment below and update the code to test the property picture
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property smartArt (base name: "smartArt")', function() {
      // uncomment below and update the code to test the property smartArt
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property table (base name: "table")', function() {
      // uncomment below and update the code to test the property table
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property userCreated (base name: "userCreated")', function() {
      // uncomment below and update the code to test the property userCreated
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property userModified (base name: "userModified")', function() {
      // uncomment below and update the code to test the property userModified
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property xOffset (base name: "xOffset")', function() {
      // uncomment below and update the code to test the property xOffset
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

    it('should have the property yOffset (base name: "yOffset")', function() {
      // uncomment below and update the code to test the property yOffset
      //var instance = new OoxmlAutomation.SlideGraphicsDetails();
      //expect(instance).to.be();
    });

  });

}));
