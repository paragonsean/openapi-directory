/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OoxmlAutomation);
  }
}(this, function(expect, OoxmlAutomation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OoxmlAutomation.ThemesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ThemesApi', function() {
    describe('themeThemesChildobjectsGetId', function() {
      it('should call themeThemesChildobjectsGetId successfully', function(done) {
        //uncomment below and update the code to test themeThemesChildobjectsGetId
        //instance.themeThemesChildobjectsGetId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('themeThemesDetailsGetId', function() {
      it('should call themeThemesDetailsGetId successfully', function(done) {
        //uncomment below and update the code to test themeThemesDetailsGetId
        //instance.themeThemesDetailsGetId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('themeThemesGetId', function() {
      it('should call themeThemesGetId successfully', function(done) {
        //uncomment below and update the code to test themeThemesGetId
        //instance.themeThemesGetId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('themeThemesOpenofficexmlGetIdUpdated', function() {
      it('should call themeThemesOpenofficexmlGetIdUpdated successfully', function(done) {
        //uncomment below and update the code to test themeThemesOpenofficexmlGetIdUpdated
        //instance.themeThemesOpenofficexmlGetIdUpdated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('themeThemesOpenofficexmlPutId', function() {
      it('should call themeThemesOpenofficexmlPutId successfully', function(done) {
        //uncomment below and update the code to test themeThemesOpenofficexmlPutId
        //instance.themeThemesOpenofficexmlPutId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('themeThemesSvgGetIdUseCache', function() {
      it('should call themeThemesSvgGetIdUseCache successfully', function(done) {
        //uncomment below and update the code to test themeThemesSvgGetIdUseCache
        //instance.themeThemesSvgGetIdUseCache(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
