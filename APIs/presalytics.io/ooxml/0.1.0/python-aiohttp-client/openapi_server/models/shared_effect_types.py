# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SharedEffectTypes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: str=None, name: str=None, type_id: int=None):
        """SharedEffectTypes - a model defined in OpenAPI

        :param description: The description of this SharedEffectTypes.
        :param id: The id of this SharedEffectTypes.
        :param name: The name of this SharedEffectTypes.
        :param type_id: The type_id of this SharedEffectTypes.
        """
        self.openapi_types = {
            'description': str,
            'id': str,
            'name': str,
            'type_id': int
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'name': 'name',
            'type_id': 'typeId'
        }

        self._description = description
        self._id = id
        self._name = name
        self._type_id = type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedEffectTypes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shared.EffectTypes of this SharedEffectTypes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this SharedEffectTypes.


        :return: The description of this SharedEffectTypes.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SharedEffectTypes.


        :param description: The description of this SharedEffectTypes.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this SharedEffectTypes.


        :return: The id of this SharedEffectTypes.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SharedEffectTypes.


        :param id: The id of this SharedEffectTypes.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this SharedEffectTypes.


        :return: The name of this SharedEffectTypes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SharedEffectTypes.


        :param name: The name of this SharedEffectTypes.
        :type name: str
        """

        self._name = name

    @property
    def type_id(self):
        """Gets the type_id of this SharedEffectTypes.


        :return: The type_id of this SharedEffectTypes.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this SharedEffectTypes.


        :param type_id: The type_id of this SharedEffectTypes.
        :type type_id: int
        """

        self._type_id = type_id
