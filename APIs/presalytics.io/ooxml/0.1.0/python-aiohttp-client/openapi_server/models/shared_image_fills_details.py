# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shared_fill_map_details import SharedFillMapDetails
from openapi_server.models.shared_pictures_details import SharedPicturesDetails
from openapi_server import util


class SharedImageFillsDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compression_state: str=None, date_created: datetime=None, date_modified: datetime=None, dpi: int=None, effects_json: str=None, fill_map: SharedFillMapDetails=None, fill_map_id: str=None, id: str=None, picture: SharedPicturesDetails=None, rotate_with_shape: bool=None, source_rectangle: str=None, stretch: bool=None, tile: str=None, user_created: str=None, user_modified: str=None):
        """SharedImageFillsDetails - a model defined in OpenAPI

        :param compression_state: The compression_state of this SharedImageFillsDetails.
        :param date_created: The date_created of this SharedImageFillsDetails.
        :param date_modified: The date_modified of this SharedImageFillsDetails.
        :param dpi: The dpi of this SharedImageFillsDetails.
        :param effects_json: The effects_json of this SharedImageFillsDetails.
        :param fill_map: The fill_map of this SharedImageFillsDetails.
        :param fill_map_id: The fill_map_id of this SharedImageFillsDetails.
        :param id: The id of this SharedImageFillsDetails.
        :param picture: The picture of this SharedImageFillsDetails.
        :param rotate_with_shape: The rotate_with_shape of this SharedImageFillsDetails.
        :param source_rectangle: The source_rectangle of this SharedImageFillsDetails.
        :param stretch: The stretch of this SharedImageFillsDetails.
        :param tile: The tile of this SharedImageFillsDetails.
        :param user_created: The user_created of this SharedImageFillsDetails.
        :param user_modified: The user_modified of this SharedImageFillsDetails.
        """
        self.openapi_types = {
            'compression_state': str,
            'date_created': datetime,
            'date_modified': datetime,
            'dpi': int,
            'effects_json': str,
            'fill_map': SharedFillMapDetails,
            'fill_map_id': str,
            'id': str,
            'picture': SharedPicturesDetails,
            'rotate_with_shape': bool,
            'source_rectangle': str,
            'stretch': bool,
            'tile': str,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'compression_state': 'compressionState',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'dpi': 'dpi',
            'effects_json': 'effectsJson',
            'fill_map': 'fillMap',
            'fill_map_id': 'fillMapId',
            'id': 'id',
            'picture': 'picture',
            'rotate_with_shape': 'rotateWithShape',
            'source_rectangle': 'sourceRectangle',
            'stretch': 'stretch',
            'tile': 'tile',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._compression_state = compression_state
        self._date_created = date_created
        self._date_modified = date_modified
        self._dpi = dpi
        self._effects_json = effects_json
        self._fill_map = fill_map
        self._fill_map_id = fill_map_id
        self._id = id
        self._picture = picture
        self._rotate_with_shape = rotate_with_shape
        self._source_rectangle = source_rectangle
        self._stretch = stretch
        self._tile = tile
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedImageFillsDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shared.ImageFills.Details of this SharedImageFillsDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compression_state(self):
        """Gets the compression_state of this SharedImageFillsDetails.


        :return: The compression_state of this SharedImageFillsDetails.
        :rtype: str
        """
        return self._compression_state

    @compression_state.setter
    def compression_state(self, compression_state):
        """Sets the compression_state of this SharedImageFillsDetails.


        :param compression_state: The compression_state of this SharedImageFillsDetails.
        :type compression_state: str
        """

        self._compression_state = compression_state

    @property
    def date_created(self):
        """Gets the date_created of this SharedImageFillsDetails.


        :return: The date_created of this SharedImageFillsDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SharedImageFillsDetails.


        :param date_created: The date_created of this SharedImageFillsDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this SharedImageFillsDetails.


        :return: The date_modified of this SharedImageFillsDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this SharedImageFillsDetails.


        :param date_modified: The date_modified of this SharedImageFillsDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def dpi(self):
        """Gets the dpi of this SharedImageFillsDetails.


        :return: The dpi of this SharedImageFillsDetails.
        :rtype: int
        """
        return self._dpi

    @dpi.setter
    def dpi(self, dpi):
        """Sets the dpi of this SharedImageFillsDetails.


        :param dpi: The dpi of this SharedImageFillsDetails.
        :type dpi: int
        """

        self._dpi = dpi

    @property
    def effects_json(self):
        """Gets the effects_json of this SharedImageFillsDetails.


        :return: The effects_json of this SharedImageFillsDetails.
        :rtype: str
        """
        return self._effects_json

    @effects_json.setter
    def effects_json(self, effects_json):
        """Sets the effects_json of this SharedImageFillsDetails.


        :param effects_json: The effects_json of this SharedImageFillsDetails.
        :type effects_json: str
        """

        self._effects_json = effects_json

    @property
    def fill_map(self):
        """Gets the fill_map of this SharedImageFillsDetails.


        :return: The fill_map of this SharedImageFillsDetails.
        :rtype: SharedFillMapDetails
        """
        return self._fill_map

    @fill_map.setter
    def fill_map(self, fill_map):
        """Sets the fill_map of this SharedImageFillsDetails.


        :param fill_map: The fill_map of this SharedImageFillsDetails.
        :type fill_map: SharedFillMapDetails
        """

        self._fill_map = fill_map

    @property
    def fill_map_id(self):
        """Gets the fill_map_id of this SharedImageFillsDetails.


        :return: The fill_map_id of this SharedImageFillsDetails.
        :rtype: str
        """
        return self._fill_map_id

    @fill_map_id.setter
    def fill_map_id(self, fill_map_id):
        """Sets the fill_map_id of this SharedImageFillsDetails.


        :param fill_map_id: The fill_map_id of this SharedImageFillsDetails.
        :type fill_map_id: str
        """

        self._fill_map_id = fill_map_id

    @property
    def id(self):
        """Gets the id of this SharedImageFillsDetails.


        :return: The id of this SharedImageFillsDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SharedImageFillsDetails.


        :param id: The id of this SharedImageFillsDetails.
        :type id: str
        """

        self._id = id

    @property
    def picture(self):
        """Gets the picture of this SharedImageFillsDetails.


        :return: The picture of this SharedImageFillsDetails.
        :rtype: SharedPicturesDetails
        """
        return self._picture

    @picture.setter
    def picture(self, picture):
        """Sets the picture of this SharedImageFillsDetails.


        :param picture: The picture of this SharedImageFillsDetails.
        :type picture: SharedPicturesDetails
        """

        self._picture = picture

    @property
    def rotate_with_shape(self):
        """Gets the rotate_with_shape of this SharedImageFillsDetails.


        :return: The rotate_with_shape of this SharedImageFillsDetails.
        :rtype: bool
        """
        return self._rotate_with_shape

    @rotate_with_shape.setter
    def rotate_with_shape(self, rotate_with_shape):
        """Sets the rotate_with_shape of this SharedImageFillsDetails.


        :param rotate_with_shape: The rotate_with_shape of this SharedImageFillsDetails.
        :type rotate_with_shape: bool
        """

        self._rotate_with_shape = rotate_with_shape

    @property
    def source_rectangle(self):
        """Gets the source_rectangle of this SharedImageFillsDetails.


        :return: The source_rectangle of this SharedImageFillsDetails.
        :rtype: str
        """
        return self._source_rectangle

    @source_rectangle.setter
    def source_rectangle(self, source_rectangle):
        """Sets the source_rectangle of this SharedImageFillsDetails.


        :param source_rectangle: The source_rectangle of this SharedImageFillsDetails.
        :type source_rectangle: str
        """

        self._source_rectangle = source_rectangle

    @property
    def stretch(self):
        """Gets the stretch of this SharedImageFillsDetails.


        :return: The stretch of this SharedImageFillsDetails.
        :rtype: bool
        """
        return self._stretch

    @stretch.setter
    def stretch(self, stretch):
        """Sets the stretch of this SharedImageFillsDetails.


        :param stretch: The stretch of this SharedImageFillsDetails.
        :type stretch: bool
        """

        self._stretch = stretch

    @property
    def tile(self):
        """Gets the tile of this SharedImageFillsDetails.


        :return: The tile of this SharedImageFillsDetails.
        :rtype: str
        """
        return self._tile

    @tile.setter
    def tile(self, tile):
        """Sets the tile of this SharedImageFillsDetails.


        :param tile: The tile of this SharedImageFillsDetails.
        :type tile: str
        """

        self._tile = tile

    @property
    def user_created(self):
        """Gets the user_created of this SharedImageFillsDetails.


        :return: The user_created of this SharedImageFillsDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this SharedImageFillsDetails.


        :param user_created: The user_created of this SharedImageFillsDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this SharedImageFillsDetails.


        :return: The user_modified of this SharedImageFillsDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this SharedImageFillsDetails.


        :param user_modified: The user_modified of this SharedImageFillsDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
