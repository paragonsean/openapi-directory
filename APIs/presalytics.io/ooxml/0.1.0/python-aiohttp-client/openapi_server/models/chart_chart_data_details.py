# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chart_charts_details import ChartChartsDetails
from openapi_server.models.chart_column_collections_details import ChartColumnCollectionsDetails
from openapi_server.models.chart_data_points_details import ChartDataPointsDetails
from openapi_server.models.chart_row_collections_details import ChartRowCollectionsDetails
from openapi_server import util


class ChartChartDataDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chart: ChartChartsDetails=None, chart_id: str=None, column_collection: ChartColumnCollectionsDetails=None, data_points: List[ChartDataPointsDetails]=None, date_created: datetime=None, date_modified: datetime=None, id: str=None, row_collection: ChartRowCollectionsDetails=None, user_created: str=None, user_modified: str=None):
        """ChartChartDataDetails - a model defined in OpenAPI

        :param chart: The chart of this ChartChartDataDetails.
        :param chart_id: The chart_id of this ChartChartDataDetails.
        :param column_collection: The column_collection of this ChartChartDataDetails.
        :param data_points: The data_points of this ChartChartDataDetails.
        :param date_created: The date_created of this ChartChartDataDetails.
        :param date_modified: The date_modified of this ChartChartDataDetails.
        :param id: The id of this ChartChartDataDetails.
        :param row_collection: The row_collection of this ChartChartDataDetails.
        :param user_created: The user_created of this ChartChartDataDetails.
        :param user_modified: The user_modified of this ChartChartDataDetails.
        """
        self.openapi_types = {
            'chart': ChartChartsDetails,
            'chart_id': str,
            'column_collection': ChartColumnCollectionsDetails,
            'data_points': List[ChartDataPointsDetails],
            'date_created': datetime,
            'date_modified': datetime,
            'id': str,
            'row_collection': ChartRowCollectionsDetails,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'chart': 'chart',
            'chart_id': 'chartId',
            'column_collection': 'columnCollection',
            'data_points': 'dataPoints',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'id': 'id',
            'row_collection': 'rowCollection',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._chart = chart
        self._chart_id = chart_id
        self._column_collection = column_collection
        self._data_points = data_points
        self._date_created = date_created
        self._date_modified = date_modified
        self._id = id
        self._row_collection = row_collection
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartChartDataDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chart.ChartData.Details of this ChartChartDataDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chart(self):
        """Gets the chart of this ChartChartDataDetails.


        :return: The chart of this ChartChartDataDetails.
        :rtype: ChartChartsDetails
        """
        return self._chart

    @chart.setter
    def chart(self, chart):
        """Sets the chart of this ChartChartDataDetails.


        :param chart: The chart of this ChartChartDataDetails.
        :type chart: ChartChartsDetails
        """

        self._chart = chart

    @property
    def chart_id(self):
        """Gets the chart_id of this ChartChartDataDetails.


        :return: The chart_id of this ChartChartDataDetails.
        :rtype: str
        """
        return self._chart_id

    @chart_id.setter
    def chart_id(self, chart_id):
        """Sets the chart_id of this ChartChartDataDetails.


        :param chart_id: The chart_id of this ChartChartDataDetails.
        :type chart_id: str
        """

        self._chart_id = chart_id

    @property
    def column_collection(self):
        """Gets the column_collection of this ChartChartDataDetails.


        :return: The column_collection of this ChartChartDataDetails.
        :rtype: ChartColumnCollectionsDetails
        """
        return self._column_collection

    @column_collection.setter
    def column_collection(self, column_collection):
        """Sets the column_collection of this ChartChartDataDetails.


        :param column_collection: The column_collection of this ChartChartDataDetails.
        :type column_collection: ChartColumnCollectionsDetails
        """

        self._column_collection = column_collection

    @property
    def data_points(self):
        """Gets the data_points of this ChartChartDataDetails.


        :return: The data_points of this ChartChartDataDetails.
        :rtype: List[ChartDataPointsDetails]
        """
        return self._data_points

    @data_points.setter
    def data_points(self, data_points):
        """Sets the data_points of this ChartChartDataDetails.


        :param data_points: The data_points of this ChartChartDataDetails.
        :type data_points: List[ChartDataPointsDetails]
        """

        self._data_points = data_points

    @property
    def date_created(self):
        """Gets the date_created of this ChartChartDataDetails.


        :return: The date_created of this ChartChartDataDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ChartChartDataDetails.


        :param date_created: The date_created of this ChartChartDataDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this ChartChartDataDetails.


        :return: The date_modified of this ChartChartDataDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this ChartChartDataDetails.


        :param date_modified: The date_modified of this ChartChartDataDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def id(self):
        """Gets the id of this ChartChartDataDetails.


        :return: The id of this ChartChartDataDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartChartDataDetails.


        :param id: The id of this ChartChartDataDetails.
        :type id: str
        """

        self._id = id

    @property
    def row_collection(self):
        """Gets the row_collection of this ChartChartDataDetails.


        :return: The row_collection of this ChartChartDataDetails.
        :rtype: ChartRowCollectionsDetails
        """
        return self._row_collection

    @row_collection.setter
    def row_collection(self, row_collection):
        """Sets the row_collection of this ChartChartDataDetails.


        :param row_collection: The row_collection of this ChartChartDataDetails.
        :type row_collection: ChartRowCollectionsDetails
        """

        self._row_collection = row_collection

    @property
    def user_created(self):
        """Gets the user_created of this ChartChartDataDetails.


        :return: The user_created of this ChartChartDataDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this ChartChartDataDetails.


        :param user_created: The user_created of this ChartChartDataDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this ChartChartDataDetails.


        :return: The user_modified of this ChartChartDataDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this ChartChartDataDetails.


        :param user_modified: The user_modified of this ChartChartDataDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
