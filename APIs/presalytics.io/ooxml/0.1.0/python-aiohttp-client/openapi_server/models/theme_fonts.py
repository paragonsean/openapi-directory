# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ThemeFonts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body_font: str=None, heading_font: str=None, id: str=None, theme_id: str=None):
        """ThemeFonts - a model defined in OpenAPI

        :param body_font: The body_font of this ThemeFonts.
        :param heading_font: The heading_font of this ThemeFonts.
        :param id: The id of this ThemeFonts.
        :param theme_id: The theme_id of this ThemeFonts.
        """
        self.openapi_types = {
            'body_font': str,
            'heading_font': str,
            'id': str,
            'theme_id': str
        }

        self.attribute_map = {
            'body_font': 'bodyFont',
            'heading_font': 'headingFont',
            'id': 'id',
            'theme_id': 'themeId'
        }

        self._body_font = body_font
        self._heading_font = heading_font
        self._id = id
        self._theme_id = theme_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThemeFonts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Theme.Fonts of this ThemeFonts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body_font(self):
        """Gets the body_font of this ThemeFonts.


        :return: The body_font of this ThemeFonts.
        :rtype: str
        """
        return self._body_font

    @body_font.setter
    def body_font(self, body_font):
        """Sets the body_font of this ThemeFonts.


        :param body_font: The body_font of this ThemeFonts.
        :type body_font: str
        """

        self._body_font = body_font

    @property
    def heading_font(self):
        """Gets the heading_font of this ThemeFonts.


        :return: The heading_font of this ThemeFonts.
        :rtype: str
        """
        return self._heading_font

    @heading_font.setter
    def heading_font(self, heading_font):
        """Sets the heading_font of this ThemeFonts.


        :param heading_font: The heading_font of this ThemeFonts.
        :type heading_font: str
        """

        self._heading_font = heading_font

    @property
    def id(self):
        """Gets the id of this ThemeFonts.


        :return: The id of this ThemeFonts.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ThemeFonts.


        :param id: The id of this ThemeFonts.
        :type id: str
        """

        self._id = id

    @property
    def theme_id(self):
        """Gets the theme_id of this ThemeFonts.


        :return: The theme_id of this ThemeFonts.
        :rtype: str
        """
        return self._theme_id

    @theme_id.setter
    def theme_id(self, theme_id):
        """Sets the theme_id of this ThemeFonts.


        :param theme_id: The theme_id of this ThemeFonts.
        :type theme_id: str
        """

        self._theme_id = theme_id
