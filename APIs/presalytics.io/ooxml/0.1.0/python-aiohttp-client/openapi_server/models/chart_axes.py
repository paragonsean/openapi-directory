# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChartAxes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, axis_data_type_id: int=None, charts_id: str=None, id: str=None, ooxml_id: int=None):
        """ChartAxes - a model defined in OpenAPI

        :param axis_data_type_id: The axis_data_type_id of this ChartAxes.
        :param charts_id: The charts_id of this ChartAxes.
        :param id: The id of this ChartAxes.
        :param ooxml_id: The ooxml_id of this ChartAxes.
        """
        self.openapi_types = {
            'axis_data_type_id': int,
            'charts_id': str,
            'id': str,
            'ooxml_id': int
        }

        self.attribute_map = {
            'axis_data_type_id': 'axisDataTypeId',
            'charts_id': 'chartsId',
            'id': 'id',
            'ooxml_id': 'ooxmlId'
        }

        self._axis_data_type_id = axis_data_type_id
        self._charts_id = charts_id
        self._id = id
        self._ooxml_id = ooxml_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartAxes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chart.Axes of this ChartAxes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def axis_data_type_id(self):
        """Gets the axis_data_type_id of this ChartAxes.


        :return: The axis_data_type_id of this ChartAxes.
        :rtype: int
        """
        return self._axis_data_type_id

    @axis_data_type_id.setter
    def axis_data_type_id(self, axis_data_type_id):
        """Sets the axis_data_type_id of this ChartAxes.


        :param axis_data_type_id: The axis_data_type_id of this ChartAxes.
        :type axis_data_type_id: int
        """

        self._axis_data_type_id = axis_data_type_id

    @property
    def charts_id(self):
        """Gets the charts_id of this ChartAxes.


        :return: The charts_id of this ChartAxes.
        :rtype: str
        """
        return self._charts_id

    @charts_id.setter
    def charts_id(self, charts_id):
        """Sets the charts_id of this ChartAxes.


        :param charts_id: The charts_id of this ChartAxes.
        :type charts_id: str
        """

        self._charts_id = charts_id

    @property
    def id(self):
        """Gets the id of this ChartAxes.


        :return: The id of this ChartAxes.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartAxes.


        :param id: The id of this ChartAxes.
        :type id: str
        """

        self._id = id

    @property
    def ooxml_id(self):
        """Gets the ooxml_id of this ChartAxes.


        :return: The ooxml_id of this ChartAxes.
        :rtype: int
        """
        return self._ooxml_id

    @ooxml_id.setter
    def ooxml_id(self, ooxml_id):
        """Sets the ooxml_id of this ChartAxes.


        :param ooxml_id: The ooxml_id of this ChartAxes.
        :type ooxml_id: int
        """

        self._ooxml_id = ooxml_id
