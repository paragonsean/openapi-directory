# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChartRowNameFormatTypes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format_code: str=None, id: str=None, power_tools_id: int=None, type_id: int=None):
        """ChartRowNameFormatTypes - a model defined in OpenAPI

        :param format_code: The format_code of this ChartRowNameFormatTypes.
        :param id: The id of this ChartRowNameFormatTypes.
        :param power_tools_id: The power_tools_id of this ChartRowNameFormatTypes.
        :param type_id: The type_id of this ChartRowNameFormatTypes.
        """
        self.openapi_types = {
            'format_code': str,
            'id': str,
            'power_tools_id': int,
            'type_id': int
        }

        self.attribute_map = {
            'format_code': 'formatCode',
            'id': 'id',
            'power_tools_id': 'powerToolsId',
            'type_id': 'typeId'
        }

        self._format_code = format_code
        self._id = id
        self._power_tools_id = power_tools_id
        self._type_id = type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartRowNameFormatTypes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chart.RowNameFormatTypes of this ChartRowNameFormatTypes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format_code(self):
        """Gets the format_code of this ChartRowNameFormatTypes.


        :return: The format_code of this ChartRowNameFormatTypes.
        :rtype: str
        """
        return self._format_code

    @format_code.setter
    def format_code(self, format_code):
        """Sets the format_code of this ChartRowNameFormatTypes.


        :param format_code: The format_code of this ChartRowNameFormatTypes.
        :type format_code: str
        """

        self._format_code = format_code

    @property
    def id(self):
        """Gets the id of this ChartRowNameFormatTypes.


        :return: The id of this ChartRowNameFormatTypes.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartRowNameFormatTypes.


        :param id: The id of this ChartRowNameFormatTypes.
        :type id: str
        """

        self._id = id

    @property
    def power_tools_id(self):
        """Gets the power_tools_id of this ChartRowNameFormatTypes.


        :return: The power_tools_id of this ChartRowNameFormatTypes.
        :rtype: int
        """
        return self._power_tools_id

    @power_tools_id.setter
    def power_tools_id(self, power_tools_id):
        """Sets the power_tools_id of this ChartRowNameFormatTypes.


        :param power_tools_id: The power_tools_id of this ChartRowNameFormatTypes.
        :type power_tools_id: int
        """

        self._power_tools_id = power_tools_id

    @property
    def type_id(self):
        """Gets the type_id of this ChartRowNameFormatTypes.


        :return: The type_id of this ChartRowNameFormatTypes.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this ChartRowNameFormatTypes.


        :param type_id: The type_id of this ChartRowNameFormatTypes.
        :type type_id: int
        """

        self._type_id = type_id
