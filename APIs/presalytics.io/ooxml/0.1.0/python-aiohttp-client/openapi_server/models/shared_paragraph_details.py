# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shared_text_container_details import SharedTextContainerDetails
from openapi_server.models.shared_text_details import SharedTextDetails
from openapi_server import util


class SharedParagraphDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_created: datetime=None, date_modified: datetime=None, id: str=None, number: int=None, text: List[SharedTextDetails]=None, text_container: SharedTextContainerDetails=None, text_container_id: str=None, user_created: str=None, user_modified: str=None):
        """SharedParagraphDetails - a model defined in OpenAPI

        :param date_created: The date_created of this SharedParagraphDetails.
        :param date_modified: The date_modified of this SharedParagraphDetails.
        :param id: The id of this SharedParagraphDetails.
        :param number: The number of this SharedParagraphDetails.
        :param text: The text of this SharedParagraphDetails.
        :param text_container: The text_container of this SharedParagraphDetails.
        :param text_container_id: The text_container_id of this SharedParagraphDetails.
        :param user_created: The user_created of this SharedParagraphDetails.
        :param user_modified: The user_modified of this SharedParagraphDetails.
        """
        self.openapi_types = {
            'date_created': datetime,
            'date_modified': datetime,
            'id': str,
            'number': int,
            'text': List[SharedTextDetails],
            'text_container': SharedTextContainerDetails,
            'text_container_id': str,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'id': 'id',
            'number': 'number',
            'text': 'text',
            'text_container': 'textContainer',
            'text_container_id': 'textContainerId',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._date_created = date_created
        self._date_modified = date_modified
        self._id = id
        self._number = number
        self._text = text
        self._text_container = text_container
        self._text_container_id = text_container_id
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedParagraphDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shared.Paragraph.Details of this SharedParagraphDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_created(self):
        """Gets the date_created of this SharedParagraphDetails.


        :return: The date_created of this SharedParagraphDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SharedParagraphDetails.


        :param date_created: The date_created of this SharedParagraphDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this SharedParagraphDetails.


        :return: The date_modified of this SharedParagraphDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this SharedParagraphDetails.


        :param date_modified: The date_modified of this SharedParagraphDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def id(self):
        """Gets the id of this SharedParagraphDetails.


        :return: The id of this SharedParagraphDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SharedParagraphDetails.


        :param id: The id of this SharedParagraphDetails.
        :type id: str
        """

        self._id = id

    @property
    def number(self):
        """Gets the number of this SharedParagraphDetails.


        :return: The number of this SharedParagraphDetails.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this SharedParagraphDetails.


        :param number: The number of this SharedParagraphDetails.
        :type number: int
        """

        self._number = number

    @property
    def text(self):
        """Gets the text of this SharedParagraphDetails.


        :return: The text of this SharedParagraphDetails.
        :rtype: List[SharedTextDetails]
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this SharedParagraphDetails.


        :param text: The text of this SharedParagraphDetails.
        :type text: List[SharedTextDetails]
        """

        self._text = text

    @property
    def text_container(self):
        """Gets the text_container of this SharedParagraphDetails.


        :return: The text_container of this SharedParagraphDetails.
        :rtype: SharedTextContainerDetails
        """
        return self._text_container

    @text_container.setter
    def text_container(self, text_container):
        """Sets the text_container of this SharedParagraphDetails.


        :param text_container: The text_container of this SharedParagraphDetails.
        :type text_container: SharedTextContainerDetails
        """

        self._text_container = text_container

    @property
    def text_container_id(self):
        """Gets the text_container_id of this SharedParagraphDetails.


        :return: The text_container_id of this SharedParagraphDetails.
        :rtype: str
        """
        return self._text_container_id

    @text_container_id.setter
    def text_container_id(self, text_container_id):
        """Sets the text_container_id of this SharedParagraphDetails.


        :param text_container_id: The text_container_id of this SharedParagraphDetails.
        :type text_container_id: str
        """

        self._text_container_id = text_container_id

    @property
    def user_created(self):
        """Gets the user_created of this SharedParagraphDetails.


        :return: The user_created of this SharedParagraphDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this SharedParagraphDetails.


        :param user_created: The user_created of this SharedParagraphDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this SharedParagraphDetails.


        :return: The user_modified of this SharedParagraphDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this SharedParagraphDetails.


        :param user_modified: The user_modified of this SharedParagraphDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
