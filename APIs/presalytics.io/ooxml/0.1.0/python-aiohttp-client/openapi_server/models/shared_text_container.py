# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SharedTextContainer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, axis_id: str=None, chart_id: str=None, id: str=None, outer_xml: str=None, shape_id: str=None, table_cell_id: str=None):
        """SharedTextContainer - a model defined in OpenAPI

        :param axis_id: The axis_id of this SharedTextContainer.
        :param chart_id: The chart_id of this SharedTextContainer.
        :param id: The id of this SharedTextContainer.
        :param outer_xml: The outer_xml of this SharedTextContainer.
        :param shape_id: The shape_id of this SharedTextContainer.
        :param table_cell_id: The table_cell_id of this SharedTextContainer.
        """
        self.openapi_types = {
            'axis_id': str,
            'chart_id': str,
            'id': str,
            'outer_xml': str,
            'shape_id': str,
            'table_cell_id': str
        }

        self.attribute_map = {
            'axis_id': 'axisId',
            'chart_id': 'chartId',
            'id': 'id',
            'outer_xml': 'outerXml',
            'shape_id': 'shapeId',
            'table_cell_id': 'tableCellId'
        }

        self._axis_id = axis_id
        self._chart_id = chart_id
        self._id = id
        self._outer_xml = outer_xml
        self._shape_id = shape_id
        self._table_cell_id = table_cell_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedTextContainer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shared.TextContainer of this SharedTextContainer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def axis_id(self):
        """Gets the axis_id of this SharedTextContainer.


        :return: The axis_id of this SharedTextContainer.
        :rtype: str
        """
        return self._axis_id

    @axis_id.setter
    def axis_id(self, axis_id):
        """Sets the axis_id of this SharedTextContainer.


        :param axis_id: The axis_id of this SharedTextContainer.
        :type axis_id: str
        """

        self._axis_id = axis_id

    @property
    def chart_id(self):
        """Gets the chart_id of this SharedTextContainer.


        :return: The chart_id of this SharedTextContainer.
        :rtype: str
        """
        return self._chart_id

    @chart_id.setter
    def chart_id(self, chart_id):
        """Sets the chart_id of this SharedTextContainer.


        :param chart_id: The chart_id of this SharedTextContainer.
        :type chart_id: str
        """

        self._chart_id = chart_id

    @property
    def id(self):
        """Gets the id of this SharedTextContainer.


        :return: The id of this SharedTextContainer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SharedTextContainer.


        :param id: The id of this SharedTextContainer.
        :type id: str
        """

        self._id = id

    @property
    def outer_xml(self):
        """Gets the outer_xml of this SharedTextContainer.


        :return: The outer_xml of this SharedTextContainer.
        :rtype: str
        """
        return self._outer_xml

    @outer_xml.setter
    def outer_xml(self, outer_xml):
        """Sets the outer_xml of this SharedTextContainer.


        :param outer_xml: The outer_xml of this SharedTextContainer.
        :type outer_xml: str
        """

        self._outer_xml = outer_xml

    @property
    def shape_id(self):
        """Gets the shape_id of this SharedTextContainer.


        :return: The shape_id of this SharedTextContainer.
        :rtype: str
        """
        return self._shape_id

    @shape_id.setter
    def shape_id(self, shape_id):
        """Sets the shape_id of this SharedTextContainer.


        :param shape_id: The shape_id of this SharedTextContainer.
        :type shape_id: str
        """

        self._shape_id = shape_id

    @property
    def table_cell_id(self):
        """Gets the table_cell_id of this SharedTextContainer.


        :return: The table_cell_id of this SharedTextContainer.
        :rtype: str
        """
        return self._table_cell_id

    @table_cell_id.setter
    def table_cell_id(self, table_cell_id):
        """Sets the table_cell_id of this SharedTextContainer.


        :param table_cell_id: The table_cell_id of this SharedTextContainer.
        :type table_cell_id: str
        """

        self._table_cell_id = table_cell_id
